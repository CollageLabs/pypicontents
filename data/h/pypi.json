{
    "h": {
        "cmdline": [],
        "modules": [
            "h",
            "h._async",
            "h._async.connection",
            "h._async.connection_pool",
            "h._backend",
            "h._backend.async_",
            "h._backend.sync",
            "h._session",
            "h._utils",
            "h.exceptions",
            "h.models"
        ],
        "version": "0.99"
    },
    "h-anomaly": {
        "cmdline": [],
        "modules": [
            "h_anomaly",
            "h_anomaly.bcluster",
            "h_anomaly.birch",
            "h_anomaly.driver"
        ],
        "version": "0.0.6"
    },
    "h-api": {
        "cmdline": [],
        "modules": [
            "h_api",
            "h_api.bulk_api",
            "h_api.bulk_api.command_batcher",
            "h_api.bulk_api.command_builder",
            "h_api.bulk_api.command_processor",
            "h_api.bulk_api.entry_point",
            "h_api.bulk_api.executor",
            "h_api.bulk_api.id_references",
            "h_api.bulk_api.model",
            "h_api.bulk_api.model.command",
            "h_api.bulk_api.model.config_body",
            "h_api.bulk_api.model.data_body",
            "h_api.bulk_api.model.report",
            "h_api.bulk_api.observer",
            "h_api.enums",
            "h_api.exceptions",
            "h_api.model",
            "h_api.model.base",
            "h_api.model.json_api",
            "h_api.schema"
        ],
        "version": "1.0.0"
    },
    "h-ello-worl-d": {
        "cmdline": [],
        "modules": [
            "h__ello__worl__d"
        ],
        "version": "1.1.1"
    },
    "h-matchers": {
        "cmdline": [],
        "modules": [
            "h_matchers",
            "h_matchers.decorator",
            "h_matchers.exception",
            "h_matchers.interface",
            "h_matchers.matcher",
            "h_matchers.matcher.anything",
            "h_matchers.matcher.collection",
            "h_matchers.matcher.collection._mixin",
            "h_matchers.matcher.collection._mixin.contains",
            "h_matchers.matcher.collection._mixin.item_matcher",
            "h_matchers.matcher.collection._mixin.size",
            "h_matchers.matcher.collection._mixin.type",
            "h_matchers.matcher.collection.containment",
            "h_matchers.matcher.combination",
            "h_matchers.matcher.core",
            "h_matchers.matcher.meta",
            "h_matchers.matcher.number",
            "h_matchers.matcher.object",
            "h_matchers.matcher.strings",
            "h_matchers.matcher.web",
            "h_matchers.matcher.web.request",
            "h_matchers.matcher.web.url",
            "h_matchers.matcher.web.url.core",
            "h_matchers.matcher.web.url.fluent"
        ],
        "version": "1.2.9"
    },
    "h-mcrllm": {
        "cmdline": [],
        "modules": [
            "H_MCRLLM",
            "H_MCRLLM.h_mcrllm",
            "H_MCRLLM.half_mcr",
            "H_MCRLLM.mcrllm",
            "H_MCRLLM.pointselector",
            "H_MCRLLM.preprocessing",
            "H_MCRLLM.select_with_PCA",
            "H_MCRLLM.use_full_MCR",
            "H_MCRLLM.use_half_MCR"
        ],
        "version": "0.0.24"
    },
    "h-modbus": {
        "cmdline": [],
        "modules": [
            "h_modbus"
        ],
        "version": "1.4"
    },
    "h-planefight": {
        "cmdline": [],
        "modules": [
            "planeFight",
            "setup"
        ],
        "version": "1.0.1"
    },
    "h-pyramid-sentry": {
        "cmdline": [],
        "modules": [
            "h_pyramid_sentry",
            "h_pyramid_sentry.event",
            "h_pyramid_sentry.event_filter",
            "h_pyramid_sentry.exceptions",
            "h_pyramid_sentry.filters",
            "h_pyramid_sentry.filters.pyramid",
            "h_pyramid_sentry.subscribers"
        ],
        "version": "1.2.1"
    },
    "h-vialib": {
        "cmdline": [],
        "modules": [
            "h_vialib",
            "h_vialib._flat_dict",
            "h_vialib._params",
            "h_vialib.configuration"
        ],
        "version": "1.0.1"
    },
    "h0x70n-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "h1": {
        "cmdline": [],
        "modules": [
            "h1",
            "h1.client",
            "h1.lazy_listing",
            "h1.models",
            "tests",
            "tests.test_client",
            "tests.test_lazy_listing",
            "tests.test_models"
        ],
        "version": "1.4.2"
    },
    "h1-hesc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "h10n": {
        "cmdline": [],
        "modules": [
            "h10n",
            "h10n.core",
            "h10n.helper",
            "h10n.helper.pluralize",
            "h10n.source",
            "h10n.tests",
            "h10n.tests.core_test",
            "h10n.tests.core_test.catalog_test",
            "h10n.tests.core_test.helper_namespace_test",
            "h10n.tests.core_test.locale_test",
            "h10n.tests.core_test.message_test",
            "h10n.tests.helper_test",
            "h10n.tests.helper_test.pluralize_test",
            "h10n.tests.source_test",
            "h10n.tests.source_test.scanner_test",
            "h10n.tests.source_test.yaml_source_test",
            "h10n.tests.translator_test",
            "h10n.tests.translator_test.message_test",
            "h10n.tests.translator_test.translator_test",
            "h10n.tests.util_test",
            "h10n.tests.util_test.exception_context_test",
            "h10n.tests.util_test.namespace_test",
            "h10n.translator",
            "h10n.util"
        ],
        "version": "0.1b1"
    },
    "h11": {
        "cmdline": [],
        "modules": [
            "h11",
            "h11._abnf",
            "h11._connection",
            "h11._events",
            "h11._headers",
            "h11._readers",
            "h11._receivebuffer",
            "h11._state",
            "h11._util",
            "h11._version",
            "h11._writers",
            "h11.tests",
            "h11.tests.helpers",
            "h11.tests.test_against_stdlib_http",
            "h11.tests.test_connection",
            "h11.tests.test_events",
            "h11.tests.test_headers",
            "h11.tests.test_helpers",
            "h11.tests.test_io",
            "h11.tests.test_receivebuffer",
            "h11.tests.test_state",
            "h11.tests.test_util"
        ],
        "version": "0.11.0"
    },
    "h1distributions": {
        "cmdline": [],
        "modules": [
            "distributions",
            "distributions.Binomialdistribution",
            "distributions.Gaussiandistribution",
            "distributions.Generaldistribution"
        ],
        "version": "0.2"
    },
    "h1s": {
        "cmdline": [],
        "modules": [
            "h1s",
            "h1s.addTaxa1s",
            "h1s.addTaxon1s",
            "h1s.bin",
            "h1s.checkData1s",
            "h1s.data",
            "h1s.h1s",
            "h1s.hms",
            "h1s.mergeOutput1s",
            "h1s.remove1s",
            "h1s.setup",
            "h1s.setup1s",
            "h1s.showTaxa1s"
        ],
        "version": "2.2.18"
    },
    "h1st": {
        "cmdline": [],
        "modules": [
            "h1st",
            "h1st.cli",
            "h1st.cli.project",
            "h1st.core",
            "h1st.core.context",
            "h1st.core.ensemble",
            "h1st.core.exception",
            "h1st.core.graph",
            "h1st.core.model",
            "h1st.core.node",
            "h1st.core.node_containable",
            "h1st.core.viz",
            "h1st.model_repository",
            "h1st.model_repository.model_repository",
            "h1st.model_repository.storage",
            "h1st.model_repository.storage.base",
            "h1st.model_repository.storage.local",
            "h1st.model_repository.storage.s3",
            "h1st.schema",
            "h1st.schema.schema_inferrer",
            "h1st.schema.schema_validation_result",
            "h1st.schema.schema_validator",
            "h1st.schema.testing",
            "h1st.schema.validation_schema",
            "h1st.schema.validators",
            "h1st.schema.validators.base",
            "h1st.schema.validators.field_validator",
            "h1st.schema.validators.list_validator",
            "h1st.schema.validators.numpy_validator",
            "h1st.schema.validators.pyarrow_validator",
            "h1st.schema.validators.type_helper",
            "h1st.schema.validators.union_validator"
        ],
        "version": "2020.8"
    },
    "h2": {
        "cmdline": [],
        "modules": [
            "h2",
            "h2.config",
            "h2.connection",
            "h2.errors",
            "h2.events",
            "h2.exceptions",
            "h2.frame_buffer",
            "h2.settings",
            "h2.stream",
            "h2.utilities",
            "h2.windows"
        ],
        "version": "4.0.0"
    },
    "h26x-extractor": {
        "cmdline": [],
        "modules": [
            "h26x_extractor",
            "h26x_extractor.h26x_parser",
            "h26x_extractor.nalutypes"
        ],
        "version": "0.4"
    },
    "h2bb2h": {
        "cmdline": [],
        "modules": [
            "h2bb2h",
            "h2bb2h.h2bb2h"
        ],
        "version": "0.2"
    },
    "h2client": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "h2lily": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "h2m": {
        "cmdline": [],
        "modules": [
            "h2m",
            "h2m.h2m"
        ],
        "version": "0.2.0"
    },
    "h2md": {
        "cmdline": [],
        "modules": [
            "h2md",
            "h2md.convert",
            "h2md.test_convert"
        ],
        "version": "1.0.3"
    },
    "h2o": {
        "cmdline": [],
        "modules": [
            "h2o",
            "h2o.assembly",
            "h2o.astfun",
            "h2o.auth",
            "h2o.automl",
            "h2o.automl._base",
            "h2o.automl._h2o_automl_output",
            "h2o.automl.autoh2o",
            "h2o.backend",
            "h2o.backend.cluster",
            "h2o.backend.connection",
            "h2o.backend.server",
            "h2o.base",
            "h2o.cross_validation",
            "h2o.demos",
            "h2o.display",
            "h2o.estimators",
            "h2o.estimators.aggregator",
            "h2o.estimators.coxph",
            "h2o.estimators.deeplearning",
            "h2o.estimators.estimator_base",
            "h2o.estimators.gam",
            "h2o.estimators.gbm",
            "h2o.estimators.generic",
            "h2o.estimators.glm",
            "h2o.estimators.glrm",
            "h2o.estimators.isolation_forest",
            "h2o.estimators.kmeans",
            "h2o.estimators.naive_bayes",
            "h2o.estimators.pca",
            "h2o.estimators.psvm",
            "h2o.estimators.random_forest",
            "h2o.estimators.stackedensemble",
            "h2o.estimators.svd",
            "h2o.estimators.targetencoder",
            "h2o.estimators.word2vec",
            "h2o.estimators.xgboost",
            "h2o.exceptions",
            "h2o.expr",
            "h2o.expr_optimizer",
            "h2o.frame",
            "h2o.grid",
            "h2o.grid.grid_search",
            "h2o.grid.metrics",
            "h2o.group_by",
            "h2o.h2o",
            "h2o.information_retrieval",
            "h2o.information_retrieval.tf_idf",
            "h2o.job",
            "h2o.model",
            "h2o.model.anomaly_detection",
            "h2o.model.autoencoder",
            "h2o.model.binomial",
            "h2o.model.clustering",
            "h2o.model.confusion_matrix",
            "h2o.model.coxph",
            "h2o.model.dim_reduction",
            "h2o.model.metrics_base",
            "h2o.model.model_base",
            "h2o.model.model_builder",
            "h2o.model.model_future",
            "h2o.model.multinomial",
            "h2o.model.ordinal",
            "h2o.model.regression",
            "h2o.model.segment_models",
            "h2o.model.word_embedding",
            "h2o.persist",
            "h2o.persist.persist",
            "h2o.pipeline",
            "h2o.pipeline.mojo_pipeline",
            "h2o.schemas",
            "h2o.schemas.error",
            "h2o.sklearn",
            "h2o.sklearn.wrapper",
            "h2o.targetencoder",
            "h2o.transforms",
            "h2o.transforms.decomposition",
            "h2o.transforms.preprocessing",
            "h2o.transforms.transform_base",
            "h2o.tree",
            "h2o.tree.tree",
            "h2o.two_dim_table",
            "h2o.utils",
            "h2o.utils.compatibility",
            "h2o.utils.config",
            "h2o.utils.csv",
            "h2o.utils.csv._common",
            "h2o.utils.csv._dispatch",
            "h2o.utils.csv._workarounds",
            "h2o.utils.csv.dialects",
            "h2o.utils.csv.readers",
            "h2o.utils.debugging",
            "h2o.utils.distributions",
            "h2o.utils.metaclass",
            "h2o.utils.model_utils",
            "h2o.utils.progressbar",
            "h2o.utils.shared_utils",
            "h2o.utils.typechecks"
        ],
        "version": "3.30.1.3"
    },
    "h2o-kernel": {
        "cmdline": [],
        "modules": [
            "h2o_kernel",
            "h2o_kernel.install",
            "h2o_kernel.kernel"
        ],
        "version": "1.0.3"
    },
    "h2o-pysparkling-2-1": {
        "cmdline": [],
        "modules": [
            "ai",
            "ai.h2o",
            "ai.h2o.sparkling",
            "ai.h2o.sparkling.ExternalBackendConf",
            "ai.h2o.sparkling.H2OConf",
            "ai.h2o.sparkling.H2OContext",
            "ai.h2o.sparkling.Initializer",
            "ai.h2o.sparkling.InternalBackendConf",
            "ai.h2o.sparkling.SharedBackendConf",
            "ai.h2o.sparkling.SharedBackendConfUtils",
            "ai.h2o.sparkling.VersionComponents",
            "ai.h2o.sparkling.ml",
            "ai.h2o.sparkling.ml.H2OStageBase",
            "ai.h2o.sparkling.ml.Utils",
            "ai.h2o.sparkling.ml.algos",
            "ai.h2o.sparkling.ml.algos.H2OAutoML",
            "ai.h2o.sparkling.ml.algos.H2ODRF",
            "ai.h2o.sparkling.ml.algos.H2ODeepLearning",
            "ai.h2o.sparkling.ml.algos.H2OGBM",
            "ai.h2o.sparkling.ml.algos.H2OGLM",
            "ai.h2o.sparkling.ml.algos.H2OGridSearch",
            "ai.h2o.sparkling.ml.algos.H2OKMeans",
            "ai.h2o.sparkling.ml.algos.H2OSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OTreeBasedSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OUnsupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OXGBoost",
            "ai.h2o.sparkling.ml.features",
            "ai.h2o.sparkling.ml.features.ColumnPruner",
            "ai.h2o.sparkling.ml.features.H2OTargetEncoder",
            "ai.h2o.sparkling.ml.models",
            "ai.h2o.sparkling.ml.models.H2OMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOModelBase",
            "ai.h2o.sparkling.ml.models.H2OMOJOPipelineModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOSettings",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderModel",
            "ai.h2o.sparkling.ml.params",
            "ai.h2o.sparkling.ml.params.H2OAlgoCommonParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAutoMLParams",
            "ai.h2o.sparkling.ml.params.H2OCommonParams",
            "ai.h2o.sparkling.ml.params.H2OCommonSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OCommonUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2ODRFParams",
            "ai.h2o.sparkling.ml.params.H2ODeepLearningParams",
            "ai.h2o.sparkling.ml.params.H2OGBMParams",
            "ai.h2o.sparkling.ml.params.H2OGLMParams",
            "ai.h2o.sparkling.ml.params.H2OGridSearchParams",
            "ai.h2o.sparkling.ml.params.H2OKMeansParams",
            "ai.h2o.sparkling.ml.params.H2OMOJOAlgoSharedParams",
            "ai.h2o.sparkling.ml.params.H2OSharedTreeParams",
            "ai.h2o.sparkling.ml.params.H2OSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTargetEncoderParams",
            "ai.h2o.sparkling.ml.params.H2OTreeBasedSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTypeConverters",
            "ai.h2o.sparkling.ml.params.H2OXGBoostParams",
            "ai.h2o.sparkling.ml.params.HasMonotoneConstraints",
            "ai.h2o.sparkling.ml.params.HasQuantileAlpha",
            "ai.h2o.sparkling.ml.params.HasStoppingCriteria",
            "ai.h2o.sparkling.ml.util",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReadable",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReader",
            "h2o",
            "h2o.assembly",
            "h2o.astfun",
            "h2o.auth",
            "h2o.automl",
            "h2o.automl._base",
            "h2o.automl._h2o_automl_output",
            "h2o.automl.autoh2o",
            "h2o.backend",
            "h2o.backend.cluster",
            "h2o.backend.connection",
            "h2o.backend.server",
            "h2o.base",
            "h2o.cross_validation",
            "h2o.demos",
            "h2o.display",
            "h2o.estimators",
            "h2o.estimators.aggregator",
            "h2o.estimators.coxph",
            "h2o.estimators.deeplearning",
            "h2o.estimators.estimator_base",
            "h2o.estimators.gam",
            "h2o.estimators.gbm",
            "h2o.estimators.generic",
            "h2o.estimators.glm",
            "h2o.estimators.glrm",
            "h2o.estimators.isolation_forest",
            "h2o.estimators.kmeans",
            "h2o.estimators.naive_bayes",
            "h2o.estimators.pca",
            "h2o.estimators.psvm",
            "h2o.estimators.random_forest",
            "h2o.estimators.stackedensemble",
            "h2o.estimators.svd",
            "h2o.estimators.targetencoder",
            "h2o.estimators.word2vec",
            "h2o.estimators.xgboost",
            "h2o.exceptions",
            "h2o.expr",
            "h2o.expr_optimizer",
            "h2o.frame",
            "h2o.grid",
            "h2o.grid.grid_search",
            "h2o.grid.metrics",
            "h2o.group_by",
            "h2o.h2o",
            "h2o.information_retrieval",
            "h2o.information_retrieval.tf_idf",
            "h2o.job",
            "h2o.model",
            "h2o.model.anomaly_detection",
            "h2o.model.autoencoder",
            "h2o.model.binomial",
            "h2o.model.clustering",
            "h2o.model.confusion_matrix",
            "h2o.model.coxph",
            "h2o.model.dim_reduction",
            "h2o.model.metrics_base",
            "h2o.model.model_base",
            "h2o.model.model_builder",
            "h2o.model.model_future",
            "h2o.model.multinomial",
            "h2o.model.ordinal",
            "h2o.model.regression",
            "h2o.model.segment_models",
            "h2o.model.word_embedding",
            "h2o.persist",
            "h2o.persist.persist",
            "h2o.pipeline",
            "h2o.pipeline.mojo_pipeline",
            "h2o.schemas",
            "h2o.schemas.error",
            "h2o.sklearn",
            "h2o.sklearn.wrapper",
            "h2o.targetencoder",
            "h2o.transforms",
            "h2o.transforms.decomposition",
            "h2o.transforms.preprocessing",
            "h2o.transforms.transform_base",
            "h2o.tree",
            "h2o.tree.tree",
            "h2o.two_dim_table",
            "h2o.utils",
            "h2o.utils.compatibility",
            "h2o.utils.config",
            "h2o.utils.csv",
            "h2o.utils.csv._common",
            "h2o.utils.csv._dispatch",
            "h2o.utils.csv._workarounds",
            "h2o.utils.csv.dialects",
            "h2o.utils.csv.readers",
            "h2o.utils.debugging",
            "h2o.utils.distributions",
            "h2o.utils.metaclass",
            "h2o.utils.model_utils",
            "h2o.utils.progressbar",
            "h2o.utils.shared_utils",
            "h2o.utils.typechecks",
            "pysparkling",
            "pysparkling.conf",
            "pysparkling.context",
            "pysparkling.initializer",
            "pysparkling.ml",
            "pysparkling.ml.algos",
            "pysparkling.ml.features",
            "pysparkling.ml.models",
            "sparkling_water"
        ],
        "version": "3.30.1.3-1"
    },
    "h2o-pysparkling-2-2": {
        "cmdline": [],
        "modules": [
            "ai",
            "ai.h2o",
            "ai.h2o.sparkling",
            "ai.h2o.sparkling.ExternalBackendConf",
            "ai.h2o.sparkling.H2OConf",
            "ai.h2o.sparkling.H2OContext",
            "ai.h2o.sparkling.Initializer",
            "ai.h2o.sparkling.InternalBackendConf",
            "ai.h2o.sparkling.SharedBackendConf",
            "ai.h2o.sparkling.SharedBackendConfUtils",
            "ai.h2o.sparkling.VersionComponents",
            "ai.h2o.sparkling.ml",
            "ai.h2o.sparkling.ml.H2OStageBase",
            "ai.h2o.sparkling.ml.Utils",
            "ai.h2o.sparkling.ml.algos",
            "ai.h2o.sparkling.ml.algos.H2OAutoML",
            "ai.h2o.sparkling.ml.algos.H2ODRF",
            "ai.h2o.sparkling.ml.algos.H2ODeepLearning",
            "ai.h2o.sparkling.ml.algos.H2OGBM",
            "ai.h2o.sparkling.ml.algos.H2OGLM",
            "ai.h2o.sparkling.ml.algos.H2OGridSearch",
            "ai.h2o.sparkling.ml.algos.H2OKMeans",
            "ai.h2o.sparkling.ml.algos.H2OSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OTreeBasedSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OUnsupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OXGBoost",
            "ai.h2o.sparkling.ml.features",
            "ai.h2o.sparkling.ml.features.ColumnPruner",
            "ai.h2o.sparkling.ml.features.H2OTargetEncoder",
            "ai.h2o.sparkling.ml.models",
            "ai.h2o.sparkling.ml.models.H2OMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOModelBase",
            "ai.h2o.sparkling.ml.models.H2OMOJOPipelineModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOSettings",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderModel",
            "ai.h2o.sparkling.ml.params",
            "ai.h2o.sparkling.ml.params.H2OAlgoCommonParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAutoMLParams",
            "ai.h2o.sparkling.ml.params.H2OCommonParams",
            "ai.h2o.sparkling.ml.params.H2OCommonSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OCommonUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2ODRFParams",
            "ai.h2o.sparkling.ml.params.H2ODeepLearningParams",
            "ai.h2o.sparkling.ml.params.H2OGBMParams",
            "ai.h2o.sparkling.ml.params.H2OGLMParams",
            "ai.h2o.sparkling.ml.params.H2OGridSearchParams",
            "ai.h2o.sparkling.ml.params.H2OKMeansParams",
            "ai.h2o.sparkling.ml.params.H2OMOJOAlgoSharedParams",
            "ai.h2o.sparkling.ml.params.H2OSharedTreeParams",
            "ai.h2o.sparkling.ml.params.H2OSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTargetEncoderParams",
            "ai.h2o.sparkling.ml.params.H2OTreeBasedSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTypeConverters",
            "ai.h2o.sparkling.ml.params.H2OXGBoostParams",
            "ai.h2o.sparkling.ml.params.HasMonotoneConstraints",
            "ai.h2o.sparkling.ml.params.HasQuantileAlpha",
            "ai.h2o.sparkling.ml.params.HasStoppingCriteria",
            "ai.h2o.sparkling.ml.util",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReadable",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReader",
            "h2o",
            "h2o.assembly",
            "h2o.astfun",
            "h2o.auth",
            "h2o.automl",
            "h2o.automl._base",
            "h2o.automl._h2o_automl_output",
            "h2o.automl.autoh2o",
            "h2o.backend",
            "h2o.backend.cluster",
            "h2o.backend.connection",
            "h2o.backend.server",
            "h2o.base",
            "h2o.cross_validation",
            "h2o.demos",
            "h2o.display",
            "h2o.estimators",
            "h2o.estimators.aggregator",
            "h2o.estimators.coxph",
            "h2o.estimators.deeplearning",
            "h2o.estimators.estimator_base",
            "h2o.estimators.gam",
            "h2o.estimators.gbm",
            "h2o.estimators.generic",
            "h2o.estimators.glm",
            "h2o.estimators.glrm",
            "h2o.estimators.isolation_forest",
            "h2o.estimators.kmeans",
            "h2o.estimators.naive_bayes",
            "h2o.estimators.pca",
            "h2o.estimators.psvm",
            "h2o.estimators.random_forest",
            "h2o.estimators.stackedensemble",
            "h2o.estimators.svd",
            "h2o.estimators.targetencoder",
            "h2o.estimators.word2vec",
            "h2o.estimators.xgboost",
            "h2o.exceptions",
            "h2o.expr",
            "h2o.expr_optimizer",
            "h2o.frame",
            "h2o.grid",
            "h2o.grid.grid_search",
            "h2o.grid.metrics",
            "h2o.group_by",
            "h2o.h2o",
            "h2o.information_retrieval",
            "h2o.information_retrieval.tf_idf",
            "h2o.job",
            "h2o.model",
            "h2o.model.anomaly_detection",
            "h2o.model.autoencoder",
            "h2o.model.binomial",
            "h2o.model.clustering",
            "h2o.model.confusion_matrix",
            "h2o.model.coxph",
            "h2o.model.dim_reduction",
            "h2o.model.metrics_base",
            "h2o.model.model_base",
            "h2o.model.model_builder",
            "h2o.model.model_future",
            "h2o.model.multinomial",
            "h2o.model.ordinal",
            "h2o.model.regression",
            "h2o.model.segment_models",
            "h2o.model.word_embedding",
            "h2o.persist",
            "h2o.persist.persist",
            "h2o.pipeline",
            "h2o.pipeline.mojo_pipeline",
            "h2o.schemas",
            "h2o.schemas.error",
            "h2o.sklearn",
            "h2o.sklearn.wrapper",
            "h2o.targetencoder",
            "h2o.transforms",
            "h2o.transforms.decomposition",
            "h2o.transforms.preprocessing",
            "h2o.transforms.transform_base",
            "h2o.tree",
            "h2o.tree.tree",
            "h2o.two_dim_table",
            "h2o.utils",
            "h2o.utils.compatibility",
            "h2o.utils.config",
            "h2o.utils.csv",
            "h2o.utils.csv._common",
            "h2o.utils.csv._dispatch",
            "h2o.utils.csv._workarounds",
            "h2o.utils.csv.dialects",
            "h2o.utils.csv.readers",
            "h2o.utils.debugging",
            "h2o.utils.distributions",
            "h2o.utils.metaclass",
            "h2o.utils.model_utils",
            "h2o.utils.progressbar",
            "h2o.utils.shared_utils",
            "h2o.utils.typechecks",
            "pysparkling",
            "pysparkling.conf",
            "pysparkling.context",
            "pysparkling.initializer",
            "pysparkling.ml",
            "pysparkling.ml.algos",
            "pysparkling.ml.features",
            "pysparkling.ml.models",
            "sparkling_water"
        ],
        "version": "3.30.1.3-1"
    },
    "h2o-pysparkling-2-3": {
        "cmdline": [],
        "modules": [
            "ai",
            "ai.h2o",
            "ai.h2o.sparkling",
            "ai.h2o.sparkling.ExternalBackendConf",
            "ai.h2o.sparkling.H2OConf",
            "ai.h2o.sparkling.H2OContext",
            "ai.h2o.sparkling.Initializer",
            "ai.h2o.sparkling.InternalBackendConf",
            "ai.h2o.sparkling.SharedBackendConf",
            "ai.h2o.sparkling.SharedBackendConfUtils",
            "ai.h2o.sparkling.VersionComponents",
            "ai.h2o.sparkling.ml",
            "ai.h2o.sparkling.ml.H2OStageBase",
            "ai.h2o.sparkling.ml.Utils",
            "ai.h2o.sparkling.ml.algos",
            "ai.h2o.sparkling.ml.algos.H2OAutoML",
            "ai.h2o.sparkling.ml.algos.H2ODRF",
            "ai.h2o.sparkling.ml.algos.H2ODeepLearning",
            "ai.h2o.sparkling.ml.algos.H2OGBM",
            "ai.h2o.sparkling.ml.algos.H2OGLM",
            "ai.h2o.sparkling.ml.algos.H2OGridSearch",
            "ai.h2o.sparkling.ml.algos.H2OKMeans",
            "ai.h2o.sparkling.ml.algos.H2OSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OTreeBasedSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OUnsupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OXGBoost",
            "ai.h2o.sparkling.ml.features",
            "ai.h2o.sparkling.ml.features.ColumnPruner",
            "ai.h2o.sparkling.ml.features.H2OTargetEncoder",
            "ai.h2o.sparkling.ml.models",
            "ai.h2o.sparkling.ml.models.H2OMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOModelBase",
            "ai.h2o.sparkling.ml.models.H2OMOJOPipelineModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOSettings",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderModel",
            "ai.h2o.sparkling.ml.params",
            "ai.h2o.sparkling.ml.params.H2OAlgoCommonParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAutoMLParams",
            "ai.h2o.sparkling.ml.params.H2OCommonParams",
            "ai.h2o.sparkling.ml.params.H2OCommonSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OCommonUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2ODRFParams",
            "ai.h2o.sparkling.ml.params.H2ODeepLearningParams",
            "ai.h2o.sparkling.ml.params.H2OGBMParams",
            "ai.h2o.sparkling.ml.params.H2OGLMParams",
            "ai.h2o.sparkling.ml.params.H2OGridSearchParams",
            "ai.h2o.sparkling.ml.params.H2OKMeansParams",
            "ai.h2o.sparkling.ml.params.H2OMOJOAlgoSharedParams",
            "ai.h2o.sparkling.ml.params.H2OSharedTreeParams",
            "ai.h2o.sparkling.ml.params.H2OSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTargetEncoderParams",
            "ai.h2o.sparkling.ml.params.H2OTreeBasedSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTypeConverters",
            "ai.h2o.sparkling.ml.params.H2OXGBoostParams",
            "ai.h2o.sparkling.ml.params.HasMonotoneConstraints",
            "ai.h2o.sparkling.ml.params.HasQuantileAlpha",
            "ai.h2o.sparkling.ml.params.HasStoppingCriteria",
            "ai.h2o.sparkling.ml.util",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReadable",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReader",
            "h2o",
            "h2o.assembly",
            "h2o.astfun",
            "h2o.auth",
            "h2o.automl",
            "h2o.automl._base",
            "h2o.automl._h2o_automl_output",
            "h2o.automl.autoh2o",
            "h2o.backend",
            "h2o.backend.cluster",
            "h2o.backend.connection",
            "h2o.backend.server",
            "h2o.base",
            "h2o.cross_validation",
            "h2o.demos",
            "h2o.display",
            "h2o.estimators",
            "h2o.estimators.aggregator",
            "h2o.estimators.coxph",
            "h2o.estimators.deeplearning",
            "h2o.estimators.estimator_base",
            "h2o.estimators.gam",
            "h2o.estimators.gbm",
            "h2o.estimators.generic",
            "h2o.estimators.glm",
            "h2o.estimators.glrm",
            "h2o.estimators.isolation_forest",
            "h2o.estimators.kmeans",
            "h2o.estimators.naive_bayes",
            "h2o.estimators.pca",
            "h2o.estimators.psvm",
            "h2o.estimators.random_forest",
            "h2o.estimators.stackedensemble",
            "h2o.estimators.svd",
            "h2o.estimators.targetencoder",
            "h2o.estimators.word2vec",
            "h2o.estimators.xgboost",
            "h2o.exceptions",
            "h2o.expr",
            "h2o.expr_optimizer",
            "h2o.frame",
            "h2o.grid",
            "h2o.grid.grid_search",
            "h2o.grid.metrics",
            "h2o.group_by",
            "h2o.h2o",
            "h2o.information_retrieval",
            "h2o.information_retrieval.tf_idf",
            "h2o.job",
            "h2o.model",
            "h2o.model.anomaly_detection",
            "h2o.model.autoencoder",
            "h2o.model.binomial",
            "h2o.model.clustering",
            "h2o.model.confusion_matrix",
            "h2o.model.coxph",
            "h2o.model.dim_reduction",
            "h2o.model.metrics_base",
            "h2o.model.model_base",
            "h2o.model.model_builder",
            "h2o.model.model_future",
            "h2o.model.multinomial",
            "h2o.model.ordinal",
            "h2o.model.regression",
            "h2o.model.segment_models",
            "h2o.model.word_embedding",
            "h2o.persist",
            "h2o.persist.persist",
            "h2o.pipeline",
            "h2o.pipeline.mojo_pipeline",
            "h2o.schemas",
            "h2o.schemas.error",
            "h2o.sklearn",
            "h2o.sklearn.wrapper",
            "h2o.targetencoder",
            "h2o.transforms",
            "h2o.transforms.decomposition",
            "h2o.transforms.preprocessing",
            "h2o.transforms.transform_base",
            "h2o.tree",
            "h2o.tree.tree",
            "h2o.two_dim_table",
            "h2o.utils",
            "h2o.utils.compatibility",
            "h2o.utils.config",
            "h2o.utils.csv",
            "h2o.utils.csv._common",
            "h2o.utils.csv._dispatch",
            "h2o.utils.csv._workarounds",
            "h2o.utils.csv.dialects",
            "h2o.utils.csv.readers",
            "h2o.utils.debugging",
            "h2o.utils.distributions",
            "h2o.utils.metaclass",
            "h2o.utils.model_utils",
            "h2o.utils.progressbar",
            "h2o.utils.shared_utils",
            "h2o.utils.typechecks",
            "pysparkling",
            "pysparkling.conf",
            "pysparkling.context",
            "pysparkling.initializer",
            "pysparkling.ml",
            "pysparkling.ml.algos",
            "pysparkling.ml.features",
            "pysparkling.ml.models",
            "sparkling_water"
        ],
        "version": "3.30.1.3-1"
    },
    "h2o-pysparkling-2-4": {
        "cmdline": [],
        "modules": [
            "ai",
            "ai.h2o",
            "ai.h2o.sparkling",
            "ai.h2o.sparkling.ExternalBackendConf",
            "ai.h2o.sparkling.H2OConf",
            "ai.h2o.sparkling.H2OContext",
            "ai.h2o.sparkling.Initializer",
            "ai.h2o.sparkling.InternalBackendConf",
            "ai.h2o.sparkling.SharedBackendConf",
            "ai.h2o.sparkling.SharedBackendConfUtils",
            "ai.h2o.sparkling.VersionComponents",
            "ai.h2o.sparkling.ml",
            "ai.h2o.sparkling.ml.H2OStageBase",
            "ai.h2o.sparkling.ml.Utils",
            "ai.h2o.sparkling.ml.algos",
            "ai.h2o.sparkling.ml.algos.H2OAutoML",
            "ai.h2o.sparkling.ml.algos.H2ODRF",
            "ai.h2o.sparkling.ml.algos.H2ODeepLearning",
            "ai.h2o.sparkling.ml.algos.H2OGBM",
            "ai.h2o.sparkling.ml.algos.H2OGLM",
            "ai.h2o.sparkling.ml.algos.H2OGridSearch",
            "ai.h2o.sparkling.ml.algos.H2OKMeans",
            "ai.h2o.sparkling.ml.algos.H2OSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OTreeBasedSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OUnsupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OXGBoost",
            "ai.h2o.sparkling.ml.features",
            "ai.h2o.sparkling.ml.features.ColumnPruner",
            "ai.h2o.sparkling.ml.features.H2OTargetEncoder",
            "ai.h2o.sparkling.ml.models",
            "ai.h2o.sparkling.ml.models.H2OMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOModelBase",
            "ai.h2o.sparkling.ml.models.H2OMOJOPipelineModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOSettings",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderModel",
            "ai.h2o.sparkling.ml.params",
            "ai.h2o.sparkling.ml.params.H2OAlgoCommonParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAutoMLParams",
            "ai.h2o.sparkling.ml.params.H2OCommonParams",
            "ai.h2o.sparkling.ml.params.H2OCommonSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OCommonUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2ODRFParams",
            "ai.h2o.sparkling.ml.params.H2ODeepLearningParams",
            "ai.h2o.sparkling.ml.params.H2OGBMParams",
            "ai.h2o.sparkling.ml.params.H2OGLMParams",
            "ai.h2o.sparkling.ml.params.H2OGridSearchParams",
            "ai.h2o.sparkling.ml.params.H2OKMeansParams",
            "ai.h2o.sparkling.ml.params.H2OMOJOAlgoSharedParams",
            "ai.h2o.sparkling.ml.params.H2OSharedTreeParams",
            "ai.h2o.sparkling.ml.params.H2OSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTargetEncoderParams",
            "ai.h2o.sparkling.ml.params.H2OTreeBasedSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTypeConverters",
            "ai.h2o.sparkling.ml.params.H2OXGBoostParams",
            "ai.h2o.sparkling.ml.params.HasMonotoneConstraints",
            "ai.h2o.sparkling.ml.params.HasQuantileAlpha",
            "ai.h2o.sparkling.ml.params.HasStoppingCriteria",
            "ai.h2o.sparkling.ml.util",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReadable",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReader",
            "h2o",
            "h2o.assembly",
            "h2o.astfun",
            "h2o.auth",
            "h2o.automl",
            "h2o.automl._base",
            "h2o.automl._h2o_automl_output",
            "h2o.automl.autoh2o",
            "h2o.backend",
            "h2o.backend.cluster",
            "h2o.backend.connection",
            "h2o.backend.server",
            "h2o.base",
            "h2o.cross_validation",
            "h2o.demos",
            "h2o.display",
            "h2o.estimators",
            "h2o.estimators.aggregator",
            "h2o.estimators.coxph",
            "h2o.estimators.deeplearning",
            "h2o.estimators.estimator_base",
            "h2o.estimators.gam",
            "h2o.estimators.gbm",
            "h2o.estimators.generic",
            "h2o.estimators.glm",
            "h2o.estimators.glrm",
            "h2o.estimators.isolation_forest",
            "h2o.estimators.kmeans",
            "h2o.estimators.naive_bayes",
            "h2o.estimators.pca",
            "h2o.estimators.psvm",
            "h2o.estimators.random_forest",
            "h2o.estimators.stackedensemble",
            "h2o.estimators.svd",
            "h2o.estimators.targetencoder",
            "h2o.estimators.word2vec",
            "h2o.estimators.xgboost",
            "h2o.exceptions",
            "h2o.expr",
            "h2o.expr_optimizer",
            "h2o.frame",
            "h2o.grid",
            "h2o.grid.grid_search",
            "h2o.grid.metrics",
            "h2o.group_by",
            "h2o.h2o",
            "h2o.information_retrieval",
            "h2o.information_retrieval.tf_idf",
            "h2o.job",
            "h2o.model",
            "h2o.model.anomaly_detection",
            "h2o.model.autoencoder",
            "h2o.model.binomial",
            "h2o.model.clustering",
            "h2o.model.confusion_matrix",
            "h2o.model.coxph",
            "h2o.model.dim_reduction",
            "h2o.model.metrics_base",
            "h2o.model.model_base",
            "h2o.model.model_builder",
            "h2o.model.model_future",
            "h2o.model.multinomial",
            "h2o.model.ordinal",
            "h2o.model.regression",
            "h2o.model.segment_models",
            "h2o.model.word_embedding",
            "h2o.persist",
            "h2o.persist.persist",
            "h2o.pipeline",
            "h2o.pipeline.mojo_pipeline",
            "h2o.schemas",
            "h2o.schemas.error",
            "h2o.sklearn",
            "h2o.sklearn.wrapper",
            "h2o.targetencoder",
            "h2o.transforms",
            "h2o.transforms.decomposition",
            "h2o.transforms.preprocessing",
            "h2o.transforms.transform_base",
            "h2o.tree",
            "h2o.tree.tree",
            "h2o.two_dim_table",
            "h2o.utils",
            "h2o.utils.compatibility",
            "h2o.utils.config",
            "h2o.utils.csv",
            "h2o.utils.csv._common",
            "h2o.utils.csv._dispatch",
            "h2o.utils.csv._workarounds",
            "h2o.utils.csv.dialects",
            "h2o.utils.csv.readers",
            "h2o.utils.debugging",
            "h2o.utils.distributions",
            "h2o.utils.metaclass",
            "h2o.utils.model_utils",
            "h2o.utils.progressbar",
            "h2o.utils.shared_utils",
            "h2o.utils.typechecks",
            "pysparkling",
            "pysparkling.conf",
            "pysparkling.context",
            "pysparkling.initializer",
            "pysparkling.ml",
            "pysparkling.ml.algos",
            "pysparkling.ml.features",
            "pysparkling.ml.models",
            "sparkling_water"
        ],
        "version": "3.30.1.3-1"
    },
    "h2o-pysparkling-3-0": {
        "cmdline": [],
        "modules": [
            "ai",
            "ai.h2o",
            "ai.h2o.sparkling",
            "ai.h2o.sparkling.ExternalBackendConf",
            "ai.h2o.sparkling.H2OConf",
            "ai.h2o.sparkling.H2OContext",
            "ai.h2o.sparkling.Initializer",
            "ai.h2o.sparkling.InternalBackendConf",
            "ai.h2o.sparkling.SharedBackendConf",
            "ai.h2o.sparkling.SharedBackendConfUtils",
            "ai.h2o.sparkling.VersionComponents",
            "ai.h2o.sparkling.ml",
            "ai.h2o.sparkling.ml.H2OStageBase",
            "ai.h2o.sparkling.ml.Utils",
            "ai.h2o.sparkling.ml.algos",
            "ai.h2o.sparkling.ml.algos.H2OAutoML",
            "ai.h2o.sparkling.ml.algos.H2ODRF",
            "ai.h2o.sparkling.ml.algos.H2ODeepLearning",
            "ai.h2o.sparkling.ml.algos.H2OGBM",
            "ai.h2o.sparkling.ml.algos.H2OGLM",
            "ai.h2o.sparkling.ml.algos.H2OGridSearch",
            "ai.h2o.sparkling.ml.algos.H2OKMeans",
            "ai.h2o.sparkling.ml.algos.H2OSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OTreeBasedSupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OUnsupervisedAlgoBase",
            "ai.h2o.sparkling.ml.algos.H2OXGBoost",
            "ai.h2o.sparkling.ml.features",
            "ai.h2o.sparkling.ml.features.ColumnPruner",
            "ai.h2o.sparkling.ml.features.H2OTargetEncoder",
            "ai.h2o.sparkling.ml.models",
            "ai.h2o.sparkling.ml.models.H2OMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOModelBase",
            "ai.h2o.sparkling.ml.models.H2OMOJOPipelineModel",
            "ai.h2o.sparkling.ml.models.H2OMOJOSettings",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderMOJOModel",
            "ai.h2o.sparkling.ml.models.H2OTargetEncoderModel",
            "ai.h2o.sparkling.ml.params",
            "ai.h2o.sparkling.ml.params.H2OAlgoCommonParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAlgoUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OAutoMLParams",
            "ai.h2o.sparkling.ml.params.H2OCommonParams",
            "ai.h2o.sparkling.ml.params.H2OCommonSupervisedParams",
            "ai.h2o.sparkling.ml.params.H2OCommonUnsupervisedParams",
            "ai.h2o.sparkling.ml.params.H2ODRFParams",
            "ai.h2o.sparkling.ml.params.H2ODeepLearningParams",
            "ai.h2o.sparkling.ml.params.H2OGBMParams",
            "ai.h2o.sparkling.ml.params.H2OGLMParams",
            "ai.h2o.sparkling.ml.params.H2OGridSearchParams",
            "ai.h2o.sparkling.ml.params.H2OKMeansParams",
            "ai.h2o.sparkling.ml.params.H2OMOJOAlgoSharedParams",
            "ai.h2o.sparkling.ml.params.H2OSharedTreeParams",
            "ai.h2o.sparkling.ml.params.H2OSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTargetEncoderParams",
            "ai.h2o.sparkling.ml.params.H2OTreeBasedSupervisedMOJOParams",
            "ai.h2o.sparkling.ml.params.H2OTypeConverters",
            "ai.h2o.sparkling.ml.params.H2OXGBoostParams",
            "ai.h2o.sparkling.ml.params.HasMonotoneConstraints",
            "ai.h2o.sparkling.ml.params.HasQuantileAlpha",
            "ai.h2o.sparkling.ml.params.HasStoppingCriteria",
            "ai.h2o.sparkling.ml.util",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReadable",
            "ai.h2o.sparkling.ml.util.H2OJavaMLReader",
            "h2o",
            "h2o.assembly",
            "h2o.astfun",
            "h2o.auth",
            "h2o.automl",
            "h2o.automl._base",
            "h2o.automl._h2o_automl_output",
            "h2o.automl.autoh2o",
            "h2o.backend",
            "h2o.backend.cluster",
            "h2o.backend.connection",
            "h2o.backend.server",
            "h2o.base",
            "h2o.cross_validation",
            "h2o.demos",
            "h2o.display",
            "h2o.estimators",
            "h2o.estimators.aggregator",
            "h2o.estimators.coxph",
            "h2o.estimators.deeplearning",
            "h2o.estimators.estimator_base",
            "h2o.estimators.gam",
            "h2o.estimators.gbm",
            "h2o.estimators.generic",
            "h2o.estimators.glm",
            "h2o.estimators.glrm",
            "h2o.estimators.isolation_forest",
            "h2o.estimators.kmeans",
            "h2o.estimators.naive_bayes",
            "h2o.estimators.pca",
            "h2o.estimators.psvm",
            "h2o.estimators.random_forest",
            "h2o.estimators.stackedensemble",
            "h2o.estimators.svd",
            "h2o.estimators.targetencoder",
            "h2o.estimators.word2vec",
            "h2o.estimators.xgboost",
            "h2o.exceptions",
            "h2o.expr",
            "h2o.expr_optimizer",
            "h2o.frame",
            "h2o.grid",
            "h2o.grid.grid_search",
            "h2o.grid.metrics",
            "h2o.group_by",
            "h2o.h2o",
            "h2o.information_retrieval",
            "h2o.information_retrieval.tf_idf",
            "h2o.job",
            "h2o.model",
            "h2o.model.anomaly_detection",
            "h2o.model.autoencoder",
            "h2o.model.binomial",
            "h2o.model.clustering",
            "h2o.model.confusion_matrix",
            "h2o.model.coxph",
            "h2o.model.dim_reduction",
            "h2o.model.metrics_base",
            "h2o.model.model_base",
            "h2o.model.model_builder",
            "h2o.model.model_future",
            "h2o.model.multinomial",
            "h2o.model.ordinal",
            "h2o.model.regression",
            "h2o.model.segment_models",
            "h2o.model.word_embedding",
            "h2o.persist",
            "h2o.persist.persist",
            "h2o.pipeline",
            "h2o.pipeline.mojo_pipeline",
            "h2o.schemas",
            "h2o.schemas.error",
            "h2o.sklearn",
            "h2o.sklearn.wrapper",
            "h2o.targetencoder",
            "h2o.transforms",
            "h2o.transforms.decomposition",
            "h2o.transforms.preprocessing",
            "h2o.transforms.transform_base",
            "h2o.tree",
            "h2o.tree.tree",
            "h2o.two_dim_table",
            "h2o.utils",
            "h2o.utils.compatibility",
            "h2o.utils.config",
            "h2o.utils.csv",
            "h2o.utils.csv._common",
            "h2o.utils.csv._dispatch",
            "h2o.utils.csv._workarounds",
            "h2o.utils.csv.dialects",
            "h2o.utils.csv.readers",
            "h2o.utils.debugging",
            "h2o.utils.distributions",
            "h2o.utils.metaclass",
            "h2o.utils.model_utils",
            "h2o.utils.progressbar",
            "h2o.utils.shared_utils",
            "h2o.utils.typechecks",
            "pysparkling",
            "pysparkling.conf",
            "pysparkling.context",
            "pysparkling.initializer",
            "pysparkling.ml",
            "pysparkling.ml.algos",
            "pysparkling.ml.features",
            "pysparkling.ml.models",
            "sparkling_water"
        ],
        "version": "3.30.1.3-1"
    },
    "h2o-q": {
        "cmdline": [],
        "modules": [
            "h2o_q",
            "h2o_q.autoreload",
            "h2o_q.core",
            "h2o_q.db",
            "h2o_q.graphics",
            "h2o_q.server",
            "h2o_q.test",
            "h2o_q.types",
            "h2o_q.ui"
        ],
        "version": "0.6.0"
    },
    "h2o4gpu": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.1"
    },
    "h2ohyperopt": {
        "cmdline": [],
        "modules": [
            "h2ohyperopt",
            "h2ohyperopt.dleoptimizer",
            "h2ohyperopt.examples",
            "h2ohyperopt.gbmoptimizer",
            "h2ohyperopt.glmoptimizer",
            "h2ohyperopt.modeldocker",
            "h2ohyperopt.modeloptimizer",
            "h2ohyperopt.tests",
            "h2ohyperopt.tests.data_gen",
            "h2ohyperopt.tests.test_DLEOpt",
            "h2ohyperopt.tests.test_GBMOpt",
            "h2ohyperopt.tests.test_GLMOpt",
            "h2ohyperopt.tests.test_ModelDockerOpt",
            "h2ohyperopt.tests.test_modelOpt_metrics",
            "h2ohyperopt.tests.test_modelOpt_parameters",
            "h2ohyperopt.tests.test_util",
            "h2ohyperopt.util"
        ],
        "version": "0.1"
    },
    "h2opysparkling23": {
        "cmdline": [],
        "modules": [
            "h2opysparkling23",
            "h2opysparkling23.cli"
        ],
        "version": "0.1.1"
    },
    "h2opysparkling24": {
        "cmdline": [],
        "modules": [
            "h2opysparkling24",
            "h2opysparkling24.cli"
        ],
        "version": "0.1.1"
    },
    "h2p": {
        "cmdline": [],
        "modules": [
            "h2p",
            "h2p._wkhtmltopdf",
            "h2p.h2p"
        ],
        "version": "0.1.0"
    },
    "h2printer": {
        "cmdline": [],
        "modules": [
            "h2printer"
        ],
        "version": "1.0.3"
    },
    "h2tinker": {
        "cmdline": [],
        "modules": [
            "h2tinker",
            "h2tinker.assrt",
            "h2tinker.frames",
            "h2tinker.h2_connection",
            "h2tinker.h2_plain_connection",
            "h2tinker.h2_tls_connection",
            "h2tinker.log"
        ],
        "version": "0.2"
    },
    "h2tools": {
        "cmdline": [],
        "modules": [
            "h2tools",
            "h2tools.cluster_tree",
            "h2tools.collections",
            "h2tools.collections.integral",
            "h2tools.collections.particles",
            "h2tools.collections.pcm",
            "h2tools.collections.setup",
            "h2tools.collections.triangular_surface",
            "h2tools.h2matrix",
            "h2tools.mcbh",
            "h2tools.minimal_data",
            "h2tools.mpi_misc",
            "h2tools.problem",
            "h2tools.setup"
        ],
        "version": "1.1.1"
    },
    "h3": {
        "cmdline": [],
        "modules": [
            "h3",
            "h3._cy",
            "h3._version",
            "h3.api",
            "h3.api._api_template",
            "h3.api.basic_int",
            "h3.api.basic_str",
            "h3.api.memview_int",
            "h3.api.numpy_int",
            "h3.unstable",
            "h3.unstable.v4",
            "h3.unstable.vect"
        ],
        "version": "3.7.0"
    },
    "h3cy": {
        "cmdline": [],
        "modules": [
            "h3cy"
        ],
        "version": "0.0.3"
    },
    "h3mlcore": {
        "cmdline": [],
        "modules": [
            "h3mlcore",
            "h3mlcore.attackers",
            "h3mlcore.io",
            "h3mlcore.io.BucketSeqLabelIter",
            "h3mlcore.io.PipelineWorkers",
            "h3mlcore.io.Preprocessor",
            "h3mlcore.libs",
            "h3mlcore.libs.H3Kernels",
            "h3mlcore.models",
            "h3mlcore.models.H3BaseActor",
            "h3mlcore.models.H3BayesNet",
            "h3mlcore.models.H3GPC",
            "h3mlcore.models.H3GPR",
            "h3mlcore.models.H3LightenedCNN",
            "h3mlcore.models.H3RNNSeqClassifier",
            "h3mlcore.models.H3TextClassifier",
            "h3mlcore.models.H3iSVC",
            "h3mlcore.utils",
            "h3mlcore.utils.BayesNetHelper",
            "h3mlcore.utils.DatasetHelper",
            "h3mlcore.utils.DatasetViewer",
            "h3mlcore.utils.H3Logging",
            "h3mlcore.utils.H3Plot",
            "h3mlcore.utils.MxHelper",
            "h3mlcore.utils.PlotHelper"
        ],
        "version": "0.82.dev0"
    },
    "h3ppy": {
        "cmdline": [],
        "modules": [
            "h3ppy",
            "h3ppy.h3ppy"
        ],
        "version": "0.2.9"
    },
    "h3py": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "h4-scripts": {
        "cmdline": [],
        "modules": [
            "h4_scripts",
            "h4_scripts.AuthorData",
            "h4_scripts.Config",
            "h4_scripts.Facebook",
            "h4_scripts.Gmail",
            "h4_scripts.GoogleSpreadsheetAPI",
            "h4_scripts.Logger",
            "h4_scripts.NetworkTest",
            "h4_scripts.PTT",
            "h4_scripts.Wikidot",
            "h4_scripts.common"
        ],
        "version": "0.9.1"
    },
    "h5": {
        "cmdline": [],
        "modules": [
            "h5"
        ],
        "version": "0.0.1"
    },
    "h5-to-json": {
        "cmdline": [
            "h5_to_json",
            "json_to_h5"
        ],
        "modules": [
            "h5_to_json",
            "h5_to_json.dict_to_h5",
            "h5_to_json.get_value",
            "h5_to_json.h5_to_dict",
            "h5_to_json.h5tojson",
            "h5_to_json.hdf5db",
            "h5_to_json.hdf5dtype",
            "h5_to_json.hierarchy",
            "h5_to_json.jsontoh5"
        ],
        "version": "0.1.5"
    },
    "h5-validator": {
        "cmdline": [],
        "modules": [
            "h5_validator",
            "h5_validator.cli",
            "h5_validator.matcher",
            "h5_validator.schema",
            "h5_validator.validator"
        ],
        "version": "2.0"
    },
    "h51": {
        "cmdline": [],
        "modules": [
            "h51",
            "h51.analyzers",
            "h51.analyzers.images",
            "h51.client",
            "h51.exceptions",
            "h51.pagination",
            "h51.resources",
            "h51.transforms",
            "h51.transforms.images"
        ],
        "version": "0.0.5"
    },
    "h5browse": {
        "cmdline": [],
        "modules": [
            "h5browse",
            "h5browse.datasetplot",
            "h5browse.dirreader",
            "h5browse.h5browse",
            "h5browse.hdfattributemodel",
            "h5browse.hdfattributewidget",
            "h5browse.hdfdatasetmodel",
            "h5browse.hdfdatasetwidget",
            "h5browse.hdftreemodel",
            "h5browse.hdftreewidget"
        ],
        "version": "0.2"
    },
    "h5cat": {
        "cmdline": [],
        "modules": [
            "h5cat"
        ],
        "version": "0.1"
    },
    "h5cli": {
        "cmdline": [],
        "modules": [
            "h5cli",
            "h5cli.cli",
            "h5cli.explorer"
        ],
        "version": "0.1.0"
    },
    "h5config": {
        "cmdline": [],
        "modules": [
            "h5config",
            "h5config.config",
            "h5config.log",
            "h5config.storage",
            "h5config.storage.hdf5",
            "h5config.storage.yaml",
            "h5config.test",
            "h5config.tools"
        ],
        "version": "0.3"
    },
    "h5cube": {
        "cmdline": [],
        "modules": [
            "h5cube",
            "h5cube.h5cube",
            "h5cube.test",
            "h5cube.test.h5cube_cmdline",
            "h5cube.test.h5cube_functions"
        ],
        "version": "0.3"
    },
    "h5cv": {
        "cmdline": [
            "h5cv"
        ],
        "modules": [
            "h5cv",
            "h5cv.commands",
            "h5cv.constants",
            "h5cv.core",
            "h5cv.generator",
            "h5cv.logger"
        ],
        "version": "0.1.1"
    },
    "h5df": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "h5dict": {
        "cmdline": [],
        "modules": [
            "h5dict",
            "h5dict.conversions",
            "h5dict.h5dict"
        ],
        "version": "0.1.1"
    },
    "h5dj": {
        "cmdline": [],
        "modules": [
            "h5dj",
            "h5dj.models",
            "h5dj.storage",
            "tests",
            "tests.h5dj_tests",
            "tests.h5dj_tests.tests",
            "tests.runtests",
            "tests.test_settings"
        ],
        "version": "0.1.0"
    },
    "h5features": {
        "cmdline": [],
        "modules": [
            "h5features",
            "h5features.convert2h5features",
            "h5features.converter",
            "h5features.data",
            "h5features.entry",
            "h5features.features",
            "h5features.h5features",
            "h5features.index",
            "h5features.items",
            "h5features.labels",
            "h5features.properties",
            "h5features.reader",
            "h5features.version",
            "h5features.writer"
        ],
        "version": "1.3.2"
    },
    "h5glance": {
        "cmdline": [],
        "modules": [
            "h5glance",
            "h5glance.completer",
            "h5glance.datatypes",
            "h5glance.generate",
            "h5glance.html_cli",
            "h5glance.terminal",
            "h5glance.utils"
        ],
        "version": "0.7"
    },
    "h5hep": {
        "cmdline": [],
        "modules": [
            "h5hep",
            "h5hep.read",
            "h5hep.write"
        ],
        "version": "0.9"
    },
    "h5imagegenerator": {
        "cmdline": [],
        "modules": [
            "h5imagegenerator",
            "h5imagegenerator.generator"
        ],
        "version": "1.2.9"
    },
    "h5io": {
        "cmdline": [],
        "modules": [
            "h5io",
            "h5io._h5io",
            "h5io._version",
            "h5io.tests",
            "h5io.tests.test_io"
        ],
        "version": "0.1.2"
    },
    "h5json": {
        "cmdline": [],
        "modules": [
            "h5json",
            "h5json.h5tojson",
            "h5json.h5tojson.h5tojson",
            "h5json.hdf5db",
            "h5json.hdf5dtype",
            "h5json.jsontoh5",
            "h5json.jsontoh5.jsontoh5"
        ],
        "version": "1.1.3"
    },
    "h5nav": {
        "cmdline": [],
        "modules": [
            "h5nav",
            "h5nav.cli",
            "h5nav.tree",
            "tests",
            "tests.context",
            "tests.test_cli"
        ],
        "version": "0.1.6"
    },
    "h5netcdf": {
        "cmdline": [],
        "modules": [
            "h5netcdf",
            "h5netcdf._chainmap",
            "h5netcdf.attrs",
            "h5netcdf.compat",
            "h5netcdf.core",
            "h5netcdf.dimensions",
            "h5netcdf.legacyapi",
            "h5netcdf.utils"
        ],
        "version": "0.8.1"
    },
    "h5pickle": {
        "cmdline": [],
        "modules": [
            "h5pickle"
        ],
        "version": "0.4.2"
    },
    "h5pom": {
        "cmdline": [],
        "modules": [
            "h5pom",
            "h5pom.core",
            "h5pom.descriptors"
        ],
        "version": "0.1"
    },
    "h5preserve": {
        "cmdline": [],
        "modules": [
            "h5preserve",
            "h5preserve._utils",
            "h5preserve._version",
            "h5preserve.additional_registries"
        ],
        "version": "0.17.2"
    },
    "h5py": {
        "cmdline": [],
        "modules": [
            "h5py",
            "h5py._hl",
            "h5py._hl.attrs",
            "h5py._hl.base",
            "h5py._hl.compat",
            "h5py._hl.dataset",
            "h5py._hl.datatype",
            "h5py._hl.dims",
            "h5py._hl.files",
            "h5py._hl.filters",
            "h5py._hl.group",
            "h5py._hl.selections",
            "h5py._hl.selections2",
            "h5py._hl.vds",
            "h5py.h5py_warnings",
            "h5py.highlevel",
            "h5py.ipy_completer",
            "h5py.tests",
            "h5py.tests.common",
            "h5py.tests.test_attribute_create",
            "h5py.tests.test_attrs",
            "h5py.tests.test_attrs_data",
            "h5py.tests.test_base",
            "h5py.tests.test_completions",
            "h5py.tests.test_dataset",
            "h5py.tests.test_dataset_getitem",
            "h5py.tests.test_dataset_swmr",
            "h5py.tests.test_datatype",
            "h5py.tests.test_deprecation",
            "h5py.tests.test_dimension_scales",
            "h5py.tests.test_dims_dimensionproxy",
            "h5py.tests.test_dtype",
            "h5py.tests.test_file",
            "h5py.tests.test_file2",
            "h5py.tests.test_file_image",
            "h5py.tests.test_filters",
            "h5py.tests.test_group",
            "h5py.tests.test_h5",
            "h5py.tests.test_h5d_direct_chunk",
            "h5py.tests.test_h5f",
            "h5py.tests.test_h5p",
            "h5py.tests.test_h5pl",
            "h5py.tests.test_h5t",
            "h5py.tests.test_objects",
            "h5py.tests.test_selections",
            "h5py.tests.test_slicing",
            "h5py.tests.test_threads",
            "h5py.tests.test_vds",
            "h5py.tests.test_vds.test_highlevel_vds",
            "h5py.tests.test_vds.test_lowlevel_vds",
            "h5py.tests.test_vds.test_virtual_source",
            "h5py.version"
        ],
        "version": "2.10.0"
    },
    "h5py-cache": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "h5py-like": {
        "cmdline": [],
        "modules": [
            "h5py_like",
            "h5py_like.attributes",
            "h5py_like.base",
            "h5py_like.common",
            "h5py_like.dataset",
            "h5py_like.file",
            "h5py_like.group",
            "h5py_like.shape_utils",
            "h5py_like.test_utils",
            "h5py_like.test_utils.common",
            "h5py_like.test_utils.dataset",
            "h5py_like.test_utils.file",
            "h5py_like.test_utils.group",
            "h5py_like.version"
        ],
        "version": "0.6.0"
    },
    "h5py-wrapper": {
        "cmdline": [
            "convert_h5file"
        ],
        "modules": [
            "h5py_wrapper",
            "h5py_wrapper.lib",
            "h5py_wrapper.wrapper",
            "tests",
            "tests.test_wrapper"
        ],
        "version": "1.1.0"
    },
    "h5pyd": {
        "cmdline": [],
        "modules": [
            "h5pyd",
            "h5pyd._apps",
            "h5pyd._apps.chunkiter",
            "h5pyd._apps.config",
            "h5pyd._apps.hsacl",
            "h5pyd._apps.hsconfigure",
            "h5pyd._apps.hscopy",
            "h5pyd._apps.hsdel",
            "h5pyd._apps.hsdiff",
            "h5pyd._apps.hsget",
            "h5pyd._apps.hsinfo",
            "h5pyd._apps.hsload",
            "h5pyd._apps.hsls",
            "h5pyd._apps.hsmv",
            "h5pyd._apps.hstouch",
            "h5pyd._apps.utillib",
            "h5pyd._hl",
            "h5pyd._hl.attrs",
            "h5pyd._hl.base",
            "h5pyd._hl.config",
            "h5pyd._hl.dataset",
            "h5pyd._hl.datatype",
            "h5pyd._hl.dims",
            "h5pyd._hl.files",
            "h5pyd._hl.filters",
            "h5pyd._hl.folders",
            "h5pyd._hl.group",
            "h5pyd._hl.h5type",
            "h5pyd._hl.h5type_test",
            "h5pyd._hl.httpconn",
            "h5pyd._hl.objectid",
            "h5pyd._hl.openid",
            "h5pyd._hl.selections",
            "h5pyd._hl.serverinfo",
            "h5pyd._hl.table",
            "h5pyd.config",
            "h5pyd.version"
        ],
        "version": "0.8.0"
    },
    "h5pyp": {
        "cmdline": [
            "h5pyp_dump",
            "test_hdf5_parallel"
        ],
        "modules": [
            "h5pyp"
        ],
        "version": "1.10.6.0a1"
    },
    "h5pyviewer": {
        "cmdline": [],
        "modules": [
            "h5pyViewer",
            "h5pyViewer.FrmProcRoiStat",
            "h5pyViewer.FrmPyFAI",
            "h5pyViewer.GLCanvasImg",
            "h5pyViewer.h5pyViewer",
            "h5pyViewer.hdfAttrib",
            "h5pyViewer.hdfGrid",
            "h5pyViewer.hdfImage",
            "h5pyViewer.hdfImageGL",
            "h5pyViewer.hdfTree",
            "h5pyViewer.userSample",
            "h5pyViewer.utilities"
        ],
        "version": "0.0.1.6"
    },
    "h5pyvol": {
        "cmdline": [],
        "modules": [
            "h5pyvol"
        ],
        "version": "1.0.dev0"
    },
    "h5scripting": {
        "cmdline": [],
        "modules": [
            "h5scripting",
            "h5scripting.__version__",
            "h5scripting.example",
            "h5scripting.h5scripting",
            "h5scripting.tests"
        ],
        "version": "0.1.0"
    },
    "h5serv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "h5sh": {
        "cmdline": [],
        "modules": [
            "h5sh",
            "h5sh.commands",
            "h5sh.commands.base",
            "h5sh.commands.miniargparse",
            "h5sh.commands.navigation",
            "h5sh.commands.query",
            "h5sh.commands.registry",
            "h5sh.commands.system",
            "h5sh.console",
            "h5sh.scripts",
            "h5sh.scripts.main",
            "h5sh.state",
            "h5sh.styles",
            "h5sh.utils"
        ],
        "version": "0.1.1"
    },
    "h5sparse": {
        "cmdline": [],
        "modules": [
            "h5sparse",
            "h5sparse.h5sparse",
            "h5sparse.tests"
        ],
        "version": "0.1.0"
    },
    "h5sparse-tensor": {
        "cmdline": [],
        "modules": [
            "h5sparse",
            "h5sparse.h5sparse",
            "h5sparse.tests"
        ],
        "version": "0.2.2"
    },
    "h5traj": {
        "cmdline": [],
        "modules": [
            "h5traj",
            "h5traj._version",
            "h5traj.trajectory"
        ],
        "version": "0.0.1"
    },
    "h5tree": {
        "cmdline": [
            "h5tree"
        ],
        "modules": [],
        "version": "1.0"
    },
    "h5wqueue": {
        "cmdline": [],
        "modules": [
            "h5wqueue",
            "h5wqueue.writers"
        ],
        "version": "0.1"
    },
    "h5writer": {
        "cmdline": [],
        "modules": [
            "h5writer",
            "h5writer.h5writer",
            "h5writer.h5writer_mpi_sw",
            "h5writer.h5writer_single",
            "h5writer.log"
        ],
        "version": "0.6.0"
    },
    "h5xplorer": {
        "cmdline": [],
        "modules": [
            "h5xplorer",
            "h5xplorer.__version__",
            "h5xplorer.default_menu",
            "h5xplorer.h5xplorer",
            "h5xplorer.menu_plot",
            "h5xplorer.menu_tools",
            "h5xplorer.standarddialogs"
        ],
        "version": "0.1.0"
    },
    "h8mail": {
        "cmdline": [],
        "modules": [
            "h8mail",
            "h8mail.utils",
            "h8mail.utils.breachcompilation",
            "h8mail.utils.chase",
            "h8mail.utils.classes",
            "h8mail.utils.colors",
            "h8mail.utils.gen_config",
            "h8mail.utils.helpers",
            "h8mail.utils.intelx",
            "h8mail.utils.intelx_helpers",
            "h8mail.utils.localgzipsearch",
            "h8mail.utils.localsearch",
            "h8mail.utils.print_results",
            "h8mail.utils.run",
            "h8mail.utils.summary",
            "h8mail.utils.url",
            "h8mail.utils.version",
            "tests",
            "tests.test_h8mail"
        ],
        "version": "2.5.4"
    },
    "h9": {
        "cmdline": [],
        "modules": [
            "h9"
        ],
        "version": "0.0.0"
    },
    "ha-alpr": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "ha-beoplay": {
        "cmdline": [],
        "modules": [
            "beoplay"
        ],
        "version": "0.0.6"
    },
    "ha-distributions": {
        "cmdline": [],
        "modules": [
            "ha_distributions",
            "ha_distributions.Binomialdistribution",
            "ha_distributions.Gaussiandistribution",
            "ha_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "ha-etcd3": {
        "cmdline": [],
        "modules": [
            "etcd3ctl"
        ],
        "version": "1.0.2"
    },
    "ha-ffmpeg": {
        "cmdline": [],
        "modules": [
            "haffmpeg",
            "haffmpeg.camera",
            "haffmpeg.core",
            "haffmpeg.sensor",
            "haffmpeg.tools"
        ],
        "version": "2.0"
    },
    "ha-flam": {
        "cmdline": [],
        "modules": [
            "FLAM.FlamGUI",
            "FLAM.QTCSS",
            "FLAM.dbBase",
            "FLAM.dbQueries",
            "FLAM.folderStructure",
            "FLAM.installer"
        ],
        "version": "0.1.3"
    },
    "ha-jaydebeapi": {
        "cmdline": [],
        "modules": [
            "ha_jaydebeapi"
        ],
        "version": "2.1.7"
    },
    "ha-jpype1": {
        "cmdline": [],
        "modules": [
            "jpype",
            "jpype.JClassUtil",
            "jpype._classpath",
            "jpype._core",
            "jpype._cygwin",
            "jpype._darwin",
            "jpype._gui",
            "jpype._jarray",
            "jpype._jboxed",
            "jpype._jclass",
            "jpype._jcollection",
            "jpype._jexception",
            "jpype._jio",
            "jpype._jobject",
            "jpype._jpackage",
            "jpype._jproxy",
            "jpype._jvmfinder",
            "jpype._jwrapper",
            "jpype._linux",
            "jpype._properties",
            "jpype._pykeywords",
            "jpype._refdaemon",
            "jpype._windows",
            "jpype.awt",
            "jpype.awt.event",
            "jpype.awt.event.WindowAdapter",
            "jpype.imports",
            "jpype.nio",
            "jpype.reflect",
            "jpypex",
            "jpypex.swing",
            "jpypex.swing.AbstractAction",
            "jpypex.swing.pyutils"
        ],
        "version": "2.6.6"
    },
    "ha-philipsjs": {
        "cmdline": [],
        "modules": [
            "haphilipsjs"
        ],
        "version": "0.0.8"
    },
    "ha-philipsjs-rik": {
        "cmdline": [],
        "modules": [
            "haphilipsjs"
        ],
        "version": "0.0.91"
    },
    "ha-release": {
        "cmdline": [
            "ha-release"
        ],
        "modules": [],
        "version": "0.6.7"
    },
    "ha12-ha123": {
        "cmdline": [],
        "modules": [
            "ha12-ha123"
        ],
        "version": "1.0.1"
    },
    "ha7000d": {
        "cmdline": [],
        "modules": [
            "ha7000d",
            "ha7000d.common",
            "ha7000d.ha7062d",
            "ha7000d.version"
        ],
        "version": "0.1.5"
    },
    "haaaa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haagenti-gsma": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haags": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haalchemy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haanna": {
        "cmdline": [],
        "modules": [
            "haanna",
            "haanna.haanna"
        ],
        "version": "0.15.0"
    },
    "haar-cascade-nms": {
        "cmdline": [],
        "modules": [
            "haarcascade",
            "haarcascade.version"
        ],
        "version": "1.0.0"
    },
    "haas": {
        "cmdline": [],
        "modules": [
            "haas",
            "haas._version",
            "haas.error_holder",
            "haas.exceptions",
            "haas.haas_application",
            "haas.loader",
            "haas.main",
            "haas.module_import_error",
            "haas.plugin_context",
            "haas.plugin_manager",
            "haas.plugins",
            "haas.plugins.base_hook_plugin",
            "haas.plugins.coverage",
            "haas.plugins.discoverer",
            "haas.plugins.i_discoverer_plugin",
            "haas.plugins.i_hook_plugin",
            "haas.plugins.i_result_handler_plugin",
            "haas.plugins.i_runner_plugin",
            "haas.plugins.parallel_runner",
            "haas.plugins.result_handler",
            "haas.plugins.runner",
            "haas.plugins.tests",
            "haas.plugins.tests.test_coverage",
            "haas.plugins.tests.test_discoverer",
            "haas.plugins.tests.test_result_handlers",
            "haas.result",
            "haas.suite",
            "haas.testing",
            "haas.tests",
            "haas.tests._test_case_data",
            "haas.tests._test_cases",
            "haas.tests.builder",
            "haas.tests.fixtures",
            "haas.tests.test_builder",
            "haas.tests.test_error_holder",
            "haas.tests.test_haas_application",
            "haas.tests.test_loader",
            "haas.tests.test_parallel_runner",
            "haas.tests.test_plugin_context",
            "haas.tests.test_plugin_manager",
            "haas.tests.test_result",
            "haas.tests.test_runner",
            "haas.tests.test_suite",
            "haas.tests.test_utils",
            "haas.utils"
        ],
        "version": "0.8.0"
    },
    "haas-proxy": {
        "cmdline": [],
        "modules": [
            "haas_proxy",
            "haas_proxy.balancer",
            "haas_proxy.constants",
            "haas_proxy.log",
            "haas_proxy.proxy",
            "haas_proxy.twisted.plugins.haas_proxy_plugin",
            "haas_proxy.utils"
        ],
        "version": "1.9"
    },
    "haasomeapi": {
        "cmdline": [],
        "modules": [
            "haasomeapi",
            "haasomeapi.HaasomeClient",
            "haasomeapi.apis",
            "haasomeapi.apis.AccountDataApi",
            "haasomeapi.apis.AdvancedOrderApi",
            "haasomeapi.apis.ApiBase",
            "haasomeapi.apis.CustomBotApi",
            "haasomeapi.apis.MarketDataApi",
            "haasomeapi.apis.TradeApi",
            "haasomeapi.apis.TradeBotApi",
            "haasomeapi.dataobjects",
            "haasomeapi.dataobjects.accountdata",
            "haasomeapi.dataobjects.accountdata.AccountInformation",
            "haasomeapi.dataobjects.accountdata.BaseOrder",
            "haasomeapi.dataobjects.accountdata.OrderContainer",
            "haasomeapi.dataobjects.accountdata.Position",
            "haasomeapi.dataobjects.accountdata.SoftwareInformation",
            "haasomeapi.dataobjects.accountdata.Wallet",
            "haasomeapi.dataobjects.advancedorders",
            "haasomeapi.dataobjects.advancedorders.AdvancedOrderBase",
            "haasomeapi.dataobjects.advancedorders.StopTakeProfitOrder",
            "haasomeapi.dataobjects.advancedorders.TrailingStop",
            "haasomeapi.dataobjects.custombots",
            "haasomeapi.dataobjects.custombots.AccumulationBot",
            "haasomeapi.dataobjects.custombots.AdvancedIndexBot",
            "haasomeapi.dataobjects.custombots.BaseCustomBot",
            "haasomeapi.dataobjects.custombots.CryptoIndexBot",
            "haasomeapi.dataobjects.custombots.EmailBot",
            "haasomeapi.dataobjects.custombots.FlashCrashBot",
            "haasomeapi.dataobjects.custombots.InterExchangeArbitrageBot",
            "haasomeapi.dataobjects.custombots.MadHatterBot",
            "haasomeapi.dataobjects.custombots.MarketMakingBot",
            "haasomeapi.dataobjects.custombots.OrderBot",
            "haasomeapi.dataobjects.custombots.ScalperBot",
            "haasomeapi.dataobjects.custombots.ScriptBot",
            "haasomeapi.dataobjects.custombots.ZoneRecoveryBot",
            "haasomeapi.dataobjects.custombots.dataobjects",
            "haasomeapi.dataobjects.custombots.dataobjects.AdvancedIndexBotIndex",
            "haasomeapi.dataobjects.custombots.dataobjects.AdvancedIndexBotIndexSaveObject",
            "haasomeapi.dataobjects.custombots.dataobjects.CryptoIndexBotIndex",
            "haasomeapi.dataobjects.custombots.dataobjects.CryptoIndexBotIndexResult",
            "haasomeapi.dataobjects.custombots.dataobjects.CryptoIndexBotIndexSaveObject",
            "haasomeapi.dataobjects.custombots.dataobjects.EmailBotAction",
            "haasomeapi.dataobjects.custombots.dataobjects.EnumBotActionMessage",
            "haasomeapi.dataobjects.custombots.dataobjects.FlashCrashBotSaveObject",
            "haasomeapi.dataobjects.custombots.dataobjects.Indicator",
            "haasomeapi.dataobjects.custombots.dataobjects.IndicatorOption",
            "haasomeapi.dataobjects.custombots.dataobjects.Insurance",
            "haasomeapi.dataobjects.custombots.dataobjects.MarketMakingBotSlot",
            "haasomeapi.dataobjects.custombots.dataobjects.MarketMakingBotSlotObject",
            "haasomeapi.dataobjects.custombots.dataobjects.MessageProfile",
            "haasomeapi.dataobjects.custombots.dataobjects.OpenRecoveryPositionDefinition",
            "haasomeapi.dataobjects.custombots.dataobjects.OrderBotPreOrder",
            "haasomeapi.dataobjects.custombots.dataobjects.Safety",
            "haasomeapi.dataobjects.custombots.dataobjects.ScriptBotOrder",
            "haasomeapi.dataobjects.custombots.dataobjects.SlotObject",
            "haasomeapi.dataobjects.custombots.dataobjects.ZoneDefinition",
            "haasomeapi.dataobjects.marketdata",
            "haasomeapi.dataobjects.marketdata.Market",
            "haasomeapi.dataobjects.marketdata.Orderbook",
            "haasomeapi.dataobjects.marketdata.OrderbookRecord",
            "haasomeapi.dataobjects.marketdata.PriceTick",
            "haasomeapi.dataobjects.marketdata.Trade",
            "haasomeapi.dataobjects.marketdata.TradeContainer",
            "haasomeapi.dataobjects.tradebot",
            "haasomeapi.dataobjects.tradebot.TradeBot",
            "haasomeapi.dataobjects.tradebot.TradeBotSignals",
            "haasomeapi.dataobjects.util",
            "haasomeapi.dataobjects.util.HaasomeClientResponse",
            "haasomeapi.enums",
            "haasomeapi.enums.EnumAccumulationBotStopType",
            "haasomeapi.enums.EnumAdvancedIndexBotRebalanceType",
            "haasomeapi.enums.EnumBotTradeAmount",
            "haasomeapi.enums.EnumBotTradeResult",
            "haasomeapi.enums.EnumBotType",
            "haasomeapi.enums.EnumCoinPosition",
            "haasomeapi.enums.EnumCurrencyType",
            "haasomeapi.enums.EnumCustomBotType",
            "haasomeapi.enums.EnumErrorCode",
            "haasomeapi.enums.EnumFlashSpreadOptions",
            "haasomeapi.enums.EnumFundMovingPosition",
            "haasomeapi.enums.EnumFundPosition",
            "haasomeapi.enums.EnumIndicator",
            "haasomeapi.enums.EnumInsurance",
            "haasomeapi.enums.EnumLimitOrderPriceType",
            "haasomeapi.enums.EnumMadHatterIndicators",
            "haasomeapi.enums.EnumMadHatterSafeties",
            "haasomeapi.enums.EnumOrderBotTriggerType",
            "haasomeapi.enums.EnumOrderStatus",
            "haasomeapi.enums.EnumOrderType",
            "haasomeapi.enums.EnumPlatform",
            "haasomeapi.enums.EnumPriceChartType",
            "haasomeapi.enums.EnumPriceSource",
            "haasomeapi.enums.EnumSafety",
            "haasomeapi.enums.EnumSafetyPositionSignal",
            "haasomeapi.enums.EnumSlotType",
            "haasomeapi.enums.EnumSoftwareLicence",
            "haasomeapi.enums.EnumTradeType"
        ],
        "version": "3.2.3.6"
    },
    "hab": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "habakkuk": {
        "cmdline": [
            "habakkuk"
        ],
        "modules": [
            "habakkuk",
            "habakkuk.config_ivy_bridge",
            "habakkuk.dag",
            "habakkuk.dag_node",
            "habakkuk.make_dag",
            "habakkuk.parse2003"
        ],
        "version": "0.1.0"
    },
    "habanero": {
        "cmdline": [],
        "modules": [
            "habanero",
            "habanero.cn",
            "habanero.cn.cn",
            "habanero.cn.constants",
            "habanero.cn.styles",
            "habanero.cn_formats",
            "habanero.cnrequest",
            "habanero.counts",
            "habanero.counts.counts",
            "habanero.crossref",
            "habanero.crossref.crossref",
            "habanero.crossref.filters",
            "habanero.exceptions",
            "habanero.filterhandler",
            "habanero.habanero_utils",
            "habanero.noworks",
            "habanero.request",
            "habanero.request_class",
            "habanero.response"
        ],
        "version": "0.7.4"
    },
    "habapp": {
        "cmdline": [],
        "modules": [
            "HABApp",
            "HABApp.__do_setup__",
            "HABApp.__version__",
            "HABApp.config",
            "HABApp.config._conf_location",
            "HABApp.config._conf_mqtt",
            "HABApp.config._conf_openhab",
            "HABApp.config.config",
            "HABApp.config.config_loader",
            "HABApp.config.default_logfile",
            "HABApp.core",
            "HABApp.core.EventBus",
            "HABApp.core.Items",
            "HABApp.core.const",
            "HABApp.core.const.const",
            "HABApp.core.const.json",
            "HABApp.core.const.loop",
            "HABApp.core.const.topics",
            "HABApp.core.event_bus_listener",
            "HABApp.core.events",
            "HABApp.core.events.events",
            "HABApp.core.events.habapp_events",
            "HABApp.core.items",
            "HABApp.core.items.base_item",
            "HABApp.core.items.base_item_times",
            "HABApp.core.items.base_item_watch",
            "HABApp.core.items.base_valueitem",
            "HABApp.core.items.item",
            "HABApp.core.items.item_aggregation",
            "HABApp.core.items.item_color",
            "HABApp.core.lib",
            "HABApp.core.lib.funcs",
            "HABApp.core.lib.handler",
            "HABApp.core.lib.pending_future",
            "HABApp.core.logger",
            "HABApp.core.wrappedfunction",
            "HABApp.core.wrapper",
            "HABApp.mqtt",
            "HABApp.mqtt.events",
            "HABApp.mqtt.events.mqtt_events",
            "HABApp.mqtt.items",
            "HABApp.mqtt.items.mqtt_item",
            "HABApp.mqtt.mqtt_connection",
            "HABApp.mqtt.mqtt_interface",
            "HABApp.openhab",
            "HABApp.openhab.connection_handler",
            "HABApp.openhab.connection_handler.func_async",
            "HABApp.openhab.connection_handler.func_sync",
            "HABApp.openhab.connection_handler.http_connection",
            "HABApp.openhab.connection_handler.http_connection_waiter",
            "HABApp.openhab.connection_logic",
            "HABApp.openhab.connection_logic._plugin",
            "HABApp.openhab.connection_logic.connection",
            "HABApp.openhab.connection_logic.plugin_load_items",
            "HABApp.openhab.connection_logic.plugin_ping",
            "HABApp.openhab.connection_logic.plugin_thing_overview",
            "HABApp.openhab.connection_logic.plugin_things",
            "HABApp.openhab.connection_logic.plugin_things._log",
            "HABApp.openhab.connection_logic.plugin_things.cfg_validator",
            "HABApp.openhab.connection_logic.plugin_things.filters",
            "HABApp.openhab.connection_logic.plugin_things.item_worker",
            "HABApp.openhab.connection_logic.plugin_things.plugin_things",
            "HABApp.openhab.connection_logic.plugin_things.str_builder",
            "HABApp.openhab.connection_logic.plugin_things.thing_config",
            "HABApp.openhab.connection_logic.plugin_things.thing_worker",
            "HABApp.openhab.definitions",
            "HABApp.openhab.definitions.definitions",
            "HABApp.openhab.definitions.helpers",
            "HABApp.openhab.definitions.helpers.log_table",
            "HABApp.openhab.definitions.helpers.persistence_data",
            "HABApp.openhab.definitions.rest",
            "HABApp.openhab.definitions.rest.base",
            "HABApp.openhab.definitions.rest.habapp_data",
            "HABApp.openhab.definitions.rest.items",
            "HABApp.openhab.definitions.rest.links",
            "HABApp.openhab.definitions.rest.things",
            "HABApp.openhab.definitions.values",
            "HABApp.openhab.events",
            "HABApp.openhab.events.base_event",
            "HABApp.openhab.events.channel_events",
            "HABApp.openhab.events.item_events",
            "HABApp.openhab.events.thing_events",
            "HABApp.openhab.exceptions",
            "HABApp.openhab.interface",
            "HABApp.openhab.interface_async",
            "HABApp.openhab.items",
            "HABApp.openhab.items.base_item",
            "HABApp.openhab.items.color_item",
            "HABApp.openhab.items.commands",
            "HABApp.openhab.items.contact_item",
            "HABApp.openhab.items.datetime_item",
            "HABApp.openhab.items.dimmer_item",
            "HABApp.openhab.items.group_item",
            "HABApp.openhab.items.image_item",
            "HABApp.openhab.items.number_item",
            "HABApp.openhab.items.rollershutter_item",
            "HABApp.openhab.items.string_item",
            "HABApp.openhab.items.switch_item",
            "HABApp.openhab.items.thing_item",
            "HABApp.openhab.map_events",
            "HABApp.openhab.map_items",
            "HABApp.openhab.map_values",
            "HABApp.parameters",
            "HABApp.parameters.parameter",
            "HABApp.parameters.parameter_files",
            "HABApp.parameters.parameters",
            "HABApp.rule",
            "HABApp.rule.interfaces",
            "HABApp.rule.interfaces.http",
            "HABApp.rule.interfaces.rule_subprocess",
            "HABApp.rule.rule",
            "HABApp.rule.scheduler",
            "HABApp.rule.scheduler.base",
            "HABApp.rule.scheduler.one_time_cb",
            "HABApp.rule.scheduler.reoccurring_cb",
            "HABApp.rule.scheduler.sun_cb",
            "HABApp.rule_manager",
            "HABApp.rule_manager.rule_file",
            "HABApp.rule_manager.rule_manager",
            "HABApp.runtime",
            "HABApp.runtime.folder_watcher",
            "HABApp.runtime.folder_watcher.folder_watcher",
            "HABApp.runtime.folder_watcher.habappfileevent",
            "HABApp.runtime.folder_watcher.simpleasyncfileevent",
            "HABApp.runtime.runtime",
            "HABApp.runtime.shutdown_helper",
            "HABApp.util",
            "HABApp.util.counter_item",
            "HABApp.util.multimode",
            "HABApp.util.multimode.item",
            "HABApp.util.multimode.mode_base",
            "HABApp.util.multimode.mode_switch",
            "HABApp.util.multimode.mode_value",
            "HABApp.util.period_counter",
            "HABApp.util.statistics",
            "HABApp.util.threshold"
        ],
        "version": "0.15.3"
    },
    "haberdashery": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "habib-bitcoin-price": {
        "cmdline": [],
        "modules": [
            "habib_bitcoin_m",
            "habib_bitcoin_m.bitcoin_price_alert"
        ],
        "version": "1.0.8"
    },
    "habibutsu-python-consul": {
        "cmdline": [],
        "modules": [
            "consul/__init__",
            "consul/aio",
            "consul/base",
            "consul/std",
            "consul/tornado",
            "consul/twisted"
        ],
        "version": "1.2.0"
    },
    "habitat": {
        "cmdline": [],
        "modules": [
            "habitat",
            "habitat.filters",
            "habitat.loadable_manager",
            "habitat.parser",
            "habitat.parser_daemon",
            "habitat.parser_modules",
            "habitat.parser_modules.simple_binary_parser",
            "habitat.parser_modules.ukhas_parser",
            "habitat.sensors",
            "habitat.sensors.base",
            "habitat.sensors.stdtelem",
            "habitat.uploader",
            "habitat.utils",
            "habitat.utils.checksums",
            "habitat.utils.dynamicloader",
            "habitat.utils.filtertools",
            "habitat.utils.immortal_changes",
            "habitat.utils.quick_traceback",
            "habitat.utils.startup",
            "habitat.views",
            "habitat.views.flight",
            "habitat.views.habitat",
            "habitat.views.listener_information",
            "habitat.views.listener_telemetry",
            "habitat.views.parser",
            "habitat.views.payload_configuration",
            "habitat.views.payload_telemetry",
            "habitat.views.utils"
        ],
        "version": "0.3.3"
    },
    "habitatos": {
        "cmdline": [],
        "modules": [
            "HabitatOS",
            "HabitatOS.client",
            "HabitatOS.client.basic",
            "HabitatOS.client.oauth",
            "HabitatOS.habitat",
            "HabitatOS.habitat._common",
            "HabitatOS.habitat._common.admin",
            "HabitatOS.habitat._common.management",
            "HabitatOS.habitat._common.management.commands",
            "HabitatOS.habitat._common.management.commands.i18n",
            "HabitatOS.habitat._common.management.commands.transifex",
            "HabitatOS.habitat._common.models",
            "HabitatOS.habitat._common.models.base",
            "HabitatOS.habitat._common.models.date",
            "HabitatOS.habitat._common.models.user",
            "HabitatOS.habitat.biolab",
            "HabitatOS.habitat.biolab.admin",
            "HabitatOS.habitat.biolab.admin.experiment",
            "HabitatOS.habitat.biolab.admin.observation",
            "HabitatOS.habitat.biolab.admin.plant",
            "HabitatOS.habitat.biolab.apps",
            "HabitatOS.habitat.biolab.migrations",
            "HabitatOS.habitat.biolab.migrations.0001_initial",
            "HabitatOS.habitat.biolab.models",
            "HabitatOS.habitat.biolab.models.experiment",
            "HabitatOS.habitat.biolab.models.observation",
            "HabitatOS.habitat.biolab.models.plant",
            "HabitatOS.habitat.biolab.tests",
            "HabitatOS.habitat.building",
            "HabitatOS.habitat.building.admin",
            "HabitatOS.habitat.building.admin.light",
            "HabitatOS.habitat.building.admin.module",
            "HabitatOS.habitat.building.admin.storage",
            "HabitatOS.habitat.building.apps",
            "HabitatOS.habitat.building.migrations",
            "HabitatOS.habitat.building.migrations.0001_initial",
            "HabitatOS.habitat.building.models",
            "HabitatOS.habitat.building.models.light",
            "HabitatOS.habitat.building.models.module",
            "HabitatOS.habitat.building.models.storage",
            "HabitatOS.habitat.building.tests",
            "HabitatOS.habitat.building.urls",
            "HabitatOS.habitat.building.views",
            "HabitatOS.habitat.communication",
            "HabitatOS.habitat.communication.apps",
            "HabitatOS.habitat.communication.migrations",
            "HabitatOS.habitat.communication.migrations.0001_initial",
            "HabitatOS.habitat.communication.migrations.0002_auto_20171008_2138",
            "HabitatOS.habitat.communication.migrations.0003_auto_20171008_2152",
            "HabitatOS.habitat.communication.migrations.0004_auto_20171009_1633",
            "HabitatOS.habitat.communication.migrations.0005_auto_20171009_2046",
            "HabitatOS.habitat.communication.models",
            "HabitatOS.habitat.communication.models.diary",
            "HabitatOS.habitat.communication.models.notes",
            "HabitatOS.habitat.communication.tests",
            "HabitatOS.habitat.communication.urls",
            "HabitatOS.habitat.communication.views",
            "HabitatOS.habitat.dashboard",
            "HabitatOS.habitat.dashboard.admin",
            "HabitatOS.habitat.dashboard.apps",
            "HabitatOS.habitat.dashboard.icares1",
            "HabitatOS.habitat.dashboard.models",
            "HabitatOS.habitat.dashboard.tests",
            "HabitatOS.habitat.dashboard.urls",
            "HabitatOS.habitat.dashboard.views",
            "HabitatOS.habitat.experiments",
            "HabitatOS.habitat.experiments.biology",
            "HabitatOS.habitat.experiments.biology.migrations",
            "HabitatOS.habitat.experiments.biology.models",
            "HabitatOS.habitat.experiments.biology.models.algae",
            "HabitatOS.habitat.experiments.biology.models.cockroach",
            "HabitatOS.habitat.experiments.biology.models.drosophila",
            "HabitatOS.habitat.experiments.biology.models.hermetia_waste_utilization",
            "HabitatOS.habitat.experiments.biology.models.hydroponics",
            "HabitatOS.habitat.experiments.biology.models.kombucha",
            "HabitatOS.habitat.experiments.biology.models.microgravity_plant_growth",
            "HabitatOS.habitat.experiments.biology.models.monitoring_f_environmental_conditions",
            "HabitatOS.habitat.experiments.biology.models.organic_waste_production",
            "HabitatOS.habitat.experiments.biology.models.plant_biospheres",
            "HabitatOS.habitat.experiments.biology.models.regolith_simulant_with_hermetia_fertilizer",
            "HabitatOS.habitat.experiments.biology.models.sprouts_light_conditions",
            "HabitatOS.habitat.experiments.biology.tests",
            "HabitatOS.habitat.experiments.geology",
            "HabitatOS.habitat.experiments.geology.migrations",
            "HabitatOS.habitat.experiments.geology.models",
            "HabitatOS.habitat.experiments.geology.models.algae_fertilizer",
            "HabitatOS.habitat.experiments.geology.models.mapping",
            "HabitatOS.habitat.experiments.geology.models.rock_powdering",
            "HabitatOS.habitat.experiments.geology.models.soil_making",
            "HabitatOS.habitat.experiments.human_factors",
            "HabitatOS.habitat.experiments.human_factors.migrations",
            "HabitatOS.habitat.experiments.human_factors.models",
            "HabitatOS.habitat.experiments.human_factors.models.final_crew_focus_group",
            "HabitatOS.habitat.experiments.human_factors.models.group_dynamics",
            "HabitatOS.habitat.experiments.human_factors.models.performance_under_stress",
            "HabitatOS.habitat.experiments.human_factors.models.time_perception",
            "HabitatOS.habitat.extravehicular",
            "HabitatOS.habitat.extravehicular.admin",
            "HabitatOS.habitat.extravehicular.admin.activity",
            "HabitatOS.habitat.extravehicular.admin.contingency",
            "HabitatOS.habitat.extravehicular.admin.location",
            "HabitatOS.habitat.extravehicular.admin.objective",
            "HabitatOS.habitat.extravehicular.admin.report",
            "HabitatOS.habitat.extravehicular.admin.spacewalker",
            "HabitatOS.habitat.extravehicular.apps",
            "HabitatOS.habitat.extravehicular.migrations",
            "HabitatOS.habitat.extravehicular.migrations.0001_initial",
            "HabitatOS.habitat.extravehicular.migrations.0002_auto_20171009_1633",
            "HabitatOS.habitat.extravehicular.migrations.0003_auto_20171009_2046",
            "HabitatOS.habitat.extravehicular.models",
            "HabitatOS.habitat.extravehicular.models.activity",
            "HabitatOS.habitat.extravehicular.models.contingency",
            "HabitatOS.habitat.extravehicular.models.location",
            "HabitatOS.habitat.extravehicular.models.objective",
            "HabitatOS.habitat.extravehicular.models.report",
            "HabitatOS.habitat.extravehicular.models.spacewalker",
            "HabitatOS.habitat.extravehicular.tests",
            "HabitatOS.habitat.food",
            "HabitatOS.habitat.food.apps",
            "HabitatOS.habitat.food.migrations",
            "HabitatOS.habitat.food.migrations.0001_initial",
            "HabitatOS.habitat.food.models",
            "HabitatOS.habitat.food.models.diet",
            "HabitatOS.habitat.food.models.meal",
            "HabitatOS.habitat.food.models.plan",
            "HabitatOS.habitat.food.models.product",
            "HabitatOS.habitat.food.models.product_category",
            "HabitatOS.habitat.food.models.tag",
            "HabitatOS.habitat.food.models.unit",
            "HabitatOS.habitat.food.tests",
            "HabitatOS.habitat.health",
            "HabitatOS.habitat.health.admin",
            "HabitatOS.habitat.health.admin.blood_pressure",
            "HabitatOS.habitat.health.admin.disease",
            "HabitatOS.habitat.health.admin.intercourse",
            "HabitatOS.habitat.health.admin.intoxication",
            "HabitatOS.habitat.health.admin.pulse_oximetry",
            "HabitatOS.habitat.health.admin.stool",
            "HabitatOS.habitat.health.admin.temperature",
            "HabitatOS.habitat.health.admin.urine",
            "HabitatOS.habitat.health.admin.weight",
            "HabitatOS.habitat.health.apps",
            "HabitatOS.habitat.health.migrations",
            "HabitatOS.habitat.health.migrations.0001_initial",
            "HabitatOS.habitat.health.migrations.0002_auto_20171009_2046",
            "HabitatOS.habitat.health.migrations.0003_auto_20171009_2106",
            "HabitatOS.habitat.health.models",
            "HabitatOS.habitat.health.models.blood_pressure",
            "HabitatOS.habitat.health.models.disease",
            "HabitatOS.habitat.health.models.intercourse",
            "HabitatOS.habitat.health.models.intoxication",
            "HabitatOS.habitat.health.models.pulse_oximetry",
            "HabitatOS.habitat.health.models.stool",
            "HabitatOS.habitat.health.models.temperature",
            "HabitatOS.habitat.health.models.urine",
            "HabitatOS.habitat.health.models.weight",
            "HabitatOS.habitat.health.tests",
            "HabitatOS.habitat.inventory",
            "HabitatOS.habitat.inventory.admin",
            "HabitatOS.habitat.inventory.admin.consumable",
            "HabitatOS.habitat.inventory.admin.edible",
            "HabitatOS.habitat.inventory.admin.item",
            "HabitatOS.habitat.inventory.apps",
            "HabitatOS.habitat.inventory.migrations",
            "HabitatOS.habitat.inventory.migrations.0001_initial",
            "HabitatOS.habitat.inventory.models",
            "HabitatOS.habitat.inventory.models.consumable",
            "HabitatOS.habitat.inventory.models.edible",
            "HabitatOS.habitat.inventory.models.item",
            "HabitatOS.habitat.inventory.tests",
            "HabitatOS.habitat.notification",
            "HabitatOS.habitat.notification.apps",
            "HabitatOS.habitat.notification.migrations",
            "HabitatOS.habitat.notification.models",
            "HabitatOS.habitat.notification.tests",
            "HabitatOS.habitat.notification.urls",
            "HabitatOS.habitat.notification.views",
            "HabitatOS.habitat.reporting",
            "HabitatOS.habitat.reporting.admin",
            "HabitatOS.habitat.reporting.admin.communication",
            "HabitatOS.habitat.reporting.admin.daily",
            "HabitatOS.habitat.reporting.admin.incident",
            "HabitatOS.habitat.reporting.admin.medical",
            "HabitatOS.habitat.reporting.admin.mood",
            "HabitatOS.habitat.reporting.admin.repair",
            "HabitatOS.habitat.reporting.admin.sleep",
            "HabitatOS.habitat.reporting.admin.sociodynamics",
            "HabitatOS.habitat.reporting.admin.time",
            "HabitatOS.habitat.reporting.admin.waste",
            "HabitatOS.habitat.reporting.apps",
            "HabitatOS.habitat.reporting.migrations",
            "HabitatOS.habitat.reporting.migrations.0001_initial",
            "HabitatOS.habitat.reporting.migrations.0002_sociodynamicreport_sociodynamicreportentry",
            "HabitatOS.habitat.reporting.migrations.0003_auto_20171008_2152",
            "HabitatOS.habitat.reporting.migrations.0004_daily",
            "HabitatOS.habitat.reporting.migrations.0005_auto_20171008_2236",
            "HabitatOS.habitat.reporting.migrations.0006_auto_20171008_2242",
            "HabitatOS.habitat.reporting.migrations.0007_auto_20171009_2046",
            "HabitatOS.habitat.reporting.migrations.0008_auto_20171009_2058",
            "HabitatOS.habitat.reporting.migrations.0009_auto_20171010_0019",
            "HabitatOS.habitat.reporting.models",
            "HabitatOS.habitat.reporting.models.communication",
            "HabitatOS.habitat.reporting.models.daily",
            "HabitatOS.habitat.reporting.models.incident",
            "HabitatOS.habitat.reporting.models.medical",
            "HabitatOS.habitat.reporting.models.mood",
            "HabitatOS.habitat.reporting.models.repair",
            "HabitatOS.habitat.reporting.models.sleep",
            "HabitatOS.habitat.reporting.models.sociodynamics",
            "HabitatOS.habitat.reporting.models.time",
            "HabitatOS.habitat.reporting.models.waste",
            "HabitatOS.habitat.reporting.tests",
            "HabitatOS.habitat.sensors",
            "HabitatOS.habitat.sensors.admin",
            "HabitatOS.habitat.sensors.admin.carbon_dioxide",
            "HabitatOS.habitat.sensors.admin.carbon_monoxide",
            "HabitatOS.habitat.sensors.admin.humidity",
            "HabitatOS.habitat.sensors.admin.illuminance",
            "HabitatOS.habitat.sensors.admin.network",
            "HabitatOS.habitat.sensors.admin.oxygen",
            "HabitatOS.habitat.sensors.admin.pressure",
            "HabitatOS.habitat.sensors.admin.radiation",
            "HabitatOS.habitat.sensors.admin.temperature",
            "HabitatOS.habitat.sensors.admin.voltage",
            "HabitatOS.habitat.sensors.admin.weather",
            "HabitatOS.habitat.sensors.admin.zwave_sensor",
            "HabitatOS.habitat.sensors.apps",
            "HabitatOS.habitat.sensors.migrations",
            "HabitatOS.habitat.sensors.migrations.0001_initial",
            "HabitatOS.habitat.sensors.migrations.0002_auto_20171009_2046",
            "HabitatOS.habitat.sensors.models",
            "HabitatOS.habitat.sensors.models.carbon_dioxide",
            "HabitatOS.habitat.sensors.models.carbon_monoxide",
            "HabitatOS.habitat.sensors.models.humidity",
            "HabitatOS.habitat.sensors.models.illuminance",
            "HabitatOS.habitat.sensors.models.motion",
            "HabitatOS.habitat.sensors.models.network",
            "HabitatOS.habitat.sensors.models.oxygen",
            "HabitatOS.habitat.sensors.models.pressure",
            "HabitatOS.habitat.sensors.models.radiation",
            "HabitatOS.habitat.sensors.models.temperature",
            "HabitatOS.habitat.sensors.models.uv",
            "HabitatOS.habitat.sensors.models.vibration",
            "HabitatOS.habitat.sensors.models.voltage",
            "HabitatOS.habitat.sensors.models.weather",
            "HabitatOS.habitat.sensors.models.zwave_sensor",
            "HabitatOS.habitat.sensors.serializers",
            "HabitatOS.habitat.sensors.tests",
            "HabitatOS.habitat.sensors.urls",
            "HabitatOS.habitat.sensors.views",
            "HabitatOS.habitat.settings",
            "HabitatOS.habitat.tests",
            "HabitatOS.habitat.timezone",
            "HabitatOS.habitat.timezone.apps",
            "HabitatOS.habitat.timezone.models",
            "HabitatOS.habitat.timezone.models.lunar_standard_time",
            "HabitatOS.habitat.timezone.models.martian_standard_time",
            "HabitatOS.habitat.timezone.tests",
            "HabitatOS.habitat.timezone.urls",
            "HabitatOS.habitat.timezone.views",
            "HabitatOS.habitat.urls",
            "HabitatOS.habitat.water",
            "HabitatOS.habitat.water.admin",
            "HabitatOS.habitat.water.admin.drinking",
            "HabitatOS.habitat.water.admin.green",
            "HabitatOS.habitat.water.admin.technical",
            "HabitatOS.habitat.water.apps",
            "HabitatOS.habitat.water.migrations",
            "HabitatOS.habitat.water.migrations.0001_initial",
            "HabitatOS.habitat.water.migrations.0002_auto_20171009_2046",
            "HabitatOS.habitat.water.migrations.0003_auto_20171010_0019",
            "HabitatOS.habitat.water.models",
            "HabitatOS.habitat.water.models.drinking",
            "HabitatOS.habitat.water.models.green",
            "HabitatOS.habitat.water.models.technical",
            "HabitatOS.habitat.water.tests",
            "HabitatOS.habitat.wsgi",
            "HabitatOS.manage"
        ],
        "version": "0.9.0"
    },
    "habitica": {
        "cmdline": [],
        "modules": [
            "habitica",
            "habitica.api",
            "habitica.core"
        ],
        "version": "0.0.16"
    },
    "habitica-challenge-wrangler": {
        "cmdline": [],
        "modules": [
            "habitica_challenge_wrangler",
            "habitica_challenge_wrangler.challenge_wrangler",
            "habitica_challenge_wrangler.configuration"
        ],
        "version": "2.0.0"
    },
    "habitica-planner": {
        "cmdline": [],
        "modules": [
            "habitica_planner",
            "habitica_planner.planner"
        ],
        "version": "0.1.3"
    },
    "habitica-todo": {
        "cmdline": [],
        "modules": [
            "habitica-todo",
            "habitica-todo.castSpells",
            "habitica-todo.dates",
            "habitica-todo.hab_task",
            "habitica-todo.main",
            "habitica-todo.manaPull",
            "habitica-todo.oneWaySync",
            "habitica-todo.task",
            "habitica-todo.todo_task"
        ],
        "version": "1.3"
    },
    "habitican-curse": {
        "cmdline": [
            "habitican-curse"
        ],
        "modules": [
            "habitican_curse",
            "habitican_curse.config",
            "habitican_curse.content",
            "habitican_curse.debug",
            "habitican_curse.global_objects",
            "habitican_curse.helper",
            "habitican_curse.interface",
            "habitican_curse.menu",
            "habitican_curse.request_manager",
            "habitican_curse.screen",
            "habitican_curse.task",
            "habitican_curse.user"
        ],
        "version": "2.2.6"
    },
    "habiticatodo": {
        "cmdline": [],
        "modules": [
            "habiticaTodo",
            "habiticaTodo.castSpells",
            "habiticaTodo.dates",
            "habiticaTodo.hab_task",
            "habiticaTodo.main",
            "habiticaTodo.manaPull",
            "habiticaTodo.oneWaySync",
            "habiticaTodo.task",
            "habiticaTodo.todo_task"
        ],
        "version": "1.2.0"
    },
    "habitipy": {
        "cmdline": [],
        "modules": [
            "habitipy",
            "habitipy.aio",
            "habitipy.api",
            "habitipy.async",
            "habitipy.cli",
            "habitipy.util"
        ],
        "version": "0.3.0"
    },
    "habito": {
        "cmdline": [],
        "modules": [
            "habito",
            "habito.habito",
            "habito.models"
        ],
        "version": "1.0.0"
    },
    "habits": {
        "cmdline": [],
        "modules": [
            "habits",
            "habits.api",
            "habits.config",
            "habits.server"
        ],
        "version": "0.0.20"
    },
    "habitual": {
        "cmdline": [],
        "modules": [
            "habitual"
        ],
        "version": "0.1.1"
    },
    "hablame": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "habpy": {
        "cmdline": [],
        "modules": [
            "habpy"
        ],
        "version": "0.1"
    },
    "habra-favorites": {
        "cmdline": [],
        "modules": [
            "habra_favorites",
            "habra_favorites.exporters",
            "habra_favorites.items",
            "habra_favorites.loaders",
            "habra_favorites.main",
            "habra_favorites.pipelines",
            "habra_favorites.settings",
            "habra_favorites.spiders",
            "habra_favorites.spiders.favorites_spider"
        ],
        "version": "1.4.0"
    },
    "habrahabr": {
        "cmdline": [],
        "modules": [
            "habrahabr"
        ],
        "version": "0.0.1"
    },
    "habrahabr-api": {
        "cmdline": [],
        "modules": [
            "habrahabr",
            "habrahabr.api",
            "habrahabr.auth",
            "habrahabr.errors",
            "habrahabr.resources",
            "habrahabr.resources.base",
            "habrahabr.resources.comments",
            "habrahabr.resources.company",
            "habrahabr.resources.feed",
            "habrahabr.resources.flow",
            "habrahabr.resources.hub",
            "habrahabr.resources.poll",
            "habrahabr.resources.post",
            "habrahabr.resources.search",
            "habrahabr.resources.settings",
            "habrahabr.resources.tracker",
            "habrahabr.resources.user",
            "habrahabr.utils"
        ],
        "version": "0.1.2"
    },
    "habsim": {
        "cmdline": [],
        "modules": [
            "habsim",
            "habsim.classes",
            "habsim.ioutil",
            "habsim.util"
        ],
        "version": "0.2"
    },
    "habu": {
        "cmdline": [],
        "modules": [
            "habu",
            "habu.cli",
            "habu.cli.beta_cmd_crack_service",
            "habu.cli.beta_cmd_dhcp_server",
            "habu.cli.beta_cmd_dnsd",
            "habu.cli.beta_cmd_file_entropy",
            "habu.cli.beta_cmd_firewalk",
            "habu.cli.beta_cmd_firewall",
            "habu.cli.beta_cmd_https_server",
            "habu.cli.beta_cmd_icmp",
            "habu.cli.beta_cmd_icmp_redirect",
            "habu.cli.beta_cmd_mhr",
            "habu.cli.beta_cmd_proxy",
            "habu.cli.beta_cmd_slowloris",
            "habu.cli.beta_cmd_sniff",
            "habu.cli.beta_cmd_tcproxy",
            "habu.cli.beta_cmd_tcproxy2",
            "habu.cli.beta_cmd_tlsaudit",
            "habu.cli.beta_cmd_wafdetect",
            "habu.cli.beta_cmd_webheaders",
            "habu.cli.beta_cmd_weburls",
            "habu.cli.cmd_arp_ping",
            "habu.cli.cmd_arp_poison",
            "habu.cli.cmd_arp_sniff",
            "habu.cli.cmd_asydns",
            "habu.cli.cmd_b64",
            "habu.cli.cmd_cert_clone",
            "habu.cli.cmd_cert_crtsh",
            "habu.cli.cmd_cert_names",
            "habu.cli.cmd_config_del",
            "habu.cli.cmd_config_set",
            "habu.cli.cmd_config_show",
            "habu.cli.cmd_crack_luhn",
            "habu.cli.cmd_crack_snmp",
            "habu.cli.cmd_crypto_fernet",
            "habu.cli.cmd_crypto_fernet_genkey",
            "habu.cli.cmd_crypto_gppref",
            "habu.cli.cmd_crypto_hasher",
            "habu.cli.cmd_crypto_xor",
            "habu.cli.cmd_data_enrich",
            "habu.cli.cmd_data_extract_domain",
            "habu.cli.cmd_data_extract_email",
            "habu.cli.cmd_data_extract_fqdn",
            "habu.cli.cmd_data_extract_ipv4",
            "habu.cli.cmd_data_filter",
            "habu.cli.cmd_data_select",
            "habu.cli.cmd_dhcp_discover",
            "habu.cli.cmd_dhcp_starvation",
            "habu.cli.cmd_dns_lookup_forward",
            "habu.cli.cmd_dns_lookup_reverse",
            "habu.cli.cmd_eicar",
            "habu.cli.cmd_forkbomb",
            "habu.cli.cmd_fqdn_finder",
            "habu.cli.cmd_gateway_find",
            "habu.cli.cmd_host",
            "habu.cli.cmd_http_headers",
            "habu.cli.cmd_http_options",
            "habu.cli.cmd_http_tech",
            "habu.cli.cmd_icmp_ping",
            "habu.cli.cmd_ip_asn",
            "habu.cli.cmd_ip_geolocation",
            "habu.cli.cmd_ip_internal",
            "habu.cli.cmd_ip_public",
            "habu.cli.cmd_jshell",
            "habu.cli.cmd_karma",
            "habu.cli.cmd_karma_bulk",
            "habu.cli.cmd_land",
            "habu.cli.cmd_nc",
            "habu.cli.cmd_net_contest",
            "habu.cli.cmd_net_interfaces",
            "habu.cli.cmd_nmap_excluded",
            "habu.cli.cmd_nmap_open",
            "habu.cli.cmd_nmap_ports",
            "habu.cli.cmd_protoscan",
            "habu.cli.cmd_server_ftp",
            "habu.cli.cmd_shodan",
            "habu.cli.cmd_shodan_query",
            "habu.cli.cmd_tcp_flags",
            "habu.cli.cmd_tcp_isn",
            "habu.cli.cmd_tcp_scan",
            "habu.cli.cmd_tcp_synflood",
            "habu.cli.cmd_traceroute",
            "habu.cli.cmd_usercheck",
            "habu.cli.cmd_version",
            "habu.cli.cmd_vhosts",
            "habu.cli.cmd_virustotal",
            "habu.cli.cmd_web_report",
            "habu.cli.cmd_web_screenshot",
            "habu.cli.cmd_whois_domain",
            "habu.cli.cmd_whois_ip",
            "habu.config",
            "habu.lib",
            "habu.lib.arpoison",
            "habu.lib.auth",
            "habu.lib.certclone",
            "habu.lib.certclone2",
            "habu.lib.completeme",
            "habu.lib.completeme.javascript",
            "habu.lib.contest",
            "habu.lib.delegator",
            "habu.lib.dns",
            "habu.lib.eicar",
            "habu.lib.enrich",
            "habu.lib.enrich_not_work",
            "habu.lib.extract",
            "habu.lib.firewall",
            "habu.lib.firewall_iptables",
            "habu.lib.forkbomb",
            "habu.lib.fqdn_finder",
            "habu.lib.hasher",
            "habu.lib.host",
            "habu.lib.htc",
            "habu.lib.http",
            "habu.lib.http_tech",
            "habu.lib.http_tech-old",
            "habu.lib.identify",
            "habu.lib.iface",
            "habu.lib.ip",
            "habu.lib.ip2asn",
            "habu.lib.ip_reputation",
            "habu.lib.libdns",
            "habu.lib.loadcfg",
            "habu.lib.portscan",
            "habu.lib.pscan",
            "habu.lib.pwdlyze",
            "habu.lib.pwdpolicy",
            "habu.lib.reqalyze",
            "habu.lib.shodan",
            "habu.lib.threaded",
            "habu.lib.tomorrow3",
            "habu.lib.vhosts",
            "habu.lib.web_links",
            "habu.lib.web_screenshot",
            "habu.lib.xor"
        ],
        "version": "0.1.36"
    },
    "haburas": {
        "cmdline": [],
        "modules": [
            "haburas",
            "haburas.admin",
            "haburas.apps",
            "haburas.models",
            "haburas.tests",
            "haburas.urls",
            "haburas.views"
        ],
        "version": "0.1.0"
    },
    "hac": {
        "cmdline": [],
        "modules": [
            "hac",
            "hac.commands",
            "hac.core",
            "hac.data",
            "hac.parse_cli",
            "hac.parse_common",
            "hac.parse_config",
            "hac.util_common",
            "hac.util_data"
        ],
        "version": "1.0.5"
    },
    "hac-game-lib": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.99"
    },
    "hac-img": {
        "cmdline": [],
        "modules": [
            "hac_img"
        ],
        "version": "0.0.1"
    },
    "haccrypto": {
        "cmdline": [],
        "modules": [
            "haccrypto",
            "haccrypto.crypto"
        ],
        "version": "0.1.0"
    },
    "hacheck": {
        "cmdline": [],
        "modules": [
            "hacheck",
            "hacheck.cache",
            "hacheck.checker",
            "hacheck.compat",
            "hacheck.config",
            "hacheck.handlers",
            "hacheck.haupdown",
            "hacheck.main",
            "hacheck.mysql",
            "hacheck.spool"
        ],
        "version": "0.7.0"
    },
    "hachi": {
        "cmdline": [],
        "modules": [
            "hachi",
            "hachi.compat",
            "hachi.const",
            "hachi.core",
            "hachi.exceptions",
            "hachi.request",
            "hachi.response",
            "hachi.serial",
            "hachi.tests",
            "hachi.twisted"
        ],
        "version": "0.5.1"
    },
    "hachibee-sphinx-theme": {
        "cmdline": [],
        "modules": [
            "hachibee_sphinx_theme"
        ],
        "version": "0.2.5"
    },
    "hachiko": {
        "cmdline": [],
        "modules": [
            "hachiko",
            "hachiko.hachiko",
            "hachiko.version"
        ],
        "version": "0.3.0"
    },
    "hachiko-bapu": {
        "cmdline": [],
        "modules": [
            "hachiko_bapu",
            "hachiko_bapu.FluidSynth",
            "hachiko_bapu.cli_tools",
            "hachiko_bapu.cli_tools.lrc_merge",
            "hachiko_bapu.cli_tools.srt2mid",
            "hachiko_bapu.funutils",
            "hachiko_bapu.hachi",
            "hachiko_bapu.hachitools",
            "hachiko_bapu.synthesize"
        ],
        "version": "0.1.8"
    },
    "hachoir": {
        "cmdline": [],
        "modules": [
            "hachoir",
            "hachoir.core",
            "hachoir.core.benchmark",
            "hachoir.core.bits",
            "hachoir.core.cmd_line",
            "hachoir.core.config",
            "hachoir.core.dict",
            "hachoir.core.endian",
            "hachoir.core.error",
            "hachoir.core.event_handler",
            "hachoir.core.i18n",
            "hachoir.core.iso639",
            "hachoir.core.language",
            "hachoir.core.log",
            "hachoir.core.memory",
            "hachoir.core.profiler",
            "hachoir.core.text_handler",
            "hachoir.core.timeout",
            "hachoir.core.tools",
            "hachoir.editor",
            "hachoir.editor.field",
            "hachoir.editor.fieldset",
            "hachoir.editor.typed_field",
            "hachoir.field",
            "hachoir.field.basic_field_set",
            "hachoir.field.bit_field",
            "hachoir.field.byte_field",
            "hachoir.field.character",
            "hachoir.field.enum",
            "hachoir.field.fake_array",
            "hachoir.field.field",
            "hachoir.field.field_set",
            "hachoir.field.float",
            "hachoir.field.fragment",
            "hachoir.field.generic_field_set",
            "hachoir.field.helper",
            "hachoir.field.integer",
            "hachoir.field.link",
            "hachoir.field.padding",
            "hachoir.field.parser",
            "hachoir.field.seekable_field_set",
            "hachoir.field.static_field_set",
            "hachoir.field.string_field",
            "hachoir.field.sub_file",
            "hachoir.field.timestamp",
            "hachoir.field.vector",
            "hachoir.grep",
            "hachoir.metadata",
            "hachoir.metadata.archive",
            "hachoir.metadata.audio",
            "hachoir.metadata.config",
            "hachoir.metadata.cr2",
            "hachoir.metadata.csv",
            "hachoir.metadata.file_system",
            "hachoir.metadata.filter",
            "hachoir.metadata.formatter",
            "hachoir.metadata.gtk",
            "hachoir.metadata.image",
            "hachoir.metadata.jpeg",
            "hachoir.metadata.main",
            "hachoir.metadata.metadata",
            "hachoir.metadata.metadata_item",
            "hachoir.metadata.misc",
            "hachoir.metadata.program",
            "hachoir.metadata.qt",
            "hachoir.metadata.qt.main",
            "hachoir.metadata.register",
            "hachoir.metadata.riff",
            "hachoir.metadata.safe",
            "hachoir.metadata.setter",
            "hachoir.metadata.timezone",
            "hachoir.metadata.video",
            "hachoir.parser",
            "hachoir.parser.archive",
            "hachoir.parser.archive.ace",
            "hachoir.parser.archive.ar",
            "hachoir.parser.archive.bomstore",
            "hachoir.parser.archive.bzip2_parser",
            "hachoir.parser.archive.cab",
            "hachoir.parser.archive.gzip_parser",
            "hachoir.parser.archive.lzx",
            "hachoir.parser.archive.mar",
            "hachoir.parser.archive.mozilla_ar",
            "hachoir.parser.archive.prs_pak",
            "hachoir.parser.archive.rar",
            "hachoir.parser.archive.rpm",
            "hachoir.parser.archive.sevenzip",
            "hachoir.parser.archive.tar",
            "hachoir.parser.archive.zip",
            "hachoir.parser.archive.zlib",
            "hachoir.parser.audio",
            "hachoir.parser.audio.aiff",
            "hachoir.parser.audio.au",
            "hachoir.parser.audio.flac",
            "hachoir.parser.audio.id3",
            "hachoir.parser.audio.itunesdb",
            "hachoir.parser.audio.midi",
            "hachoir.parser.audio.mod",
            "hachoir.parser.audio.modplug",
            "hachoir.parser.audio.mpeg_audio",
            "hachoir.parser.audio.real_audio",
            "hachoir.parser.audio.s3m",
            "hachoir.parser.audio.xm",
            "hachoir.parser.common",
            "hachoir.parser.common.deflate",
            "hachoir.parser.common.msdos",
            "hachoir.parser.common.tracker",
            "hachoir.parser.common.win32",
            "hachoir.parser.common.win32_lang_id",
            "hachoir.parser.container",
            "hachoir.parser.container.action_script",
            "hachoir.parser.container.asn1",
            "hachoir.parser.container.mkv",
            "hachoir.parser.container.mp4",
            "hachoir.parser.container.ogg",
            "hachoir.parser.container.realmedia",
            "hachoir.parser.container.riff",
            "hachoir.parser.container.swf",
            "hachoir.parser.file_system",
            "hachoir.parser.file_system.ext2",
            "hachoir.parser.file_system.fat",
            "hachoir.parser.file_system.iso9660",
            "hachoir.parser.file_system.linux_swap",
            "hachoir.parser.file_system.mbr",
            "hachoir.parser.file_system.ntfs",
            "hachoir.parser.file_system.reiser_fs",
            "hachoir.parser.game",
            "hachoir.parser.game.blp",
            "hachoir.parser.game.laf",
            "hachoir.parser.game.spider_man_video",
            "hachoir.parser.game.zsnes",
            "hachoir.parser.guess",
            "hachoir.parser.image",
            "hachoir.parser.image.bmp",
            "hachoir.parser.image.common",
            "hachoir.parser.image.cr2",
            "hachoir.parser.image.exif",
            "hachoir.parser.image.gif",
            "hachoir.parser.image.ico",
            "hachoir.parser.image.iptc",
            "hachoir.parser.image.jpeg",
            "hachoir.parser.image.pcx",
            "hachoir.parser.image.photoshop_metadata",
            "hachoir.parser.image.png",
            "hachoir.parser.image.psd",
            "hachoir.parser.image.tga",
            "hachoir.parser.image.tiff",
            "hachoir.parser.image.wmf",
            "hachoir.parser.image.xcf",
            "hachoir.parser.misc",
            "hachoir.parser.misc.bplist",
            "hachoir.parser.misc.chm",
            "hachoir.parser.misc.common",
            "hachoir.parser.misc.dsstore",
            "hachoir.parser.misc.file_3do",
            "hachoir.parser.misc.file_3ds",
            "hachoir.parser.misc.gnome_keyring",
            "hachoir.parser.misc.hlp",
            "hachoir.parser.misc.lnk",
            "hachoir.parser.misc.mapsforge_map",
            "hachoir.parser.misc.msoffice",
            "hachoir.parser.misc.msoffice_summary",
            "hachoir.parser.misc.mstask",
            "hachoir.parser.misc.ole2",
            "hachoir.parser.misc.ole2_util",
            "hachoir.parser.misc.pcf",
            "hachoir.parser.misc.pdf",
            "hachoir.parser.misc.pifv",
            "hachoir.parser.misc.torrent",
            "hachoir.parser.misc.ttf",
            "hachoir.parser.misc.word_2",
            "hachoir.parser.misc.word_doc",
            "hachoir.parser.network",
            "hachoir.parser.network.common",
            "hachoir.parser.network.ouid",
            "hachoir.parser.network.tcpdump",
            "hachoir.parser.parser",
            "hachoir.parser.parser_list",
            "hachoir.parser.program",
            "hachoir.parser.program.elf",
            "hachoir.parser.program.exe",
            "hachoir.parser.program.exe_ne",
            "hachoir.parser.program.exe_pe",
            "hachoir.parser.program.exe_res",
            "hachoir.parser.program.java",
            "hachoir.parser.program.java_serialized",
            "hachoir.parser.program.macho",
            "hachoir.parser.program.nds",
            "hachoir.parser.program.prc",
            "hachoir.parser.program.python",
            "hachoir.parser.template",
            "hachoir.parser.video",
            "hachoir.parser.video.amf",
            "hachoir.parser.video.asf",
            "hachoir.parser.video.flv",
            "hachoir.parser.video.fourcc",
            "hachoir.parser.video.mpeg_ts",
            "hachoir.parser.video.mpeg_video",
            "hachoir.regex",
            "hachoir.regex.parser",
            "hachoir.regex.pattern",
            "hachoir.regex.regex",
            "hachoir.stream",
            "hachoir.stream.input",
            "hachoir.stream.input_helper",
            "hachoir.stream.output",
            "hachoir.stream.stream",
            "hachoir.strip",
            "hachoir.subfile",
            "hachoir.subfile.data_rate",
            "hachoir.subfile.main",
            "hachoir.subfile.output",
            "hachoir.subfile.pattern",
            "hachoir.subfile.search",
            "hachoir.test",
            "hachoir.urwid",
            "hachoir.wx",
            "hachoir.wx.app",
            "hachoir.wx.dialogs",
            "hachoir.wx.dispatcher",
            "hachoir.wx.field_view",
            "hachoir.wx.field_view.core_type_menu",
            "hachoir.wx.field_view.core_type_menu_fwd",
            "hachoir.wx.field_view.core_type_menu_imp",
            "hachoir.wx.field_view.field_menu",
            "hachoir.wx.field_view.field_menu_fwd",
            "hachoir.wx.field_view.field_menu_imp",
            "hachoir.wx.field_view.field_menu_setup",
            "hachoir.wx.field_view.field_split_menu",
            "hachoir.wx.field_view.field_split_menu_fwd",
            "hachoir.wx.field_view.field_split_menu_imp",
            "hachoir.wx.field_view.field_view",
            "hachoir.wx.field_view.field_view_fwd",
            "hachoir.wx.field_view.field_view_imp",
            "hachoir.wx.field_view.field_view_setup",
            "hachoir.wx.field_view.format",
            "hachoir.wx.field_view.mutator",
            "hachoir.wx.field_view.stubs",
            "hachoir.wx.frame_view",
            "hachoir.wx.frame_view.frame_view",
            "hachoir.wx.frame_view.frame_view_fwd",
            "hachoir.wx.frame_view.frame_view_imp",
            "hachoir.wx.frame_view.frame_view_setup",
            "hachoir.wx.hex_view",
            "hachoir.wx.hex_view.file_cache",
            "hachoir.wx.hex_view.hex_view",
            "hachoir.wx.hex_view.hex_view_setup",
            "hachoir.wx.main",
            "hachoir.wx.resource",
            "hachoir.wx.resource.resource",
            "hachoir.wx.tree_view",
            "hachoir.wx.tree_view.tree_view",
            "hachoir.wx.tree_view.tree_view_setup",
            "hachoir.wx.unicode"
        ],
        "version": "3.1.1"
    },
    "hachoir3-superdesk": {
        "cmdline": [],
        "modules": [
            "hachoir",
            "hachoir.core",
            "hachoir.core.benchmark",
            "hachoir.core.bits",
            "hachoir.core.cmd_line",
            "hachoir.core.config",
            "hachoir.core.dict",
            "hachoir.core.endian",
            "hachoir.core.error",
            "hachoir.core.event_handler",
            "hachoir.core.i18n",
            "hachoir.core.iso639",
            "hachoir.core.language",
            "hachoir.core.log",
            "hachoir.core.memory",
            "hachoir.core.profiler",
            "hachoir.core.text_handler",
            "hachoir.core.timeout",
            "hachoir.core.tools",
            "hachoir.editor",
            "hachoir.editor.field",
            "hachoir.editor.fieldset",
            "hachoir.editor.typed_field",
            "hachoir.field",
            "hachoir.field.basic_field_set",
            "hachoir.field.bit_field",
            "hachoir.field.byte_field",
            "hachoir.field.character",
            "hachoir.field.enum",
            "hachoir.field.fake_array",
            "hachoir.field.field",
            "hachoir.field.field_set",
            "hachoir.field.float",
            "hachoir.field.generic_field_set",
            "hachoir.field.helper",
            "hachoir.field.integer",
            "hachoir.field.link",
            "hachoir.field.new_seekable_field_set",
            "hachoir.field.padding",
            "hachoir.field.parser",
            "hachoir.field.seekable_field_set",
            "hachoir.field.static_field_set",
            "hachoir.field.string_field",
            "hachoir.field.sub_file",
            "hachoir.field.timestamp",
            "hachoir.field.vector",
            "hachoir.grep",
            "hachoir.metadata",
            "hachoir.metadata.archive",
            "hachoir.metadata.audio",
            "hachoir.metadata.config",
            "hachoir.metadata.file_system",
            "hachoir.metadata.filter",
            "hachoir.metadata.formatter",
            "hachoir.metadata.image",
            "hachoir.metadata.jpeg",
            "hachoir.metadata.metadata",
            "hachoir.metadata.metadata_item",
            "hachoir.metadata.misc",
            "hachoir.metadata.program",
            "hachoir.metadata.qt",
            "hachoir.metadata.register",
            "hachoir.metadata.riff",
            "hachoir.metadata.safe",
            "hachoir.metadata.setter",
            "hachoir.metadata.timezone",
            "hachoir.metadata.video",
            "hachoir.parser",
            "hachoir.parser.archive",
            "hachoir.parser.archive.ace",
            "hachoir.parser.archive.ar",
            "hachoir.parser.archive.bzip2_parser",
            "hachoir.parser.archive.cab",
            "hachoir.parser.archive.gzip_parser",
            "hachoir.parser.archive.lzx",
            "hachoir.parser.archive.mar",
            "hachoir.parser.archive.mozilla_ar",
            "hachoir.parser.archive.rar",
            "hachoir.parser.archive.rpm",
            "hachoir.parser.archive.sevenzip",
            "hachoir.parser.archive.tar",
            "hachoir.parser.archive.zip",
            "hachoir.parser.archive.zlib",
            "hachoir.parser.audio",
            "hachoir.parser.audio.aiff",
            "hachoir.parser.audio.au",
            "hachoir.parser.audio.flac",
            "hachoir.parser.audio.id3",
            "hachoir.parser.audio.itunesdb",
            "hachoir.parser.audio.midi",
            "hachoir.parser.audio.mod",
            "hachoir.parser.audio.modplug",
            "hachoir.parser.audio.mpeg_audio",
            "hachoir.parser.audio.real_audio",
            "hachoir.parser.audio.s3m",
            "hachoir.parser.audio.xm",
            "hachoir.parser.common",
            "hachoir.parser.common.deflate",
            "hachoir.parser.common.msdos",
            "hachoir.parser.common.tracker",
            "hachoir.parser.common.win32",
            "hachoir.parser.common.win32_lang_id",
            "hachoir.parser.container",
            "hachoir.parser.container.action_script",
            "hachoir.parser.container.asn1",
            "hachoir.parser.container.mkv",
            "hachoir.parser.container.ogg",
            "hachoir.parser.container.realmedia",
            "hachoir.parser.container.riff",
            "hachoir.parser.container.swf",
            "hachoir.parser.file_system",
            "hachoir.parser.file_system.ext2",
            "hachoir.parser.file_system.fat",
            "hachoir.parser.file_system.iso9660",
            "hachoir.parser.file_system.linux_swap",
            "hachoir.parser.file_system.mbr",
            "hachoir.parser.file_system.ntfs",
            "hachoir.parser.file_system.reiser_fs",
            "hachoir.parser.game",
            "hachoir.parser.game.blp",
            "hachoir.parser.game.laf",
            "hachoir.parser.game.spider_man_video",
            "hachoir.parser.game.zsnes",
            "hachoir.parser.guess",
            "hachoir.parser.image",
            "hachoir.parser.image.bmp",
            "hachoir.parser.image.common",
            "hachoir.parser.image.exif",
            "hachoir.parser.image.gif",
            "hachoir.parser.image.ico",
            "hachoir.parser.image.iptc",
            "hachoir.parser.image.jpeg",
            "hachoir.parser.image.pcx",
            "hachoir.parser.image.photoshop_metadata",
            "hachoir.parser.image.png",
            "hachoir.parser.image.psd",
            "hachoir.parser.image.tga",
            "hachoir.parser.image.tiff",
            "hachoir.parser.image.wmf",
            "hachoir.parser.image.xcf",
            "hachoir.parser.misc",
            "hachoir.parser.misc.bplist",
            "hachoir.parser.misc.chm",
            "hachoir.parser.misc.common",
            "hachoir.parser.misc.dsstore",
            "hachoir.parser.misc.file_3do",
            "hachoir.parser.misc.file_3ds",
            "hachoir.parser.misc.gnome_keyring",
            "hachoir.parser.misc.hlp",
            "hachoir.parser.misc.lnk",
            "hachoir.parser.misc.msoffice",
            "hachoir.parser.misc.msoffice_summary",
            "hachoir.parser.misc.mstask",
            "hachoir.parser.misc.ole2",
            "hachoir.parser.misc.ole2_util",
            "hachoir.parser.misc.pcf",
            "hachoir.parser.misc.pdf",
            "hachoir.parser.misc.pifv",
            "hachoir.parser.misc.torrent",
            "hachoir.parser.misc.ttf",
            "hachoir.parser.misc.word_2",
            "hachoir.parser.misc.word_doc",
            "hachoir.parser.network",
            "hachoir.parser.network.common",
            "hachoir.parser.network.ouid",
            "hachoir.parser.network.tcpdump",
            "hachoir.parser.parser",
            "hachoir.parser.parser_list",
            "hachoir.parser.program",
            "hachoir.parser.program.elf",
            "hachoir.parser.program.exe",
            "hachoir.parser.program.exe_ne",
            "hachoir.parser.program.exe_pe",
            "hachoir.parser.program.exe_res",
            "hachoir.parser.program.java",
            "hachoir.parser.program.nds",
            "hachoir.parser.program.prc",
            "hachoir.parser.program.python",
            "hachoir.parser.template",
            "hachoir.parser.video",
            "hachoir.parser.video.amf",
            "hachoir.parser.video.asf",
            "hachoir.parser.video.flv",
            "hachoir.parser.video.fourcc",
            "hachoir.parser.video.mov",
            "hachoir.parser.video.mpeg_ts",
            "hachoir.parser.video.mpeg_video",
            "hachoir.regex",
            "hachoir.regex.parser",
            "hachoir.regex.pattern",
            "hachoir.regex.regex",
            "hachoir.stream",
            "hachoir.stream.input",
            "hachoir.stream.input_helper",
            "hachoir.stream.output",
            "hachoir.stream.stream",
            "hachoir.strip",
            "hachoir.subfile",
            "hachoir.subfile.data_rate",
            "hachoir.subfile.output",
            "hachoir.subfile.pattern",
            "hachoir.subfile.search",
            "hachoir.subfile.version",
            "hachoir.test",
            "hachoir.urwid_ui",
            "hachoir.version"
        ],
        "version": "3.0a1.post2"
    },
    "hack": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hack-assemble": {
        "cmdline": [],
        "modules": [
            "hack_assemble",
            "hack_assemble.assemble",
            "hack_assemble.code",
            "hack_assemble.parser",
            "hack_assemble.utils"
        ],
        "version": "0.1"
    },
    "hack-assembler": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "hack-exe": {
        "cmdline": [
            "hack.exe"
        ],
        "modules": [
            "hack_exe",
            "hack_exe.hack_exe"
        ],
        "version": "0.2"
    },
    "hack-function": {
        "cmdline": [],
        "modules": [
            "hack_function"
        ],
        "version": "1.2.0"
    },
    "hack12306": {
        "cmdline": [],
        "modules": [
            "hack12306",
            "hack12306.auth",
            "hack12306.base",
            "hack12306.constants",
            "hack12306.exceptions",
            "hack12306.order",
            "hack12306.pay",
            "hack12306.query",
            "hack12306.settings",
            "hack12306.user",
            "hack12306.utils",
            "tests",
            "tests.config",
            "tests.test_auth",
            "tests.test_order",
            "tests.test_pay",
            "tests.test_query",
            "tests.test_user"
        ],
        "version": "0.1.20"
    },
    "hackattack-awareness-matrix": {
        "cmdline": [],
        "modules": [
            "hackattack_awa_matrix",
            "hackattack_awa_matrix.auth",
            "hackattack_awa_matrix.awarenessmeasures",
            "hackattack_awa_matrix.command_line",
            "hackattack_awa_matrix.countermeasures",
            "hackattack_awa_matrix.db",
            "hackattack_awa_matrix.employee",
            "hackattack_awa_matrix.project",
            "hackattack_awa_matrix.threat"
        ],
        "version": "0.7.3"
    },
    "hackbeil": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hackcaptcha": {
        "cmdline": [],
        "modules": [
            "hackcaptcha",
            "hackcaptcha.algorithms",
            "hackcaptcha.algorithms.click",
            "hackcaptcha.algorithms.click.zt12306",
            "hackcaptcha.algorithms.digital",
            "hackcaptcha.algorithms.slider",
            "hackcaptcha.algorithms.slider.canny",
            "hackcaptcha.crackers",
            "hackcaptcha.webapis",
            "hackcaptcha.webapis.click",
            "hackcaptcha.webapis.digital",
            "hackcaptcha.webapis.digital.baidu",
            "hackcaptcha.webapis.slider"
        ],
        "version": "0.0.1"
    },
    "hackchat": {
        "cmdline": [],
        "modules": [
            "hackchat"
        ],
        "version": "0.2.0"
    },
    "hackclub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hackcmds": {
        "cmdline": [
            "init.sh"
        ],
        "modules": [
            "Hacker",
            "Hacker.ini",
            "Hacker.ini.TEMPLATES",
            "Hacker.ini.settings",
            "Hacker.libs",
            "Hacker.libs.cmd",
            "Hacker.libs.hackerlib",
            "Hacker.libs.networklib",
            "Hacker.libs.socialdatalib",
            "Hacker.modules",
            "Hacker.modules.Code",
            "Hacker.modules.Social",
            "Hacker.modules.TableW",
            "Hacker.modules.U"
        ],
        "version": "5.2"
    },
    "hackdamdyscompcheck": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hackday-bot": {
        "cmdline": [],
        "modules": [
            "hackday_bot",
            "hackday_bot.bot",
            "hackday_bot.cli",
            "hackday_bot.const",
            "hackday_bot.members",
            "hackday_bot.util"
        ],
        "version": "0.3.0"
    },
    "hackduck": {
        "cmdline": [
            "hackduck"
        ],
        "modules": [
            "HackDuck",
            "HackDuck.main"
        ],
        "version": "0.1.5"
    },
    "hacked-http": {
        "cmdline": [],
        "modules": [
            "hacked_http",
            "hacked_http._httplib",
            "hacked_http._urllib2"
        ],
        "version": "0.0.1"
    },
    "hackedit": {
        "cmdline": [],
        "modules": [
            "@package@",
            "hackedit",
            "hackedit.api",
            "hackedit.api._shared",
            "hackedit.api.editor",
            "hackedit.api.events",
            "hackedit.api.gettext",
            "hackedit.api.index",
            "hackedit.api.interpreters",
            "hackedit.api.plugins",
            "hackedit.api.project",
            "hackedit.api.shortcuts",
            "hackedit.api.signals",
            "hackedit.api.special_icons",
            "hackedit.api.system",
            "hackedit.api.tasks",
            "hackedit.api.utils",
            "hackedit.api.versions",
            "hackedit.api.widgets",
            "hackedit.api.window",
            "hackedit.app",
            "hackedit.app.application",
            "hackedit.app.argparser",
            "hackedit.app.common",
            "hackedit.app.dialogs",
            "hackedit.app.dialogs.dlg_about",
            "hackedit.app.dialogs.dlg_ignore",
            "hackedit.app.dialogs.dlg_template_answers",
            "hackedit.app.dialogs.open_path",
            "hackedit.app.dialogs.preferences",
            "hackedit.app.dialogs.workspace",
            "hackedit.app.docks",
            "hackedit.app.environ",
            "hackedit.app.events",
            "hackedit.app.forms",
            "hackedit.app.forms.dlg_about_ui",
            "hackedit.app.forms.dlg_add_template_source_ui",
            "hackedit.app.forms.dlg_find_replace_ui",
            "hackedit.app.forms.dlg_ignore_file_ui",
            "hackedit.app.forms.dlg_open_ui",
            "hackedit.app.forms.dlg_preferences_ui",
            "hackedit.app.forms.dlg_progress_ui",
            "hackedit.app.forms.dlg_run_process_ui",
            "hackedit.app.forms.dlg_script_run_config_ui",
            "hackedit.app.forms.dlg_select_workspaces_ui",
            "hackedit.app.forms.dlg_template_vars_ui",
            "hackedit.app.forms.dlg_terminal_history_ui",
            "hackedit.app.forms.event_history_widget_ui",
            "hackedit.app.forms.event_widget_ui",
            "hackedit.app.forms.hackedit_rc",
            "hackedit.app.forms.locator_ui",
            "hackedit.app.forms.main_window_ui",
            "hackedit.app.forms.run_widget_ui",
            "hackedit.app.forms.settings_page_behaviour_ui",
            "hackedit.app.forms.settings_page_editor_colors_ui",
            "hackedit.app.forms.settings_page_editor_display_ui",
            "hackedit.app.forms.settings_page_editor_ui",
            "hackedit.app.forms.settings_page_environment_ui",
            "hackedit.app.forms.settings_page_indexing_ui",
            "hackedit.app.forms.settings_page_mimetypes_ui",
            "hackedit.app.forms.settings_page_notifications_ui",
            "hackedit.app.forms.settings_page_shortcuts_ui",
            "hackedit.app.forms.settings_page_templates_ui",
            "hackedit.app.forms.settings_page_workspaces_ui",
            "hackedit.app.forms.task_widget_ui",
            "hackedit.app.forms.terminal_widget_ui",
            "hackedit.app.forms.welcome_window_ui",
            "hackedit.app.forms.wizard_new_ui",
            "hackedit.app.generic_pyqode_server",
            "hackedit.app.icons",
            "hackedit.app.index",
            "hackedit.app.index.backend",
            "hackedit.app.index.db",
            "hackedit.app.ipc",
            "hackedit.app.ipc.client",
            "hackedit.app.ipc.server",
            "hackedit.app.ipc.utils",
            "hackedit.app.logger",
            "hackedit.app.main_window",
            "hackedit.app.mime_types",
            "hackedit.app.pip_tools",
            "hackedit.app.plugin_manager",
            "hackedit.app.project",
            "hackedit.app.settings",
            "hackedit.app.tasks",
            "hackedit.app.templates",
            "hackedit.app.versions",
            "hackedit.app.welcome_window",
            "hackedit.app.widgets",
            "hackedit.app.widgets.html_delegate",
            "hackedit.app.widgets.locator",
            "hackedit.app.widgets.preference_pages",
            "hackedit.app.widgets.preference_pages.behaviour",
            "hackedit.app.widgets.preference_pages.editor",
            "hackedit.app.widgets.preference_pages.editor_colors",
            "hackedit.app.widgets.preference_pages.editor_display",
            "hackedit.app.widgets.preference_pages.environment",
            "hackedit.app.widgets.preference_pages.indexing",
            "hackedit.app.widgets.preference_pages.mimetypes",
            "hackedit.app.widgets.preference_pages.notifications",
            "hackedit.app.widgets.preference_pages.shortcuts",
            "hackedit.app.widgets.preference_pages.templates",
            "hackedit.app.widgets.preference_pages.workspaces",
            "hackedit.app.widgets.recents",
            "hackedit.app.wizards",
            "hackedit.app.wizards.new",
            "hackedit.app.workspaces",
            "hackedit.console",
            "hackedit.main",
            "hackedit.plugins",
            "hackedit.plugins.documents",
            "hackedit.plugins.editors",
            "hackedit.plugins.find_replace",
            "hackedit.plugins.html_preview",
            "hackedit.plugins.image_viewer",
            "hackedit.plugins.outline",
            "hackedit.plugins.terminal",
            "hackedit.plugins.workspaces",
            "hackedit.styles",
            "hackedit.styles.arkdark",
            "hackedit.styles.aube",
            "hackedit.styles.crepuscule",
            "hackedit.styles.midnadark",
            "hackedit.vendor",
            "hackedit.vendor.binaryornot",
            "hackedit.vendor.binaryornot.check",
            "hackedit.vendor.binaryornot.helpers",
            "hackedit.vendor.chardet",
            "hackedit.vendor.chardet.big5freq",
            "hackedit.vendor.chardet.big5prober",
            "hackedit.vendor.chardet.chardetect",
            "hackedit.vendor.chardet.chardistribution",
            "hackedit.vendor.chardet.charsetgroupprober",
            "hackedit.vendor.chardet.charsetprober",
            "hackedit.vendor.chardet.codingstatemachine",
            "hackedit.vendor.chardet.compat",
            "hackedit.vendor.chardet.constants",
            "hackedit.vendor.chardet.cp949prober",
            "hackedit.vendor.chardet.escprober",
            "hackedit.vendor.chardet.escsm",
            "hackedit.vendor.chardet.eucjpprober",
            "hackedit.vendor.chardet.euckrfreq",
            "hackedit.vendor.chardet.euckrprober",
            "hackedit.vendor.chardet.euctwfreq",
            "hackedit.vendor.chardet.euctwprober",
            "hackedit.vendor.chardet.gb2312freq",
            "hackedit.vendor.chardet.gb2312prober",
            "hackedit.vendor.chardet.hebrewprober",
            "hackedit.vendor.chardet.jisfreq",
            "hackedit.vendor.chardet.jpcntx",
            "hackedit.vendor.chardet.langbulgarianmodel",
            "hackedit.vendor.chardet.langcyrillicmodel",
            "hackedit.vendor.chardet.langgreekmodel",
            "hackedit.vendor.chardet.langhebrewmodel",
            "hackedit.vendor.chardet.langhungarianmodel",
            "hackedit.vendor.chardet.langthaimodel",
            "hackedit.vendor.chardet.latin1prober",
            "hackedit.vendor.chardet.mbcharsetprober",
            "hackedit.vendor.chardet.mbcsgroupprober",
            "hackedit.vendor.chardet.mbcssm",
            "hackedit.vendor.chardet.sbcharsetprober",
            "hackedit.vendor.chardet.sbcsgroupprober",
            "hackedit.vendor.chardet.sjisprober",
            "hackedit.vendor.chardet.universaldetector",
            "hackedit.vendor.chardet.utf8prober",
            "hackedit.vendor.colorama",
            "hackedit.vendor.colorama.ansi",
            "hackedit.vendor.colorama.ansitowin32",
            "hackedit.vendor.colorama.initialise",
            "hackedit.vendor.colorama.win32",
            "hackedit.vendor.colorama.winterm",
            "hackedit.vendor.coloredlogs",
            "hackedit.vendor.coloredlogs.cli",
            "hackedit.vendor.coloredlogs.converter",
            "hackedit.vendor.coloredlogs.demo",
            "hackedit.vendor.coloredlogs.syslog",
            "hackedit.vendor.coloredlogs.tests",
            "hackedit.vendor.future",
            "hackedit.vendor.future.backports",
            "hackedit.vendor.future.backports._markupbase",
            "hackedit.vendor.future.backports.datetime",
            "hackedit.vendor.future.backports.email",
            "hackedit.vendor.future.backports.email._encoded_words",
            "hackedit.vendor.future.backports.email._header_value_parser",
            "hackedit.vendor.future.backports.email._parseaddr",
            "hackedit.vendor.future.backports.email._policybase",
            "hackedit.vendor.future.backports.email.base64mime",
            "hackedit.vendor.future.backports.email.charset",
            "hackedit.vendor.future.backports.email.encoders",
            "hackedit.vendor.future.backports.email.errors",
            "hackedit.vendor.future.backports.email.feedparser",
            "hackedit.vendor.future.backports.email.generator",
            "hackedit.vendor.future.backports.email.header",
            "hackedit.vendor.future.backports.email.headerregistry",
            "hackedit.vendor.future.backports.email.iterators",
            "hackedit.vendor.future.backports.email.message",
            "hackedit.vendor.future.backports.email.mime",
            "hackedit.vendor.future.backports.email.mime.application",
            "hackedit.vendor.future.backports.email.mime.audio",
            "hackedit.vendor.future.backports.email.mime.base",
            "hackedit.vendor.future.backports.email.mime.image",
            "hackedit.vendor.future.backports.email.mime.message",
            "hackedit.vendor.future.backports.email.mime.multipart",
            "hackedit.vendor.future.backports.email.mime.nonmultipart",
            "hackedit.vendor.future.backports.email.mime.text",
            "hackedit.vendor.future.backports.email.parser",
            "hackedit.vendor.future.backports.email.policy",
            "hackedit.vendor.future.backports.email.quoprimime",
            "hackedit.vendor.future.backports.email.utils",
            "hackedit.vendor.future.backports.html",
            "hackedit.vendor.future.backports.html.entities",
            "hackedit.vendor.future.backports.html.parser",
            "hackedit.vendor.future.backports.http",
            "hackedit.vendor.future.backports.http.client",
            "hackedit.vendor.future.backports.http.cookiejar",
            "hackedit.vendor.future.backports.http.cookies",
            "hackedit.vendor.future.backports.http.server",
            "hackedit.vendor.future.backports.misc",
            "hackedit.vendor.future.backports.socket",
            "hackedit.vendor.future.backports.socketserver",
            "hackedit.vendor.future.backports.test",
            "hackedit.vendor.future.backports.test.pystone",
            "hackedit.vendor.future.backports.test.ssl_servers",
            "hackedit.vendor.future.backports.test.support",
            "hackedit.vendor.future.backports.total_ordering",
            "hackedit.vendor.future.backports.urllib",
            "hackedit.vendor.future.backports.urllib.error",
            "hackedit.vendor.future.backports.urllib.parse",
            "hackedit.vendor.future.backports.urllib.request",
            "hackedit.vendor.future.backports.urllib.response",
            "hackedit.vendor.future.backports.urllib.robotparser",
            "hackedit.vendor.future.backports.xmlrpc",
            "hackedit.vendor.future.backports.xmlrpc.client",
            "hackedit.vendor.future.backports.xmlrpc.server",
            "hackedit.vendor.future.builtins",
            "hackedit.vendor.future.builtins.disabled",
            "hackedit.vendor.future.builtins.iterators",
            "hackedit.vendor.future.builtins.misc",
            "hackedit.vendor.future.builtins.newnext",
            "hackedit.vendor.future.builtins.newround",
            "hackedit.vendor.future.builtins.newsuper",
            "hackedit.vendor.future.moves",
            "hackedit.vendor.future.moves._dummy_thread",
            "hackedit.vendor.future.moves._markupbase",
            "hackedit.vendor.future.moves._thread",
            "hackedit.vendor.future.moves.builtins",
            "hackedit.vendor.future.moves.collections",
            "hackedit.vendor.future.moves.configparser",
            "hackedit.vendor.future.moves.copyreg",
            "hackedit.vendor.future.moves.dbm",
            "hackedit.vendor.future.moves.dbm.dumb",
            "hackedit.vendor.future.moves.dbm.gnu",
            "hackedit.vendor.future.moves.dbm.ndbm",
            "hackedit.vendor.future.moves.html",
            "hackedit.vendor.future.moves.html.entities",
            "hackedit.vendor.future.moves.html.parser",
            "hackedit.vendor.future.moves.http",
            "hackedit.vendor.future.moves.http.client",
            "hackedit.vendor.future.moves.http.cookiejar",
            "hackedit.vendor.future.moves.http.cookies",
            "hackedit.vendor.future.moves.http.server",
            "hackedit.vendor.future.moves.itertools",
            "hackedit.vendor.future.moves.pickle",
            "hackedit.vendor.future.moves.queue",
            "hackedit.vendor.future.moves.reprlib",
            "hackedit.vendor.future.moves.socketserver",
            "hackedit.vendor.future.moves.subprocess",
            "hackedit.vendor.future.moves.sys",
            "hackedit.vendor.future.moves.test",
            "hackedit.vendor.future.moves.test.support",
            "hackedit.vendor.future.moves.tkinter",
            "hackedit.vendor.future.moves.tkinter.colorchooser",
            "hackedit.vendor.future.moves.tkinter.commondialog",
            "hackedit.vendor.future.moves.tkinter.constants",
            "hackedit.vendor.future.moves.tkinter.dialog",
            "hackedit.vendor.future.moves.tkinter.dnd",
            "hackedit.vendor.future.moves.tkinter.filedialog",
            "hackedit.vendor.future.moves.tkinter.font",
            "hackedit.vendor.future.moves.tkinter.messagebox",
            "hackedit.vendor.future.moves.tkinter.scrolledtext",
            "hackedit.vendor.future.moves.tkinter.simpledialog",
            "hackedit.vendor.future.moves.tkinter.tix",
            "hackedit.vendor.future.moves.tkinter.ttk",
            "hackedit.vendor.future.moves.urllib",
            "hackedit.vendor.future.moves.urllib.error",
            "hackedit.vendor.future.moves.urllib.parse",
            "hackedit.vendor.future.moves.urllib.request",
            "hackedit.vendor.future.moves.urllib.response",
            "hackedit.vendor.future.moves.urllib.robotparser",
            "hackedit.vendor.future.moves.winreg",
            "hackedit.vendor.future.moves.xmlrpc",
            "hackedit.vendor.future.moves.xmlrpc.client",
            "hackedit.vendor.future.moves.xmlrpc.server",
            "hackedit.vendor.future.standard_library",
            "hackedit.vendor.future.tests",
            "hackedit.vendor.future.tests.base",
            "hackedit.vendor.future.types",
            "hackedit.vendor.future.types.newbytes",
            "hackedit.vendor.future.types.newdict",
            "hackedit.vendor.future.types.newint",
            "hackedit.vendor.future.types.newlist",
            "hackedit.vendor.future.types.newmemoryview",
            "hackedit.vendor.future.types.newobject",
            "hackedit.vendor.future.types.newopen",
            "hackedit.vendor.future.types.newrange",
            "hackedit.vendor.future.types.newstr",
            "hackedit.vendor.future.utils",
            "hackedit.vendor.future.utils.surrogateescape",
            "hackedit.vendor.humanfriendly",
            "hackedit.vendor.humanfriendly.cli",
            "hackedit.vendor.humanfriendly.compat",
            "hackedit.vendor.humanfriendly.prompts",
            "hackedit.vendor.humanfriendly.sphinx",
            "hackedit.vendor.humanfriendly.tables",
            "hackedit.vendor.humanfriendly.terminal",
            "hackedit.vendor.humanfriendly.tests",
            "hackedit.vendor.humanfriendly.text",
            "hackedit.vendor.humanfriendly.usage",
            "hackedit.vendor.jedi",
            "hackedit.vendor.jedi._compatibility",
            "hackedit.vendor.jedi.api",
            "hackedit.vendor.jedi.api.classes",
            "hackedit.vendor.jedi.api.helpers",
            "hackedit.vendor.jedi.api.interpreter",
            "hackedit.vendor.jedi.api.keywords",
            "hackedit.vendor.jedi.api.replstartup",
            "hackedit.vendor.jedi.api.usages",
            "hackedit.vendor.jedi.cache",
            "hackedit.vendor.jedi.common",
            "hackedit.vendor.jedi.debug",
            "hackedit.vendor.jedi.evaluate",
            "hackedit.vendor.jedi.evaluate.analysis",
            "hackedit.vendor.jedi.evaluate.cache",
            "hackedit.vendor.jedi.evaluate.compiled",
            "hackedit.vendor.jedi.evaluate.compiled.fake",
            "hackedit.vendor.jedi.evaluate.docstrings",
            "hackedit.vendor.jedi.evaluate.dynamic",
            "hackedit.vendor.jedi.evaluate.finder",
            "hackedit.vendor.jedi.evaluate.flow_analysis",
            "hackedit.vendor.jedi.evaluate.helpers",
            "hackedit.vendor.jedi.evaluate.imports",
            "hackedit.vendor.jedi.evaluate.iterable",
            "hackedit.vendor.jedi.evaluate.param",
            "hackedit.vendor.jedi.evaluate.precedence",
            "hackedit.vendor.jedi.evaluate.recursion",
            "hackedit.vendor.jedi.evaluate.representation",
            "hackedit.vendor.jedi.evaluate.site",
            "hackedit.vendor.jedi.evaluate.stdlib",
            "hackedit.vendor.jedi.evaluate.sys_path",
            "hackedit.vendor.jedi.parser",
            "hackedit.vendor.jedi.parser.fast",
            "hackedit.vendor.jedi.parser.pgen2",
            "hackedit.vendor.jedi.parser.pgen2.grammar",
            "hackedit.vendor.jedi.parser.pgen2.parse",
            "hackedit.vendor.jedi.parser.pgen2.pgen",
            "hackedit.vendor.jedi.parser.token",
            "hackedit.vendor.jedi.parser.tokenize",
            "hackedit.vendor.jedi.parser.tree",
            "hackedit.vendor.jedi.parser.user_context",
            "hackedit.vendor.jedi.refactoring",
            "hackedit.vendor.jedi.settings",
            "hackedit.vendor.jedi.utils",
            "hackedit.vendor.keyring",
            "hackedit.vendor.keyring.backend",
            "hackedit.vendor.keyring.backends",
            "hackedit.vendor.keyring.backends.OS_X",
            "hackedit.vendor.keyring.backends.SecretService",
            "hackedit.vendor.keyring.backends.Windows",
            "hackedit.vendor.keyring.backends._OS_X_API",
            "hackedit.vendor.keyring.backends.fail",
            "hackedit.vendor.keyring.backends.kwallet",
            "hackedit.vendor.keyring.cli",
            "hackedit.vendor.keyring.core",
            "hackedit.vendor.keyring.credentials",
            "hackedit.vendor.keyring.errors",
            "hackedit.vendor.keyring.getpassbackend",
            "hackedit.vendor.keyring.http",
            "hackedit.vendor.keyring.py27compat",
            "hackedit.vendor.keyring.py33compat",
            "hackedit.vendor.keyring.tests",
            "hackedit.vendor.keyring.tests.backends",
            "hackedit.vendor.keyring.tests.backends.test_OS_X",
            "hackedit.vendor.keyring.tests.backends.test_SecretService",
            "hackedit.vendor.keyring.tests.backends.test_Windows",
            "hackedit.vendor.keyring.tests.backends.test_kwallet",
            "hackedit.vendor.keyring.tests.test_backend",
            "hackedit.vendor.keyring.tests.util",
            "hackedit.vendor.keyring.util",
            "hackedit.vendor.keyring.util.escape",
            "hackedit.vendor.keyring.util.platform_",
            "hackedit.vendor.keyring.util.properties",
            "hackedit.vendor.pep8",
            "hackedit.vendor.pyflakes",
            "hackedit.vendor.pyflakes.api",
            "hackedit.vendor.pyflakes.checker",
            "hackedit.vendor.pyflakes.messages",
            "hackedit.vendor.pyflakes.reporter",
            "hackedit.vendor.pyflakes.scripts",
            "hackedit.vendor.pyflakes.scripts.pyflakes",
            "hackedit.vendor.pyflakes.test",
            "hackedit.vendor.pyflakes.test.harness",
            "hackedit.vendor.pyflakes.test.test_api",
            "hackedit.vendor.pyflakes.test.test_doctests",
            "hackedit.vendor.pyflakes.test.test_imports",
            "hackedit.vendor.pyflakes.test.test_other",
            "hackedit.vendor.pyflakes.test.test_return_with_arguments_inside_generator",
            "hackedit.vendor.pyflakes.test.test_undefined_names",
            "hackedit.vendor.pygments",
            "hackedit.vendor.pygments.cmdline",
            "hackedit.vendor.pygments.console",
            "hackedit.vendor.pygments.filter",
            "hackedit.vendor.pygments.filters",
            "hackedit.vendor.pygments.formatter",
            "hackedit.vendor.pygments.formatters",
            "hackedit.vendor.pygments.formatters._mapping",
            "hackedit.vendor.pygments.formatters.bbcode",
            "hackedit.vendor.pygments.formatters.html",
            "hackedit.vendor.pygments.formatters.img",
            "hackedit.vendor.pygments.formatters.irc",
            "hackedit.vendor.pygments.formatters.latex",
            "hackedit.vendor.pygments.formatters.other",
            "hackedit.vendor.pygments.formatters.rtf",
            "hackedit.vendor.pygments.formatters.svg",
            "hackedit.vendor.pygments.formatters.terminal",
            "hackedit.vendor.pygments.formatters.terminal256",
            "hackedit.vendor.pygments.lexer",
            "hackedit.vendor.pygments.lexers",
            "hackedit.vendor.pygments.lexers._asy_builtins",
            "hackedit.vendor.pygments.lexers._cl_builtins",
            "hackedit.vendor.pygments.lexers._cocoa_builtins",
            "hackedit.vendor.pygments.lexers._csound_builtins",
            "hackedit.vendor.pygments.lexers._lasso_builtins",
            "hackedit.vendor.pygments.lexers._lua_builtins",
            "hackedit.vendor.pygments.lexers._mapping",
            "hackedit.vendor.pygments.lexers._mql_builtins",
            "hackedit.vendor.pygments.lexers._openedge_builtins",
            "hackedit.vendor.pygments.lexers._php_builtins",
            "hackedit.vendor.pygments.lexers._postgres_builtins",
            "hackedit.vendor.pygments.lexers._scilab_builtins",
            "hackedit.vendor.pygments.lexers._sourcemod_builtins",
            "hackedit.vendor.pygments.lexers._stan_builtins",
            "hackedit.vendor.pygments.lexers._vim_builtins",
            "hackedit.vendor.pygments.lexers.actionscript",
            "hackedit.vendor.pygments.lexers.agile",
            "hackedit.vendor.pygments.lexers.algebra",
            "hackedit.vendor.pygments.lexers.ambient",
            "hackedit.vendor.pygments.lexers.apl",
            "hackedit.vendor.pygments.lexers.archetype",
            "hackedit.vendor.pygments.lexers.asm",
            "hackedit.vendor.pygments.lexers.automation",
            "hackedit.vendor.pygments.lexers.basic",
            "hackedit.vendor.pygments.lexers.business",
            "hackedit.vendor.pygments.lexers.c_cpp",
            "hackedit.vendor.pygments.lexers.c_like",
            "hackedit.vendor.pygments.lexers.chapel",
            "hackedit.vendor.pygments.lexers.compiled",
            "hackedit.vendor.pygments.lexers.configs",
            "hackedit.vendor.pygments.lexers.console",
            "hackedit.vendor.pygments.lexers.csound",
            "hackedit.vendor.pygments.lexers.css",
            "hackedit.vendor.pygments.lexers.d",
            "hackedit.vendor.pygments.lexers.dalvik",
            "hackedit.vendor.pygments.lexers.data",
            "hackedit.vendor.pygments.lexers.diff",
            "hackedit.vendor.pygments.lexers.dotnet",
            "hackedit.vendor.pygments.lexers.dsls",
            "hackedit.vendor.pygments.lexers.dylan",
            "hackedit.vendor.pygments.lexers.ecl",
            "hackedit.vendor.pygments.lexers.eiffel",
            "hackedit.vendor.pygments.lexers.elm",
            "hackedit.vendor.pygments.lexers.erlang",
            "hackedit.vendor.pygments.lexers.esoteric",
            "hackedit.vendor.pygments.lexers.ezhil",
            "hackedit.vendor.pygments.lexers.factor",
            "hackedit.vendor.pygments.lexers.fantom",
            "hackedit.vendor.pygments.lexers.felix",
            "hackedit.vendor.pygments.lexers.fortran",
            "hackedit.vendor.pygments.lexers.foxpro",
            "hackedit.vendor.pygments.lexers.functional",
            "hackedit.vendor.pygments.lexers.go",
            "hackedit.vendor.pygments.lexers.grammar_notation",
            "hackedit.vendor.pygments.lexers.graph",
            "hackedit.vendor.pygments.lexers.graphics",
            "hackedit.vendor.pygments.lexers.haskell",
            "hackedit.vendor.pygments.lexers.haxe",
            "hackedit.vendor.pygments.lexers.hdl",
            "hackedit.vendor.pygments.lexers.hexdump",
            "hackedit.vendor.pygments.lexers.html",
            "hackedit.vendor.pygments.lexers.idl",
            "hackedit.vendor.pygments.lexers.igor",
            "hackedit.vendor.pygments.lexers.inferno",
            "hackedit.vendor.pygments.lexers.installers",
            "hackedit.vendor.pygments.lexers.int_fiction",
            "hackedit.vendor.pygments.lexers.iolang",
            "hackedit.vendor.pygments.lexers.j",
            "hackedit.vendor.pygments.lexers.javascript",
            "hackedit.vendor.pygments.lexers.julia",
            "hackedit.vendor.pygments.lexers.jvm",
            "hackedit.vendor.pygments.lexers.lisp",
            "hackedit.vendor.pygments.lexers.make",
            "hackedit.vendor.pygments.lexers.markup",
            "hackedit.vendor.pygments.lexers.math",
            "hackedit.vendor.pygments.lexers.matlab",
            "hackedit.vendor.pygments.lexers.ml",
            "hackedit.vendor.pygments.lexers.modeling",
            "hackedit.vendor.pygments.lexers.modula2",
            "hackedit.vendor.pygments.lexers.nimrod",
            "hackedit.vendor.pygments.lexers.nit",
            "hackedit.vendor.pygments.lexers.nix",
            "hackedit.vendor.pygments.lexers.oberon",
            "hackedit.vendor.pygments.lexers.objective",
            "hackedit.vendor.pygments.lexers.ooc",
            "hackedit.vendor.pygments.lexers.other",
            "hackedit.vendor.pygments.lexers.parasail",
            "hackedit.vendor.pygments.lexers.parsers",
            "hackedit.vendor.pygments.lexers.pascal",
            "hackedit.vendor.pygments.lexers.pawn",
            "hackedit.vendor.pygments.lexers.perl",
            "hackedit.vendor.pygments.lexers.php",
            "hackedit.vendor.pygments.lexers.praat",
            "hackedit.vendor.pygments.lexers.prolog",
            "hackedit.vendor.pygments.lexers.python",
            "hackedit.vendor.pygments.lexers.qvt",
            "hackedit.vendor.pygments.lexers.r",
            "hackedit.vendor.pygments.lexers.rdf",
            "hackedit.vendor.pygments.lexers.rebol",
            "hackedit.vendor.pygments.lexers.resource",
            "hackedit.vendor.pygments.lexers.roboconf",
            "hackedit.vendor.pygments.lexers.robotframework",
            "hackedit.vendor.pygments.lexers.ruby",
            "hackedit.vendor.pygments.lexers.rust",
            "hackedit.vendor.pygments.lexers.scripting",
            "hackedit.vendor.pygments.lexers.shell",
            "hackedit.vendor.pygments.lexers.smalltalk",
            "hackedit.vendor.pygments.lexers.snobol",
            "hackedit.vendor.pygments.lexers.special",
            "hackedit.vendor.pygments.lexers.sql",
            "hackedit.vendor.pygments.lexers.supercollider",
            "hackedit.vendor.pygments.lexers.tcl",
            "hackedit.vendor.pygments.lexers.templates",
            "hackedit.vendor.pygments.lexers.testing",
            "hackedit.vendor.pygments.lexers.text",
            "hackedit.vendor.pygments.lexers.textedit",
            "hackedit.vendor.pygments.lexers.textfmts",
            "hackedit.vendor.pygments.lexers.theorem",
            "hackedit.vendor.pygments.lexers.trafficscript",
            "hackedit.vendor.pygments.lexers.urbi",
            "hackedit.vendor.pygments.lexers.web",
            "hackedit.vendor.pygments.lexers.webmisc",
            "hackedit.vendor.pygments.lexers.x10",
            "hackedit.vendor.pygments.modeline",
            "hackedit.vendor.pygments.plugin",
            "hackedit.vendor.pygments.regexopt",
            "hackedit.vendor.pygments.scanner",
            "hackedit.vendor.pygments.sphinxext",
            "hackedit.vendor.pygments.style",
            "hackedit.vendor.pygments.styles",
            "hackedit.vendor.pygments.styles.algol",
            "hackedit.vendor.pygments.styles.algol_nu",
            "hackedit.vendor.pygments.styles.arduino",
            "hackedit.vendor.pygments.styles.autumn",
            "hackedit.vendor.pygments.styles.borland",
            "hackedit.vendor.pygments.styles.bw",
            "hackedit.vendor.pygments.styles.colorful",
            "hackedit.vendor.pygments.styles.default",
            "hackedit.vendor.pygments.styles.emacs",
            "hackedit.vendor.pygments.styles.friendly",
            "hackedit.vendor.pygments.styles.fruity",
            "hackedit.vendor.pygments.styles.igor",
            "hackedit.vendor.pygments.styles.lovelace",
            "hackedit.vendor.pygments.styles.manni",
            "hackedit.vendor.pygments.styles.monokai",
            "hackedit.vendor.pygments.styles.murphy",
            "hackedit.vendor.pygments.styles.native",
            "hackedit.vendor.pygments.styles.paraiso_dark",
            "hackedit.vendor.pygments.styles.paraiso_light",
            "hackedit.vendor.pygments.styles.pastie",
            "hackedit.vendor.pygments.styles.perldoc",
            "hackedit.vendor.pygments.styles.rrt",
            "hackedit.vendor.pygments.styles.tango",
            "hackedit.vendor.pygments.styles.trac",
            "hackedit.vendor.pygments.styles.vim",
            "hackedit.vendor.pygments.styles.vs",
            "hackedit.vendor.pygments.styles.xcode",
            "hackedit.vendor.pygments.token",
            "hackedit.vendor.pygments.unistring",
            "hackedit.vendor.pygments.util",
            "hackedit.vendor.pyqode",
            "hackedit.vendor.pyqode.cobol",
            "hackedit.vendor.pyqode.cobol._forms",
            "hackedit.vendor.pyqode.cobol._forms.resources_rc",
            "hackedit.vendor.pyqode.cobol.api",
            "hackedit.vendor.pyqode.cobol.api.folding",
            "hackedit.vendor.pyqode.cobol.api.icons",
            "hackedit.vendor.pyqode.cobol.api.keywords",
            "hackedit.vendor.pyqode.cobol.api.parsers",
            "hackedit.vendor.pyqode.cobol.api.parsers.names",
            "hackedit.vendor.pyqode.cobol.api.parsers.pic",
            "hackedit.vendor.pyqode.cobol.api.pic",
            "hackedit.vendor.pyqode.cobol.api.regex",
            "hackedit.vendor.pyqode.cobol.backend",
            "hackedit.vendor.pyqode.cobol.backend.server",
            "hackedit.vendor.pyqode.cobol.backend.workers",
            "hackedit.vendor.pyqode.cobol.modes",
            "hackedit.vendor.pyqode.cobol.modes.auto_indent",
            "hackedit.vendor.pyqode.cobol.modes.backspace",
            "hackedit.vendor.pyqode.cobol.modes.comments",
            "hackedit.vendor.pyqode.cobol.modes.goto",
            "hackedit.vendor.pyqode.cobol.modes.indenter",
            "hackedit.vendor.pyqode.cobol.modes.margins",
            "hackedit.vendor.pyqode.cobol.modes.pic_offset",
            "hackedit.vendor.pyqode.cobol.modes.sh",
            "hackedit.vendor.pyqode.cobol.widgets",
            "hackedit.vendor.pyqode.cobol.widgets.code_edit",
            "hackedit.vendor.pyqode.cobol.widgets.outline",
            "hackedit.vendor.pyqode.cobol.widgets.pic_offsets",
            "hackedit.vendor.pyqode.core",
            "hackedit.vendor.pyqode.core._designer_plugins",
            "hackedit.vendor.pyqode.core._designer_plugins.code_edit_plugin",
            "hackedit.vendor.pyqode.core._designer_plugins.errors_table_plugin",
            "hackedit.vendor.pyqode.core._designer_plugins.interactive_console_plugin",
            "hackedit.vendor.pyqode.core._designer_plugins.tab_widget_plugin",
            "hackedit.vendor.pyqode.core._forms",
            "hackedit.vendor.pyqode.core._forms.dlg_encodings_ui",
            "hackedit.vendor.pyqode.core._forms.dlg_goto_line_ui",
            "hackedit.vendor.pyqode.core._forms.dlg_preferred_encodings_editor_ui",
            "hackedit.vendor.pyqode.core._forms.dlg_unsaved_files_ui",
            "hackedit.vendor.pyqode.core._forms.pnl_encoding_ui",
            "hackedit.vendor.pyqode.core._forms.pnl_read_only_ui",
            "hackedit.vendor.pyqode.core._forms.popup_open_files_ui",
            "hackedit.vendor.pyqode.core._forms.pyqode_core_rc",
            "hackedit.vendor.pyqode.core._forms.search_panel_ui",
            "hackedit.vendor.pyqode.core.api",
            "hackedit.vendor.pyqode.core.api.client",
            "hackedit.vendor.pyqode.core.api.code_edit",
            "hackedit.vendor.pyqode.core.api.decoration",
            "hackedit.vendor.pyqode.core.api.encodings",
            "hackedit.vendor.pyqode.core.api.folding",
            "hackedit.vendor.pyqode.core.api.manager",
            "hackedit.vendor.pyqode.core.api.mode",
            "hackedit.vendor.pyqode.core.api.panel",
            "hackedit.vendor.pyqode.core.api.syntax_highlighter",
            "hackedit.vendor.pyqode.core.api.utils",
            "hackedit.vendor.pyqode.core.backend",
            "hackedit.vendor.pyqode.core.backend.server",
            "hackedit.vendor.pyqode.core.backend.workers",
            "hackedit.vendor.pyqode.core.cache",
            "hackedit.vendor.pyqode.core.dialogs",
            "hackedit.vendor.pyqode.core.dialogs.encodings",
            "hackedit.vendor.pyqode.core.dialogs.goto",
            "hackedit.vendor.pyqode.core.dialogs.unsaved_files",
            "hackedit.vendor.pyqode.core.icons",
            "hackedit.vendor.pyqode.core.managers",
            "hackedit.vendor.pyqode.core.managers.backend",
            "hackedit.vendor.pyqode.core.managers.decorations",
            "hackedit.vendor.pyqode.core.managers.file",
            "hackedit.vendor.pyqode.core.managers.modes",
            "hackedit.vendor.pyqode.core.managers.panels",
            "hackedit.vendor.pyqode.core.modes",
            "hackedit.vendor.pyqode.core.modes.autocomplete",
            "hackedit.vendor.pyqode.core.modes.autoindent",
            "hackedit.vendor.pyqode.core.modes.backspace",
            "hackedit.vendor.pyqode.core.modes.caret_line_highlight",
            "hackedit.vendor.pyqode.core.modes.case_converter",
            "hackedit.vendor.pyqode.core.modes.checker",
            "hackedit.vendor.pyqode.core.modes.code_completion",
            "hackedit.vendor.pyqode.core.modes.cursor_history",
            "hackedit.vendor.pyqode.core.modes.extended_selection",
            "hackedit.vendor.pyqode.core.modes.filewatcher",
            "hackedit.vendor.pyqode.core.modes.indenter",
            "hackedit.vendor.pyqode.core.modes.line_highlighter",
            "hackedit.vendor.pyqode.core.modes.matcher",
            "hackedit.vendor.pyqode.core.modes.occurences",
            "hackedit.vendor.pyqode.core.modes.outline",
            "hackedit.vendor.pyqode.core.modes.pygments_sh",
            "hackedit.vendor.pyqode.core.modes.right_margin",
            "hackedit.vendor.pyqode.core.modes.wordclick",
            "hackedit.vendor.pyqode.core.modes.zoom",
            "hackedit.vendor.pyqode.core.panels",
            "hackedit.vendor.pyqode.core.panels.checker",
            "hackedit.vendor.pyqode.core.panels.encodings",
            "hackedit.vendor.pyqode.core.panels.folding",
            "hackedit.vendor.pyqode.core.panels.global_checker",
            "hackedit.vendor.pyqode.core.panels.line_number",
            "hackedit.vendor.pyqode.core.panels.marker",
            "hackedit.vendor.pyqode.core.panels.read_only",
            "hackedit.vendor.pyqode.core.panels.search_and_replace",
            "hackedit.vendor.pyqode.core.share",
            "hackedit.vendor.pyqode.core.styles",
            "hackedit.vendor.pyqode.core.styles.darcula",
            "hackedit.vendor.pyqode.core.styles.qt",
            "hackedit.vendor.pyqode.core.tools",
            "hackedit.vendor.pyqode.core.tools.console",
            "hackedit.vendor.pyqode.core.widgets",
            "hackedit.vendor.pyqode.core.widgets._pty",
            "hackedit.vendor.pyqode.core.widgets.code_edits",
            "hackedit.vendor.pyqode.core.widgets.encodings",
            "hackedit.vendor.pyqode.core.widgets.errors_table",
            "hackedit.vendor.pyqode.core.widgets.file_icons_provider",
            "hackedit.vendor.pyqode.core.widgets.filesystem_treeview",
            "hackedit.vendor.pyqode.core.widgets.interactive",
            "hackedit.vendor.pyqode.core.widgets.menu_recents",
            "hackedit.vendor.pyqode.core.widgets.outline",
            "hackedit.vendor.pyqode.core.widgets.output_window",
            "hackedit.vendor.pyqode.core.widgets.preview",
            "hackedit.vendor.pyqode.core.widgets.prompt_line_edit",
            "hackedit.vendor.pyqode.core.widgets.pty_wrapper",
            "hackedit.vendor.pyqode.core.widgets.splittable_tab_widget",
            "hackedit.vendor.pyqode.core.widgets.tab_bar",
            "hackedit.vendor.pyqode.core.widgets.tabs",
            "hackedit.vendor.pyqode.core.widgets.terminal",
            "hackedit.vendor.pyqode.json",
            "hackedit.vendor.pyqode.json.api",
            "hackedit.vendor.pyqode.json.api.folding",
            "hackedit.vendor.pyqode.json.modes",
            "hackedit.vendor.pyqode.json.modes.autocomplete",
            "hackedit.vendor.pyqode.json.modes.autoindent",
            "hackedit.vendor.pyqode.json.modes.linter",
            "hackedit.vendor.pyqode.json.modes.sh",
            "hackedit.vendor.pyqode.json.panels",
            "hackedit.vendor.pyqode.json.panels.navigation",
            "hackedit.vendor.pyqode.json.widgets",
            "hackedit.vendor.pyqode.json.widgets.code_edit",
            "hackedit.vendor.pyqode.python",
            "hackedit.vendor.pyqode.python._forms",
            "hackedit.vendor.pyqode.python._forms.pyqode_python_icons_rc",
            "hackedit.vendor.pyqode.python.backend",
            "hackedit.vendor.pyqode.python.backend.pep8utils",
            "hackedit.vendor.pyqode.python.backend.server",
            "hackedit.vendor.pyqode.python.backend.workers",
            "hackedit.vendor.pyqode.python.designer_plugin",
            "hackedit.vendor.pyqode.python.folding",
            "hackedit.vendor.pyqode.python.managers",
            "hackedit.vendor.pyqode.python.managers.file",
            "hackedit.vendor.pyqode.python.modes",
            "hackedit.vendor.pyqode.python.modes.autocomplete",
            "hackedit.vendor.pyqode.python.modes.autoindent",
            "hackedit.vendor.pyqode.python.modes.calltips",
            "hackedit.vendor.pyqode.python.modes.comments",
            "hackedit.vendor.pyqode.python.modes.frosted_checker",
            "hackedit.vendor.pyqode.python.modes.goto_assignements",
            "hackedit.vendor.pyqode.python.modes.indenter",
            "hackedit.vendor.pyqode.python.modes.pep8_checker",
            "hackedit.vendor.pyqode.python.modes.sh",
            "hackedit.vendor.pyqode.python.panels",
            "hackedit.vendor.pyqode.python.panels.quick_doc",
            "hackedit.vendor.pyqode.python.panels.symbol_browser",
            "hackedit.vendor.pyqode.python.widgets",
            "hackedit.vendor.pyqode.python.widgets.code_edit",
            "hackedit.vendor.pyqode.python.widgets.console",
            "hackedit.vendor.pyqode.python.widgets.interactive",
            "hackedit.vendor.pyqode.python.widgets.outline",
            "hackedit.vendor.pyqode.qt",
            "hackedit.vendor.pyqode.qt.QtCore",
            "hackedit.vendor.pyqode.qt.QtDesigner",
            "hackedit.vendor.pyqode.qt.QtGui",
            "hackedit.vendor.pyqode.qt.QtNetwork",
            "hackedit.vendor.pyqode.qt.QtTest",
            "hackedit.vendor.pyqode.qt.QtWebWidgets",
            "hackedit.vendor.pyqode.qt.QtWidgets",
            "hackedit.vendor.pyqode.rst",
            "hackedit.vendor.pyqode.rst.backend",
            "hackedit.vendor.pyqode.rst.backend.server",
            "hackedit.vendor.pyqode.rst.backend.workers",
            "hackedit.vendor.pyqode.rst.modes",
            "hackedit.vendor.pyqode.rst.modes.sh",
            "hackedit.vendor.pyqode.rst.widgets",
            "hackedit.vendor.pyqode.rst.widgets.code_edit",
            "hackedit.vendor.qcrash",
            "hackedit.vendor.qcrash._dialogs",
            "hackedit.vendor.qcrash._dialogs.gh_login",
            "hackedit.vendor.qcrash._dialogs.report",
            "hackedit.vendor.qcrash._dialogs.review",
            "hackedit.vendor.qcrash._extlibs",
            "hackedit.vendor.qcrash._extlibs.github",
            "hackedit.vendor.qcrash._forms",
            "hackedit.vendor.qcrash._forms.dlg_github_login_ui",
            "hackedit.vendor.qcrash._forms.dlg_report_bug_ui",
            "hackedit.vendor.qcrash._forms.dlg_review_ui",
            "hackedit.vendor.qcrash._forms.qcrash_rc",
            "hackedit.vendor.qcrash._hooks",
            "hackedit.vendor.qcrash.api",
            "hackedit.vendor.qcrash.backends",
            "hackedit.vendor.qcrash.backends.base",
            "hackedit.vendor.qcrash.backends.email",
            "hackedit.vendor.qcrash.backends.github",
            "hackedit.vendor.qcrash.formatters",
            "hackedit.vendor.qcrash.formatters.base",
            "hackedit.vendor.qcrash.formatters.email",
            "hackedit.vendor.qcrash.formatters.markdown",
            "hackedit.vendor.qcrash.qt",
            "hackedit.vendor.qdarkstyle",
            "hackedit.vendor.qdarkstyle.compile_qrc",
            "hackedit.vendor.qdarkstyle.pyqt5_style_rc",
            "hackedit.vendor.qdarkstyle.pyqt_style_rc",
            "hackedit.vendor.qdarkstyle.pyside_style_rc",
            "hackedit.vendor.restructuredtext_lint",
            "hackedit.vendor.restructuredtext_lint.cli",
            "hackedit.vendor.restructuredtext_lint.lint",
            "hackedit.vendor.restructuredtext_lint.test",
            "hackedit.vendor.restructuredtext_lint.test.test",
            "my_package",
            "test_api",
            "test_api.test__shared",
            "test_api.test_editor",
            "test_api.test_events",
            "test_api.test_gettext",
            "test_api.test_index",
            "test_api.test_interpreters",
            "test_api.test_plugins",
            "test_api.test_project",
            "test_api.test_shortcuts",
            "test_api.test_signals",
            "test_api.test_special_icons",
            "test_api.test_system",
            "test_api.test_tasks",
            "test_api.test_utils",
            "test_api.test_versions",
            "test_api.test_widgets",
            "test_api.test_window",
            "test_app",
            "test_app.test_index",
            "test_app.test_index.test_backend",
            "test_app.test_index.test_db",
            "test_app.test_templates"
        ],
        "version": "1.0a2"
    },
    "hackedit-cobol": {
        "cmdline": [],
        "modules": [
            "hackedit_cobol",
            "hackedit_cobol.forms",
            "hackedit_cobol.forms.dlg_check_compiler_ui",
            "hackedit_cobol.forms.dlg_configure_project_ui",
            "hackedit_cobol.forms.dlg_dbpre_ui",
            "hackedit_cobol.forms.dlg_monospace_output_ui",
            "hackedit_cobol.forms.dlg_secondary_compilers_ui",
            "hackedit_cobol.forms.hackedit_cobol_rc",
            "hackedit_cobol.forms.preferences_editor_ui",
            "hackedit_cobol.forms.settings_page_compiler_ui",
            "hackedit_cobol.forms.settings_page_preparsers_ui",
            "hackedit_cobol.lib",
            "hackedit_cobol.lib.build_thread",
            "hackedit_cobol.lib.compiler",
            "hackedit_cobol.lib.dbpre",
            "hackedit_cobol.lib.dlg_check_compiler",
            "hackedit_cobol.lib.dlg_configure",
            "hackedit_cobol.lib.esql",
            "hackedit_cobol.lib.events",
            "hackedit_cobol.lib.linter",
            "hackedit_cobol.lib.manager_plugin_base",
            "hackedit_cobol.lib.msvc",
            "hackedit_cobol.lib.preparsers",
            "hackedit_cobol.lib.utils",
            "hackedit_cobol.plugins",
            "hackedit_cobol.plugins.compiler_preferences",
            "hackedit_cobol.plugins.editor",
            "hackedit_cobol.plugins.file_mode",
            "hackedit_cobol.plugins.icon_provider",
            "hackedit_cobol.plugins.index",
            "hackedit_cobol.plugins.indicators",
            "hackedit_cobol.plugins.offset",
            "hackedit_cobol.plugins.preparsers_preferences",
            "hackedit_cobol.plugins.project_mode",
            "hackedit_cobol.plugins.templates",
            "hackedit_cobol.plugins.workspaces",
            "hackedit_cobol.pyqode_cobol_server"
        ],
        "version": "1.0a2"
    },
    "hackedit-python": {
        "cmdline": [],
        "modules": [
            "@package@",
            "hackedit_python",
            "hackedit_python.add_import",
            "hackedit_python.clean_pyc",
            "hackedit_python.context_menus",
            "hackedit_python.editor",
            "hackedit_python.forms",
            "hackedit_python.forms.dlg_create_virtualenv_ui",
            "hackedit_python.forms.dlg_edit_breakpoints_ui",
            "hackedit_python.forms.dlg_rope_rename_ui",
            "hackedit_python.forms.hackedit_python_rc",
            "hackedit_python.forms.settings_page_editor_ui",
            "hackedit_python.forms.settings_page_interpreters_ui",
            "hackedit_python.index",
            "hackedit_python.interpreters",
            "hackedit_python.open_module",
            "hackedit_python.pyconsole",
            "hackedit_python.pyqode_server",
            "hackedit_python.refactor",
            "hackedit_python.run",
            "hackedit_python.system",
            "hackedit_python.templates",
            "hackedit_python.vendor",
            "hackedit_python.vendor.rope",
            "hackedit_python.vendor.rope.base",
            "hackedit_python.vendor.rope.base.arguments",
            "hackedit_python.vendor.rope.base.ast",
            "hackedit_python.vendor.rope.base.astutils",
            "hackedit_python.vendor.rope.base.builtins",
            "hackedit_python.vendor.rope.base.change",
            "hackedit_python.vendor.rope.base.codeanalyze",
            "hackedit_python.vendor.rope.base.default_config",
            "hackedit_python.vendor.rope.base.evaluate",
            "hackedit_python.vendor.rope.base.exceptions",
            "hackedit_python.vendor.rope.base.fscommands",
            "hackedit_python.vendor.rope.base.history",
            "hackedit_python.vendor.rope.base.libutils",
            "hackedit_python.vendor.rope.base.oi",
            "hackedit_python.vendor.rope.base.oi.doa",
            "hackedit_python.vendor.rope.base.oi.docstrings",
            "hackedit_python.vendor.rope.base.oi.memorydb",
            "hackedit_python.vendor.rope.base.oi.objectdb",
            "hackedit_python.vendor.rope.base.oi.objectinfo",
            "hackedit_python.vendor.rope.base.oi.runmod",
            "hackedit_python.vendor.rope.base.oi.soa",
            "hackedit_python.vendor.rope.base.oi.soi",
            "hackedit_python.vendor.rope.base.oi.transform",
            "hackedit_python.vendor.rope.base.prefs",
            "hackedit_python.vendor.rope.base.project",
            "hackedit_python.vendor.rope.base.pycore",
            "hackedit_python.vendor.rope.base.pynames",
            "hackedit_python.vendor.rope.base.pynamesdef",
            "hackedit_python.vendor.rope.base.pyobjects",
            "hackedit_python.vendor.rope.base.pyobjectsdef",
            "hackedit_python.vendor.rope.base.pyscopes",
            "hackedit_python.vendor.rope.base.resourceobserver",
            "hackedit_python.vendor.rope.base.resources",
            "hackedit_python.vendor.rope.base.simplify",
            "hackedit_python.vendor.rope.base.stdmods",
            "hackedit_python.vendor.rope.base.taskhandle",
            "hackedit_python.vendor.rope.base.utils",
            "hackedit_python.vendor.rope.base.utils.datastructures",
            "hackedit_python.vendor.rope.base.utils.pycompat",
            "hackedit_python.vendor.rope.base.worder",
            "hackedit_python.vendor.rope.contrib",
            "hackedit_python.vendor.rope.contrib.autoimport",
            "hackedit_python.vendor.rope.contrib.changestack",
            "hackedit_python.vendor.rope.contrib.codeassist",
            "hackedit_python.vendor.rope.contrib.finderrors",
            "hackedit_python.vendor.rope.contrib.findit",
            "hackedit_python.vendor.rope.contrib.fixmodnames",
            "hackedit_python.vendor.rope.contrib.fixsyntax",
            "hackedit_python.vendor.rope.contrib.generate",
            "hackedit_python.vendor.rope.refactor",
            "hackedit_python.vendor.rope.refactor.change_signature",
            "hackedit_python.vendor.rope.refactor.encapsulate_field",
            "hackedit_python.vendor.rope.refactor.extract",
            "hackedit_python.vendor.rope.refactor.functionutils",
            "hackedit_python.vendor.rope.refactor.importutils",
            "hackedit_python.vendor.rope.refactor.importutils.actions",
            "hackedit_python.vendor.rope.refactor.importutils.importinfo",
            "hackedit_python.vendor.rope.refactor.importutils.module_imports",
            "hackedit_python.vendor.rope.refactor.inline",
            "hackedit_python.vendor.rope.refactor.introduce_factory",
            "hackedit_python.vendor.rope.refactor.introduce_parameter",
            "hackedit_python.vendor.rope.refactor.localtofield",
            "hackedit_python.vendor.rope.refactor.method_object",
            "hackedit_python.vendor.rope.refactor.move",
            "hackedit_python.vendor.rope.refactor.multiproject",
            "hackedit_python.vendor.rope.refactor.occurrences",
            "hackedit_python.vendor.rope.refactor.patchedast",
            "hackedit_python.vendor.rope.refactor.rename",
            "hackedit_python.vendor.rope.refactor.restructure",
            "hackedit_python.vendor.rope.refactor.similarfinder",
            "hackedit_python.vendor.rope.refactor.sourceutils",
            "hackedit_python.vendor.rope.refactor.suites",
            "hackedit_python.vendor.rope.refactor.topackage",
            "hackedit_python.vendor.rope.refactor.usefunction",
            "hackedit_python.vendor.rope.refactor.wildcards",
            "hackedit_python.vendor.virtualenv",
            "hackedit_python.workspaces"
        ],
        "version": "1.0a2"
    },
    "hackeeg": {
        "cmdline": [
            "example.py",
            "hackeeg_shell",
            "hackeeg_shell.py",
            "hackeeg_stream",
            "hackeeg_stream.py",
            "lsl_receive_data.py",
            "simple_lsl_receive_and_plot.py"
        ],
        "modules": [
            "hackeeg",
            "hackeeg.__version__",
            "hackeeg.ads1299",
            "hackeeg.driver"
        ],
        "version": "0.1.6"
    },
    "hackendutils": {
        "cmdline": [],
        "modules": [
            "HackendUtils",
            "HackendUtils.face_recognition",
            "HackendUtils.json_utils"
        ],
        "version": "0.0.7"
    },
    "hacker": {
        "cmdline": [],
        "modules": [
            "hackernews",
            "hackernews.settings",
            "tests",
            "tests.test_api_verison",
            "tests.test_ask_stories",
            "tests.test_get_item",
            "tests.test_get_max_item",
            "tests.test_get_user",
            "tests.test_job_stories",
            "tests.test_new_stories",
            "tests.test_show_stories",
            "tests.test_top_stories",
            "tests.test_updates"
        ],
        "version": "0.3.1"
    },
    "hacker-news": {
        "cmdline": [],
        "modules": [
            "hn",
            "hn.hn",
            "hn.post",
            "hn.user"
        ],
        "version": "2.1.4"
    },
    "hacker-news-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hacker-news-to-sqlite": {
        "cmdline": [],
        "modules": [
            "hacker_news_to_sqlite",
            "hacker_news_to_sqlite.cli"
        ],
        "version": "0.3.1"
    },
    "hacker-top": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hackercafe": {
        "cmdline": [],
        "modules": [
            "hackercafe",
            "hackercafe.main"
        ],
        "version": "1.0.1"
    },
    "hackercodecs": {
        "cmdline": [],
        "modules": [
            "hackercodecs"
        ],
        "version": "0.3"
    },
    "hackerearth-box": {
        "cmdline": [],
        "modules": [
            "hackerearth_box",
            "hackerearth_box.config_parser",
            "hackerearth_box.exceptions",
            "hackerearth_box.install",
            "hackerearth_box.utils"
        ],
        "version": "0.2.1"
    },
    "hackerfeed": {
        "cmdline": [],
        "modules": [
            "hfeedlib",
            "hfeedlib.fetchlib",
            "hfeedlib.hfeed_main",
            "hfeedlib.parsing",
            "hfeedlib.parsing.cli",
            "hfeedlib.parsing.save",
            "hfeedlib.utils"
        ],
        "version": "0.1"
    },
    "hackerman": {
        "cmdline": [],
        "modules": [
            "hackerman",
            "hackerman._hashing",
            "hackerman._hashing.natzil",
            "hackerman.algorithms",
            "hackerman.crypto",
            "hackerman.crypto.blowfish",
            "hackerman.crypto.btc",
            "hackerman.crypto.hmc",
            "hackerman.crypto.onion",
            "hackerman.crypto.rsa",
            "hackerman.crypto.wrapper",
            "hackerman.crypto.xor",
            "hackerman.handlers",
            "hackerman.handlers.bind_base",
            "hackerman.handlers.bind_tcp",
            "hackerman.handlers.reverse_base",
            "hackerman.handlers.reverse_dns",
            "hackerman.handlers.reverse_http",
            "hackerman.handlers.reverse_ptpb",
            "hackerman.handlers.reverse_tcp",
            "hackerman.hashing",
            "hackerman.payloads",
            "hackerman.payloads.bind",
            "hackerman.payloads.bind._http",
            "hackerman.payloads.bind.base",
            "hackerman.payloads.bind.tcp",
            "hackerman.payloads.reverse",
            "hackerman.payloads.reverse._http",
            "hackerman.payloads.reverse.base",
            "hackerman.payloads.reverse.dns",
            "hackerman.payloads.reverse.ptpb",
            "hackerman.payloads.reverse.tcp",
            "hackerman.rat",
            "hackerman.rat.gui",
            "hackerman.rat.gui.keyboard",
            "hackerman.rat.gui.screenshot",
            "hackerman.scanners",
            "hackerman.scanners._http",
            "hackerman.scanners.tcp",
            "hackerman.stagers",
            "hackerman.stagers._http",
            "hackerman.stagers.examples",
            "hackerman.stagers.examples._http",
            "hackerman.stagers.examples.ptpb",
            "hackerman.stagers.examples.tcp",
            "hackerman.stagers.ptpb",
            "hackerman.stagers.tcp",
            "hackerman.transport",
            "hackerman.transport._http",
            "hackerman.transport.arp",
            "hackerman.transport.covert",
            "hackerman.transport.covert.dns",
            "hackerman.transport.covert.dot11",
            "hackerman.transport.covert.jsc",
            "hackerman.transport.dns",
            "hackerman.transport.dot11",
            "hackerman.transport.fileio",
            "hackerman.transport.ptpb",
            "hackerman.transport.serveo",
            "hackerman.transport.smtp",
            "hackerman.transport.tcp",
            "hackerman.ui",
            "hackerman.ui.betterexec",
            "hackerman.ui.daemon",
            "hackerman.ui.output",
            "hackerman.ui.pipe",
            "hackerman.ui.shell",
            "hackerman.utils"
        ],
        "version": "0.11.8"
    },
    "hackernews": {
        "cmdline": [],
        "modules": [
            "hn",
            "hn.constants",
            "hn.hn",
            "hn.utils",
            "tests",
            "tests.test_leaders",
            "tests.test_pagination",
            "tests.test_stories_dict_structure",
            "tests.test_story_class",
            "tests.test_story_fromid",
            "tests.test_story_get_comments",
            "tests.test_utils"
        ],
        "version": "2.0.0"
    },
    "hackernews-cli": {
        "cmdline": [],
        "modules": [
            "hncli",
            "hncli._version",
            "hncli.cli",
            "hncli.config"
        ],
        "version": "0.0.1.post5"
    },
    "hackernews-client": {
        "cmdline": [],
        "modules": [
            "hackernews",
            "hackernews.hn",
            "hackernews.item",
            "hackernews.user"
        ],
        "version": "0.1.2b1"
    },
    "hackernews-python": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.2"
    },
    "hackernews-scraper": {
        "cmdline": [],
        "modules": [
            "hackernews_scraper",
            "hackernews_scraper.endpoints",
            "hackernews_scraper.hnscraper",
            "hackernews_scraper.test",
            "hackernews_scraper.test.basetestcase",
            "hackernews_scraper.test.factories",
            "hackernews_scraper.test.test_comment_scraper",
            "hackernews_scraper.test.test_scraper",
            "hackernews_scraper.test.test_story_scraper"
        ],
        "version": "1.0.2"
    },
    "hackernews500kindex": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hackernewsapi": {
        "cmdline": [],
        "modules": [
            "HackerNewsAPI",
            "HackerNewsAPI.API",
            "HackerNewsAPI.utils"
        ],
        "version": "0.1.1"
    },
    "hackernewslib": {
        "cmdline": [],
        "modules": [
            "hackernewslib",
            "hackernewslib.articles",
            "hackernewslib.clients",
            "hackernewslib.exceptions",
            "hackernewslib.loaders",
            "hackernewslib.mixins",
            "hackernewslib.models",
            "hackernewslib.schemas"
        ],
        "version": "0.1.0"
    },
    "hackerrank": {
        "cmdline": [],
        "modules": [
            "hackerrank",
            "hackerrank.hackerrank"
        ],
        "version": "0.1"
    },
    "hackerrank-sdk": {
        "cmdline": [],
        "modules": [
            "hackerrank",
            "hackerrank.HackerRankAPI",
            "hackerrank.settings",
            "hackerrank.testing"
        ],
        "version": "1.2.4"
    },
    "hackersh": {
        "cmdline": [
            "hackersh"
        ],
        "modules": [
            "hackersh",
            "hackersh._ordereddict",
            "hackersh._version",
            "hackersh.components",
            "hackersh.components.external",
            "hackersh.components.external.amap",
            "hackersh.components.external.dnsdict6",
            "hackersh.components.external.nbtscan",
            "hackersh.components.external.nikto",
            "hackersh.components.external.nmap",
            "hackersh.components.external.ping",
            "hackersh.components.external.sqlmap",
            "hackersh.components.external.w3af",
            "hackersh.components.external.xprobe2",
            "hackersh.components.internal",
            "hackersh.components.internal.browse",
            "hackersh.components.internal.domain",
            "hackersh.components.internal.hostname",
            "hackersh.components.internal.ipv4_address",
            "hackersh.components.internal.ipv4_range",
            "hackersh.components.internal.ipv6_address",
            "hackersh.components.internal.iterate_links",
            "hackersh.components.internal.nslookup",
            "hackersh.components.internal.submit",
            "hackersh.components.internal.url",
            "hackersh.components.system",
            "hackersh.components.system.alert",
            "hackersh.components.system.null",
            "hackersh.components.system.print",
            "hackersh.components.system.system",
            "hackersh.components.system.tmpfile",
            "hackersh.conio",
            "hackersh.exceptions",
            "hackersh.log",
            "hackersh.miscellaneous",
            "hackersh.objects"
        ],
        "version": "0.2.0"
    },
    "hackerspacepi": {
        "cmdline": [],
        "modules": [
            "hackerspacepi"
        ],
        "version": "0.1.9"
    },
    "hackertray": {
        "cmdline": [],
        "modules": [
            "hackertray",
            "hackertray.appindicator_replacement",
            "hackertray.chrome",
            "hackertray.data",
            "hackertray.firefox",
            "hackertray.hackernews",
            "hackertray.version"
        ],
        "version": "4.0.2"
    },
    "hackery": {
        "cmdline": [],
        "modules": [
            "hackery",
            "hackery.backend",
            "hackery.hack",
            "hackery.redis_backend",
            "hackery.version_hack"
        ],
        "version": "0.0.8"
    },
    "hackgame": {
        "cmdline": [],
        "modules": [
            "hackgame",
            "hackgame.api",
            "hackgame.auth",
            "hackgame.cli",
            "hackgame.cli.api_wrapper",
            "hackgame.cli.autocomplete",
            "hackgame.cli.history",
            "hackgame.cli.identifier_cache",
            "hackgame.cli.persistence",
            "hackgame.cli.update_notice",
            "hackgame.docs",
            "hackgame.models"
        ],
        "version": "0.0.28"
    },
    "hackgen": {
        "cmdline": [],
        "modules": [
            "hackgen",
            "hackgen.language",
            "hackgen.test_generator",
            "hackgen.test_input_format"
        ],
        "version": "1.0.1"
    },
    "hackhttp": {
        "cmdline": [],
        "modules": [
            "hackhttp",
            "hackhttp.hackhttp"
        ],
        "version": "1.0.4"
    },
    "hackinfo": {
        "cmdline": [],
        "modules": [
            "hackinfo"
        ],
        "version": "1.1.0"
    },
    "hacking": {
        "cmdline": [],
        "modules": [],
        "version": "3.2.0"
    },
    "hackingtools": {
        "cmdline": [],
        "modules": [
            "hackingtools",
            "hackingtools.core",
            "hackingtools.core.Blockchain",
            "hackingtools.core.Config",
            "hackingtools.core.Connections",
            "hackingtools.core.DjangoFunctions",
            "hackingtools.core.Exceptions",
            "hackingtools.core.Logger",
            "hackingtools.core.Objects",
            "hackingtools.core.Pool",
            "hackingtools.core.Repositories",
            "hackingtools.core.TelegramBot",
            "hackingtools.core.Utils",
            "hackingtools.core.UtilsDjangoViewsAuto",
            "hackingtools.modules",
            "hackingtools.modules.av_evasion",
            "hackingtools.modules.av_evasion.crypter",
            "hackingtools.modules.av_evasion.crypter.ht_crypter",
            "hackingtools.modules.connector",
            "hackingtools.modules.connector.qualys",
            "hackingtools.modules.connector.qualys.ht_qualys",
            "hackingtools.modules.connector.sia",
            "hackingtools.modules.connector.sia.ht_sia",
            "hackingtools.modules.connector.ssh",
            "hackingtools.modules.connector.ssh.ht_ssh",
            "hackingtools.modules.crackers",
            "hackingtools.modules.crackers.bruteforce",
            "hackingtools.modules.crackers.bruteforce.ht_bruteforce",
            "hackingtools.modules.crackers.router",
            "hackingtools.modules.crackers.router.ht_router",
            "hackingtools.modules.crackers.unzip",
            "hackingtools.modules.crackers.unzip.ht_unzip",
            "hackingtools.modules.crypto",
            "hackingtools.modules.crypto.hash",
            "hackingtools.modules.crypto.hash.ht_hash",
            "hackingtools.modules.crypto.rc4",
            "hackingtools.modules.crypto.rc4.ht_rc4",
            "hackingtools.modules.crypto.rsa",
            "hackingtools.modules.crypto.rsa.ht_rsa",
            "hackingtools.modules.files",
            "hackingtools.modules.files.parser",
            "hackingtools.modules.files.parser.ht_parser",
            "hackingtools.modules.forensic",
            "hackingtools.modules.forensic.metadata",
            "hackingtools.modules.forensic.metadata.ht_metadata",
            "hackingtools.modules.forensic.virustotal",
            "hackingtools.modules.forensic.virustotal.ht_virustotal",
            "hackingtools.modules.malware",
            "hackingtools.modules.malware.keylogger",
            "hackingtools.modules.malware.keylogger.ht_keylogger",
            "hackingtools.modules.network",
            "hackingtools.modules.network.scapy",
            "hackingtools.modules.network.scapy.ht_scapy",
            "hackingtools.modules.osint",
            "hackingtools.modules.osint.facebook",
            "hackingtools.modules.osint.facebook.ht_facebook",
            "hackingtools.modules.osint.finder",
            "hackingtools.modules.osint.finder.ht_finder",
            "hackingtools.modules.osint.instagram",
            "hackingtools.modules.osint.instagram.ht_instagram",
            "hackingtools.modules.osint.nmap",
            "hackingtools.modules.osint.nmap.ht_nmap",
            "hackingtools.modules.osint.pastebin",
            "hackingtools.modules.osint.pastebin.ht_pastebin",
            "hackingtools.modules.osint.shodan",
            "hackingtools.modules.osint.shodan.ht_shodan",
            "hackingtools.modules.osint.twitter",
            "hackingtools.modules.osint.twitter.ht_twitter",
            "hackingtools.modules.osint.vehicle",
            "hackingtools.modules.osint.vehicle.ht_vehicle",
            "hackingtools.modules.reversing",
            "hackingtools.modules.reversing.radare2",
            "hackingtools.modules.reversing.radare2.ht_radare2",
            "hackingtools.modules.threatinteligence",
            "hackingtools.modules.threatinteligence.abuseipdb",
            "hackingtools.modules.threatinteligence.abuseipdb.ht_abuseipdb",
            "hackingtools.modules.threatinteligence.phising",
            "hackingtools.modules.threatinteligence.phising.ht_phising",
            "hackingtools.modules.vulnerabilities",
            "hackingtools.modules.vulnerabilities.bannergrabber",
            "hackingtools.modules.vulnerabilities.bannergrabber.ht_bannergrabber",
            "hackingtools.modules.vulnerabilities.cpe",
            "hackingtools.modules.vulnerabilities.cpe.ht_cpe",
            "hackingtools.modules.vulnerabilities.cve",
            "hackingtools.modules.vulnerabilities.cve.ht_cve",
            "hackingtools.modules.vulnerabilities.cwe",
            "hackingtools.modules.vulnerabilities.cwe.ht_cwe",
            "hackingtools.modules.vulnerabilities.vulndb",
            "hackingtools.modules.vulnerabilities.vulndb.ht_vulndb",
            "hackingtools.modules.web",
            "hackingtools.modules.web.fuzz",
            "hackingtools.modules.web.fuzz.ht_fuzz",
            "hackingtools.modules.web.spider",
            "hackingtools.modules.web.spider.ht_spider",
            "hackingtools.modules.web.sqlinjection",
            "hackingtools.modules.web.sqlinjection.ht_sqlinjection",
            "hackingtools.modules.web.urlshortener",
            "hackingtools.modules.web.urlshortener.ht_urlshortener"
        ],
        "version": "3.2.1"
    },
    "hackinteach-pytest-approxable": {
        "cmdline": [],
        "modules": [
            "pytest_approxable"
        ],
        "version": "0.0.3"
    },
    "hackintosh": {
        "cmdline": [],
        "modules": [
            "hackintosh",
            "hackintosh.commands",
            "hackintosh.commands.acpi_cmd",
            "hackintosh.commands.cleanup_cmd",
            "hackintosh.commands.hda_cmd",
            "hackintosh.commands.impl",
            "hackintosh.commands.impl.acpi_impl",
            "hackintosh.commands.impl.tool_impl",
            "hackintosh.commands.kext_cmd",
            "hackintosh.commands.open_cmd",
            "hackintosh.commands.set_cmd",
            "hackintosh.commands.tool_cmd",
            "hackintosh.main",
            "hackintosh.menu"
        ],
        "version": "0.1"
    },
    "hackle-sdk": {
        "cmdline": [],
        "modules": [
            "hackle",
            "hackle.bucketer",
            "hackle.commons",
            "hackle.commons.enums",
            "hackle.commons.validator",
            "hackle.decider",
            "hackle.entities",
            "hackle.event",
            "hackle.event.event",
            "hackle.event.event_dispatcher",
            "hackle.event.event_processor",
            "hackle.exceptions",
            "hackle.hackle",
            "hackle.lib",
            "hackle.lib.pymmh3",
            "hackle.logger",
            "hackle.version",
            "hackle.workspace",
            "hackle.workspace_fetcher"
        ],
        "version": "0.0.1"
    },
    "hacklib": {
        "cmdline": [],
        "modules": [
            "hacklib",
            "hacklib.hacklib"
        ],
        "version": "0.1.6"
    },
    "hackman": {
        "cmdline": [
            "event.py"
        ],
        "modules": [
            "hackman",
            "hackman.config_manager",
            "hackman.json_not_found_exception",
            "hackman.logger",
            "hackman.redis_exception",
            "hackman.worker"
        ],
        "version": "0.5"
    },
    "hackmud-chat": {
        "cmdline": [],
        "modules": [
            "hackmud_chat",
            "hackmud_chat.hackmud",
            "hackmud_chat.hackmud_chat"
        ],
        "version": "0.1a4"
    },
    "hacknehs": {
        "cmdline": [],
        "modules": [
            "hacknehs"
        ],
        "version": "0.0.1"
    },
    "hackoregon-sandbox": {
        "cmdline": [],
        "modules": [
            "api",
            "api.apps",
            "api.migrations",
            "api.models",
            "api.preexisting_models",
            "api.serializers",
            "api.urls",
            "api.views"
        ],
        "version": "1.64"
    },
    "hackpy": {
        "cmdline": [],
        "modules": [
            "hackpy",
            "hackpy.activity",
            "hackpy.admin",
            "hackpy.autorun",
            "hackpy.clipboard",
            "hackpy.commands",
            "hackpy.evil",
            "hackpy.file",
            "hackpy.info",
            "hackpy.keyboard",
            "hackpy.messagebox",
            "hackpy.modules",
            "hackpy.network",
            "hackpy.passwords",
            "hackpy.power",
            "hackpy.protection",
            "hackpy.python",
            "hackpy.settings",
            "hackpy.spy",
            "hackpy.taskmanager",
            "hackpy.time",
            "hackpy.uac"
        ],
        "version": "0.1.7.3"
    },
    "hackr": {
        "cmdline": [],
        "modules": [
            "hackr",
            "hackr.actions",
            "hackr.generator",
            "hackr.image",
            "hackr.object_generator",
            "hackr.web"
        ],
        "version": "0.1.2"
    },
    "hackrecon": {
        "cmdline": [],
        "modules": [
            "hackrecon",
            "hackrecon.hackrecon"
        ],
        "version": "1.7"
    },
    "hackrequests": {
        "cmdline": [],
        "modules": [
            "HackRequests",
            "HackRequests.HackRequests"
        ],
        "version": "1.2"
    },
    "hacks": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.12"
    },
    "hackson-nester": {
        "cmdline": [],
        "modules": [
            "hackson_nester"
        ],
        "version": "1.2.0"
    },
    "hackthebox-api": {
        "cmdline": [
            "hackthebox.py"
        ],
        "modules": [
            "htb",
            "htb.api",
            "htb.challenges",
            "htb.cli",
            "htb.colorize",
            "htb.exceptions",
            "htb.machines",
            "htb.pusher",
            "htb.shoutbox",
            "htb.views"
        ],
        "version": "0.0.4"
    },
    "hackthederivative": {
        "cmdline": [],
        "modules": [
            "hackthederivative"
        ],
        "version": "0.0.1"
    },
    "hacktoberfest-issue-label": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hacktools": {
        "cmdline": [],
        "modules": [
            "hacktools",
            "hacktools.arch",
            "hacktools.common",
            "hacktools.compression",
            "hacktools.nds",
            "hacktools.nitro",
            "hacktools.psp",
            "hacktools.psx",
            "hacktools.wii"
        ],
        "version": "0.13.11"
    },
    "hackulus": {
        "cmdline": [
            "hackulus"
        ],
        "modules": [
            "hackulus",
            "hackulus.config",
            "hackulus.models",
            "hackulus.start",
            "hackulus.utils"
        ],
        "version": "0.0.3"
    },
    "hackwork-gayson": {
        "cmdline": [],
        "modules": [
            "gayson",
            "gayson.convert",
            "gayson.tests"
        ],
        "version": "0.0.3"
    },
    "hackwrench": {
        "cmdline": [],
        "modules": [
            "hackwrench",
            "hackwrench.browser",
            "hackwrench.conf",
            "hackwrench.db",
            "hackwrench.ext",
            "hackwrench.extensions",
            "hackwrench.extensions.download",
            "hackwrench.extensions.greasemonkey",
            "hackwrench.extensions.open_all_links",
            "hackwrench.gui",
            "hackwrench.inspector",
            "hackwrench.nprefs",
            "hackwrench.plugins",
            "hackwrench.session",
            "hackwrench.sq",
            "hackwrench.status",
            "hackwrench.webkit_evaljs"
        ],
        "version": "0.2"
    },
    "hacky": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hackytools": {
        "cmdline": [],
        "modules": [
            "hackytools",
            "hackytools.spriteit",
            "hackytools.timer",
            "hackytools.utilities"
        ],
        "version": "0.0.6"
    },
    "hacmec": {
        "cmdline": [],
        "modules": [
            "hacmec",
            "hacmec.client",
            "hacmec.http",
            "hacmec.http.aiohttp",
            "hacmec.jws",
            "hacmec.problem",
            "hacmec.util"
        ],
        "version": "0.0.3"
    },
    "hacmec-demo": {
        "cmdline": [],
        "modules": [
            "hacmec_demo",
            "hacmec_demo.config",
            "hacmec_demo.crypto",
            "hacmec_demo.demo",
            "hacmec_demo.dnsupdate"
        ],
        "version": "0.0.4"
    },
    "hacs": {
        "cmdline": [],
        "modules": [
            "hacs",
            "hacs.admin",
            "hacs.apps",
            "hacs.defaults",
            "hacs.django_utils_version",
            "hacs.fields",
            "hacs.globals",
            "hacs.lru_wrapped",
            "hacs.management",
            "hacs.management.commands",
            "hacs.management.commands.export_routes",
            "hacs.management.commands.import_routes",
            "hacs.middleware",
            "hacs.migrations",
            "hacs.migrations.0001_initial",
            "hacs.models",
            "hacs.tests",
            "hacs.tests.test_management_export_routes",
            "hacs.tests.test_management_import_routes",
            "hacs.tests.test_middleware",
            "hacs.tests.test_utils",
            "hacs.urls",
            "hacs.utils",
            "hacs.views",
            "hacs.views.errors"
        ],
        "version": "1.0a1"
    },
    "hacs-frontend": {
        "cmdline": [],
        "modules": [
            "hacs_frontend",
            "hacs_frontend.version"
        ],
        "version": "20200522214300"
    },
    "hacsfrontend": {
        "cmdline": [],
        "modules": [
            "hacsfrontend",
            "hacsfrontend.cli"
        ],
        "version": "0.1.1"
    },
    "hacspec": {
        "cmdline": [],
        "modules": [
            "hacspec",
            "hacspec.check",
            "hacspec.speclib"
        ],
        "version": "0.0.1.dev3"
    },
    "hactoolpy": {
        "cmdline": [],
        "modules": [
            "hactool",
            "hactool.abstract",
            "hactool.pfs0",
            "hactool.ticket",
            "hactool.util"
        ],
        "version": "0.0.1"
    },
    "hadapi": {
        "cmdline": [],
        "modules": [
            "hadapi",
            "hadapi.model_runtime",
            "hadapi.service"
        ],
        "version": "1.0.30"
    },
    "hadar": {
        "cmdline": [],
        "modules": [
            "hadar",
            "hadar.analyzer",
            "hadar.analyzer.result",
            "hadar.optimizer",
            "hadar.optimizer.input",
            "hadar.optimizer.lp",
            "hadar.optimizer.lp.domain",
            "hadar.optimizer.lp.mapper",
            "hadar.optimizer.lp.optimizer",
            "hadar.optimizer.optimizer",
            "hadar.optimizer.output",
            "hadar.optimizer.remote",
            "hadar.optimizer.remote.optimizer",
            "hadar.viewer",
            "hadar.viewer.abc",
            "hadar.viewer.html",
            "hadar.workflow",
            "hadar.workflow.pipeline",
            "hadar.workflow.shuffler",
            "tests",
            "tests.analyzer",
            "tests.analyzer.test_result",
            "tests.optimizer",
            "tests.optimizer.it",
            "tests.optimizer.it.test_optimizer",
            "tests.optimizer.lp",
            "tests.optimizer.lp.ortools_mock",
            "tests.optimizer.lp.test_mapper",
            "tests.optimizer.lp.test_optimizer",
            "tests.optimizer.remote",
            "tests.optimizer.remote.test_optimizer",
            "tests.optimizer.test_input",
            "tests.optimizer.test_output",
            "tests.utils",
            "tests.viewer",
            "tests.viewer.test_html",
            "tests.workflow",
            "tests.workflow.test_integration",
            "tests.workflow.test_pipeline",
            "tests.workflow.test_shuffler"
        ],
        "version": "0.4.0"
    },
    "hadar-dashboard": {
        "cmdline": [],
        "modules": [
            "hadar_dashboard",
            "hadar_dashboard.dashboard"
        ],
        "version": "0.4.0"
    },
    "haddock-curses": {
        "cmdline": [],
        "modules": [
            "haddock",
            "haddock.haddock"
        ],
        "version": "0.1.5"
    },
    "hadeploy": {
        "cmdline": [
            "hadeploy"
        ],
        "modules": [
            "hadeploy",
            "hadeploy.core",
            "hadeploy.core.const",
            "hadeploy.core.context",
            "hadeploy.core.dump",
            "hadeploy.core.main",
            "hadeploy.core.misc",
            "hadeploy.core.parser",
            "hadeploy.core.plugin",
            "hadeploy.core.schema",
            "hadeploy.core.templator",
            "hadeploy.core.test",
            "hadeploy.plugins"
        ],
        "version": "0.6.1"
    },
    "hades": {
        "cmdline": [],
        "modules": [
            "hades",
            "hades.hades"
        ],
        "version": "0.2.0"
    },
    "hadith": {
        "cmdline": [],
        "modules": [
            "hadith",
            "hadith.base"
        ],
        "version": "0.0.2a1"
    },
    "hadmlservices": {
        "cmdline": [],
        "modules": [
            "hadmlservices",
            "hadmlservices.callbacks",
            "hadmlservices.service"
        ],
        "version": "1.0.26"
    },
    "hadmlservices-eval": {
        "cmdline": [],
        "modules": [
            "hadmlservices",
            "hadmlservices.callbacks",
            "hadmlservices.service"
        ],
        "version": "1.0.3"
    },
    "hadolintw": {
        "cmdline": [],
        "modules": [
            "hadolintw",
            "hadolintw.main"
        ],
        "version": "1.2.1"
    },
    "hadoop-inspector": {
        "cmdline": [],
        "modules": [
            "hadoopinspector",
            "hadoopinspector._version",
            "hadoopinspector.check_results",
            "hadoopinspector.check_runner",
            "hadoopinspector.core",
            "hadoopinspector.registry",
            "hadoopinspector.tests",
            "hadoopinspector.tests.test_check_results",
            "hadoopinspector.tests.test_check_runner",
            "hadoopinspector.tests.test_check_vars",
            "hadoopinspector.tests.test_core",
            "hadoopinspector.tests.test_registry",
            "hadoopinspector.tests.test_tooling",
            "prod",
            "prod._version",
            "prod.check_results",
            "prod.check_runner",
            "prod.core",
            "prod.hadoopinspector_runner",
            "prod.registry"
        ],
        "version": "0.1.6"
    },
    "hadoop-manager": {
        "cmdline": [],
        "modules": [
            "hdpmanager",
            "hdpmanager.combiner",
            "hdpmanager.counter",
            "hdpmanager.hdpenv",
            "hdpmanager.hdpfs",
            "hdpmanager.hdpjob",
            "hdpmanager.hdpmanager",
            "hdpmanager.mapper",
            "hdpmanager.protocol",
            "hdpmanager.reducer",
            "hdpmanager.streamer"
        ],
        "version": "0.0.4"
    },
    "hadoop-mock": {
        "cmdline": [],
        "modules": [
            "hadoop_mock",
            "hadoop_mock.hadoop_mock",
            "hadoop_mock.hadoop_ssh"
        ],
        "version": "0.1"
    },
    "hadoop-ranger-audit": {
        "cmdline": [
            "hadoop_ranger_audit.py",
            "report_template.html"
        ],
        "modules": [
            "hadoop_ranger_audit",
            "hadoop_ranger_audit.hadoop_ranger_audit"
        ],
        "version": "0.2"
    },
    "hadoop-test-cluster": {
        "cmdline": [],
        "modules": [
            "hadoop_test_cluster",
            "hadoop_test_cluster.cli"
        ],
        "version": "0.1.0"
    },
    "hadoop-yarn-rest-api": {
        "cmdline": [],
        "modules": [
            "hadoop",
            "hadoop.httputil",
            "hadoop.httputil2",
            "hadoop.httputil3",
            "hadoop.yarn"
        ],
        "version": "1.1.0"
    },
    "hadoopcalculator": {
        "cmdline": [
            "hadoop_calculator"
        ],
        "modules": [
            "hadoopcalculator",
            "hadoopcalculator.hadoop_calculator"
        ],
        "version": "1.0"
    },
    "hadoopconf": {
        "cmdline": [],
        "modules": [
            "hadoopconf",
            "hadoopconf.core"
        ],
        "version": "1.0"
    },
    "hadoopy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hadoopyarnclustercheckerlib": {
        "cmdline": [],
        "modules": [
            "hadoop_yarn_cluster_checker_model",
            "hadoop_yarn_cluster_checker_model.HadoopYarnClusterChecker",
            "hadoop_yarn_cluster_checker_model.MockRequest",
            "hadoop_yarn_cluster_checker_model.MockResponse",
            "hadoop_yarn_cluster_checker_model.UtilsTest",
            "hadoop_yarn_cluster_checker_model.test"
        ],
        "version": "49"
    },
    "hadoopyarnrestapi": {
        "cmdline": [],
        "modules": [
            "hadoopyarnrestapi",
            "hadoopyarnrestapi.cli"
        ],
        "version": "0.1.1"
    },
    "hadrian": {
        "cmdline": [],
        "modules": [
            "hadrian",
            "hadrian.conf",
            "hadrian.conf.fab",
            "hadrian.contrib",
            "hadrian.contrib.auth",
            "hadrian.contrib.auth.decorators",
            "hadrian.contrib.auth.templatetags",
            "hadrian.contrib.auth.templatetags.group_tags",
            "hadrian.contrib.google",
            "hadrian.contrib.gravatar",
            "hadrian.contrib.gravatar.templatetags",
            "hadrian.contrib.gravatar.templatetags.gravatar_tags",
            "hadrian.contrib.pagination",
            "hadrian.contrib.pagination.templatetags",
            "hadrian.contrib.pagination.templatetags.pagination"
        ],
        "version": "2.0"
    },
    "hadrian-proxy": {
        "cmdline": [],
        "modules": [
            "hadrian"
        ],
        "version": "0.9.0"
    },
    "hadroid": {
        "cmdline": [],
        "modules": [
            "hadroid",
            "hadroid.client",
            "hadroid.config",
            "hadroid.docopt2",
            "hadroid.hadroid",
            "hadroid.modules",
            "hadroid.modules.base",
            "hadroid.modules.coffee",
            "hadroid.modules.cron",
            "hadroid.modules.eos",
            "hadroid.modules.menu",
            "hadroid.modules.uservoice",
            "hadroid.modules.zenodo_spam"
        ],
        "version": "0.1.19"
    },
    "hadron": {
        "cmdline": [],
        "modules": [
            "hadron"
        ],
        "version": "0.0.1"
    },
    "hadrosaur": {
        "cmdline": [],
        "modules": [
            "hadrosaur",
            "hadrosaur.main"
        ],
        "version": "0.4.1"
    },
    "haeidbvwjy": {
        "cmdline": [],
        "modules": [
            "haeidbvwjy",
            "haeidbvwjy.api_helper",
            "haeidbvwjy.configuration",
            "haeidbvwjy.controllers",
            "haeidbvwjy.controllers.api_controller",
            "haeidbvwjy.controllers.base_controller",
            "haeidbvwjy.decorators",
            "haeidbvwjy.exceptions",
            "haeidbvwjy.exceptions.api_exception",
            "haeidbvwjy.haeidbvwjy_client",
            "haeidbvwjy.http",
            "haeidbvwjy.http.auth",
            "haeidbvwjy.http.auth.basic_auth",
            "haeidbvwjy.http.http_call_back",
            "haeidbvwjy.http.http_client",
            "haeidbvwjy.http.http_context",
            "haeidbvwjy.http.http_method_enum",
            "haeidbvwjy.http.http_request",
            "haeidbvwjy.http.http_response",
            "haeidbvwjy.http.requests_client",
            "haeidbvwjy.models",
            "haeidbvwjy.models.suite_code_enum",
            "tests",
            "tests.controllers",
            "tests.controllers.controller_test_base",
            "tests.controllers.test_api_controller",
            "tests.http_response_catcher",
            "tests.test_helper"
        ],
        "version": "1.1"
    },
    "haeul001": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haeul002": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haeul003": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haeul01": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haf": {
        "cmdline": [],
        "modules": [
            "haf",
            "haf.apihelper",
            "haf.apphelper",
            "haf.asserthelper",
            "haf.bench",
            "haf.bus",
            "haf.busclient",
            "haf.case",
            "haf.common",
            "haf.common.database",
            "haf.common.exception",
            "haf.common.httprequest",
            "haf.common.lock",
            "haf.common.log",
            "haf.common.schema",
            "haf.common.sigleton",
            "haf.config",
            "haf.ext",
            "haf.ext.webserver",
            "haf.ext.webserver.app",
            "haf.ext.webserver.resources",
            "haf.globalenv",
            "haf.helper",
            "haf.hookspecs",
            "haf.lib",
            "haf.loader",
            "haf.logger",
            "haf.main",
            "haf.mark",
            "haf.message",
            "haf.pluginmanager",
            "haf.program",
            "haf.recorder",
            "haf.result",
            "haf.runner",
            "haf.signal",
            "haf.suite",
            "haf.utils",
            "haf.webhelper"
        ],
        "version": "2.9.7"
    },
    "hafapiserver": {
        "cmdline": [],
        "modules": [
            "hafapiserver",
            "hafapiserver.app",
            "hafapiserver.resources",
            "hafapiserver.server"
        ],
        "version": "0.0.9"
    },
    "haffmpeg": {
        "cmdline": [],
        "modules": [
            "haffmpeg",
            "haffmpeg.cli"
        ],
        "version": "0.1.1"
    },
    "hafizhpdf": {
        "cmdline": [],
        "modules": [
            "hafizhpdf",
            "hafizhpdf.pdf2text",
            "hafizhpdf.pdff2image"
        ],
        "version": "1.0"
    },
    "hafnian": {
        "cmdline": [],
        "modules": [
            "hafnian",
            "hafnian._hafnian",
            "hafnian._permanent",
            "hafnian._torontonian",
            "hafnian._version",
            "hafnian.quantum",
            "hafnian.reference",
            "hafnian.samples"
        ],
        "version": "0.6.1"
    },
    "hafsqlpublish": {
        "cmdline": [],
        "modules": [
            "hafsqlpublish",
            "hafsqlpublish.createhaf",
            "hafsqlpublish.db_api",
            "hafsqlpublish.db_app",
            "hafsqlpublish.db_common",
            "hafsqlpublish.db_web",
            "hafsqlpublish.publish"
        ],
        "version": "0.0.8"
    },
    "hafweb": {
        "cmdline": [],
        "modules": [
            "hafweb",
            "hafweb.app",
            "hafweb.config",
            "hafweb.controller",
            "hafweb.controller.controller",
            "hafweb.controller.controller_api",
            "hafweb.controller.controller_app",
            "hafweb.controller.controller_main",
            "hafweb.controller.controller_token",
            "hafweb.controller.engine",
            "hafweb.error",
            "hafweb.generator",
            "hafweb.main",
            "hafweb.model",
            "hafweb.model.model",
            "hafweb.model.model_api",
            "hafweb.model.model_app",
            "hafweb.model.model_token",
            "hafweb.route",
            "hafweb.route.route",
            "hafweb.route.route_api",
            "hafweb.route.route_token",
            "hafweb.view",
            "hafweb.view.view",
            "hafweb.view.view_api",
            "hafweb.view.view_main"
        ],
        "version": "0.2.3"
    },
    "hagelslag": {
        "cmdline": [
            "hscalibration",
            "hsdata",
            "hseval",
            "hsforecast",
            "hsncarpatch",
            "hsplotter",
            "hsstation",
            "hswrf3d"
        ],
        "modules": [
            "hagelslag",
            "hagelslag.data",
            "hagelslag.data.HREFv2ModelGrid",
            "hagelslag.data.HRRRModelGrid",
            "hagelslag.data.HailForecastGrid",
            "hagelslag.data.MRMSGrid",
            "hagelslag.data.ModelGrid",
            "hagelslag.data.ModelOutput",
            "hagelslag.data.NCARModelGrid",
            "hagelslag.data.NCARStormEventModelGrid",
            "hagelslag.data.SSEFModelGrid",
            "hagelslag.data.VSEModelGrid",
            "hagelslag.data.WRFModelGrid",
            "hagelslag.evaluation",
            "hagelslag.evaluation.ContingencyTable",
            "hagelslag.evaluation.GridEvaluator",
            "hagelslag.evaluation.MetricPlotter",
            "hagelslag.evaluation.MulticlassContingencyTable",
            "hagelslag.evaluation.NeighborEvaluator",
            "hagelslag.evaluation.ObjectEvaluator",
            "hagelslag.evaluation.ProbabilityMetrics",
            "hagelslag.processing",
            "hagelslag.processing.EnhancedWatershedSegmenter",
            "hagelslag.processing.EnsembleProducts",
            "hagelslag.processing.Hysteresis",
            "hagelslag.processing.ObjectMatcher",
            "hagelslag.processing.STObject",
            "hagelslag.processing.TrackModeler",
            "hagelslag.processing.TrackProcessing",
            "hagelslag.processing.TrackSampler",
            "hagelslag.processing.tracker",
            "hagelslag.util",
            "hagelslag.util.Config",
            "hagelslag.util.convert_mrms_grids",
            "hagelslag.util.create_model_grid_us_mask",
            "hagelslag.util.create_sector_grid_data",
            "hagelslag.util.custom_grib_table",
            "hagelslag.util.derived_vars",
            "hagelslag.util.make_proj_grids",
            "hagelslag.util.merge_forecast_data",
            "hagelslag.util.munkres",
            "hagelslag.util.output_tree_ensembles",
            "hagelslag.util.show_importance_ranks",
            "hagelslag.util.storm_patch_center_coords",
            "hagelslag.util.test_size_distributions",
            "hagelslag.util.testing_sector"
        ],
        "version": "0.3"
    },
    "haggis": {
        "cmdline": [],
        "modules": [
            "haggis",
            "haggis.exceptions",
            "haggis.files",
            "haggis.files.csv",
            "haggis.files.docx",
            "haggis.files.fits",
            "haggis.files.pdf",
            "haggis.files.ps",
            "haggis.files.xlsx",
            "haggis.files.xml",
            "haggis.files.zip",
            "haggis.latex_util",
            "haggis.load",
            "haggis.logs",
            "haggis.math",
            "haggis.mpl_util",
            "haggis.numbers",
            "haggis.objects",
            "haggis.os",
            "haggis.recipes",
            "haggis.string_util",
            "haggis.version"
        ],
        "version": "0.1a1"
    },
    "haggle": {
        "cmdline": [],
        "modules": [
            "haggle",
            "haggle.dacc",
            "haggle.small_test"
        ],
        "version": "0.0.4"
    },
    "haggregate": {
        "cmdline": [],
        "modules": [
            "haggregate",
            "haggregate.cli",
            "haggregate.haggregate"
        ],
        "version": "2.0.0"
    },
    "hagraph": {
        "cmdline": [],
        "modules": [
            "hagraph"
        ],
        "version": "1.0.4"
    },
    "hagrid": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hagworm": {
        "cmdline": [],
        "modules": [
            "example",
            "example.controller",
            "example.controller.home",
            "example.main",
            "example.main_cmd",
            "example.main_socket",
            "example.main_test",
            "example.model",
            "example.routing",
            "example.service",
            "example.service.base",
            "example.setting",
            "example.view",
            "example.view.home",
            "hagworm",
            "hagworm.extend",
            "hagworm.extend.asyncio",
            "hagworm.extend.asyncio.base",
            "hagworm.extend.asyncio.buffer",
            "hagworm.extend.asyncio.cache",
            "hagworm.extend.asyncio.command",
            "hagworm.extend.asyncio.database",
            "hagworm.extend.asyncio.event",
            "hagworm.extend.asyncio.file",
            "hagworm.extend.asyncio.future",
            "hagworm.extend.asyncio.net",
            "hagworm.extend.asyncio.ntp",
            "hagworm.extend.asyncio.task",
            "hagworm.extend.asyncio.transaction",
            "hagworm.extend.asyncio.zmq",
            "hagworm.extend.base",
            "hagworm.extend.cache",
            "hagworm.extend.compile",
            "hagworm.extend.crypto",
            "hagworm.extend.error",
            "hagworm.extend.event",
            "hagworm.extend.excel",
            "hagworm.extend.interface",
            "hagworm.extend.logging",
            "hagworm.extend.metaclass",
            "hagworm.extend.process",
            "hagworm.extend.qrcode",
            "hagworm.extend.struct",
            "hagworm.extend.transaction",
            "hagworm.frame",
            "hagworm.frame.stress_tests",
            "hagworm.frame.tornado",
            "hagworm.frame.tornado.base",
            "hagworm.frame.tornado.socket",
            "hagworm.frame.tornado.web",
            "hagworm.static",
            "hagworm.third",
            "hagworm.third.aliyun",
            "hagworm.third.aliyun.rocketmq"
        ],
        "version": "3.13.4"
    },
    "haha": {
        "cmdline": [],
        "modules": [
            "haha"
        ],
        "version": "100.0.0"
    },
    "haha-list": {
        "cmdline": [],
        "modules": [
            "print_list"
        ],
        "version": "1.2.0"
    },
    "hahahaha-distributions": {
        "cmdline": [],
        "modules": [
            "hahahaha_distributions",
            "hahahaha_distributions.Binomialdistribution",
            "hahahaha_distributions.Gaussiandistribution",
            "hahahaha_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hahariri-nester": {
        "cmdline": [],
        "modules": [
            "hahariri_nester"
        ],
        "version": "1.22.0"
    },
    "hahatest": {
        "cmdline": [],
        "modules": [
            "hahatest"
        ],
        "version": "0.0.6"
    },
    "hai": {
        "cmdline": [],
        "modules": [
            "hai",
            "hai.boto3_multipart_upload",
            "hai.event_emitter",
            "hai.parallel",
            "hai.pipe_pump",
            "hai.rate_limiter"
        ],
        "version": "0.1.5"
    },
    "hai-yang": {
        "cmdline": [],
        "modules": [
            "example_pkg",
            "example_pkg.madui"
        ],
        "version": "0.0.3"
    },
    "haibao": {
        "cmdline": [],
        "modules": [
            "haibao",
            "haibao.UserAgent",
            "haibao.mysql_tools",
            "haibao.tools"
        ],
        "version": "1.1.1"
    },
    "haibinpython": {
        "cmdline": [],
        "modules": [
            "haibinpython"
        ],
        "version": "0.1"
    },
    "haibo": {
        "cmdline": [],
        "modules": [
            "haibo",
            "haibo.data2html",
            "haibo.log",
            "haibo.setcolor"
        ],
        "version": "0.1.2"
    },
    "haidata": {
        "cmdline": [],
        "modules": [
            "haidata",
            "haidata.drop_cols",
            "haidata.extract_returns",
            "haidata.fix_colnames",
            "haidata.fix_empty_cols",
            "haidata.fix_empty_rows",
            "haidata.fix_encode",
            "haidata.fix_excess_stdev",
            "haidata.haidatacfg",
            "haidata.haidatautils",
            "haidata.return_type",
            "haidata.set_excess_stdev",
            "haidata.to_datetime",
            "haidata.turn_to_int"
        ],
        "version": "0.0.8"
    },
    "haiderbhai-distributions": {
        "cmdline": [],
        "modules": [
            "haiderbhai_distributions",
            "haiderbhai_distributions.Binomialdistribution",
            "haiderbhai_distributions.Gaussiandistribution",
            "haiderbhai_distributions.Generaldistribution"
        ],
        "version": "10.0"
    },
    "haidv-oo": {
        "cmdline": [],
        "modules": [
            "haidv_oo"
        ],
        "version": "0.1.0"
    },
    "haigha": {
        "cmdline": [],
        "modules": [
            "haigha",
            "haigha.channel",
            "haigha.channel_pool",
            "haigha.classes",
            "haigha.classes.basic_class",
            "haigha.classes.channel_class",
            "haigha.classes.exchange_class",
            "haigha.classes.protocol_class",
            "haigha.classes.queue_class",
            "haigha.classes.transaction_class",
            "haigha.connection",
            "haigha.connections",
            "haigha.connections.rabbit_connection",
            "haigha.exceptions",
            "haigha.frames",
            "haigha.frames.content_frame",
            "haigha.frames.frame",
            "haigha.frames.header_frame",
            "haigha.frames.heartbeat_frame",
            "haigha.frames.method_frame",
            "haigha.message",
            "haigha.reader",
            "haigha.transports",
            "haigha.transports.event_transport",
            "haigha.transports.gevent_transport",
            "haigha.transports.socket_transport",
            "haigha.transports.transport",
            "haigha.writer"
        ],
        "version": "0.9.0"
    },
    "haihonglicom-test-package": {
        "cmdline": [],
        "modules": [
            "haihonglicom_test_package",
            "haihonglicom_test_package.test"
        ],
        "version": "1.0"
    },
    "haii": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "haijiang-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.5.1"
    },
    "haiku": {
        "cmdline": [],
        "modules": [],
        "version": "0.01"
    },
    "haiku-errors": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "haiku-josh-codes": {
        "cmdline": [],
        "modules": [
            "haiku",
            "haiku.IPget",
            "haiku.UDPget",
            "haiku.UDPsend",
            "haiku.discover",
            "haiku.fan",
            "haiku.getnewip",
            "haiku.light"
        ],
        "version": "0.6"
    },
    "haiku-lang": {
        "cmdline": [],
        "modules": [
            "haiku",
            "haiku.builtin",
            "haiku.builtin.base64_",
            "haiku.builtin.base64___test",
            "haiku.builtin.constant",
            "haiku.builtin.operator_",
            "haiku.builtin.pickle",
            "haiku.builtin.quote",
            "haiku.builtin.string_",
            "haiku.builtin.types",
            "haiku.environment",
            "haiku.interpreter",
            "haiku.interpreter.base",
            "haiku.pickle",
            "haiku.pickle.base",
            "haiku.pickle.canonical",
            "haiku.pickle.canonical__test",
            "haiku.pickle.meta",
            "haiku.pickle.simple",
            "haiku.pickle.simple__test",
            "haiku.shell",
            "haiku.types",
            "haiku.types.alpha",
            "haiku.types.boolean",
            "haiku.types.fraction",
            "haiku.types.integer",
            "haiku.types.matrix",
            "haiku.types.omega",
            "haiku.types.procedure",
            "haiku.types.relation",
            "haiku.types.sequence",
            "haiku.types.set_",
            "haiku.types.symbol",
            "haiku.types.tuple_",
            "haiku.types.unicode_",
            "haiku.utils",
            "haiku.utils.frozendict",
            "haiku.utils.serialization",
            "haiku.utils.testing"
        ],
        "version": "0.0.7"
    },
    "haiku-lst": {
        "cmdline": [],
        "modules": [
            "haiku",
            "haiku.analyzer",
            "haiku.analyzer.analyzer_impl",
            "haiku.analyzer.selector",
            "haiku.classifier",
            "haiku.classifier.classifier_impl",
            "haiku.classifier.grid",
            "haiku.classifier.learner",
            "haiku.classifier.learner.learner_impl",
            "haiku.classifier.learner.liblinear.python.liblinear",
            "haiku.classifier.learner.liblinear.python.liblinearutil",
            "haiku.converter",
            "haiku.converter.converter_impl",
            "haiku.export.skitai.__export__",
            "haiku.features",
            "haiku.features.analyzers",
            "haiku.features.selectors",
            "haiku.gac",
            "haiku.haiku"
        ],
        "version": "0.1.1.4"
    },
    "haikunator": {
        "cmdline": [],
        "modules": [
            "haikunator",
            "haikunator.haikunator",
            "haikunator.tests"
        ],
        "version": "2.1.0"
    },
    "hail": {
        "cmdline": [],
        "modules": [
            "hail",
            "hail.backend",
            "hail.backend.backend",
            "hail.backend.local_backend",
            "hail.backend.py4j_backend",
            "hail.backend.service_backend",
            "hail.backend.spark_backend",
            "hail.conftest",
            "hail.context",
            "hail.experimental",
            "hail.experimental.codec",
            "hail.experimental.compile",
            "hail.experimental.datasets",
            "hail.experimental.db",
            "hail.experimental.dnd",
            "hail.experimental.dnd.array",
            "hail.experimental.export_entries_by_col",
            "hail.experimental.expressions",
            "hail.experimental.filtering_allele_frequency",
            "hail.experimental.full_outer_join_mt",
            "hail.experimental.function",
            "hail.experimental.haplotype_freq_em",
            "hail.experimental.import_gtf",
            "hail.experimental.interact",
            "hail.experimental.ld_score_regression",
            "hail.experimental.ldscore",
            "hail.experimental.ldscsim",
            "hail.experimental.lens",
            "hail.experimental.loop",
            "hail.experimental.pca",
            "hail.experimental.phase_by_transmission",
            "hail.experimental.plots",
            "hail.experimental.tidyr",
            "hail.experimental.time",
            "hail.experimental.vcf_combiner",
            "hail.experimental.vcf_combiner.densify",
            "hail.experimental.vcf_combiner.sparse_mt_utils",
            "hail.experimental.vcf_combiner.sparse_split_multi",
            "hail.experimental.vcf_combiner.vcf_combiner",
            "hail.experimental.write_multiple",
            "hail.expr",
            "hail.expr.aggregators",
            "hail.expr.aggregators.aggregators",
            "hail.expr.blockmatrix_type",
            "hail.expr.builders",
            "hail.expr.expressions",
            "hail.expr.expressions.base_expression",
            "hail.expr.expressions.expression_typecheck",
            "hail.expr.expressions.expression_utils",
            "hail.expr.expressions.indices",
            "hail.expr.expressions.typed_expressions",
            "hail.expr.functions",
            "hail.expr.matrix_type",
            "hail.expr.nat",
            "hail.expr.table_type",
            "hail.expr.type_parsing",
            "hail.expr.types",
            "hail.fs",
            "hail.fs.fs",
            "hail.fs.google_fs",
            "hail.fs.hadoop_fs",
            "hail.fs.local_fs",
            "hail.genetics",
            "hail.genetics.call",
            "hail.genetics.locus",
            "hail.genetics.pedigree",
            "hail.genetics.reference_genome",
            "hail.hail_logging",
            "hail.ir",
            "hail.ir.base_ir",
            "hail.ir.blockmatrix_ir",
            "hail.ir.blockmatrix_reader",
            "hail.ir.blockmatrix_writer",
            "hail.ir.export_type",
            "hail.ir.ir",
            "hail.ir.matrix_ir",
            "hail.ir.matrix_reader",
            "hail.ir.matrix_writer",
            "hail.ir.register_aggregators",
            "hail.ir.register_functions",
            "hail.ir.renderer",
            "hail.ir.table_ir",
            "hail.ir.table_reader",
            "hail.ir.table_writer",
            "hail.ir.utils",
            "hail.linalg",
            "hail.linalg.blockmatrix",
            "hail.linalg.utils",
            "hail.linalg.utils.misc",
            "hail.matrixtable",
            "hail.methods",
            "hail.methods.family_methods",
            "hail.methods.impex",
            "hail.methods.misc",
            "hail.methods.pca",
            "hail.methods.qc",
            "hail.methods.relatedness",
            "hail.methods.relatedness.identity_by_descent",
            "hail.methods.relatedness.king",
            "hail.methods.relatedness.pc_relate",
            "hail.methods.statgen",
            "hail.nd",
            "hail.nd.nd",
            "hail.plot",
            "hail.plot.plots",
            "hail.stats",
            "hail.stats.linear_mixed_model",
            "hail.table",
            "hail.typecheck",
            "hail.typecheck.check",
            "hail.utils",
            "hail.utils.deduplicate",
            "hail.utils.hadoop_utils",
            "hail.utils.interval",
            "hail.utils.java",
            "hail.utils.linkedlist",
            "hail.utils.misc",
            "hail.utils.placement_tree",
            "hail.utils.struct",
            "hail.utils.tutorial",
            "hailtop",
            "hailtop.aiogoogle",
            "hailtop.aiogoogle.auth",
            "hailtop.aiogoogle.auth.access_token",
            "hailtop.aiogoogle.auth.credentials",
            "hailtop.aiogoogle.auth.session",
            "hailtop.aiogoogle.client",
            "hailtop.aiogoogle.client.base_client",
            "hailtop.aiogoogle.client.bigquery_client",
            "hailtop.aiogoogle.client.compute_client",
            "hailtop.aiogoogle.client.container_client",
            "hailtop.aiogoogle.client.iam_client",
            "hailtop.aiogoogle.client.logging_client",
            "hailtop.aiogoogle.client.storage_client",
            "hailtop.aiotools",
            "hailtop.aiotools.fs",
            "hailtop.aiotools.stream",
            "hailtop.aiotools.utils",
            "hailtop.auth",
            "hailtop.auth.auth",
            "hailtop.auth.sql_config",
            "hailtop.auth.tokens",
            "hailtop.batch",
            "hailtop.batch.backend",
            "hailtop.batch.batch",
            "hailtop.batch.batch_pool_executor",
            "hailtop.batch.conftest",
            "hailtop.batch.exceptions",
            "hailtop.batch.genetics",
            "hailtop.batch.genetics.regenie",
            "hailtop.batch.genetics.regenie.regenie",
            "hailtop.batch.globals",
            "hailtop.batch.job",
            "hailtop.batch.resource",
            "hailtop.batch.utils",
            "hailtop.batch_client",
            "hailtop.batch_client.aioclient",
            "hailtop.batch_client.client",
            "hailtop.batch_client.globals",
            "hailtop.batch_client.parse",
            "hailtop.cleanup_gcr",
            "hailtop.config",
            "hailtop.config.deploy_config",
            "hailtop.config.user_config",
            "hailtop.google_storage",
            "hailtop.hail_logging",
            "hailtop.hailctl",
            "hailtop.hailctl.auth",
            "hailtop.hailctl.auth.auth_list",
            "hailtop.hailctl.auth.cli",
            "hailtop.hailctl.auth.copy_paste_login",
            "hailtop.hailctl.auth.login",
            "hailtop.hailctl.auth.logout",
            "hailtop.hailctl.auth.user",
            "hailtop.hailctl.batch",
            "hailtop.hailctl.batch.batch_cli_utils",
            "hailtop.hailctl.batch.billing",
            "hailtop.hailctl.batch.billing.cli",
            "hailtop.hailctl.batch.billing.get",
            "hailtop.hailctl.batch.billing.list_billing_projects",
            "hailtop.hailctl.batch.cancel",
            "hailtop.hailctl.batch.cli",
            "hailtop.hailctl.batch.delete",
            "hailtop.hailctl.batch.get",
            "hailtop.hailctl.batch.job",
            "hailtop.hailctl.batch.list_batches",
            "hailtop.hailctl.batch.log",
            "hailtop.hailctl.batch.wait",
            "hailtop.hailctl.config",
            "hailtop.hailctl.config.cli",
            "hailtop.hailctl.curl",
            "hailtop.hailctl.dataproc",
            "hailtop.hailctl.dataproc.cli",
            "hailtop.hailctl.dataproc.cluster_config",
            "hailtop.hailctl.dataproc.connect",
            "hailtop.hailctl.dataproc.deploy_metadata",
            "hailtop.hailctl.dataproc.describe",
            "hailtop.hailctl.dataproc.diagnose",
            "hailtop.hailctl.dataproc.gcloud",
            "hailtop.hailctl.dataproc.list_clusters",
            "hailtop.hailctl.dataproc.modify",
            "hailtop.hailctl.dataproc.start",
            "hailtop.hailctl.dataproc.stop",
            "hailtop.hailctl.dataproc.submit",
            "hailtop.hailctl.dataproc.utils",
            "hailtop.hailctl.dev",
            "hailtop.hailctl.dev.cli",
            "hailtop.hailctl.dev.config",
            "hailtop.hailctl.dev.config.cli",
            "hailtop.hailctl.dev.deploy",
            "hailtop.hailctl.dev.deploy.cli",
            "hailtop.hailctl.dev.query",
            "hailtop.hailctl.dev.query.cli",
            "hailtop.tls",
            "hailtop.utils",
            "hailtop.utils.process",
            "hailtop.utils.rate_limiter",
            "hailtop.utils.rates",
            "hailtop.utils.serialization",
            "hailtop.utils.time",
            "hailtop.utils.tqdm",
            "hailtop.utils.utils"
        ],
        "version": "0.2.58"
    },
    "hail4j11": {
        "cmdline": [],
        "modules": [
            "hail",
            "hail.backend",
            "hail.backend.backend",
            "hail.backend.local_backend",
            "hail.backend.py4j_backend",
            "hail.backend.service_backend",
            "hail.backend.spark_backend",
            "hail.conftest",
            "hail.context",
            "hail.docs",
            "hail.docs.conf",
            "hail.experimental",
            "hail.experimental.codec",
            "hail.experimental.compile",
            "hail.experimental.datasets",
            "hail.experimental.db",
            "hail.experimental.dnd",
            "hail.experimental.dnd.array",
            "hail.experimental.export_entries_by_col",
            "hail.experimental.expressions",
            "hail.experimental.filtering_allele_frequency",
            "hail.experimental.full_outer_join_mt",
            "hail.experimental.function",
            "hail.experimental.haplotype_freq_em",
            "hail.experimental.import_gtf",
            "hail.experimental.interact",
            "hail.experimental.ld_score_regression",
            "hail.experimental.ldscore",
            "hail.experimental.ldscsim",
            "hail.experimental.lens",
            "hail.experimental.loop",
            "hail.experimental.pca",
            "hail.experimental.phase_by_transmission",
            "hail.experimental.plots",
            "hail.experimental.tidyr",
            "hail.experimental.time",
            "hail.experimental.vcf_combiner",
            "hail.experimental.vcf_combiner.densify",
            "hail.experimental.vcf_combiner.sparse_mt_utils",
            "hail.experimental.vcf_combiner.sparse_split_multi",
            "hail.experimental.vcf_combiner.vcf_combiner",
            "hail.experimental.write_multiple",
            "hail.expr",
            "hail.expr.aggregators",
            "hail.expr.aggregators.aggregators",
            "hail.expr.blockmatrix_type",
            "hail.expr.builders",
            "hail.expr.expressions",
            "hail.expr.expressions.base_expression",
            "hail.expr.expressions.expression_typecheck",
            "hail.expr.expressions.expression_utils",
            "hail.expr.expressions.indices",
            "hail.expr.expressions.typed_expressions",
            "hail.expr.functions",
            "hail.expr.matrix_type",
            "hail.expr.nat",
            "hail.expr.table_type",
            "hail.expr.type_parsing",
            "hail.expr.types",
            "hail.fs",
            "hail.fs.fs",
            "hail.fs.google_fs",
            "hail.fs.hadoop_fs",
            "hail.fs.local_fs",
            "hail.genetics",
            "hail.genetics.call",
            "hail.genetics.locus",
            "hail.genetics.pedigree",
            "hail.genetics.reference_genome",
            "hail.hail_logging",
            "hail.ir",
            "hail.ir.base_ir",
            "hail.ir.blockmatrix_ir",
            "hail.ir.blockmatrix_reader",
            "hail.ir.blockmatrix_writer",
            "hail.ir.export_type",
            "hail.ir.ir",
            "hail.ir.matrix_ir",
            "hail.ir.matrix_reader",
            "hail.ir.matrix_writer",
            "hail.ir.register_aggregators",
            "hail.ir.register_functions",
            "hail.ir.renderer",
            "hail.ir.table_ir",
            "hail.ir.table_reader",
            "hail.ir.table_writer",
            "hail.ir.utils",
            "hail.linalg",
            "hail.linalg.blockmatrix",
            "hail.linalg.utils",
            "hail.linalg.utils.misc",
            "hail.matrixtable",
            "hail.methods",
            "hail.methods.family_methods",
            "hail.methods.impex",
            "hail.methods.misc",
            "hail.methods.qc",
            "hail.methods.statgen",
            "hail.nd",
            "hail.nd.nd",
            "hail.plot",
            "hail.plot.plots",
            "hail.stats",
            "hail.stats.linear_mixed_model",
            "hail.table",
            "hail.typecheck",
            "hail.typecheck.check",
            "hail.utils",
            "hail.utils.hadoop_utils",
            "hail.utils.interval",
            "hail.utils.java",
            "hail.utils.linkedlist",
            "hail.utils.misc",
            "hail.utils.placement_tree",
            "hail.utils.struct",
            "hail.utils.tutorial",
            "hailtop",
            "hailtop.aiogoogle",
            "hailtop.aiogoogle.auth",
            "hailtop.aiogoogle.auth.access_token",
            "hailtop.aiogoogle.auth.credentials",
            "hailtop.aiogoogle.auth.session",
            "hailtop.aiogoogle.client",
            "hailtop.aiogoogle.client.base_client",
            "hailtop.aiogoogle.client.compute_client",
            "hailtop.aiogoogle.client.container_client",
            "hailtop.aiogoogle.client.iam_client",
            "hailtop.aiogoogle.client.logging_client",
            "hailtop.auth",
            "hailtop.auth.auth",
            "hailtop.auth.sql_config",
            "hailtop.auth.tokens",
            "hailtop.batch",
            "hailtop.batch.backend",
            "hailtop.batch.batch",
            "hailtop.batch.batch_pool_executor",
            "hailtop.batch.conftest",
            "hailtop.batch.job",
            "hailtop.batch.resource",
            "hailtop.batch.utils",
            "hailtop.batch_client",
            "hailtop.batch_client.aioclient",
            "hailtop.batch_client.client",
            "hailtop.batch_client.globals",
            "hailtop.batch_client.parse",
            "hailtop.cleanup_gcr",
            "hailtop.config",
            "hailtop.config.deploy_config",
            "hailtop.config.user_config",
            "hailtop.google_storage",
            "hailtop.hail_logging",
            "hailtop.hailctl",
            "hailtop.hailctl.auth",
            "hailtop.hailctl.auth.auth_list",
            "hailtop.hailctl.auth.cli",
            "hailtop.hailctl.auth.copy_paste_login",
            "hailtop.hailctl.auth.login",
            "hailtop.hailctl.auth.logout",
            "hailtop.hailctl.batch",
            "hailtop.hailctl.batch.batch_cli_utils",
            "hailtop.hailctl.batch.cancel",
            "hailtop.hailctl.batch.cli",
            "hailtop.hailctl.batch.delete",
            "hailtop.hailctl.batch.get",
            "hailtop.hailctl.batch.job",
            "hailtop.hailctl.batch.list_batches",
            "hailtop.hailctl.batch.log",
            "hailtop.hailctl.batch.wait",
            "hailtop.hailctl.config",
            "hailtop.hailctl.config.cli",
            "hailtop.hailctl.curl",
            "hailtop.hailctl.dataproc",
            "hailtop.hailctl.dataproc.cli",
            "hailtop.hailctl.dataproc.cluster_config",
            "hailtop.hailctl.dataproc.connect",
            "hailtop.hailctl.dataproc.deploy_metadata",
            "hailtop.hailctl.dataproc.describe",
            "hailtop.hailctl.dataproc.diagnose",
            "hailtop.hailctl.dataproc.gcloud",
            "hailtop.hailctl.dataproc.list_clusters",
            "hailtop.hailctl.dataproc.modify",
            "hailtop.hailctl.dataproc.start",
            "hailtop.hailctl.dataproc.stop",
            "hailtop.hailctl.dataproc.submit",
            "hailtop.hailctl.dataproc.utils",
            "hailtop.hailctl.dev",
            "hailtop.hailctl.dev.cli",
            "hailtop.hailctl.dev.config",
            "hailtop.hailctl.dev.config.cli",
            "hailtop.hailctl.dev.deploy",
            "hailtop.hailctl.dev.deploy.cli",
            "hailtop.tls",
            "hailtop.utils",
            "hailtop.utils.process",
            "hailtop.utils.rate_limiter",
            "hailtop.utils.rates",
            "hailtop.utils.time",
            "hailtop.utils.tqdm",
            "hailtop.utils.utils",
            "test",
            "test.hail",
            "test.hail.conftest",
            "test.hail.experimental",
            "test.hail.experimental.test_annotation_db",
            "test.hail.experimental.test_codec",
            "test.hail.experimental.test_dnd_array",
            "test.hail.experimental.test_experimental",
            "test.hail.experimental.test_time",
            "test.hail.experimental.test_vcf_combiner",
            "test.hail.expr",
            "test.hail.expr.test_expr",
            "test.hail.expr.test_functions",
            "test.hail.expr.test_ndarrays",
            "test.hail.expr.test_show",
            "test.hail.expr.test_types",
            "test.hail.genetics",
            "test.hail.genetics.test_call",
            "test.hail.genetics.test_locus",
            "test.hail.genetics.test_pedigree",
            "test.hail.genetics.test_reference_genome",
            "test.hail.helpers",
            "test.hail.linalg",
            "test.hail.linalg.test_linalg",
            "test.hail.matrixtable",
            "test.hail.matrixtable.test_file_formats",
            "test.hail.matrixtable.test_grouped_matrix_table",
            "test.hail.matrixtable.test_matrix_table",
            "test.hail.methods",
            "test.hail.methods.test_family_methods",
            "test.hail.methods.test_impex",
            "test.hail.methods.test_misc",
            "test.hail.methods.test_qc",
            "test.hail.methods.test_statgen",
            "test.hail.stats",
            "test.hail.stats.test_linear_mixed_model",
            "test.hail.table",
            "test.hail.table.test_grouped_table",
            "test.hail.table.test_table",
            "test.hail.test_context",
            "test.hail.test_ir",
            "test.hail.test_no_context",
            "test.hail.typecheck",
            "test.hail.typecheck.test_typecheck",
            "test.hail.utils",
            "test.hail.utils.test_google_fs_utils",
            "test.hail.utils.test_placement_tree",
            "test.hail.utils.test_utils",
            "test.hailtop",
            "test.hailtop.batch",
            "test.hailtop.batch.test_batch",
            "test.hailtop.batch.test_batch_pool_executor",
            "test.hailtop.gear",
            "test.hailtop.gear.test_deploy_config",
            "test.hailtop.hailctl",
            "test.hailtop.hailctl.dataproc",
            "test.hailtop.hailctl.dataproc.conftest",
            "test.hailtop.hailctl.dataproc.test_list_clusters",
            "test.hailtop.hailctl.dataproc.test_modify",
            "test.hailtop.hailctl.dataproc.test_start",
            "test.hailtop.hailctl.dataproc.test_stop",
            "test.hailtop.hailctl.dataproc.test_submit"
        ],
        "version": "0.2.53"
    },
    "hail4java": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hail4java11": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hailstone": {
        "cmdline": [],
        "modules": [
            "hailstone"
        ],
        "version": "1.0.0"
    },
    "hailstorm": {
        "cmdline": [],
        "modules": [
            "hailstorm",
            "hailstorm.escape",
            "hailstorm.template",
            "hailstorm.util"
        ],
        "version": "1.0.0"
    },
    "hailstorms": {
        "cmdline": [],
        "modules": [
            "hailstorms"
        ],
        "version": "1.1.0"
    },
    "haima": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "haioworld": {
        "cmdline": [],
        "modules": [
            "haiworld"
        ],
        "version": "0.0.1"
    },
    "haip": {
        "cmdline": [],
        "modules": [
            "haip"
        ],
        "version": "0.1.1"
    },
    "haip-config": {
        "cmdline": [],
        "modules": [
            "haip",
            "haip.config"
        ],
        "version": "0.1.9"
    },
    "haip-confluence": {
        "cmdline": [],
        "modules": [
            "haip",
            "haip.confluence"
        ],
        "version": "0.1.1"
    },
    "haip-database": {
        "cmdline": [],
        "modules": [
            "haip",
            "haip.database",
            "haip.database.driver",
            "haip.database.drivers",
            "haip.database.drivers.mssql",
            "haip.database.drivers.mysql",
            "haip.database.drivers.oracle",
            "haip.database.pool"
        ],
        "version": "0.1.4"
    },
    "haip-template": {
        "cmdline": [],
        "modules": [
            "haip",
            "haip.template"
        ],
        "version": "0.1.3"
    },
    "haipproxy": {
        "cmdline": [],
        "modules": [
            "haipproxy",
            "haipproxy._version",
            "haipproxy.client",
            "haipproxy.client.core",
            "haipproxy.client.py_cli",
            "haipproxy.client.scrapy_middleware",
            "haipproxy.client.squid",
            "haipproxy.config",
            "haipproxy.config.rules",
            "haipproxy.config.settings",
            "haipproxy.exceptions",
            "haipproxy.logger",
            "haipproxy.utils",
            "haipproxy.utils.err_trace",
            "haipproxy.utils.functools",
            "haipproxy.utils.redis_util"
        ],
        "version": "0.11.6"
    },
    "haipproxy-client": {
        "cmdline": [],
        "modules": [
            "haipproxy_client",
            "haipproxy_client.client",
            "haipproxy_client.client.core",
            "haipproxy_client.client.py_cli",
            "haipproxy_client.client.squid",
            "haipproxy_client.config",
            "haipproxy_client.config.rules",
            "haipproxy_client.config.settings",
            "haipproxy_client.utils",
            "haipproxy_client.utils.functools",
            "haipproxy_client.utils.redis_util"
        ],
        "version": "1.0"
    },
    "hairball": {
        "cmdline": [],
        "modules": [
            "hairball",
            "hairball.plugins",
            "hairball.plugins.blocks",
            "hairball.plugins.checks",
            "hairball.plugins.convention",
            "hairball.plugins.duplicate",
            "hairball.plugins.initialization"
        ],
        "version": "0.3"
    },
    "hairgap": {
        "cmdline": [],
        "modules": [
            "hairgap",
            "hairgap.cli",
            "hairgap.constants",
            "hairgap.receiver",
            "hairgap.sender",
            "hairgap.tests",
            "hairgap.tests.hairgapr",
            "hairgap.tests.hairgaps",
            "hairgap.tests.test_protocol",
            "hairgap.tests.test_sender",
            "hairgap.tests.test_utils",
            "hairgap.utils"
        ],
        "version": "1.1.6"
    },
    "haishoku": {
        "cmdline": [],
        "modules": [
            "haishoku",
            "haishoku.alg",
            "haishoku.haillow",
            "haishoku.haishoku"
        ],
        "version": "1.1.8"
    },
    "haisweetviz": {
        "cmdline": [],
        "modules": [
            "sweetviz",
            "sweetviz.config",
            "sweetviz.dataframe_report",
            "sweetviz.feature_config",
            "sweetviz.from_dython",
            "sweetviz.from_profiling_pandas",
            "sweetviz.graph",
            "sweetviz.graph_associations",
            "sweetviz.graph_cat",
            "sweetviz.graph_legend",
            "sweetviz.graph_numeric",
            "sweetviz.series_analyzer",
            "sweetviz.series_analyzer_cat",
            "sweetviz.series_analyzer_numeric",
            "sweetviz.series_analyzer_text",
            "sweetviz.sv_html",
            "sweetviz.sv_html_formatters",
            "sweetviz.sv_math",
            "sweetviz.sv_public",
            "sweetviz.sv_types",
            "sweetviz.type_detection",
            "sweetviz.utils"
        ],
        "version": "1.0.2"
    },
    "haiteamlab": {
        "cmdline": [],
        "modules": [
            "haiteamlab",
            "haiteamlab.listfunc"
        ],
        "version": "0.5.0"
    },
    "haithamdistribution": {
        "cmdline": [],
        "modules": [
            "HaithamDistribution",
            "HaithamDistribution.Binomialdistribution",
            "HaithamDistribution.Gaussiandistribution",
            "HaithamDistribution.Generaldistribution"
        ],
        "version": "0.1"
    },
    "haka-mqtt": {
        "cmdline": [
            "mqtt-sub.py"
        ],
        "modules": [
            "haka_mqtt",
            "haka_mqtt.clock",
            "haka_mqtt.cycle_iter",
            "haka_mqtt.dns_async",
            "haka_mqtt.dns_sync",
            "haka_mqtt.exception",
            "haka_mqtt.frontends",
            "haka_mqtt.frontends.event_queue",
            "haka_mqtt.frontends.poll",
            "haka_mqtt.mqtt_request",
            "haka_mqtt.null_log",
            "haka_mqtt.on_str",
            "haka_mqtt.packet_ids",
            "haka_mqtt.reactor",
            "haka_mqtt.scheduler",
            "haka_mqtt.selector",
            "haka_mqtt.socket_factory"
        ],
        "version": "0.3.5"
    },
    "hake": {
        "cmdline": [],
        "modules": [
            "hake"
        ],
        "version": "0.1.2"
    },
    "hakim-nester": {
        "cmdline": [],
        "modules": [
            "hakim_nester"
        ],
        "version": "1.4.0"
    },
    "hakka": {
        "cmdline": [],
        "modules": [
            "hakka",
            "hakka.cli",
            "hakka.client",
            "hakka.exceptions",
            "hakka.hakka",
            "hakka.helpers",
            "hakka.logging",
            "hakka.types",
            "hakka.utils"
        ],
        "version": "0.2.1"
    },
    "hakka-cli": {
        "cmdline": [],
        "modules": [
            "hakkacli",
            "hakkacli.main",
            "hakkacli.scripts"
        ],
        "version": "0.1.3"
    },
    "hakku": {
        "cmdline": [],
        "modules": [
            "hakku",
            "hakku.analysis",
            "hakku.article",
            "hakku.synonyms",
            "hakku.visualization",
            "hakku.word_occurrance"
        ],
        "version": "0.1.3"
    },
    "hakmatak": {
        "cmdline": [
            "hakmatakread",
            "hakmatakwrite"
        ],
        "modules": [
            "hakmatak",
            "hakmatak.cache",
            "hakmatak.constant",
            "hakmatak.d11n",
            "hakmatak.identifier",
            "hakmatak.leaf",
            "hakmatak.node",
            "hakmatak.w10n",
            "hakmatak.worker4r",
            "hakmatak.worker4w",
            "hakmatak/cli",
            "hakmatak/cli.read",
            "hakmatak/cli.write",
            "hakmatak/output",
            "hakmatak/output.factory",
            "hakmatak/output.json",
            "hakmatak/output.raw",
            "hakmatak/output.writer",
            "hakmatak/output/html",
            "hakmatak/output/html.dirlist",
            "hakmatak/store",
            "hakmatak/store/read",
            "hakmatak/store/read.bytearray",
            "hakmatak/store/read.factory",
            "hakmatak/store/read.reader",
            "hakmatak/store/read/example",
            "hakmatak/store/read/example.basic",
            "hakmatak/store/write",
            "hakmatak/store/write.factory",
            "hakmatak/store/write.writer",
            "hakmatak/util",
            "hakmatak/util.magic",
            "hakmatak/wsgi",
            "hakmatak/wsgi.index",
            "hakmatak/wsgi.webify",
            "hakmatak/wsgi.webread",
            "hakmatak/wsgi.webwrite"
        ],
        "version": "1.1.2"
    },
    "hakone-wordcloud-snkw": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hakpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hakuna-matata": {
        "cmdline": [],
        "modules": [
            "hakuna_matata",
            "hakuna_matata.agent",
            "hakuna_matata.agent.asp",
            "hakuna_matata.agent.mode",
            "hakuna_matata.agent.perfect",
            "hakuna_matata.agent.proxy",
            "hakuna_matata.asp",
            "hakuna_matata.asp.answer",
            "hakuna_matata.asp.lite",
            "hakuna_matata.cli",
            "hakuna_matata.common",
            "hakuna_matata.common.action",
            "hakuna_matata.common.grid",
            "hakuna_matata.common.location",
            "hakuna_matata.common.orientation",
            "hakuna_matata.common.percept",
            "hakuna_matata.simulator",
            "hakuna_matata.simulator.world",
            "hakuna_matata.util"
        ],
        "version": "0.0.3"
    },
    "hal": {
        "cmdline": [],
        "modules": [
            "HAL",
            "HAL.HAL",
            "HAL.context",
            "HAL.dbtest",
            "HAL.engine",
            "HAL.engine.base",
            "HAL.engine.general",
            "HAL.engine.generic",
            "HAL.engine.matrix",
            "HAL.engine.oneword",
            "HAL.engine.plugin",
            "HAL.engine.regex",
            "HAL.mainentry",
            "HAL.spam",
            "HAL.string",
            "HAL.tkgui"
        ],
        "version": "0.0.3"
    },
    "hal-assistant": {
        "cmdline": [],
        "modules": [
            "hal",
            "hal.hal",
            "hal.library",
            "hal.version"
        ],
        "version": "0.3"
    },
    "hal-cgp": {
        "cmdline": [],
        "modules": [
            "cgp",
            "cgp.__version__",
            "cgp.cartesian_graph",
            "cgp.ea",
            "cgp.ea.mu_plus_lambda",
            "cgp.genome",
            "cgp.hl_api",
            "cgp.individual",
            "cgp.local_search",
            "cgp.local_search.gradient_based",
            "cgp.node",
            "cgp.node_factories",
            "cgp.population",
            "cgp.primitives",
            "cgp.utils"
        ],
        "version": "0.1.1"
    },
    "hal-cli": {
        "cmdline": [],
        "modules": [
            "hal",
            "hal.cli",
            "hal.config",
            "hal.hal9000",
            "hal.sftp"
        ],
        "version": "0.1.1"
    },
    "hal-codec": {
        "cmdline": [],
        "modules": [
            "hal_codec"
        ],
        "version": "1.0.2"
    },
    "hal-json": {
        "cmdline": [],
        "modules": [
            "hal"
        ],
        "version": "0.1"
    },
    "hal-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "hal-x": {
        "cmdline": [],
        "modules": [
            "hal",
            "hal.classify",
            "hal.custom_server",
            "hal.graph",
            "hal.metric",
            "hal.pipeline",
            "hal.plotjs",
            "hal.plotlygraph",
            "hal.plotting",
            "hal.purify",
            "hal.tree",
            "hal.tupledict",
            "hal.utility"
        ],
        "version": "0.992"
    },
    "hal9000": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hal9k-api": {
        "cmdline": [],
        "modules": [
            "hal9k_api",
            "hal9k_api.api",
            "hal9k_api.const"
        ],
        "version": "0.1.2"
    },
    "halal-network": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "halalnetwork": {
        "cmdline": [],
        "modules": [],
        "version": "0.9"
    },
    "halalnetworkst": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "halaloyamora": {
        "cmdline": [],
        "modules": [
            "weather",
            "weather.get_reading",
            "weather.show_reading"
        ],
        "version": "1.0.0"
    },
    "halb": {
        "cmdline": [
            "lbtool"
        ],
        "modules": [
            "halb",
            "halb.halb"
        ],
        "version": "0.1.5"
    },
    "halberd": {
        "cmdline": [
            "halberd"
        ],
        "modules": [
            "Halberd",
            "Halberd.ScanTask",
            "Halberd.clientlib",
            "Halberd.clues",
            "Halberd.clues.Clue",
            "Halberd.clues.analysis",
            "Halberd.clues.file",
            "Halberd.conflib",
            "Halberd.crew",
            "Halberd.logger",
            "Halberd.reportlib",
            "Halberd.shell",
            "Halberd.util",
            "Halberd.version"
        ],
        "version": "0.2.4"
    },
    "halcon": {
        "cmdline": [],
        "modules": [
            "halcon",
            "halcon.search"
        ],
        "version": "0.0.21"
    },
    "halcyon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haldane": {
        "cmdline": [],
        "modules": [
            "app",
            "app.aws",
            "app.basic_auth",
            "app.config",
            "app.filters",
            "app.glogging",
            "app.log",
            "app.ssl_279",
            "app.utils",
            "app.views"
        ],
        "version": "0.3.0"
    },
    "haleasy": {
        "cmdline": [],
        "modules": [
            "haleasy"
        ],
        "version": "0.4.3"
    },
    "halef-setu": {
        "cmdline": [],
        "modules": [
            "halef_setu",
            "halef_setu.features",
            "halef_setu.models",
            "halef_setu_api",
            "halef_setu_api.views"
        ],
        "version": "0.0.5"
    },
    "halem": {
        "cmdline": [],
        "modules": [
            "halem",
            "halem.Base_functions",
            "halem.Calc_path",
            "halem.Functions",
            "halem.Functions_old",
            "halem.Mesh_maker",
            "halem.particle_tracking",
            "halem.simulation"
        ],
        "version": "0.3.1"
    },
    "halem-pkg-pietervanhalem": {
        "cmdline": [],
        "modules": [
            "halem",
            "halem.Calc_path",
            "halem.Flow_class",
            "halem.Functions",
            "halem.Mesh_maker"
        ],
        "version": "0.1.0"
    },
    "halerror": {
        "cmdline": [],
        "modules": [
            "halerror"
        ],
        "version": "0.4.1"
    },
    "halfbakery-driver": {
        "cmdline": [],
        "modules": [
            "halfbakery_driver",
            "halfbakery_driver.api",
            "halfbakery_driver.test_",
            "halfbakery_driver.utils"
        ],
        "version": "0.1.5"
    },
    "halfjson": {
        "cmdline": [],
        "modules": [
            "half_json",
            "half_json.core",
            "half_json.json_util",
            "half_json.main"
        ],
        "version": "0.1.2"
    },
    "halfnarp": {
        "cmdline": [],
        "modules": [
            "backrest",
            "backrest.commands",
            "backrest.models",
            "backrest.testing",
            "backrest.views"
        ],
        "version": "1.0.0"
    },
    "halfpipe": {
        "cmdline": [],
        "modules": [
            "halfpipe",
            "halfpipe.functional"
        ],
        "version": "0.4"
    },
    "halide": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "halilhan": {
        "cmdline": [],
        "modules": [
            "halilhan",
            "halilhan.halilhan"
        ],
        "version": "0.2"
    },
    "halimun": {
        "cmdline": [],
        "modules": [
            "halimun"
        ],
        "version": "0.1.1"
    },
    "halite": {
        "cmdline": [],
        "modules": [
            "halite",
            "halite.aiding",
            "halite.bottle",
            "halite.genindex",
            "halite.server_bottle",
            "halite.test",
            "halite.test.functional",
            "halite.test.functional.config_helper",
            "halite.test.functional.halite_functional_tests"
        ],
        "version": "0.1.17"
    },
    "halite-agent": {
        "cmdline": [],
        "modules": [
            "halite_agent",
            "halite_agent.api",
            "halite_agent.api.KaggleClient",
            "halite_agent.data",
            "halite_agent.data.fetch_dataset",
            "halite_agent.data.make_dataset",
            "halite_agent.features",
            "halite_agent.features.build_features",
            "halite_agent.visualization",
            "halite_agent.visualization.visualize"
        ],
        "version": "0.1.1"
    },
    "halite-season-converter": {
        "cmdline": [],
        "modules": [
            "halite_season_converter",
            "halite_season_converter.converters",
            "halite_season_converter.converters.convert_31_to_3",
            "halite_season_converter.converters.convert_3_to_31",
            "halite_season_converter.schemas",
            "halite_season_converter.schemas.halite_2",
            "halite_season_converter.schemas.halite_3",
            "halite_season_converter.schemas.halite_31",
            "halite_season_converter.utils"
        ],
        "version": "0.1.0"
    },
    "hall-cond": {
        "cmdline": [],
        "modules": [
            "hall_cond",
            "hall_cond.hall_conductivity",
            "hall_cond.ifinsu"
        ],
        "version": "0.1.0"
    },
    "halla": {
        "cmdline": [],
        "modules": [
            "halla",
            "halla.HSIC",
            "halla.config",
            "halla.distance",
            "halla.halla",
            "halla.hallagram",
            "halla.hallascatter",
            "halla.hierarchy",
            "halla.logger",
            "halla.parser",
            "halla.plot",
            "halla.stats",
            "halla.store",
            "halla.synthetic_data",
            "halla.tests",
            "halla.tests.advanced_tests_distance",
            "halla.tests.basic_tests_stats",
            "halla.tests.halla_test"
        ],
        "version": "0.8.17"
    },
    "hallgrim": {
        "cmdline": [
            "hallgrim"
        ],
        "modules": [
            "hallgrim",
            "hallgrim.IliasXMLCreator",
            "hallgrim.IliasXMLCreator.abstract_question",
            "hallgrim.IliasXMLCreator.free",
            "hallgrim.IliasXMLCreator.gap",
            "hallgrim.IliasXMLCreator.multi",
            "hallgrim.IliasXMLCreator.order",
            "hallgrim.IliasXMLCreator.packer",
            "hallgrim.IliasXMLCreator.single",
            "hallgrim.IliasXMLCreator.xmlBuildingBlocks",
            "hallgrim.MultipartEncoder",
            "hallgrim.custom_markdown",
            "hallgrim.hallgrim",
            "hallgrim.messages",
            "hallgrim.parser",
            "hallgrim.templates",
            "hallgrim.uploader"
        ],
        "version": "0.4.0"
    },
    "hallgrimjs": {
        "cmdline": [
            "hallgrimJS"
        ],
        "modules": [
            "hallgrimJS",
            "hallgrimJS.IliasXMLCreator",
            "hallgrimJS.IliasXMLCreator.abstract_question",
            "hallgrimJS.IliasXMLCreator.free",
            "hallgrimJS.IliasXMLCreator.gap",
            "hallgrimJS.IliasXMLCreator.javaScript",
            "hallgrimJS.IliasXMLCreator.multi",
            "hallgrimJS.IliasXMLCreator.order",
            "hallgrimJS.IliasXMLCreator.packer",
            "hallgrimJS.IliasXMLCreator.single",
            "hallgrimJS.IliasXMLCreator.xmlBuildingBlocks",
            "hallgrimJS.MultipartEncoder",
            "hallgrimJS.asciiMathConverter",
            "hallgrimJS.custom_markdown",
            "hallgrimJS.hallgrimJS",
            "hallgrimJS.javaScriptMiscTools",
            "hallgrimJS.javaScriptTagProcessing",
            "hallgrimJS.javaScriptUtils",
            "hallgrimJS.messages",
            "hallgrimJS.parser",
            "hallgrimJS.tablemaker",
            "hallgrimJS.taskPreProcessing",
            "hallgrimJS.templates",
            "hallgrimJS.uploader"
        ],
        "version": "0.6.5"
    },
    "hallie": {
        "cmdline": [],
        "modules": [
            "hallie",
            "hallie.hallie",
            "hallie.modules",
            "hallie.modules.browser",
            "hallie.modules.files",
            "hallie.modules.install",
            "hallie.modules.itunes",
            "hallie.modules.settings",
            "hallie.modules.speech",
            "hallie.modules.user",
            "tests",
            "tests.test_hallie"
        ],
        "version": "0.1.1"
    },
    "hallmonitor": {
        "cmdline": [
            "hallmonitor"
        ],
        "modules": [
            "hallmonitor",
            "hallmonitor.addons",
            "hallmonitor.api",
            "hallmonitor.hallmonitor",
            "hallmonitor.wsgi",
            "hallmonitor/resources",
            "hallmonitor/resources.endpoint",
            "hallmonitor/resources.health",
            "hallmonitor/services",
            "hallmonitor/services.endpoint"
        ],
        "version": "0.6.3"
    },
    "halloween": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hallu": {
        "cmdline": [],
        "modules": [
            "hallu",
            "hallu.__version__",
            "hallu.hallu"
        ],
        "version": "0.0.1"
    },
    "hallucination": {
        "cmdline": [],
        "modules": [
            "hallucination",
            "hallucination.models"
        ],
        "version": "0.2.16"
    },
    "hallucinations": {
        "cmdline": [],
        "modules": [
            "hallucinations"
        ],
        "version": "0.1.4"
    },
    "halma-game": {
        "cmdline": [],
        "modules": [
            "halma_game",
            "halma_game.halma_model",
            "halma_game.halma_player",
            "halma_game.halma_player_01_A",
            "halma_game.halma_player_01_B",
            "halma_game.halma_player_02_A",
            "halma_game.halma_player_02_B",
            "halma_game.halma_player_03_A",
            "halma_game.halma_player_03_B",
            "halma_game.halma_player_04_A",
            "halma_game.halma_player_04_B",
            "halma_game.halma_player_human"
        ],
        "version": "0.3.6"
    },
    "halo": {
        "cmdline": [],
        "modules": [
            "halo",
            "halo._utils",
            "halo.cursor",
            "halo.halo",
            "halo.halo_notebook"
        ],
        "version": "0.0.30"
    },
    "halo-aws": {
        "cmdline": [],
        "modules": [
            "halo_aws",
            "halo_aws.providers",
            "halo_aws.providers.cloud",
            "halo_aws.providers.cloud.aws",
            "halo_aws.providers.cloud.aws.aws",
            "halo_aws.providers.cloud.aws.base_util",
            "halo_aws.providers.cloud.aws.exceptions",
            "halo_aws.providers.cloud.aws.models",
            "halo_aws.providers.cloud.aws.ses",
            "halo_aws.providers.cloud.aws.settingsx"
        ],
        "version": "0.11.41"
    },
    "halo-bian": {
        "cmdline": [],
        "modules": [
            "docs",
            "halo_bian",
            "halo_bian.bian",
            "halo_bian.bian.abs_bian_srv",
            "halo_bian.bian.bian",
            "halo_bian.bian.db",
            "halo_bian.bian.exceptions",
            "halo_bian.bian.mixin_err_msg",
            "halo_bian.bian.plugins.halo_bian_config_plugin",
            "halo_bian.bian.plugins.halo_bian_defs_plugin",
            "halo_bian.bian.plugins.halo_bian_err_plugin",
            "halo_bian.bian.plugins.halo_bian_mixin_plugin"
        ],
        "version": "0.11.102"
    },
    "halo-cli": {
        "cmdline": [],
        "modules": [
            "halocli",
            "halocli.cli",
            "halocli.exception",
            "halocli.plugin",
            "halocli.plugin.command",
            "halocli.plugin.plugin_manager",
            "halocli.plugin.plugins",
            "halocli.plugin.plugins.bian",
            "halocli.plugin.plugins.bian.code",
            "halocli.plugin.plugins.bian.code.halo_bian_defs_plugin",
            "halocli.plugin.plugins.bian.code.halo_bian_err_plugin",
            "halocli.plugin.plugins.bian.code.halo_bian_mixin_plugin",
            "halocli.plugin.plugins.bian.extend",
            "halocli.plugin.plugins.bian.extend.extend_bian_plugin",
            "halocli.plugin.plugins.bian.extend.extend_bian_plugin1",
            "halocli.plugin.plugins.bian.segregate",
            "halocli.plugin.plugins.bian.segregate.cqrs_bian_plugin",
            "halocli.plugin.plugins.config",
            "halocli.plugin.plugins.config.config_plugin",
            "halocli.plugin.plugins.create",
            "halocli.plugin.plugins.create.create_plugin",
            "halocli.plugin.plugins.info",
            "halocli.plugin.plugins.info.info_plugin",
            "halocli.plugin.plugins.install",
            "halocli.plugin.plugins.install.install_plugin",
            "halocli.plugin.plugins.print",
            "halocli.plugin.plugins.print.print_plugin",
            "halocli.plugin.plugins.schema",
            "halocli.plugin.plugins.schema.schema_plugin",
            "halocli.plugin.plugins.valid",
            "halocli.plugin.plugins.valid.valid_plugin",
            "halocli.util"
        ],
        "version": "0.21"
    },
    "halo-flask": {
        "cmdline": [],
        "modules": [
            "halo_flask",
            "halo_flask.apis",
            "halo_flask.base_util",
            "halo_flask.cache",
            "halo_flask.circuitbreaker",
            "halo_flask.classes",
            "halo_flask.const",
            "halo_flask.context",
            "halo_flask.errors",
            "halo_flask.events",
            "halo_flask.exceptions",
            "halo_flask.flask",
            "halo_flask.flask.filter",
            "halo_flask.flask.mixinx",
            "halo_flask.flask.servicex",
            "halo_flask.flask.utilx",
            "halo_flask.flask.viewsx",
            "halo_flask.logs",
            "halo_flask.mixin_err_msg",
            "halo_flask.models",
            "halo_flask.providers",
            "halo_flask.providers.cloud",
            "halo_flask.providers.cloud.aws",
            "halo_flask.providers.onprem",
            "halo_flask.providers.providers",
            "halo_flask.providers.ssm",
            "halo_flask.providers.ssm.aws_ssm",
            "halo_flask.providers.ssm.onprem_ssm",
            "halo_flask.providers.ssm.onprem_ssm_client",
            "halo_flask.reflect",
            "halo_flask.request",
            "halo_flask.response",
            "halo_flask.saga",
            "halo_flask.security",
            "halo_flask.settingsx",
            "halo_flask.ssm",
            "halo_flask.sys_util"
        ],
        "version": "0.15.101"
    },
    "halo-splunk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "halo-splunk-d": {
        "cmdline": [],
        "modules": [
            "halo_splunk",
            "halo_splunk.hspi"
        ],
        "version": "1.0.0"
    },
    "halo-weather": {
        "cmdline": [],
        "modules": [
            "halo",
            "halo.API",
            "halo.DataStore",
            "halo.Icon",
            "halo.Place",
            "halo.Preference",
            "halo.SummaryView",
            "halo.app",
            "halo.settings"
        ],
        "version": "0.2.1"
    },
    "halo5-py": {
        "cmdline": [],
        "modules": [
            "halo5",
            "halo5.base",
            "halo5.client",
            "halo5.entity",
            "halo5.metadata",
            "halo5.profile",
            "halo5.stats",
            "halo5.tests",
            "halo5.tests.test_all",
            "halo5.ugc"
        ],
        "version": "0.3.0"
    },
    "halocode": {
        "cmdline": [],
        "modules": [
            "halocode",
            "setup"
        ],
        "version": "0.0.4"
    },
    "halocoin": {
        "cmdline": [],
        "modules": [
            "halocoin",
            "halocoin.account",
            "halocoin.api",
            "halocoin.blockchain",
            "halocoin.cli",
            "halocoin.custom",
            "halocoin.database",
            "halocoin.engine",
            "halocoin.miner",
            "halocoin.model",
            "halocoin.model.wallet",
            "halocoin.ntwrk",
            "halocoin.ntwrk.message",
            "halocoin.ntwrk.response",
            "halocoin.peer_check",
            "halocoin.peer_listen",
            "halocoin.service",
            "halocoin.tools"
        ],
        "version": "0.1.0.4"
    },
    "halofun": {
        "cmdline": [],
        "modules": [
            "halofun"
        ],
        "version": "0.1"
    },
    "halogen": {
        "cmdline": [],
        "modules": [
            "halogen",
            "halogen.exceptions",
            "halogen.schema",
            "halogen.types",
            "halogen.validators",
            "halogen.vnd",
            "halogen.vnd.error"
        ],
        "version": "1.7.0"
    },
    "halolib": {
        "cmdline": [],
        "modules": [
            "halolib",
            "halolib.apis",
            "halolib.base_util",
            "halolib.cache",
            "halolib.const",
            "halolib.events",
            "halolib.exceptions",
            "halolib.flask",
            "halolib.flask.mixinx",
            "halolib.flask.utilx",
            "halolib.flask.viewsx",
            "halolib.logs",
            "halolib.mixin",
            "halolib.mixin_err_msg",
            "halolib.models",
            "halolib.response",
            "halolib.saga",
            "halolib.ses",
            "halolib.settingsx",
            "halolib.ssm",
            "halolib.urls",
            "halolib.util",
            "halolib.views"
        ],
        "version": "0.14.10"
    },
    "halomod": {
        "cmdline": [],
        "modules": [],
        "version": "1.5.0"
    },
    "halonadm": {
        "cmdline": [],
        "modules": [
            "halonadm",
            "halonadm.halonadm"
        ],
        "version": "1.0.0"
    },
    "halophot": {
        "cmdline": [
            "halo"
        ],
        "modules": [
            "halophot",
            "halophot.halo_objectives",
            "halophot.halo_tools",
            "halophot.kephalophot"
        ],
        "version": "0.7.3.2"
    },
    "haloprops": {
        "cmdline": [],
        "modules": [
            "haloprops",
            "haloprops.structure"
        ],
        "version": "0.0.2"
    },
    "halopy": {
        "cmdline": [],
        "modules": [
            "halopy"
        ],
        "version": "1.1"
    },
    "halotools": {
        "cmdline": [],
        "modules": [
            "astropy_helpers",
            "astropy_helpers.commands",
            "astropy_helpers.commands._dummy",
            "astropy_helpers.commands._test_compat",
            "astropy_helpers.commands.build_ext",
            "astropy_helpers.commands.build_py",
            "astropy_helpers.commands.build_sphinx",
            "astropy_helpers.commands.install",
            "astropy_helpers.commands.install_lib",
            "astropy_helpers.commands.register",
            "astropy_helpers.commands.setup_package",
            "astropy_helpers.commands.test",
            "astropy_helpers.compat",
            "astropy_helpers.conftest",
            "astropy_helpers.distutils_helpers",
            "astropy_helpers.extern",
            "astropy_helpers.extern.automodapi",
            "astropy_helpers.extern.automodapi.autodoc_enhancements",
            "astropy_helpers.extern.automodapi.automodapi",
            "astropy_helpers.extern.automodapi.automodsumm",
            "astropy_helpers.extern.automodapi.smart_resolver",
            "astropy_helpers.extern.automodapi.utils",
            "astropy_helpers.extern.numpydoc",
            "astropy_helpers.extern.numpydoc.docscrape",
            "astropy_helpers.extern.numpydoc.docscrape_sphinx",
            "astropy_helpers.extern.numpydoc.numpydoc",
            "astropy_helpers.extern.setup_package",
            "astropy_helpers.git_helpers",
            "astropy_helpers.openmp_helpers",
            "astropy_helpers.setup_helpers",
            "astropy_helpers.sphinx",
            "astropy_helpers.sphinx.conf",
            "astropy_helpers.sphinx.ext",
            "astropy_helpers.sphinx.ext.changelog_links",
            "astropy_helpers.sphinx.ext.doctest",
            "astropy_helpers.sphinx.ext.edit_on_github",
            "astropy_helpers.sphinx.setup_package",
            "astropy_helpers.test_helpers",
            "astropy_helpers.utils",
            "astropy_helpers.version",
            "astropy_helpers.version_helpers",
            "halotools",
            "halotools._astropy_init",
            "halotools.conftest",
            "halotools.custom_exceptions",
            "halotools.cython_version",
            "halotools.empirical_models",
            "halotools.empirical_models.abunmatch",
            "halotools.empirical_models.abunmatch.bin_free_cam",
            "halotools.empirical_models.abunmatch.conditional_abunmatch_bin_based",
            "halotools.empirical_models.abunmatch.engines",
            "halotools.empirical_models.abunmatch.engines.setup_package",
            "halotools.empirical_models.abunmatch.noisy_percentile",
            "halotools.empirical_models.abunmatch.tests",
            "halotools.empirical_models.abunmatch.tests.naive_python_cam",
            "halotools.empirical_models.abunmatch.tests.test_bin_free_cam",
            "halotools.empirical_models.abunmatch.tests.test_conditional_abunmatch",
            "halotools.empirical_models.abunmatch.tests.test_noisy_percentile",
            "halotools.empirical_models.abunmatch.tests.test_pure_python",
            "halotools.empirical_models.abunmatch.tests.test_sample2_window_function",
            "halotools.empirical_models.abunmatch.tests.test_single_unit",
            "halotools.empirical_models.assembias_models",
            "halotools.empirical_models.assembias_models.heaviside_assembias",
            "halotools.empirical_models.assembias_models.tests",
            "halotools.empirical_models.assembias_models.tests.test_assembias",
            "halotools.empirical_models.component_model_templates",
            "halotools.empirical_models.component_model_templates.binary_galprop_models",
            "halotools.empirical_models.component_model_templates.prim_galprop_model",
            "halotools.empirical_models.component_model_templates.scatter_models",
            "halotools.empirical_models.component_model_templates.tests",
            "halotools.empirical_models.component_model_templates.tests.test_binary_galprop_models",
            "halotools.empirical_models.component_model_templates.tests.test_prim_galprop_model",
            "halotools.empirical_models.component_model_templates.tests.test_scatter_models",
            "halotools.empirical_models.composite_models",
            "halotools.empirical_models.composite_models.hod_models",
            "halotools.empirical_models.composite_models.hod_models.cacciato09",
            "halotools.empirical_models.composite_models.hod_models.hearin15",
            "halotools.empirical_models.composite_models.hod_models.leauthaud11",
            "halotools.empirical_models.composite_models.hod_models.tests",
            "halotools.empirical_models.composite_models.hod_models.tests.test_tinker13",
            "halotools.empirical_models.composite_models.hod_models.tests.test_zheng07",
            "halotools.empirical_models.composite_models.hod_models.tests.test_zu_mandelbaum16",
            "halotools.empirical_models.composite_models.hod_models.tinker13",
            "halotools.empirical_models.composite_models.hod_models.zheng07",
            "halotools.empirical_models.composite_models.hod_models.zu_mandelbaum15",
            "halotools.empirical_models.composite_models.hod_models.zu_mandelbaum16",
            "halotools.empirical_models.composite_models.sfr_models",
            "halotools.empirical_models.composite_models.sfr_models.smhm_binary_sfr",
            "halotools.empirical_models.composite_models.smhm_models",
            "halotools.empirical_models.composite_models.smhm_models.behroozi10",
            "halotools.empirical_models.composite_models.tests",
            "halotools.empirical_models.composite_models.tests.test_preloaded_models",
            "halotools.empirical_models.factories",
            "halotools.empirical_models.factories.hod_mock_factory",
            "halotools.empirical_models.factories.hod_model_factory",
            "halotools.empirical_models.factories.mock_factory_template",
            "halotools.empirical_models.factories.mock_helpers",
            "halotools.empirical_models.factories.model_factory_template",
            "halotools.empirical_models.factories.prebuilt_model_factory",
            "halotools.empirical_models.factories.subhalo_mock_factory",
            "halotools.empirical_models.factories.subhalo_model_factory",
            "halotools.empirical_models.factories.tests",
            "halotools.empirical_models.factories.tests.test_clf_support",
            "halotools.empirical_models.factories.tests.test_hod_factory",
            "halotools.empirical_models.factories.tests.test_hod_mock_factory",
            "halotools.empirical_models.factories.tests.test_hod_model_factory",
            "halotools.empirical_models.factories.tests.test_mock_helpers",
            "halotools.empirical_models.factories.tests.test_prebuilt_hod_model_factory",
            "halotools.empirical_models.factories.tests.test_prebuilt_subhalo_model_factory",
            "halotools.empirical_models.factories.tests.test_subhalo_model_factory",
            "halotools.empirical_models.model_defaults",
            "halotools.empirical_models.model_helpers",
            "halotools.empirical_models.occupation_models",
            "halotools.empirical_models.occupation_models.cacciato09_components",
            "halotools.empirical_models.occupation_models.engines",
            "halotools.empirical_models.occupation_models.engines.setup_package",
            "halotools.empirical_models.occupation_models.leauthaud11_components",
            "halotools.empirical_models.occupation_models.occupation_model_template",
            "halotools.empirical_models.occupation_models.tests",
            "halotools.empirical_models.occupation_models.tests.test_cacciato09_clf",
            "halotools.empirical_models.occupation_models.tests.test_leauthaud11_hod",
            "halotools.empirical_models.occupation_models.tests.test_occupation_component",
            "halotools.empirical_models.occupation_models.tests.test_tinker13",
            "halotools.empirical_models.occupation_models.tests.test_zheng07_centrals",
            "halotools.empirical_models.occupation_models.tests.test_zheng07_satellites",
            "halotools.empirical_models.occupation_models.tests.test_zu_mandelbaum15_components",
            "halotools.empirical_models.occupation_models.tinker13_components",
            "halotools.empirical_models.occupation_models.zheng07_components",
            "halotools.empirical_models.occupation_models.zu_mandelbaum15_components",
            "halotools.empirical_models.phase_space_models",
            "halotools.empirical_models.phase_space_models.analytic_models",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.tests.test_trivial_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.tests.test_trivial_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.trivial_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.trivial_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.halo_boundary_functions",
            "halotools.empirical_models.phase_space_models.analytic_models.monte_carlo_helpers",
            "halotools.empirical_models.phase_space_models.analytic_models.profile_model_template",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.biased_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass.direct_from_halo_catalog",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass.dutton_maccio14",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass.tests.test_conc_mass",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.biased_isotropic_velocity",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.mass_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.mc_generate_nfw_radial_positions",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests.setup_package",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests.test_biased_isotropic_velocity",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests.test_mc_generate_nfw_radial_positions",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests.test_unbiased_isotropic_velocity",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.unbiased_isotropic_velocity",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.nfw_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.sfr_biased_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_consistency",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_consistency_mockpop",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_initialization",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_phase_space_argument_handling",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_conc_gal_bias_behavior",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_mockpop",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_conc_mass_inheritance",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_conc_mass_inheritance.test_direct_from_halo_catalog",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space_argument_handling",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space_functions",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space_initialization",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space_monte_carlo",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_profile.test_colossus_consistency",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_profile.test_nfw_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.tests.test_halo_boundary_functions",
            "halotools.empirical_models.phase_space_models.subhalo_based_models",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.subhalo_phase_space",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.subhalo_selection_kernel",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.tests",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.tests.test_composite_model",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.tests.test_subhalo_phase_space",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.tests.test_subhalo_selection_kernel",
            "halotools.empirical_models.sfr_models",
            "halotools.empirical_models.sfr_models.halo_mass_quenching",
            "halotools.empirical_models.sfr_models.tests",
            "halotools.empirical_models.sfr_models.tests.test_halo_mass_quenching",
            "halotools.empirical_models.sfr_models.tests.test_zu_mandelbaum16",
            "halotools.empirical_models.sfr_models.zu_mandelbaum16",
            "halotools.empirical_models.smhm_models",
            "halotools.empirical_models.smhm_models.behroozi10",
            "halotools.empirical_models.smhm_models.moster13",
            "halotools.empirical_models.smhm_models.smhm_helpers",
            "halotools.empirical_models.smhm_models.tests",
            "halotools.empirical_models.smhm_models.tests.test_behroozi10",
            "halotools.empirical_models.smhm_models.tests.test_moster13",
            "halotools.empirical_models.smhm_models.tests.test_redshift_defensiveness",
            "halotools.empirical_models.smhm_models.tests.test_zu_mandelbaum15",
            "halotools.empirical_models.smhm_models.zu_mandelbaum15",
            "halotools.empirical_models.tests",
            "halotools.empirical_models.tests.test_model_helpers",
            "halotools.extern",
            "halotools.mock_observables",
            "halotools.mock_observables.catalog_analysis_helpers",
            "halotools.mock_observables.counts_in_cells",
            "halotools.mock_observables.counts_in_cells.counts_in_cylinders",
            "halotools.mock_observables.counts_in_cells.engines",
            "halotools.mock_observables.counts_in_cells.engines.setup_package",
            "halotools.mock_observables.counts_in_cells.tests",
            "halotools.mock_observables.counts_in_cells.tests.pure_python_counts_in_cells",
            "halotools.mock_observables.counts_in_cells.tests.test_counts_in_cylinders",
            "halotools.mock_observables.group_identification",
            "halotools.mock_observables.group_identification.fof_groups",
            "halotools.mock_observables.group_identification.test_groups",
            "halotools.mock_observables.group_identification.test_groups.test_fof_groups",
            "halotools.mock_observables.isolation_functions",
            "halotools.mock_observables.isolation_functions.conditional_cylindrical_isolation",
            "halotools.mock_observables.isolation_functions.conditional_spherical_isolation",
            "halotools.mock_observables.isolation_functions.cylindrical_isolation",
            "halotools.mock_observables.isolation_functions.engines",
            "halotools.mock_observables.isolation_functions.engines.setup_package",
            "halotools.mock_observables.isolation_functions.isolation_functions_helpers",
            "halotools.mock_observables.isolation_functions.spherical_isolation",
            "halotools.mock_observables.isolation_functions.tests",
            "halotools.mock_observables.isolation_functions.tests.pure_python_isolation",
            "halotools.mock_observables.isolation_functions.tests.test_brute_force_comparisons",
            "halotools.mock_observables.isolation_functions.tests.test_conditional_cylindrical_isolation",
            "halotools.mock_observables.isolation_functions.tests.test_conditional_spherical_isolation",
            "halotools.mock_observables.isolation_functions.tests.test_cylindrical_isolation",
            "halotools.mock_observables.isolation_functions.tests.test_isolation_helpers",
            "halotools.mock_observables.isolation_functions.tests.test_pure_python_isolation",
            "halotools.mock_observables.isolation_functions.tests.test_spherical_isolation",
            "halotools.mock_observables.large_scale_density",
            "halotools.mock_observables.large_scale_density.large_scale_density_spherical_annulus",
            "halotools.mock_observables.large_scale_density.large_scale_density_spherical_volume",
            "halotools.mock_observables.large_scale_density.tests",
            "halotools.mock_observables.large_scale_density.tests.test_large_scale_density_spherical_annulus",
            "halotools.mock_observables.large_scale_density.tests.test_large_scale_density_spherical_volume",
            "halotools.mock_observables.mock_observables_helpers",
            "halotools.mock_observables.mock_survey",
            "halotools.mock_observables.occupation_stats",
            "halotools.mock_observables.pair_counters",
            "halotools.mock_observables.pair_counters.cpairs",
            "halotools.mock_observables.pair_counters.cpairs.setup_package",
            "halotools.mock_observables.pair_counters.marked_cpairs",
            "halotools.mock_observables.pair_counters.marked_cpairs.setup_package",
            "halotools.mock_observables.pair_counters.marked_npairs_3d",
            "halotools.mock_observables.pair_counters.marked_npairs_xy_z",
            "halotools.mock_observables.pair_counters.mesh_helpers",
            "halotools.mock_observables.pair_counters.npairs_3d",
            "halotools.mock_observables.pair_counters.npairs_jackknife_3d",
            "halotools.mock_observables.pair_counters.npairs_jackknife_xy_z",
            "halotools.mock_observables.pair_counters.npairs_per_object_3d",
            "halotools.mock_observables.pair_counters.npairs_projected",
            "halotools.mock_observables.pair_counters.npairs_s_mu",
            "halotools.mock_observables.pair_counters.npairs_xy_z",
            "halotools.mock_observables.pair_counters.pairs",
            "halotools.mock_observables.pair_counters.pairwise_distance_3d",
            "halotools.mock_observables.pair_counters.pairwise_distance_xy_z",
            "halotools.mock_observables.pair_counters.rectangular_mesh",
            "halotools.mock_observables.pair_counters.rectangular_mesh_2d",
            "halotools.mock_observables.pair_counters.test_pair_counters",
            "halotools.mock_observables.pair_counters.test_pair_counters.pure_python_distance_matrix",
            "halotools.mock_observables.pair_counters.test_pair_counters.pure_python_npairs_per_object_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_marked_npairs_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_marked_npairs_xy_z",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_mesh_helpers",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_non_cubic_volumes",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_jackknife_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_jackknife_xy_z",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_per_object_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_projected",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_s_mu",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_xy_z",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_pairwise_distance_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_rectangular_mesh",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_weighted_npairs_s_mu",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_wnpairs_pure_python",
            "halotools.mock_observables.pair_counters.weighted_npairs_s_mu",
            "halotools.mock_observables.pairwise_velocities",
            "halotools.mock_observables.pairwise_velocities.engines",
            "halotools.mock_observables.pairwise_velocities.engines.setup_package",
            "halotools.mock_observables.pairwise_velocities.los_pvd_vs_rp",
            "halotools.mock_observables.pairwise_velocities.mean_los_velocity_vs_rp",
            "halotools.mock_observables.pairwise_velocities.mean_radial_velocity_vs_r",
            "halotools.mock_observables.pairwise_velocities.pairwise_velocities_helpers",
            "halotools.mock_observables.pairwise_velocities.radial_pvd_vs_r",
            "halotools.mock_observables.pairwise_velocities.tests",
            "halotools.mock_observables.pairwise_velocities.tests.pure_python_mean_radial_velocity_vs_r",
            "halotools.mock_observables.pairwise_velocities.tests.test_los_pvd_vs_rp",
            "halotools.mock_observables.pairwise_velocities.tests.test_mean_los_velocity_vs_rp",
            "halotools.mock_observables.pairwise_velocities.tests.test_mean_radial_velocity_vs_r",
            "halotools.mock_observables.pairwise_velocities.tests.test_pairwise_velocity_helpers",
            "halotools.mock_observables.pairwise_velocities.tests.test_pairwise_velocity_stats",
            "halotools.mock_observables.pairwise_velocities.tests.test_pure_python_mean_radial_velocity_vs_r",
            "halotools.mock_observables.pairwise_velocities.tests.test_radial_pvd_vs_r",
            "halotools.mock_observables.pairwise_velocities.tests.test_velocity_marked_npairs_3d",
            "halotools.mock_observables.pairwise_velocities.velocity_marked_npairs_3d",
            "halotools.mock_observables.pairwise_velocities.velocity_marked_npairs_xy_z",
            "halotools.mock_observables.radial_profiles",
            "halotools.mock_observables.radial_profiles.engines",
            "halotools.mock_observables.radial_profiles.engines.setup_package",
            "halotools.mock_observables.radial_profiles.radial_profile_3d",
            "halotools.mock_observables.radial_profiles.radial_profiles_helpers",
            "halotools.mock_observables.radial_profiles.tests",
            "halotools.mock_observables.radial_profiles.tests.test_radial_profile_3d",
            "halotools.mock_observables.surface_density",
            "halotools.mock_observables.surface_density.engines",
            "halotools.mock_observables.surface_density.engines.setup_package",
            "halotools.mock_observables.surface_density.mass_in_cylinders",
            "halotools.mock_observables.surface_density.mean_delta_sigma",
            "halotools.mock_observables.surface_density.surface_density",
            "halotools.mock_observables.surface_density.surface_density_helpers",
            "halotools.mock_observables.surface_density.tests",
            "halotools.mock_observables.surface_density.tests.pure_python_weighted_npairs_per_object_xy",
            "halotools.mock_observables.surface_density.tests.pure_python_weighted_npairs_xy",
            "halotools.mock_observables.surface_density.tests.test_mass_in_cylinders",
            "halotools.mock_observables.surface_density.tests.test_mean_delta_sigma",
            "halotools.mock_observables.surface_density.tests.test_pure_python_weighted_npairs_xy",
            "halotools.mock_observables.surface_density.tests.test_surface_density",
            "halotools.mock_observables.surface_density.tests.test_surface_density_helpers",
            "halotools.mock_observables.surface_density.tests.test_weighted_npairs_per_object_xy",
            "halotools.mock_observables.surface_density.tests.test_weighted_npairs_xy",
            "halotools.mock_observables.surface_density.weighted_npairs_per_object_xy",
            "halotools.mock_observables.surface_density.weighted_npairs_xy",
            "halotools.mock_observables.tensor_calculations",
            "halotools.mock_observables.tensor_calculations.engines",
            "halotools.mock_observables.tensor_calculations.engines.setup_package",
            "halotools.mock_observables.tensor_calculations.inertia_tensor",
            "halotools.mock_observables.tensor_calculations.tensor_derived_quantities",
            "halotools.mock_observables.tensor_calculations.tests",
            "halotools.mock_observables.tensor_calculations.tests.test_inertia_tensor",
            "halotools.mock_observables.tensor_calculations.tests.test_tensor_derived_quantities",
            "halotools.mock_observables.tests",
            "halotools.mock_observables.tests.cf_helpers",
            "halotools.mock_observables.tests.test_catalog_analysis_helpers",
            "halotools.mock_observables.tests.test_mock_observables_helpers",
            "halotools.mock_observables.tests.test_mock_survey",
            "halotools.mock_observables.tests.test_occupation_stats",
            "halotools.mock_observables.two_point_clustering",
            "halotools.mock_observables.two_point_clustering.angular_tpcf",
            "halotools.mock_observables.two_point_clustering.clustering_helpers",
            "halotools.mock_observables.two_point_clustering.marked_tpcf",
            "halotools.mock_observables.two_point_clustering.rp_pi_tpcf",
            "halotools.mock_observables.two_point_clustering.rp_pi_tpcf_jackknife",
            "halotools.mock_observables.two_point_clustering.s_mu_tpcf",
            "halotools.mock_observables.two_point_clustering.tests",
            "halotools.mock_observables.two_point_clustering.tests.locate_external_unit_testing_data",
            "halotools.mock_observables.two_point_clustering.tests.test_angular_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_clustering_helpers",
            "halotools.mock_observables.two_point_clustering.tests.test_marked_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_rp_pi_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_rp_pi_tpcf_jackknife",
            "halotools.mock_observables.two_point_clustering.tests.test_s_mu_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf_estimators",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf_jackknife",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf_multipole",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf_one_two_halo",
            "halotools.mock_observables.two_point_clustering.tests.test_wp",
            "halotools.mock_observables.two_point_clustering.tests.test_wp_jackknife",
            "halotools.mock_observables.two_point_clustering.tpcf",
            "halotools.mock_observables.two_point_clustering.tpcf_estimators",
            "halotools.mock_observables.two_point_clustering.tpcf_jackknife",
            "halotools.mock_observables.two_point_clustering.tpcf_multipole",
            "halotools.mock_observables.two_point_clustering.tpcf_one_two_halo_decomp",
            "halotools.mock_observables.two_point_clustering.wp",
            "halotools.mock_observables.two_point_clustering.wp_jackknife",
            "halotools.mock_observables.velocity_decomposition",
            "halotools.mock_observables.velocity_decomposition.radial_velocity_decomposition",
            "halotools.mock_observables.velocity_decomposition.tests",
            "halotools.mock_observables.velocity_decomposition.tests.test_radial_velocity",
            "halotools.mock_observables.void_statistics",
            "halotools.mock_observables.void_statistics.tests",
            "halotools.mock_observables.void_statistics.tests.test_underdensity_prob_func",
            "halotools.mock_observables.void_statistics.tests.test_void_prob_func",
            "halotools.mock_observables.void_statistics.underdensity_prob_func",
            "halotools.mock_observables.void_statistics.void_prob_func",
            "halotools.sim_manager",
            "halotools.sim_manager.cached_halo_catalog",
            "halotools.sim_manager.download_manager",
            "halotools.sim_manager.fake_sim",
            "halotools.sim_manager.halo_table_cache",
            "halotools.sim_manager.halo_table_cache_log_entry",
            "halotools.sim_manager.ptcl_table_cache",
            "halotools.sim_manager.ptcl_table_cache_log_entry",
            "halotools.sim_manager.rockstar_hlist_reader",
            "halotools.sim_manager.setup_package",
            "halotools.sim_manager.sim_defaults",
            "halotools.sim_manager.supported_sims",
            "halotools.sim_manager.tabular_ascii_reader",
            "halotools.sim_manager.tests",
            "halotools.sim_manager.tests.helper_functions",
            "halotools.sim_manager.tests.test_cached_halo_catalog",
            "halotools.sim_manager.tests.test_download_manager",
            "halotools.sim_manager.tests.test_fake_sim",
            "halotools.sim_manager.tests.test_halo_table_cache",
            "halotools.sim_manager.tests.test_halo_table_cache_log_entry",
            "halotools.sim_manager.tests.test_load_default_halocat",
            "halotools.sim_manager.tests.test_ptcl_table_cache",
            "halotools.sim_manager.tests.test_ptcl_table_cache_log_entry",
            "halotools.sim_manager.tests.test_rockstar_hlist_reader",
            "halotools.sim_manager.tests.test_supported_sims",
            "halotools.sim_manager.tests.test_tabular_ascii_reader",
            "halotools.sim_manager.tests.test_user_supplied_halo_catalog",
            "halotools.sim_manager.tests.test_user_supplied_ptcl_catalog",
            "halotools.sim_manager.user_supplied_halo_catalog",
            "halotools.sim_manager.user_supplied_ptcl_catalog",
            "halotools.tests",
            "halotools.tests.ddc",
            "halotools.tests.docs_code_block_tests",
            "halotools.tests.docs_code_block_tests.test_hod_model_factory_tutorial",
            "halotools.tests.docs_code_block_tests.test_preloaded_mockpop",
            "halotools.tests.setup_package",
            "halotools.tests.test_amurrica",
            "halotools.tests.test_seed",
            "halotools.tests.test_subpkg_imports",
            "halotools.tests.usa",
            "halotools.utils",
            "halotools.utils.array_indexing_manipulations",
            "halotools.utils.array_utils",
            "halotools.utils.autosummary_workaround",
            "halotools.utils.conditional_percentile",
            "halotools.utils.crossmatch",
            "halotools.utils.distribution_matching",
            "halotools.utils.engines",
            "halotools.utils.engines.setup_package",
            "halotools.utils.group_member_generator",
            "halotools.utils.inverse_transformation_sampling",
            "halotools.utils.io_utils",
            "halotools.utils.load_umachine_binaries",
            "halotools.utils.probabilistic_binning",
            "halotools.utils.python_string_comparisons",
            "halotools.utils.spherical_geometry",
            "halotools.utils.table_utils",
            "halotools.utils.tests",
            "halotools.utils.tests.setup_package",
            "halotools.utils.tests.test_array_indexing_manipulations",
            "halotools.utils.tests.test_array_utils",
            "halotools.utils.tests.test_compute_richness",
            "halotools.utils.tests.test_conditional_percentile",
            "halotools.utils.tests.test_crossmatch",
            "halotools.utils.tests.test_distribution_matching",
            "halotools.utils.tests.test_group_member_generator",
            "halotools.utils.tests.test_io_utils",
            "halotools.utils.tests.test_its",
            "halotools.utils.tests.test_probabilistic_binning",
            "halotools.utils.tests.test_python_string_comparisons",
            "halotools.utils.tests.test_table_utils",
            "halotools.utils.tests.test_value_added_halo_table_functions",
            "halotools.utils.value_added_halo_table_functions",
            "halotools.version"
        ],
        "version": "0.7"
    },
    "halp": {
        "cmdline": [],
        "modules": [
            "halp",
            "halp.algorithms",
            "halp.algorithms.directed_paths",
            "halp.algorithms.directed_random_walk",
            "halp.algorithms.k_shortest_hyperpaths",
            "halp.algorithms.undirected_partitioning",
            "halp.directed_hypergraph",
            "halp.undirected_hypergraph",
            "halp.utilities",
            "halp.utilities.directed_graph_transformations",
            "halp.utilities.directed_matrices",
            "halp.utilities.directed_statistics",
            "halp.utilities.priority_queue",
            "halp.utilities.undirected_graph_transformations",
            "halp.utilities.undirected_matrices",
            "tests",
            "tests.test_directed_hypergraph",
            "tests.test_undirected_hypergraph"
        ],
        "version": "1.0.0"
    },
    "halt": {
        "cmdline": [],
        "modules": [
            "halt",
            "halt.halt",
            "halt.util"
        ],
        "version": "0.1.1"
    },
    "halutz": {
        "cmdline": [],
        "modules": [
            "halutz",
            "halutz.class_factory",
            "halutz.client",
            "halutz.indexer",
            "halutz.request",
            "halutz.request_factory",
            "halutz.utils"
        ],
        "version": "0.5.1"
    },
    "halwa": {
        "cmdline": [],
        "modules": [
            "halwa"
        ],
        "version": "0.1.9"
    },
    "halweb": {
        "cmdline": [
            "hal.py"
        ],
        "modules": [
            "halicea",
            "halicea.hal",
            "halicea.halicea_manage",
            "halicea.lib",
            "halicea.lib.baseClasses",
            "halicea.lib.codeBlocksHelpers",
            "halicea.lib.config",
            "halicea.lib.consoleHelpers",
            "halicea.lib.dirtree",
            "halicea.lib.imports",
            "halicea.lib.ioUtils",
            "halicea.lib.locators",
            "halicea.lib.mvcManager",
            "halicea.lib.mvcPaths",
            "halicea.lib.packager",
            "halicea.lib.projectManager",
            "halicea.lib.renderers",
            "halicea.lib.templateHelpers",
            "halicea.tests",
            "halicea.tests.BlockLocatorTestCases",
            "halicea.tests.BlockTestCases",
            "halicea.tests.codeBlockHelperTests",
            "halicea.tests.packagerTestCases",
            "halicea.tests.test_imports",
            "halicea.tests.testsrunner"
        ],
        "version": "0.6.0"
    },
    "ham": {
        "cmdline": [],
        "modules": [
            "ham",
            "ham._version",
            "ham.rules",
            "ham.symbols"
        ],
        "version": "0.2"
    },
    "hama": {
        "cmdline": [],
        "modules": [
            "hama",
            "hama.init",
            "hama.tagging",
            "hama.tagging.ches",
            "hama.tagging.dict",
            "hama.tagging.dict.bitarray",
            "hama.tagging.dict.bloomfilter",
            "hama.tagging.dict.dict",
            "hama.tagging.doks",
            "hama.tagging.eoms",
            "hama.tagging.foreigns",
            "hama.tagging.hmm",
            "hama.tagging.hmm.hmm",
            "hama.tagging.jos",
            "hama.tagging.jubs",
            "hama.tagging.langutils",
            "hama.tagging.langutils.singleton",
            "hama.tagging.sequence",
            "hama.tagging.sequence.util",
            "hama.tagging.soos",
            "hama.tagging.symbols",
            "hama.tagging.tagging",
            "hama.tagging.yongs"
        ],
        "version": "1.0.0"
    },
    "hamachi-ssh": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "hamb": {
        "cmdline": [
            "hamb"
        ],
        "modules": [
            "hamb",
            "hamb.__version__",
            "hamb.athena_comp",
            "hamb.config_wrapper",
            "hamb.ham_run_utility",
            "hamb.handlers",
            "hamb.handlers.email_handler",
            "hamb.handlers.jenkins_handler",
            "hamb.handlers.sample_test_failed_handler",
            "hamb.handlers.sample_test_handler",
            "hamb.handlers.sftp_handler",
            "hamb.handlers.slack_handler",
            "hamb.handlers.sns_handler",
            "hamb.handlers.watch_file_handler",
            "hamb.module",
            "hamb.sql_comp",
            "hamb.sql_comp_list"
        ],
        "version": "0.1.10"
    },
    "hamba": {
        "cmdline": [],
        "modules": [
            "hamba"
        ],
        "version": "0.0.3-alpha"
    },
    "hamble": {
        "cmdline": [],
        "modules": [
            "hamble",
            "hamble.command",
            "hamble.hamble"
        ],
        "version": "0.0.5"
    },
    "hambot": {
        "cmdline": [],
        "modules": [
            "hambot",
            "hambot.cmd",
            "hambot.constants",
            "hambot.plugin"
        ],
        "version": "1.0.0"
    },
    "hambster-test": {
        "cmdline": [],
        "modules": [
            "runrun",
            "wayne",
            "wayne.circle"
        ],
        "version": "0.2"
    },
    "hamburglar": {
        "cmdline": [],
        "modules": [
            "Hamburglar",
            "Hamburglar.hamburglar"
        ],
        "version": "1.0.1"
    },
    "hamcrtools": {
        "cmdline": [],
        "modules": [
            "hamcrtools",
            "hamcrtools.matchers"
        ],
        "version": "0.0.5"
    },
    "hamed-advanced": {
        "cmdline": [],
        "modules": [
            "hamed_advanced",
            "hamed_advanced.tests"
        ],
        "version": "1.2"
    },
    "hamidpdf": {
        "cmdline": [],
        "modules": [
            "hamidpdf",
            "hamidpdf.pdf2text"
        ],
        "version": "1.0"
    },
    "hamill": {
        "cmdline": [],
        "modules": [
            "hamill",
            "hamill.hamill"
        ],
        "version": "0.2.3"
    },
    "hamilton": {
        "cmdline": [],
        "modules": [
            "Hamilton",
            "Hamilton.Interface",
            "Hamilton.Interface.Examples",
            "Hamilton.Interface.Examples.GUI-ArmSlider-P(I)D control",
            "Hamilton.Interface.Examples.GUI-Crosslides-P(I)D control",
            "Hamilton.Interface.Examples.GUI-NewtonsCradle",
            "Hamilton.Interface.Examples.GUI-PULLEY",
            "Hamilton.Interface.Examples.GUI-TOP (TOL)",
            "Hamilton.Interface.GUI-Hamilton"
        ],
        "version": "0.1.0"
    },
    "hamilton-sdk": {
        "cmdline": [],
        "modules": [
            "hamilton_sdk",
            "hamilton_sdk.graphTheory",
            "hamilton_sdk.hamilton",
            "hamilton_sdk.search",
            "hamilton_sdk.util"
        ],
        "version": "0.1"
    },
    "hamim-dsnd-probability": {
        "cmdline": [],
        "modules": [
            "hamim_dsnd_probability",
            "hamim_dsnd_probability.Binomialdistribution",
            "hamim_dsnd_probability.Gaussiandistribution",
            "hamim_dsnd_probability.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hamin-ebaysdk": {
        "cmdline": [],
        "modules": [
            "ebaysdk",
            "ebaysdk.config",
            "ebaysdk.connection",
            "ebaysdk.exception",
            "ebaysdk.finding",
            "ebaysdk.http",
            "ebaysdk.inventorymanagement",
            "ebaysdk.merchandising",
            "ebaysdk.parallel",
            "ebaysdk.policies",
            "ebaysdk.poller",
            "ebaysdk.poller.orders",
            "ebaysdk.response",
            "ebaysdk.shopping",
            "ebaysdk.soa",
            "ebaysdk.soa.finditem",
            "ebaysdk.trading",
            "ebaysdk.utils",
            "samples",
            "samples.calls_with_unicode",
            "samples.common",
            "samples.finding",
            "samples.finditem",
            "samples.merchandising",
            "samples.parallel",
            "samples.parallel_gevent",
            "samples.policies",
            "samples.poller",
            "samples.request_dictionary",
            "samples.shopping",
            "samples.storeMeta",
            "samples.t_http",
            "samples.test_perf",
            "samples.trading",
            "tests",
            "tests.test_base",
            "tests.test_errors",
            "tests.test_request"
        ],
        "version": "2.1.6"
    },
    "hamip": {
        "cmdline": [],
        "modules": [
            "HaMiP",
            "HaMiP.HaMiP"
        ],
        "version": "0.0.3.2"
    },
    "haml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hamlish-jinja": {
        "cmdline": [],
        "modules": [
            "hamlish_jinja"
        ],
        "version": "0.3.3"
    },
    "hamlpy": {
        "cmdline": [],
        "modules": [
            "hamlpy",
            "hamlpy.elements",
            "hamlpy.hamlpy",
            "hamlpy.hamlpy_watcher",
            "hamlpy.nodes",
            "hamlpy.template",
            "hamlpy.template.loaders",
            "hamlpy.template.utils",
            "hamlpy.templatize"
        ],
        "version": "0.82.2"
    },
    "hamlpy3": {
        "cmdline": [],
        "modules": [
            "hamlpy",
            "hamlpy.elements",
            "hamlpy.ext",
            "hamlpy.hamlpy",
            "hamlpy.hamlpy_watcher",
            "hamlpy.nodes",
            "hamlpy.template",
            "hamlpy.template.loaders",
            "hamlpy.template.utils",
            "hamlpy.templatize"
        ],
        "version": "0.84.0"
    },
    "hamlreloader": {
        "cmdline": [],
        "modules": [
            "hamlreloader",
            "hamlreloader.reloader",
            "hamlreloader.tests",
            "hamlreloader.tests.test_reloader"
        ],
        "version": "0.0.3"
    },
    "hamly": {
        "cmdline": [],
        "modules": [
            "hamly",
            "hamly.ast_utils",
            "hamly.compiler",
            "hamly.const",
            "hamly.escape",
            "hamly.html",
            "hamly.loader",
            "hamly.optimizer",
            "hamly.parser"
        ],
        "version": "0.1"
    },
    "hammadpdf": {
        "cmdline": [],
        "modules": [
            "hammadpdf",
            "hammadpdf.pdf2image",
            "hammadpdf.pdf2text"
        ],
        "version": "1.0"
    },
    "hammae": {
        "cmdline": [],
        "modules": [
            "hammae"
        ],
        "version": "1.0.2"
    },
    "hammer": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hammer-variations": {
        "cmdline": [],
        "modules": [
            "hammer",
            "hammer.exceptions",
            "hammer.launch"
        ],
        "version": "0.1.1"
    },
    "hammercloud": {
        "cmdline": [],
        "modules": [
            "hammercloud",
            "hammercloud._utils",
            "hammercloud.account",
            "hammercloud.api",
            "hammercloud.api.base",
            "hammercloud.api.firstgen",
            "hammercloud.api.nova",
            "hammercloud.api.preferences",
            "hammercloud.consolebrowser",
            "hammercloud.hammercloud",
            "hammercloud.handle",
            "hammercloud.parser",
            "hammercloud.server",
            "hammercloud.shell",
            "hammercloud.shell.expect",
            "hammercloud.shell.pshell",
            "hammercloud.static",
            "hammercloud.static.account",
            "hammercloud.static.const",
            "hammercloud.static.server",
            "hammercloud.static.shell",
            "hammercloud.templates",
            "hammercloud.terminal"
        ],
        "version": "3.0.5"
    },
    "hammerd": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hammerhead": {
        "cmdline": [],
        "modules": [
            "hammerhead",
            "hammerhead.cli",
            "hammerhead.hammerhead"
        ],
        "version": "0.0.1"
    },
    "hammeroflight": {
        "cmdline": [],
        "modules": [
            "hammeroflight",
            "hammeroflight.arufunctions",
            "hammeroflight.forecasting",
            "hammeroflight.modelcomparator",
            "hammeroflight.modelfitter",
            "hammeroflight.plotter"
        ],
        "version": "2.1.2"
    },
    "hammers": {
        "cmdline": [],
        "modules": [
            "ccmanage",
            "ccmanage.auth",
            "ccmanage.lease",
            "ccmanage.quicknode",
            "ccmanage.secrets",
            "ccmanage.server",
            "ccmanage.ssh",
            "ccmanage.util",
            "hammers",
            "hammers.colors",
            "hammers.diagnostics",
            "hammers.interactive",
            "hammers.mycnf",
            "hammers.mysqlargs",
            "hammers.mysqlshim",
            "hammers.osapi",
            "hammers.osrest",
            "hammers.osrest.blazar",
            "hammers.osrest.glance",
            "hammers.osrest.ironic",
            "hammers.osrest.keystone",
            "hammers.osrest.neutron",
            "hammers.osrest.nova",
            "hammers.query",
            "hammers.scripts",
            "hammers.scripts.conflict_macs",
            "hammers.scripts.curiouser",
            "hammers.scripts.dirty_ports",
            "hammers.scripts.ironic_error_resetter",
            "hammers.scripts.maintenance_reservation",
            "hammers.scripts.metadata_sync",
            "hammers.scripts.neutron_reaper",
            "hammers.scripts.orphan_resource_providers",
            "hammers.scripts.undead_instances",
            "hammers.slack",
            "hammers.util"
        ],
        "version": "0.2.0"
    },
    "hammertime": {
        "cmdline": [],
        "modules": [
            "hammertime"
        ],
        "version": "0.2.4"
    },
    "hammertime-http": {
        "cmdline": [],
        "modules": [
            "hammertime",
            "hammertime.__version__",
            "hammertime.config",
            "hammertime.core",
            "hammertime.engine",
            "hammertime.engine.aiohttp",
            "hammertime.engine.interface",
            "hammertime.engine.retry",
            "hammertime.engine.scaling",
            "hammertime.http",
            "hammertime.kb",
            "hammertime.requestscheduler",
            "hammertime.rules",
            "hammertime.rules.behavior",
            "hammertime.rules.body",
            "hammertime.rules.deadhostdetection",
            "hammertime.rules.filterrequestfromurl",
            "hammertime.rules.header",
            "hammertime.rules.redirects",
            "hammertime.rules.sampling",
            "hammertime.rules.simhash",
            "hammertime.rules.status",
            "hammertime.rules.timeout",
            "hammertime.rules.waf",
            "hammertime.ruleset",
            "hammertime.utils.har"
        ],
        "version": "0.7.0"
    },
    "hammett": {
        "cmdline": [],
        "modules": [
            "hammett",
            "hammett.colors",
            "hammett.fixtures",
            "hammett.fixtures_support",
            "hammett.impl",
            "hammett.mark"
        ],
        "version": "0.9.0"
    },
    "hammock": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "hammock-builder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hammock-rest": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.base",
            "hammock",
            "hammock.api",
            "hammock.backends",
            "hammock.backends._aweb",
            "hammock.backends._falcon",
            "hammock.backends.backend",
            "hammock.cli",
            "hammock.cli.app",
            "hammock.cli.colors",
            "hammock.cli.command",
            "hammock.cli.command_manager",
            "hammock.cli.interact",
            "hammock.client",
            "hammock.common",
            "hammock.common_resources",
            "hammock.common_resources.common",
            "hammock.converters",
            "hammock.doc",
            "hammock.exceptions",
            "hammock.names",
            "hammock.packages",
            "hammock.policy",
            "hammock.proxy",
            "hammock.resource",
            "hammock.resource_node",
            "hammock.templates",
            "hammock.testing",
            "hammock.testing.base",
            "hammock.testing.server",
            "hammock.types",
            "hammock.types.args",
            "hammock.types.credentials",
            "hammock.types.file",
            "hammock.types.func_spec",
            "hammock.types.headers",
            "hammock.types.http_base",
            "hammock.types.request",
            "hammock.types.response",
            "hammock.types.url",
            "hammock.wrappers",
            "hammock.wrappers._route",
            "hammock.wrappers._sink",
            "hammock.wrappers.wrapper",
            "resources1",
            "resources1.argument_types",
            "resources1.auth",
            "resources1.cli_ignored_package",
            "resources1.cli_ignored_package.sub",
            "resources1.cli_ignored_resource",
            "resources1.cli_names",
            "resources1.client_methods",
            "resources1.dict",
            "resources1.exceptions",
            "resources1.files",
            "resources1.headers",
            "resources1.keyword_map",
            "resources1.keywords",
            "resources1.lists",
            "resources1.patterns",
            "resources1.policy",
            "resources1.redirect",
            "resources1.responses",
            "resources1.sub_modified",
            "resources1.sub_modified.sub",
            "resources1.sub_resource",
            "resources1.sub_resource.nested",
            "resources1.sub_resource.nested.empty",
            "resources1.sub_resource.nested.sub",
            "resources1.sub_resource.sub",
            "resources1.sub_resource.sub2",
            "resources1.sub_resource2",
            "resources1.sub_resource2.sub",
            "resources1.text",
            "resources1.variable_in_url",
            "resources2",
            "resources2.list"
        ],
        "version": "0.0.1"
    },
    "hammr": {
        "cmdline": [
            "hammr",
            "hammr.bat"
        ],
        "modules": [
            "bin",
            "hammr",
            "hammr.commands",
            "hammr.commands.account",
            "hammr.commands.account.account",
            "hammr.commands.bundle",
            "hammr.commands.bundle.bundle",
            "hammr.commands.deploy",
            "hammr.commands.deploy.deploy",
            "hammr.commands.format",
            "hammr.commands.format.format",
            "hammr.commands.image",
            "hammr.commands.image.image",
            "hammr.commands.migration",
            "hammr.commands.migration.migration",
            "hammr.commands.os",
            "hammr.commands.os.os",
            "hammr.commands.platform",
            "hammr.commands.platform.platform",
            "hammr.commands.quota",
            "hammr.commands.quota.quota",
            "hammr.commands.scan",
            "hammr.commands.scan.scan",
            "hammr.commands.template",
            "hammr.commands.template.template",
            "hammr.commands.user",
            "hammr.commands.user.user",
            "hammr.hammr",
            "hammr.utils",
            "hammr.utils.account_utils",
            "hammr.utils.bundle_utils",
            "hammr.utils.constants",
            "hammr.utils.credentials",
            "hammr.utils.deployment_utils",
            "hammr.utils.generate_utils",
            "hammr.utils.hammr_utils",
            "hammr.utils.image_utils",
            "hammr.utils.migration_utils",
            "hammr.utils.publish_builders",
            "hammr.utils.publish_utils",
            "hammr.utils.scan_utils",
            "tests",
            "tests.unit",
            "tests.unit.commands",
            "tests.unit.commands.deploy",
            "tests.unit.commands.deploy.test_deploy_list",
            "tests.unit.commands.image",
            "tests.unit.commands.image.deploy_test_utils",
            "tests.unit.commands.image.info_test_utils",
            "tests.unit.commands.image.test_deploy_aws",
            "tests.unit.commands.image.test_deploy_azure",
            "tests.unit.commands.image.test_deploy_openstack",
            "tests.unit.commands.image.test_image",
            "tests.unit.commands.scan",
            "tests.unit.commands.scan.test_scan",
            "tests.unit.commands.template",
            "tests.unit.commands.template.test_template",
            "tests.unit.utils",
            "tests.unit.utils.file_utils",
            "tests.unit.utils.pyxb_utils",
            "tests.unit.utils.test_account_utils",
            "tests.unit.utils.test_bundle_utils",
            "tests.unit.utils.test_credentials",
            "tests.unit.utils.test_deploy_utils",
            "tests.unit.utils.test_generate_utils",
            "tests.unit.utils.test_hammr_utils",
            "tests.unit.utils.test_migration_utils",
            "tests.unit.utils.test_publish_builders",
            "tests.unit.utils.test_publish_utils"
        ],
        "version": "3.8.13"
    },
    "hammr-3-6": {
        "cmdline": [
            "hammr",
            "hammr.bat"
        ],
        "modules": [
            "bin",
            "hammr",
            "hammr.commands",
            "hammr.commands.account",
            "hammr.commands.account.account",
            "hammr.commands.bundle",
            "hammr.commands.bundle.bundle",
            "hammr.commands.format",
            "hammr.commands.format.format",
            "hammr.commands.image",
            "hammr.commands.image.image",
            "hammr.commands.os",
            "hammr.commands.os.os",
            "hammr.commands.platform",
            "hammr.commands.platform.platform",
            "hammr.commands.quota",
            "hammr.commands.quota.quota",
            "hammr.commands.scan",
            "hammr.commands.scan.scan",
            "hammr.commands.template",
            "hammr.commands.template.template",
            "hammr.commands.user",
            "hammr.commands.user.user",
            "hammr.hammr",
            "hammr.utils",
            "hammr.utils.account_utils",
            "hammr.utils.constants",
            "hammr.utils.generate_utils",
            "hammr.utils.hammr_utils",
            "hammr.utils.publish_utils",
            "hammr.utils.scan_utils",
            "tests",
            "tests.unit",
            "tests.unit.commands",
            "tests.unit.commands.template",
            "tests.unit.commands.template.test_template",
            "tests.unit.utils"
        ],
        "version": "1.1"
    },
    "hamms": {
        "cmdline": [],
        "modules": [
            "hamms",
            "hamms.morse"
        ],
        "version": "1.3"
    },
    "hammurabi": {
        "cmdline": [],
        "modules": [
            "hammurabi",
            "hammurabi.config",
            "hammurabi.exceptions",
            "hammurabi.helpers",
            "hammurabi.law",
            "hammurabi.main",
            "hammurabi.mixins",
            "hammurabi.notifications",
            "hammurabi.notifications.base",
            "hammurabi.notifications.slack",
            "hammurabi.pillar",
            "hammurabi.preconditions",
            "hammurabi.preconditions.attributes",
            "hammurabi.preconditions.base",
            "hammurabi.preconditions.directories",
            "hammurabi.preconditions.files",
            "hammurabi.preconditions.text",
            "hammurabi.reporters",
            "hammurabi.reporters.base",
            "hammurabi.reporters.json",
            "hammurabi.rules",
            "hammurabi.rules.abstract",
            "hammurabi.rules.attributes",
            "hammurabi.rules.base",
            "hammurabi.rules.common",
            "hammurabi.rules.dictionaries",
            "hammurabi.rules.directories",
            "hammurabi.rules.files",
            "hammurabi.rules.ini",
            "hammurabi.rules.json",
            "hammurabi.rules.mixins",
            "hammurabi.rules.operations",
            "hammurabi.rules.templates",
            "hammurabi.rules.text",
            "hammurabi.rules.toml",
            "hammurabi.rules.yaml"
        ],
        "version": "0.11.0"
    },
    "hamnonlineng": {
        "cmdline": [],
        "modules": [
            "hamnonlineng",
            "hamnonlineng.core"
        ],
        "version": "0.1.0a3"
    },
    "hamopy": {
        "cmdline": [],
        "modules": [
            "hamopy",
            "hamopy.algorithm",
            "hamopy.classes",
            "hamopy.examples",
            "hamopy.examples.BM3_simul",
            "hamopy.examples.BM4_simul",
            "hamopy.examples.BM5_simul",
            "hamopy.ham_library",
            "hamopy.materials",
            "hamopy.materials.hamstad",
            "hamopy.materials.standard",
            "hamopy.materials.virtuel",
            "hamopy.postpro"
        ],
        "version": "0.4.0"
    },
    "hampel": {
        "cmdline": [],
        "modules": [
            "hampel"
        ],
        "version": "0.0.3"
    },
    "hamper": {
        "cmdline": [],
        "modules": [
            "hamper",
            "hamper.acl",
            "hamper.cli",
            "hamper.commander",
            "hamper.config",
            "hamper.interfaces",
            "hamper.log",
            "hamper.plugins",
            "hamper.plugins.bitly",
            "hamper.plugins.channel_utils",
            "hamper.plugins.commands",
            "hamper.plugins.dictionary",
            "hamper.plugins.factoids",
            "hamper.plugins.flip",
            "hamper.plugins.friendly",
            "hamper.plugins.goodbye",
            "hamper.plugins.help",
            "hamper.plugins.karma",
            "hamper.plugins.plugin_utils",
            "hamper.plugins.questions",
            "hamper.plugins.quotes",
            "hamper.plugins.roulette",
            "hamper.plugins.seen",
            "hamper.plugins.suggest",
            "hamper.plugins.timez",
            "hamper.plugins.tinyurl",
            "hamper.plugins.whatwasthat",
            "hamper.tests",
            "hamper.tests.test_command",
            "hamper.tests.test_interfaces",
            "hamper.tests.test_permissions",
            "hamper.utils"
        ],
        "version": "1.9.1"
    },
    "hampercli": {
        "cmdline": [],
        "modules": [
            "hamper",
            "hamper.authenticator",
            "hamper.certifier",
            "hamper.hamper",
            "hamper.identifier",
            "hamper.provisioner",
            "hamper/helpers",
            "hamper/helpers.date",
            "hamper/helpers.driver",
            "hamper/helpers.error",
            "hamper/helpers.singleton"
        ],
        "version": "1.0.4"
    },
    "hamperclitest": {
        "cmdline": [],
        "modules": [
            "hamper",
            "hamper.authenticator",
            "hamper.certifier",
            "hamper.hamper",
            "hamper.identifier",
            "hamper.provisioner"
        ],
        "version": "0.1.0"
    },
    "hamplify": {
        "cmdline": [],
        "modules": [
            "hamplify",
            "hamplify.config",
            "hamplify.element",
            "hamplify.parsers",
            "hamplify.parsers.attributes",
            "hamplify.parsers.base",
            "hamplify.parsers.block",
            "hamplify.parsers.comment",
            "hamplify.parsers.doctype",
            "hamplify.parsers.filter",
            "hamplify.parsers.parser",
            "hamplify.parsers.tags",
            "hamplify.parsers.variable",
            "scripts",
            "scripts.hamplify"
        ],
        "version": "1.3.0"
    },
    "hamptt": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hampy": {
        "cmdline": [],
        "modules": [
            "hampy",
            "hampy.detect",
            "hampy.hamming",
            "hampy.hamming_marker"
        ],
        "version": "1.4.1"
    },
    "hamqth": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "hamsclient": {
        "cmdline": [],
        "modules": [
            "hamsclient",
            "hamsclient.client"
        ],
        "version": "0.1.1"
    },
    "hamster": {
        "cmdline": [
            "hamster"
        ],
        "modules": [
            "moviehamster"
        ],
        "version": "0.1dev"
    },
    "hamster-bridge": {
        "cmdline": [],
        "modules": [
            "hamster_bridge",
            "hamster_bridge.bridge",
            "hamster_bridge.listeners",
            "hamster_bridge.listeners.jira",
            "hamster_bridge.listeners.redmine"
        ],
        "version": "0.7.0"
    },
    "hamster-cli": {
        "cmdline": [],
        "modules": [
            "hamster_cli",
            "hamster_cli.hamster_cli",
            "hamster_cli.help_strings"
        ],
        "version": "0.12.0"
    },
    "hamster-dbus": {
        "cmdline": [],
        "modules": [
            "hamster_dbus",
            "hamster_dbus.hamster_dbus_service",
            "hamster_dbus.helpers",
            "hamster_dbus.objects",
            "hamster_dbus.storage"
        ],
        "version": "0.10.0"
    },
    "hamster-gtk": {
        "cmdline": [],
        "modules": [
            "hamster_gtk",
            "hamster_gtk.hamster_gtk",
            "hamster_gtk.helpers",
            "hamster_gtk.misc",
            "hamster_gtk.misc.dialogs",
            "hamster_gtk.misc.dialogs.date_range_select_dialog",
            "hamster_gtk.misc.dialogs.edit_fact_dialog",
            "hamster_gtk.misc.dialogs.error_dialog",
            "hamster_gtk.misc.dialogs.hamster_about_dialog",
            "hamster_gtk.overview",
            "hamster_gtk.overview.dialogs",
            "hamster_gtk.overview.widgets",
            "hamster_gtk.overview.widgets.charts",
            "hamster_gtk.overview.widgets.fact_grid",
            "hamster_gtk.overview.widgets.misc",
            "hamster_gtk.preferences",
            "hamster_gtk.preferences.preferences_dialog",
            "hamster_gtk.preferences.widgets",
            "hamster_gtk.preferences.widgets.combo_file_chooser",
            "hamster_gtk.preferences.widgets.config_widget",
            "hamster_gtk.preferences.widgets.hamster_combo_box_text",
            "hamster_gtk.preferences.widgets.hamster_spin_button",
            "hamster_gtk.preferences.widgets.time_entry",
            "hamster_gtk.tracking",
            "hamster_gtk.tracking.screens",
            "tests",
            "tests.conftest",
            "tests.factories",
            "tests.misc",
            "tests.misc.conftest",
            "tests.misc.test_dialogs",
            "tests.overview",
            "tests.overview.conftest",
            "tests.overview.test_dialogs",
            "tests.overview.test_widgets",
            "tests.preferences",
            "tests.preferences.conftest",
            "tests.preferences.test_preferences_dialog",
            "tests.preferences.widgets",
            "tests.preferences.widgets.conftest",
            "tests.preferences.widgets.test_combo_file_chooser",
            "tests.preferences.widgets.test_config_widget",
            "tests.preferences.widgets.test_hamster_combo_box_text",
            "tests.preferences.widgets.test_hamster_spin_button",
            "tests.preferences.widgets.test_time_entry",
            "tests.test_hamster-gtk",
            "tests.test_helpers",
            "tests.test_minimal",
            "tests.tracking",
            "tests.tracking.conftest",
            "tests.tracking.test_screens"
        ],
        "version": "0.11.0"
    },
    "hamster-lib": {
        "cmdline": [],
        "modules": [
            "hamster_lib",
            "hamster_lib.backends",
            "hamster_lib.backends.sqlalchemy",
            "hamster_lib.backends.sqlalchemy.objects",
            "hamster_lib.backends.sqlalchemy.storage",
            "hamster_lib.helpers",
            "hamster_lib.helpers.config_helpers",
            "hamster_lib.helpers.helpers",
            "hamster_lib.helpers.time",
            "hamster_lib.lib",
            "hamster_lib.objects",
            "hamster_lib.reports",
            "hamster_lib.storage",
            "tests",
            "tests.backends",
            "tests.backends.sqlalchemy",
            "tests.backends.sqlalchemy.common",
            "tests.backends.sqlalchemy.conftest",
            "tests.backends.sqlalchemy.factories",
            "tests.backends.sqlalchemy.test_objects",
            "tests.backends.sqlalchemy.test_storage",
            "tests.conftest",
            "tests.hamster_lib",
            "tests.hamster_lib.conftest",
            "tests.hamster_lib.factories",
            "tests.hamster_lib.test_lib",
            "tests.hamster_lib.test_objects",
            "tests.hamster_lib.test_reports",
            "tests.hamster_lib.test_storage",
            "tests.helpers",
            "tests.helpers.conftest",
            "tests.helpers.test_config_helpers",
            "tests.helpers.test_helpers",
            "tests.helpers.test_time"
        ],
        "version": "0.13.2"
    },
    "hamster-rc": {
        "cmdline": [],
        "modules": [
            "hamster_rc"
        ],
        "version": "0.1.1"
    },
    "hamster-sqlite": {
        "cmdline": [],
        "modules": [
            "hamster",
            "hamster.db",
            "hamster.lib",
            "hamster.storage"
        ],
        "version": "0.3"
    },
    "hamsterlib": {
        "cmdline": [],
        "modules": [
            "hamsterlib",
            "hamsterlib.backends",
            "hamsterlib.backends.sqlalchemy",
            "hamsterlib.backends.sqlalchemy.objects",
            "hamsterlib.backends.sqlalchemy.storage",
            "hamsterlib.helpers",
            "hamsterlib.lib",
            "hamsterlib.objects",
            "hamsterlib.reports",
            "hamsterlib.storage",
            "tests",
            "tests.backends",
            "tests.backends.sqlalchemy",
            "tests.backends.sqlalchemy.common",
            "tests.backends.sqlalchemy.conftest",
            "tests.backends.sqlalchemy.factories",
            "tests.backends.sqlalchemy.test_objects",
            "tests.backends.sqlalchemy.test_storage",
            "tests.conftest",
            "tests.hamsterlib",
            "tests.hamsterlib.conftest",
            "tests.hamsterlib.factories",
            "tests.hamsterlib.test_helpers",
            "tests.hamsterlib.test_lib",
            "tests.hamsterlib.test_objects",
            "tests.hamsterlib.test_reports",
            "tests.hamsterlib.test_storage"
        ],
        "version": "0.1.0"
    },
    "hamstr1s": {
        "cmdline": [],
        "modules": [
            "hamstr1s",
            "hamstr1s.addTaxa1s",
            "hamstr1s.addTaxon1s",
            "hamstr1s.bin",
            "hamstr1s.checkData1s",
            "hamstr1s.data",
            "hamstr1s.merge1sOutput",
            "hamstr1s.remove1s",
            "hamstr1s.runOneseq",
            "hamstr1s.setup",
            "hamstr1s.setup1s"
        ],
        "version": "2.0.4"
    },
    "hamstring": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "hamtools": {
        "cmdline": [],
        "modules": [
            "hamtools",
            "hamtools.adif",
            "hamtools.ctydat",
            "hamtools.geolog",
            "hamtools.kml",
            "hamtools.qrz",
            "hamtools.ziplocs"
        ],
        "version": "0.3"
    },
    "hamutils": {
        "cmdline": [],
        "modules": [
            "hamutils",
            "hamutils.adif",
            "hamutils.adif.adi",
            "hamutils.adif.adx",
            "hamutils.adif.common",
            "hamutils.cabrillo",
            "hamutils.cabrillo.cabrillo",
            "hamutils.qrz",
            "hamutils.space_weather",
            "hamutils.space_weather.geomagnetic_data",
            "hamutils.space_weather.predictions",
            "hamutils.space_weather.solar_data"
        ],
        "version": "0.2.0"
    },
    "han2jamo": {
        "cmdline": [],
        "modules": [
            "han2jamo",
            "han2jamo.han2jamo",
            "han2jamo.utils"
        ],
        "version": "0.0.1a0"
    },
    "hana": {
        "cmdline": [],
        "modules": [
            "hana",
            "hana.core",
            "hana.errors",
            "hana.plugins"
        ],
        "version": "0.0.1"
    },
    "hana-ml": {
        "cmdline": [],
        "modules": [
            "hana_ml",
            "hana_ml.algorithms",
            "hana_ml.algorithms.apl",
            "hana_ml.algorithms.apl.apl_base",
            "hana_ml.algorithms.apl.classification",
            "hana_ml.algorithms.apl.clustering",
            "hana_ml.algorithms.apl.gradient_boosting_base",
            "hana_ml.algorithms.apl.gradient_boosting_classification",
            "hana_ml.algorithms.apl.gradient_boosting_regression",
            "hana_ml.algorithms.apl.regression",
            "hana_ml.algorithms.apl.robust_regression_base",
            "hana_ml.algorithms.apl.time_series",
            "hana_ml.algorithms.pal",
            "hana_ml.algorithms.pal.abc_analysis",
            "hana_ml.algorithms.pal.association",
            "hana_ml.algorithms.pal.clustering",
            "hana_ml.algorithms.pal.crf",
            "hana_ml.algorithms.pal.decomposition",
            "hana_ml.algorithms.pal.discriminant_analysis",
            "hana_ml.algorithms.pal.feature_tool",
            "hana_ml.algorithms.pal.kernel_density",
            "hana_ml.algorithms.pal.linear_model",
            "hana_ml.algorithms.pal.linkpred",
            "hana_ml.algorithms.pal.metrics",
            "hana_ml.algorithms.pal.mixture",
            "hana_ml.algorithms.pal.model_selection",
            "hana_ml.algorithms.pal.naive_bayes",
            "hana_ml.algorithms.pal.neighbors",
            "hana_ml.algorithms.pal.neural_network",
            "hana_ml.algorithms.pal.pagerank",
            "hana_ml.algorithms.pal.pal_base",
            "hana_ml.algorithms.pal.partition",
            "hana_ml.algorithms.pal.pipeline",
            "hana_ml.algorithms.pal.preprocessing",
            "hana_ml.algorithms.pal.random",
            "hana_ml.algorithms.pal.recommender",
            "hana_ml.algorithms.pal.regression",
            "hana_ml.algorithms.pal.som",
            "hana_ml.algorithms.pal.sqlgen",
            "hana_ml.algorithms.pal.stats",
            "hana_ml.algorithms.pal.svm",
            "hana_ml.algorithms.pal.trees",
            "hana_ml.algorithms.pal.tsa",
            "hana_ml.algorithms.pal.tsa.accuracy_measure",
            "hana_ml.algorithms.pal.tsa.additive_model_forecast",
            "hana_ml.algorithms.pal.tsa.arima",
            "hana_ml.algorithms.pal.tsa.auto_arima",
            "hana_ml.algorithms.pal.tsa.changepoint",
            "hana_ml.algorithms.pal.tsa.correlation_function",
            "hana_ml.algorithms.pal.tsa.exponential_smoothing",
            "hana_ml.algorithms.pal.tsa.fast_dtw",
            "hana_ml.algorithms.pal.tsa.fft",
            "hana_ml.algorithms.pal.tsa.hierarchical_forecast",
            "hana_ml.algorithms.pal.tsa.lr_seasonal_adjust",
            "hana_ml.algorithms.pal.tsa.online_algorithms",
            "hana_ml.algorithms.pal.tsa.seasonal_decompose",
            "hana_ml.algorithms.pal.tsa.trend_test",
            "hana_ml.algorithms.pal.tsa.white_noise_test",
            "hana_ml.algorithms.pal.tsne",
            "hana_ml.algorithms.pal.unified_classification",
            "hana_ml.algorithms.pal.wst",
            "hana_ml.dataframe",
            "hana_ml.ml_base",
            "hana_ml.ml_exceptions",
            "hana_ml.model_storage",
            "hana_ml.model_storage_services",
            "hana_ml.type_codes",
            "hana_ml.visualizers",
            "hana_ml.visualizers.eda",
            "hana_ml.visualizers.m4_sampling",
            "hana_ml.visualizers.metrics",
            "hana_ml.visualizers.model_debriefing",
            "hana_ml.visualizers.model_report",
            "hana_ml.visualizers.utility",
            "hana_ml.visualizers.visualizer_base"
        ],
        "version": "2.5.20062609"
    },
    "hana-ml-gs": {
        "cmdline": [],
        "modules": [
            "hana_ml",
            "hana_ml.algorithms",
            "hana_ml.algorithms.apl",
            "hana_ml.algorithms.apl.apl_base",
            "hana_ml.algorithms.apl.classification",
            "hana_ml.algorithms.apl.clustering",
            "hana_ml.algorithms.apl.gradient_boosting_base",
            "hana_ml.algorithms.apl.gradient_boosting_classification",
            "hana_ml.algorithms.apl.gradient_boosting_regression",
            "hana_ml.algorithms.apl.regression",
            "hana_ml.algorithms.apl.robust_regression_base",
            "hana_ml.algorithms.apl.time_series",
            "hana_ml.algorithms.pal",
            "hana_ml.algorithms.pal.abc_analysis",
            "hana_ml.algorithms.pal.association",
            "hana_ml.algorithms.pal.clustering",
            "hana_ml.algorithms.pal.crf",
            "hana_ml.algorithms.pal.decomposition",
            "hana_ml.algorithms.pal.discriminant_analysis",
            "hana_ml.algorithms.pal.feature_tool",
            "hana_ml.algorithms.pal.kernel_density",
            "hana_ml.algorithms.pal.linear_model",
            "hana_ml.algorithms.pal.linkpred",
            "hana_ml.algorithms.pal.metrics",
            "hana_ml.algorithms.pal.mixture",
            "hana_ml.algorithms.pal.model_selection",
            "hana_ml.algorithms.pal.naive_bayes",
            "hana_ml.algorithms.pal.neighbors",
            "hana_ml.algorithms.pal.neural_network",
            "hana_ml.algorithms.pal.pagerank",
            "hana_ml.algorithms.pal.pal_base",
            "hana_ml.algorithms.pal.partition",
            "hana_ml.algorithms.pal.pipeline",
            "hana_ml.algorithms.pal.preprocessing",
            "hana_ml.algorithms.pal.random",
            "hana_ml.algorithms.pal.recommender",
            "hana_ml.algorithms.pal.regression",
            "hana_ml.algorithms.pal.som",
            "hana_ml.algorithms.pal.sqlgen",
            "hana_ml.algorithms.pal.stats",
            "hana_ml.algorithms.pal.svm",
            "hana_ml.algorithms.pal.trees",
            "hana_ml.algorithms.pal.tsa",
            "hana_ml.algorithms.pal.tsa.accuracy_measure",
            "hana_ml.algorithms.pal.tsa.additive_model_forecast",
            "hana_ml.algorithms.pal.tsa.arima",
            "hana_ml.algorithms.pal.tsa.auto_arima",
            "hana_ml.algorithms.pal.tsa.changepoint",
            "hana_ml.algorithms.pal.tsa.correlation_function",
            "hana_ml.algorithms.pal.tsa.exponential_smoothing",
            "hana_ml.algorithms.pal.tsa.fast_dtw",
            "hana_ml.algorithms.pal.tsa.fft",
            "hana_ml.algorithms.pal.tsa.hierarchical_forecast",
            "hana_ml.algorithms.pal.tsa.lr_seasonal_adjust",
            "hana_ml.algorithms.pal.tsa.online_algorithms",
            "hana_ml.algorithms.pal.tsa.seasonal_decompose",
            "hana_ml.algorithms.pal.tsa.trend_test",
            "hana_ml.algorithms.pal.tsa.white_noise_test",
            "hana_ml.algorithms.pal.tsne",
            "hana_ml.algorithms.pal.unified_classification",
            "hana_ml.algorithms.pal.wst",
            "hana_ml.dataframe",
            "hana_ml.gs",
            "hana_ml.gs.gs_dataframe",
            "hana_ml.ml_base",
            "hana_ml.ml_exceptions",
            "hana_ml.model_storage",
            "hana_ml.model_storage_services",
            "hana_ml.type_codes",
            "hana_ml.visualizers",
            "hana_ml.visualizers.eda",
            "hana_ml.visualizers.m4_sampling",
            "hana_ml.visualizers.metrics",
            "hana_ml.visualizers.model_debriefing",
            "hana_ml.visualizers.model_report",
            "hana_ml.visualizers.utility",
            "hana_ml.visualizers.visualizer_base"
        ],
        "version": "2.5.200427"
    },
    "hanabi": {
        "cmdline": [],
        "modules": [
            "hanabi"
        ],
        "version": "0.0.0"
    },
    "hanabi-learning-environment": {
        "cmdline": [],
        "modules": [
            "hanabi_learning_environment",
            "hanabi_learning_environment.agents",
            "hanabi_learning_environment.agents.random_agent",
            "hanabi_learning_environment.agents.simple_agent",
            "hanabi_learning_environment.pyhanabi",
            "hanabi_learning_environment.rl_env",
            "third_party",
            "third_party.dopamine",
            "third_party.dopamine.checkpointer",
            "third_party.dopamine.iteration_statistics",
            "third_party.dopamine.logger",
            "third_party.dopamine.sum_tree"
        ],
        "version": "0.0.1"
    },
    "hanabirc": {
        "cmdline": [
            "hanabIRC"
        ],
        "modules": [
            "hanabIRC",
            "hanabIRC.GameResponse",
            "hanabIRC.game_history",
            "hanabIRC.hanabi",
            "hanabIRC.hanabot",
            "hanabIRC.text_markup"
        ],
        "version": "1.2.05"
    },
    "hanaby": {
        "cmdline": [],
        "modules": [
            "hanabi",
            "hanabi.action",
            "hanabi.exceptions",
            "hanabi.game",
            "hanabi.piece",
            "hanabi.player",
            "hanabi.setup"
        ],
        "version": "1.0.0"
    },
    "hanabython": {
        "cmdline": [],
        "modules": [
            "hanabython",
            "hanabython.Modules",
            "hanabython.Modules.Action",
            "hanabython.Modules.ActionClue",
            "hanabython.Modules.ActionForfeit",
            "hanabython.Modules.ActionPlayCard",
            "hanabython.Modules.ActionThrow",
            "hanabython.Modules.Board",
            "hanabython.Modules.Card",
            "hanabython.Modules.CardPublic",
            "hanabython.Modules.Clue",
            "hanabython.Modules.Color",
            "hanabython.Modules.ColorColorless",
            "hanabython.Modules.ColorMulticolor",
            "hanabython.Modules.Colored",
            "hanabython.Modules.Colors",
            "hanabython.Modules.Configuration",
            "hanabython.Modules.ConfigurationColorContents",
            "hanabython.Modules.ConfigurationDeck",
            "hanabython.Modules.ConfigurationEmptyClueRule",
            "hanabython.Modules.ConfigurationEndRule",
            "hanabython.Modules.ConfigurationHandSize",
            "hanabython.Modules.DiscardPile",
            "hanabython.Modules.DrawPile",
            "hanabython.Modules.DrawPilePublic",
            "hanabython.Modules.Game",
            "hanabython.Modules.Hand",
            "hanabython.Modules.HandPublic",
            "hanabython.Modules.Player",
            "hanabython.Modules.PlayerBase",
            "hanabython.Modules.PlayerHumanText",
            "hanabython.Modules.PlayerPuppet",
            "hanabython.Modules.StringAnsi",
            "hanabython.Modules.StringUtils",
            "hanabython.cli",
            "hanabython.hanabython_temp",
            "tests",
            "tests.test_hanabython"
        ],
        "version": "0.1.10"
    },
    "hanako": {
        "cmdline": [],
        "modules": [
            "hanako",
            "hanako.cli",
            "hanako.cli.server",
            "hanako.command",
            "hanako.command.api",
            "hanako.meta",
            "hanako.model",
            "hanako.model.player",
            "hanako.model.player_repo",
            "hanako.model.world",
            "hanako.server",
            "hanako.server.api",
            "hanako.server.player_api",
            "hanako.server.room_api"
        ],
        "version": "0.0.1"
    },
    "hanaml": {
        "cmdline": [],
        "modules": [
            "hanaml",
            "hanaml.cli"
        ],
        "version": "0.1.1"
    },
    "hanamusume": {
        "cmdline": [],
        "modules": [
            "hanamusume",
            "hanamusume.datahelper",
            "hanamusume.datahelper.libsvm_data",
            "hanamusume.oglm_solver",
            "hanamusume.solvers",
            "hanamusume.utils"
        ],
        "version": "0.0.dev6"
    },
    "hanashiai-core": {
        "cmdline": [],
        "modules": [
            "hanashiai",
            "hanashiai.core",
            "hanashiai.core.exceptions",
            "hanashiai.core.interfaces",
            "hanashiai.core.models"
        ],
        "version": "0.5.0"
    },
    "hancock": {
        "cmdline": [],
        "modules": [
            "hancock"
        ],
        "version": "1.1.2"
    },
    "hancon": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hand": {
        "cmdline": [],
        "modules": [
            "hand",
            "hand.baserss"
        ],
        "version": "0.5"
    },
    "hand-detection-v0": {
        "cmdline": [],
        "modules": [
            "hand_detection_v0",
            "hand_detection_v0.hand_detection"
        ],
        "version": "0.1.2"
    },
    "hand-detection-v1": {
        "cmdline": [],
        "modules": [
            "hand_detection_v1",
            "hand_detection_v1.hand_detection"
        ],
        "version": "0.1.1"
    },
    "hand-detection-v3": {
        "cmdline": [],
        "modules": [
            "hand_detection_v3",
            "hand_detection_v3.hand_detection"
        ],
        "version": "0.3.1"
    },
    "hand-detection-v4": {
        "cmdline": [],
        "modules": [
            "hand_detection_v4",
            "hand_detection_v4.hand_detection"
        ],
        "version": "0.4.1"
    },
    "hand-detection-v5": {
        "cmdline": [],
        "modules": [
            "hand_detection_v5",
            "hand_detection_v5.hand_detection"
        ],
        "version": "0.4.1"
    },
    "hand-detection-v6": {
        "cmdline": [],
        "modules": [
            "hand_detection_v6",
            "hand_detection_v6.hand_detection"
        ],
        "version": "0.6.1"
    },
    "hand-detection-v7": {
        "cmdline": [],
        "modules": [
            "hand_detection_v7",
            "hand_detection_v7.hand_detection"
        ],
        "version": "0.4.1"
    },
    "hand-detector-test": {
        "cmdline": [],
        "modules": [
            "hd_llz",
            "hd_llz.hand_detection",
            "object_detection",
            "object_detection.anchor_generators",
            "object_detection.anchor_generators.grid_anchor_generator",
            "object_detection.anchor_generators.grid_anchor_generator_test",
            "object_detection.anchor_generators.multiple_grid_anchor_generator",
            "object_detection.anchor_generators.multiple_grid_anchor_generator_test",
            "object_detection.box_coders",
            "object_detection.box_coders.faster_rcnn_box_coder",
            "object_detection.box_coders.faster_rcnn_box_coder_test",
            "object_detection.box_coders.keypoint_box_coder",
            "object_detection.box_coders.keypoint_box_coder_test",
            "object_detection.box_coders.mean_stddev_box_coder",
            "object_detection.box_coders.mean_stddev_box_coder_test",
            "object_detection.box_coders.square_box_coder",
            "object_detection.box_coders.square_box_coder_test",
            "object_detection.builders",
            "object_detection.builders.anchor_generator_builder",
            "object_detection.builders.anchor_generator_builder_test",
            "object_detection.builders.box_coder_builder",
            "object_detection.builders.box_coder_builder_test",
            "object_detection.builders.box_predictor_builder",
            "object_detection.builders.box_predictor_builder_test",
            "object_detection.builders.hyperparams_builder",
            "object_detection.builders.hyperparams_builder_test",
            "object_detection.builders.image_resizer_builder",
            "object_detection.builders.image_resizer_builder_test",
            "object_detection.builders.input_reader_builder",
            "object_detection.builders.input_reader_builder_test",
            "object_detection.builders.losses_builder",
            "object_detection.builders.losses_builder_test",
            "object_detection.builders.matcher_builder",
            "object_detection.builders.matcher_builder_test",
            "object_detection.builders.model_builder",
            "object_detection.builders.model_builder_test",
            "object_detection.builders.optimizer_builder",
            "object_detection.builders.optimizer_builder_test",
            "object_detection.builders.post_processing_builder",
            "object_detection.builders.post_processing_builder_test",
            "object_detection.builders.preprocessor_builder",
            "object_detection.builders.preprocessor_builder_test",
            "object_detection.builders.region_similarity_calculator_builder",
            "object_detection.builders.region_similarity_calculator_builder_test",
            "object_detection.core",
            "object_detection.core.anchor_generator",
            "object_detection.core.balanced_positive_negative_sampler",
            "object_detection.core.balanced_positive_negative_sampler_test",
            "object_detection.core.batcher",
            "object_detection.core.batcher_test",
            "object_detection.core.box_coder",
            "object_detection.core.box_coder_test",
            "object_detection.core.box_list",
            "object_detection.core.box_list_ops",
            "object_detection.core.box_list_ops_test",
            "object_detection.core.box_list_test",
            "object_detection.core.box_predictor",
            "object_detection.core.box_predictor_test",
            "object_detection.core.data_decoder",
            "object_detection.core.keypoint_ops",
            "object_detection.core.keypoint_ops_test",
            "object_detection.core.losses",
            "object_detection.core.losses_test",
            "object_detection.core.matcher",
            "object_detection.core.matcher_test",
            "object_detection.core.minibatch_sampler",
            "object_detection.core.minibatch_sampler_test",
            "object_detection.core.model",
            "object_detection.core.post_processing",
            "object_detection.core.post_processing_test",
            "object_detection.core.prefetcher",
            "object_detection.core.prefetcher_test",
            "object_detection.core.preprocessor",
            "object_detection.core.preprocessor_test",
            "object_detection.core.region_similarity_calculator",
            "object_detection.core.region_similarity_calculator_test",
            "object_detection.core.standard_fields",
            "object_detection.core.target_assigner",
            "object_detection.core.target_assigner_test",
            "object_detection.create_pascal_tf_record",
            "object_detection.create_pascal_tf_record_test",
            "object_detection.create_pet_tf_record",
            "object_detection.data_decoders",
            "object_detection.data_decoders.tf_example_decoder",
            "object_detection.data_decoders.tf_example_decoder_test",
            "object_detection.eval",
            "object_detection.eval_util",
            "object_detection.evaluator",
            "object_detection.export_inference_graph",
            "object_detection.exporter",
            "object_detection.exporter_test",
            "object_detection.matchers",
            "object_detection.matchers.argmax_matcher",
            "object_detection.matchers.argmax_matcher_test",
            "object_detection.matchers.bipartite_matcher",
            "object_detection.matchers.bipartite_matcher_test",
            "object_detection.meta_architectures",
            "object_detection.meta_architectures.faster_rcnn_meta_arch",
            "object_detection.meta_architectures.faster_rcnn_meta_arch_test",
            "object_detection.meta_architectures.faster_rcnn_meta_arch_test_lib",
            "object_detection.meta_architectures.rfcn_meta_arch",
            "object_detection.meta_architectures.rfcn_meta_arch_test",
            "object_detection.meta_architectures.ssd_meta_arch",
            "object_detection.meta_architectures.ssd_meta_arch_test",
            "object_detection.models",
            "object_detection.models.faster_rcnn_inception_resnet_v2_feature_extractor",
            "object_detection.models.faster_rcnn_inception_resnet_v2_feature_extractor_test",
            "object_detection.models.faster_rcnn_resnet_v1_feature_extractor",
            "object_detection.models.faster_rcnn_resnet_v1_feature_extractor_test",
            "object_detection.models.feature_map_generators",
            "object_detection.models.feature_map_generators_test",
            "object_detection.models.ssd_feature_extractor_test",
            "object_detection.models.ssd_inception_v2_feature_extractor",
            "object_detection.models.ssd_inception_v2_feature_extractor_test",
            "object_detection.models.ssd_mobilenet_v1_feature_extractor",
            "object_detection.models.ssd_mobilenet_v1_feature_extractor_test",
            "object_detection.protos",
            "object_detection.protos.anchor_generator_pb2",
            "object_detection.protos.argmax_matcher_pb2",
            "object_detection.protos.bipartite_matcher_pb2",
            "object_detection.protos.box_coder_pb2",
            "object_detection.protos.box_predictor_pb2",
            "object_detection.protos.eval_pb2",
            "object_detection.protos.faster_rcnn_box_coder_pb2",
            "object_detection.protos.faster_rcnn_pb2",
            "object_detection.protos.grid_anchor_generator_pb2",
            "object_detection.protos.hyperparams_pb2",
            "object_detection.protos.image_resizer_pb2",
            "object_detection.protos.input_reader_pb2",
            "object_detection.protos.losses_pb2",
            "object_detection.protos.matcher_pb2",
            "object_detection.protos.mean_stddev_box_coder_pb2",
            "object_detection.protos.model_pb2",
            "object_detection.protos.optimizer_pb2",
            "object_detection.protos.pipeline_pb2",
            "object_detection.protos.post_processing_pb2",
            "object_detection.protos.preprocessor_pb2",
            "object_detection.protos.region_similarity_calculator_pb2",
            "object_detection.protos.square_box_coder_pb2",
            "object_detection.protos.ssd_anchor_generator_pb2",
            "object_detection.protos.ssd_pb2",
            "object_detection.protos.string_int_label_map_pb2",
            "object_detection.protos.train_pb2",
            "object_detection.train",
            "object_detection.trainer",
            "object_detection.trainer_test",
            "object_detection.utils",
            "object_detection.utils.category_util",
            "object_detection.utils.category_util_test",
            "object_detection.utils.dataset_util",
            "object_detection.utils.dataset_util_test",
            "object_detection.utils.label_map_util",
            "object_detection.utils.label_map_util_test",
            "object_detection.utils.learning_schedules",
            "object_detection.utils.learning_schedules_test",
            "object_detection.utils.metrics",
            "object_detection.utils.metrics_test",
            "object_detection.utils.np_box_list",
            "object_detection.utils.np_box_list_ops",
            "object_detection.utils.np_box_list_ops_test",
            "object_detection.utils.np_box_list_test",
            "object_detection.utils.np_box_ops",
            "object_detection.utils.np_box_ops_test",
            "object_detection.utils.object_detection_evaluation",
            "object_detection.utils.object_detection_evaluation_test",
            "object_detection.utils.ops",
            "object_detection.utils.ops_test",
            "object_detection.utils.per_image_evaluation",
            "object_detection.utils.per_image_evaluation_test",
            "object_detection.utils.shape_utils",
            "object_detection.utils.shape_utils_test",
            "object_detection.utils.static_shape",
            "object_detection.utils.static_shape_test",
            "object_detection.utils.test_utils",
            "object_detection.utils.test_utils_test",
            "object_detection.utils.variables_helper",
            "object_detection.utils.variables_helper_test",
            "object_detection.utils.visualization_utils",
            "object_detection.utils.visualization_utils_test",
            "utils",
            "utils.category_util",
            "utils.category_util_test",
            "utils.dataset_util",
            "utils.dataset_util_test",
            "utils.label_map_util",
            "utils.label_map_util_test",
            "utils.learning_schedules",
            "utils.learning_schedules_test",
            "utils.metrics",
            "utils.metrics_test",
            "utils.np_box_list",
            "utils.np_box_list_ops",
            "utils.np_box_list_ops_test",
            "utils.np_box_list_test",
            "utils.np_box_ops",
            "utils.np_box_ops_test",
            "utils.object_detection_evaluation",
            "utils.object_detection_evaluation_test",
            "utils.ops",
            "utils.ops_test",
            "utils.per_image_evaluation",
            "utils.per_image_evaluation_test",
            "utils.shape_utils",
            "utils.shape_utils_test",
            "utils.static_shape",
            "utils.static_shape_test",
            "utils.test_utils",
            "utils.test_utils_test",
            "utils.variables_helper",
            "utils.variables_helper_test",
            "utils.visualization_utils",
            "utils.visualization_utils_test"
        ],
        "version": "0.0.0.3"
    },
    "hand-env": {
        "cmdline": [],
        "modules": [
            "hand_env",
            "hand_env.config"
        ],
        "version": "1.0"
    },
    "hand-evaluator": {
        "cmdline": [],
        "modules": [
            "evaluator",
            "evaluator.evaluator",
            "evaluator.hand",
            "evaluator.main"
        ],
        "version": "0.0.1a"
    },
    "hand-grenade": {
        "cmdline": [],
        "modules": [
            "hand_grenade",
            "hand_grenade.hand_grenade"
        ],
        "version": "0.1.5"
    },
    "handbag": {
        "cmdline": [],
        "modules": [
            "handbag",
            "handbag.cursor",
            "handbag.database",
            "handbag.dbm",
            "handbag.dbm.abstract",
            "handbag.dbm.lmdbdbm",
            "handbag.dson",
            "handbag.environment",
            "handbag.index",
            "handbag.model",
            "handbag.model_adaptors",
            "handbag.registry",
            "handbag.relationships",
            "handbag.table",
            "handbag.transaction",
            "handbag.uniqueid",
            "handbag.validators",
            "handbag.version",
            "tests",
            "tests.test_cursor",
            "tests.test_index",
            "tests.test_model",
            "tests.test_relationships",
            "tests.test_table",
            "tests.test_validators"
        ],
        "version": "0.1.8"
    },
    "handbook-tools": {
        "cmdline": [],
        "modules": [
            "handbook_tools",
            "handbook_tools.commands",
            "handbook_tools.commands.build",
            "handbook_tools.commands.status",
            "handbook_tools.commands.toc",
            "handbook_tools.handbook",
            "handbook_tools.lib",
            "handbook_tools.lib.command_base",
            "handbook_tools.lib.directory_tree",
            "handbook_tools.lib.handbook_validation",
            "handbook_tools.lib.navigation_tree",
            "handbook_tools.lib.navigation_tree_node"
        ],
        "version": "0.4.2"
    },
    "handcalcs": {
        "cmdline": [],
        "modules": [
            "handcalcs",
            "handcalcs.conversion_funcs",
            "handcalcs.decorator",
            "handcalcs.handcalcs",
            "handcalcs.install_templates",
            "handcalcs.render",
            "handcalcs.sympy_kit"
        ],
        "version": "1.1.2"
    },
    "handcrank": {
        "cmdline": [],
        "modules": [
            "handcrank",
            "handcrank.dirchange",
            "handcrank.directives",
            "handcrank.generator",
            "handcrank.report",
            "handcrank.roles",
            "handcrank.runner",
            "handcrank.tests",
            "handcrank.tests.test_dirchange",
            "handcrank.tests.test_generator",
            "handcrank.tests.test_report",
            "handcrank.tests.test_runner",
            "handcrank.tests.test_skeleton",
            "handcrank.tests.testcase",
            "handcrank.version"
        ],
        "version": "0.2"
    },
    "handi": {
        "cmdline": [],
        "modules": [
            "handy",
            "handy._version",
            "handy.cli",
            "handy.cli._constants",
            "handy.cli._file",
            "handy.cli.chkinfo",
            "handy.cli.cli",
            "handy.cli.clipboard",
            "handy.cli.config",
            "handy.cli.crypt",
            "handy.cli.document",
            "handy.cli.download",
            "handy.cli.filter",
            "handy.cli.git",
            "handy.cli.hack",
            "handy.cli.json",
            "handy.cli.math",
            "handy.cli.network",
            "handy.cli.secure",
            "handy.cli.simple",
            "handy.cli.text",
            "handy.cli.transfer",
            "handy.cli.translate",
            "handy.cli.utils",
            "handy.conv",
            "handy.conv.basics",
            "handy.crypto",
            "handy.crypto.encode",
            "handy.crypto.encrypt",
            "handy.crypto.passcode",
            "handy.dict",
            "handy.dict.mixedict",
            "handy.dict.puredict",
            "handy.document",
            "handy.document.dict2txt",
            "handy.document.docx2xml",
            "handy.document.list2txt",
            "handy.document.pdf2docx",
            "handy.file",
            "handy.file.compress",
            "handy.file.search",
            "handy.hack",
            "handy.hack.crack",
            "handy.hack.crawl",
            "handy.hack.img2txt",
            "handy.hack.mail",
            "handy.hack.spoof",
            "handy.hack.video2txt",
            "handy.jzon",
            "handy.jzon.handler",
            "handy.misc",
            "handy.network",
            "handy.network.download",
            "handy.network.ftp",
            "handy.network.portscan",
            "handy.network.upload",
            "handy.network.worm",
            "handy.pkg",
            "handy.rand",
            "handy.rand.gid",
            "handy.rand.number",
            "handy.rand.passwd",
            "handy.setenv",
            "handy.tests",
            "handy.tests.test_dict",
            "handy.tests.test_encode",
            "handy.tests.test_encrypt",
            "handy.tests.test_json",
            "handy.tests.test_random",
            "handy.weixin",
            "handy.weixin.bot",
            "handy.youdao",
            "handy.youdao.zh2en",
            "handy.youdao.zh2ko"
        ],
        "version": "0.10.4.1"
    },
    "handict": {
        "cmdline": [],
        "modules": [
            "handict",
            "handict.handict",
            "handict.trie"
        ],
        "version": "0.2.0"
    },
    "handjob": {
        "cmdline": [],
        "modules": [
            "handjob",
            "handjob.app"
        ],
        "version": "0.2.9"
    },
    "handkerchief": {
        "cmdline": [],
        "modules": [
            "handkerchief",
            "handkerchief.handkerchief"
        ],
        "version": "0.2"
    },
    "handle": {
        "cmdline": [],
        "modules": [
            "handle",
            "handle.filters",
            "handle.handle",
            "handle.item",
            "handle.section"
        ],
        "version": "0.1.0"
    },
    "handle-missing-csv": {
        "cmdline": [],
        "modules": [
            "missing",
            "missing.missing"
        ],
        "version": "0.0.1"
    },
    "handle-missing-values": {
        "cmdline": [],
        "modules": [
            "handle_missing_values"
        ],
        "version": "0.0.1"
    },
    "handleget": {
        "cmdline": [],
        "modules": [
            "handleget",
            "handleget.error",
            "handleget.info",
            "handleget.load",
            "handleget.parse",
            "handleget.request",
            "handleget.test"
        ],
        "version": "0.4.1"
    },
    "handlemissingdata53004": {
        "cmdline": [],
        "modules": [
            "handleMissingData53004",
            "handleMissingData53004.handleMissingData"
        ],
        "version": "0.1"
    },
    "handler": {
        "cmdline": [],
        "modules": [
            "handler"
        ],
        "version": "1.3.0"
    },
    "handler-list": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "handlerapi": {
        "cmdline": [],
        "modules": [
            "HandlerAPI",
            "HandlerAPI.HandlerAPI"
        ],
        "version": "0.4.8"
    },
    "handlers-lauto": {
        "cmdline": [],
        "modules": [
            "handlers",
            "handlers.es_handler",
            "handlers.es_handler.models",
            "handlers.rocket_handler",
            "handlers.rocket_handler.models",
            "handlers.rocket_handler.rocketbot",
            "handlers.rotating_file_handler",
            "handlers.rotating_file_handler.models",
            "handlers.stream_handler",
            "handlers.stream_handler.models"
        ],
        "version": "1.0.0"
    },
    "handlersocket": {
        "cmdline": [],
        "modules": [
            "handlersocket",
            "handlersocket.client"
        ],
        "version": "0.0.2"
    },
    "handling-databases-2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "handling-missing-data-101703129": {
        "cmdline": [],
        "modules": [
            "handling_missing_data_101703129",
            "handling_missing_data_101703129.handling_missing_data"
        ],
        "version": "0.2"
    },
    "handofcats": {
        "cmdline": [],
        "modules": [
            "handofcats",
            "handofcats.accessor",
            "handofcats.actions",
            "handofcats.actions._ast",
            "handofcats.actions._codeobject",
            "handofcats.actions.codegen",
            "handofcats.actions.commandline",
            "handofcats.cli",
            "handofcats.config",
            "handofcats.customize",
            "handofcats.driver",
            "handofcats.injector",
            "handofcats.langhelpers",
            "handofcats.types"
        ],
        "version": "3.2.0"
    },
    "handoff": {
        "cmdline": [],
        "modules": [
            "handoff",
            "handoff.config"
        ],
        "version": "0.2.0b4"
    },
    "handout": {
        "cmdline": [],
        "modules": [
            "handout",
            "handout.blocks",
            "handout.handout",
            "handout.tools"
        ],
        "version": "1.1.2"
    },
    "handprint": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.2"
    },
    "handright": {
        "cmdline": [],
        "modules": [
            "handright",
            "handright._core",
            "handright._exceptions",
            "handright._template",
            "handright._util"
        ],
        "version": "5.5.0"
    },
    "handroll": {
        "cmdline": [],
        "modules": [
            "handroll",
            "handroll.commands",
            "handroll.commands.base",
            "handroll.commands.build",
            "handroll.commands.builtins",
            "handroll.commands.scaffold",
            "handroll.commands.watch",
            "handroll.composers",
            "handroll.composers.atom",
            "handroll.composers.generic",
            "handroll.composers.j2",
            "handroll.composers.md",
            "handroll.composers.mixins",
            "handroll.composers.rst",
            "handroll.composers.sass",
            "handroll.composers.txt",
            "handroll.configuration",
            "handroll.date",
            "handroll.director",
            "handroll.entry",
            "handroll.exceptions",
            "handroll.extensions",
            "handroll.extensions.base",
            "handroll.extensions.blog",
            "handroll.extensions.loader",
            "handroll.extensions.sitemap",
            "handroll.handlers",
            "handroll.i18n",
            "handroll.resolver",
            "handroll.scaffolder",
            "handroll.server",
            "handroll.signals",
            "handroll.site",
            "handroll.template",
            "handroll.template.catalog",
            "handroll.template.j2",
            "handroll.tests",
            "handroll.tests.factory",
            "handroll.tests.test_blog_extension",
            "handroll.tests.test_commands",
            "handroll.tests.test_composers",
            "handroll.tests.test_configuration",
            "handroll.tests.test_director",
            "handroll.tests.test_entry",
            "handroll.tests.test_extensions",
            "handroll.tests.test_handlers",
            "handroll.tests.test_resolver",
            "handroll.tests.test_scaffolder",
            "handroll.tests.test_server",
            "handroll.tests.test_site",
            "handroll.tests.test_sitemap_extension",
            "handroll.tests.test_template",
            "handroll.tests.testcase"
        ],
        "version": "3.1"
    },
    "hands": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hands-chopping": {
        "cmdline": [],
        "modules": [
            "goods",
            "goods.data",
            "goods.data.entry",
            "goods.spider",
            "goods.spider.base",
            "goods.spider.core",
            "goods.spider.spider_jd",
            "goods.spider.spider_taobao",
            "goods.threads",
            "goods.threads.core",
            "goods.threads.goods_thread",
            "goods.utils",
            "goods.utils.const_value",
            "goods.utils.message",
            "run",
            "test",
            "test.test_spider"
        ],
        "version": "0.3.0"
    },
    "hands-on-ml-2e-zh": {
        "cmdline": [],
        "modules": [
            "HandsOnMl2eZh",
            "HandsOnMl2eZh.asset",
            "HandsOnMl2eZh.docs",
            "HandsOnMl2eZh.docs.img",
            "HandsOnMl2eZh.src",
            "HandsOnMl2eZh.styles"
        ],
        "version": "2020.9.22.0"
    },
    "hands-on-ml-zh": {
        "cmdline": [],
        "modules": [
            "HandsOnMlZh",
            "HandsOnMlZh.docs",
            "HandsOnMlZh.images",
            "HandsOnMlZh.images.Appendix",
            "HandsOnMlZh.images.MainPage",
            "HandsOnMlZh.images.chapter_1",
            "HandsOnMlZh.images.chapter_10",
            "HandsOnMlZh.images.chapter_11",
            "HandsOnMlZh.images.chapter_12",
            "HandsOnMlZh.images.chapter_13",
            "HandsOnMlZh.images.chapter_14",
            "HandsOnMlZh.images.chapter_15",
            "HandsOnMlZh.images.chapter_16",
            "HandsOnMlZh.images.chapter_2",
            "HandsOnMlZh.images.chapter_3",
            "HandsOnMlZh.images.chapter_4",
            "HandsOnMlZh.images.chapter_5",
            "HandsOnMlZh.images.chapter_6",
            "HandsOnMlZh.images.chapter_7",
            "HandsOnMlZh.images.chapter_8",
            "HandsOnMlZh.images.chapter_9",
            "HandsOnMlZh.src",
            "HandsOnMlZh.styles"
        ],
        "version": "2020.9.21.0"
    },
    "hands-rdf": {
        "cmdline": [],
        "modules": [
            "hands_rdf",
            "hands_rdf.Model",
            "hands_rdf.Model.BaseModel",
            "hands_rdf.Model.Config",
            "hands_rdf.Model.MultiModels",
            "hands_rdf.RDF",
            "hands_rdf.features",
            "hands_rdf.helpers"
        ],
        "version": "0.1"
    },
    "handsdown": {
        "cmdline": [],
        "modules": [
            "handsdown",
            "handsdown.ast_parser",
            "handsdown.ast_parser.analyzers",
            "handsdown.ast_parser.analyzers.base_analyzer",
            "handsdown.ast_parser.analyzers.class_analyzer",
            "handsdown.ast_parser.analyzers.expression_analyzer",
            "handsdown.ast_parser.analyzers.function_analyzer",
            "handsdown.ast_parser.analyzers.module_analyzer",
            "handsdown.ast_parser.enums",
            "handsdown.ast_parser.module_record_list",
            "handsdown.ast_parser.node_records",
            "handsdown.ast_parser.node_records.argument_record",
            "handsdown.ast_parser.node_records.attribute_record",
            "handsdown.ast_parser.node_records.class_record",
            "handsdown.ast_parser.node_records.expression_record",
            "handsdown.ast_parser.node_records.function_record",
            "handsdown.ast_parser.node_records.import_record",
            "handsdown.ast_parser.node_records.module_record",
            "handsdown.ast_parser.node_records.node_record",
            "handsdown.ast_parser.node_records.text_record",
            "handsdown.ast_parser.smart_ast",
            "handsdown.ast_parser.type_defs",
            "handsdown.cli_parser",
            "handsdown.generator",
            "handsdown.loader",
            "handsdown.main",
            "handsdown.md_document",
            "handsdown.processors",
            "handsdown.processors.base",
            "handsdown.processors.pep257",
            "handsdown.processors.rst",
            "handsdown.processors.section_map",
            "handsdown.processors.smart",
            "handsdown.settings",
            "handsdown.utils",
            "handsdown.utils.docstring_formatter",
            "handsdown.utils.import_string",
            "handsdown.utils.indent_trimmer",
            "handsdown.utils.logger",
            "handsdown.utils.path_finder",
            "handsdown.version"
        ],
        "version": "0.3.9"
    },
    "handsetdetection": {
        "cmdline": [],
        "modules": [
            "handsetdetection",
            "handsetdetection.exceptions",
            "handsetdetection.hdapiv2",
            "handsetdetection.wsseut",
            "tests",
            "tests.handsetdetection_tests",
            "tests.testutils",
            "tests.wsseut_tests"
        ],
        "version": "1.1"
    },
    "handshake-client": {
        "cmdline": [],
        "modules": [
            "handshake_client.chain",
            "handshake_client.constant",
            "handshake_client.http_",
            "handshake_client.rpc",
            "handshake_client.sockets"
        ],
        "version": "0.1.7"
    },
    "handshape-datasets": {
        "cmdline": [],
        "modules": [
            "handshape_datasets",
            "handshape_datasets.base",
            "handshape_datasets.config",
            "handshape_datasets.dataset_info",
            "handshape_datasets.dataset_loader",
            "handshape_datasets.datasets",
            "handshape_datasets.datasets.ciarp",
            "handshape_datasets.datasets.common",
            "handshape_datasets.datasets.dataset",
            "handshape_datasets.datasets.indian_training",
            "handshape_datasets.datasets.irish_refactory",
            "handshape_datasets.datasets.jsl",
            "handshape_datasets.datasets.lsa16",
            "handshape_datasets.datasets.nus1",
            "handshape_datasets.datasets.nus2",
            "handshape_datasets.datasets.psl",
            "handshape_datasets.datasets.pugeaultASL",
            "handshape_datasets.datasets.rwth",
            "handshape_datasets.datasets.utils"
        ],
        "version": "0.1.3"
    },
    "handsontablesjs": {
        "cmdline": [],
        "modules": [
            "handsontablesjs",
            "tests"
        ],
        "version": "0.0.1"
    },
    "handwritingio": {
        "cmdline": [],
        "modules": [
            "handwritingio",
            "handwritingio.version"
        ],
        "version": "1.0.0"
    },
    "handwritten": {
        "cmdline": [],
        "modules": [
            "handwritten",
            "handwritten.utils"
        ],
        "version": "0.0.0"
    },
    "handy": {
        "cmdline": [],
        "modules": [
            "handy",
            "handy.ajax",
            "handy.cross",
            "handy.db",
            "handy.decorators",
            "handy.forms",
            "handy.forms.widgets",
            "handy.http",
            "handy.logger",
            "handy.mail",
            "handy.middleware",
            "handy.models",
            "handy.models.encode",
            "handy.models.fields",
            "handy.shortcuts",
            "handy.text",
            "handy.utils"
        ],
        "version": "0.7"
    },
    "handy-decorators": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.7"
    },
    "handy-dict": {
        "cmdline": [],
        "modules": [
            "handy_dict",
            "handy_dict._nbdev",
            "handy_dict.apply_keyed",
            "handy_dict.core",
            "handy_dict.exceptions",
            "handy_dict.multi_get",
            "handy_dict.return_keyed"
        ],
        "version": "0.1.0"
    },
    "handy-ml": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "handybelt": {
        "cmdline": [],
        "modules": [
            "handybelt"
        ],
        "version": "0.0.1"
    },
    "handygeometry": {
        "cmdline": [],
        "modules": [
            "handygeometry",
            "handygeometry.handygeometry"
        ],
        "version": "0.12"
    },
    "handyhttp": {
        "cmdline": [],
        "modules": [
            "handyhttp",
            "handyhttp.exceptions",
            "handyhttp.responses",
            "test",
            "test.test_exceptions",
            "test.test_responses"
        ],
        "version": "0.0.6"
    },
    "handyjupyter": {
        "cmdline": [],
        "modules": [
            "handyjupyter",
            "handyjupyter.visual",
            "handyjupyter.visual.visual"
        ],
        "version": "0.0.1"
    },
    "handylib": {
        "cmdline": [],
        "modules": [
            "HandyLib",
            "HandyLib.file_operator"
        ],
        "version": "0.0.7"
    },
    "handylib-qy-y": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "handyman": {
        "cmdline": [],
        "modules": [
            "handyman",
            "handyman.deploy",
            "handyman.experimental",
            "handyman.general",
            "handyman.inputs",
            "handyman.model",
            "handyman.objects",
            "handyman.transform",
            "handyman.visualize"
        ],
        "version": "0.402"
    },
    "handyml": {
        "cmdline": [],
        "modules": [
            "handyML",
            "handyML.Exploratory_data_analysis",
            "handyML.Exploratory_data_analysis.Exploratory_data_analysis",
            "handyML.ensemble",
            "handyML.feature_engineering",
            "handyML.feature_engineering.uniform_to_barrel",
            "handyML.models",
            "handyML.models.model",
            "handyML.params_opt",
            "handyML.params_opt.bayes_opt",
            "handyML.preprocessing",
            "handyML.preprocessing.Encoding",
            "tests",
            "tests.test_Exploratory_data_analysis",
            "tests.test_load_data",
            "tests.test_preprocessing"
        ],
        "version": "0.0.1b1"
    },
    "handymodules": {
        "cmdline": [],
        "modules": [
            "handymodules",
            "handymodules.create_logger",
            "handymodules.downloading_file",
            "handymodules.files_info",
            "handymodules.hashing_passwords",
            "handymodules.password_validation",
            "handymodules.tictoc"
        ],
        "version": "2.1.0"
    },
    "handympi": {
        "cmdline": [],
        "modules": [
            "handympi",
            "handympi.handympi",
            "handympi.mpi4_balancer"
        ],
        "version": "0.23"
    },
    "handyspark": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.titanic",
            "handyspark",
            "handyspark.extensions",
            "handyspark.extensions.common",
            "handyspark.extensions.evaluation",
            "handyspark.extensions.types",
            "handyspark.ml",
            "handyspark.ml.base",
            "handyspark.plot",
            "handyspark.sql",
            "handyspark.sql.dataframe",
            "handyspark.sql.datetime",
            "handyspark.sql.pandas",
            "handyspark.sql.schema",
            "handyspark.sql.string",
            "handyspark.sql.transform",
            "handyspark.stats",
            "handyspark.util"
        ],
        "version": "0.2.2a1"
    },
    "handystats": {
        "cmdline": [],
        "modules": [
            "handystats"
        ],
        "version": "0.1.1"
    },
    "hanga": {
        "cmdline": [],
        "modules": [
            "hanga",
            "hanga.api",
            "hanga.appdirs",
            "hanga.scripts",
            "hanga.scripts.client",
            "hanga.utils"
        ],
        "version": "0.7.1"
    },
    "hangar": {
        "cmdline": [],
        "modules": [
            "hangar",
            "hangar._version",
            "hangar.backends",
            "hangar.backends.chunk",
            "hangar.backends.hdf5_00",
            "hangar.backends.hdf5_01",
            "hangar.backends.lmdb_30",
            "hangar.backends.lmdb_31",
            "hangar.backends.numpy_10",
            "hangar.backends.remote_50",
            "hangar.checkout",
            "hangar.cli",
            "hangar.cli.cli",
            "hangar.cli.utils",
            "hangar.columns",
            "hangar.columns.column",
            "hangar.columns.common",
            "hangar.columns.constructors",
            "hangar.columns.layout_flat",
            "hangar.columns.layout_nested",
            "hangar.constants",
            "hangar.context",
            "hangar.dataloaders",
            "hangar.dataloaders.common",
            "hangar.dataloaders.tfloader",
            "hangar.dataloaders.torchloader",
            "hangar.diagnostics",
            "hangar.diagnostics.ecosystem",
            "hangar.diagnostics.graphing",
            "hangar.diagnostics.integrity",
            "hangar.diff",
            "hangar.external",
            "hangar.external._external",
            "hangar.external.base_plugin",
            "hangar.external.plugin_manager",
            "hangar.merger",
            "hangar.mixins",
            "hangar.mixins.checkout_iteration",
            "hangar.mixins.datasetget",
            "hangar.mixins.recorditer",
            "hangar.op_state",
            "hangar.records",
            "hangar.records.commiting",
            "hangar.records.hashs",
            "hangar.records.heads",
            "hangar.records.parsing",
            "hangar.records.queries",
            "hangar.records.summarize",
            "hangar.records.vcompat",
            "hangar.remote",
            "hangar.remote.chunks",
            "hangar.remote.client",
            "hangar.remote.content",
            "hangar.remote.hangar_service_pb2",
            "hangar.remote.hangar_service_pb2_grpc",
            "hangar.remote.header_manipulator_client_interceptor",
            "hangar.remote.request_header_validator_interceptor",
            "hangar.remote.server",
            "hangar.remotes",
            "hangar.repository",
            "hangar.txnctx",
            "hangar.typesystem",
            "hangar.typesystem.base",
            "hangar.typesystem.descriptors",
            "hangar.typesystem.ndarray",
            "hangar.typesystem.pybytes",
            "hangar.typesystem.pystring",
            "hangar.utils"
        ],
        "version": "0.5.2"
    },
    "hangar-matplotlib": {
        "cmdline": [],
        "modules": [
            "hangar_matplotlib",
            "hangar_matplotlib.plugin"
        ],
        "version": "0.0.3"
    },
    "hangar-pil": {
        "cmdline": [],
        "modules": [
            "hangar_pil",
            "hangar_pil.plugin"
        ],
        "version": "0.3.2"
    },
    "hangar51client": {
        "cmdline": [],
        "modules": [
            "hangar51client"
        ],
        "version": "2.1.6"
    },
    "hangcli": {
        "cmdline": [],
        "modules": [
            "hangcli"
        ],
        "version": "0.2.7"
    },
    "hanger51client": {
        "cmdline": [],
        "modules": [
            "hanger51client"
        ],
        "version": "1.0.5"
    },
    "hanging-merge-requests": {
        "cmdline": [],
        "modules": [
            "hmr",
            "hmr.config",
            "hmr.formatters",
            "hmr.main",
            "hmr.models",
            "hmr.scripts",
            "hmr.scripts.send_notifications"
        ],
        "version": "1.0.2"
    },
    "hanging-threads": {
        "cmdline": [],
        "modules": [
            "hanging_threads"
        ],
        "version": "2.0.5"
    },
    "hangingthreads": {
        "cmdline": [],
        "modules": [
            "hangingthreads",
            "hangingthreads.cli"
        ],
        "version": "0.1.1"
    },
    "hanglish": {
        "cmdline": [],
        "modules": [
            "hanglish"
        ],
        "version": "1.0.1"
    },
    "hangman": {
        "cmdline": [],
        "modules": [
            "Hangman"
        ],
        "version": "1.4.0."
    },
    "hangman-game": {
        "cmdline": [],
        "modules": [
            "hangman_game",
            "hangman_game.database",
            "hangman_game.easy_level",
            "hangman_game.engine",
            "hangman_game.hard_level",
            "hangman_game.helpers",
            "hangman_game.inquirer",
            "hangman_game.renderer"
        ],
        "version": "1.0.6"
    },
    "hangman-sk": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hangman-ultimate": {
        "cmdline": [],
        "modules": [
            "hangmanultimate",
            "hangmanultimate.data",
            "hangmanultimate.hangman"
        ],
        "version": "1.0.2"
    },
    "hangmanai": {
        "cmdline": [],
        "modules": [
            "HangmanAI",
            "HangmanAI.Automate",
            "HangmanAI.Hangman",
            "HangmanAI.ModDict"
        ],
        "version": "0.0.4"
    },
    "hangmangame": {
        "cmdline": [],
        "modules": [
            "hangmangame",
            "hangmangame.hangmangame"
        ],
        "version": "0.0.1"
    },
    "hangmantest": {
        "cmdline": [
            "code.py"
        ],
        "modules": [],
        "version": "0.3"
    },
    "hangouts-helper": {
        "cmdline": [],
        "modules": [
            "hangouts_helper",
            "hangouts_helper.api",
            "hangouts_helper.handler",
            "hangouts_helper.message",
            "hangouts_helper.version"
        ],
        "version": "19.12.0"
    },
    "hangpanels": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hangrypy": {
        "cmdline": [],
        "modules": [
            "hangrypy",
            "hangrypy.default_recipe_parser",
            "hangrypy.foodnetwork",
            "hangrypy.recipe",
            "hangrypy.schema_org_recipe_parser"
        ],
        "version": "1.1"
    },
    "hangsutestpackage": {
        "cmdline": [],
        "modules": [
            "HangSuTestPackage",
            "HangSuTestPackage.Lesson_1",
            "HangSuTestPackage.Lesson_2"
        ],
        "version": "2018.02.06"
    },
    "hangthepyman": {
        "cmdline": [],
        "modules": [
            "hangthepyman",
            "hangthepyman.db_connection",
            "hangthepyman.game",
            "hangthepyman.the_hangman",
            "hangthepyman.words"
        ],
        "version": "0.1.3"
    },
    "hangul": {
        "cmdline": [],
        "modules": [
            "hangul.hangul"
        ],
        "version": "0.1"
    },
    "hangul-jamo": {
        "cmdline": [],
        "modules": [
            "hangul_jamo",
            "hangul_jamo.constants"
        ],
        "version": "1.0.0"
    },
    "hangul-names": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.2"
    },
    "hangul-romanize": {
        "cmdline": [],
        "modules": [
            "hangul_romanize",
            "hangul_romanize.core",
            "hangul_romanize.rule"
        ],
        "version": "0.1.0"
    },
    "hangul-translit": {
        "cmdline": [],
        "modules": [
            "hangul",
            "hangul.translit"
        ],
        "version": "0.1.1"
    },
    "hangul-utils": {
        "cmdline": [],
        "modules": [
            "hangul_utils",
            "hangul_utils.preprocess",
            "hangul_utils.run",
            "hangul_utils.unicode"
        ],
        "version": "0.4.5"
    },
    "hangulize": {
        "cmdline": [],
        "modules": [
            "cmds",
            "cmds.gentest",
            "cmds.helper",
            "cmds.profile",
            "cmds.repl",
            "cmds.stat",
            "hangulize",
            "hangulize.hangul",
            "hangulize.langs",
            "hangulize.langs.aze",
            "hangulize.langs.bel",
            "hangulize.langs.bul",
            "hangulize.langs.cat",
            "hangulize.langs.ces",
            "hangulize.langs.cym",
            "hangulize.langs.deu",
            "hangulize.langs.ell",
            "hangulize.langs.epo",
            "hangulize.langs.est",
            "hangulize.langs.fin",
            "hangulize.langs.grc",
            "hangulize.langs.hbs",
            "hangulize.langs.hun",
            "hangulize.langs.isl",
            "hangulize.langs.ita",
            "hangulize.langs.jpn",
            "hangulize.langs.kat",
            "hangulize.langs.kat.narrow",
            "hangulize.langs.lat",
            "hangulize.langs.lav",
            "hangulize.langs.lit",
            "hangulize.langs.mkd",
            "hangulize.langs.nld",
            "hangulize.langs.pol",
            "hangulize.langs.por",
            "hangulize.langs.por.br",
            "hangulize.langs.ron",
            "hangulize.langs.rus",
            "hangulize.langs.slk",
            "hangulize.langs.slv",
            "hangulize.langs.spa",
            "hangulize.langs.sqi",
            "hangulize.langs.swe",
            "hangulize.langs.tur",
            "hangulize.langs.ukr",
            "hangulize.langs.vie",
            "hangulize.langs.wlm",
            "hangulize.models",
            "hangulize.normalization",
            "hangulize.processing",
            "tests",
            "tests.aze",
            "tests.bel",
            "tests.bul",
            "tests.cat",
            "tests.ces",
            "tests.cym",
            "tests.deu",
            "tests.ell",
            "tests.epo",
            "tests.est",
            "tests.fin",
            "tests.grc",
            "tests.hbs",
            "tests.hun",
            "tests.internal",
            "tests.isl",
            "tests.ita",
            "tests.jpn",
            "tests.kat",
            "tests.kat_narrow",
            "tests.lat",
            "tests.lav",
            "tests.lit",
            "tests.mkd",
            "tests.nld",
            "tests.pol",
            "tests.por",
            "tests.por_br",
            "tests.ron",
            "tests.rus",
            "tests.slk",
            "tests.slv",
            "tests.spa",
            "tests.sqi",
            "tests.swe",
            "tests.tur",
            "tests.ukr",
            "tests.vie",
            "tests.wlm"
        ],
        "version": "0.0.9"
    },
    "hangups": {
        "cmdline": [],
        "modules": [
            "hangups",
            "hangups.auth",
            "hangups.channel",
            "hangups.client",
            "hangups.conversation",
            "hangups.conversation_event",
            "hangups.event",
            "hangups.exceptions",
            "hangups.hangouts_pb2",
            "hangups.http_utils",
            "hangups.message_parser",
            "hangups.parsers",
            "hangups.pblite",
            "hangups.ui",
            "hangups.ui.emoticon",
            "hangups.ui.notifier",
            "hangups.ui.utils",
            "hangups.user",
            "hangups.version"
        ],
        "version": "0.4.12"
    },
    "hangups-robobrowser": {
        "cmdline": [],
        "modules": [
            "robobrowser",
            "robobrowser.browser",
            "robobrowser.cache",
            "robobrowser.compat",
            "robobrowser.exceptions",
            "robobrowser.forms",
            "robobrowser.forms.fields",
            "robobrowser.forms.form",
            "robobrowser.helpers",
            "robobrowser.ordereddict",
            "robobrowser.responses",
            "tests",
            "tests.fixtures",
            "tests.test_browser",
            "tests.test_cache",
            "tests.test_forms",
            "tests.test_helpers",
            "tests.utils"
        ],
        "version": "0.5.2"
    },
    "hangups-urwid": {
        "cmdline": [],
        "modules": [
            "urwid",
            "urwid.canvas",
            "urwid.command_map",
            "urwid.compat",
            "urwid.container",
            "urwid.curses_display",
            "urwid.decoration",
            "urwid.display_common",
            "urwid.escape",
            "urwid.font",
            "urwid.graphics",
            "urwid.html_fragment",
            "urwid.lcd_display",
            "urwid.listbox",
            "urwid.main_loop",
            "urwid.monitored_list",
            "urwid.old_str_util",
            "urwid.raw_display",
            "urwid.signals",
            "urwid.split_repr",
            "urwid.tests",
            "urwid.tests.test_canvas",
            "urwid.tests.test_container",
            "urwid.tests.test_decoration",
            "urwid.tests.test_doctests",
            "urwid.tests.test_event_loops",
            "urwid.tests.test_graphics",
            "urwid.tests.test_listbox",
            "urwid.tests.test_str_util",
            "urwid.tests.test_text_layout",
            "urwid.tests.test_util",
            "urwid.tests.test_vterm",
            "urwid.tests.test_widget",
            "urwid.tests.util",
            "urwid.text_layout",
            "urwid.treetools",
            "urwid.util",
            "urwid.version",
            "urwid.vterm",
            "urwid.web_display",
            "urwid.widget",
            "urwid.wimp"
        ],
        "version": "1.2.2-dev"
    },
    "hangupsbot": {
        "cmdline": [],
        "modules": [
            "hangupsbot",
            "hangupsbot.commands",
            "hangupsbot.commands.config",
            "hangupsbot.commands.conversations",
            "hangupsbot.commands.default",
            "hangupsbot.commands.jokes",
            "hangupsbot.commands.users",
            "hangupsbot.config",
            "hangupsbot.handlers",
            "hangupsbot.handlers.autoreplies",
            "hangupsbot.handlers.commands",
            "hangupsbot.handlers.forwarding",
            "hangupsbot.handlers.membership",
            "hangupsbot.handlers.rename",
            "hangupsbot.utils",
            "hangupsbot.version"
        ],
        "version": "1.7.1"
    },
    "hanhanai": {
        "cmdline": [],
        "modules": [
            "HanhanAI",
            "HanhanAI.ga_brain",
            "HanhanAI.population",
            "HanhanAI.universal_dqn"
        ],
        "version": "2.0.2"
    },
    "hanhpdf": {
        "cmdline": [],
        "modules": [
            "hanhpdf",
            "hanhpdf.pdf2image",
            "hanhpdf.pdf2text"
        ],
        "version": "1.0"
    },
    "hanime-scraper": {
        "cmdline": [],
        "modules": [],
        "version": "1.5.0"
    },
    "hanint": {
        "cmdline": [],
        "modules": [
            "hanint",
            "hanint.index"
        ],
        "version": "0.2.0"
    },
    "hanita": {
        "cmdline": [],
        "modules": [
            "hanita",
            "hanita.client",
            "hanita.client_connection",
            "hanita.client_db",
            "hanita.client_qtview",
            "hanita.forms",
            "hanita.forms.app_ui",
            "hanita.forms.form_contacts",
            "hanita.forms.form_login",
            "hanita.forms.form_main",
            "hanita.forms.form_new_chat",
            "hanita.forms.just_ui",
            "hanita_JIM",
            "hanita_JIM.jimmessage",
            "hanita_server",
            "hanita_server.models",
            "hanita_server.request_handler",
            "hanita_server.server",
            "hanita_server.server_db"
        ],
        "version": "0.1.3"
    },
    "hanja": {
        "cmdline": [],
        "modules": [
            "hanja",
            "hanja.hangul",
            "hanja.impl",
            "hanja.table",
            "hanja/__init__"
        ],
        "version": "0.13.2"
    },
    "hanjaq": {
        "cmdline": [],
        "modules": [
            "hanjaq",
            "hanjaq.dictionary",
            "hanjaq.get_information"
        ],
        "version": "0.0.1"
    },
    "hanjq": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "hank-pki": {
        "cmdline": [],
        "modules": [
            "hanK_pki"
        ],
        "version": "0.0.4"
    },
    "hanke": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hankel": {
        "cmdline": [],
        "modules": [
            "hankel",
            "hankel._version",
            "hankel.hankel",
            "hankel.tools"
        ],
        "version": "1.1.0"
    },
    "hankey": {
        "cmdline": [],
        "modules": [
            "hankey",
            "hankey.abstract_dumper",
            "hankey.abstract_remote",
            "hankey.cloud_utils",
            "hankey.command",
            "hankey.daemon",
            "hankey.dropbox",
            "hankey.file",
            "hankey.firebase",
            "hankey.folder",
            "hankey.hankey",
            "hankey.main",
            "hankey.service",
            "hankey.tmp",
            "hankey.utils"
        ],
        "version": "1.1.1"
    },
    "hankl": {
        "cmdline": [],
        "modules": [
            "hankl",
            "hankl.cosmology",
            "hankl.fftlog",
            "hankl.preprocess"
        ],
        "version": "1.1.0"
    },
    "hankshaw": {
        "cmdline": [],
        "modules": [
            "hankshaw",
            "hankshaw.EnvChangeOutput",
            "hankshaw.FitnessOutput",
            "hankshaw.GenotypesOutput",
            "hankshaw.Metapopulation",
            "hankshaw.MetapopulationOutput",
            "hankshaw.OutputWriter",
            "hankshaw.Population",
            "hankshaw.PopulationOutput",
            "hankshaw.cmd_script",
            "hankshaw.genome",
            "hankshaw.misc",
            "hankshaw.topology"
        ],
        "version": "2.0.0"
    },
    "hanlingzhi-test": {
        "cmdline": [],
        "modules": [
            "hanlingzhi",
            "hanlingzhi.math_h",
            "string_h",
            "string_h.reverse"
        ],
        "version": "0.0.2"
    },
    "hanlp": {
        "cmdline": [],
        "modules": [
            "hanlp",
            "hanlp.callbacks",
            "hanlp.callbacks.fine_csv_logger",
            "hanlp.common",
            "hanlp.common.component",
            "hanlp.common.constant",
            "hanlp.common.document",
            "hanlp.common.structure",
            "hanlp.common.transform",
            "hanlp.common.trie",
            "hanlp.common.vocab",
            "hanlp.components",
            "hanlp.components.classifiers",
            "hanlp.components.classifiers.transformer_classifier",
            "hanlp.components.lambda_wrapper",
            "hanlp.components.ner",
            "hanlp.components.parsers",
            "hanlp.components.parsers.alg",
            "hanlp.components.parsers.biaffine",
            "hanlp.components.parsers.biaffine.layers",
            "hanlp.components.parsers.biaffine.model",
            "hanlp.components.parsers.biaffine_parser",
            "hanlp.components.parsers.conll",
            "hanlp.components.pipeline",
            "hanlp.components.pos",
            "hanlp.components.rnn_language_model",
            "hanlp.components.taggers",
            "hanlp.components.taggers.cnn_tagger",
            "hanlp.components.taggers.ngram_conv",
            "hanlp.components.taggers.ngram_conv.ngram_conv_tagger",
            "hanlp.components.taggers.rnn_tagger",
            "hanlp.components.taggers.tagger",
            "hanlp.components.taggers.transformers",
            "hanlp.components.taggers.transformers.metrics",
            "hanlp.components.taggers.transformers.transformer_tagger",
            "hanlp.components.taggers.transformers.transformer_transform",
            "hanlp.components.taggers.transformers.utils",
            "hanlp.components.tok",
            "hanlp.datasets",
            "hanlp.datasets.classification",
            "hanlp.datasets.classification.sentiment",
            "hanlp.datasets.cws",
            "hanlp.datasets.cws.ctb",
            "hanlp.datasets.cws.sighan2005",
            "hanlp.datasets.cws.sighan2005.msr",
            "hanlp.datasets.cws.sighan2005.pku",
            "hanlp.datasets.glue",
            "hanlp.datasets.ner",
            "hanlp.datasets.ner.conll03",
            "hanlp.datasets.ner.msra",
            "hanlp.datasets.parsing",
            "hanlp.datasets.parsing.ctb",
            "hanlp.datasets.parsing.semeval2016",
            "hanlp.datasets.pos",
            "hanlp.datasets.pos.ctb",
            "hanlp.layers",
            "hanlp.layers.crf",
            "hanlp.layers.crf.crf",
            "hanlp.layers.crf.crf_layer",
            "hanlp.layers.embeddings",
            "hanlp.layers.embeddings.char_cnn",
            "hanlp.layers.embeddings.char_rnn",
            "hanlp.layers.embeddings.concat_embedding",
            "hanlp.layers.embeddings.contextual_string_embedding",
            "hanlp.layers.embeddings.fast_text",
            "hanlp.layers.embeddings.word2vec",
            "hanlp.layers.transformers",
            "hanlp.layers.transformers.loader",
            "hanlp.layers.weight_normalization",
            "hanlp.losses",
            "hanlp.losses.sparse_categorical_crossentropy",
            "hanlp.metrics",
            "hanlp.metrics.chunking",
            "hanlp.metrics.chunking.bmes",
            "hanlp.metrics.chunking.conlleval",
            "hanlp.metrics.chunking.f1",
            "hanlp.metrics.chunking.iobes",
            "hanlp.metrics.chunking.sequence_labeling",
            "hanlp.metrics.parsing",
            "hanlp.metrics.parsing.labeled_f1",
            "hanlp.metrics.parsing.labeled_score",
            "hanlp.optimizers",
            "hanlp.optimizers.adamw",
            "hanlp.optimizers.adamw.optimization",
            "hanlp.pretrained",
            "hanlp.pretrained.classifiers",
            "hanlp.pretrained.cws",
            "hanlp.pretrained.dep",
            "hanlp.pretrained.fasttext",
            "hanlp.pretrained.glove",
            "hanlp.pretrained.ner",
            "hanlp.pretrained.pos",
            "hanlp.pretrained.rnnlm",
            "hanlp.pretrained.sdp",
            "hanlp.pretrained.word2vec",
            "hanlp.transform",
            "hanlp.transform.table",
            "hanlp.transform.text",
            "hanlp.transform.tsv",
            "hanlp.transform.txt",
            "hanlp.utils",
            "hanlp.utils.component_util",
            "hanlp.utils.english_tokenizer",
            "hanlp.utils.file_read_backwards",
            "hanlp.utils.file_read_backwards.buffer_work_space",
            "hanlp.utils.file_read_backwards.file_read_backwards",
            "hanlp.utils.io_util",
            "hanlp.utils.lang",
            "hanlp.utils.lang.zh",
            "hanlp.utils.lang.zh.char_table",
            "hanlp.utils.log_util",
            "hanlp.utils.reflection",
            "hanlp.utils.rules",
            "hanlp.utils.string_util",
            "hanlp.utils.tf_util",
            "hanlp.utils.time_util",
            "hanlp.utils.util",
            "hanlp.version"
        ],
        "version": "2.0.0a64"
    },
    "hanlp-wrapper": {
        "cmdline": [],
        "modules": [
            "hanlp",
            "hanlp.parsers",
            "hanlp.utils"
        ],
        "version": "0.1.2"
    },
    "hanlperceptron": {
        "cmdline": [],
        "modules": [
            "hanlperceptron",
            "hanlperceptron.analyzer",
            "hanlperceptron.feature",
            "hanlperceptron.instance",
            "hanlperceptron.model",
            "hanlperceptron.other",
            "hanlperceptron.utils"
        ],
        "version": "0.1.1"
    },
    "hanna": {
        "cmdline": [],
        "modules": [
            "hanna",
            "hanna.addons",
            "hanna.configuration",
            "hanna.parameters",
            "hanna.physics",
            "hanna.physics.units",
            "hanna.tests",
            "hanna.utils"
        ],
        "version": "0.2.3"
    },
    "hannakageul": {
        "cmdline": [],
        "modules": [
            "hannakageul",
            "hannakageul.convert",
            "hannakageul.convert.euccn",
            "hannakageul.convert.eucjp",
            "hannakageul.convert.euckr",
            "hannakageul.convert.jis",
            "hannakageul.convert.sjis",
            "hannakageul.convert.utf8",
            "hannakageul.decoder",
            "hannakageul.encoder"
        ],
        "version": "0.1.2"
    },
    "hannat": {
        "cmdline": [],
        "modules": [
            "hannat",
            "hannat.cgi"
        ],
        "version": "0.1.0"
    },
    "hannibal": {
        "cmdline": [],
        "modules": [
            "hannibal",
            "hannibal.parser",
            "hannibal.parser.parser",
            "hannibal.spider",
            "hannibal.spider.distribute_collector",
            "hannibal.spider.local_collector",
            "hannibal.util",
            "hannibal.util.common_utils",
            "hannibal.util.href_pool",
            "hannibal.util.queues",
            "hannibal.util.tricks"
        ],
        "version": "0.0.9"
    },
    "hanoi": {
        "cmdline": [],
        "modules": [
            "hanoi",
            "hanoi.api",
            "hanoi.backend",
            "tests",
            "tests.api",
            "tests.backend"
        ],
        "version": "0.0.4"
    },
    "hanoolchoi-nester": {
        "cmdline": [],
        "modules": [
            "hanoolchoi_nester"
        ],
        "version": "1.3.0"
    },
    "hanotify": {
        "cmdline": [],
        "modules": [
            "hanotifylib",
            "hanotifylib.report",
            "hanotifylib.watch"
        ],
        "version": "0.1.0"
    },
    "hanplot": {
        "cmdline": [],
        "modules": [
            "hanplot",
            "hanplot.expsinplot",
            "hanplot.generalplot",
            "hanplot.mainplot"
        ],
        "version": "0.1.5"
    },
    "hanqian-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hanqian123123": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hanqingcode": {
        "cmdline": [],
        "modules": [
            "hanqingcode"
        ],
        "version": "1.1.10"
    },
    "hansel": {
        "cmdline": [],
        "modules": [
            "hansel",
            "hansel._utils",
            "hansel.cli",
            "hansel.cli.cli",
            "hansel.cli.utils",
            "hansel.crumb",
            "hansel.mktree",
            "hansel.operations",
            "hansel.pandas",
            "hansel.tests",
            "hansel.tests.conftest",
            "hansel.tests.test__utils",
            "hansel.tests.test_crumb",
            "hansel.tests.test_mktree",
            "hansel.tests.test_operations",
            "hansel.tests.test_pandas",
            "hansel.tests.test_utils",
            "hansel.tests.test_version",
            "hansel.utils",
            "hansel.version"
        ],
        "version": "2.0.1"
    },
    "hanselx": {
        "cmdline": [],
        "modules": [
            "hansel",
            "hansel.hansel"
        ],
        "version": "0.0.92"
    },
    "hanser-module-upload": {
        "cmdline": [],
        "modules": [
            "hanser",
            "hanser.calc"
        ],
        "version": "0.0.1"
    },
    "hanshu": {
        "cmdline": [],
        "modules": [
            "hanshu"
        ],
        "version": "1.2.0"
    },
    "hanshu1": {
        "cmdline": [],
        "modules": [
            "hanshu1"
        ],
        "version": "1.2.0"
    },
    "hansol": {
        "cmdline": [],
        "modules": [
            "solweek",
            "solweek.yearweekFunc"
        ],
        "version": "0.0.1"
    },
    "hanspitools": {
        "cmdline": [],
        "modules": [
            "hanspitools",
            "hanspitools.freq",
            "hanspitools.mani"
        ],
        "version": "0.0.10"
    },
    "hanta": {
        "cmdline": [],
        "modules": [
            "HanTa",
            "HanTa.HanoverTagger"
        ],
        "version": "0.1.1"
    },
    "hanthon": {
        "cmdline": [],
        "modules": [
            "hanthon"
        ],
        "version": "0.0.3"
    },
    "hany": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hanyang-registration": {
        "cmdline": [],
        "modules": [
            "hanyang_registration",
            "hanyang_registration.sugang"
        ],
        "version": "1.1.6"
    },
    "hanythingondemand": {
        "cmdline": [
            "hod"
        ],
        "modules": [
            "hod",
            "hod.cluster",
            "hod.commands",
            "hod.commands.command",
            "hod.config",
            "hod.config.autogen",
            "hod.config.autogen.common",
            "hod.config.autogen.hadoop",
            "hod.config.autogen.hadoop_on_lustre2",
            "hod.config.autogen.hbase",
            "hod.config.autogen.ipython_notebook",
            "hod.config.config",
            "hod.config.template",
            "hod.config.writer",
            "hod.config.writer._hadoop",
            "hod.config.writer.common",
            "hod.hodproc",
            "hod.local",
            "hod.main",
            "hod.mpiservice",
            "hod.node",
            "hod.node.node",
            "hod.options",
            "hod.rmscheduler",
            "hod.rmscheduler.hodjob",
            "hod.rmscheduler.job",
            "hod.rmscheduler.resourcemanagerscheduler",
            "hod.rmscheduler.rm_pbs",
            "hod.subcommands",
            "hod.subcommands.batch",
            "hod.subcommands.clean",
            "hod.subcommands.clone",
            "hod.subcommands.connect",
            "hod.subcommands.create",
            "hod.subcommands.destroy",
            "hod.subcommands.dists",
            "hod.subcommands.genconfig",
            "hod.subcommands.helptemplate",
            "hod.subcommands.listcmd",
            "hod.subcommands.relabel",
            "hod.subcommands.subcommand",
            "hod.table",
            "hod.utils",
            "hod.work",
            "hod.work.config_service",
            "hod.work.work"
        ],
        "version": "3.2.3"
    },
    "hanyutools": {
        "cmdline": [],
        "modules": [
            "hytools",
            "hytools.utilitieshy"
        ],
        "version": "0.1.4"
    },
    "hanzi-char-featurizer": {
        "cmdline": [],
        "modules": [
            "hanzi_char_featurizer"
        ],
        "version": "0.1"
    },
    "hanzi2pinyin": {
        "cmdline": [],
        "modules": [
            "hanzi2pinyin",
            "hanzi2pinyin.h2p",
            "hanzi2pinyin.quickh2p"
        ],
        "version": "0.1"
    },
    "hanzi2reading": {
        "cmdline": [
            "hanzi2reading"
        ],
        "modules": [
            "hanzi2reading",
            "hanzi2reading.create_moedict",
            "hanzi2reading.pinyin",
            "hanzi2reading.reading",
            "hanzi2reading.serialize",
            "hanzi2reading.syllable",
            "hanzi2reading.zhuyin",
            "test",
            "test.test_read",
            "test.test_serialize",
            "test.test_syllable"
        ],
        "version": "0.1.1"
    },
    "hanziconv": {
        "cmdline": [
            "hanzi-convert"
        ],
        "modules": [
            "hanziconv",
            "hanziconv.charmap",
            "hanziconv.hanziconv",
            "hanziconv.specialnoun"
        ],
        "version": "0.3.2"
    },
    "hanzidentifier": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "hanzigrid": {
        "cmdline": [],
        "modules": [
            "hanzigrid.hanzigrid"
        ],
        "version": "0.1"
    },
    "hanzilvlib": {
        "cmdline": [],
        "modules": [
            "hanzilvlib",
            "hanzilvlib.level"
        ],
        "version": "0.1.3"
    },
    "hanzo-warc-tools": {
        "cmdline": [],
        "modules": [
            "httptools",
            "httptools.messaging",
            "httptools.proxy",
            "httptools.semantics",
            "warctools",
            "warctools.arc",
            "warctools.archive_detect",
            "warctools.log",
            "warctools.record",
            "warctools.stream",
            "warctools.warc"
        ],
        "version": "0.2"
    },
    "hanzo-warctools": {
        "cmdline": [],
        "modules": [],
        "version": "4.7"
    },
    "hao": {
        "cmdline": [],
        "modules": [
            "hao",
            "hao.config",
            "hao.decorators",
            "hao.envs",
            "hao.files",
            "hao.logs",
            "hao.meters",
            "hao.namespaces",
            "hao.paths",
            "hao.regexes",
            "hao.singleton",
            "hao.slacks",
            "hao.stopwatch",
            "hao.versions"
        ],
        "version": "0.2"
    },
    "haobtc-oauth2": {
        "cmdline": [],
        "modules": [
            "pyoauth2",
            "pyoauth2.client",
            "pyoauth2.libs",
            "pyoauth2.libs.access_token",
            "pyoauth2.libs.auth_code",
            "pyoauth2.libs.base",
            "pyoauth2.libs.connection",
            "pyoauth2.libs.errors",
            "pyoauth2.libs.request",
            "pyoauth2.libs.response",
            "pyoauth2.libs.utils"
        ],
        "version": "0.0.6"
    },
    "haoc-distributions": {
        "cmdline": [],
        "modules": [
            "haoc_distributions",
            "haoc_distributions.Binomialdistribution",
            "haoc_distributions.Gaussiandistribution",
            "haoc_distributions.Generaldistribution"
        ],
        "version": "1.0"
    },
    "haochuan": {
        "cmdline": [],
        "modules": [
            "aist",
            "aist.aist",
            "aist.download",
            "aist.msg",
            "aist.pic",
            "haochuan",
            "haochuan.jiang"
        ],
        "version": "8.8.8"
    },
    "haoda": {
        "cmdline": [],
        "modules": [
            "haoda",
            "haoda.backend",
            "haoda.backend.common",
            "haoda.backend.xilinx",
            "haoda.ir",
            "haoda.ir.arithmetic",
            "haoda.ir.arithmetic.base",
            "haoda.ir.core",
            "haoda.ir.type",
            "haoda.ir.visitor",
            "haoda.report",
            "haoda.report.xilinx",
            "haoda.report.xilinx.hls",
            "haoda.report.xilinx.rtl",
            "haoda.util"
        ],
        "version": "0.0.20200829.dev1"
    },
    "haodouutils": {
        "cmdline": [],
        "modules": [
            "HaodouUtils",
            "HaodouUtils.hdutils",
            "HaodouUtils.sendmail"
        ],
        "version": "0.1.3"
    },
    "haohaninfo": {
        "cmdline": [],
        "modules": [
            "haohaninfo",
            "haohaninfo.GOrder",
            "haohaninfo.MarketInfo",
            "haohaninfo.MicroPlay",
            "haohaninfo.MicroTest"
        ],
        "version": "0.2.7"
    },
    "haohaninfo-scholar": {
        "cmdline": [],
        "modules": [
            "haohaninfo_scholar",
            "haohaninfo_scholar.new_receiver"
        ],
        "version": "0.0.1"
    },
    "haoqiren": {
        "cmdline": [],
        "modules": [
            "haoqiren_py",
            "haoqiren_py.base",
            "haoqiren_py.base.datetime",
            "haoqiren_py.base.path",
            "haoqiren_py.base.platform",
            "haoqiren_py.io",
            "haoqiren_py.io.directory",
            "haoqiren_py.io.file",
            "haoqiren_py.io.path",
            "haoqiren_py.math",
            "haoqiren_py.math.prime",
            "haoqiren_py.net",
            "haoqiren_py.office",
            "haoqiren_py.office.excel",
            "haoqiren_py.office.excel.openpyxl",
            "haoqiren_py.office.excel.openpyxl.excel",
            "haoqiren_py.office.excel.xlrw",
            "haoqiren_py.office.excel.xlsxwriter",
            "haoqiren_py.office.excel.xlutils",
            "haoqiren_py.office.word",
            "haoqiren_py.office.word.pydocx",
            "haoqiren_py.office.word.pydocx.document",
            "haoqiren_py.ui",
            "haoqiren_py.ui.tkinter",
            "haoqiren_py.ui.tkinter.form",
            "haoqiren_py.ui.tkinter.tkinterhelper"
        ],
        "version": "0.0.1"
    },
    "haoqiren-py": {
        "cmdline": [],
        "modules": [
            "haoqiren_py"
        ],
        "version": "0.0.1"
    },
    "haoqiren-py-ext": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.8"
    },
    "haoqiren-py-win32": {
        "cmdline": [],
        "modules": [
            "haoqiren_py",
            "haoqiren_py_win32"
        ],
        "version": "0.0.1"
    },
    "haoqiren-py-win32-ext": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.8"
    },
    "haoutils": {
        "cmdline": [],
        "modules": [
            "haoutils",
            "haoutils.excel",
            "haoutils.excel.excel",
            "haoutils.haotime",
            "haoutils.haotime.haotime",
            "haoutils.ssh",
            "haoutils.ssh.ssh"
        ],
        "version": "0.3"
    },
    "haowu-distributions": {
        "cmdline": [],
        "modules": [
            "distributions",
            "distributions.Binomialdistribution",
            "distributions.Gaussiandistribution",
            "distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "haowu-probability": {
        "cmdline": [],
        "modules": [
            "haowu_probability",
            "haowu_probability.Binomialdistribution",
            "haowu_probability.Gaussiandistribution",
            "haowu_probability.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hap": {
        "cmdline": [],
        "modules": [
            "hap",
            "hap.bootstrap",
            "hap.cache",
            "hap.field",
            "hap.log",
            "hap.parser",
            "hap.reader",
            "hap.shell",
            "hap.util",
            "hap.writer"
        ],
        "version": "1.3.2"
    },
    "hap-py": {
        "cmdline": [],
        "modules": [
            "happy",
            "happy.accessories",
            "happy.accessories.accessory",
            "happy.advertiser",
            "happy.constants",
            "happy.constants.accessories",
            "happy.constants.protocol",
            "happy.server",
            "happy.server.hap",
            "happy.server.orig_srp",
            "happy.server.srp",
            "happy.server.tlv",
            "happy.tlv"
        ],
        "version": "0.0.1"
    },
    "hap-python": {
        "cmdline": [],
        "modules": [
            "pyhap",
            "pyhap.accessory",
            "pyhap.accessory_driver",
            "pyhap.camera",
            "pyhap.characteristic",
            "pyhap.const",
            "pyhap.encoder",
            "pyhap.hap_server",
            "pyhap.hsrp",
            "pyhap.iid_manager",
            "pyhap.loader",
            "pyhap.params",
            "pyhap.server_utils",
            "pyhap.service",
            "pyhap.state",
            "pyhap.tlv",
            "pyhap.util"
        ],
        "version": "3.0.0"
    },
    "hapapi": {
        "cmdline": [],
        "modules": [
            "hapapi",
            "hapapi.api",
            "hapapi.api.auth",
            "hapapi.api.backend",
            "hapapi.api.mixins",
            "hapapi.api.proxy",
            "hapapi.api.root",
            "hapapi.haproxy"
        ],
        "version": "0.1.2"
    },
    "hapctl": {
        "cmdline": [],
        "modules": [
            "hapctl",
            "hapctl.cmd",
            "hapctl.cmd.cli",
            "hapctl.haproxy"
        ],
        "version": "1.0.0"
    },
    "hapdab": {
        "cmdline": [],
        "modules": [
            "hapdab",
            "hapdab.Allele",
            "hapdab.Exceptions",
            "hapdab.HapDab",
            "hapdab.RawFile",
            "hapdab.Variant",
            "hapdab.cli",
            "hapdab.cli.hapdab"
        ],
        "version": "0.0.2"
    },
    "hapdcensae": {
        "cmdline": [],
        "modules": [
            "hapdcensae",
            "hapdcensae.fonction_graphe_network",
            "hapdcensae.main"
        ],
        "version": "1.0"
    },
    "hapflk": {
        "cmdline": [
            "hapflk"
        ],
        "modules": [
            "fastphase",
            "hapflk",
            "hapflk.InputOutput",
            "hapflk.data",
            "hapflk.nj",
            "hapflk.popgen"
        ],
        "version": "1.4"
    },
    "hapi": {
        "cmdline": [],
        "modules": [
            "pyramid_oauthprovider"
        ],
        "version": "0.0"
    },
    "hapi-client": {
        "cmdline": [],
        "modules": [
            "hyperdns.hapi.client",
            "hyperdns.hapi.client.account",
            "hyperdns.hapi.client.cli",
            "hyperdns.hapi.client.cli.hal",
            "hyperdns.hapi.client.cli.ping",
            "hyperdns.hapi.client.cli.records",
            "hyperdns.hapi.client.cli.resources",
            "hyperdns.hapi.client.cli.shell",
            "hyperdns.hapi.client.cli.task",
            "hyperdns.hapi.client.cli.vendors",
            "hyperdns.hapi.client.cli.zones",
            "hyperdns.hapi.client.pools",
            "hyperdns.hapi.client.resource",
            "hyperdns.hapi.client.vendor",
            "hyperdns.hapi.client.zone",
            "hyperdns.hapi.sysmgr",
            "hyperdns.hapi.sysmgr.cli",
            "hyperdns.hapi.sysmgr.cli.cli_config",
            "hyperdns.hapi.sysmgr.cli.cli_hal",
            "hyperdns.hapi.sysmgr.cli.cli_help",
            "hyperdns.hapi.sysmgr.cli.cli_login",
            "hyperdns.hapi.sysmgr.cli.cli_ping",
            "hyperdns.hapi.sysmgr.cli.cli_shell"
        ],
        "version": "0.9.1"
    },
    "hapi-nile": {
        "cmdline": [],
        "modules": [
            "Hapi",
            "Hapi.calibration",
            "Hapi.crosssection",
            "Hapi.distparameters",
            "Hapi.distrrm",
            "Hapi.event",
            "Hapi.giscatchment",
            "Hapi.hbv",
            "Hapi.hbv_bergestrom92",
            "Hapi.hbv_bergestrom92_lumped",
            "Hapi.hbv_lake",
            "Hapi.hbvlumped",
            "Hapi.hbvold",
            "Hapi.inputs",
            "Hapi.java_functions",
            "Hapi.performancecriteria",
            "Hapi.raster",
            "Hapi.rimcalibration",
            "Hapi.riminputs",
            "Hapi.river",
            "Hapi.routing",
            "Hapi.run",
            "Hapi.sensitivityanalysis",
            "Hapi.statisticaltools",
            "Hapi.vector",
            "Hapi.visualizer",
            "Hapi.weirdFn",
            "Hapi.wrapper"
        ],
        "version": "0.3.0"
    },
    "hapi-vendor-afilias": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-akamai": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-buddyns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-cedexis": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-cloudflare": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-cloudfloor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-cloudns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-conexim": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-dnsbycomodo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-dnsimple": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-durabledns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-dyn": {
        "cmdline": [],
        "modules": [
            "hyperdns.vendor.drivers.dyn"
        ],
        "version": "0.0.1"
    },
    "hapi-vendor-easydns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-edgecast": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-edgedirector": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-google": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-irondns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-level3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-limelight": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-loaddns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-name": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-netriplex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-noip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-nsone": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-r53": {
        "cmdline": [],
        "modules": [
            "hyperdns.vendor.drivers.r53"
        ],
        "version": "0.9.0"
    },
    "hapi-vendor-rackspace": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-savvisdirect": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-softlayer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-systemns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-toolkit": {
        "cmdline": [],
        "modules": [
            "hyperdns.vendor.cli",
            "hyperdns.vendor.cli.config",
            "hyperdns.vendor.cli.main",
            "hyperdns.vendor.cli.new_vendor",
            "hyperdns.vendor.cli.shell",
            "hyperdns.vendor.cli.vc_angular",
            "hyperdns.vendor.cli.vc_create",
            "hyperdns.vendor.cli.vc_delete",
            "hyperdns.vendor.cli.vc_test",
            "hyperdns.vendor.cli.vendors",
            "hyperdns.vendor.core",
            "hyperdns.vendor.core.abstract",
            "hyperdns.vendor.core.base",
            "hyperdns.vendor.core.exceptions",
            "hyperdns.vendor.core.http",
            "hyperdns.vendor.core.interface",
            "hyperdns.vendor.core.registry",
            "hyperdns.vendor.drivers.mock",
            "hyperdns.vendor.drivers.mock1",
            "hyperdns.vendor.drivers.mock2"
        ],
        "version": "0.0.2"
    },
    "hapi-vendor-totaluptime": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-ultra": {
        "cmdline": [],
        "modules": [
            "hyperdns.vendor.drivers.ultra"
        ],
        "version": "0.9.0"
    },
    "hapi-vendor-verisign": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-zerigo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapic": {
        "cmdline": [],
        "modules": [
            "hapic",
            "hapic.async",
            "hapic.buffer",
            "hapic.context",
            "hapic.data",
            "hapic.decorator",
            "hapic.description",
            "hapic.doc",
            "hapic.doc.main",
            "hapic.doc.schema",
            "hapic.error",
            "hapic.error.main",
            "hapic.error.marshmallow",
            "hapic.error.serpyco",
            "hapic.exception",
            "hapic.ext",
            "hapic.ext.agnostic",
            "hapic.ext.agnostic.context",
            "hapic.ext.aiohttp",
            "hapic.ext.aiohttp.context",
            "hapic.ext.bottle",
            "hapic.ext.bottle.context",
            "hapic.ext.flask",
            "hapic.ext.flask.context",
            "hapic.ext.pyramid",
            "hapic.ext.pyramid.context",
            "hapic.hapic",
            "hapic.infos",
            "hapic.processor",
            "hapic.processor.main",
            "hapic.processor.marshmallow",
            "hapic.processor.serpyco",
            "hapic.type",
            "hapic.util"
        ],
        "version": "0.84"
    },
    "hapic-apispec": {
        "cmdline": [],
        "modules": [
            "apispec",
            "apispec.auto_ref_strategy",
            "apispec.compat",
            "apispec.core",
            "apispec.exceptions",
            "apispec.ext",
            "apispec.ext.bottle",
            "apispec.ext.flask",
            "apispec.ext.marshmallow",
            "apispec.ext.marshmallow.swagger",
            "apispec.ext.tornado",
            "apispec.lazy_dict",
            "apispec.utils"
        ],
        "version": "0.37.0"
    },
    "hapicake": {
        "cmdline": [],
        "modules": [
            "cake",
            "cake.env",
            "cake.error",
            "cake.hub",
            "cake.settings",
            "cake.test",
            "cake.test.hub_jukebox",
            "cake.test.test_settings"
        ],
        "version": "0.1.1"
    },
    "hapiclient": {
        "cmdline": [],
        "modules": [
            "hapiclient",
            "hapiclient.autoplot",
            "hapiclient.autoplot.autoplot",
            "hapiclient.autoplot.autoplot_test",
            "hapiclient.gallery",
            "hapiclient.gallery.gallery",
            "hapiclient.gallery.gallery_test",
            "hapiclient.hapi",
            "hapiclient.hapiplot",
            "hapiclient.hapiplot_test",
            "hapiclient.plot",
            "hapiclient.plot.datetick",
            "hapiclient.plot.datetick_explorer",
            "hapiclient.plot.datetick_test",
            "hapiclient.plot.heatmap",
            "hapiclient.plot.heatmap_test",
            "hapiclient.plot.timeseries",
            "hapiclient.plot.timeseries_test",
            "hapiclient.plot.util",
            "hapiclient.test",
            "hapiclient.test.readcompare",
            "hapiclient.test.test_hapi",
            "hapiclient.test.test_hapitime2datetime",
            "hapiclient.util"
        ],
        "version": "0.1.4"
    },
    "hapipdf": {
        "cmdline": [],
        "modules": [
            "hapipdf",
            "hapipdf.pdf2text",
            "hapipdf.pdftoimage"
        ],
        "version": "1.0"
    },
    "hapiplotserver": {
        "cmdline": [
            "hapiplotserver"
        ],
        "modules": [
            "hapiplotserver",
            "hapiplotserver.app",
            "hapiplotserver.config",
            "hapiplotserver.main",
            "hapiplotserver.plot",
            "hapiplotserver.test",
            "hapiplotserver.test.test_hapiplotserver",
            "hapiplotserver.viviz"
        ],
        "version": "0.0.4"
    },
    "hapipy": {
        "cmdline": [],
        "modules": [
            "hapi",
            "hapi.base",
            "hapi.blog",
            "hapi.broadcast",
            "hapi.error",
            "hapi.forms",
            "hapi.keywords",
            "hapi.leads",
            "hapi.logging_helper",
            "hapi.mixins",
            "hapi.mixins.threading",
            "hapi.nurturing",
            "hapi.prospects",
            "hapi.settings",
            "hapi.utils"
        ],
        "version": "2.10.0"
    },
    "hapis": {
        "cmdline": [],
        "modules": [
            "hapis",
            "hapis.settings",
            "hapis.tests"
        ],
        "version": "0.1a2"
    },
    "haplotype-plot": {
        "cmdline": [],
        "modules": [
            "haplotype_plot",
            "haplotype_plot.constants",
            "haplotype_plot.filter",
            "haplotype_plot.genotyper",
            "haplotype_plot.haplotyper",
            "haplotype_plot.main",
            "haplotype_plot.plot",
            "haplotype_plot.reader",
            "haplotype_plot.tests",
            "haplotype_plot.tests.test_conversion",
            "haplotype_plot.tests.test_genotype_selection",
            "haplotype_plot.tests.test_plot",
            "haplotype_plot.writer"
        ],
        "version": "1.1.1"
    },
    "hapool": {
        "cmdline": [],
        "modules": [
            "hapool",
            "hapool.__version__",
            "hapool.decorators",
            "hapool.exceptions",
            "hapool.ha_algorithm",
            "hapool.ha_endpoint_pool"
        ],
        "version": "0.0.1"
    },
    "happer": {
        "cmdline": [],
        "modules": [
            "happer",
            "happer._version",
            "happer.allele",
            "happer.mutablestring",
            "happer.mutate",
            "happer.seqio",
            "happer.tests",
            "happer.tests.test_allele",
            "happer.tests.test_mutablestring",
            "happer.tests.test_mutate",
            "happer.tests.test_seqio"
        ],
        "version": "0.1.1"
    },
    "happi": {
        "cmdline": [],
        "modules": [
            "happi",
            "happi._version",
            "happi.backends",
            "happi.backends.core",
            "happi.backends.json_db",
            "happi.backends.mongo_db",
            "happi.backends.qs_db",
            "happi.cli",
            "happi.client",
            "happi.containers",
            "happi.device",
            "happi.errors",
            "happi.item",
            "happi.loader",
            "happi.qt",
            "happi.qt.model",
            "happi.tests",
            "happi.tests.conftest",
            "happi.tests.test_backends",
            "happi.tests.test_cli",
            "happi.tests.test_client",
            "happi.tests.test_device",
            "happi.tests.test_loader",
            "happi.utils"
        ],
        "version": "1.7.1"
    },
    "happie": {
        "cmdline": [],
        "modules": [
            "happie",
            "happie._version",
            "happie.happie",
            "happie.install",
            "happie.parsers",
            "happie.plot_gbk",
            "happie.runners",
            "happie.shared_methods",
            "happie.test_happie"
        ],
        "version": "0.3.1"
    },
    "happier": {
        "cmdline": [],
        "modules": [
            "happier",
            "happier.black_fmt",
            "happier.main",
            "happier.perform_autoflake",
            "happier.sort_imports",
            "happier.sources",
            "happier.util"
        ],
        "version": "0.1.0"
    },
    "happierfuntokenizing": {
        "cmdline": [],
        "modules": [
            "happierfuntokenizing",
            "happierfuntokenizing.happierfuntokenizing"
        ],
        "version": "1.5.7"
    },
    "happiest": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "happiestfuntokenizing": {
        "cmdline": [],
        "modules": [
            "happiestfuntokenizing",
            "happiestfuntokenizing.happiestfuntokenizing"
        ],
        "version": "0.0.7"
    },
    "happinesslintbear": {
        "cmdline": [],
        "modules": [
            "coalaHappinessLintBear",
            "coalaHappinessLintBear.HappinessLintBear"
        ],
        "version": "0.10.0"
    },
    "happinesspacket-messages": {
        "cmdline": [],
        "modules": [
            "happinesspacket_schema",
            "happinesspacket_schema.schema"
        ],
        "version": "0.1.1"
    },
    "happinesspacket-schema": {
        "cmdline": [],
        "modules": [
            "happinesspacket_schema",
            "happinesspacket_schema.schema",
            "happinesspacket_schema.tests",
            "happinesspacket_schema.tests.test_schema"
        ],
        "version": "1.0.0"
    },
    "happy": {
        "cmdline": [],
        "modules": [
            "happy",
            "happy.cli",
            "happy.heroku"
        ],
        "version": "1.2.1"
    },
    "happy-blog": {
        "cmdline": [],
        "modules": [
            "happy_blog",
            "happy_blog.admin",
            "happy_blog.cms_app",
            "happy_blog.cms_plugins",
            "happy_blog.migrations",
            "happy_blog.migrations.0001_initial",
            "happy_blog.models",
            "happy_blog.urls",
            "happy_blog.views"
        ],
        "version": "0.2.2"
    },
    "happy-bupday": {
        "cmdline": [],
        "modules": [
            "happy_bupday"
        ],
        "version": "0.0.3"
    },
    "happy-couple": {
        "cmdline": [],
        "modules": [
            "happy_couple",
            "happy_couple.happy_couple"
        ],
        "version": "0.1.1"
    },
    "happy-pandas": {
        "cmdline": [],
        "modules": [
            "happy_pandas"
        ],
        "version": "0.3"
    },
    "happy-python": {
        "cmdline": [],
        "modules": [
            "happy_python",
            "happy_python.cmd",
            "happy_python.datetime",
            "happy_python.digest",
            "happy_python.domain",
            "happy_python.happy_config",
            "happy_python.happy_exception",
            "happy_python.happy_log",
            "happy_python.json",
            "happy_python.mail",
            "happy_python.misc",
            "happy_python.parameter_manager",
            "happy_python.str_util",
            "happy_python.version"
        ],
        "version": "0.2.0"
    },
    "happy-repo": {
        "cmdline": [],
        "modules": [
            "happy_repo",
            "happy_repo.cli",
            "happy_repo.happy_repo"
        ],
        "version": "0.1.4"
    },
    "happy-scientists": {
        "cmdline": [],
        "modules": [
            "happyscientists",
            "happyscientists.scientistsgenerator",
            "happyscientists.scientistsgenerator_test"
        ],
        "version": "0.1.0"
    },
    "happy-tree-gallery": {
        "cmdline": [],
        "modules": [
            "rmnl",
            "rmnl.htg",
            "rmnl.htg.classes",
            "rmnl.htg.classes.clean",
            "rmnl.htg.classes.config",
            "rmnl.htg.classes.index",
            "rmnl.htg.classes.json",
            "rmnl.htg.classes.resize",
            "rmnl.htg.classes.resize_simple",
            "rmnl.htg.classes.serve",
            "rmnl.htg.commands",
            "rmnl.htg.commands.album",
            "rmnl.htg.commands.config",
            "rmnl.htg.commands.groom",
            "rmnl.htg.commands.index",
            "rmnl.htg.commands.json",
            "rmnl.htg.commands.resize",
            "rmnl.htg.commands.util",
            "rmnl.htg.defaults",
            "rmnl.htg.htg",
            "rmnl.htg.imaging",
            "rmnl.htg.imaging.average",
            "rmnl.htg.imaging.resize_im",
            "rmnl.htg.imaging.resize_pil",
            "rmnl.htg.imaging.resize_sips",
            "rmnl.htg.meta_example",
            "rmnl.htg.migrate",
            "rmnl.htg.migrate.in2ex",
            "rmnl.htg.models",
            "rmnl.htg.utils",
            "rmnl.htg.utils.aliased_group",
            "rmnl.htg.utils.groom",
            "rmnl.htg.utils.validate"
        ],
        "version": "0.8.0"
    },
    "happybase": {
        "cmdline": [],
        "modules": [
            "happybase",
            "happybase._version",
            "happybase.batch",
            "happybase.connection",
            "happybase.pool",
            "happybase.table",
            "happybase.util"
        ],
        "version": "1.2.0"
    },
    "happybase-mock": {
        "cmdline": [],
        "modules": [
            "happybase_mock",
            "happybase_mock.batch",
            "happybase_mock.connection",
            "happybase_mock.pool",
            "happybase_mock.table"
        ],
        "version": "0.10.0"
    },
    "happybase-monkey": {
        "cmdline": [],
        "modules": [
            "happybase_monkey",
            "happybase_monkey.monkey"
        ],
        "version": "1.0.1"
    },
    "happybase-sasl": {
        "cmdline": [],
        "modules": [
            "happybase",
            "happybase._version",
            "happybase.batch",
            "happybase.connection",
            "happybase.hbase",
            "happybase.hbase.Hbase",
            "happybase.hbase.constants",
            "happybase.hbase.ttypes",
            "happybase.pool",
            "happybase.table",
            "happybase.util"
        ],
        "version": "1.0"
    },
    "happybase-sql": {
        "cmdline": [],
        "modules": [
            "happybase_sql",
            "happybase_sql.connection",
            "happybase_sql.table"
        ],
        "version": "0.1.0"
    },
    "happyboss": {
        "cmdline": [],
        "modules": [
            "happyboss",
            "happyboss.main",
            "happyboss.move",
            "happyboss.user_input"
        ],
        "version": "0.1.0"
    },
    "happybuf": {
        "cmdline": [],
        "modules": [
            "happybuf",
            "happybuf.capnproto",
            "happybuf.flatbuffers",
            "happybuf.protobuf"
        ],
        "version": "0.1.0"
    },
    "happycowler": {
        "cmdline": [
            "happycowl"
        ],
        "modules": [
            "happycowler",
            "happycowler.file_io",
            "happycowler.happycowler"
        ],
        "version": "0.2.4"
    },
    "happydef": {
        "cmdline": [],
        "modules": [
            "happydef",
            "happydef.happydef"
        ],
        "version": "0.1"
    },
    "happydevelopperfr-flyplanner": {
        "cmdline": [],
        "modules": [
            "flyplanner.fly",
            "flyplanner.fly_plan",
            "flyplanner.geom"
        ],
        "version": "0.0.8"
    },
    "happydoc": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "happyforms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "happyharbor": {
        "cmdline": [],
        "modules": [
            "sample",
            "sample.core",
            "sample.helpers",
            "tests",
            "tests.context",
            "tests.test_advanced",
            "tests.test_basic"
        ],
        "version": "0.0.1"
    },
    "happyjwt": {
        "cmdline": [],
        "modules": [
            "happyjwt",
            "happyjwt.happy"
        ],
        "version": "0.2.0"
    },
    "happylogging": {
        "cmdline": [],
        "modules": [
            "happylogging",
            "happylogging.utils"
        ],
        "version": "0.0.6"
    },
    "happyly": {
        "cmdline": [],
        "modules": [
            "happyly",
            "happyly._deprecations",
            "happyly._deprecations.utils",
            "happyly.caching",
            "happyly.caching.cacher",
            "happyly.caching.mixins",
            "happyly.exceptions",
            "happyly.google_pubsub",
            "happyly.google_pubsub.deserializers",
            "happyly.google_pubsub.high_level",
            "happyly.google_pubsub.high_level.base",
            "happyly.google_pubsub.high_level.early_ack",
            "happyly.google_pubsub.high_level.late_ack",
            "happyly.google_pubsub.high_level.simple",
            "happyly.google_pubsub.high_level.with_cache",
            "happyly.google_pubsub.publishers",
            "happyly.google_pubsub.redis_cacher",
            "happyly.google_pubsub.subscribers",
            "happyly.handling",
            "happyly.handling.dummy_handler",
            "happyly.handling.handler",
            "happyly.listening",
            "happyly.listening.executor",
            "happyly.listening.listener",
            "happyly.logs",
            "happyly.logs.base",
            "happyly.logs.request_id",
            "happyly.pubsub",
            "happyly.pubsub.publisher",
            "happyly.pubsub.subscriber",
            "happyly.schemas",
            "happyly.schemas.schema",
            "happyly.serialization",
            "happyly.serialization.deserializer",
            "happyly.serialization.dummy",
            "happyly.serialization.flask",
            "happyly.serialization.json",
            "happyly.serialization.serializer"
        ],
        "version": "0.9.0"
    },
    "happyml": {
        "cmdline": [],
        "modules": [
            "happyml",
            "happyml.datasets",
            "happyml.models",
            "happyml.plot",
            "happyml.utils"
        ],
        "version": "0.0.5"
    },
    "happymongo": {
        "cmdline": [],
        "modules": [
            "happymongo"
        ],
        "version": "0.1.1"
    },
    "happynumber": {
        "cmdline": [],
        "modules": [
            "happynumber"
        ],
        "version": "0.1"
    },
    "happypanda": {
        "cmdline": [],
        "modules": [
            "happypanda",
            "happypanda.app",
            "happypanda.app_constants",
            "happypanda.asm_manager",
            "happypanda.color_line_edit",
            "happypanda.database",
            "happypanda.database.arguments",
            "happypanda.database.db",
            "happypanda.database.db_constants",
            "happypanda.executors",
            "happypanda.fetch",
            "happypanda.gallery",
            "happypanda.gallerydb",
            "happypanda.gallerydialog",
            "happypanda.hplugins",
            "happypanda.io_misc",
            "happypanda.misc",
            "happypanda.misc_db",
            "happypanda.pewnet",
            "happypanda.settings",
            "happypanda.settingsdialog",
            "happypanda.utils"
        ],
        "version": "1.1"
    },
    "happypandax-client": {
        "cmdline": [],
        "modules": [
            "happypandax_client",
            "happypandax_client.client",
            "happypandax_client.exceptions",
            "happypandax_client.tests"
        ],
        "version": "1.0.0"
    },
    "happytest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "happython": {
        "cmdline": [],
        "modules": [
            "happython",
            "happython.cli"
        ],
        "version": "0.1.1"
    },
    "happytrans": {
        "cmdline": [],
        "modules": [
            "happytrans.translate_model",
            "happytrans.vanish_model_dir",
            "happytrans.vanish_model_dir.test",
            "happytrans.vanish_model_dir.van_model"
        ],
        "version": "1.4"
    },
    "happytransformer": {
        "cmdline": [],
        "modules": [
            "happytransformer",
            "happytransformer.classifier_args",
            "happytransformer.classifier_utils",
            "happytransformer.happy_bert",
            "happytransformer.happy_roberta",
            "happytransformer.happy_transformer",
            "happytransformer.happy_xlnet",
            "happytransformer.mlm_utils",
            "happytransformer.sequence_classifier"
        ],
        "version": "1.1.2"
    },
    "haprestio": {
        "cmdline": [],
        "modules": [
            "haprestio",
            "haprestio.adm_v1",
            "haprestio.adm_v1.accounts",
            "haprestio.adm_v1.login",
            "haprestio.adm_v1.operations",
            "haprestio.api_v1",
            "haprestio.api_v1.certs",
            "haprestio.api_v1.fqdns",
            "haprestio.api_v1.login",
            "haprestio.api_v1.pub",
            "haprestio.auth",
            "haprestio.auth.jwt",
            "haprestio.config",
            "haprestio.config.config",
            "haprestio.data",
            "haprestio.data.accounts",
            "haprestio.data.certs",
            "haprestio.data.data",
            "haprestio.data.endpoints",
            "haprestio.data.fqdns",
            "haprestio.helpers",
            "haprestio.helpers.helpers",
            "haprestio.main",
            "haprestio.operations",
            "haprestio.operations.install",
            "haprestio.operations.operations"
        ],
        "version": "1.0.7"
    },
    "haproh": {
        "cmdline": [],
        "modules": [
            "hapsburg",
            "hapsburg.PackagesSupport",
            "hapsburg.PackagesSupport.fit_ne",
            "hapsburg.PackagesSupport.h5_python",
            "hapsburg.PackagesSupport.h5_python.h5_functions",
            "hapsburg.PackagesSupport.hapsburg_run",
            "hapsburg.PackagesSupport.loadEigenstrat",
            "hapsburg.PackagesSupport.loadEigenstrat.loadEigenstrat",
            "hapsburg.PackagesSupport.loadEigenstrat.saveHDF5",
            "hapsburg.PackagesSupport.parallel_runs",
            "hapsburg.PackagesSupport.parallel_runs.helper_functions",
            "hapsburg.PackagesSupport.pp_individual_roh_csvs",
            "hapsburg.PackagesSupport.roh_expectations",
            "hapsburg.PackagesSupport.simData",
            "hapsburg.PackagesSupport.sqrt_scale",
            "hapsburg.emissions",
            "hapsburg.figures",
            "hapsburg.figures.plot_bars",
            "hapsburg.figures.plot_individual_roh",
            "hapsburg.figures.plot_posterior",
            "hapsburg.figures.plot_timelines",
            "hapsburg.func",
            "hapsburg.hmm_inference",
            "hapsburg.postprocessing",
            "hapsburg.preprocessing",
            "hapsburg.transitions"
        ],
        "version": "0.1a9"
    },
    "haproxy-health-check": {
        "cmdline": [],
        "modules": [
            "haproxy_health_check",
            "haproxy_health_check.haproxy_health_check"
        ],
        "version": "0.0.1"
    },
    "haproxy-herald": {
        "cmdline": [],
        "modules": [
            "herald",
            "herald.baseplugin",
            "herald.herald",
            "herald.plugins",
            "herald.plugins.fileplugin",
            "herald.plugins.httpplugin",
            "herald.rules"
        ],
        "version": "0.1.0"
    },
    "haproxy-log-analysis": {
        "cmdline": [],
        "modules": [
            "haproxy",
            "haproxy.commands",
            "haproxy.filters",
            "haproxy.line",
            "haproxy.logfile",
            "haproxy.main",
            "haproxy.tests",
            "haproxy.tests.conftest",
            "haproxy.tests.test_argparse",
            "haproxy.tests.test_commands",
            "haproxy.tests.test_filters",
            "haproxy.tests.test_log_file",
            "haproxy.tests.test_log_line",
            "haproxy.tests.test_main",
            "haproxy.tests.test_regex",
            "haproxy.tests.test_utils",
            "haproxy.utils"
        ],
        "version": "4.1.0"
    },
    "haproxy-pygments-lexer": {
        "cmdline": [],
        "modules": [
            "haproxylexer",
            "haproxylexer._haproxy_builtins",
            "haproxylexer.lexer"
        ],
        "version": "1.0.0"
    },
    "haproxy-stats": {
        "cmdline": [],
        "modules": [
            "haproxystats",
            "haproxystats.version"
        ],
        "version": "1.5"
    },
    "haproxy-top": {
        "cmdline": [],
        "modules": [
            "haproxytop",
            "haproxytop.menu",
            "haproxytop.util",
            "haproxytop.version"
        ],
        "version": "0.2"
    },
    "haproxyadmin": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "haproxyctl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haproxystats": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.1"
    },
    "haproxysubdomains": {
        "cmdline": [],
        "modules": [
            "haproxysubdomains"
        ],
        "version": "0.1.0"
    },
    "haproxytool": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.5"
    },
    "haps": {
        "cmdline": [],
        "modules": [
            "haps",
            "haps.application",
            "haps.config",
            "haps.container",
            "haps.exceptions",
            "haps.scopes",
            "haps.scopes.instance",
            "haps.scopes.singleton",
            "haps.scopes.thread",
            "samples",
            "samples.app_ep",
            "samples.autodiscover",
            "samples.autodiscover.sample",
            "samples.autodiscover.services",
            "samples.autodiscover.services.bases",
            "samples.autodiscover.services.deep",
            "samples.autodiscover.services.deep.implementation",
            "samples.autodiscover.services.deep.implementation.extra_pump",
            "samples.autodiscover.services.implementations",
            "samples.instance_properties",
            "samples.simple",
            "samples.thread_scope"
        ],
        "version": "1.1.2"
    },
    "hapy": {
        "cmdline": [],
        "modules": [
            "hapy"
        ],
        "version": "0"
    },
    "hapy-ffi": {
        "cmdline": [],
        "modules": [
            "HaPy"
        ],
        "version": "0.1.3"
    },
    "hapy-heritrix": {
        "cmdline": [],
        "modules": [
            "hapy",
            "hapy.hapy"
        ],
        "version": "0.1.1"
    },
    "hapydeis": {
        "cmdline": [],
        "modules": [
            "hapydeis",
            "hapydeis.hapydeis"
        ],
        "version": "0.0.2.dev4"
    },
    "har": {
        "cmdline": [],
        "modules": [
            "har",
            "har.harparser"
        ],
        "version": "0.1"
    },
    "har-dl": {
        "cmdline": [],
        "modules": [
            "har_dl",
            "har_dl.downloader",
            "har_dl.harfile"
        ],
        "version": "0.1.1"
    },
    "har-extractor": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "har-server": {
        "cmdline": [],
        "modules": [
            "harserver"
        ],
        "version": "0.0.1"
    },
    "har-transformer": {
        "cmdline": [],
        "modules": [
            "transformer",
            "transformer._version",
            "transformer.blacklist",
            "transformer.builders_python",
            "transformer.cli",
            "transformer.locust",
            "transformer.naming",
            "transformer.plugins",
            "transformer.plugins.contracts",
            "transformer.plugins.dummy",
            "transformer.plugins.resolve",
            "transformer.plugins.sanitize_headers",
            "transformer.python",
            "transformer.request",
            "transformer.scenario",
            "transformer.task",
            "transformer.transform"
        ],
        "version": "1.3.0"
    },
    "har-work": {
        "cmdline": [],
        "modules": [
            "hard_work"
        ],
        "version": "1.0.0"
    },
    "har2case": {
        "cmdline": [],
        "modules": [
            "har2case",
            "har2case.cli",
            "har2case.compat",
            "har2case.core",
            "har2case.utils",
            "tests",
            "tests.test_har",
            "tests.test_utils"
        ],
        "version": "0.3.1"
    },
    "har2postman": {
        "cmdline": [],
        "modules": [
            "har2postman",
            "har2postman.cli",
            "har2postman.common",
            "har2postman.har2postman"
        ],
        "version": "0.1.2"
    },
    "har2requests": {
        "cmdline": [],
        "modules": [
            "har2requests",
            "har2requests.stringalg"
        ],
        "version": "0.1.2"
    },
    "har2tavern": {
        "cmdline": [],
        "modules": [
            "har2tavern",
            "har2tavern.main"
        ],
        "version": "0.0.1"
    },
    "har2tree": {
        "cmdline": [],
        "modules": [
            "har2tree",
            "har2tree.parser"
        ],
        "version": "1.2.8"
    },
    "har2warc": {
        "cmdline": [],
        "modules": [
            "har2warc",
            "har2warc.har2warc"
        ],
        "version": "1.0.4"
    },
    "haracat": {
        "cmdline": [],
        "modules": [
            "haracat",
            "haracat.download",
            "haracat.normalizer"
        ],
        "version": "1.0.0"
    },
    "haralyzer": {
        "cmdline": [],
        "modules": [
            "haralyzer",
            "haralyzer.assets",
            "haralyzer.compat",
            "haralyzer.errors",
            "haralyzer.multihar"
        ],
        "version": "1.8.0"
    },
    "haralyzer-api": {
        "cmdline": [],
        "modules": [
            "har_api",
            "har_api.models",
            "har_api.resource_fields",
            "har_api.resources",
            "har_api.resources.pages",
            "har_api.resources.tests",
            "har_api.routes",
            "har_api.settings",
            "har_api.utils"
        ],
        "version": "0.1.2"
    },
    "harambe": {
        "cmdline": [],
        "modules": [
            "harambe",
            "harambe.__about__",
            "harambe.cli",
            "harambe.contrib",
            "harambe.contrib.app_option",
            "harambe.contrib.application_data",
            "harambe.contrib.auth",
            "harambe.contrib.auth.decorators",
            "harambe.contrib.auth.exceptions",
            "harambe.contrib.auth.models",
            "harambe.contrib.auth.oauth",
            "harambe.contrib.auth.signals",
            "harambe.contrib.views",
            "harambe.contrib.views.app_settings",
            "harambe.contrib.views.auth",
            "harambe.contrib.views.contact_page",
            "harambe.contrib.views.error_page",
            "harambe.contrib.views.maintenance_page",
            "harambe.core",
            "harambe.decorators",
            "harambe.exceptions",
            "harambe.ext",
            "harambe.extras",
            "harambe.extras.harambe_db",
            "harambe.extras.htmlcompress",
            "harambe.extras.jade",
            "harambe.extras.jinja_helpers",
            "harambe.extras.md",
            "harambe.utils"
        ],
        "version": "0.10.0"
    },
    "haramnetwork": {
        "cmdline": [],
        "modules": [],
        "version": "2.1"
    },
    "haran-utils": {
        "cmdline": [],
        "modules": [
            "haran_utils",
            "haran_utils.image",
            "haran_utils.image.crop",
            "haran_utils.image.filter_imgs",
            "haran_utils.image.image",
            "haran_utils.image.summarise",
            "haran_utils.main"
        ],
        "version": "0.0.4"
    },
    "haravan": {
        "cmdline": [],
        "modules": [
            "haravan",
            "haravan.base",
            "haravan.mixins",
            "haravan.resources",
            "haravan.resources.address",
            "haravan.resources.application_charge",
            "haravan.resources.article",
            "haravan.resources.asset",
            "haravan.resources.billing_address",
            "haravan.resources.blog",
            "haravan.resources.carrier_service",
            "haravan.resources.cart",
            "haravan.resources.checkout",
            "haravan.resources.collect",
            "haravan.resources.comment",
            "haravan.resources.country",
            "haravan.resources.custom_collection",
            "haravan.resources.customer",
            "haravan.resources.customer_group",
            "haravan.resources.customer_saved_search",
            "haravan.resources.event",
            "haravan.resources.fulfillment",
            "haravan.resources.fulfillment_service",
            "haravan.resources.image",
            "haravan.resources.line_item",
            "haravan.resources.metafield",
            "haravan.resources.note_attribute",
            "haravan.resources.option",
            "haravan.resources.order",
            "haravan.resources.order_risk",
            "haravan.resources.page",
            "haravan.resources.payment_details",
            "haravan.resources.policy",
            "haravan.resources.product",
            "haravan.resources.product_search_engine",
            "haravan.resources.province",
            "haravan.resources.receipt",
            "haravan.resources.recurring_application_charge",
            "haravan.resources.redirect",
            "haravan.resources.rule",
            "haravan.resources.script_tag",
            "haravan.resources.shipping_address",
            "haravan.resources.shipping_line",
            "haravan.resources.shop",
            "haravan.resources.smart_collection",
            "haravan.resources.tax_line",
            "haravan.resources.theme",
            "haravan.resources.transaction",
            "haravan.resources.variant",
            "haravan.resources.webhook",
            "haravan.session",
            "haravan.version",
            "haravan.yamlobjects"
        ],
        "version": "2.1.1"
    },
    "haravanapi": {
        "cmdline": [
            "haravan_api.py"
        ],
        "modules": [
            "haravan",
            "haravan.base",
            "haravan.mixins",
            "haravan.session",
            "haravan.version",
            "haravan.yamlobjects",
            "haravan/resources",
            "haravan/resources.address",
            "haravan/resources.application_charge",
            "haravan/resources.article",
            "haravan/resources.asset",
            "haravan/resources.billing_address",
            "haravan/resources.blog",
            "haravan/resources.carrier_service",
            "haravan/resources.cart",
            "haravan/resources.checkout",
            "haravan/resources.collect",
            "haravan/resources.comment",
            "haravan/resources.country",
            "haravan/resources.custom_collection",
            "haravan/resources.customer",
            "haravan/resources.customer_group",
            "haravan/resources.customer_saved_search",
            "haravan/resources.event",
            "haravan/resources.fulfillment",
            "haravan/resources.fulfillment_service",
            "haravan/resources.image",
            "haravan/resources.line_item",
            "haravan/resources.metafield",
            "haravan/resources.note_attribute",
            "haravan/resources.option",
            "haravan/resources.order",
            "haravan/resources.order_risk",
            "haravan/resources.page",
            "haravan/resources.payment_details",
            "haravan/resources.policy",
            "haravan/resources.product",
            "haravan/resources.product_search_engine",
            "haravan/resources.province",
            "haravan/resources.receipt",
            "haravan/resources.recurring_application_charge",
            "haravan/resources.redirect",
            "haravan/resources.rule",
            "haravan/resources.script_tag",
            "haravan/resources.shipping_address",
            "haravan/resources.shipping_line",
            "haravan/resources.shop",
            "haravan/resources.smart_collection",
            "haravan/resources.tax_line",
            "haravan/resources.theme",
            "haravan/resources.transaction",
            "haravan/resources.variant",
            "haravan/resources.webhook"
        ],
        "version": "2.1.1"
    },
    "harbis": {
        "cmdline": [],
        "modules": [
            "harbis",
            "harbis.__version__",
            "harbis.harbis",
            "harbis.upgrade"
        ],
        "version": "2017.0.1.1507220396"
    },
    "harbor": {
        "cmdline": [],
        "modules": [
            "harbor",
            "harbor.harbor",
            "harbor.tests"
        ],
        "version": "0.1"
    },
    "harbor-cli": {
        "cmdline": [],
        "modules": [
            "lib",
            "lib.anchor",
            "lib.android",
            "lib.cli",
            "lib.commands",
            "lib.commands.deploy",
            "lib.commands.invite",
            "lib.commands.register",
            "lib.config",
            "lib.config.firebase_config",
            "lib.config.firebase_config.template",
            "lib.exceptions",
            "lib.exceptions.DirNotFound",
            "lib.exceptions.FileNotFound",
            "lib.exceptions.InvalidAndroidProject",
            "lib.exceptions.ManifestNotFound",
            "lib.exceptions.PackageJsonNotFound",
            "lib.exceptions.UserNotFound",
            "lib.git",
            "lib.inqurires",
            "lib.logger",
            "lib.plugins",
            "lib.plugins.hipchat",
            "lib.services",
            "lib.services.config",
            "lib.services.firebase_service",
            "lib.shell",
            "lib.utils",
            "lib.utils.branch",
            "lib.utils.colorprinter",
            "lib.utils.decorators",
            "lib.utils.destructure",
            "lib.utils.json_parser",
            "lib.utils.singleton",
            "lib.utils.validators"
        ],
        "version": "1.1.0"
    },
    "harbor-py": {
        "cmdline": [],
        "modules": [
            "harborclient",
            "harborclient.harborclient",
            "harborclient.test_harborclient"
        ],
        "version": "1.2.0"
    },
    "harbor-py-light": {
        "cmdline": [],
        "modules": [
            "harborclient_light",
            "harborclient_light.harborclient",
            "harborclient_light.test_harborclient"
        ],
        "version": "2.1.2"
    },
    "harbormaster": {
        "cmdline": [
            "harbormaster"
        ],
        "modules": [
            "harbormaster.harbormaster"
        ],
        "version": "0.3.2"
    },
    "harbour": {
        "cmdline": [],
        "modules": [
            "harbour",
            "harbour.api",
            "harbour.api.execution",
            "harbour.api.register",
            "harbour.cli",
            "harbour.client",
            "harbour.client.artifact",
            "harbour.client.object",
            "harbour.client.parser",
            "harbour.database",
            "harbour.database.table",
            "harbour.dynamodb",
            "harbour.hooks",
            "harbour.hooks.build",
            "harbour.hooks.push",
            "harbour.logger",
            "harbour.storage",
            "harbour.triggers",
            "harbour.triggers.build"
        ],
        "version": "0.0.12"
    },
    "hard": {
        "cmdline": [],
        "modules": [
            "hard",
            "hard.hard",
            "sample",
            "sample.sample",
            "test",
            "test.hard"
        ],
        "version": "0.0.2"
    },
    "hardback": {
        "cmdline": [],
        "modules": [
            "hardback",
            "hardback.book",
            "hardback.book.chunk_writer",
            "hardback.book.css",
            "hardback.book.cursor",
            "hardback.book.hardback",
            "hardback.book.metadata",
            "hardback.book.page_breaker",
            "hardback.book.sections",
            "hardback.data",
            "hardback.data.book",
            "hardback.data.cover",
            "hardback.data.dataclass",
            "hardback.data.serialize",
            "hardback.main",
            "hardback.qr",
            "hardback.qr.codes",
            "hardback.qr.constants",
            "hardback.qr.fill",
            "hardback.qr.qr",
            "hardback.qr.qr_table",
            "hardback.qr.raw_codes",
            "hardback.qr.write",
            "hardback.util",
            "hardback.util.chunk_sequence",
            "hardback.util.elapsed_bar",
            "hardback.util.files",
            "hardback.util.hasher"
        ],
        "version": "0.9.2"
    },
    "hardcode-haml": {
        "cmdline": [],
        "modules": [
            "hardcode_haml",
            "hardcode_haml.lang",
            "hardcode_haml.lang.c",
            "hardcode_haml.lang.cpp",
            "hardcode_haml.lang.python",
            "hardcode_haml.main",
            "hardcode_haml.parser",
            "hardcode_haml.primitives"
        ],
        "version": "0.2.3"
    },
    "hardcodes": {
        "cmdline": [],
        "modules": [
            "hardcodes",
            "hardcodes.hardcodes"
        ],
        "version": "0.1.0b0"
    },
    "hardcopy": {
        "cmdline": [],
        "modules": [
            "hardcopy",
            "hardcopy.downloader"
        ],
        "version": "0.1.0"
    },
    "harddecisions": {
        "cmdline": [],
        "modules": [
            "hardDecisions",
            "hardDecisions.decisiontree",
            "hardDecisions.demo",
            "hardDecisions.precisiontree",
            "hardDecisions.supertree",
            "hardDecisions.treenode",
            "hardDecisions.treeplan",
            "hardDecisions.x-decisiontree"
        ],
        "version": "0.0.2"
    },
    "harder": {
        "cmdline": [],
        "modules": [
            "harder",
            "harder.gym",
            "harder.policy",
            "harder.q"
        ],
        "version": "0.0.6"
    },
    "hardik-distributions": {
        "cmdline": [],
        "modules": [
            "hardik_distributions",
            "hardik_distributions.Binomialdistribution",
            "hardik_distributions.Gaussiandistribution",
            "hardik_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hardlink": {
        "cmdline": [],
        "modules": [
            "hardlink",
            "hardlink.base"
        ],
        "version": "0.2"
    },
    "hardlinker": {
        "cmdline": [],
        "modules": [
            "hardlinker",
            "hardlinker.gstats",
            "hardlinker.tools"
        ],
        "version": "0.5.3"
    },
    "hardlinkpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hardness": {
        "cmdline": [],
        "modules": [
            "hardness",
            "hardness.database",
            "hardness.models",
            "hardness.postproc"
        ],
        "version": "0.3"
    },
    "hardnote": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "hardpredictions": {
        "cmdline": [],
        "modules": [
            "hardPredictions",
            "hardPredictions.AR",
            "hardPredictions.HoltWinters",
            "hardPredictions.base_model",
            "hardPredictions.extras",
            "hardPredictions.hardPredictions",
            "hardPredictions.transformer"
        ],
        "version": "0.0.0"
    },
    "hardscan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hardshare": {
        "cmdline": [],
        "modules": [
            "hardshare",
            "hardshare._version",
            "hardshare.addons",
            "hardshare.api",
            "hardshare.cli",
            "hardshare.core",
            "hardshare.err",
            "hardshare.mgmt"
        ],
        "version": "0.8.0"
    },
    "hardware": {
        "cmdline": [],
        "modules": [],
        "version": "0.24.0"
    },
    "hardware-communicator": {
        "cmdline": [],
        "modules": [
            "hardware_communicator",
            "hardware_communicator.abstract_communicator",
            "hardware_communicator.controller",
            "hardware_communicator.controller.usb",
            "hardware_communicator.message_interpreter",
            "hardware_communicator.message_interpreter.basic_interpreter",
            "hardware_communicator.message_interpreter.binary_interpreter",
            "hardware_communicator.usb_commmunicator"
        ],
        "version": "0.1.1591122630"
    },
    "hardware-control": {
        "cmdline": [],
        "modules": [
            "hardware_control",
            "hardware_control.backends",
            "hardware_control.backends.advantech",
            "hardware_control.backends.advantech.Adam_6015",
            "hardware_control.backends.advantech.Adam_6024",
            "hardware_control.backends.alicat",
            "hardware_control.backends.alicat.Alicat_M_Series",
            "hardware_control.backends.base",
            "hardware_control.backends.base.Backend",
            "hardware_control.backends.caen",
            "hardware_control.backends.caen.Caen_14xxET",
            "hardware_control.backends.keysight",
            "hardware_control.backends.keysight.Keysight_33500B",
            "hardware_control.backends.keysight.Keysight_36300",
            "hardware_control.backends.keysight.Keysight_4000X",
            "hardware_control.backends.ni",
            "hardware_control.backends.ni.Ni_9000",
            "hardware_control.backends.picotech",
            "hardware_control.backends.picotech.Picotech_6000",
            "hardware_control.backends.picotech.picotech-remote-raspberry",
            "hardware_control.backends.rigol",
            "hardware_control.backends.rigol.Rigol_DP832",
            "hardware_control.backends.rigol.Rigol_DS1000Z",
            "hardware_control.backends.siglent",
            "hardware_control.backends.siglent.Siglent_SDG",
            "hardware_control.backends.srs",
            "hardware_control.backends.srs.SRS_DG535",
            "hardware_control.backends.tdkl",
            "hardware_control.backends.tdkl.TDKL_GenH",
            "hardware_control.backends.utility",
            "hardware_control.backends.zmq",
            "hardware_control.backends.zmq.ZMQ_Oscilloscope",
            "hardware_control.gui",
            "hardware_control.gui.base",
            "hardware_control.gui.base.App",
            "hardware_control.gui.base.Comm",
            "hardware_control.gui.base.Dataset",
            "hardware_control.gui.base.Instrument",
            "hardware_control.gui.base.MainWindow",
            "hardware_control.gui.base.MeasurementDirector",
            "hardware_control.gui.base.MeasurementRequest",
            "hardware_control.gui.base.logging",
            "hardware_control.gui.controls",
            "hardware_control.gui.controls.DelayGenerator",
            "hardware_control.gui.controls.DeviceTemplate",
            "hardware_control.gui.controls.FlowController",
            "hardware_control.gui.controls.FunctionGenerator",
            "hardware_control.gui.controls.IOModule",
            "hardware_control.gui.controls.MultiPowerSupply",
            "hardware_control.gui.controls.Oscilloscope",
            "hardware_control.gui.controls.ReadModule",
            "hardware_control.gui.widgets",
            "hardware_control.gui.widgets.connection_status",
            "hardware_control.gui.widgets.data_widget",
            "hardware_control.gui.widgets.macro_runner",
            "hardware_control.gui.widgets.on_off",
            "hardware_control.gui.widgets.plot",
            "hardware_control.gui.widgets.qtconsole",
            "hardware_control.gui.widgets.scan_widget",
            "hardware_control.gui.widgets.utility",
            "hardware_control.gui.widgets.zmq_connection",
            "hardware_control.utility"
        ],
        "version": "1.0.0"
    },
    "hardware-info": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hardwareprovider": {
        "cmdline": [],
        "modules": [
            "HardwareProvider"
        ],
        "version": "0.1.7"
    },
    "hardytestlib": {
        "cmdline": [],
        "modules": [
            "hardy_lib",
            "hardy_lib.run_func",
            "my_module"
        ],
        "version": "1.0.1"
    },
    "hare": {
        "cmdline": [],
        "modules": [
            "hare",
            "hare.column",
            "hare.connection",
            "hare.db",
            "hare.exception",
            "hare.table",
            "hare.transaction",
            "hare.util"
        ],
        "version": "0.6"
    },
    "hared": {
        "cmdline": [
            "hared"
        ],
        "modules": [
            "hared"
        ],
        "version": "1.3"
    },
    "harfang": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "harfpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.9"
    },
    "hargreavessamani": {
        "cmdline": [],
        "modules": [
            "hargreavessamani",
            "hargreavessamani.utils"
        ],
        "version": "0.0.9"
    },
    "harikaharika": {
        "cmdline": [],
        "modules": [
            "pythonpacakage",
            "pythonpacakage.program"
        ],
        "version": "0.0.1"
    },
    "harish-distributions": {
        "cmdline": [],
        "modules": [
            "harish_distributions",
            "harish_distributions.Binomialdistribution",
            "harish_distributions.Gaussiandistribution",
            "harish_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "harishspider": {
        "cmdline": [],
        "modules": [
            "harishspider"
        ],
        "version": "1.1"
    },
    "harissa": {
        "cmdline": [],
        "modules": [
            "harissa",
            "harissa.grnsim",
            "harissa.grnsim.core",
            "harissa.grnsim.graphics",
            "harissa.grnsim.model",
            "harissa.networks",
            "harissa.networks.net0",
            "harissa.networks.net0bursty"
        ],
        "version": "0.1.1"
    },
    "hariteja-distri": {
        "cmdline": [],
        "modules": [
            "Hariteja_Distri",
            "Hariteja_Distri.Binomialdistribution",
            "Hariteja_Distri.Gaussiandistribution",
            "Hariteja_Distri.Generaldistribution"
        ],
        "version": "0.1"
    },
    "harivansh-laravel-docker": {
        "cmdline": [],
        "modules": [
            "harivansh_laravel_docker",
            "harivansh_laravel_docker.application",
            "harivansh_laravel_docker.core",
            "harivansh_laravel_docker.helpers"
        ],
        "version": "0.5.1"
    },
    "harivansh-scripting-utilities": {
        "cmdline": [],
        "modules": [
            "harivansh_scripting_utilities.helpers",
            "harivansh_scripting_utilities.print"
        ],
        "version": "0.4.1"
    },
    "harix": {
        "cmdline": [],
        "modules": [
            "harix",
            "harix.__version__",
            "harix.rdk",
            "harix.rdk.harix_api",
            "harix.rdk.harix_api.motion",
            "harix.rdk.harix_api.motion.robot_control_api",
            "harix.rdk.harix_api.navagation",
            "harix.rdk.harix_api.navagation.robot_navigate_api",
            "harix.rdk.harix_api.nlu",
            "harix.rdk.harix_api.nlu.nlu",
            "harix.rdk.harix_api.operate",
            "harix.rdk.harix_api.operate.robot_config_api",
            "harix.rdk.harix_api.robotmind",
            "harix.rdk.harix_api.robotmind.RobotMindServer",
            "harix.rdk.harix_api.robotmind.RobotMindService",
            "harix.rdk.harix_api.subscribe",
            "harix.rdk.harix_api.subscribe.robot_subscribe",
            "harix.rdk.harix_api.subscribe.subscribe",
            "harix.rdk.harix_api.vision",
            "harix.rdk.harix_api.vision.VisionServer",
            "harix.rdk.harix_api.vision.VisionService",
            "harix.rdk.harix_api.vision.vision",
            "harix.rdk.harix_api.voice",
            "harix.rdk.harix_api.voice.SpeechServer",
            "harix.rdk.harix_api.voice.SpeechService",
            "harix.rdk.harix_api.voice.robot_tts_api",
            "harix.rdk.nlu",
            "harix.rdk.nlu.nlu",
            "harix.rdk.proto",
            "harix.rdk.proto.common",
            "harix.rdk.proto.common.common_pb2",
            "harix.rdk.proto.common.common_pb2_grpc",
            "harix.rdk.proto.common.imageType_pb2",
            "harix.rdk.proto.common.imageType_pb2_grpc",
            "harix.rdk.proto.common.qa_pb2",
            "harix.rdk.proto.common.qa_pb2_grpc",
            "harix.rdk.proto.common.sw_common_pb2",
            "harix.rdk.proto.common.sw_common_pb2_grpc",
            "harix.rdk.proto.nlu",
            "harix.rdk.proto.nlu.nlu_pb2",
            "harix.rdk.proto.nlu.nlu_pb2_grpc",
            "harix.rdk.proto.robot_mind",
            "harix.rdk.proto.robot_mind.robotmind_pb2",
            "harix.rdk.proto.robot_mind.robotmind_pb2_grpc",
            "harix.rdk.proto.robot_mind.robotskill_pb2",
            "harix.rdk.proto.robot_mind.robotskill_pb2_grpc",
            "harix.rdk.proto.robot_skill_api",
            "harix.rdk.proto.robot_skill_api.robot_config_api_pb2",
            "harix.rdk.proto.robot_skill_api.robot_config_api_pb2_grpc",
            "harix.rdk.proto.robot_skill_api.robot_control_api_pb2",
            "harix.rdk.proto.robot_skill_api.robot_control_api_pb2_grpc",
            "harix.rdk.proto.robot_skill_api.robot_navigate_api_pb2",
            "harix.rdk.proto.robot_skill_api.robot_navigate_api_pb2_grpc",
            "harix.rdk.proto.robot_skill_api.robot_operator_api_pb2",
            "harix.rdk.proto.robot_skill_api.robot_operator_api_pb2_grpc",
            "harix.rdk.proto.robot_skill_api.robot_tts_api_pb2",
            "harix.rdk.proto.robot_skill_api.robot_tts_api_pb2_grpc",
            "harix.rdk.proto.serviceapp",
            "harix.rdk.proto.serviceapp.recognizeSpeech_pb2",
            "harix.rdk.proto.serviceapp.recognizeSpeech_pb2_grpc",
            "harix.rdk.proto.serviceapp.recognizeVision_pb2",
            "harix.rdk.proto.serviceapp.recognizeVision_pb2_grpc",
            "harix.rdk.proto.speech",
            "harix.rdk.proto.speech.enableSpeech_pb2",
            "harix.rdk.proto.speech.enableSpeech_pb2_grpc",
            "harix.rdk.proto.speech.speech_pb2",
            "harix.rdk.proto.speech.speech_pb2_grpc",
            "harix.rdk.proto.vision",
            "harix.rdk.proto.vision.enableVision_pb2",
            "harix.rdk.proto.vision.enableVision_pb2_grpc",
            "harix.rdk.proto.vision.vision_pb2",
            "harix.rdk.proto.vision.vision_pb2_grpc",
            "harix.rdk.robotmind",
            "harix.rdk.robotmind.RobotMindServer",
            "harix.rdk.robotmind.RobotMindService",
            "harix.rdk.skill",
            "harix.rdk.skill.robot_config_api",
            "harix.rdk.skill.robot_control_api",
            "harix.rdk.skill.robot_navigate_api",
            "harix.rdk.skill.robot_tts_api",
            "harix.rdk.speech",
            "harix.rdk.speech.speech",
            "harix.rdk.speechserver",
            "harix.rdk.speechserver.SpeechServer",
            "harix.rdk.speechserver.SpeechService",
            "harix.rdk.subscribe",
            "harix.rdk.subscribe.robot_subscribe",
            "harix.rdk.subscribe.subscribe",
            "harix.rdk.tools",
            "harix.rdk.tools.tools",
            "harix.rdk.vision",
            "harix.rdk.vision.VisionServer",
            "harix.rdk.vision.VisionService",
            "harix.rdk.vision.vision",
            "harix.rdk.visionserver",
            "harix.rdk.visionserver.VisionServer",
            "harix.rdk.visionserver.VisionService"
        ],
        "version": "1.0.9"
    },
    "hark": {
        "cmdline": [],
        "modules": [
            "hark",
            "hark.cli",
            "hark.cli.hark",
            "hark.cli.util",
            "hark.client",
            "hark.context",
            "hark.context.imagecache",
            "hark.dal",
            "hark.driver",
            "hark.driver.base",
            "hark.driver.status",
            "hark.driver.virtualbox",
            "hark.exceptions",
            "hark.guest",
            "hark.imagestore",
            "hark.lib",
            "hark.lib.command",
            "hark.lib.platform",
            "hark.log",
            "hark.models",
            "hark.models.base_image",
            "hark.models.folder_share",
            "hark.models.image",
            "hark.models.machine",
            "hark.models.network_interface",
            "hark.models.port_mapping",
            "hark.networking",
            "hark.procedure",
            "hark.share",
            "hark.share.abstract_share",
            "hark.share.nfs",
            "hark.ssh",
            "hark.util",
            "hark.util.download",
            "tests",
            "tests.test_base_image",
            "tests.test_cli_hark",
            "tests.test_client",
            "tests.test_command",
            "tests.test_context",
            "tests.test_dal",
            "tests.test_driver",
            "tests.test_guest",
            "tests.test_image",
            "tests.test_lib_platform",
            "tests.test_models",
            "tests.test_networking",
            "tests.test_ssh",
            "tests.test_util"
        ],
        "version": "1.0.0.dev3"
    },
    "hark-builder": {
        "cmdline": [],
        "modules": [
            "hark_builder",
            "hark_builder.build",
            "hark_builder.cli",
            "hark_builder.context",
            "hark_builder.exceptions",
            "hark_builder.imagecache",
            "hark_builder.runner",
            "tests",
            "tests.test_build",
            "tests.test_context",
            "tests.test_imagecache",
            "tests.test_runner",
            "tests.util"
        ],
        "version": "1.0.0.dev6"
    },
    "hark-imagestore": {
        "cmdline": [],
        "modules": [
            "hark_imagestore",
            "hark_imagestore.cli",
            "hark_imagestore.imagecache",
            "hark_imagestore.lib",
            "hark_imagestore.lib.aws",
            "hark_imagestore.lib.server",
            "hark_imagestore.server"
        ],
        "version": "1.0.0.dev4"
    },
    "hark-lang": {
        "cmdline": [],
        "modules": [
            "hark_lang",
            "hark_lang.cli",
            "hark_lang.cli.hosted_query",
            "hark_lang.cli.in_hosted",
            "hark_lang.cli.in_own",
            "hark_lang.cli.interface",
            "hark_lang.cli.main",
            "hark_lang.cli.utils",
            "hark_lang.cloud",
            "hark_lang.cloud.api",
            "hark_lang.cloud.aws",
            "hark_lang.config",
            "hark_lang.config_classes",
            "hark_lang.controllers",
            "hark_lang.controllers.ddb",
            "hark_lang.controllers.ddb_model",
            "hark_lang.controllers.local",
            "hark_lang.exceptions",
            "hark_lang.executors",
            "hark_lang.executors.awslambda",
            "hark_lang.executors.multiprocess",
            "hark_lang.executors.thread",
            "hark_lang.hark_compiler",
            "hark_lang.hark_compiler.attributes",
            "hark_lang.hark_compiler.compiler",
            "hark_lang.hark_parser",
            "hark_lang.hark_parser.nodes",
            "hark_lang.hark_parser.parser",
            "hark_lang.hark_parser.repls",
            "hark_lang.load",
            "hark_lang.machine",
            "hark_lang.machine.arec",
            "hark_lang.machine.controller",
            "hark_lang.machine.executable",
            "hark_lang.machine.foreign",
            "hark_lang.machine.future",
            "hark_lang.machine.hark_serialisable",
            "hark_lang.machine.instruction",
            "hark_lang.machine.instructionset",
            "hark_lang.machine.machine",
            "hark_lang.machine.probe",
            "hark_lang.machine.state",
            "hark_lang.machine.stdout_item",
            "hark_lang.machine.thread_failure",
            "hark_lang.machine.types",
            "hark_lang.run",
            "hark_lang.run.aws",
            "hark_lang.run.common",
            "hark_lang.run.dynamodb",
            "hark_lang.run.lambda_handlers",
            "hark_lang.run.local"
        ],
        "version": "0.5.1"
    },
    "harleyfirstmodule": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harmalysis": {
        "cmdline": [],
        "modules": [
            "harmalysis",
            "harmalysis.__version__",
            "harmalysis.classes",
            "harmalysis.classes.chord",
            "harmalysis.classes.harmalysis",
            "harmalysis.classes.interval",
            "harmalysis.classes.key",
            "harmalysis.classes.pitch_class",
            "harmalysis.classes.scale",
            "harmalysis.common",
            "harmalysis.parsers",
            "harmalysis.parsers.chordlabel",
            "harmalysis.parsers.roman",
            "harmalysis.test",
            "harmalysis.test.test_class"
        ],
        "version": "0.9.1"
    },
    "harman-demo": {
        "cmdline": [],
        "modules": [
            "harman_demo"
        ],
        "version": "0.1.0"
    },
    "harmeet-state": {
        "cmdline": [],
        "modules": [
            "src",
            "src.state"
        ],
        "version": "1.0"
    },
    "harmeet-state-demo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harminder": {
        "cmdline": [],
        "modules": [
            "harminder"
        ],
        "version": "1.1"
    },
    "harmless": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harmonator": {
        "cmdline": [],
        "modules": [
            "harmonator",
            "harmonator.filename_helpers",
            "harmonator.harmonate"
        ],
        "version": "0.1.2"
    },
    "harmonia": {
        "cmdline": [],
        "modules": [
            "harmonia"
        ],
        "version": "0.1.0"
    },
    "harmoniacosmo": {
        "cmdline": [],
        "modules": [
            "harmonia",
            "harmonia.algorithms",
            "harmonia.algorithms.arrays",
            "harmonia.algorithms.bases",
            "harmonia.algorithms.discretisation",
            "harmonia.algorithms.integration",
            "harmonia.conftest",
            "harmonia.cosmology",
            "harmonia.cosmology.geometry",
            "harmonia.cosmology.scale_dependence",
            "harmonia.mapper",
            "harmonia.mapper.catalogue_maker",
            "harmonia.mapper.map_transform",
            "harmonia.reader",
            "harmonia.reader._kernels",
            "harmonia.reader.couplings",
            "harmonia.reader.likelihoods",
            "harmonia.reader.models",
            "harmonia.surveyor",
            "harmonia.surveyor.coordinates",
            "harmonia.surveyor.definition",
            "harmonia.surveyor.synthesis",
            "harmonia.tests",
            "harmonia.tests.test_arrays",
            "harmonia.tests.test_bases",
            "harmonia.tests.test_catalogue_maker",
            "harmonia.tests.test_coordinates",
            "harmonia.tests.test_definition",
            "harmonia.tests.test_discretisation",
            "harmonia.tests.test_geometry",
            "harmonia.tests.test_integration",
            "harmonia.tests.test_likelihoods",
            "harmonia.tests.test_synthesis",
            "harmonia.tests.test_utils",
            "harmonia.utils"
        ],
        "version": "0.1.2"
    },
    "harmonial": {
        "cmdline": [],
        "modules": [
            "harmonial",
            "harmonial.Command",
            "harmonial.Event",
            "harmonial.Function"
        ],
        "version": "0.4"
    },
    "harmonica": {
        "cmdline": [],
        "modules": [
            "harmonica",
            "harmonica._version",
            "harmonica.constants",
            "harmonica.datasets",
            "harmonica.datasets.sample_data",
            "harmonica.equivalent_layer",
            "harmonica.equivalent_layer.harmonic",
            "harmonica.forward",
            "harmonica.forward.point_mass",
            "harmonica.forward.prism",
            "harmonica.forward.tesseroid",
            "harmonica.forward.utils",
            "harmonica.gravity_corrections",
            "harmonica.io",
            "harmonica.isostasy",
            "harmonica.synthetic",
            "harmonica.synthetic.surveys",
            "harmonica.tests",
            "harmonica.tests.test_eql_harmonic",
            "harmonica.tests.test_forward_utils",
            "harmonica.tests.test_gravity_corrections",
            "harmonica.tests.test_icgem",
            "harmonica.tests.test_isostasy",
            "harmonica.tests.test_point_mass",
            "harmonica.tests.test_prism",
            "harmonica.tests.test_sample_data",
            "harmonica.tests.test_synthetic_surveys",
            "harmonica.tests.test_tesseroid",
            "harmonica.tests.utils",
            "harmonica.version"
        ],
        "version": "0.1.0"
    },
    "harmonicio": {
        "cmdline": [],
        "modules": [
            "harmonicIO",
            "harmonicIO.general",
            "harmonicIO.general.colors",
            "harmonicIO.general.definition",
            "harmonicIO.general.services",
            "harmonicIO.master",
            "harmonicIO.master.configuration",
            "harmonicIO.master.functions_list",
            "harmonicIO.master.messaging_system",
            "harmonicIO.master.meta_table",
            "harmonicIO.master.rest_service",
            "harmonicIO.master.server_socket",
            "harmonicIO.stream_connector",
            "harmonicIO.stream_connector.stream_connector",
            "harmonicIO.worker",
            "harmonicIO.worker.configuration",
            "harmonicIO.worker.docker_master",
            "harmonicIO.worker.docker_service",
            "harmonicIO.worker.rest_service"
        ],
        "version": "0.3.0"
    },
    "harmonique": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "harmonize": {
        "cmdline": [],
        "modules": [
            "harmonize",
            "harmonize.decoders",
            "harmonize.encoders"
        ],
        "version": "1.0.2"
    },
    "harmonizer": {
        "cmdline": [],
        "modules": [
            "harmonizer",
            "harmonizer.cli",
            "harmonizer.config",
            "harmonizer.enrichments",
            "harmonizer.manipulations",
            "harmonizer.validations"
        ],
        "version": "0.1.31"
    },
    "harmony": {
        "cmdline": [],
        "modules": [
            "harmony",
            "harmony._version",
            "harmony.error",
            "harmony.resource",
            "harmony.schema",
            "harmony.schema.collection",
            "harmony.schema.collector",
            "harmony.schema.processor",
            "harmony.schema.validator",
            "harmony.session",
            "harmony.ui",
            "harmony.ui.error_tree",
            "harmony.ui.model",
            "harmony.ui.model.placeholder_proxy_model",
            "harmony.ui.model.string_list",
            "harmony.ui.model.templated_dictionary_list",
            "harmony.ui.publisher",
            "harmony.ui.widget",
            "harmony.ui.widget.array",
            "harmony.ui.widget.base",
            "harmony.ui.widget.boolean",
            "harmony.ui.widget.container",
            "harmony.ui.widget.datetime",
            "harmony.ui.widget.enum",
            "harmony.ui.widget.factory",
            "harmony.ui.widget.filesystem_path",
            "harmony.ui.widget.integer",
            "harmony.ui.widget.number",
            "harmony.ui.widget.simple",
            "harmony.ui.widget.standard",
            "harmony.ui.widget.string",
            "harmony.ui.widget.text",
            "harmony.ui.worker"
        ],
        "version": "0.1.0"
    },
    "harmony-connect-client": {
        "cmdline": [],
        "modules": [
            "harmony_connect_client",
            "harmony_connect_client.api",
            "harmony_connect_client.api.chains_api",
            "harmony_connect_client.api.entries_api",
            "harmony_connect_client.api.info_api",
            "harmony_connect_client.api_client",
            "harmony_connect_client.configuration",
            "harmony_connect_client.models",
            "harmony_connect_client.models.all_info",
            "harmony_connect_client.models.all_info_links",
            "harmony_connect_client.models.chain",
            "harmony_connect_client.models.chain_create",
            "harmony_connect_client.models.chain_data",
            "harmony_connect_client.models.chain_data_dblock",
            "harmony_connect_client.models.chain_data_eblock",
            "harmony_connect_client.models.chain_data_entries",
            "harmony_connect_client.models.chain_link",
            "harmony_connect_client.models.chain_list",
            "harmony_connect_client.models.chain_list_data",
            "harmony_connect_client.models.chain_short",
            "harmony_connect_client.models.entry",
            "harmony_connect_client.models.entry_create",
            "harmony_connect_client.models.entry_data",
            "harmony_connect_client.models.entry_data_dblock",
            "harmony_connect_client.models.entry_data_eblock",
            "harmony_connect_client.models.entry_list",
            "harmony_connect_client.models.entry_list_chain",
            "harmony_connect_client.models.entry_list_data",
            "harmony_connect_client.models.entry_search_response",
            "harmony_connect_client.models.entry_search_response_data",
            "harmony_connect_client.models.entry_short",
            "harmony_connect_client.models.search_body",
            "harmony_connect_client.rest",
            "test",
            "test.test_all_info",
            "test.test_all_info_links",
            "test.test_chain",
            "test.test_chain_create",
            "test.test_chain_data",
            "test.test_chain_data_dblock",
            "test.test_chain_data_eblock",
            "test.test_chain_data_entries",
            "test.test_chain_link",
            "test.test_chain_list",
            "test.test_chain_list_data",
            "test.test_chain_short",
            "test.test_chains_api",
            "test.test_entries_api",
            "test.test_entry",
            "test.test_entry_create",
            "test.test_entry_data",
            "test.test_entry_data_dblock",
            "test.test_entry_data_eblock",
            "test.test_entry_list",
            "test.test_entry_list_chain",
            "test.test_entry_list_data",
            "test.test_entry_search_response",
            "test.test_entry_search_response_data",
            "test.test_entry_short",
            "test.test_info_api",
            "test.test_search_body"
        ],
        "version": "1.0.7"
    },
    "harmony-device": {
        "cmdline": [],
        "modules": [
            "harmony_device",
            "harmony_device.Attribute",
            "harmony_device.HarmonyClientRequestHandler",
            "harmony_device.app",
            "harmony_device.harmony"
        ],
        "version": "0.0.8"
    },
    "harmony-discord": {
        "cmdline": [],
        "modules": [
            "harmony",
            "harmony.discord",
            "harmony.harmony",
            "harmony.messages",
            "harmony.user_agent_data",
            "harmony.user_agents"
        ],
        "version": "0.6.0"
    },
    "harmony-pytorch": {
        "cmdline": [],
        "modules": [
            "harmony",
            "harmony.harmony",
            "harmony.utils",
            "harmony.version"
        ],
        "version": "0.1.4"
    },
    "harmony-tools": {
        "cmdline": [],
        "modules": [
            "harmony_tools",
            "harmony_tools.cli",
            "harmony_tools.cli.abc",
            "harmony_tools.cli.abc.category",
            "harmony_tools.cli.abc.command",
            "harmony_tools.cli.argparser",
            "harmony_tools.cli.categories",
            "harmony_tools.cli.categories.gammas",
            "harmony_tools.cli.categories.gammas.detect",
            "harmony_tools.cli.categories.guitar",
            "harmony_tools.cli.categories.guitar.show_gamma",
            "harmony_tools.cli.categories.guitar.show_neck",
            "harmony_tools.cli.categories.guitar.show_pentatonic",
            "harmony_tools.cli.categories.notes",
            "harmony_tools.cli.categories.notes.random",
            "harmony_tools.cli.categories.pentatonics",
            "harmony_tools.cli.categories.pentatonics.detect",
            "harmony_tools.core",
            "harmony_tools.core.colors",
            "harmony_tools.core.gamma_structure",
            "harmony_tools.core.note_operations",
            "harmony_tools.core.pentatonic_structure",
            "harmony_tools.gammas",
            "harmony_tools.notes",
            "harmony_tools.pentatonics",
            "tests",
            "tests.test_gammas"
        ],
        "version": "0.1"
    },
    "harmony-transaction-generator": {
        "cmdline": [],
        "modules": [
            "harmony_transaction_generator",
            "harmony_transaction_generator._version",
            "harmony_transaction_generator.account_manager",
            "harmony_transaction_generator.analysis",
            "harmony_transaction_generator.common",
            "harmony_transaction_generator.fund",
            "harmony_transaction_generator.generator"
        ],
        "version": "20.1.48"
    },
    "harmonypy": {
        "cmdline": [],
        "modules": [
            "harmonypy",
            "harmonypy.harmony",
            "harmonypy.lisi",
            "harmonypy.tests"
        ],
        "version": "0.0.5"
    },
    "harmonyqt": {
        "cmdline": [],
        "modules": [
            "harmonyqt",
            "harmonyqt.accounts",
            "harmonyqt.actions",
            "harmonyqt.chat",
            "harmonyqt.chat.chat",
            "harmonyqt.chat.display",
            "harmonyqt.chat.dock",
            "harmonyqt.chat.send_area",
            "harmonyqt.commands",
            "harmonyqt.commands.alias",
            "harmonyqt.commands.autorun",
            "harmonyqt.commands.devices",
            "harmonyqt.commands.eval",
            "harmonyqt.commands.help",
            "harmonyqt.commands.nick",
            "harmonyqt.commands.pdb",
            "harmonyqt.commands.room_set",
            "harmonyqt.commands.say",
            "harmonyqt.commands.shell",
            "harmonyqt.commands.utils",
            "harmonyqt.dialogs",
            "harmonyqt.dialogs.accept_room_invite",
            "harmonyqt.dialogs.base",
            "harmonyqt.dialogs.create_room",
            "harmonyqt.dialogs.invite_to_room",
            "harmonyqt.dialogs.login",
            "harmonyqt.dock",
            "harmonyqt.error_handler",
            "harmonyqt.error_handler.boxes",
            "harmonyqt.error_handler.console",
            "harmonyqt.error_handler.display",
            "harmonyqt.event_logger",
            "harmonyqt.events",
            "harmonyqt.homepage",
            "harmonyqt.main",
            "harmonyqt.markdown",
            "harmonyqt.menu",
            "harmonyqt.message",
            "harmonyqt.message_display",
            "harmonyqt.message_display.display",
            "harmonyqt.scroller",
            "harmonyqt.scroller.scroller",
            "harmonyqt.scroller.shortcuts",
            "harmonyqt.shortcuts",
            "harmonyqt.theming",
            "harmonyqt.toolbar",
            "harmonyqt.usertree",
            "harmonyqt.utils"
        ],
        "version": "0.5.8"
    },
    "harmonyts": {
        "cmdline": [],
        "modules": [
            "harmony",
            "harmony.core",
            "harmony.plot",
            "harmony.utils",
            "harmony.version"
        ],
        "version": "0.1.4"
    },
    "harmopy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harmpdf": {
        "cmdline": [],
        "modules": [
            "harmpdf",
            "harmpdf.pdf2image",
            "harmpdf.pdf2text"
        ],
        "version": "1.0"
    },
    "harness": {
        "cmdline": [],
        "modules": [
            "harness",
            "harness.cli",
            "harness.cli.check",
            "harness.cli.kubegen",
            "harness.cli.main",
            "harness.cli.protopath",
            "harness.cli.utils",
            "harness.config",
            "harness.grpc_pb2",
            "harness.http_pb2",
            "harness.logging_pb2",
            "harness.metrics_pb2",
            "harness.net_pb2",
            "harness.plugin",
            "harness.plugin.main",
            "harness.plugin.python",
            "harness.postgres_pb2",
            "harness.redis_pb2",
            "harness.runtime",
            "harness.runtime._features",
            "harness.runtime._runner",
            "harness.runtime._utils",
            "harness.runtime._validate",
            "harness.tracing_pb2",
            "harness.wire_pb2",
            "harness.wires",
            "harness.wires.aiohttp",
            "harness.wires.aiohttp.web",
            "harness.wires.aiomonitor",
            "harness.wires.apscheduler",
            "harness.wires.apscheduler.jobstores",
            "harness.wires.apscheduler.jobstores.redis",
            "harness.wires.asyncpg",
            "harness.wires.base",
            "harness.wires.grpclib",
            "harness.wires.grpclib.client",
            "harness.wires.grpclib.server",
            "harness.wires.logging",
            "harness.wires.opentelemetry",
            "harness.wires.opentelemetry.ext",
            "harness.wires.opentelemetry.ext.jaeger",
            "harness.wires.opentelemetry.ext.prometheus",
            "harness.wires.prometheus",
            "validate",
            "validate.validate_pb2"
        ],
        "version": "0.1.0"
    },
    "harness-it": {
        "cmdline": [],
        "modules": [
            "harness",
            "harness.dataframe",
            "harness.pipeline"
        ],
        "version": "0.1.3"
    },
    "haro": {
        "cmdline": [],
        "modules": [
            "haro",
            "haro.api",
            "haro.tests",
            "haro.tests.test_api"
        ],
        "version": "2018.11.15"
    },
    "harobed-paster-template-advanced-package": {
        "cmdline": [],
        "modules": [
            "harobed",
            "harobed.paster_template",
            "harobed.paster_template.advanced_package"
        ],
        "version": "0.2"
    },
    "harold": {
        "cmdline": [],
        "modules": [
            "harold",
            "harold._arg_utils",
            "harold._aux_linalg",
            "harold._bd_algebra",
            "harold._classes",
            "harold._discrete_funcs",
            "harold._frequency_domain",
            "harold._frequency_domain_plots",
            "harold._global_constants",
            "harold._kalman_ops",
            "harold._polynomial_ops",
            "harold._solvers",
            "harold._static_ctrl_design",
            "harold._system_funcs",
            "harold._system_props",
            "harold._time_domain",
            "harold._time_domain_plots",
            "harold._version"
        ],
        "version": "1.0.1"
    },
    "haros": {
        "cmdline": [],
        "modules": [
            "haros",
            "haros.analysis_manager",
            "haros.cmake_parser",
            "haros.config_builder",
            "haros.data",
            "haros.export_manager",
            "haros.extractor",
            "haros.haros",
            "haros.launch_parser",
            "haros.metamodel",
            "haros.plugin_manager",
            "haros.pyflwor_monkey_patch",
            "haros.util",
            "haros.visualiser"
        ],
        "version": "3.9.0"
    },
    "haros-plugins": {
        "cmdline": [],
        "modules": [
            "haros_plugin_cccc",
            "haros_plugin_cccc.plugin",
            "haros_plugin_ccd",
            "haros_plugin_ccd.plugin",
            "haros_plugin_cppcheck",
            "haros_plugin_cppcheck.plugin",
            "haros_plugin_cpplint",
            "haros_plugin_cpplint.plugin",
            "haros_plugin_lizard",
            "haros_plugin_lizard.plugin",
            "haros_plugin_mi_calculator",
            "haros_plugin_mi_calculator.plugin",
            "haros_plugin_pylint",
            "haros_plugin_pylint.plugin",
            "haros_plugin_radon",
            "haros_plugin_radon.plugin"
        ],
        "version": "1.0.5"
    },
    "harp": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "harp-protocol": {
        "cmdline": [],
        "modules": [
            "harp_protocol",
            "harp_protocol.harp_protocol"
        ],
        "version": "0.1.0"
    },
    "harparser": {
        "cmdline": [],
        "modules": [
            "harparser"
        ],
        "version": "0.4"
    },
    "harpdf": {
        "cmdline": [],
        "modules": [
            "harpdf",
            "harpdf.pdftotext"
        ],
        "version": "0.0.0"
    },
    "harper": {
        "cmdline": [],
        "modules": [
            "harper",
            "harper.bops",
            "harper.exceptions",
            "harper.media",
            "harper.misc",
            "harper.transforms"
        ],
        "version": "0.4.2"
    },
    "harperdb": {
        "cmdline": [],
        "modules": [
            "harperdb",
            "harperdb.exceptions",
            "harperdb.harperdb",
            "harperdb.harperdb_base",
            "harperdb.wrappers"
        ],
        "version": "0.4.2"
    },
    "harperdb-sdk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harperdbcloud-python-sdk": {
        "cmdline": [],
        "modules": [
            "harperdb_cloud",
            "harperdb_cloud.harperdb_cloud",
            "harperdb_cloud.libs",
            "harperdb_cloud.libs.browser"
        ],
        "version": "2020.6.15.4"
    },
    "harpies": {
        "cmdline": [],
        "modules": [
            "harpies"
        ],
        "version": "1.0.0"
    },
    "harpo": {
        "cmdline": [],
        "modules": [
            "harpo",
            "harpo.cli",
            "harpo.cli.domain",
            "harpo.cli.domain.commands",
            "harpo.cli.group",
            "harpo.cli.group.commands",
            "harpo.cli.key",
            "harpo.cli.key.commands",
            "harpo.cli.secret",
            "harpo.cli.secret.commands",
            "harpo.cli.system",
            "harpo.cli.system.commands",
            "harpo.cli.user",
            "harpo.cli.user.commands",
            "harpo.cli.util",
            "harpo.domain",
            "harpo.domain.domain",
            "harpo.domain.manager",
            "harpo.exceptions",
            "harpo.exporter",
            "harpo.group",
            "harpo.group.group",
            "harpo.group.manager",
            "harpo.key",
            "harpo.key.manager",
            "harpo.log",
            "harpo.main",
            "harpo.meta",
            "harpo.secret",
            "harpo.user",
            "harpo.user.manager",
            "harpo.user.user",
            "harpo.util"
        ],
        "version": "1.0.12"
    },
    "harpoon": {
        "cmdline": [],
        "modules": [
            "harpoon",
            "harpoon.commands",
            "harpoon.commands.asn",
            "harpoon.commands.base",
            "harpoon.commands.binaryedge",
            "harpoon.commands.bitly",
            "harpoon.commands.cache",
            "harpoon.commands.censyscmd",
            "harpoon.commands.certspotter",
            "harpoon.commands.circl",
            "harpoon.commands.config",
            "harpoon.commands.crtsh",
            "harpoon.commands.cybercure",
            "harpoon.commands.dnsc",
            "harpoon.commands.dnsdbcmd",
            "harpoon.commands.domain",
            "harpoon.commands.emailcmd",
            "harpoon.commands.fullcontactcmd",
            "harpoon.commands.githubcmd",
            "harpoon.commands.googl",
            "harpoon.commands.greynoise",
            "harpoon.commands.help",
            "harpoon.commands.hibp",
            "harpoon.commands.hunter",
            "harpoon.commands.hybrid",
            "harpoon.commands.ip",
            "harpoon.commands.ipinfo",
            "harpoon.commands.malshare",
            "harpoon.commands.misp",
            "harpoon.commands.opencage",
            "harpoon.commands.otx",
            "harpoon.commands.permacc",
            "harpoon.commands.pgp",
            "harpoon.commands.pt",
            "harpoon.commands.quad9",
            "harpoon.commands.robtex",
            "harpoon.commands.safebrowsing",
            "harpoon.commands.save",
            "harpoon.commands.screenshot",
            "harpoon.commands.shodancmd",
            "harpoon.commands.spyonwebcmd",
            "harpoon.commands.subdomains",
            "harpoon.commands.telegram",
            "harpoon.commands.threatgrid",
            "harpoon.commands.totalhash",
            "harpoon.commands.twitter",
            "harpoon.commands.urlscan",
            "harpoon.commands.vt",
            "harpoon.lib",
            "harpoon.lib.archiveis",
            "harpoon.lib.archiveorg",
            "harpoon.lib.bing",
            "harpoon.lib.bird",
            "harpoon.lib.bitly",
            "harpoon.lib.certspotter",
            "harpoon.lib.cybercure",
            "harpoon.lib.googl",
            "harpoon.lib.google",
            "harpoon.lib.hibp",
            "harpoon.lib.hybrid",
            "harpoon.lib.ipinfo",
            "harpoon.lib.malshare",
            "harpoon.lib.memento",
            "harpoon.lib.opencage",
            "harpoon.lib.pgp",
            "harpoon.lib.robtex",
            "harpoon.lib.totalhash",
            "harpoon.lib.urlscan",
            "harpoon.lib.utils",
            "harpoon.lib.yandex",
            "harpoon.main"
        ],
        "version": "0.1.4"
    },
    "harpoontools": {
        "cmdline": [],
        "modules": [
            "harpoontools.tools"
        ],
        "version": "0.1.3"
    },
    "harpy": {
        "cmdline": [],
        "modules": [
            "harpy",
            "harpy.cache",
            "harpy.content",
            "harpy.cookie",
            "harpy.entry",
            "harpy.har",
            "harpy.header",
            "harpy.page",
            "harpy.post_data",
            "harpy.query_string",
            "harpy.request",
            "harpy.response",
            "harpy.timings"
        ],
        "version": "0.2.0"
    },
    "harpy-prjct": {
        "cmdline": [],
        "modules": [
            "harpy",
            "harpy.__version__",
            "harpy.data",
            "harpy.data.constants",
            "harpy.handlers",
            "harpy.handlers.argument_handler",
            "harpy.handlers.echo_handler",
            "harpy.handlers.interface_handler",
            "harpy.handlers.packet_handler",
            "harpy.handlers.parser_handler",
            "harpy.handlers.result_handler",
            "harpy.handlers.socket_handler",
            "harpy.handlers.window_handler"
        ],
        "version": "2020.9.25"
    },
    "harpy3": {
        "cmdline": [],
        "modules": [
            "harpy",
            "harpy.har_file",
            "harpy.har_file_io",
            "harpy.header_array",
            "harpy.tests",
            "harpy.tests.test_har_file",
            "harpy.tests.test_har_file_io",
            "harpy.tests.test_harpy",
            "harpy.tests.test_header_array",
            "harpy.tests.testdata"
        ],
        "version": "0.3.1"
    },
    "harpycrates": {
        "cmdline": [],
        "modules": [
            "harpycrates",
            "harpycrates.config",
            "harpycrates.item",
            "harpycrates.object_template",
            "harpycrates.thing"
        ],
        "version": "0.0.1"
    },
    "harrier": {
        "cmdline": [],
        "modules": [
            "harrier",
            "harrier.assets",
            "harrier.build",
            "harrier.cli",
            "harrier.common",
            "harrier.config",
            "harrier.data",
            "harrier.dev",
            "harrier.extensions",
            "harrier.frontmatter",
            "harrier.main",
            "harrier.render",
            "harrier.version"
        ],
        "version": "0.10"
    },
    "harriet": {
        "cmdline": [],
        "modules": [
            "harriet",
            "harriet.core",
            "harriet.urls"
        ],
        "version": "0.1.0"
    },
    "harrison": {
        "cmdline": [],
        "modules": [
            "harrison",
            "harrison.package_version",
            "harrison.profile",
            "harrison.registered_timer",
            "harrison.test_timer",
            "harrison.timer",
            "harrison/util",
            "harrison/util.inspectlib",
            "harrison/util.test_inspectlib"
        ],
        "version": "2.0.0"
    },
    "harrow": {
        "cmdline": [],
        "modules": [
            "harrow",
            "harrow.arrows"
        ],
        "version": "0.0.0"
    },
    "harrpy": {
        "cmdline": [],
        "modules": [
            "harrpy",
            "harrpy.cli",
            "harrpy.harrpy"
        ],
        "version": "0.1.0"
    },
    "harry": {
        "cmdline": [],
        "modules": [
            "harry",
            "harry.harpy",
            "harry.harpy.harpy",
            "harry.harpy.harpy.cache",
            "harry.harpy.harpy.content",
            "harry.harpy.harpy.cookie",
            "harry.harpy.harpy.entry",
            "harry.harpy.harpy.har",
            "harry.harpy.harpy.header",
            "harry.harpy.harpy.page",
            "harry.harpy.harpy.post_data",
            "harry.harpy.harpy.query_string",
            "harry.harpy.harpy.request",
            "harry.harpy.harpy.response",
            "harry.harpy.harpy.timings",
            "harry.harry"
        ],
        "version": "0.0.22"
    },
    "harryritchie": {
        "cmdline": [],
        "modules": [
            "GeoFuns",
            "GeoFuns.geo_queries",
            "GeoFuns.geofunctions",
            "GeoFuns.places"
        ],
        "version": "0.3.2"
    },
    "harrytsz": {
        "cmdline": [],
        "modules": [
            "harrytsz",
            "harrytsz.run"
        ],
        "version": "0.1"
    },
    "harrytsz-str2date": {
        "cmdline": [],
        "modules": [
            "harrytsz_str2date",
            "harrytsz_str2date.harrytsz_str2date"
        ],
        "version": "0.0.2"
    },
    "harrytsz00": {
        "cmdline": [],
        "modules": [
            "string2date",
            "string2date.string2date"
        ],
        "version": "0.0.2"
    },
    "harrytsz01": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "harrytsz02": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.helloworld"
        ],
        "version": "0.0.1"
    },
    "harser": {
        "cmdline": [],
        "modules": [
            "harser"
        ],
        "version": "0.1"
    },
    "harshavardhan-test": {
        "cmdline": [],
        "modules": [
            "pthon_package"
        ],
        "version": "0.1"
    },
    "harshawesome11": {
        "cmdline": [],
        "modules": [
            "harshawesome11"
        ],
        "version": "0.0.2"
    },
    "harstats-graphite": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hart": {
        "cmdline": [],
        "modules": [
            "hart",
            "hart.config",
            "hart.constants",
            "hart.exceptions",
            "hart.master",
            "hart.minions",
            "hart.providers",
            "hart.providers.base",
            "hart.providers.digitalocean",
            "hart.providers.ec2",
            "hart.providers.gce",
            "hart.providers.libcloud",
            "hart.providers.vultr",
            "hart.ssh",
            "hart.utils",
            "hart.version"
        ],
        "version": "0.12.3"
    },
    "hart-amsaf": {
        "cmdline": [],
        "modules": [
            "amsaf",
            "amsaf.AffineParameterMapGenerator",
            "amsaf.AmsafExecutor",
            "amsaf.AmsafImageFilter",
            "amsaf.BSplineParameterMapGenerator",
            "amsaf.ParameterMapGenerator",
            "amsaf.ParameterMapService",
            "amsaf.RigidParameterMapGenerator"
        ],
        "version": "0.0.4"
    },
    "haruhi": {
        "cmdline": [],
        "modules": [
            "haruhi",
            "haruhi.pyplot",
            "haruhi.pyplot.mollweide"
        ],
        "version": "1.0.2"
    },
    "haruki": {
        "cmdline": [],
        "modules": [
            "haruki.action",
            "haruki.robot",
            "haruki.scraper"
        ],
        "version": "0.1"
    },
    "haruna": {
        "cmdline": [],
        "modules": [
            "haruna",
            "haruna.metrics",
            "haruna.metrics.accuracy",
            "haruna.metrics.average",
            "haruna.metrics.metric",
            "haruna.metrics.std",
            "haruna.optim",
            "haruna.optim.radam",
            "haruna.optim.rmsprop",
            "haruna.trainer",
            "haruna.transforms",
            "haruna.transforms.functional",
            "haruna.transforms.segmentation",
            "haruna.utils",
            "haruna.utils.log",
            "haruna.utils.timeit",
            "haruna.utils.utils"
        ],
        "version": "0.0.3"
    },
    "harupy": {
        "cmdline": [],
        "modules": [
            "harupy",
            "harupy.shell",
            "harupy.text",
            "harupy.utils"
        ],
        "version": "1.3"
    },
    "haruspex": {
        "cmdline": [],
        "modules": [
            "haruspex",
            "haruspex.fat32",
            "haruspex.gpt",
            "haruspex.guid",
            "haruspex.mbr",
            "haruspex.utils"
        ],
        "version": "0.3.0"
    },
    "haruzira-sdk": {
        "cmdline": [],
        "modules": [
            "haruzirasdk",
            "haruzirasdk.haruzira_message",
            "haruzirasdk.hz_client_tcp_communication",
            "haruzirasdk.hz_encryption",
            "haruzirasdk.hz_speech_recognition_command_info",
            "haruzirasdk.hz_trace",
            "haruzirasdk.msg_ack_send_speech_data",
            "haruzirasdk.msg_ack_send_speech_recognition_command",
            "haruzirasdk.msg_ack_start_comm",
            "haruzirasdk.msg_notify_complete_speech",
            "haruzirasdk.msg_notify_end_comm",
            "haruzirasdk.msg_notify_stop_comm",
            "haruzirasdk.msg_req_start_comm",
            "haruzirasdk.msg_send_speech_data",
            "haruzirasdk.msg_send_speech_recognition_command"
        ],
        "version": "2.1.0"
    },
    "harvard": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "harvest": {
        "cmdline": [],
        "modules": [
            "harvest",
            "harvest.commands",
            "harvest.commands.init",
            "harvest.commands.init_demo",
            "harvest.commands.update",
            "harvest.config",
            "harvest.decorators",
            "harvest.utils"
        ],
        "version": "2.2.3"
    },
    "harvest-api": {
        "cmdline": [],
        "modules": [
            "harvest",
            "harvest.api",
            "harvest.credentials",
            "harvest.endpoints",
            "harvest.services"
        ],
        "version": "0.3.0"
    },
    "harvest-api-client": {
        "cmdline": [],
        "modules": [
            "harvest_api_client",
            "harvest_api_client.harvest",
            "harvest_api_client.tokens_manager"
        ],
        "version": "1.1.3"
    },
    "harvest-cropper": {
        "cmdline": [],
        "modules": [
            "cropper",
            "cropper.cli",
            "cropper.harvest"
        ],
        "version": "0.0.4"
    },
    "harvest-invoice": {
        "cmdline": [],
        "modules": [
            "harvest_invoice",
            "harvest_invoice.command_line",
            "harvest_invoice.invoice"
        ],
        "version": "0.0.1"
    },
    "harvest-python3": {
        "cmdline": [],
        "modules": [
            "harvest",
            "harvest.harvest"
        ],
        "version": "0.0.4"
    },
    "harvest-sow": {
        "cmdline": [],
        "modules": [
            "sow",
            "sow.commands",
            "sow.console",
            "sow.utils"
        ],
        "version": "1.0.0b1"
    },
    "harvest-vocab": {
        "cmdline": [],
        "modules": [
            "vocab",
            "vocab.managers",
            "vocab.models",
            "vocab.operators",
            "vocab.resources",
            "vocab.settings",
            "vocab.translators",
            "vocab.urls"
        ],
        "version": "2.0.4"
    },
    "harvestcli": {
        "cmdline": [],
        "modules": [
            "hreporting",
            "hreporting.cli",
            "hreporting.config",
            "hreporting.emails",
            "hreporting.harvest_client",
            "hreporting.utils"
        ],
        "version": "0.1.1"
    },
    "harvester": {
        "cmdline": [],
        "modules": [
            "harvester",
            "harvester.models",
            "harvester.user_agents",
            "harvester.utils"
        ],
        "version": "0.4.4"
    },
    "harvesters": {
        "cmdline": [],
        "modules": [
            "harvesters",
            "harvesters._private",
            "harvesters._private.core",
            "harvesters._private.core.command",
            "harvesters._private.core.helper",
            "harvesters._private.core.helper.profiler",
            "harvesters._private.core.helper.system",
            "harvesters._private.core.observer",
            "harvesters._private.core.port",
            "harvesters._private.core.statistics",
            "harvesters._private.core.subject",
            "harvesters._version",
            "harvesters.core",
            "harvesters.test",
            "harvesters.test.base_harvester",
            "harvesters.test.helper",
            "harvesters.test.test_acq_frame_rate",
            "harvesters.test.test_harvester_core",
            "harvesters.test.test_tutorials",
            "harvesters.util",
            "harvesters.util._pfnc",
            "harvesters.util.logging",
            "harvesters.util.pfnc"
        ],
        "version": "1.2.8"
    },
    "harvesters-gui": {
        "cmdline": [],
        "modules": [
            "harvesters_gui",
            "harvesters_gui._helper",
            "harvesters_gui._private",
            "harvesters_gui._private.frontend",
            "harvesters_gui._private.frontend.canvas",
            "harvesters_gui._private.frontend.helper",
            "harvesters_gui._private.frontend.image",
            "harvesters_gui._private.frontend.image.background",
            "harvesters_gui._private.frontend.image.icon",
            "harvesters_gui._private.frontend.pyqt5",
            "harvesters_gui._private.frontend.pyqt5.about",
            "harvesters_gui._private.frontend.pyqt5.action",
            "harvesters_gui._private.frontend.pyqt5.attribute_controller",
            "harvesters_gui._private.frontend.pyqt5.device_list",
            "harvesters_gui._private.frontend.pyqt5.display_rate_list",
            "harvesters_gui._private.frontend.pyqt5.feature_tree",
            "harvesters_gui._private.frontend.pyqt5.helper",
            "harvesters_gui._private.frontend.pyqt5.icon",
            "harvesters_gui._private.frontend.pyqt5.thread",
            "harvesters_gui._version",
            "harvesters_gui.frontend",
            "harvesters_gui.frontend.pyqt5"
        ],
        "version": "1.0.1"
    },
    "harvesters-util": {
        "cmdline": [],
        "modules": [
            "harvesters_util",
            "harvesters_util._version",
            "harvesters_util.logging",
            "harvesters_util.pfnc"
        ],
        "version": "0.1.0"
    },
    "harvestingkit": {
        "cmdline": [],
        "modules": [
            "harvestingkit",
            "harvestingkit.app_utils",
            "harvestingkit.aps_package",
            "harvestingkit.bibrecord",
            "harvestingkit.config",
            "harvestingkit.configparser",
            "harvestingkit.contrast_out",
            "harvestingkit.contrast_out_utils",
            "harvestingkit.edpsciences_package",
            "harvestingkit.elsevier_package",
            "harvestingkit.etree_utils",
            "harvestingkit.ftp_utils",
            "harvestingkit.harvestingkit_cli",
            "harvestingkit.hindawi_bibfilter",
            "harvestingkit.html_utils",
            "harvestingkit.inspire_cds_package",
            "harvestingkit.inspire_cds_package.base",
            "harvestingkit.inspire_cds_package.from_cds",
            "harvestingkit.inspire_cds_package.from_inspire",
            "harvestingkit.inspire_cds_package.mappings",
            "harvestingkit.jats_package",
            "harvestingkit.jats_utils",
            "harvestingkit.minidom_utils",
            "harvestingkit.nlm_utils",
            "harvestingkit.oup_package",
            "harvestingkit.pos_package",
            "harvestingkit.scoap3utils",
            "harvestingkit.springer_crawler",
            "harvestingkit.springer_package",
            "harvestingkit.tests",
            "harvestingkit.tests.aps_package_tests",
            "harvestingkit.tests.bibrecord_tests",
            "harvestingkit.tests.edpsciencespackage_tests",
            "harvestingkit.tests.elsevier_package_tests",
            "harvestingkit.tests.elsevier_scoap3_package_tests",
            "harvestingkit.tests.html_utils_tests",
            "harvestingkit.tests.inspire_cds_package_tests",
            "harvestingkit.tests.jats_utils_tests",
            "harvestingkit.tests.minidom_utils_tests",
            "harvestingkit.tests.pos_package_tests",
            "harvestingkit.tests.utils_tests",
            "harvestingkit.tests.world_scientific_package_tests",
            "harvestingkit.utils",
            "harvestingkit.world_scientific_package"
        ],
        "version": "0.6.20"
    },
    "harvestman": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harvestmedia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harvesttext": {
        "cmdline": [],
        "modules": [
            "harvesttext",
            "harvesttext.download_utils",
            "harvesttext.ent_network",
            "harvesttext.ent_retrieve",
            "harvesttext.harvesttext",
            "harvesttext.parsing",
            "harvesttext.resources",
            "harvesttext.sentiment",
            "harvesttext.summary",
            "harvesttext.word_discover"
        ],
        "version": "0.8"
    },
    "harvey": {
        "cmdline": [],
        "modules": [
            "harvey",
            "harvey.get_tldr",
            "harvey.harvey"
        ],
        "version": "0.0.5"
    },
    "harvey-ci": {
        "cmdline": [],
        "modules": [
            "harvey",
            "harvey.app",
            "harvey.container",
            "harvey.git",
            "harvey.globals",
            "harvey.image",
            "harvey.messages",
            "harvey.pipeline",
            "harvey.stage",
            "harvey.utils",
            "harvey.webhook",
            "test",
            "test.unit",
            "test.unit.test_globals"
        ],
        "version": "0.2.0"
    },
    "harvey-logger": {
        "cmdline": [],
        "modules": [
            "harvey_logger",
            "harvey_logger.logger"
        ],
        "version": "1.41"
    },
    "harveylogger": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harview": {
        "cmdline": [
            "harview"
        ],
        "modules": [],
        "version": "0.2.2"
    },
    "has": {
        "cmdline": [],
        "modules": [
            "has",
            "has.has",
            "has.test_has"
        ],
        "version": "0.0.4"
    },
    "has-distributions": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hasasia": {
        "cmdline": [],
        "modules": [
            "hasasia",
            "hasasia.sensitivity",
            "hasasia.sim",
            "hasasia.skymap",
            "hasasia.utils"
        ],
        "version": "1.1.2"
    },
    "hasattr-safe": {
        "cmdline": [],
        "modules": [
            "hasattr_safe",
            "hasattr_safe.hasattr_safe"
        ],
        "version": "0.1.1"
    },
    "hasel": {
        "cmdline": [],
        "modules": [
            "hasel"
        ],
        "version": "1.0.1"
    },
    "hasemoji": {
        "cmdline": [],
        "modules": [
            "hasemoji"
        ],
        "version": "1.0.1"
    },
    "hash": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hash-benchmark": {
        "cmdline": [],
        "modules": [
            "hash_benchmark",
            "hash_benchmark.management",
            "hash_benchmark.management.commands",
            "hash_benchmark.management.commands.hash_benchmark",
            "hash_benchmark.models"
        ],
        "version": "0.2.0"
    },
    "hash-byte-dedupe": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hash-cache-venv": {
        "cmdline": [],
        "modules": [
            "hash_cache_venv"
        ],
        "version": "0.0.0.post0"
    },
    "hash-checker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hash-dict": {
        "cmdline": [],
        "modules": [
            "hash_dict",
            "hash_dict._key",
            "hash_dict.comparer",
            "hash_dict.hash_dict",
            "hash_dict.hash_set"
        ],
        "version": "0.0.2"
    },
    "hash-id": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.2"
    },
    "hash-me": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hash-ring": {
        "cmdline": [],
        "modules": [
            "hash_ring",
            "hash_ring.hash_ring",
            "hash_ring.memcache_ring"
        ],
        "version": "1.3.1"
    },
    "hash-things": {
        "cmdline": [],
        "modules": [
            "hash_things",
            "hash_things.hash_dict"
        ],
        "version": "0.2.0"
    },
    "hashable": {
        "cmdline": [],
        "modules": [
            "hashable",
            "hashable.equals_builder",
            "hashable.hash_code_builder",
            "hashable.helpers",
            "hashable.tools"
        ],
        "version": "0.1"
    },
    "hashable-collections": {
        "cmdline": [],
        "modules": [
            "hashable_collections",
            "hashable_collections.hashable_collections"
        ],
        "version": "1.1"
    },
    "hashable-df": {
        "cmdline": [],
        "modules": [
            "hashable_df"
        ],
        "version": "0.0.5"
    },
    "hashable-lru-cache": {
        "cmdline": [],
        "modules": [
            "hashable_lru_cache",
            "hashable_lru_cache.hashable_lru_cache"
        ],
        "version": "0.1.4"
    },
    "hashable-ndframes": {
        "cmdline": [],
        "modules": [
            "hashable_ndframes",
            "hashable_ndframes.hashable_ndframes"
        ],
        "version": "0.1.3"
    },
    "hashabledict": {
        "cmdline": [],
        "modules": [
            "HashableDict",
            "HashableDict.HashableDict"
        ],
        "version": "0.3.0"
    },
    "hashandrename": {
        "cmdline": [],
        "modules": [
            "hashandrename"
        ],
        "version": "0.0.1"
    },
    "hashbang": {
        "cmdline": [],
        "modules": [
            "hashbang",
            "hashbang._utils",
            "hashbang.completion",
            "hashbang.hashbang"
        ],
        "version": "0.1.14"
    },
    "hashbrown": {
        "cmdline": [],
        "modules": [
            "hashbrown",
            "hashbrown._DataH",
            "hashbrown._FunctionBasic",
            "hashbrown._HashBrown"
        ],
        "version": "4.3.0"
    },
    "hashcache": {
        "cmdline": [],
        "modules": [
            "hashcache",
            "hashcache..___init__",
            "hashcache.._hashcache",
            "hashcache.hashcache",
            "tests",
            "tests..___init__",
            "tests.._settings",
            "tests.._test_hashcache",
            "tests.settings",
            "tests.test_hashcache"
        ],
        "version": "0.0.1"
    },
    "hashcalclib": {
        "cmdline": [],
        "modules": [
            "hashcalclib",
            "hashcalclib.commonutil",
            "hashcalclib.hashcalclib"
        ],
        "version": "1.6.3"
    },
    "hashcat": {
        "cmdline": [],
        "modules": [
            "hashcat",
            "hashcat.cli"
        ],
        "version": "5.1.0.post3"
    },
    "hashcat-beta": {
        "cmdline": [],
        "modules": [
            "hashcat",
            "hashcat.cli"
        ],
        "version": "5.1.0.post4"
    },
    "hashchain": {
        "cmdline": [],
        "modules": [
            "hashchain",
            "hashchain.ethereum",
            "hashchain.ethereum.connector",
            "hashchain.ethereum.contract",
            "hashchain.ethereum.contract_interface",
            "hashchain.records"
        ],
        "version": "1.0.0"
    },
    "hashchecker": {
        "cmdline": [],
        "modules": [
            "hclib",
            "hclib.core",
            "hclib.core.core_actions",
            "hclib.core.core_objects",
            "hclib.core.exceptions",
            "hclib.core.utils",
            "hclib.hashchecker",
            "hclib.help_strings",
            "tests",
            "tests.core",
            "tests.core.test_core_actions",
            "tests.core.test_core_objects"
        ],
        "version": "1.3"
    },
    "hashcode-bot": {
        "cmdline": [],
        "modules": [
            "hclib",
            "hclib.cli",
            "hclib.config",
            "hclib.context",
            "hclib.judge",
            "hclib.utils"
        ],
        "version": "0.6"
    },
    "hashcrack": {
        "cmdline": [],
        "modules": [
            "hashcrack",
            "hashcrack.add",
            "hashcrack.autoconfig",
            "hashcrack.autoconfig.pcap",
            "hashcrack.autoconfig.rar",
            "hashcrack.autoconfig.seven_zip",
            "hashcrack.autoconfig.shadow",
            "hashcrack.autoconfig.zip",
            "hashcrack.cli",
            "hashcrack.common",
            "hashcrack.config",
            "hashcrack.crack",
            "hashcrack.help",
            "hashcrack.identify",
            "hashcrack.john",
            "hashcrack.set",
            "hashcrack.show",
            "hashcrack.types",
            "hashcrack.version"
        ],
        "version": "0.9"
    },
    "hashcrack-jtr": {
        "cmdline": [],
        "modules": [
            "hashcrack_jtr",
            "hashcrack_jtr.config",
            "hashcrack_jtr.john",
            "hashcrack_jtr.version"
        ],
        "version": "20.10.11"
    },
    "hashdate": {
        "cmdline": [],
        "modules": [
            "hashdate",
            "hashdate.cli"
        ],
        "version": "1.0.3"
    },
    "hashdb": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.beta"
    },
    "hashdb2": {
        "cmdline": [],
        "modules": [
            "hashdb2",
            "hashdb2.command_comp",
            "hashdb2.command_hash",
            "hashdb2.command_line",
            "hashdb2.escape",
            "hashdb2.hash",
            "hashdb2.orm",
            "hashdb2.walk"
        ],
        "version": "1.0"
    },
    "hashdd": {
        "cmdline": [
            "hashdd"
        ],
        "modules": [
            "hashdd",
            "hashdd.algorithms",
            "hashdd.algorithms.algorithm",
            "hashdd.algorithms.hashdd_adler32",
            "hashdd.algorithms.hashdd_content_hash",
            "hashdd.algorithms.hashdd_crc32",
            "hashdd.algorithms.hashdd_crc32b",
            "hashdd.algorithms.hashdd_gost",
            "hashdd.algorithms.hashdd_haval128",
            "hashdd.algorithms.hashdd_haval160",
            "hashdd.algorithms.hashdd_haval192",
            "hashdd.algorithms.hashdd_haval224",
            "hashdd.algorithms.hashdd_haval256",
            "hashdd.algorithms.hashdd_md5",
            "hashdd.algorithms.hashdd_md5w",
            "hashdd.algorithms.hashdd_ripemd128",
            "hashdd.algorithms.hashdd_ripemd256",
            "hashdd.algorithms.hashdd_ripemd320",
            "hashdd.algorithms.hashdd_sdhash",
            "hashdd.algorithms.hashdd_sha1",
            "hashdd.algorithms.hashdd_sha224",
            "hashdd.algorithms.hashdd_sha256",
            "hashdd.algorithms.hashdd_sha384",
            "hashdd.algorithms.hashdd_sha3_224",
            "hashdd.algorithms.hashdd_sha3_256",
            "hashdd.algorithms.hashdd_sha3_384",
            "hashdd.algorithms.hashdd_sha3_512",
            "hashdd.algorithms.hashdd_sha512",
            "hashdd.algorithms.hashdd_snefru128",
            "hashdd.algorithms.hashdd_snefru256",
            "hashdd.algorithms.hashdd_ssdeep",
            "hashdd.algorithms.hashdd_tiger128",
            "hashdd.algorithms.hashdd_tiger160",
            "hashdd.algorithms.hashdd_tiger192",
            "hashdd.algorithms.hashdd_tlsh",
            "hashdd.algorithms.hashdd_whirlpool",
            "hashdd.algorithms.sdbf_class",
            "hashdd.api",
            "hashdd.api.client",
            "hashdd.constants",
            "hashdd.decompressor",
            "hashdd.decompressor.decompressor",
            "hashdd.decompressor.formats",
            "hashdd.decompressor.formats.compressed_file",
            "hashdd.decompressor.formats.compression",
            "hashdd.decompressor.formats.zip_file",
            "hashdd.features",
            "hashdd.features.feature",
            "hashdd.features.hashdd_children",
            "hashdd.features.hashdd_file_absolute_path",
            "hashdd.features.hashdd_file_name",
            "hashdd.features.hashdd_filemagic",
            "hashdd.features.hashdd_known_level",
            "hashdd.features.hashdd_mime",
            "hashdd.features.hashdd_opsystem_code",
            "hashdd.features.hashdd_parents",
            "hashdd.features.hashdd_plaintext",
            "hashdd.features.hashdd_product_code",
            "hashdd.features.hashdd_size",
            "hashdd.features.hashdd_source_urls",
            "hashdd.features.hashdd_uuid",
            "hashdd.hashdd",
            "hashdd.tests",
            "hashdd.tests.test_algorithms",
            "hashdd.tests.test_features",
            "hashdd.tests.test_selective_modules",
            "hashdd.tests.test_validation",
            "hashdd.utils"
        ],
        "version": "0.0.19"
    },
    "hashdex": {
        "cmdline": [],
        "modules": [
            "hashdex",
            "hashdex.cli",
            "hashdex.files",
            "hashdex.indexer"
        ],
        "version": "0.6.0"
    },
    "hashdial": {
        "cmdline": [],
        "modules": [
            "hashdial"
        ],
        "version": "1.0.3"
    },
    "hashdir": {
        "cmdline": [],
        "modules": [
            "hashdir",
            "hashdir.cli",
            "hashdir.util_hash",
            "hashdir.util_logging"
        ],
        "version": "0.19"
    },
    "hashdist": {
        "cmdline": [
            "hit",
            "hit-check-libs"
        ],
        "modules": [
            "hashdist",
            "hashdist.cli",
            "hashdist.cli.build_tools_cli",
            "hashdist.cli.frontend_cli",
            "hashdist.cli.ipy_shell",
            "hashdist.cli.main",
            "hashdist.cli.manage_store_cli",
            "hashdist.cli.skeleton",
            "hashdist.cli.source_cache_cli",
            "hashdist.cli.test",
            "hashdist.cli.test.test_build_tools",
            "hashdist.cli.utils",
            "hashdist.core",
            "hashdist.core.ant_glob",
            "hashdist.core.build_store",
            "hashdist.core.build_tools",
            "hashdist.core.cache",
            "hashdist.core.common",
            "hashdist.core.decorators",
            "hashdist.core.fileutils",
            "hashdist.core.hasher",
            "hashdist.core.hit_recipe",
            "hashdist.core.links",
            "hashdist.core.run_job",
            "hashdist.core.source_cache",
            "hashdist.core.test",
            "hashdist.core.test.test_ant_glob",
            "hashdist.core.test.test_build_store",
            "hashdist.core.test.test_build_tools",
            "hashdist.core.test.test_cache",
            "hashdist.core.test.test_fileutils",
            "hashdist.core.test.test_hasher",
            "hashdist.core.test.test_hit_recipe",
            "hashdist.core.test.test_links",
            "hashdist.core.test.test_run_job",
            "hashdist.core.test.test_shebang",
            "hashdist.core.test.test_source_cache",
            "hashdist.core.test.utils",
            "hashdist.deps",
            "hashdist.deps.argparse",
            "hashdist.deps.jsonschema",
            "hashdist.deps.jsonschema._format",
            "hashdist.deps.jsonschema._utils",
            "hashdist.deps.jsonschema._validators",
            "hashdist.deps.jsonschema.compat",
            "hashdist.deps.jsonschema.exceptions",
            "hashdist.deps.jsonschema.validators",
            "hashdist.deps.sh",
            "hashdist.deps.yaml",
            "hashdist.deps.yaml.composer",
            "hashdist.deps.yaml.constructor",
            "hashdist.deps.yaml.dumper",
            "hashdist.deps.yaml.emitter",
            "hashdist.deps.yaml.error",
            "hashdist.deps.yaml.events",
            "hashdist.deps.yaml.loader",
            "hashdist.deps.yaml.nodes",
            "hashdist.deps.yaml.parser",
            "hashdist.deps.yaml.reader",
            "hashdist.deps.yaml.representer",
            "hashdist.deps.yaml.resolver",
            "hashdist.deps.yaml.scanner",
            "hashdist.deps.yaml.serializer",
            "hashdist.deps.yaml.tokens",
            "hashdist.formats",
            "hashdist.formats.config",
            "hashdist.formats.marked_yaml",
            "hashdist.formats.templated_stream",
            "hashdist.formats.tests",
            "hashdist.formats.tests.test_config",
            "hashdist.formats.tests.test_marked_yaml",
            "hashdist.hdist_logging",
            "hashdist.host",
            "hashdist.host.debian",
            "hashdist.host.host",
            "hashdist.host.test",
            "hashdist.host.test.test_debian",
            "hashdist.spec",
            "hashdist.spec.builder",
            "hashdist.spec.exceptions",
            "hashdist.spec.hook",
            "hashdist.spec.hook_api",
            "hashdist.spec.package",
            "hashdist.spec.package_loader",
            "hashdist.spec.profile",
            "hashdist.spec.tests",
            "hashdist.spec.tests.test_builder",
            "hashdist.spec.tests.test_hooks",
            "hashdist.spec.tests.test_package",
            "hashdist.spec.tests.test_profile",
            "hashdist.spec.tests.test_shebang",
            "hashdist.spec.tests.test_stack",
            "hashdist.spec.tests.test_utils",
            "hashdist.spec.utils",
            "hashdist.test"
        ],
        "version": "0.3"
    },
    "hashedassets": {
        "cmdline": [],
        "modules": [
            "hashedassets",
            "hashedassets.rewrite",
            "hashedassets.serializer",
            "hashedassets.tests"
        ],
        "version": "0.3.2"
    },
    "hashedindex": {
        "cmdline": [],
        "modules": [
            "hashedindex",
            "hashedindex.textparser"
        ],
        "version": "0.9.0"
    },
    "hashedixsearch": {
        "cmdline": [],
        "modules": [
            "hashedixsearch",
            "hashedixsearch._internal",
            "hashedixsearch.search"
        ],
        "version": "0.2.7"
    },
    "hashedwords": {
        "cmdline": [],
        "modules": [
            "hashed"
        ],
        "version": "2.0.0"
    },
    "hasher": {
        "cmdline": [],
        "modules": [
            "hasher",
            "hasher.app",
            "hasher.hashes",
            "hasher.main",
            "hasher_test",
            "hasher_test.test_hasher"
        ],
        "version": "2.0.1"
    },
    "hasheroku": {
        "cmdline": [],
        "modules": [
            "hasheroku",
            "hasheroku.hasheroku"
        ],
        "version": "0.1.2"
    },
    "hashes": {
        "cmdline": [],
        "modules": [
            "hashes",
            "hashes.common",
            "hashes.common.helpers",
            "hashes.common.orchestra",
            "hashes.ops",
            "hashes.ops.bcrypt",
            "hashes.ops.cisco_pix",
            "hashes.ops.cisco_type7",
            "hashes.ops.ldap_md5",
            "hashes.ops.ldap_salted_md5",
            "hashes.ops.ldap_salted_sha1",
            "hashes.ops.ldap_sha1",
            "hashes.ops.md5",
            "hashes.ops.md5_crypt",
            "hashes.ops.msdcc",
            "hashes.ops.msdcc2",
            "hashes.ops.mssql2000",
            "hashes.ops.mssql2005",
            "hashes.ops.mysql323",
            "hashes.ops.mysql41",
            "hashes.ops.nt",
            "hashes.ops.oracle10",
            "hashes.ops.oracle11",
            "hashes.ops.postgres_md5",
            "hashes.ops.sha1",
            "hashes.ops.sha1_crypt",
            "hashes.ops.sha256",
            "hashes.ops.sha256_crypt",
            "hashes.ops.sha512",
            "hashes.ops.sha512_crypt"
        ],
        "version": "1.1.0"
    },
    "hashextender": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hashfile": {
        "cmdline": [],
        "modules": [
            "hashfile"
        ],
        "version": "2.1.5"
    },
    "hashfs": {
        "cmdline": [],
        "modules": [
            "hashfs",
            "hashfs.__meta__",
            "hashfs._compat",
            "hashfs.hashfs",
            "hashfs.utils"
        ],
        "version": "0.7.2"
    },
    "hashget": {
        "cmdline": [
            "hashget",
            "hashget-admin"
        ],
        "modules": [
            "hashget",
            "hashget.anchor",
            "hashget.cacheget",
            "hashget.counters",
            "hashget.debian",
            "hashget.exceptions",
            "hashget.file",
            "hashget.filepool",
            "hashget.globlist",
            "hashget.hashdb",
            "hashget.hashpackage",
            "hashget.hashutils",
            "hashget.heuristic_base",
            "hashget.heuristics.debian",
            "hashget.heuristics.hint",
            "hashget.operations",
            "hashget.package",
            "hashget.restorefile",
            "hashget.singlelist",
            "hashget.submiturl",
            "hashget.utils",
            "hashget.version"
        ],
        "version": "0.164"
    },
    "hashget-kernel-org": {
        "cmdline": [],
        "modules": [
            "hashget.heuristics.kernel_org"
        ],
        "version": "0.7"
    },
    "hashheap": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hashicon": {
        "cmdline": [],
        "modules": [
            "hashicon",
            "hashicon.hashicon"
        ],
        "version": "0.1.1"
    },
    "hashid": {
        "cmdline": [],
        "modules": [
            "hashid"
        ],
        "version": "3.1.4"
    },
    "hashids": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.1"
    },
    "hashidtools": {
        "cmdline": [],
        "modules": [
            "hashidtools",
            "hashidtools.exceptions",
            "hashidtools.fields",
            "hashidtools.interfaces",
            "hashidtools.types",
            "tests",
            "tests.test_fields",
            "tests.test_types"
        ],
        "version": "1.0.2"
    },
    "hashify": {
        "cmdline": [],
        "modules": [
            "hashify"
        ],
        "version": "1.5"
    },
    "hashin": {
        "cmdline": [],
        "modules": [
            "hashin"
        ],
        "version": "0.15.0"
    },
    "hashin-pyup": {
        "cmdline": [],
        "modules": [
            "hashin"
        ],
        "version": "0.7.2"
    },
    "hashing": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hashish": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hashishthaci": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hashit": {
        "cmdline": [],
        "modules": [
            "hashit",
            "hashit.detection",
            "hashit.extra",
            "hashit.version"
        ],
        "version": "3.5.3"
    },
    "hashivault-vars": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "hashivaultlib": {
        "cmdline": [],
        "modules": [
            "_CI",
            "_CI.configuration",
            "_CI.configuration.configuration",
            "_CI.library",
            "_CI.library.patch",
            "_CI.scripts",
            "_CI.scripts.bootstrap",
            "_CI.scripts.build",
            "_CI.scripts.document",
            "_CI.scripts.graph",
            "_CI.scripts.lint",
            "_CI.scripts.tag",
            "_CI.scripts.test",
            "_CI.scripts.update",
            "_CI.scripts.upload",
            "hashivaultlib",
            "hashivaultlib._version",
            "hashivaultlib.hashivaultlib",
            "hashivaultlib.hashivaultlibexceptions"
        ],
        "version": "1.1.8"
    },
    "hashjack": {
        "cmdline": [
            "hashjack"
        ],
        "modules": [
            "hashjack_tools",
            "hashjack_tools.colors",
            "hashjack_tools.error_messages"
        ],
        "version": "1.0.4"
    },
    "hashkernel": {
        "cmdline": [],
        "modules": [
            "hashkernel",
            "hashkernel.auto_wire",
            "hashkernel.bakery",
            "hashkernel.bakery.aio_client",
            "hashkernel.bakery.aio_server",
            "hashkernel.bakery.cask",
            "hashkernel.bakery.kernel",
            "hashkernel.bakery.msg_server",
            "hashkernel.bakery.path",
            "hashkernel.bakery.rack",
            "hashkernel.base_x",
            "hashkernel.cli",
            "hashkernel.docs",
            "hashkernel.executible",
            "hashkernel.file_types",
            "hashkernel.files",
            "hashkernel.hashing",
            "hashkernel.kernel",
            "hashkernel.log_box",
            "hashkernel.logic",
            "hashkernel.otable",
            "hashkernel.packer",
            "hashkernel.plugins",
            "hashkernel.smattr",
            "hashkernel.time",
            "hashkernel.typings"
        ],
        "version": "2019.10"
    },
    "hashkeva-distributions": {
        "cmdline": [],
        "modules": [
            "hashkeva-distributions",
            "hashkeva-distributions.Binomialdistribution",
            "hashkeva-distributions.Gaussiandistribution",
            "hashkeva-distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hashlib": {
        "cmdline": [],
        "modules": [
            "hashlib"
        ],
        "version": "20081119"
    },
    "hashlib-additional": {
        "cmdline": [],
        "modules": [
            "hashlib_additional",
            "tests",
            "tests.test_hashlib_additional"
        ],
        "version": "1.0.1"
    },
    "hashlist-nicknackgus": {
        "cmdline": [],
        "modules": [
            "hashlist",
            "hashlist.hashlist"
        ],
        "version": "1.0.0"
    },
    "hashlite": {
        "cmdline": [],
        "modules": [
            "hashlite",
            "hashlite.decorators",
            "hashlite.shell",
            "hashlite.test_script",
            "hashlite.utils",
            "hashlite.version"
        ],
        "version": "0.0.3"
    },
    "hashmerge": {
        "cmdline": [],
        "modules": [
            "hashmerge"
        ],
        "version": "0.2"
    },
    "hashmoji": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "hashpass": {
        "cmdline": [],
        "modules": [
            "main"
        ],
        "version": "0.1.1"
    },
    "hashpipe": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.2"
    },
    "hashprint": {
        "cmdline": [],
        "modules": [
            "hashprint"
        ],
        "version": "1.0.1"
    },
    "hashpumpy": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "hashranking": {
        "cmdline": [],
        "modules": [
            "hashranking",
            "hashranking.cpp_extension_wrapper",
            "hashranking.numpy_implementation"
        ],
        "version": "0.0.1"
    },
    "hashring": {
        "cmdline": [],
        "modules": [
            "hashring",
            "hashring.hashring"
        ],
        "version": "1.5.1"
    },
    "hashrocketsyntax": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hashstate": {
        "cmdline": [],
        "modules": [
            "hashstate"
        ],
        "version": "0.2.1"
    },
    "hashstatic": {
        "cmdline": [],
        "modules": [
            "hashstatic"
        ],
        "version": "0.2"
    },
    "hashstore": {
        "cmdline": [],
        "modules": [
            "hashstore",
            "hashstore.base_x",
            "hashstore.client",
            "hashstore.db",
            "hashstore.dir_scan",
            "hashstore.local_store",
            "hashstore.mount",
            "hashstore.mymime",
            "hashstore.py2",
            "hashstore.server",
            "hashstore.session",
            "hashstore.shash",
            "hashstore.shashd",
            "hashstore.udk",
            "hashstore.utils"
        ],
        "version": "0.0.12"
    },
    "hashsum": {
        "cmdline": [],
        "modules": [
            "hashsum"
        ],
        "version": "1.3.0"
    },
    "hashtable": {
        "cmdline": [],
        "modules": [
            "hash",
            "hash.hashtable"
        ],
        "version": "0.1"
    },
    "hashtag": {
        "cmdline": [],
        "modules": [
            "hashTag",
            "hashTag.DBConnectionHandler",
            "hashTag.DBConnectiontests",
            "hashTag.DataFetchEngine",
            "hashTag.Datastore",
            "hashTag.HashTag",
            "hashTag.Parser",
            "hashTag.QueryDispatch",
            "hashTag.TagSearch",
            "hashTag.dbInitlizer",
            "hashTag.sample_test"
        ],
        "version": "0.1"
    },
    "hashtools": {
        "cmdline": [],
        "modules": [
            "hashtools",
            "tests",
            "tests.test_hashtools"
        ],
        "version": "0.3.0"
    },
    "hashutils": {
        "cmdline": [],
        "modules": [
            "hashutils",
            "hashutils.hashutils"
        ],
        "version": "0.0.3"
    },
    "hashver": {
        "cmdline": [],
        "modules": [
            "hashver",
            "hashver.hashver",
            "hashver.test_hashver"
        ],
        "version": "0.0.2"
    },
    "hashversion": {
        "cmdline": [],
        "modules": [
            "hashversion",
            "hashversion.cli"
        ],
        "version": "0.4.0"
    },
    "hashwrap": {
        "cmdline": [],
        "modules": [
            "hashwrap",
            "hashwrap.hash_utils",
            "hashwrap.hashwrapper",
            "hashwrap.read_phase_formats",
            "hashwrap.read_sp_ratios"
        ],
        "version": "0.0.2"
    },
    "hashwrapper": {
        "cmdline": [],
        "modules": [
            "hashwrapper",
            "hashwrapper.hashwrapper"
        ],
        "version": "0.51"
    },
    "hashy": {
        "cmdline": [],
        "modules": [
            "hashy",
            "hashy.hashy"
        ],
        "version": "0.0.1"
    },
    "hasitchanged": {
        "cmdline": [],
        "modules": [
            "hasItChanged"
        ],
        "version": "0.0.5"
    },
    "hask3": {
        "cmdline": [],
        "modules": [
            "hask",
            "hask.Control",
            "hask.Control.Applicative",
            "hask.Control.Monad",
            "hask.Data",
            "hask.Data.Char",
            "hask.Data.Either",
            "hask.Data.Eq",
            "hask.Data.Foldable",
            "hask.Data.Functor",
            "hask.Data.List",
            "hask.Data.Maybe",
            "hask.Data.Monoid",
            "hask.Data.Num",
            "hask.Data.Ord",
            "hask.Data.Ratio",
            "hask.Data.String",
            "hask.Data.Traversable",
            "hask.Data.Tuple",
            "hask.Prelude",
            "hask.Python",
            "hask.Python.builtins",
            "hask.lang",
            "hask.lang.hindley_milner",
            "hask.lang.lazylist",
            "hask.lang.syntax",
            "hask.lang.type_system",
            "hask.lang.typeclasses"
        ],
        "version": "0.1.1"
    },
    "haskell": {
        "cmdline": [],
        "modules": [
            "haskell"
        ],
        "version": "0.0.1"
    },
    "haskelllintbear": {
        "cmdline": [],
        "modules": [
            "coalaHaskellLintBear",
            "coalaHaskellLintBear.HaskellLintBear"
        ],
        "version": "0.10.0"
    },
    "haskpy": {
        "cmdline": [],
        "modules": [
            "haskpy",
            "haskpy._meta",
            "haskpy._version",
            "haskpy.conftest",
            "haskpy.functions",
            "haskpy.optics",
            "haskpy.testing",
            "haskpy.typeclasses",
            "haskpy.typeclasses.applicative",
            "haskpy.typeclasses.cartesian",
            "haskpy.typeclasses.cocartesian",
            "haskpy.typeclasses.contravariant",
            "haskpy.typeclasses.foldable",
            "haskpy.typeclasses.functor",
            "haskpy.typeclasses.hashable",
            "haskpy.typeclasses.monad",
            "haskpy.typeclasses.monoid",
            "haskpy.typeclasses.patternmatchable",
            "haskpy.typeclasses.profunctor",
            "haskpy.typeclasses.semigroup",
            "haskpy.typeclasses.typeclass",
            "haskpy.types",
            "haskpy.types.compose",
            "haskpy.types.either",
            "haskpy.types.hypothesis",
            "haskpy.types.identity",
            "haskpy.types.list",
            "haskpy.types.maybe",
            "haskpy.types.monoids",
            "haskpy.utils"
        ],
        "version": "0.1.3"
    },
    "hasl": {
        "cmdline": [],
        "modules": [
            "hasl",
            "hasl.exceptions",
            "hasl.hasl",
            "hasl.version"
        ],
        "version": "2.3.1"
    },
    "hasoffers": {
        "cmdline": [],
        "modules": [
            "hasoffers",
            "hasoffers.api"
        ],
        "version": "0.2.1"
    },
    "haspirater": {
        "cmdline": [],
        "modules": [
            "haspirater",
            "haspirater.buildtrie",
            "haspirater.buildtrie_list",
            "haspirater.compresstrie",
            "haspirater.haspirater",
            "haspirater.leavestrie",
            "haspirater.majoritytrie",
            "haspirater.trie2dot",
            "haspirater.uptrie"
        ],
        "version": "0.2"
    },
    "hass-apps": {
        "cmdline": [],
        "modules": [
            "hass_apps",
            "hass_apps.common",
            "hass_apps.loader",
            "hass_apps.schedy",
            "hass_apps.schedy.actor",
            "hass_apps.schedy.actor.base",
            "hass_apps.schedy.actor.custom",
            "hass_apps.schedy.actor.generic",
            "hass_apps.schedy.actor.generic2",
            "hass_apps.schedy.actor.switch",
            "hass_apps.schedy.actor.thermostat",
            "hass_apps.schedy.app",
            "hass_apps.schedy.config",
            "hass_apps.schedy.expression",
            "hass_apps.schedy.expression.helpers",
            "hass_apps.schedy.expression.types",
            "hass_apps.schedy.room",
            "hass_apps.schedy.schedule",
            "hass_apps.schedy.stats",
            "hass_apps.schedy.util"
        ],
        "version": "0.20200319.0"
    },
    "hass-client": {
        "cmdline": [],
        "modules": [
            "hass_client"
        ],
        "version": "0.0.6"
    },
    "hass-configurator": {
        "cmdline": [],
        "modules": [
            "hass_configurator",
            "hass_configurator.configurator"
        ],
        "version": "0.4.0"
    },
    "hass-data-detective": {
        "cmdline": [],
        "modules": [
            "detective",
            "detective.auth",
            "detective.config",
            "detective.core",
            "detective.functions",
            "detective.time"
        ],
        "version": "2.3"
    },
    "hass-heaty": {
        "cmdline": [],
        "modules": [
            "hass_heaty",
            "hass_heaty.app",
            "hass_heaty.config",
            "hass_heaty.expr",
            "hass_heaty.schedule",
            "hass_heaty.util"
        ],
        "version": "0.8.3"
    },
    "hass-home-assistant-frontend": {
        "cmdline": [],
        "modules": [
            "hass_frontend"
        ],
        "version": "20200427.3"
    },
    "hass-nabucasa": {
        "cmdline": [],
        "modules": [
            "hass_nabucasa",
            "hass_nabucasa.account_link",
            "hass_nabucasa.acme",
            "hass_nabucasa.auth",
            "hass_nabucasa.client",
            "hass_nabucasa.cloud_api",
            "hass_nabucasa.cloudhooks",
            "hass_nabucasa.const",
            "hass_nabucasa.google_report_state",
            "hass_nabucasa.iot",
            "hass_nabucasa.iot_base",
            "hass_nabucasa.remote",
            "hass_nabucasa.thingtalk",
            "hass_nabucasa.utils",
            "hass_nabucasa.voice"
        ],
        "version": "0.37.0"
    },
    "hass-smartthings-remove": {
        "cmdline": [],
        "modules": [
            "hass_smartthings_remove",
            "hass_smartthings_remove.remove"
        ],
        "version": "1.0.1"
    },
    "hass-splunk": {
        "cmdline": [],
        "modules": [
            "hass_splunk"
        ],
        "version": "0.1.1"
    },
    "hass-wh-triggers": {
        "cmdline": [],
        "modules": [
            "hass_wh_triggers",
            "hass_wh_triggers.app",
            "hass_wh_triggers.config",
            "hass_wh_triggers.db",
            "hass_wh_triggers.fido2",
            "hass_wh_triggers.fido2._pyu2f",
            "hass_wh_triggers.fido2._pyu2f.base",
            "hass_wh_triggers.fido2._pyu2f.freebsd",
            "hass_wh_triggers.fido2._pyu2f.hidtransport",
            "hass_wh_triggers.fido2._pyu2f.linux",
            "hass_wh_triggers.fido2._pyu2f.macos",
            "hass_wh_triggers.fido2._pyu2f.openbsd",
            "hass_wh_triggers.fido2._pyu2f.windows",
            "hass_wh_triggers.fido2._tpm",
            "hass_wh_triggers.fido2.attestation",
            "hass_wh_triggers.fido2.cbor",
            "hass_wh_triggers.fido2.client",
            "hass_wh_triggers.fido2.cose",
            "hass_wh_triggers.fido2.ctap",
            "hass_wh_triggers.fido2.ctap1",
            "hass_wh_triggers.fido2.ctap2",
            "hass_wh_triggers.fido2.extensions",
            "hass_wh_triggers.fido2.hid",
            "hass_wh_triggers.fido2.nfc",
            "hass_wh_triggers.fido2.pcsc",
            "hass_wh_triggers.fido2.rpid",
            "hass_wh_triggers.fido2.server",
            "hass_wh_triggers.fido2.utils",
            "hass_wh_triggers.fido2.webauthn",
            "hass_wh_triggers.fido2.win_api",
            "hass_wh_triggers.models",
            "hass_wh_triggers.util"
        ],
        "version": "0.0.7"
    },
    "hassdevice": {
        "cmdline": [],
        "modules": [
            "hassdevice",
            "hassdevice.devices",
            "hassdevice.hosts"
        ],
        "version": "0.1.4"
    },
    "hassio-repo-updater": {
        "cmdline": [],
        "modules": [
            "repositoryupdater",
            "repositoryupdater.addon",
            "repositoryupdater.cli",
            "repositoryupdater.const",
            "repositoryupdater.dockerhub",
            "repositoryupdater.github",
            "repositoryupdater.repository",
            "script",
            "script.version_bump",
            "tests",
            "tests.test_dockerhub"
        ],
        "version": "0.5.2"
    },
    "hassmart-home-assistant-frontend": {
        "cmdline": [],
        "modules": [
            "hass_frontend",
            "hass_frontend_es5"
        ],
        "version": "20180310.0"
    },
    "hassmart-homeassistant": {
        "cmdline": [],
        "modules": [
            "homeassistant",
            "homeassistant.bootstrap",
            "homeassistant.components",
            "homeassistant.components.abode",
            "homeassistant.components.ads",
            "homeassistant.components.alarm_control_panel",
            "homeassistant.components.alarm_control_panel.abode",
            "homeassistant.components.alarm_control_panel.alarmdecoder",
            "homeassistant.components.alarm_control_panel.alarmdotcom",
            "homeassistant.components.alarm_control_panel.arlo",
            "homeassistant.components.alarm_control_panel.canary",
            "homeassistant.components.alarm_control_panel.concord232",
            "homeassistant.components.alarm_control_panel.demo",
            "homeassistant.components.alarm_control_panel.egardia",
            "homeassistant.components.alarm_control_panel.envisalink",
            "homeassistant.components.alarm_control_panel.ialarm",
            "homeassistant.components.alarm_control_panel.manual",
            "homeassistant.components.alarm_control_panel.manual_mqtt",
            "homeassistant.components.alarm_control_panel.mqtt",
            "homeassistant.components.alarm_control_panel.nx584",
            "homeassistant.components.alarm_control_panel.satel_integra",
            "homeassistant.components.alarm_control_panel.simplisafe",
            "homeassistant.components.alarm_control_panel.spc",
            "homeassistant.components.alarm_control_panel.totalconnect",
            "homeassistant.components.alarm_control_panel.verisure",
            "homeassistant.components.alarm_control_panel.wink",
            "homeassistant.components.alarmdecoder",
            "homeassistant.components.alert",
            "homeassistant.components.alexa",
            "homeassistant.components.alexa.const",
            "homeassistant.components.alexa.flash_briefings",
            "homeassistant.components.alexa.intent",
            "homeassistant.components.alexa.smart_home",
            "homeassistant.components.amcrest",
            "homeassistant.components.android_ip_webcam",
            "homeassistant.components.apcupsd",
            "homeassistant.components.api",
            "homeassistant.components.apple_tv",
            "homeassistant.components.arduino",
            "homeassistant.components.arlo",
            "homeassistant.components.asterisk_mbox",
            "homeassistant.components.august",
            "homeassistant.components.automation",
            "homeassistant.components.automation.event",
            "homeassistant.components.automation.homeassistant",
            "homeassistant.components.automation.litejet",
            "homeassistant.components.automation.mqtt",
            "homeassistant.components.automation.numeric_state",
            "homeassistant.components.automation.state",
            "homeassistant.components.automation.sun",
            "homeassistant.components.automation.template",
            "homeassistant.components.automation.time",
            "homeassistant.components.automation.zone",
            "homeassistant.components.axis",
            "homeassistant.components.bbb_gpio",
            "homeassistant.components.binary_sensor",
            "homeassistant.components.binary_sensor.abode",
            "homeassistant.components.binary_sensor.ads",
            "homeassistant.components.binary_sensor.alarmdecoder",
            "homeassistant.components.binary_sensor.android_ip_webcam",
            "homeassistant.components.binary_sensor.apcupsd",
            "homeassistant.components.binary_sensor.arest",
            "homeassistant.components.binary_sensor.august",
            "homeassistant.components.binary_sensor.aurora",
            "homeassistant.components.binary_sensor.axis",
            "homeassistant.components.binary_sensor.bayesian",
            "homeassistant.components.binary_sensor.bbb_gpio",
            "homeassistant.components.binary_sensor.blink",
            "homeassistant.components.binary_sensor.bloomsky",
            "homeassistant.components.binary_sensor.command_line",
            "homeassistant.components.binary_sensor.concord232",
            "homeassistant.components.binary_sensor.deconz",
            "homeassistant.components.binary_sensor.demo",
            "homeassistant.components.binary_sensor.digital_ocean",
            "homeassistant.components.binary_sensor.ecobee",
            "homeassistant.components.binary_sensor.egardia",
            "homeassistant.components.binary_sensor.eight_sleep",
            "homeassistant.components.binary_sensor.enocean",
            "homeassistant.components.binary_sensor.envisalink",
            "homeassistant.components.binary_sensor.ffmpeg_motion",
            "homeassistant.components.binary_sensor.ffmpeg_noise",
            "homeassistant.components.binary_sensor.flic",
            "homeassistant.components.binary_sensor.gc100",
            "homeassistant.components.binary_sensor.hikvision",
            "homeassistant.components.binary_sensor.hive",
            "homeassistant.components.binary_sensor.homematic",
            "homeassistant.components.binary_sensor.ihc",
            "homeassistant.components.binary_sensor.insteon_plm",
            "homeassistant.components.binary_sensor.iss",
            "homeassistant.components.binary_sensor.isy994",
            "homeassistant.components.binary_sensor.knx",
            "homeassistant.components.binary_sensor.linode",
            "homeassistant.components.binary_sensor.maxcube",
            "homeassistant.components.binary_sensor.mercedesme",
            "homeassistant.components.binary_sensor.modbus",
            "homeassistant.components.binary_sensor.mqtt",
            "homeassistant.components.binary_sensor.mychevy",
            "homeassistant.components.binary_sensor.mysensors",
            "homeassistant.components.binary_sensor.mystrom",
            "homeassistant.components.binary_sensor.nest",
            "homeassistant.components.binary_sensor.netatmo",
            "homeassistant.components.binary_sensor.nx584",
            "homeassistant.components.binary_sensor.octoprint",
            "homeassistant.components.binary_sensor.pilight",
            "homeassistant.components.binary_sensor.ping",
            "homeassistant.components.binary_sensor.raincloud",
            "homeassistant.components.binary_sensor.random",
            "homeassistant.components.binary_sensor.raspihats",
            "homeassistant.components.binary_sensor.rest",
            "homeassistant.components.binary_sensor.rfxtrx",
            "homeassistant.components.binary_sensor.ring",
            "homeassistant.components.binary_sensor.rpi_gpio",
            "homeassistant.components.binary_sensor.rpi_pfio",
            "homeassistant.components.binary_sensor.satel_integra",
            "homeassistant.components.binary_sensor.skybell",
            "homeassistant.components.binary_sensor.sleepiq",
            "homeassistant.components.binary_sensor.spc",
            "homeassistant.components.binary_sensor.tapsaff",
            "homeassistant.components.binary_sensor.tcp",
            "homeassistant.components.binary_sensor.tellduslive",
            "homeassistant.components.binary_sensor.template",
            "homeassistant.components.binary_sensor.tesla",
            "homeassistant.components.binary_sensor.threshold",
            "homeassistant.components.binary_sensor.trend",
            "homeassistant.components.binary_sensor.upcloud",
            "homeassistant.components.binary_sensor.velbus",
            "homeassistant.components.binary_sensor.vera",
            "homeassistant.components.binary_sensor.verisure",
            "homeassistant.components.binary_sensor.volvooncall",
            "homeassistant.components.binary_sensor.vultr",
            "homeassistant.components.binary_sensor.wemo",
            "homeassistant.components.binary_sensor.wink",
            "homeassistant.components.binary_sensor.workday",
            "homeassistant.components.binary_sensor.xiaomi_aqara",
            "homeassistant.components.binary_sensor.zha",
            "homeassistant.components.binary_sensor.zigbee",
            "homeassistant.components.binary_sensor.zwave",
            "homeassistant.components.blink",
            "homeassistant.components.bloomsky",
            "homeassistant.components.bmw_connected_drive",
            "homeassistant.components.browser",
            "homeassistant.components.calendar",
            "homeassistant.components.calendar.caldav",
            "homeassistant.components.calendar.demo",
            "homeassistant.components.calendar.google",
            "homeassistant.components.calendar.todoist",
            "homeassistant.components.camera",
            "homeassistant.components.camera.abode",
            "homeassistant.components.camera.amcrest",
            "homeassistant.components.camera.arlo",
            "homeassistant.components.camera.august",
            "homeassistant.components.camera.axis",
            "homeassistant.components.camera.blink",
            "homeassistant.components.camera.bloomsky",
            "homeassistant.components.camera.canary",
            "homeassistant.components.camera.demo",
            "homeassistant.components.camera.doorbird",
            "homeassistant.components.camera.ffmpeg",
            "homeassistant.components.camera.foscam",
            "homeassistant.components.camera.generic",
            "homeassistant.components.camera.local_file",
            "homeassistant.components.camera.mjpeg",
            "homeassistant.components.camera.mqtt",
            "homeassistant.components.camera.neato",
            "homeassistant.components.camera.nest",
            "homeassistant.components.camera.netatmo",
            "homeassistant.components.camera.onvif",
            "homeassistant.components.camera.proxy",
            "homeassistant.components.camera.ring",
            "homeassistant.components.camera.rpi_camera",
            "homeassistant.components.camera.skybell",
            "homeassistant.components.camera.synology",
            "homeassistant.components.camera.usps",
            "homeassistant.components.camera.uvc",
            "homeassistant.components.camera.verisure",
            "homeassistant.components.camera.xeoma",
            "homeassistant.components.camera.yi",
            "homeassistant.components.camera.zoneminder",
            "homeassistant.components.canary",
            "homeassistant.components.climate",
            "homeassistant.components.climate.daikin",
            "homeassistant.components.climate.demo",
            "homeassistant.components.climate.ecobee",
            "homeassistant.components.climate.econet",
            "homeassistant.components.climate.ephember",
            "homeassistant.components.climate.eq3btsmart",
            "homeassistant.components.climate.flexit",
            "homeassistant.components.climate.generic_thermostat",
            "homeassistant.components.climate.heatmiser",
            "homeassistant.components.climate.hive",
            "homeassistant.components.climate.homematic",
            "homeassistant.components.climate.honeywell",
            "homeassistant.components.climate.knx",
            "homeassistant.components.climate.maxcube",
            "homeassistant.components.climate.melissa",
            "homeassistant.components.climate.mqtt",
            "homeassistant.components.climate.mysensors",
            "homeassistant.components.climate.nest",
            "homeassistant.components.climate.netatmo",
            "homeassistant.components.climate.nuheat",
            "homeassistant.components.climate.oem",
            "homeassistant.components.climate.proliphix",
            "homeassistant.components.climate.radiotherm",
            "homeassistant.components.climate.sensibo",
            "homeassistant.components.climate.tado",
            "homeassistant.components.climate.tesla",
            "homeassistant.components.climate.toon",
            "homeassistant.components.climate.touchline",
            "homeassistant.components.climate.venstar",
            "homeassistant.components.climate.vera",
            "homeassistant.components.climate.wink",
            "homeassistant.components.climate.zwave",
            "homeassistant.components.cloud",
            "homeassistant.components.cloud.auth_api",
            "homeassistant.components.cloud.const",
            "homeassistant.components.cloud.http_api",
            "homeassistant.components.cloud.iot",
            "homeassistant.components.coinbase",
            "homeassistant.components.comfoconnect",
            "homeassistant.components.config",
            "homeassistant.components.config.automation",
            "homeassistant.components.config.config_entries",
            "homeassistant.components.config.core",
            "homeassistant.components.config.customize",
            "homeassistant.components.config.entity_registry",
            "homeassistant.components.config.group",
            "homeassistant.components.config.hassbian",
            "homeassistant.components.config.script",
            "homeassistant.components.config.zwave",
            "homeassistant.components.config_entry_example",
            "homeassistant.components.configurator",
            "homeassistant.components.conversation",
            "homeassistant.components.counter",
            "homeassistant.components.cover",
            "homeassistant.components.cover.abode",
            "homeassistant.components.cover.command_line",
            "homeassistant.components.cover.demo",
            "homeassistant.components.cover.garadget",
            "homeassistant.components.cover.homematic",
            "homeassistant.components.cover.isy994",
            "homeassistant.components.cover.knx",
            "homeassistant.components.cover.lutron",
            "homeassistant.components.cover.lutron_caseta",
            "homeassistant.components.cover.mqtt",
            "homeassistant.components.cover.myq",
            "homeassistant.components.cover.mysensors",
            "homeassistant.components.cover.opengarage",
            "homeassistant.components.cover.rflink",
            "homeassistant.components.cover.rfxtrx",
            "homeassistant.components.cover.rpi_gpio",
            "homeassistant.components.cover.scsgate",
            "homeassistant.components.cover.tahoma",
            "homeassistant.components.cover.tellduslive",
            "homeassistant.components.cover.tellstick",
            "homeassistant.components.cover.template",
            "homeassistant.components.cover.velbus",
            "homeassistant.components.cover.vera",
            "homeassistant.components.cover.wink",
            "homeassistant.components.cover.xiaomi_aqara",
            "homeassistant.components.cover.zwave",
            "homeassistant.components.daikin",
            "homeassistant.components.datadog",
            "homeassistant.components.deconz",
            "homeassistant.components.demo",
            "homeassistant.components.device_sun_light_trigger",
            "homeassistant.components.device_tracker",
            "homeassistant.components.device_tracker.actiontec",
            "homeassistant.components.device_tracker.aruba",
            "homeassistant.components.device_tracker.asuswrt",
            "homeassistant.components.device_tracker.automatic",
            "homeassistant.components.device_tracker.bbox",
            "homeassistant.components.device_tracker.bluetooth_le_tracker",
            "homeassistant.components.device_tracker.bluetooth_tracker",
            "homeassistant.components.device_tracker.bmw_connected_drive",
            "homeassistant.components.device_tracker.bt_home_hub_5",
            "homeassistant.components.device_tracker.cisco_ios",
            "homeassistant.components.device_tracker.ddwrt",
            "homeassistant.components.device_tracker.demo",
            "homeassistant.components.device_tracker.fritz",
            "homeassistant.components.device_tracker.geofency",
            "homeassistant.components.device_tracker.gpslogger",
            "homeassistant.components.device_tracker.hitron_coda",
            "homeassistant.components.device_tracker.huawei_router",
            "homeassistant.components.device_tracker.icloud",
            "homeassistant.components.device_tracker.keenetic_ndms2",
            "homeassistant.components.device_tracker.linksys_ap",
            "homeassistant.components.device_tracker.linksys_smart",
            "homeassistant.components.device_tracker.locative",
            "homeassistant.components.device_tracker.luci",
            "homeassistant.components.device_tracker.meraki",
            "homeassistant.components.device_tracker.mercedesme",
            "homeassistant.components.device_tracker.mikrotik",
            "homeassistant.components.device_tracker.mqtt",
            "homeassistant.components.device_tracker.mqtt_json",
            "homeassistant.components.device_tracker.mysensors",
            "homeassistant.components.device_tracker.netgear",
            "homeassistant.components.device_tracker.nmap_tracker",
            "homeassistant.components.device_tracker.owntracks",
            "homeassistant.components.device_tracker.owntracks_http",
            "homeassistant.components.device_tracker.ping",
            "homeassistant.components.device_tracker.sky_hub",
            "homeassistant.components.device_tracker.snmp",
            "homeassistant.components.device_tracker.swisscom",
            "homeassistant.components.device_tracker.tado",
            "homeassistant.components.device_tracker.tesla",
            "homeassistant.components.device_tracker.thomson",
            "homeassistant.components.device_tracker.tile",
            "homeassistant.components.device_tracker.tomato",
            "homeassistant.components.device_tracker.tplink",
            "homeassistant.components.device_tracker.trackr",
            "homeassistant.components.device_tracker.ubus",
            "homeassistant.components.device_tracker.unifi",
            "homeassistant.components.device_tracker.unifi_direct",
            "homeassistant.components.device_tracker.upc_connect",
            "homeassistant.components.device_tracker.volvooncall",
            "homeassistant.components.device_tracker.xiaomi",
            "homeassistant.components.dialogflow",
            "homeassistant.components.digital_ocean",
            "homeassistant.components.discovery",
            "homeassistant.components.dominos",
            "homeassistant.components.doorbird",
            "homeassistant.components.downloader",
            "homeassistant.components.duckdns",
            "homeassistant.components.dweet",
            "homeassistant.components.dyson",
            "homeassistant.components.ecobee",
            "homeassistant.components.egardia",
            "homeassistant.components.eight_sleep",
            "homeassistant.components.emoncms_history",
            "homeassistant.components.emulated_hue",
            "homeassistant.components.emulated_hue.hue_api",
            "homeassistant.components.emulated_hue.upnp",
            "homeassistant.components.enocean",
            "homeassistant.components.envisalink",
            "homeassistant.components.fan",
            "homeassistant.components.fan.comfoconnect",
            "homeassistant.components.fan.demo",
            "homeassistant.components.fan.dyson",
            "homeassistant.components.fan.insteon_local",
            "homeassistant.components.fan.insteon_plm",
            "homeassistant.components.fan.isy994",
            "homeassistant.components.fan.mqtt",
            "homeassistant.components.fan.velbus",
            "homeassistant.components.fan.wink",
            "homeassistant.components.fan.xiaomi_miio",
            "homeassistant.components.fan.zwave",
            "homeassistant.components.feedreader",
            "homeassistant.components.ffmpeg",
            "homeassistant.components.foursquare",
            "homeassistant.components.frontend",
            "homeassistant.components.gc100",
            "homeassistant.components.goalfeed",
            "homeassistant.components.google",
            "homeassistant.components.google_assistant",
            "homeassistant.components.google_assistant.auth",
            "homeassistant.components.google_assistant.const",
            "homeassistant.components.google_assistant.helpers",
            "homeassistant.components.google_assistant.http",
            "homeassistant.components.google_assistant.smart_home",
            "homeassistant.components.google_assistant.trait",
            "homeassistant.components.google_domains",
            "homeassistant.components.graphite",
            "homeassistant.components.group",
            "homeassistant.components.hassio",
            "homeassistant.components.hassio.handler",
            "homeassistant.components.hassio.http",
            "homeassistant.components.hdmi_cec",
            "homeassistant.components.history",
            "homeassistant.components.history_graph",
            "homeassistant.components.hive",
            "homeassistant.components.homekit",
            "homeassistant.components.homekit.accessories",
            "homeassistant.components.homekit.const",
            "homeassistant.components.homekit.covers",
            "homeassistant.components.homekit.security_systems",
            "homeassistant.components.homekit.sensors",
            "homeassistant.components.homekit.switches",
            "homeassistant.components.homekit.thermostats",
            "homeassistant.components.homematic",
            "homeassistant.components.http",
            "homeassistant.components.http.auth",
            "homeassistant.components.http.ban",
            "homeassistant.components.http.const",
            "homeassistant.components.http.cors",
            "homeassistant.components.http.data_validator",
            "homeassistant.components.http.real_ip",
            "homeassistant.components.http.static",
            "homeassistant.components.http.view",
            "homeassistant.components.hue",
            "homeassistant.components.ifttt",
            "homeassistant.components.ihc",
            "homeassistant.components.ihc.const",
            "homeassistant.components.ihc.ihcdevice",
            "homeassistant.components.image_processing",
            "homeassistant.components.image_processing.demo",
            "homeassistant.components.image_processing.dlib_face_detect",
            "homeassistant.components.image_processing.dlib_face_identify",
            "homeassistant.components.image_processing.microsoft_face_detect",
            "homeassistant.components.image_processing.microsoft_face_identify",
            "homeassistant.components.image_processing.openalpr_cloud",
            "homeassistant.components.image_processing.openalpr_local",
            "homeassistant.components.image_processing.opencv",
            "homeassistant.components.image_processing.seven_segments",
            "homeassistant.components.influxdb",
            "homeassistant.components.input_boolean",
            "homeassistant.components.input_datetime",
            "homeassistant.components.input_number",
            "homeassistant.components.input_select",
            "homeassistant.components.input_text",
            "homeassistant.components.insteon_local",
            "homeassistant.components.insteon_plm",
            "homeassistant.components.intent_script",
            "homeassistant.components.introduction",
            "homeassistant.components.ios",
            "homeassistant.components.iota",
            "homeassistant.components.isy994",
            "homeassistant.components.joaoapps_join",
            "homeassistant.components.juicenet",
            "homeassistant.components.keyboard",
            "homeassistant.components.keyboard_remote",
            "homeassistant.components.kira",
            "homeassistant.components.knx",
            "homeassistant.components.lametric",
            "homeassistant.components.light",
            "homeassistant.components.light.abode",
            "homeassistant.components.light.ads",
            "homeassistant.components.light.avion",
            "homeassistant.components.light.blinksticklight",
            "homeassistant.components.light.blinkt",
            "homeassistant.components.light.deconz",
            "homeassistant.components.light.decora",
            "homeassistant.components.light.decora_wifi",
            "homeassistant.components.light.demo",
            "homeassistant.components.light.enocean",
            "homeassistant.components.light.flux_led",
            "homeassistant.components.light.greenwave",
            "homeassistant.components.light.group",
            "homeassistant.components.light.hive",
            "homeassistant.components.light.homematic",
            "homeassistant.components.light.hue",
            "homeassistant.components.light.hyperion",
            "homeassistant.components.light.iglo",
            "homeassistant.components.light.ihc",
            "homeassistant.components.light.insteon_local",
            "homeassistant.components.light.insteon_plm",
            "homeassistant.components.light.isy994",
            "homeassistant.components.light.knx",
            "homeassistant.components.light.lifx",
            "homeassistant.components.light.lifx_legacy",
            "homeassistant.components.light.limitlessled",
            "homeassistant.components.light.litejet",
            "homeassistant.components.light.lutron",
            "homeassistant.components.light.lutron_caseta",
            "homeassistant.components.light.mochad",
            "homeassistant.components.light.mqtt",
            "homeassistant.components.light.mqtt_json",
            "homeassistant.components.light.mqtt_template",
            "homeassistant.components.light.mysensors",
            "homeassistant.components.light.mystrom",
            "homeassistant.components.light.osramlightify",
            "homeassistant.components.light.piglow",
            "homeassistant.components.light.qwikswitch",
            "homeassistant.components.light.rflink",
            "homeassistant.components.light.rfxtrx",
            "homeassistant.components.light.rpi_gpio_pwm",
            "homeassistant.components.light.scsgate",
            "homeassistant.components.light.sensehat",
            "homeassistant.components.light.skybell",
            "homeassistant.components.light.tellduslive",
            "homeassistant.components.light.tellstick",
            "homeassistant.components.light.template",
            "homeassistant.components.light.tikteck",
            "homeassistant.components.light.tplink",
            "homeassistant.components.light.tradfri",
            "homeassistant.components.light.velbus",
            "homeassistant.components.light.vera",
            "homeassistant.components.light.wemo",
            "homeassistant.components.light.wink",
            "homeassistant.components.light.x10",
            "homeassistant.components.light.xiaomi_aqara",
            "homeassistant.components.light.xiaomi_miio",
            "homeassistant.components.light.yeelight",
            "homeassistant.components.light.yeelightsunflower",
            "homeassistant.components.light.zengge",
            "homeassistant.components.light.zha",
            "homeassistant.components.light.zigbee",
            "homeassistant.components.light.zwave",
            "homeassistant.components.linode",
            "homeassistant.components.lirc",
            "homeassistant.components.litejet",
            "homeassistant.components.lock",
            "homeassistant.components.lock.abode",
            "homeassistant.components.lock.august",
            "homeassistant.components.lock.demo",
            "homeassistant.components.lock.isy994",
            "homeassistant.components.lock.lockitron",
            "homeassistant.components.lock.mqtt",
            "homeassistant.components.lock.nello",
            "homeassistant.components.lock.nuki",
            "homeassistant.components.lock.sesame",
            "homeassistant.components.lock.tesla",
            "homeassistant.components.lock.vera",
            "homeassistant.components.lock.verisure",
            "homeassistant.components.lock.volvooncall",
            "homeassistant.components.lock.wink",
            "homeassistant.components.lock.zwave",
            "homeassistant.components.logbook",
            "homeassistant.components.logentries",
            "homeassistant.components.logger",
            "homeassistant.components.lutron",
            "homeassistant.components.lutron_caseta",
            "homeassistant.components.mailbox",
            "homeassistant.components.mailbox.asterisk_mbox",
            "homeassistant.components.mailbox.demo",
            "homeassistant.components.mailgun",
            "homeassistant.components.map",
            "homeassistant.components.maxcube",
            "homeassistant.components.media_extractor",
            "homeassistant.components.media_player",
            "homeassistant.components.media_player.anthemav",
            "homeassistant.components.media_player.apple_tv",
            "homeassistant.components.media_player.aquostv",
            "homeassistant.components.media_player.bluesound",
            "homeassistant.components.media_player.braviatv",
            "homeassistant.components.media_player.cast",
            "homeassistant.components.media_player.channels",
            "homeassistant.components.media_player.clementine",
            "homeassistant.components.media_player.cmus",
            "homeassistant.components.media_player.demo",
            "homeassistant.components.media_player.denon",
            "homeassistant.components.media_player.denonavr",
            "homeassistant.components.media_player.directv",
            "homeassistant.components.media_player.dunehd",
            "homeassistant.components.media_player.emby",
            "homeassistant.components.media_player.firetv",
            "homeassistant.components.media_player.frontier_silicon",
            "homeassistant.components.media_player.gpmdp",
            "homeassistant.components.media_player.gstreamer",
            "homeassistant.components.media_player.hdmi_cec",
            "homeassistant.components.media_player.itunes",
            "homeassistant.components.media_player.kodi",
            "homeassistant.components.media_player.lg_netcast",
            "homeassistant.components.media_player.liveboxplaytv",
            "homeassistant.components.media_player.mediaroom",
            "homeassistant.components.media_player.monoprice",
            "homeassistant.components.media_player.mpchc",
            "homeassistant.components.media_player.mpd",
            "homeassistant.components.media_player.nad",
            "homeassistant.components.media_player.nadtcp",
            "homeassistant.components.media_player.onkyo",
            "homeassistant.components.media_player.openhome",
            "homeassistant.components.media_player.panasonic_viera",
            "homeassistant.components.media_player.pandora",
            "homeassistant.components.media_player.philips_js",
            "homeassistant.components.media_player.pioneer",
            "homeassistant.components.media_player.plex",
            "homeassistant.components.media_player.roku",
            "homeassistant.components.media_player.russound_rio",
            "homeassistant.components.media_player.russound_rnet",
            "homeassistant.components.media_player.samsungtv",
            "homeassistant.components.media_player.snapcast",
            "homeassistant.components.media_player.songpal",
            "homeassistant.components.media_player.sonos",
            "homeassistant.components.media_player.soundtouch",
            "homeassistant.components.media_player.spotify",
            "homeassistant.components.media_player.squeezebox",
            "homeassistant.components.media_player.ue_smart_radio",
            "homeassistant.components.media_player.universal",
            "homeassistant.components.media_player.vizio",
            "homeassistant.components.media_player.vlc",
            "homeassistant.components.media_player.volumio",
            "homeassistant.components.media_player.webostv",
            "homeassistant.components.media_player.xiaomi_tv",
            "homeassistant.components.media_player.yamaha",
            "homeassistant.components.media_player.yamaha_musiccast",
            "homeassistant.components.media_player.ziggo_mediabox_xl",
            "homeassistant.components.melissa",
            "homeassistant.components.mercedesme",
            "homeassistant.components.microsoft_face",
            "homeassistant.components.mochad",
            "homeassistant.components.modbus",
            "homeassistant.components.mqtt",
            "homeassistant.components.mqtt.discovery",
            "homeassistant.components.mqtt.server",
            "homeassistant.components.mqtt_eventstream",
            "homeassistant.components.mqtt_statestream",
            "homeassistant.components.mychevy",
            "homeassistant.components.mycroft",
            "homeassistant.components.mysensors",
            "homeassistant.components.namecheapdns",
            "homeassistant.components.neato",
            "homeassistant.components.nest",
            "homeassistant.components.netatmo",
            "homeassistant.components.no_ip",
            "homeassistant.components.notify",
            "homeassistant.components.notify.apns",
            "homeassistant.components.notify.aws_lambda",
            "homeassistant.components.notify.aws_sns",
            "homeassistant.components.notify.aws_sqs",
            "homeassistant.components.notify.ciscospark",
            "homeassistant.components.notify.clickatell",
            "homeassistant.components.notify.clicksend",
            "homeassistant.components.notify.clicksend_tts",
            "homeassistant.components.notify.command_line",
            "homeassistant.components.notify.demo",
            "homeassistant.components.notify.discord",
            "homeassistant.components.notify.ecobee",
            "homeassistant.components.notify.facebook",
            "homeassistant.components.notify.file",
            "homeassistant.components.notify.free_mobile",
            "homeassistant.components.notify.gntp",
            "homeassistant.components.notify.group",
            "homeassistant.components.notify.hipchat",
            "homeassistant.components.notify.html5",
            "homeassistant.components.notify.instapush",
            "homeassistant.components.notify.ios",
            "homeassistant.components.notify.joaoapps_join",
            "homeassistant.components.notify.knx",
            "homeassistant.components.notify.kodi",
            "homeassistant.components.notify.lametric",
            "homeassistant.components.notify.lannouncer",
            "homeassistant.components.notify.llamalab_automate",
            "homeassistant.components.notify.mailgun",
            "homeassistant.components.notify.matrix",
            "homeassistant.components.notify.message_bird",
            "homeassistant.components.notify.mycroft",
            "homeassistant.components.notify.mysensors",
            "homeassistant.components.notify.nfandroidtv",
            "homeassistant.components.notify.nma",
            "homeassistant.components.notify.prowl",
            "homeassistant.components.notify.pushbullet",
            "homeassistant.components.notify.pushetta",
            "homeassistant.components.notify.pushover",
            "homeassistant.components.notify.pushsafer",
            "homeassistant.components.notify.rest",
            "homeassistant.components.notify.rocketchat",
            "homeassistant.components.notify.sendgrid",
            "homeassistant.components.notify.simplepush",
            "homeassistant.components.notify.slack",
            "homeassistant.components.notify.smtp",
            "homeassistant.components.notify.synology_chat",
            "homeassistant.components.notify.syslog",
            "homeassistant.components.notify.telegram",
            "homeassistant.components.notify.telstra",
            "homeassistant.components.notify.twilio_call",
            "homeassistant.components.notify.twilio_sms",
            "homeassistant.components.notify.twitter",
            "homeassistant.components.notify.webostv",
            "homeassistant.components.notify.xmpp",
            "homeassistant.components.notify.yessssms",
            "homeassistant.components.nuheat",
            "homeassistant.components.nuimo_controller",
            "homeassistant.components.octoprint",
            "homeassistant.components.panel_custom",
            "homeassistant.components.panel_iframe",
            "homeassistant.components.persistent_notification",
            "homeassistant.components.pilight",
            "homeassistant.components.plant",
            "homeassistant.components.prometheus",
            "homeassistant.components.proximity",
            "homeassistant.components.python_script",
            "homeassistant.components.qwikswitch",
            "homeassistant.components.rainbird",
            "homeassistant.components.raincloud",
            "homeassistant.components.raspihats",
            "homeassistant.components.recorder",
            "homeassistant.components.recorder.const",
            "homeassistant.components.recorder.migration",
            "homeassistant.components.recorder.models",
            "homeassistant.components.recorder.purge",
            "homeassistant.components.recorder.util",
            "homeassistant.components.remember_the_milk",
            "homeassistant.components.remote",
            "homeassistant.components.remote.apple_tv",
            "homeassistant.components.remote.demo",
            "homeassistant.components.remote.harmony",
            "homeassistant.components.remote.itach",
            "homeassistant.components.remote.kira",
            "homeassistant.components.remote.xiaomi_miio",
            "homeassistant.components.rest_command",
            "homeassistant.components.rflink",
            "homeassistant.components.rfxtrx",
            "homeassistant.components.ring",
            "homeassistant.components.rpi_gpio",
            "homeassistant.components.rpi_pfio",
            "homeassistant.components.rss_feed_template",
            "homeassistant.components.satel_integra",
            "homeassistant.components.scene",
            "homeassistant.components.scene.deconz",
            "homeassistant.components.scene.homeassistant",
            "homeassistant.components.scene.hunterdouglas_powerview",
            "homeassistant.components.scene.knx",
            "homeassistant.components.scene.lifx_cloud",
            "homeassistant.components.scene.litejet",
            "homeassistant.components.scene.lutron_caseta",
            "homeassistant.components.scene.tahoma",
            "homeassistant.components.scene.velux",
            "homeassistant.components.scene.vera",
            "homeassistant.components.scene.wink",
            "homeassistant.components.script",
            "homeassistant.components.scsgate",
            "homeassistant.components.sensor",
            "homeassistant.components.sensor.abode",
            "homeassistant.components.sensor.ads",
            "homeassistant.components.sensor.airvisual",
            "homeassistant.components.sensor.alarmdecoder",
            "homeassistant.components.sensor.alpha_vantage",
            "homeassistant.components.sensor.amcrest",
            "homeassistant.components.sensor.android_ip_webcam",
            "homeassistant.components.sensor.apcupsd",
            "homeassistant.components.sensor.api_streams",
            "homeassistant.components.sensor.arduino",
            "homeassistant.components.sensor.arest",
            "homeassistant.components.sensor.arlo",
            "homeassistant.components.sensor.arwn",
            "homeassistant.components.sensor.bbox",
            "homeassistant.components.sensor.bh1750",
            "homeassistant.components.sensor.bitcoin",
            "homeassistant.components.sensor.blink",
            "homeassistant.components.sensor.blockchain",
            "homeassistant.components.sensor.bloomsky",
            "homeassistant.components.sensor.bme280",
            "homeassistant.components.sensor.bme680",
            "homeassistant.components.sensor.bmw_connected_drive",
            "homeassistant.components.sensor.bom",
            "homeassistant.components.sensor.broadlink",
            "homeassistant.components.sensor.buienradar",
            "homeassistant.components.sensor.canary",
            "homeassistant.components.sensor.cert_expiry",
            "homeassistant.components.sensor.citybikes",
            "homeassistant.components.sensor.coinbase",
            "homeassistant.components.sensor.coinmarketcap",
            "homeassistant.components.sensor.comed_hourly_pricing",
            "homeassistant.components.sensor.comfoconnect",
            "homeassistant.components.sensor.command_line",
            "homeassistant.components.sensor.cpuspeed",
            "homeassistant.components.sensor.crimereports",
            "homeassistant.components.sensor.cups",
            "homeassistant.components.sensor.currencylayer",
            "homeassistant.components.sensor.daikin",
            "homeassistant.components.sensor.darksky",
            "homeassistant.components.sensor.deconz",
            "homeassistant.components.sensor.deluge",
            "homeassistant.components.sensor.demo",
            "homeassistant.components.sensor.deutsche_bahn",
            "homeassistant.components.sensor.dht",
            "homeassistant.components.sensor.discogs",
            "homeassistant.components.sensor.dnsip",
            "homeassistant.components.sensor.dovado",
            "homeassistant.components.sensor.dsmr",
            "homeassistant.components.sensor.dte_energy_bridge",
            "homeassistant.components.sensor.dublin_bus_transport",
            "homeassistant.components.sensor.dwd_weather_warnings",
            "homeassistant.components.sensor.dweet",
            "homeassistant.components.sensor.dyson",
            "homeassistant.components.sensor.ebox",
            "homeassistant.components.sensor.ecobee",
            "homeassistant.components.sensor.eddystone_temperature",
            "homeassistant.components.sensor.efergy",
            "homeassistant.components.sensor.eight_sleep",
            "homeassistant.components.sensor.eliqonline",
            "homeassistant.components.sensor.emoncms",
            "homeassistant.components.sensor.enocean",
            "homeassistant.components.sensor.envirophat",
            "homeassistant.components.sensor.envisalink",
            "homeassistant.components.sensor.etherscan",
            "homeassistant.components.sensor.fail2ban",
            "homeassistant.components.sensor.fastdotcom",
            "homeassistant.components.sensor.fedex",
            "homeassistant.components.sensor.fido",
            "homeassistant.components.sensor.file",
            "homeassistant.components.sensor.filesize",
            "homeassistant.components.sensor.filter",
            "homeassistant.components.sensor.fitbit",
            "homeassistant.components.sensor.fixer",
            "homeassistant.components.sensor.folder",
            "homeassistant.components.sensor.fritzbox_callmonitor",
            "homeassistant.components.sensor.fritzbox_netmonitor",
            "homeassistant.components.sensor.gearbest",
            "homeassistant.components.sensor.geizhals",
            "homeassistant.components.sensor.geo_rss_events",
            "homeassistant.components.sensor.gitter",
            "homeassistant.components.sensor.glances",
            "homeassistant.components.sensor.google_travel_time",
            "homeassistant.components.sensor.google_wifi",
            "homeassistant.components.sensor.gpsd",
            "homeassistant.components.sensor.gtfs",
            "homeassistant.components.sensor.haveibeenpwned",
            "homeassistant.components.sensor.hddtemp",
            "homeassistant.components.sensor.history_stats",
            "homeassistant.components.sensor.hive",
            "homeassistant.components.sensor.homematic",
            "homeassistant.components.sensor.hp_ilo",
            "homeassistant.components.sensor.htu21d",
            "homeassistant.components.sensor.hydroquebec",
            "homeassistant.components.sensor.ihc",
            "homeassistant.components.sensor.imap",
            "homeassistant.components.sensor.imap_email_content",
            "homeassistant.components.sensor.influxdb",
            "homeassistant.components.sensor.insteon_plm",
            "homeassistant.components.sensor.ios",
            "homeassistant.components.sensor.iota",
            "homeassistant.components.sensor.irish_rail_transport",
            "homeassistant.components.sensor.isy994",
            "homeassistant.components.sensor.juicenet",
            "homeassistant.components.sensor.kira",
            "homeassistant.components.sensor.knx",
            "homeassistant.components.sensor.kwb",
            "homeassistant.components.sensor.lacrosse",
            "homeassistant.components.sensor.lastfm",
            "homeassistant.components.sensor.linux_battery",
            "homeassistant.components.sensor.london_air",
            "homeassistant.components.sensor.london_underground",
            "homeassistant.components.sensor.loopenergy",
            "homeassistant.components.sensor.luftdaten",
            "homeassistant.components.sensor.lyft",
            "homeassistant.components.sensor.melissa",
            "homeassistant.components.sensor.mercedesme",
            "homeassistant.components.sensor.metoffice",
            "homeassistant.components.sensor.mfi",
            "homeassistant.components.sensor.mhz19",
            "homeassistant.components.sensor.miflora",
            "homeassistant.components.sensor.min_max",
            "homeassistant.components.sensor.modbus",
            "homeassistant.components.sensor.modem_callerid",
            "homeassistant.components.sensor.mold_indicator",
            "homeassistant.components.sensor.moon",
            "homeassistant.components.sensor.mopar",
            "homeassistant.components.sensor.mqtt",
            "homeassistant.components.sensor.mqtt_room",
            "homeassistant.components.sensor.mvglive",
            "homeassistant.components.sensor.mychevy",
            "homeassistant.components.sensor.mysensors",
            "homeassistant.components.sensor.nederlandse_spoorwegen",
            "homeassistant.components.sensor.nest",
            "homeassistant.components.sensor.netatmo",
            "homeassistant.components.sensor.netdata",
            "homeassistant.components.sensor.neurio_energy",
            "homeassistant.components.sensor.nut",
            "homeassistant.components.sensor.nzbget",
            "homeassistant.components.sensor.octoprint",
            "homeassistant.components.sensor.ohmconnect",
            "homeassistant.components.sensor.onewire",
            "homeassistant.components.sensor.openevse",
            "homeassistant.components.sensor.openexchangerates",
            "homeassistant.components.sensor.openhardwaremonitor",
            "homeassistant.components.sensor.opensky",
            "homeassistant.components.sensor.openweathermap",
            "homeassistant.components.sensor.otp",
            "homeassistant.components.sensor.pi_hole",
            "homeassistant.components.sensor.pilight",
            "homeassistant.components.sensor.plex",
            "homeassistant.components.sensor.pocketcasts",
            "homeassistant.components.sensor.pollen",
            "homeassistant.components.sensor.pushbullet",
            "homeassistant.components.sensor.pvoutput",
            "homeassistant.components.sensor.pyload",
            "homeassistant.components.sensor.qnap",
            "homeassistant.components.sensor.radarr",
            "homeassistant.components.sensor.rainbird",
            "homeassistant.components.sensor.raincloud",
            "homeassistant.components.sensor.random",
            "homeassistant.components.sensor.rest",
            "homeassistant.components.sensor.rflink",
            "homeassistant.components.sensor.rfxtrx",
            "homeassistant.components.sensor.ring",
            "homeassistant.components.sensor.ripple",
            "homeassistant.components.sensor.sabnzbd",
            "homeassistant.components.sensor.scrape",
            "homeassistant.components.sensor.season",
            "homeassistant.components.sensor.sense",
            "homeassistant.components.sensor.sensehat",
            "homeassistant.components.sensor.serial",
            "homeassistant.components.sensor.serial_pm",
            "homeassistant.components.sensor.shodan",
            "homeassistant.components.sensor.simulated",
            "homeassistant.components.sensor.skybeacon",
            "homeassistant.components.sensor.skybell",
            "homeassistant.components.sensor.sleepiq",
            "homeassistant.components.sensor.sma",
            "homeassistant.components.sensor.smappee",
            "homeassistant.components.sensor.snmp",
            "homeassistant.components.sensor.sochain",
            "homeassistant.components.sensor.sonarr",
            "homeassistant.components.sensor.speedtest",
            "homeassistant.components.sensor.spotcrime",
            "homeassistant.components.sensor.sql",
            "homeassistant.components.sensor.startca",
            "homeassistant.components.sensor.statistics",
            "homeassistant.components.sensor.steam_online",
            "homeassistant.components.sensor.supervisord",
            "homeassistant.components.sensor.swiss_hydrological_data",
            "homeassistant.components.sensor.swiss_public_transport",
            "homeassistant.components.sensor.synologydsm",
            "homeassistant.components.sensor.systemmonitor",
            "homeassistant.components.sensor.sytadin",
            "homeassistant.components.sensor.tado",
            "homeassistant.components.sensor.tahoma",
            "homeassistant.components.sensor.tank_utility",
            "homeassistant.components.sensor.tcp",
            "homeassistant.components.sensor.ted5000",
            "homeassistant.components.sensor.teksavvy",
            "homeassistant.components.sensor.tellduslive",
            "homeassistant.components.sensor.tellstick",
            "homeassistant.components.sensor.temper",
            "homeassistant.components.sensor.template",
            "homeassistant.components.sensor.tesla",
            "homeassistant.components.sensor.thethingsnetwork",
            "homeassistant.components.sensor.thinkingcleaner",
            "homeassistant.components.sensor.tibber",
            "homeassistant.components.sensor.time_date",
            "homeassistant.components.sensor.toon",
            "homeassistant.components.sensor.torque",
            "homeassistant.components.sensor.tradfri",
            "homeassistant.components.sensor.transmission",
            "homeassistant.components.sensor.travisci",
            "homeassistant.components.sensor.twitch",
            "homeassistant.components.sensor.uber",
            "homeassistant.components.sensor.uk_transport",
            "homeassistant.components.sensor.upnp",
            "homeassistant.components.sensor.ups",
            "homeassistant.components.sensor.uptime",
            "homeassistant.components.sensor.usps",
            "homeassistant.components.sensor.vasttrafik",
            "homeassistant.components.sensor.vera",
            "homeassistant.components.sensor.verisure",
            "homeassistant.components.sensor.version",
            "homeassistant.components.sensor.viaggiatreno",
            "homeassistant.components.sensor.volvooncall",
            "homeassistant.components.sensor.vultr",
            "homeassistant.components.sensor.waqi",
            "homeassistant.components.sensor.waterfurnace",
            "homeassistant.components.sensor.whois",
            "homeassistant.components.sensor.wink",
            "homeassistant.components.sensor.worldclock",
            "homeassistant.components.sensor.worldtidesinfo",
            "homeassistant.components.sensor.worxlandroid",
            "homeassistant.components.sensor.wsdot",
            "homeassistant.components.sensor.wunderground",
            "homeassistant.components.sensor.xbox_live",
            "homeassistant.components.sensor.xiaomi_aqara",
            "homeassistant.components.sensor.yahoo_finance",
            "homeassistant.components.sensor.yr",
            "homeassistant.components.sensor.yweather",
            "homeassistant.components.sensor.zabbix",
            "homeassistant.components.sensor.zamg",
            "homeassistant.components.sensor.zestimate",
            "homeassistant.components.sensor.zha",
            "homeassistant.components.sensor.zigbee",
            "homeassistant.components.sensor.zoneminder",
            "homeassistant.components.sensor.zwave",
            "homeassistant.components.shell_command",
            "homeassistant.components.shiftr",
            "homeassistant.components.shopping_list",
            "homeassistant.components.skybell",
            "homeassistant.components.sleepiq",
            "homeassistant.components.smappee",
            "homeassistant.components.snips",
            "homeassistant.components.spc",
            "homeassistant.components.splunk",
            "homeassistant.components.statsd",
            "homeassistant.components.sun",
            "homeassistant.components.switch",
            "homeassistant.components.switch.abode",
            "homeassistant.components.switch.acer_projector",
            "homeassistant.components.switch.ads",
            "homeassistant.components.switch.android_ip_webcam",
            "homeassistant.components.switch.anel_pwrctrl",
            "homeassistant.components.switch.arduino",
            "homeassistant.components.switch.arest",
            "homeassistant.components.switch.bbb_gpio",
            "homeassistant.components.switch.broadlink",
            "homeassistant.components.switch.command_line",
            "homeassistant.components.switch.deluge",
            "homeassistant.components.switch.demo",
            "homeassistant.components.switch.digital_ocean",
            "homeassistant.components.switch.digitalloggers",
            "homeassistant.components.switch.dlink",
            "homeassistant.components.switch.doorbird",
            "homeassistant.components.switch.edimax",
            "homeassistant.components.switch.enocean",
            "homeassistant.components.switch.flux",
            "homeassistant.components.switch.fritzdect",
            "homeassistant.components.switch.gc100",
            "homeassistant.components.switch.hdmi_cec",
            "homeassistant.components.switch.hikvisioncam",
            "homeassistant.components.switch.hive",
            "homeassistant.components.switch.homematic",
            "homeassistant.components.switch.hook",
            "homeassistant.components.switch.ihc",
            "homeassistant.components.switch.insteon_local",
            "homeassistant.components.switch.insteon_plm",
            "homeassistant.components.switch.isy994",
            "homeassistant.components.switch.kankun",
            "homeassistant.components.switch.knx",
            "homeassistant.components.switch.linode",
            "homeassistant.components.switch.litejet",
            "homeassistant.components.switch.lutron_caseta",
            "homeassistant.components.switch.mfi",
            "homeassistant.components.switch.mochad",
            "homeassistant.components.switch.modbus",
            "homeassistant.components.switch.mqtt",
            "homeassistant.components.switch.mysensors",
            "homeassistant.components.switch.mystrom",
            "homeassistant.components.switch.neato",
            "homeassistant.components.switch.netio",
            "homeassistant.components.switch.orvibo",
            "homeassistant.components.switch.pilight",
            "homeassistant.components.switch.pulseaudio_loopback",
            "homeassistant.components.switch.qwikswitch",
            "homeassistant.components.switch.rachio",
            "homeassistant.components.switch.rainbird",
            "homeassistant.components.switch.raincloud",
            "homeassistant.components.switch.rainmachine",
            "homeassistant.components.switch.raspihats",
            "homeassistant.components.switch.rest",
            "homeassistant.components.switch.rflink",
            "homeassistant.components.switch.rfxtrx",
            "homeassistant.components.switch.rpi_gpio",
            "homeassistant.components.switch.rpi_pfio",
            "homeassistant.components.switch.rpi_rf",
            "homeassistant.components.switch.scsgate",
            "homeassistant.components.switch.skybell",
            "homeassistant.components.switch.smappee",
            "homeassistant.components.switch.snmp",
            "homeassistant.components.switch.tellduslive",
            "homeassistant.components.switch.tellstick",
            "homeassistant.components.switch.telnet",
            "homeassistant.components.switch.template",
            "homeassistant.components.switch.tesla",
            "homeassistant.components.switch.thinkingcleaner",
            "homeassistant.components.switch.toon",
            "homeassistant.components.switch.tplink",
            "homeassistant.components.switch.transmission",
            "homeassistant.components.switch.upcloud",
            "homeassistant.components.switch.velbus",
            "homeassistant.components.switch.vera",
            "homeassistant.components.switch.verisure",
            "homeassistant.components.switch.volvooncall",
            "homeassistant.components.switch.vultr",
            "homeassistant.components.switch.wake_on_lan",
            "homeassistant.components.switch.wemo",
            "homeassistant.components.switch.wink",
            "homeassistant.components.switch.xiaomi_aqara",
            "homeassistant.components.switch.xiaomi_miio",
            "homeassistant.components.switch.zha",
            "homeassistant.components.switch.zigbee",
            "homeassistant.components.switch.zoneminder",
            "homeassistant.components.switch.zwave",
            "homeassistant.components.system_log",
            "homeassistant.components.tado",
            "homeassistant.components.tahoma",
            "homeassistant.components.telegram_bot",
            "homeassistant.components.telegram_bot.broadcast",
            "homeassistant.components.telegram_bot.polling",
            "homeassistant.components.telegram_bot.webhooks",
            "homeassistant.components.tellduslive",
            "homeassistant.components.tellstick",
            "homeassistant.components.tesla",
            "homeassistant.components.thethingsnetwork",
            "homeassistant.components.thingspeak",
            "homeassistant.components.timer",
            "homeassistant.components.toon",
            "homeassistant.components.tradfri",
            "homeassistant.components.tts",
            "homeassistant.components.tts.amazon_polly",
            "homeassistant.components.tts.baidu",
            "homeassistant.components.tts.demo",
            "homeassistant.components.tts.google",
            "homeassistant.components.tts.marytts",
            "homeassistant.components.tts.microsoft",
            "homeassistant.components.tts.picotts",
            "homeassistant.components.tts.voicerss",
            "homeassistant.components.tts.yandextts",
            "homeassistant.components.twilio",
            "homeassistant.components.upcloud",
            "homeassistant.components.updater",
            "homeassistant.components.upnp",
            "homeassistant.components.usps",
            "homeassistant.components.vacuum",
            "homeassistant.components.vacuum.demo",
            "homeassistant.components.vacuum.dyson",
            "homeassistant.components.vacuum.mqtt",
            "homeassistant.components.vacuum.neato",
            "homeassistant.components.vacuum.roomba",
            "homeassistant.components.vacuum.xiaomi_miio",
            "homeassistant.components.velbus",
            "homeassistant.components.velux",
            "homeassistant.components.vera",
            "homeassistant.components.verisure",
            "homeassistant.components.volvooncall",
            "homeassistant.components.vultr",
            "homeassistant.components.wake_on_lan",
            "homeassistant.components.waterfurnace",
            "homeassistant.components.weather",
            "homeassistant.components.weather.bom",
            "homeassistant.components.weather.buienradar",
            "homeassistant.components.weather.darksky",
            "homeassistant.components.weather.demo",
            "homeassistant.components.weather.ecobee",
            "homeassistant.components.weather.metoffice",
            "homeassistant.components.weather.openweathermap",
            "homeassistant.components.weather.yweather",
            "homeassistant.components.weather.zamg",
            "homeassistant.components.weblink",
            "homeassistant.components.websocket_api",
            "homeassistant.components.wemo",
            "homeassistant.components.wink",
            "homeassistant.components.xiaomi_aqara",
            "homeassistant.components.zabbix",
            "homeassistant.components.zeroconf",
            "homeassistant.components.zha",
            "homeassistant.components.zha.const",
            "homeassistant.components.zigbee",
            "homeassistant.components.zone",
            "homeassistant.components.zoneminder",
            "homeassistant.components.zwave",
            "homeassistant.components.zwave.const",
            "homeassistant.components.zwave.discovery_schemas",
            "homeassistant.components.zwave.node_entity",
            "homeassistant.components.zwave.util",
            "homeassistant.components.zwave.workaround",
            "homeassistant.config",
            "homeassistant.config_entries",
            "homeassistant.const",
            "homeassistant.core",
            "homeassistant.exceptions",
            "homeassistant.helpers",
            "homeassistant.helpers.aiohttp_client",
            "homeassistant.helpers.condition",
            "homeassistant.helpers.config_validation",
            "homeassistant.helpers.deprecation",
            "homeassistant.helpers.discovery",
            "homeassistant.helpers.dispatcher",
            "homeassistant.helpers.entity",
            "homeassistant.helpers.entity_component",
            "homeassistant.helpers.entity_platform",
            "homeassistant.helpers.entity_registry",
            "homeassistant.helpers.entity_values",
            "homeassistant.helpers.entityfilter",
            "homeassistant.helpers.event",
            "homeassistant.helpers.icon",
            "homeassistant.helpers.intent",
            "homeassistant.helpers.location",
            "homeassistant.helpers.restore_state",
            "homeassistant.helpers.script",
            "homeassistant.helpers.service",
            "homeassistant.helpers.signal",
            "homeassistant.helpers.state",
            "homeassistant.helpers.sun",
            "homeassistant.helpers.temperature",
            "homeassistant.helpers.template",
            "homeassistant.helpers.translation",
            "homeassistant.helpers.typing",
            "homeassistant.loader",
            "homeassistant.monkey_patch",
            "homeassistant.remote",
            "homeassistant.requirements",
            "homeassistant.scripts",
            "homeassistant.scripts.benchmark",
            "homeassistant.scripts.check_config",
            "homeassistant.scripts.credstash",
            "homeassistant.scripts.db_migrator",
            "homeassistant.scripts.ensure_config",
            "homeassistant.scripts.influxdb_import",
            "homeassistant.scripts.influxdb_migrator",
            "homeassistant.scripts.keyring",
            "homeassistant.scripts.macos",
            "homeassistant.setup",
            "homeassistant.util",
            "homeassistant.util.async",
            "homeassistant.util.color",
            "homeassistant.util.decorator",
            "homeassistant.util.distance",
            "homeassistant.util.dt",
            "homeassistant.util.json",
            "homeassistant.util.location",
            "homeassistant.util.logging",
            "homeassistant.util.package",
            "homeassistant.util.temperature",
            "homeassistant.util.unit_system",
            "homeassistant.util.yaml"
        ],
        "version": "0.65.4"
    },
    "hassnabucasa": {
        "cmdline": [],
        "modules": [
            "hassnabucasa",
            "hassnabucasa.cli"
        ],
        "version": "0.1.1"
    },
    "haste": {
        "cmdline": [],
        "modules": [],
        "version": "0.6"
    },
    "haste-client": {
        "cmdline": [
            "haste"
        ],
        "modules": [],
        "version": "1.0.3"
    },
    "haste-pytorch": {
        "cmdline": [],
        "modules": [
            "pytorch",
            "pytorch._version",
            "pytorch.base_rnn",
            "pytorch.gru",
            "pytorch.indrnn",
            "pytorch.layer_norm_gru",
            "pytorch.layer_norm_indrnn",
            "pytorch.layer_norm_lstm",
            "pytorch.lstm"
        ],
        "version": "0.5.0rc0"
    },
    "haste-pytorch-cpu": {
        "cmdline": [],
        "modules": [
            "pytorch",
            "pytorch._version",
            "pytorch.base_rnn",
            "pytorch.gru",
            "pytorch.indrnn",
            "pytorch.layer_norm_gru",
            "pytorch.layer_norm_indrnn",
            "pytorch.layer_norm_lstm",
            "pytorch.lstm"
        ],
        "version": "0.5.5"
    },
    "haste-storage-client": {
        "cmdline": [],
        "modules": [
            "haste_storage_client",
            "haste_storage_client.core",
            "haste_storage_client.models",
            "haste_storage_client.models.interestingness_model",
            "haste_storage_client.models.random_interestingness_model",
            "haste_storage_client.models.rest_interestingness_model",
            "haste_storage_client.storage",
            "haste_storage_client.storage.pachyderm",
            "haste_storage_client.storage.storage"
        ],
        "version": "0.13"
    },
    "haste-tf": {
        "cmdline": [],
        "modules": [
            "haste_tf",
            "haste_tf._version",
            "haste_tf.base_rnn",
            "haste_tf.gru",
            "haste_tf.gru_cell",
            "haste_tf.indrnn",
            "haste_tf.layer_norm",
            "haste_tf.layer_norm_gru",
            "haste_tf.layer_norm_gru_cell",
            "haste_tf.layer_norm_indrnn",
            "haste_tf.layer_norm_lstm",
            "haste_tf.layer_norm_lstm_cell",
            "haste_tf.lstm",
            "haste_tf.weight_config",
            "haste_tf.zoneout_wrapper"
        ],
        "version": "0.5.0rc0"
    },
    "hastebin-client": {
        "cmdline": [],
        "modules": [
            "hastebin_client",
            "hastebin_client.config",
            "hastebin_client.utils",
            "tests",
            "tests.test_haste_utils"
        ],
        "version": "0.1.2"
    },
    "hastests": {
        "cmdline": [],
        "modules": [
            "hastests",
            "hastests.account",
            "hastests.data",
            "hastests.version"
        ],
        "version": "0.3.0"
    },
    "hastexo-xblock": {
        "cmdline": [],
        "modules": [
            "hastexo",
            "hastexo.admin",
            "hastexo.common",
            "hastexo.gcloud",
            "hastexo.hastexo",
            "hastexo.jobs",
            "hastexo.models",
            "hastexo.openstack",
            "hastexo.provider",
            "hastexo.tasks"
        ],
        "version": "3.6.9"
    },
    "hastur": {
        "cmdline": [],
        "modules": [
            "hastur",
            "hastur.arms",
            "hastur.bandits",
            "hastur.distributions",
            "hastur.exceptions",
            "hastur.observations"
        ],
        "version": "0.1.2"
    },
    "hasura": {
        "cmdline": [],
        "modules": [
            "hasura",
            "hasura.hasura_base"
        ],
        "version": "0.1"
    },
    "hasurapy": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "hasy": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "hasy-tools": {
        "cmdline": [],
        "modules": [
            "hasy_tools",
            "hasy_tools._version",
            "hasy_tools.hasy",
            "tests",
            "tests.test_hasy_tools"
        ],
        "version": "0.1.1"
    },
    "hat": {
        "cmdline": [],
        "modules": [
            "hat",
            "hat.activations",
            "hat.backend",
            "hat.backend.theano_backend",
            "hat.callbacks",
            "hat.data_transformations",
            "hat.generators",
            "hat.globals",
            "hat.initializations",
            "hat.layers",
            "hat.layers.cnn",
            "hat.layers.core",
            "hat.layers.embeddings",
            "hat.layers.noise",
            "hat.layers.normalization",
            "hat.layers.pooling",
            "hat.layers.radial_basis",
            "hat.layers.rnn",
            "hat.layers.your_layer",
            "hat.metrics",
            "hat.models",
            "hat.objectives",
            "hat.optimizers",
            "hat.preprocessing",
            "hat.regularizations",
            "hat.serializations",
            "hat.supports",
            "hat.utils",
            "hat.utils.plots"
        ],
        "version": "0.1.11"
    },
    "hat-asn1": {
        "cmdline": [],
        "modules": [
            "asn1",
            "asn1.ber",
            "asn1.common",
            "asn1.doc",
            "asn1.parser"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-chatter": {
        "cmdline": [],
        "modules": [
            "chatter"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-drivers": {
        "cmdline": [],
        "modules": [
            "acse",
            "copp",
            "mms",
            "mms.common",
            "mms.connection",
            "mms.encoder"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-duktape": {
        "cmdline": [],
        "modules": [
            "duktape"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-event": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0.dev20200812"
    },
    "hat-gateway": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0.dev20200812"
    },
    "hat-gui": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0.dev20200812"
    },
    "hat-juggler": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0.dev20200812"
    },
    "hat-monitor": {
        "cmdline": [],
        "modules": [
            "monitor",
            "monitor.client",
            "monitor.common",
            "monitor.server",
            "monitor.server.blessing",
            "monitor.server.main",
            "monitor.server.master",
            "monitor.server.server",
            "monitor.server.ui"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-orchestrator": {
        "cmdline": [],
        "modules": [
            "orchestrator",
            "orchestrator.component",
            "orchestrator.main",
            "orchestrator.ui"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-peg": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0.dev20200812"
    },
    "hat-sbs": {
        "cmdline": [],
        "modules": [
            "sbs",
            "sbs.evaluator",
            "sbs.generator",
            "sbs.parser",
            "sbs.repository",
            "sbs.serializer"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-sqlite3": {
        "cmdline": [],
        "modules": [
            "sqlite3"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-syslog": {
        "cmdline": [],
        "modules": [
            "syslog",
            "syslog.common",
            "syslog.generator",
            "syslog.handler",
            "syslog.server",
            "syslog.server.backend",
            "syslog.server.common",
            "syslog.server.conf",
            "syslog.server.database",
            "syslog.server.main",
            "syslog.server.syslog",
            "syslog.server.ui"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hat-translator": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0.dev20200812"
    },
    "hat-trie": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "hat-util": {
        "cmdline": [],
        "modules": [
            "util",
            "util.aio",
            "util.common",
            "util.json"
        ],
        "version": "0.4.0.dev20200812"
    },
    "hatak": {
        "cmdline": [],
        "modules": [
            "bael",
            "bael.hatak",
            "bael.hatak.alembic",
            "bael.hatak.recipe",
            "bael.hatak.tasks",
            "bael.hatak.templates",
            "bael.hatak.uwsgi",
            "hatak",
            "hatak.application",
            "hatak.command",
            "hatak.controller",
            "hatak.errors",
            "hatak.plugin",
            "hatak.route",
            "hatak.testing",
            "hatak.unpackrequest"
        ],
        "version": "0.2.7.11"
    },
    "hatak-alembic": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.alembic",
            "haplugin.alembic.commands",
            "haplugin.alembic.plugin"
        ],
        "version": "0.1.3"
    },
    "hatak-auth": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.auth",
            "haplugin.auth.controllers",
            "haplugin.auth.db_tables",
            "haplugin.auth.driver",
            "haplugin.auth.forms",
            "haplugin.auth.helpers",
            "haplugin.auth.models",
            "haplugin.auth.plugin",
            "haplugin.auth.tests",
            "haplugin.auth.tests.test_models",
            "haplugin.auth.tests.test_plugin"
        ],
        "version": "0.2.6"
    },
    "hatak-beaker": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.beaker"
        ],
        "version": "0.1.2"
    },
    "hatak-debugtoolbar": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.debugtoolbar"
        ],
        "version": "0.1"
    },
    "hatak-flashmsg": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.flashmsg",
            "haplugin.flashmsg.helpers",
            "haplugin.flashmsg.models",
            "haplugin.flashmsg.plugin",
            "haplugin.flashmsg.tests",
            "haplugin.flashmsg.tests.test_helpers",
            "haplugin.flashmsg.tests.test_models",
            "haplugin.flashmsg.tests.test_plugin"
        ],
        "version": "0.1.2"
    },
    "hatak-formskit": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.formskit",
            "haplugin.formskit.helpers",
            "haplugin.formskit.models",
            "haplugin.formskit.plugin",
            "haplugin.formskit.testing",
            "haplugin.formskit.tests"
        ],
        "version": "0.2.3.7"
    },
    "hatak-haml": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.haml"
        ],
        "version": "0.1"
    },
    "hatak-jinja2": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.jinja2"
        ],
        "version": "0.2"
    },
    "hatak-logging": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.logging"
        ],
        "version": "0.2"
    },
    "hatak-sql": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.sql",
            "haplugin.sql.driver",
            "haplugin.sql.fixtures",
            "haplugin.sql.models",
            "haplugin.sql.plugin",
            "haplugin.sql.testing"
        ],
        "version": "0.1.16"
    },
    "hatak-statics": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.statics",
            "haplugin.statics.helper",
            "haplugin.statics.plugin",
            "haplugin.statics.request_plugins"
        ],
        "version": "0.2.5"
    },
    "hatak-toster": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.toster",
            "haplugin.toster.cases",
            "haplugin.toster.commands",
            "haplugin.toster.database",
            "haplugin.toster.fixtures",
            "haplugin.toster.plugin",
            "haplugin.toster.runner"
        ],
        "version": "0.2.1"
    },
    "hatano": {
        "cmdline": [],
        "modules": [
            "hatano",
            "hatano.acm",
            "hatano.actions",
            "hatano.apigateway",
            "hatano.clean",
            "hatano.cloudfront",
            "hatano.conduct",
            "hatano.errors",
            "hatano.iam",
            "hatano.lmbda",
            "hatano.route53",
            "hatano.s3",
            "hatano.util"
        ],
        "version": "1.0.4"
    },
    "hatasmota": {
        "cmdline": [],
        "modules": [
            "hatasmota",
            "hatasmota.button",
            "hatasmota.config_validation",
            "hatasmota.const",
            "hatasmota.discovery",
            "hatasmota.entity",
            "hatasmota.light",
            "hatasmota.mqtt",
            "hatasmota.relay",
            "hatasmota.sensor",
            "hatasmota.status_sensor",
            "hatasmota.switch",
            "hatasmota.trigger",
            "hatasmota.utils"
        ],
        "version": "0.0.15"
    },
    "hatch": {
        "cmdline": [],
        "modules": [
            "hatch",
            "hatch.build",
            "hatch.clean",
            "hatch.cli",
            "hatch.commands",
            "hatch.commands.build",
            "hatch.commands.clean",
            "hatch.commands.conda",
            "hatch.commands.config",
            "hatch.commands.env",
            "hatch.commands.grow",
            "hatch.commands.init",
            "hatch.commands.install",
            "hatch.commands.new",
            "hatch.commands.pypath",
            "hatch.commands.python",
            "hatch.commands.release",
            "hatch.commands.shed",
            "hatch.commands.shell",
            "hatch.commands.test",
            "hatch.commands.uninstall",
            "hatch.commands.update",
            "hatch.commands.utils",
            "hatch.conda",
            "hatch.config",
            "hatch.create",
            "hatch.env",
            "hatch.exceptions",
            "hatch.files",
            "hatch.files.ci",
            "hatch.files.ci.tox",
            "hatch.files.ci.travis",
            "hatch.files.coverage",
            "hatch.files.coverage.codecov",
            "hatch.files.coverage.coveragerc",
            "hatch.files.ignore",
            "hatch.files.ignore.git",
            "hatch.files.licenses",
            "hatch.files.licenses.apache2",
            "hatch.files.licenses.cc0",
            "hatch.files.licenses.mit",
            "hatch.files.licenses.mpl",
            "hatch.files.pyproject",
            "hatch.files.readme",
            "hatch.files.readme.markdown",
            "hatch.files.readme.restructuredtext",
            "hatch.files.setup",
            "hatch.files.vc",
            "hatch.files.vc.git",
            "hatch.grow",
            "hatch.project",
            "hatch.settings",
            "hatch.shells",
            "hatch.structures",
            "hatch.utils",
            "hatch.venv"
        ],
        "version": "0.23.0"
    },
    "hatch-cli": {
        "cmdline": [
            "hatch"
        ],
        "modules": [
            "hatch",
            "hatch.aws",
            "hatch.aws.apigateway",
            "hatch.aws.awslambda",
            "hatch.aws.cloudfront",
            "hatch.aws.iam",
            "hatch.aws.route53",
            "hatch.aws.s3",
            "hatch.aws.utils",
            "hatch.config",
            "hatch.services",
            "hatch.services.api",
            "hatch.services.website",
            "hatch.ux",
            "hatch.ux.server",
            "hatch.ux.website",
            "hatch.version"
        ],
        "version": "1.0.2"
    },
    "hatchbuck": {
        "cmdline": [],
        "modules": [
            "hatchbuck",
            "hatchbuck.hatchbuck"
        ],
        "version": "1.0.23"
    },
    "hatcher": {
        "cmdline": [],
        "modules": [
            "hatcher",
            "hatcher._version",
            "hatcher.api",
            "hatcher.cli",
            "hatcher.cli.common",
            "hatcher.cli.exporter",
            "hatcher.cli.importer",
            "hatcher.cli.main",
            "hatcher.cli.organization_actions",
            "hatcher.cli.repository_actions",
            "hatcher.cli.server_actions",
            "hatcher.cli.tests",
            "hatcher.cli.tests.test_utils",
            "hatcher.cli.user_actions",
            "hatcher.cli.utils",
            "hatcher.cli.v0",
            "hatcher.cli.v0.repository_actions",
            "hatcher.cli.v0.tests",
            "hatcher.cli.v0.tests.test_api_tokens_commands",
            "hatcher.cli.v0.tests.test_egg_commands",
            "hatcher.cli.v0.tests.test_exporter",
            "hatcher.cli.v0.tests.test_main",
            "hatcher.cli.v0.tests.test_organization_commands",
            "hatcher.cli.v0.tests.test_runtime_commands",
            "hatcher.cli.v0.tests.test_user_commands",
            "hatcher.cli.v1",
            "hatcher.cli.v1.repository_actions",
            "hatcher.cli.v1.tests",
            "hatcher.cli.v1.tests.test_bundle_actions",
            "hatcher.cli.v1.tests.test_exporter",
            "hatcher.cli.v1.tests.test_importer",
            "hatcher.cli.v1.tests.test_runtime_commands",
            "hatcher.core",
            "hatcher.core.auth",
            "hatcher.core.brood_client",
            "hatcher.core.brood_url_handler",
            "hatcher.core.model_registry",
            "hatcher.core.organization",
            "hatcher.core.repository",
            "hatcher.core.tests",
            "hatcher.core.tests.base_test_brood_client",
            "hatcher.core.tests.common",
            "hatcher.core.tests.test_json_schema_test_mixin",
            "hatcher.core.tests.test_url_builder",
            "hatcher.core.tests.test_url_handler",
            "hatcher.core.tests.test_utils",
            "hatcher.core.tests.v0",
            "hatcher.core.tests.v0.base_test_organization",
            "hatcher.core.tests.v0.base_test_repository",
            "hatcher.core.tests.v0.base_test_user",
            "hatcher.core.tests.v0.brood_client_responses",
            "hatcher.core.tests.v0.test_brood_client",
            "hatcher.core.tests.v1",
            "hatcher.core.tests.v1.base_test_organization",
            "hatcher.core.tests.v1.base_test_repository",
            "hatcher.core.tests.v1.base_test_user",
            "hatcher.core.tests.v1.brood_client_responses",
            "hatcher.core.tests.v1.test_brood_client",
            "hatcher.core.url_templates",
            "hatcher.core.user",
            "hatcher.core.utils",
            "hatcher.core.v0",
            "hatcher.core.v0.organization",
            "hatcher.core.v0.repository",
            "hatcher.core.v0.tests",
            "hatcher.core.v0.tests.organization_responses",
            "hatcher.core.v0.tests.repository_responses",
            "hatcher.core.v0.tests.test_organization",
            "hatcher.core.v0.tests.test_repository",
            "hatcher.core.v0.tests.test_user",
            "hatcher.core.v0.tests.user_responses",
            "hatcher.core.v0.user",
            "hatcher.core.v1",
            "hatcher.core.v1.bundle",
            "hatcher.core.v1.organization",
            "hatcher.core.v1.repository",
            "hatcher.core.v1.tests",
            "hatcher.core.v1.tests.organization_responses",
            "hatcher.core.v1.tests.repository_responses",
            "hatcher.core.v1.tests.test_bundle",
            "hatcher.core.v1.tests.test_organization",
            "hatcher.core.v1.tests.test_repository",
            "hatcher.core.v1.tests.test_user",
            "hatcher.core.v1.tests.user_responses",
            "hatcher.core.v1.user",
            "hatcher.errors",
            "hatcher.testing",
            "hatcher.tests",
            "hatcher.tests.common",
            "hatcher.utils"
        ],
        "version": "0.15.0"
    },
    "hatchery": {
        "cmdline": [],
        "modules": [
            "hatchery",
            "hatchery._version",
            "hatchery.config",
            "hatchery.executor",
            "hatchery.helpers",
            "hatchery.main",
            "hatchery.project",
            "hatchery.snippets"
        ],
        "version": "0.4.2"
    },
    "hatchet": {
        "cmdline": [],
        "modules": [
            "hatchet",
            "hatchet.external",
            "hatchet.external.console",
            "hatchet.frame",
            "hatchet.graph",
            "hatchet.graphframe",
            "hatchet.node",
            "hatchet.query_matcher",
            "hatchet.readers",
            "hatchet.readers.caliper_reader",
            "hatchet.readers.gprof_dot_reader",
            "hatchet.readers.hpctoolkit_reader",
            "hatchet.tests.caliper",
            "hatchet.tests.callgrind",
            "hatchet.tests.conftest",
            "hatchet.tests.dataframe_ops",
            "hatchet.tests.executable",
            "hatchet.tests.frame",
            "hatchet.tests.graph",
            "hatchet.tests.graph_literal",
            "hatchet.tests.graph_ops",
            "hatchet.tests.graphframe",
            "hatchet.tests.hpctoolkit",
            "hatchet.tests.node",
            "hatchet.tests.query",
            "hatchet.util",
            "hatchet.util.config",
            "hatchet.util.deprecated",
            "hatchet.util.dot",
            "hatchet.util.executable",
            "hatchet.util.timer"
        ],
        "version": "1.2.0"
    },
    "hatching-triage": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.triage",
            "cli.tui",
            "triage",
            "triage.client",
            "triage.pagination"
        ],
        "version": "0.1"
    },
    "hatchlib": {
        "cmdline": [],
        "modules": [
            "hatchlib",
            "hatchlib.dynamic",
            "hatchlib.dynamic.lcs_ext",
            "hatchlib.encoding",
            "hatchlib.factorize",
            "hatchlib.factorize.pr",
            "hatchlib.math",
            "hatchlib.math.sequence",
            "hatchlib.math.sieve",
            "hatchlib.search",
            "hatchlib.shuffle",
            "hatchlib.sort"
        ],
        "version": "0.6.0"
    },
    "hate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hatebase": {
        "cmdline": [],
        "modules": [
            "hatebase"
        ],
        "version": "0.6"
    },
    "hatemile": {
        "cmdline": [],
        "modules": [
            "hatemile",
            "hatemile.accessibleassociation",
            "hatemile.accessiblecss",
            "hatemile.accessibledisplay",
            "hatemile.accessibleevent",
            "hatemile.accessibleform",
            "hatemile.accessiblenavigation",
            "hatemile.helper",
            "hatemile.implementation",
            "hatemile.implementation.assoc",
            "hatemile.implementation.css",
            "hatemile.implementation.display",
            "hatemile.implementation.event",
            "hatemile.implementation.form",
            "hatemile.implementation.navig",
            "hatemile.util",
            "hatemile.util.commonfunctions",
            "hatemile.util.configure",
            "hatemile.util.css",
            "hatemile.util.css.stylesheetdeclaration",
            "hatemile.util.css.stylesheetparser",
            "hatemile.util.css.stylesheetrule",
            "hatemile.util.css.tinycss",
            "hatemile.util.css.tinycss.tinycssdeclaration",
            "hatemile.util.css.tinycss.tinycssparser",
            "hatemile.util.css.tinycss.tinycssrule",
            "hatemile.util.html",
            "hatemile.util.html.bs",
            "hatemile.util.html.bs.bshtmldomnode",
            "hatemile.util.html.bs.bshtmldomparser",
            "hatemile.util.html.htmldomelement",
            "hatemile.util.html.htmldomnode",
            "hatemile.util.html.htmldomparser",
            "hatemile.util.html.htmldomtextnode",
            "hatemile.util.idgenerator"
        ],
        "version": "2.0.1"
    },
    "hatemile-for-django": {
        "cmdline": [],
        "modules": [
            "hatemile_for_django",
            "hatemile_for_django.middleware"
        ],
        "version": "1.0.0"
    },
    "hatena-haiker": {
        "cmdline": [],
        "modules": [
            "haiker",
            "haiker.api",
            "haiker.auth",
            "haiker.error",
            "haiker.types",
            "haiker.utils",
            "tests",
            "tests.samples",
            "tests.test_api",
            "tests.test_auth",
            "tests.test_error",
            "tests.test_types",
            "tests.test_utils"
        ],
        "version": "0.4.0"
    },
    "hatena2rest": {
        "cmdline": [],
        "modules": [
            "hatena2rest",
            "hatena2rest.command",
            "hatena2rest.convert",
            "hatena2rest.htnparser",
            "hatena2rest.processing",
            "hatena2rest.utils"
        ],
        "version": "0.1.1"
    },
    "hatena2rst": {
        "cmdline": [],
        "modules": [
            "hatena2rst",
            "hatena2rst.constants",
            "hatena2rst.main"
        ],
        "version": "0.0.1"
    },
    "hatenablog": {
        "cmdline": [],
        "modules": [
            "hatenablog",
            "hatenablog.hatenablog"
        ],
        "version": "0.0.1"
    },
    "hatenadiary": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "hatenagraph": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hateno": {
        "cmdline": [],
        "modules": [],
        "version": "0.10.1"
    },
    "hatesonar": {
        "cmdline": [],
        "modules": [
            "hatesonar",
            "hatesonar.api",
            "hatesonar.crawler",
            "hatesonar.crawler.blog",
            "hatesonar.crawler.twitter",
            "hatesonar.trainer",
            "hatesonar.trainer.model",
            "hatesonar.trainer.preprocess",
            "hatesonar.trainer.task"
        ],
        "version": "0.0.7"
    },
    "hathilda": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.12"
    },
    "hathitables": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hathitrust-api": {
        "cmdline": [],
        "modules": [
            "hathitrust_api",
            "hathitrust_api.bib_api",
            "hathitrust_api.constants",
            "hathitrust_api.data_api",
            "hathitrust_api.solr_api"
        ],
        "version": "0.1.1"
    },
    "hathitrust-downloader": {
        "cmdline": [],
        "modules": [
            "hathitrustdownloader",
            "hathitrustdownloader.cli"
        ],
        "version": "1.1.1"
    },
    "hathor": {
        "cmdline": [],
        "modules": [
            "hathor",
            "hathor.__about__",
            "hathor.project",
            "hathor.project.builders",
            "hathor.project.builders.copy",
            "hathor.project.builders.modular",
            "hathor.project.information",
            "hathor.project.information.lua_file",
            "hathor.project.information.project",
            "hathor.project.information.requirement_explorer",
            "hathor.project.information.source_root",
            "hathor.resources",
            "hathor.serve",
            "hathor.serve.app",
            "hathor.serve.change_tracker",
            "hathor.serve.client",
            "hathor.serve.models",
            "hathor.serve.project_builder",
            "hathor.serve.watch_files"
        ],
        "version": "0.0.11.dev0"
    },
    "hathor-processing": {
        "cmdline": [],
        "modules": [
            "hathorprocessing",
            "hathorprocessing.allergies",
            "hathorprocessing.apache_aps",
            "hathorprocessing.apache_patient_result",
            "hathorprocessing.apache_pred_var",
            "hathorprocessing.care_plan_care_provider",
            "hathorprocessing.care_plan_eol",
            "hathorprocessing.care_plan_general",
            "hathorprocessing.care_plan_goal",
            "hathorprocessing.care_plan_infectious_disease",
            "hathorprocessing.custom_lab",
            "hathorprocessing.diagnosis",
            "hathorprocessing.dna",
            "hathorprocessing.drugs",
            "hathorprocessing.dx",
            "hathorprocessing.hospital",
            "hathorprocessing.infusion_drug",
            "hathorprocessing.intake_output",
            "hathorprocessing.lab",
            "hathorprocessing.medication",
            "hathorprocessing.micro_lab",
            "hathorprocessing.note",
            "hathorprocessing.nurse_assessment",
            "hathorprocessing.nurse_care",
            "hathorprocessing.nurse_charting",
            "hathorprocessing.past_history",
            "hathorprocessing.patient",
            "hathorprocessing.physical_exam",
            "hathorprocessing.respiratory_care",
            "hathorprocessing.respiratory_charting",
            "hathorprocessing.treatment",
            "hathorprocessing.vital_aperiodic",
            "hathorprocessing.vital_periodic"
        ],
        "version": "1.2.16.dev0"
    },
    "hatom2atom": {
        "cmdline": [],
        "modules": [
            "hatom2atom",
            "hatom2atom.h2aproxy",
            "hatom2atom.settings",
            "hatom2atom.util"
        ],
        "version": "0.6"
    },
    "hatshufflepy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "hatsudenki": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hatt-add-on": {
        "cmdline": [],
        "modules": [
            "Core",
            "Core.Action",
            "Core.Action.action",
            "Core.Action.app",
            "Core.Action.log",
            "Core.Action.monkey",
            "Core.Action.system",
            "Core.Info",
            "Core.Info.aapt",
            "Core.Info.app",
            "Core.Info.crash",
            "Core.Info.element",
            "Core.Info.keycode",
            "Core.Info.performance",
            "Core.Info.system",
            "Core.Lib",
            "Core.Lib.cmd",
            "Core.Utils",
            "Core.Utils.adb_interface",
            "Core.Utils.error",
            "Core.Utils.imageUtils",
            "Core.Utils.logger",
            "Core.Utils.run_command",
            "Core.Utils.surface_collector"
        ],
        "version": "1.0.2"
    },
    "hatta": {
        "cmdline": [],
        "modules": [
            "hatta",
            "hatta.config",
            "hatta.error",
            "hatta.hg_integration",
            "hatta.page",
            "hatta.parser",
            "hatta.request",
            "hatta.response",
            "hatta.search",
            "hatta.storage",
            "hatta.views",
            "hatta.wiki"
        ],
        "version": "1.6.7"
    },
    "hattie": {
        "cmdline": [],
        "modules": [
            "hattie",
            "hattie.collector",
            "hattie.collector.action",
            "hattie.collector.base",
            "hattie.collector.departments",
            "hattie.collector.item",
            "hattie.collector.main",
            "hattie.collector.meeting",
            "hattie.collector.people",
            "hattie.collector.rss",
            "hattie.database",
            "hattie.dbmanager",
            "hattie.hattie",
            "hattie.legistar",
            "hattie.manager",
            "hattie.managers",
            "hattie.managers.base",
            "hattie.managers.basic",
            "hattie.managers.main",
            "hattie.managers.util",
            "hattie.tagger",
            "hattie.util"
        ],
        "version": "0.2.23"
    },
    "hattifnatt": {
        "cmdline": [],
        "modules": [
            "hattifnatt"
        ],
        "version": "0.2.1"
    },
    "haufe-eggserver": {
        "cmdline": [],
        "modules": [
            "eggserver",
            "eggserver.eggsrv",
            "eggserver.parse_pkg_info",
            "eggserver.testing",
            "eggserver.util"
        ],
        "version": "0.2.6"
    },
    "haufe-hrs-configuration": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.hrs",
            "haufe.hrs.configuration",
            "haufe.hrs.configuration.decorator",
            "haufe.hrs.configuration.demo",
            "haufe.hrs.configuration.demo2_notify",
            "haufe.hrs.configuration.interfaces",
            "haufe.hrs.configuration.logger",
            "haufe.hrs.configuration.patches",
            "haufe.hrs.configuration.service",
            "haufe.hrs.configuration.services",
            "haufe.hrs.configuration.tests",
            "haufe.hrs.configuration.tests.test_configuration",
            "haufe.hrs.configuration.tests.test_directives",
            "haufe.hrs.configuration.tests.test_service",
            "haufe.hrs.configuration.util",
            "haufe.hrs.configuration.zcml"
        ],
        "version": "0.5.18"
    },
    "haufe-monitoring": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.monitoring",
            "haufe.monitoring.browser",
            "haufe.monitoring.browser.error_log_view",
            "haufe.monitoring.browser.monitor",
            "haufe.monitoring.browser.status",
            "haufe.monitoring.browser.unix",
            "haufe.monitoring.config",
            "haufe.monitoring.controlpanel",
            "haufe.monitoring.gil_monitor",
            "haufe.monitoring.network"
        ],
        "version": "0.2.1.4"
    },
    "haufe-releaser": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.releaser",
            "haufe.releaser.commands",
            "haufe.releaser.rest",
            "haufe.releaser.upload"
        ],
        "version": "0.1.5"
    },
    "haufe-requestmonitoring": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.requestmonitoring",
            "haufe.requestmonitoring.DumpTraceback",
            "haufe.requestmonitoring.Rotator",
            "haufe.requestmonitoring.info",
            "haufe.requestmonitoring.interfaces",
            "haufe.requestmonitoring.monitor",
            "haufe.requestmonitoring.patch",
            "haufe.requestmonitoring.successlogging",
            "haufe.requestmonitoring.timelogging"
        ],
        "version": "0.5.1"
    },
    "haufe-selenium": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.selenium",
            "haufe.selenium.cli"
        ],
        "version": "0.3.0"
    },
    "haufe-sharepoint": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.sharepoint",
            "haufe.sharepoint.cli",
            "haufe.sharepoint.connector",
            "haufe.sharepoint.logger",
            "haufe.sharepoint.patches",
            "haufe.sharepoint.tests",
            "haufe.sharepoint.tests.test_connector"
        ],
        "version": "0.1.9"
    },
    "haufe-sharepoint-extended": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haufe-sortabletable": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.sortabletable"
        ],
        "version": "0.2"
    },
    "haufe-stripml": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.stripml",
            "haufe.stripml.tests"
        ],
        "version": "1.2.2"
    },
    "haufe-testrunner": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.testrunner",
            "haufe.testrunner.cli",
            "haufe.testrunner.formatter",
            "haufe.testrunner.styles"
        ],
        "version": "0.6.13"
    },
    "haufe-testrunner-ui": {
        "cmdline": [],
        "modules": [
            "haufe_testrunner_ui",
            "haufe_testrunner_ui.app",
            "haufe_testrunner_ui.testing"
        ],
        "version": "0.1.5"
    },
    "haufe-ztop": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.ztop",
            "haufe.ztop.Feeder",
            "haufe.ztop.Sampler",
            "haufe.ztop.zanalyse",
            "haufe.ztop.ztop"
        ],
        "version": "0.2.2"
    },
    "haul": {
        "cmdline": [],
        "modules": [
            "haul",
            "haul.api",
            "haul.compat",
            "haul.core",
            "haul.exceptions",
            "haul.extenders",
            "haul.extenders.pipeline",
            "haul.extenders.pipeline.google",
            "haul.extenders.pipeline.pinterest",
            "haul.extenders.pipeline.tumblr",
            "haul.extenders.pipeline.wordpress",
            "haul.finders",
            "haul.finders.pipeline",
            "haul.finders.pipeline.css",
            "haul.finders.pipeline.html",
            "haul.settings",
            "haul.utils"
        ],
        "version": "1.3.2"
    },
    "haumea": {
        "cmdline": [],
        "modules": [
            "haumea",
            "haumea.quickstart"
        ],
        "version": "0.72.4"
    },
    "haus": {
        "cmdline": [],
        "modules": [
            "haus",
            "haus.cli",
            "haus.components",
            "haus.components.abstract",
            "haus.components.appinit",
            "haus.components.barrelsec",
            "haus.components.beakerstate",
            "haus.components.genshiview",
            "haus.components.locations",
            "haus.components.logger",
            "haus.components.prefixer",
            "haus.components.selectordispatch",
            "haus.components.standard",
            "haus.components.staticfiles",
            "haus.components.status",
            "haus.components.yaroreq",
            "haus.core"
        ],
        "version": "0.1.0"
    },
    "hausastemmer": {
        "cmdline": [],
        "modules": [
            "hausastemmer",
            "hausastemmer.HausaStemmer",
            "hausastemmer.dict_lookup"
        ],
        "version": "1.0"
    },
    "hausdorff": {
        "cmdline": [],
        "modules": [
            "hausdorff",
            "hausdorff.distances",
            "hausdorff.hausdorff"
        ],
        "version": "0.2.5"
    },
    "hausmon-client": {
        "cmdline": [],
        "modules": [
            "hausmon_client",
            "hausmon_client.client"
        ],
        "version": "0.0.4"
    },
    "hautomation-gpio": {
        "cmdline": [],
        "modules": [
            "hautomation_gpio",
            "hautomation_gpio.cmds",
            "hautomation_gpio.deploy",
            "hautomation_gpio.settings",
            "hautomation_gpio.tests",
            "hautomation_gpio.utils"
        ],
        "version": "0.7"
    },
    "hautomation-restclient": {
        "cmdline": [],
        "modules": [
            "hautomation_restclient",
            "hautomation_restclient.cmds",
            "hautomation_restclient.manage",
            "hautomation_restclient.tests"
        ],
        "version": "0.3.2"
    },
    "hautomation-x10": {
        "cmdline": [],
        "modules": [
            "hautomation_x10",
            "hautomation_x10.cmds",
            "hautomation_x10.deploy",
            "hautomation_x10.driver",
            "hautomation_x10.settings",
            "hautomation_x10.tests",
            "hautomation_x10.utils"
        ],
        "version": "0.11.1"
    },
    "havaiana": {
        "cmdline": [],
        "modules": [
            "havaiana",
            "havaiana.charts",
            "havaiana.config",
            "havaiana.example",
            "havaiana.helpers",
            "havaiana.renderers"
        ],
        "version": "2.6.2"
    },
    "havarti": {
        "cmdline": [],
        "modules": [
            "havarti",
            "havarti.celery",
            "havarti.data",
            "havarti.downloader",
            "havarti.parse",
            "havarti.storage",
            "havarti.storage.localstorage",
            "havarti.storage.rackspacestorage",
            "havarti.storage.s3storage"
        ],
        "version": "1.0"
    },
    "have-a-rest": {
        "cmdline": [],
        "modules": [
            "docs",
            "docs.generator",
            "have_a_rest",
            "have_a_rest.ext",
            "have_a_rest.ext.django",
            "have_a_rest.ext.django.json_response",
            "have_a_rest.ext.django.view",
            "have_a_rest.fields",
            "have_a_rest.json_response",
            "have_a_rest.view"
        ],
        "version": "0.1.3"
    },
    "havedocker": {
        "cmdline": [],
        "modules": [
            "havedocker",
            "havedocker.Docker",
            "havedocker.DockerError"
        ],
        "version": "0.1.3.7"
    },
    "haveibeenpwnd": {
        "cmdline": [],
        "modules": [
            "haveibeenpwnd",
            "haveibeenpwnd.main"
        ],
        "version": "0.2.2"
    },
    "haveibeenpwned": {
        "cmdline": [
            "haveibeenpwned"
        ],
        "modules": [
            "haveibeenpwned",
            "haveibeenpwned.__about__",
            "haveibeenpwned.status"
        ],
        "version": "0.0.6"
    },
    "haveibeenpywned": {
        "cmdline": [],
        "modules": [
            "haveibeenpywned",
            "haveibeenpywned.haveibeenpywned"
        ],
        "version": "0.2.93"
    },
    "haven": {
        "cmdline": [],
        "modules": [
            "haven",
            "haven.blueprint",
            "haven.connection",
            "haven.constants",
            "haven.contrib",
            "haven.contrib.websocket_gevent_impl",
            "haven.gevent_impl",
            "haven.haven",
            "haven.log",
            "haven.mixins",
            "haven.request",
            "haven.thread_impl",
            "haven.utils"
        ],
        "version": "2.0.3"
    },
    "haven-ai": {
        "cmdline": [],
        "modules": [
            "haven",
            "haven.haven_chk",
            "haven.haven_deploy",
            "haven.haven_deploy.haven_deploy",
            "haven.haven_img",
            "haven.haven_jobs",
            "haven.haven_jobs.utils_borgy",
            "haven.haven_jobs.utils_toolkit",
            "haven.haven_jupyter",
            "haven.haven_jupyter.utils_images",
            "haven.haven_jupyter.utils_latex",
            "haven.haven_jupyter.utils_plots",
            "haven.haven_jupyter.utils_sharing",
            "haven.haven_jupyter.utils_tables",
            "haven.haven_jupyter.utils_widgets",
            "haven.haven_results",
            "haven.haven_results.bar_plots",
            "haven.haven_results.line_plots",
            "haven.haven_results.pretty_plot",
            "haven.haven_results.utils_plots",
            "haven.haven_results.utils_tables",
            "haven.haven_share",
            "haven.haven_share.haven_dropbox",
            "haven.haven_share.haven_gdrive",
            "haven.haven_utils",
            "haven.haven_utils.exp_utils",
            "haven.haven_utils.file_utils",
            "haven.haven_utils.image_utils",
            "haven.haven_utils.pdf_utils",
            "haven.haven_utils.string_utils",
            "haven.tools",
            "haven.tools.ann_utils",
            "haven.tools.ap_metrics",
            "haven.tools.proposals",
            "haven.tools.samplers",
            "haven.tools.ssh_start",
            "haven.tools.transformers"
        ],
        "version": "0.1.0"
    },
    "haven-anomaly-detection": {
        "cmdline": [],
        "modules": [
            "anomaly_detection",
            "anomaly_detection.anomaly_detect_ts",
            "anomaly_detection.anomaly_detect_vec",
            "anomaly_detection.dynamic_cusum"
        ],
        "version": "0.0.3"
    },
    "haven-client": {
        "cmdline": [],
        "modules": [
            "haven",
            "haven.api",
            "haven.api.default_api",
            "haven.api_client",
            "haven.authed_api_client",
            "haven.configuration",
            "haven.exceptions",
            "haven.models",
            "haven.models.account_request_wrapper",
            "haven.models.account_sub_type",
            "haven.models.account_type",
            "haven.models.add_annotation_request",
            "haven.models.add_annotation_response",
            "haven.models.address",
            "haven.models.api_account",
            "haven.models.bad_request_service_error",
            "haven.models.balance",
            "haven.models.bootstrap_strategy",
            "haven.models.clean_category",
            "haven.models.clean_single_transaction_request",
            "haven.models.clean_single_transaction_response",
            "haven.models.clean_transaction",
            "haven.models.conflict_service_error",
            "haven.models.create_webhook_request",
            "haven.models.create_webhook_response",
            "haven.models.empty_response",
            "haven.models.get_accounts_response",
            "haven.models.get_merchant_response",
            "haven.models.get_transactions_response",
            "haven.models.get_webhooks_response",
            "haven.models.lat_long",
            "haven.models.merchant",
            "haven.models.not_found_service_error",
            "haven.models.open_hours",
            "haven.models.raw_merchant",
            "haven.models.raw_merchant_store",
            "haven.models.raw_transaction",
            "haven.models.service_error",
            "haven.models.tenant_service_account_agent_login_request",
            "haven.models.tenant_service_account_agent_login_response",
            "haven.models.transaction_kind",
            "haven.models.transaction_state",
            "haven.models.unauthorized_service_error",
            "haven.models.uncaught_exception_service_error",
            "haven.models.upload_batch_transactions_request",
            "haven.models.webhook",
            "haven.models.webhook_subscription",
            "haven.rest",
            "test",
            "test.test_account_request_wrapper",
            "test.test_account_sub_type",
            "test.test_account_type",
            "test.test_add_annotation_request",
            "test.test_add_annotation_response",
            "test.test_address",
            "test.test_api_account",
            "test.test_bad_request_service_error",
            "test.test_balance",
            "test.test_bootstrap_strategy",
            "test.test_clean_category",
            "test.test_clean_single_transaction_request",
            "test.test_clean_single_transaction_response",
            "test.test_clean_transaction",
            "test.test_conflict_service_error",
            "test.test_create_webhook_request",
            "test.test_create_webhook_response",
            "test.test_default_api",
            "test.test_empty_response",
            "test.test_get_accounts_response",
            "test.test_get_merchant_response",
            "test.test_get_transactions_response",
            "test.test_get_webhooks_response",
            "test.test_lat_long",
            "test.test_merchant",
            "test.test_not_found_service_error",
            "test.test_open_hours",
            "test.test_raw_merchant",
            "test.test_raw_merchant_store",
            "test.test_raw_transaction",
            "test.test_service_error",
            "test.test_tenant_service_account_agent_login_request",
            "test.test_tenant_service_account_agent_login_response",
            "test.test_transaction_kind",
            "test.test_transaction_state",
            "test.test_unauthorized_service_error",
            "test.test_uncaught_exception_service_error",
            "test.test_upload_batch_transactions_request",
            "test.test_webhook",
            "test.test_webhook_subscription"
        ],
        "version": "0.0.2"
    },
    "havenai": {
        "cmdline": [],
        "modules": [
            "haven",
            "haven.haven_chk",
            "haven.haven_dropbox",
            "haven.haven_gdrive",
            "haven.haven_img",
            "haven.haven_jobs",
            "haven.haven_jupyter",
            "haven.haven_results",
            "haven.haven_utils"
        ],
        "version": "0.5.0"
    },
    "havenondemand": {
        "cmdline": [],
        "modules": [
            "havenondemand",
            "havenondemand.errorcodes",
            "havenondemand.hodclient",
            "havenondemand.hodresponseparser"
        ],
        "version": "2.0.1.post0"
    },
    "haversine": {
        "cmdline": [],
        "modules": [
            "haversine",
            "haversine.haversine"
        ],
        "version": "2.3.0"
    },
    "havij": {
        "cmdline": [
            "salam"
        ],
        "modules": [
            "havij",
            "havij.dard"
        ],
        "version": "1.0"
    },
    "havocbot": {
        "cmdline": [],
        "modules": [
            "havocbot",
            "havocbot.bot",
            "havocbot.client",
            "havocbot.clients",
            "havocbot.clients.hipchat",
            "havocbot.clients.skype",
            "havocbot.clients.slack",
            "havocbot.clients.xmpp",
            "havocbot.common",
            "havocbot.core",
            "havocbot.core.havocbot_help",
            "havocbot.core.havocbot_list",
            "havocbot.core.havocbot_reload",
            "havocbot.core.havocbot_restart",
            "havocbot.core.havocbot_user",
            "havocbot.exceptions",
            "havocbot.message",
            "havocbot.plugin",
            "havocbot.pluginmanager",
            "havocbot.singletonmixin",
            "havocbot.stasher",
            "havocbot.user"
        ],
        "version": "0.2.0"
    },
    "hawaiio": {
        "cmdline": [],
        "modules": [
            "hawaiio",
            "hawaiio._base",
            "hawaiio._core",
            "hawaiio.testing"
        ],
        "version": "0.0.3"
    },
    "hawc-client": {
        "cmdline": [],
        "modules": [],
        "version": "2020.10"
    },
    "hawk": {
        "cmdline": [],
        "modules": [
            "hawk",
            "hawk.config",
            "hawk.scripts",
            "hawk.tinker"
        ],
        "version": "0.1"
    },
    "hawk-server": {
        "cmdline": [],
        "modules": [
            "hawkserver"
        ],
        "version": "0.0.12"
    },
    "hawk-server-asyncio": {
        "cmdline": [],
        "modules": [
            "hawkserver"
        ],
        "version": "0.0.13"
    },
    "hawkauthlib": {
        "cmdline": [],
        "modules": [
            "hawkauthlib",
            "hawkauthlib.noncecache",
            "hawkauthlib.tests",
            "hawkauthlib.tests.test_noncecache",
            "hawkauthlib.tests.test_request_objects",
            "hawkauthlib.tests.test_signatures",
            "hawkauthlib.tests.test_utils",
            "hawkauthlib.utils"
        ],
        "version": "2.0.0"
    },
    "hawkcatcher": {
        "cmdline": [],
        "modules": [
            "hawkcatcher"
        ],
        "version": "2.0.0"
    },
    "hawkei": {
        "cmdline": [],
        "modules": [
            "hawkei",
            "hawkei.config",
            "hawkei.constants",
            "hawkei.message",
            "hawkei.plugins.django.middleware",
            "hawkei.processor",
            "hawkei.processor.asynchronous",
            "hawkei.processor.batch",
            "hawkei.processor.worker",
            "hawkei.request",
            "hawkei.resources.batch",
            "hawkei.resources.watcher",
            "hawkei.store",
            "hawkei.utils",
            "hawkei.version"
        ],
        "version": "1.1.0"
    },
    "hawkeslib": {
        "cmdline": [],
        "modules": [
            "hawkeslib",
            "hawkeslib.model",
            "hawkeslib.model.c",
            "hawkeslib.model.model",
            "hawkeslib.model.mv_exp",
            "hawkeslib.model.poisson",
            "hawkeslib.model.uv_bayes",
            "hawkeslib.model.uv_exp",
            "hawkeslib.util",
            "hawkeslib.util.multitrace"
        ],
        "version": "0.2.2"
    },
    "hawkey": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hawkeye": {
        "cmdline": [],
        "modules": [
            "hawkeye",
            "hawkeye.dataobject",
            "hawkeye.functions",
            "hawkeye.hawkeye",
            "hawkeye.hawkeye_today",
            "hawkeye.location",
            "hawkeye.news",
            "hawkeye.weather",
            "hawkeye.workspace"
        ],
        "version": "0.1.8"
    },
    "hawkeyelib": {
        "cmdline": [],
        "modules": [
            "hawkeyelib"
        ],
        "version": "0.0.1"
    },
    "hawking": {
        "cmdline": [],
        "modules": [
            "hawking",
            "hawking.bot.secretary",
            "hawking.bot.secretary.secretary",
            "hawking.bot.telegram",
            "hawking.bot.telegram.bot",
            "hawking.cli",
            "hawking.common",
            "hawking.common.color",
            "hawking.encoder",
            "hawking.encoder.bert",
            "hawking.encoder.bert.encoder",
            "hawking.encoder.inceptionresnetv2",
            "hawking.encoder.inceptionresnetv2.encoder",
            "hawking.encoder.resnet50",
            "hawking.encoder.resnet50.encoder",
            "hawking.encoder.universal",
            "hawking.encoder.universal.encoder",
            "hawking.encoder.vgg",
            "hawking.encoder.vgg.encoder",
            "hawking.frontend",
            "hawking.frontend.api",
            "hawking.frontend.api.search",
            "hawking.frontend.application",
            "hawking.frontend.engine",
            "hawking.frontend.engine.default",
            "hawking.frontend.engine.local",
            "hawking.frontend.engine.online",
            "hawking.frontend.store",
            "hawking.frontend.store.default",
            "hawking.index",
            "hawking.index.faiss",
            "hawking.queue",
            "hawking.queue.local_queue",
            "hawking.serve",
            "hawking.serve.caption_server",
            "hawking.serve.faiss_server",
            "hawking.serve.queue_server",
            "hawking.serve.run_codegen",
            "hawking.serve.sptag_server",
            "hawking.serve.store_server"
        ],
        "version": "0.1.63"
    },
    "hawking-proto": {
        "cmdline": [],
        "modules": [
            "hawking_proto.hawking_pb2",
            "hawking_proto.hawking_pb2_grpc"
        ],
        "version": "0.1.15"
    },
    "hawkmoth": {
        "cmdline": [],
        "modules": [
            "hawkmoth",
            "hawkmoth.parser",
            "hawkmoth.util",
            "hawkmoth.util.doccompat",
            "hawkmoth.util.docstr"
        ],
        "version": "0.5"
    },
    "hawkrest": {
        "cmdline": [],
        "modules": [
            "hawkrest",
            "hawkrest.management",
            "hawkrest.management.commands",
            "hawkrest.management.commands.hawkrequest",
            "hawkrest.middleware",
            "hawkrest.models",
            "hawkrest.util"
        ],
        "version": "1.0.1"
    },
    "hawks": {
        "cmdline": [],
        "modules": [
            "hawks",
            "hawks.analysis",
            "hawks.cluster",
            "hawks.constraints",
            "hawks.dataset",
            "hawks.ga",
            "hawks.generator",
            "hawks.genotype",
            "hawks.io",
            "hawks.objectives",
            "hawks.plotting",
            "hawks.problem_features",
            "hawks.utils"
        ],
        "version": "0.2.0"
    },
    "hawktracer": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.0"
    },
    "hawktracer-core": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hawkular-client": {
        "cmdline": [],
        "modules": [
            "hawkular",
            "hawkular.alerts",
            "hawkular.client",
            "hawkular.metrics"
        ],
        "version": "0.5.5"
    },
    "hawkular-client-cli": {
        "cmdline": [],
        "modules": [
            "hawkular_client_cli",
            "hawkular_client_cli.command_line"
        ],
        "version": "0.18.3"
    },
    "hawkweed": {
        "cmdline": [],
        "modules": [
            "hawkweed",
            "hawkweed.classes",
            "hawkweed.classes.collection",
            "hawkweed.classes.dict_cls",
            "hawkweed.classes.future",
            "hawkweed.classes.iterable",
            "hawkweed.classes.list_cls",
            "hawkweed.classes.repr",
            "hawkweed.classes.set_cls",
            "hawkweed.computed",
            "hawkweed.functional",
            "hawkweed.functional.list_prims",
            "hawkweed.functional.logical",
            "hawkweed.functional.mathematical",
            "hawkweed.functional.primitives",
            "hawkweed.monads",
            "hawkweed.monads.continuation",
            "hawkweed.monads.either",
            "hawkweed.monads.identity",
            "hawkweed.monads.io",
            "hawkweed.monads.listm",
            "hawkweed.monads.maybe",
            "hawkweed.monads.monad",
            "tests",
            "tests.test_collection",
            "tests.test_continuation",
            "tests.test_dict",
            "tests.test_either",
            "tests.test_future",
            "tests.test_identity",
            "tests.test_io",
            "tests.test_iterable",
            "tests.test_list",
            "tests.test_list_prims",
            "tests.test_listm",
            "tests.test_logical",
            "tests.test_math",
            "tests.test_mathematical",
            "tests.test_maybe",
            "tests.test_monad",
            "tests.test_primitives",
            "tests.test_repr",
            "tests.test_set"
        ],
        "version": "0.1.5"
    },
    "hax": {
        "cmdline": [],
        "modules": [
            "hax",
            "hax._checks",
            "hax._hax",
            "hax._helpers",
            "hax._test"
        ],
        "version": "0.2.0"
    },
    "haxball-py": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.3"
    },
    "haxbd": {
        "cmdline": [],
        "modules": [
            "haxbd",
            "haxbd.nine_eleven",
            "haxbd.seven_eight"
        ],
        "version": "1.2"
    },
    "haxor": {
        "cmdline": [],
        "modules": [
            "hackernews",
            "hackernews.settings",
            "tests",
            "tests.test_api_version",
            "tests.test_ask_stories",
            "tests.test_get_all",
            "tests.test_get_async",
            "tests.test_get_item",
            "tests.test_get_items_by_ids",
            "tests.test_get_last",
            "tests.test_get_max_item",
            "tests.test_get_sync",
            "tests.test_get_user",
            "tests.test_get_users_by_ids",
            "tests.test_job_stories",
            "tests.test_new_stories",
            "tests.test_show_stories",
            "tests.test_top_stories",
            "tests.test_updates"
        ],
        "version": "1.2.1"
    },
    "haxor-game": {
        "cmdline": [],
        "modules": [
            "haxor",
            "haxor.command_line"
        ],
        "version": "0.0.15"
    },
    "haxor-game-adavila0703": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haxor-news": {
        "cmdline": [],
        "modules": [
            "haxor_news",
            "haxor_news.compat",
            "haxor_news.completer",
            "haxor_news.completions",
            "haxor_news.config",
            "haxor_news.hacker_news",
            "haxor_news.hacker_news_cli",
            "haxor_news.haxor",
            "haxor_news.keys",
            "haxor_news.lib",
            "haxor_news.lib.debug_timer",
            "haxor_news.lib.haxor",
            "haxor_news.lib.haxor.haxor",
            "haxor_news.lib.haxor.settings",
            "haxor_news.lib.html2text",
            "haxor_news.lib.html2text.html2text",
            "haxor_news.lib.pretty_date_time",
            "haxor_news.main",
            "haxor_news.main_cli",
            "haxor_news.onions",
            "haxor_news.settings",
            "haxor_news.style",
            "haxor_news.toolbar",
            "haxor_news.utils",
            "haxor_news.web_viewer",
            "tests",
            "tests.compat",
            "tests.data",
            "tests.data.comment",
            "tests.data.item",
            "tests.data.markdown",
            "tests.data.regex",
            "tests.data.tip",
            "tests.data.title",
            "tests.data.url",
            "tests.mock_hacker_news_api",
            "tests.run_tests",
            "tests.test_cli",
            "tests.test_completer",
            "tests.test_config",
            "tests.test_hacker_news",
            "tests.test_hacker_news_cli",
            "tests.test_haxor",
            "tests.test_keys",
            "tests.test_toolbar"
        ],
        "version": "0.4.3"
    },
    "hay": {
        "cmdline": [],
        "modules": [
            "hay",
            "hay.puppet"
        ],
        "version": "0.0.7"
    },
    "haya": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hayahalil": {
        "cmdline": [],
        "modules": [
            "hayahalil"
        ],
        "version": "0.0.2"
    },
    "hayaku": {
        "cmdline": [],
        "modules": [
            "main"
        ],
        "version": "0.1.2"
    },
    "haychecker": {
        "cmdline": [],
        "modules": [
            "haychecker",
            "haychecker._common",
            "haychecker._common._task",
            "haychecker._common.config",
            "haychecker._test",
            "haychecker._test.chc",
            "haychecker._test.chc.completeness_test",
            "haychecker._test.chc.constraint_test",
            "haychecker._test.chc.deduplication_test",
            "haychecker._test.chc.entropy_test",
            "haychecker._test.chc.freshness_test",
            "haychecker._test.chc.grouprule_test",
            "haychecker._test.chc.mutual_info_test",
            "haychecker._test.chc.rule_test",
            "haychecker._test.chc.runtime_checks_test",
            "haychecker._test.chc.task_test",
            "haychecker._test.chc.timeliness_test",
            "haychecker._test.common",
            "haychecker._test.common.config_test",
            "haychecker._test.dhc",
            "haychecker._test.dhc.completeness_test",
            "haychecker._test.dhc.constraint_test",
            "haychecker._test.dhc.deduplication_approximated_test",
            "haychecker._test.dhc.deduplication_test",
            "haychecker._test.dhc.entropy_test",
            "haychecker._test.dhc.freshness_test",
            "haychecker._test.dhc.grouprule_test",
            "haychecker._test.dhc.mutual_info_test",
            "haychecker._test.dhc.rule_test",
            "haychecker._test.dhc.runtime_checks_test",
            "haychecker._test.dhc.task_test",
            "haychecker._test.dhc.timeliness_test",
            "haychecker.chc",
            "haychecker.chc._runtime_checks",
            "haychecker.chc.metrics",
            "haychecker.chc.task",
            "haychecker.dhc",
            "haychecker.dhc._runtime_checks",
            "haychecker.dhc.metrics",
            "haychecker.dhc.task"
        ],
        "version": "0.0.1"
    },
    "hayes": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "haymetric": {
        "cmdline": [],
        "modules": [
            "haymetric",
            "haymetric.haymetric"
        ],
        "version": "0.1.1"
    },
    "hayrack": {
        "cmdline": [],
        "modules": [
            "hayrack",
            "hayrack.config",
            "hayrack.log",
            "hayrack.server",
            "hayrack.tests",
            "hayrack.tests.transport_test",
            "hayrack.transport"
        ],
        "version": "0.0.6"
    },
    "haystack": {
        "cmdline": [],
        "modules": [
            "haystack",
            "haystack.abc",
            "haystack.abc.interfaces",
            "haystack.allocators",
            "haystack.allocators.heapwalker",
            "haystack.allocators.libc",
            "haystack.allocators.libc.ctypes_elf",
            "haystack.allocators.libc.ctypes_malloc",
            "haystack.allocators.libc.libcheapwalker",
            "haystack.allocators.libc.libdl",
            "haystack.allocators.libc.sandbox",
            "haystack.allocators.win32",
            "haystack.allocators.win32.win7_32",
            "haystack.allocators.win32.win7_64",
            "haystack.allocators.win32.win7heap",
            "haystack.allocators.win32.win7heapwalker",
            "haystack.allocators.win32.winheap",
            "haystack.allocators.win32.winheapwalker",
            "haystack.allocators.win32.winxp_32",
            "haystack.allocators.win32.winxp_32_peb",
            "haystack.allocators.win32.winxp_64",
            "haystack.allocators.win32.winxpheap",
            "haystack.allocators.win32.winxpheapwalker",
            "haystack.argparse_utils",
            "haystack.basicmodel",
            "haystack.cli",
            "haystack.cliwin",
            "haystack.constraints",
            "haystack.dbg",
            "haystack.listmodel",
            "haystack.mappings",
            "haystack.mappings.base",
            "haystack.mappings.cuckoo",
            "haystack.mappings.file",
            "haystack.mappings.folder",
            "haystack.mappings.fridaprocess",
            "haystack.mappings.minidump",
            "haystack.mappings.process",
            "haystack.mappings.rek",
            "haystack.mappings.vol",
            "haystack.mappings.vol2map",
            "haystack.memory_dumper",
            "haystack.model",
            "haystack.outputters",
            "haystack.outputters.python",
            "haystack.outputters.text",
            "haystack.search",
            "haystack.search.api",
            "haystack.search.searcher",
            "haystack.target",
            "haystack.types",
            "haystack.utils",
            "haystack.win-dump-heap"
        ],
        "version": "0.42"
    },
    "haystack-bio": {
        "cmdline": [],
        "modules": [
            "haystack",
            "haystack.bioutilities",
            "haystack.external",
            "haystack.haystack_common",
            "haystack.haystack_download_genome_CORE",
            "haystack.haystack_hotspots_CORE",
            "haystack.haystack_motifs_CORE",
            "haystack.haystack_pipeline_CORE",
            "haystack.haystack_tf_activity_plane_CORE"
        ],
        "version": "0.4.0"
    },
    "haystack-client": {
        "cmdline": [],
        "modules": [
            "haystack",
            "haystack.agent",
            "haystack.agent.spanAgent_pb2",
            "haystack.agent.spanAgent_pb2_grpc",
            "haystack.agent_recorder",
            "haystack.binary_propagator",
            "haystack.constants",
            "haystack.http_recorder",
            "haystack.propagator",
            "haystack.recorder",
            "haystack.span",
            "haystack.span_pb2",
            "haystack.text_propagator",
            "haystack.tracer",
            "haystack.util"
        ],
        "version": "0.2.1"
    },
    "haystack-core": {
        "cmdline": [],
        "modules": [
            "haystack-core"
        ],
        "version": "0.1"
    },
    "haystack-myisam": {
        "cmdline": [],
        "modules": [
            "haystackmyisam",
            "haystackmyisam.models",
            "haystackmyisam.myisam_backend"
        ],
        "version": "0.0.3"
    },
    "haystack-queryparser": {
        "cmdline": [],
        "modules": [
            "haystack_queryparser",
            "haystack_queryparser.haystack_queryparser",
            "haystack_queryparser.tests"
        ],
        "version": "0.2.1"
    },
    "haystack-reverse": {
        "cmdline": [],
        "modules": [
            "haystack.reverse",
            "haystack.reverse.api",
            "haystack.reverse.cli",
            "haystack.reverse.config",
            "haystack.reverse.context",
            "haystack.reverse.diff",
            "haystack.reverse.enumerators",
            "haystack.reverse.fieldtypes",
            "haystack.reverse.graph",
            "haystack.reverse.heuristics",
            "haystack.reverse.heuristics.constraints",
            "haystack.reverse.heuristics.dsa",
            "haystack.reverse.heuristics.interfaces",
            "haystack.reverse.heuristics.model",
            "haystack.reverse.heuristics.pointertypes",
            "haystack.reverse.heuristics.radare",
            "haystack.reverse.heuristics.reversers",
            "haystack.reverse.heuristics.signature",
            "haystack.reverse.lrucache",
            "haystack.reverse.matchers",
            "haystack.reverse.pattern",
            "haystack.reverse.re_string",
            "haystack.reverse.searchers",
            "haystack.reverse.structure",
            "haystack.reverse.utils"
        ],
        "version": "0.42"
    },
    "haz": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hazake1235": {
        "cmdline": [],
        "modules": [
            "my_hash",
            "my_hash.my_hash"
        ],
        "version": "1.0.0"
    },
    "hazard-feed": {
        "cmdline": [],
        "modules": [
            "hazard_feed",
            "hazard_feed.admin",
            "hazard_feed.apps",
            "hazard_feed.config",
            "hazard_feed.forms",
            "hazard_feed.jobs",
            "hazard_feed.management",
            "hazard_feed.management.commands",
            "hazard_feed.management.commands.schedule_jobs",
            "hazard_feed.migrations",
            "hazard_feed.migrations.0001_initial",
            "hazard_feed.migrations.0002_hazardlevels_color_code",
            "hazard_feed.migrations.0003_weatherrecipients",
            "hazard_feed.migrations.0004_hazardfeeds_is_sent",
            "hazard_feed.migrations.0005_auto_20200204_2313",
            "hazard_feed.migrations.0006_weatherrecipients_uuid",
            "hazard_feed.migrations.0007_emailtemplates",
            "hazard_feed.migrations.0008_initial_hazard_levels_import",
            "hazard_feed.migrations.0009_initial_email_templates_import",
            "hazard_feed.migrations.0010_rssfeedurl",
            "hazard_feed.migrations.0011_rss_feed_url_initial",
            "hazard_feed.migrations.0012_auto_20200322_1820",
            "hazard_feed.migrations.0013_emailactivationcode_is_activate",
            "hazard_feed.migrations.0014_remove_emailactivationcode_session",
            "hazard_feed.models",
            "hazard_feed.serializers",
            "hazard_feed.signals",
            "hazard_feed.tasks",
            "hazard_feed.tests",
            "hazard_feed.urls",
            "hazard_feed.utils",
            "hazard_feed.views"
        ],
        "version": "0.1.4.5"
    },
    "haze": {
        "cmdline": [],
        "modules": [
            "haze",
            "haze.cli",
            "haze.cli.awsmetadata",
            "haze.cli.commands",
            "haze.cli.conductor",
            "haze.ec2"
        ],
        "version": "0.1.37"
    },
    "hazel": {
        "cmdline": [],
        "modules": [
            "hazel",
            "hazel.build",
            "hazel.cli",
            "hazel.config",
            "hazel.deploy",
            "hazel.load",
            "hazel.utils"
        ],
        "version": "0.4.5"
    },
    "hazelbean": {
        "cmdline": [],
        "modules": [
            "hazelbean",
            "hazelbean.arrayframe",
            "hazelbean.arrayframe_functions",
            "hazelbean.arrayframe_numpy_functions",
            "hazelbean.calculation_core",
            "hazelbean.calculation_core.compile_cython_functions",
            "hazelbean.cat_ears",
            "hazelbean.config",
            "hazelbean.conventions",
            "hazelbean.data_structures",
            "hazelbean.file_io",
            "hazelbean.geoprocessing",
            "hazelbean.geoprocessing_extension",
            "hazelbean.globals",
            "hazelbean.os_utils",
            "hazelbean.project_flow",
            "hazelbean.pyramids",
            "hazelbean.raster_vector_interface",
            "hazelbean.spatial_projection",
            "hazelbean.spatial_utils",
            "hazelbean.stats",
            "hazelbean.ui",
            "hazelbean.ui.auto_ui",
            "hazelbean.ui.auto_ui_tg",
            "hazelbean.ui.cli",
            "hazelbean.ui.datastack",
            "hazelbean.ui.execution",
            "hazelbean.ui.inputs",
            "hazelbean.ui.launcher",
            "hazelbean.ui.model",
            "hazelbean.ui.usage",
            "hazelbean.ui.usage_logger",
            "hazelbean.ui.utils",
            "hazelbean.ui.validation",
            "hazelbean.utils",
            "hazelbean.visualization",
            "hazelbean.watershed_processing",
            "tests",
            "tests.manual_t_align_and_resize_raster_stack",
            "tests.manual_t_arrayframe",
            "tests.manual_t_auto_ui",
            "tests.manual_t_auto_ui_tg",
            "tests.manual_t_force_reprojection",
            "tests.manual_t_imports",
            "tests.manual_t_rank_array",
            "tests.test_align_and_resize_raster_stack",
            "tests.test_arrayframe",
            "tests.test_arrayframe_functions",
            "tests.test_cat_ears",
            "tests.test_data_structures",
            "tests.test_describe",
            "tests.test_os_funcs",
            "tests.test_pygeoprocessing",
            "tests.test_spatial_utils"
        ],
        "version": "1.0.9"
    },
    "hazelcast-python-client": {
        "cmdline": [],
        "modules": [
            "hazelcast",
            "hazelcast.client",
            "hazelcast.cluster",
            "hazelcast.config",
            "hazelcast.connection",
            "hazelcast.core",
            "hazelcast.discovery",
            "hazelcast.exception",
            "hazelcast.future",
            "hazelcast.hash",
            "hazelcast.invocation",
            "hazelcast.lifecycle",
            "hazelcast.listener",
            "hazelcast.near_cache",
            "hazelcast.partition",
            "hazelcast.protocol",
            "hazelcast.protocol.client_message",
            "hazelcast.protocol.codec",
            "hazelcast.protocol.codec.atomic_long_add_and_get_codec",
            "hazelcast.protocol.codec.atomic_long_alter_and_get_codec",
            "hazelcast.protocol.codec.atomic_long_alter_codec",
            "hazelcast.protocol.codec.atomic_long_apply_codec",
            "hazelcast.protocol.codec.atomic_long_compare_and_set_codec",
            "hazelcast.protocol.codec.atomic_long_decrement_and_get_codec",
            "hazelcast.protocol.codec.atomic_long_get_and_add_codec",
            "hazelcast.protocol.codec.atomic_long_get_and_alter_codec",
            "hazelcast.protocol.codec.atomic_long_get_and_increment_codec",
            "hazelcast.protocol.codec.atomic_long_get_and_set_codec",
            "hazelcast.protocol.codec.atomic_long_get_codec",
            "hazelcast.protocol.codec.atomic_long_increment_and_get_codec",
            "hazelcast.protocol.codec.atomic_long_message_type",
            "hazelcast.protocol.codec.atomic_long_set_codec",
            "hazelcast.protocol.codec.atomic_reference_alter_and_get_codec",
            "hazelcast.protocol.codec.atomic_reference_alter_codec",
            "hazelcast.protocol.codec.atomic_reference_apply_codec",
            "hazelcast.protocol.codec.atomic_reference_clear_codec",
            "hazelcast.protocol.codec.atomic_reference_compare_and_set_codec",
            "hazelcast.protocol.codec.atomic_reference_contains_codec",
            "hazelcast.protocol.codec.atomic_reference_get_and_alter_codec",
            "hazelcast.protocol.codec.atomic_reference_get_and_set_codec",
            "hazelcast.protocol.codec.atomic_reference_get_codec",
            "hazelcast.protocol.codec.atomic_reference_is_null_codec",
            "hazelcast.protocol.codec.atomic_reference_message_type",
            "hazelcast.protocol.codec.atomic_reference_set_and_get_codec",
            "hazelcast.protocol.codec.atomic_reference_set_codec",
            "hazelcast.protocol.codec.client_add_distributed_object_listener_codec",
            "hazelcast.protocol.codec.client_add_membership_listener_codec",
            "hazelcast.protocol.codec.client_add_partition_lost_listener_codec",
            "hazelcast.protocol.codec.client_authentication_codec",
            "hazelcast.protocol.codec.client_authentication_custom_codec",
            "hazelcast.protocol.codec.client_create_proxy_codec",
            "hazelcast.protocol.codec.client_destroy_proxy_codec",
            "hazelcast.protocol.codec.client_get_distributed_objects_codec",
            "hazelcast.protocol.codec.client_get_partitions_codec",
            "hazelcast.protocol.codec.client_message_type",
            "hazelcast.protocol.codec.client_ping_codec",
            "hazelcast.protocol.codec.client_remove_all_listeners_codec",
            "hazelcast.protocol.codec.client_remove_distributed_object_listener_codec",
            "hazelcast.protocol.codec.client_remove_partition_lost_listener_codec",
            "hazelcast.protocol.codec.client_statistics_codec",
            "hazelcast.protocol.codec.count_down_latch_await_codec",
            "hazelcast.protocol.codec.count_down_latch_count_down_codec",
            "hazelcast.protocol.codec.count_down_latch_get_count_codec",
            "hazelcast.protocol.codec.count_down_latch_message_type",
            "hazelcast.protocol.codec.count_down_latch_try_set_count_codec",
            "hazelcast.protocol.codec.executor_service_cancel_on_address_codec",
            "hazelcast.protocol.codec.executor_service_cancel_on_partition_codec",
            "hazelcast.protocol.codec.executor_service_is_shutdown_codec",
            "hazelcast.protocol.codec.executor_service_message_type",
            "hazelcast.protocol.codec.executor_service_shutdown_codec",
            "hazelcast.protocol.codec.executor_service_submit_to_address_codec",
            "hazelcast.protocol.codec.executor_service_submit_to_partition_codec",
            "hazelcast.protocol.codec.flake_id_generator_message_type",
            "hazelcast.protocol.codec.flake_id_generator_new_id_batch_codec",
            "hazelcast.protocol.codec.list_add_all_codec",
            "hazelcast.protocol.codec.list_add_all_with_index_codec",
            "hazelcast.protocol.codec.list_add_codec",
            "hazelcast.protocol.codec.list_add_listener_codec",
            "hazelcast.protocol.codec.list_add_with_index_codec",
            "hazelcast.protocol.codec.list_clear_codec",
            "hazelcast.protocol.codec.list_compare_and_remove_all_codec",
            "hazelcast.protocol.codec.list_compare_and_retain_all_codec",
            "hazelcast.protocol.codec.list_contains_all_codec",
            "hazelcast.protocol.codec.list_contains_codec",
            "hazelcast.protocol.codec.list_get_all_codec",
            "hazelcast.protocol.codec.list_get_codec",
            "hazelcast.protocol.codec.list_index_of_codec",
            "hazelcast.protocol.codec.list_is_empty_codec",
            "hazelcast.protocol.codec.list_iterator_codec",
            "hazelcast.protocol.codec.list_last_index_of_codec",
            "hazelcast.protocol.codec.list_list_iterator_codec",
            "hazelcast.protocol.codec.list_message_type",
            "hazelcast.protocol.codec.list_remove_codec",
            "hazelcast.protocol.codec.list_remove_listener_codec",
            "hazelcast.protocol.codec.list_remove_with_index_codec",
            "hazelcast.protocol.codec.list_set_codec",
            "hazelcast.protocol.codec.list_size_codec",
            "hazelcast.protocol.codec.list_sub_codec",
            "hazelcast.protocol.codec.lock_force_unlock_codec",
            "hazelcast.protocol.codec.lock_get_lock_count_codec",
            "hazelcast.protocol.codec.lock_get_remaining_lease_time_codec",
            "hazelcast.protocol.codec.lock_is_locked_by_current_thread_codec",
            "hazelcast.protocol.codec.lock_is_locked_codec",
            "hazelcast.protocol.codec.lock_lock_codec",
            "hazelcast.protocol.codec.lock_message_type",
            "hazelcast.protocol.codec.lock_try_lock_codec",
            "hazelcast.protocol.codec.lock_unlock_codec",
            "hazelcast.protocol.codec.map_add_entry_listener_codec",
            "hazelcast.protocol.codec.map_add_entry_listener_to_key_codec",
            "hazelcast.protocol.codec.map_add_entry_listener_to_key_with_predicate_codec",
            "hazelcast.protocol.codec.map_add_entry_listener_with_predicate_codec",
            "hazelcast.protocol.codec.map_add_index_codec",
            "hazelcast.protocol.codec.map_add_interceptor_codec",
            "hazelcast.protocol.codec.map_add_near_cache_entry_listener_codec",
            "hazelcast.protocol.codec.map_add_partition_lost_listener_codec",
            "hazelcast.protocol.codec.map_clear_codec",
            "hazelcast.protocol.codec.map_clear_near_cache_codec",
            "hazelcast.protocol.codec.map_contains_key_codec",
            "hazelcast.protocol.codec.map_contains_value_codec",
            "hazelcast.protocol.codec.map_delete_codec",
            "hazelcast.protocol.codec.map_entries_with_paging_predicate_codec",
            "hazelcast.protocol.codec.map_entries_with_predicate_codec",
            "hazelcast.protocol.codec.map_entry_set_codec",
            "hazelcast.protocol.codec.map_evict_all_codec",
            "hazelcast.protocol.codec.map_evict_codec",
            "hazelcast.protocol.codec.map_execute_on_all_keys_codec",
            "hazelcast.protocol.codec.map_execute_on_key_codec",
            "hazelcast.protocol.codec.map_execute_on_keys_codec",
            "hazelcast.protocol.codec.map_execute_with_predicate_codec",
            "hazelcast.protocol.codec.map_flush_codec",
            "hazelcast.protocol.codec.map_force_unlock_codec",
            "hazelcast.protocol.codec.map_get_all_codec",
            "hazelcast.protocol.codec.map_get_codec",
            "hazelcast.protocol.codec.map_get_entry_view_codec",
            "hazelcast.protocol.codec.map_is_empty_codec",
            "hazelcast.protocol.codec.map_is_locked_codec",
            "hazelcast.protocol.codec.map_key_set_codec",
            "hazelcast.protocol.codec.map_key_set_with_paging_predicate_codec",
            "hazelcast.protocol.codec.map_key_set_with_predicate_codec",
            "hazelcast.protocol.codec.map_load_all_codec",
            "hazelcast.protocol.codec.map_load_given_keys_codec",
            "hazelcast.protocol.codec.map_lock_codec",
            "hazelcast.protocol.codec.map_message_type",
            "hazelcast.protocol.codec.map_put_all_codec",
            "hazelcast.protocol.codec.map_put_codec",
            "hazelcast.protocol.codec.map_put_if_absent_codec",
            "hazelcast.protocol.codec.map_put_transient_codec",
            "hazelcast.protocol.codec.map_remove_codec",
            "hazelcast.protocol.codec.map_remove_entry_listener_codec",
            "hazelcast.protocol.codec.map_remove_if_same_codec",
            "hazelcast.protocol.codec.map_remove_interceptor_codec",
            "hazelcast.protocol.codec.map_remove_partition_lost_listener_codec",
            "hazelcast.protocol.codec.map_replace_codec",
            "hazelcast.protocol.codec.map_replace_if_same_codec",
            "hazelcast.protocol.codec.map_set_codec",
            "hazelcast.protocol.codec.map_size_codec",
            "hazelcast.protocol.codec.map_try_lock_codec",
            "hazelcast.protocol.codec.map_try_put_codec",
            "hazelcast.protocol.codec.map_try_remove_codec",
            "hazelcast.protocol.codec.map_unlock_codec",
            "hazelcast.protocol.codec.map_values_codec",
            "hazelcast.protocol.codec.map_values_with_paging_predicate_codec",
            "hazelcast.protocol.codec.map_values_with_predicate_codec",
            "hazelcast.protocol.codec.multi_map_add_entry_listener_codec",
            "hazelcast.protocol.codec.multi_map_add_entry_listener_to_key_codec",
            "hazelcast.protocol.codec.multi_map_clear_codec",
            "hazelcast.protocol.codec.multi_map_contains_entry_codec",
            "hazelcast.protocol.codec.multi_map_contains_key_codec",
            "hazelcast.protocol.codec.multi_map_contains_value_codec",
            "hazelcast.protocol.codec.multi_map_entry_set_codec",
            "hazelcast.protocol.codec.multi_map_force_unlock_codec",
            "hazelcast.protocol.codec.multi_map_get_codec",
            "hazelcast.protocol.codec.multi_map_is_locked_codec",
            "hazelcast.protocol.codec.multi_map_key_set_codec",
            "hazelcast.protocol.codec.multi_map_lock_codec",
            "hazelcast.protocol.codec.multi_map_message_type",
            "hazelcast.protocol.codec.multi_map_put_codec",
            "hazelcast.protocol.codec.multi_map_remove_codec",
            "hazelcast.protocol.codec.multi_map_remove_entry_codec",
            "hazelcast.protocol.codec.multi_map_remove_entry_listener_codec",
            "hazelcast.protocol.codec.multi_map_size_codec",
            "hazelcast.protocol.codec.multi_map_try_lock_codec",
            "hazelcast.protocol.codec.multi_map_unlock_codec",
            "hazelcast.protocol.codec.multi_map_value_count_codec",
            "hazelcast.protocol.codec.multi_map_values_codec",
            "hazelcast.protocol.codec.pn_counter_add_codec",
            "hazelcast.protocol.codec.pn_counter_get_codec",
            "hazelcast.protocol.codec.pn_counter_get_configured_replica_count_codec",
            "hazelcast.protocol.codec.pn_counter_message_type",
            "hazelcast.protocol.codec.queue_add_all_codec",
            "hazelcast.protocol.codec.queue_add_listener_codec",
            "hazelcast.protocol.codec.queue_clear_codec",
            "hazelcast.protocol.codec.queue_compare_and_remove_all_codec",
            "hazelcast.protocol.codec.queue_compare_and_retain_all_codec",
            "hazelcast.protocol.codec.queue_contains_all_codec",
            "hazelcast.protocol.codec.queue_contains_codec",
            "hazelcast.protocol.codec.queue_drain_to_codec",
            "hazelcast.protocol.codec.queue_drain_to_max_size_codec",
            "hazelcast.protocol.codec.queue_is_empty_codec",
            "hazelcast.protocol.codec.queue_iterator_codec",
            "hazelcast.protocol.codec.queue_message_type",
            "hazelcast.protocol.codec.queue_offer_codec",
            "hazelcast.protocol.codec.queue_peek_codec",
            "hazelcast.protocol.codec.queue_poll_codec",
            "hazelcast.protocol.codec.queue_put_codec",
            "hazelcast.protocol.codec.queue_remaining_capacity_codec",
            "hazelcast.protocol.codec.queue_remove_codec",
            "hazelcast.protocol.codec.queue_remove_listener_codec",
            "hazelcast.protocol.codec.queue_size_codec",
            "hazelcast.protocol.codec.queue_take_codec",
            "hazelcast.protocol.codec.replicated_map_add_entry_listener_codec",
            "hazelcast.protocol.codec.replicated_map_add_entry_listener_to_key_codec",
            "hazelcast.protocol.codec.replicated_map_add_entry_listener_to_key_with_predicate_codec",
            "hazelcast.protocol.codec.replicated_map_add_entry_listener_with_predicate_codec",
            "hazelcast.protocol.codec.replicated_map_add_near_cache_entry_listener_codec",
            "hazelcast.protocol.codec.replicated_map_clear_codec",
            "hazelcast.protocol.codec.replicated_map_contains_key_codec",
            "hazelcast.protocol.codec.replicated_map_contains_value_codec",
            "hazelcast.protocol.codec.replicated_map_entry_set_codec",
            "hazelcast.protocol.codec.replicated_map_get_codec",
            "hazelcast.protocol.codec.replicated_map_is_empty_codec",
            "hazelcast.protocol.codec.replicated_map_key_set_codec",
            "hazelcast.protocol.codec.replicated_map_message_type",
            "hazelcast.protocol.codec.replicated_map_put_all_codec",
            "hazelcast.protocol.codec.replicated_map_put_codec",
            "hazelcast.protocol.codec.replicated_map_remove_codec",
            "hazelcast.protocol.codec.replicated_map_remove_entry_listener_codec",
            "hazelcast.protocol.codec.replicated_map_size_codec",
            "hazelcast.protocol.codec.replicated_map_values_codec",
            "hazelcast.protocol.codec.ringbuffer_add_all_codec",
            "hazelcast.protocol.codec.ringbuffer_add_codec",
            "hazelcast.protocol.codec.ringbuffer_capacity_codec",
            "hazelcast.protocol.codec.ringbuffer_head_sequence_codec",
            "hazelcast.protocol.codec.ringbuffer_message_type",
            "hazelcast.protocol.codec.ringbuffer_read_many_codec",
            "hazelcast.protocol.codec.ringbuffer_read_one_codec",
            "hazelcast.protocol.codec.ringbuffer_remaining_capacity_codec",
            "hazelcast.protocol.codec.ringbuffer_size_codec",
            "hazelcast.protocol.codec.ringbuffer_tail_sequence_codec",
            "hazelcast.protocol.codec.semaphore_acquire_codec",
            "hazelcast.protocol.codec.semaphore_available_permits_codec",
            "hazelcast.protocol.codec.semaphore_drain_permits_codec",
            "hazelcast.protocol.codec.semaphore_init_codec",
            "hazelcast.protocol.codec.semaphore_message_type",
            "hazelcast.protocol.codec.semaphore_reduce_permits_codec",
            "hazelcast.protocol.codec.semaphore_release_codec",
            "hazelcast.protocol.codec.semaphore_try_acquire_codec",
            "hazelcast.protocol.codec.set_add_all_codec",
            "hazelcast.protocol.codec.set_add_codec",
            "hazelcast.protocol.codec.set_add_listener_codec",
            "hazelcast.protocol.codec.set_clear_codec",
            "hazelcast.protocol.codec.set_compare_and_remove_all_codec",
            "hazelcast.protocol.codec.set_compare_and_retain_all_codec",
            "hazelcast.protocol.codec.set_contains_all_codec",
            "hazelcast.protocol.codec.set_contains_codec",
            "hazelcast.protocol.codec.set_get_all_codec",
            "hazelcast.protocol.codec.set_is_empty_codec",
            "hazelcast.protocol.codec.set_message_type",
            "hazelcast.protocol.codec.set_remove_codec",
            "hazelcast.protocol.codec.set_remove_listener_codec",
            "hazelcast.protocol.codec.set_size_codec",
            "hazelcast.protocol.codec.topic_add_message_listener_codec",
            "hazelcast.protocol.codec.topic_message_type",
            "hazelcast.protocol.codec.topic_publish_codec",
            "hazelcast.protocol.codec.topic_remove_message_listener_codec",
            "hazelcast.protocol.codec.transaction_commit_codec",
            "hazelcast.protocol.codec.transaction_create_codec",
            "hazelcast.protocol.codec.transaction_message_type",
            "hazelcast.protocol.codec.transaction_rollback_codec",
            "hazelcast.protocol.codec.transactional_list_add_codec",
            "hazelcast.protocol.codec.transactional_list_message_type",
            "hazelcast.protocol.codec.transactional_list_remove_codec",
            "hazelcast.protocol.codec.transactional_list_size_codec",
            "hazelcast.protocol.codec.transactional_map_contains_key_codec",
            "hazelcast.protocol.codec.transactional_map_delete_codec",
            "hazelcast.protocol.codec.transactional_map_get_codec",
            "hazelcast.protocol.codec.transactional_map_get_for_update_codec",
            "hazelcast.protocol.codec.transactional_map_is_empty_codec",
            "hazelcast.protocol.codec.transactional_map_key_set_codec",
            "hazelcast.protocol.codec.transactional_map_key_set_with_predicate_codec",
            "hazelcast.protocol.codec.transactional_map_message_type",
            "hazelcast.protocol.codec.transactional_map_put_codec",
            "hazelcast.protocol.codec.transactional_map_put_if_absent_codec",
            "hazelcast.protocol.codec.transactional_map_remove_codec",
            "hazelcast.protocol.codec.transactional_map_remove_if_same_codec",
            "hazelcast.protocol.codec.transactional_map_replace_codec",
            "hazelcast.protocol.codec.transactional_map_replace_if_same_codec",
            "hazelcast.protocol.codec.transactional_map_set_codec",
            "hazelcast.protocol.codec.transactional_map_size_codec",
            "hazelcast.protocol.codec.transactional_map_values_codec",
            "hazelcast.protocol.codec.transactional_map_values_with_predicate_codec",
            "hazelcast.protocol.codec.transactional_multi_map_get_codec",
            "hazelcast.protocol.codec.transactional_multi_map_message_type",
            "hazelcast.protocol.codec.transactional_multi_map_put_codec",
            "hazelcast.protocol.codec.transactional_multi_map_remove_codec",
            "hazelcast.protocol.codec.transactional_multi_map_remove_entry_codec",
            "hazelcast.protocol.codec.transactional_multi_map_size_codec",
            "hazelcast.protocol.codec.transactional_multi_map_value_count_codec",
            "hazelcast.protocol.codec.transactional_queue_message_type",
            "hazelcast.protocol.codec.transactional_queue_offer_codec",
            "hazelcast.protocol.codec.transactional_queue_peek_codec",
            "hazelcast.protocol.codec.transactional_queue_poll_codec",
            "hazelcast.protocol.codec.transactional_queue_size_codec",
            "hazelcast.protocol.codec.transactional_queue_take_codec",
            "hazelcast.protocol.codec.transactional_set_add_codec",
            "hazelcast.protocol.codec.transactional_set_message_type",
            "hazelcast.protocol.codec.transactional_set_remove_codec",
            "hazelcast.protocol.codec.transactional_set_size_codec",
            "hazelcast.protocol.custom_codec",
            "hazelcast.protocol.error_codes",
            "hazelcast.protocol.event_response_const",
            "hazelcast.proxy",
            "hazelcast.proxy.atomic_long",
            "hazelcast.proxy.atomic_reference",
            "hazelcast.proxy.base",
            "hazelcast.proxy.count_down_latch",
            "hazelcast.proxy.executor",
            "hazelcast.proxy.flake_id_generator",
            "hazelcast.proxy.id_generator",
            "hazelcast.proxy.list",
            "hazelcast.proxy.lock",
            "hazelcast.proxy.map",
            "hazelcast.proxy.multi_map",
            "hazelcast.proxy.pn_counter",
            "hazelcast.proxy.queue",
            "hazelcast.proxy.reliable_topic",
            "hazelcast.proxy.replicated_map",
            "hazelcast.proxy.ringbuffer",
            "hazelcast.proxy.semaphore",
            "hazelcast.proxy.set",
            "hazelcast.proxy.topic",
            "hazelcast.proxy.transactional_list",
            "hazelcast.proxy.transactional_map",
            "hazelcast.proxy.transactional_multi_map",
            "hazelcast.proxy.transactional_queue",
            "hazelcast.proxy.transactional_set",
            "hazelcast.reactor",
            "hazelcast.serialization",
            "hazelcast.serialization.api",
            "hazelcast.serialization.base",
            "hazelcast.serialization.bits",
            "hazelcast.serialization.data",
            "hazelcast.serialization.input",
            "hazelcast.serialization.output",
            "hazelcast.serialization.portable",
            "hazelcast.serialization.portable.classdef",
            "hazelcast.serialization.portable.context",
            "hazelcast.serialization.portable.reader",
            "hazelcast.serialization.portable.serializer",
            "hazelcast.serialization.portable.writer",
            "hazelcast.serialization.predicate",
            "hazelcast.serialization.serialization_const",
            "hazelcast.serialization.serializer",
            "hazelcast.serialization.service",
            "hazelcast.six",
            "hazelcast.statistics",
            "hazelcast.transaction",
            "hazelcast.util",
            "hazelcast.version"
        ],
        "version": "3.12.3"
    },
    "hazelcast-remote-controller": {
        "cmdline": [],
        "modules": [
            "hzrc",
            "hzrc.RemoteController",
            "hzrc.client",
            "hzrc.constants",
            "hzrc.ttypes"
        ],
        "version": "0.1"
    },
    "hazelcastpythonclient": {
        "cmdline": [],
        "modules": [
            "hazelcastpythonclient",
            "hazelcastpythonclient.cli"
        ],
        "version": "0.1.1"
    },
    "hazelib": {
        "cmdline": [],
        "modules": [
            "hazelib"
        ],
        "version": "0.0.14"
    },
    "hazelinv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hazelnut": {
        "cmdline": [],
        "modules": [
            "hazelnut",
            "hazelnut.core"
        ],
        "version": "0.4.1"
    },
    "hazelpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hazem1": {
        "cmdline": [],
        "modules": [
            "Hazem1",
            "Hazem1.Binomialdistribution",
            "Hazem1.Gaussiandistribution",
            "Hazem1.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hazinses": {
        "cmdline": [],
        "modules": [
            "hazinses",
            "hazinses.admin",
            "hazinses.hazinses",
            "hazinses.models",
            "hazinses.tasks",
            "hazinses.urls",
            "hazinses.views"
        ],
        "version": "0.5.2"
    },
    "haziris": {
        "cmdline": [],
        "modules": [
            "haziris",
            "haziris.version"
        ],
        "version": "0.4.0"
    },
    "hazm": {
        "cmdline": [],
        "modules": [
            "hazm",
            "hazm.BijankhanReader",
            "hazm.Chunker",
            "hazm.DadeganReader",
            "hazm.DependencyParser",
            "hazm.HamshahriReader",
            "hazm.InformalNormalizer",
            "hazm.Lemmatizer",
            "hazm.Normalizer",
            "hazm.POSTagger",
            "hazm.PersicaReader",
            "hazm.PeykareReader",
            "hazm.QuranCorpusReader",
            "hazm.SentenceTokenizer",
            "hazm.SentiPersReader",
            "hazm.SequenceTagger",
            "hazm.Stemmer",
            "hazm.TNewsReader",
            "hazm.TokenSplitter",
            "hazm.TreebankReader",
            "hazm.VerbValencyReader",
            "hazm.WikiExtractor",
            "hazm.WikipediaReader",
            "hazm.WordTokenizer",
            "hazm.utils"
        ],
        "version": "0.7.0"
    },
    "hazma": {
        "cmdline": [],
        "modules": [
            "hazma",
            "hazma.axial_vector_mediator",
            "hazma.axial_vector_mediator._axial_vector_mediator_cross_sections",
            "hazma.axial_vector_mediator._axial_vector_mediator_positron_spectra",
            "hazma.axial_vector_mediator.avm_msqrd",
            "hazma.axial_vector_mediator.axial_vector_mediator_cross_sections",
            "hazma.axial_vector_mediator.axial_vector_mediator_parameters",
            "hazma.background_model",
            "hazma.cmb",
            "hazma.constraint_parameters",
            "hazma.decay",
            "hazma.decay_helper_functions",
            "hazma.decay_helper_functions.get_path",
            "hazma.field_theory_helper_functions",
            "hazma.flux_measurement",
            "hazma.gamma_ray",
            "hazma.gamma_ray_helper_functions",
            "hazma.gamma_ray_parameters",
            "hazma.hazma_errors",
            "hazma.parameters",
            "hazma.phase_space_helper_functions",
            "hazma.positron_helper_functions",
            "hazma.positron_spectra",
            "hazma.pseudo_scalar_mediator",
            "hazma.pseudo_scalar_mediator._pseudo_scalar_mediator_cross_sections",
            "hazma.pseudo_scalar_mediator._pseudo_scalar_mediator_fsr",
            "hazma.pseudo_scalar_mediator._pseudo_scalar_mediator_msqrd_rambo",
            "hazma.pseudo_scalar_mediator._pseudo_scalar_mediator_positron_spectra",
            "hazma.pseudo_scalar_mediator._pseudo_scalar_mediator_spectra",
            "hazma.pseudo_scalar_mediator._pseudo_scalar_mediator_widths",
            "hazma.rambo",
            "hazma.relic_density",
            "hazma.scalar_mediator",
            "hazma.scalar_mediator._scalar_mediator_constraints",
            "hazma.scalar_mediator._scalar_mediator_cross_sections",
            "hazma.scalar_mediator._scalar_mediator_fsr",
            "hazma.scalar_mediator._scalar_mediator_positron_spectra",
            "hazma.scalar_mediator._scalar_mediator_spectra",
            "hazma.scalar_mediator._scalar_mediator_widths",
            "hazma.theory",
            "hazma.theory._theory_cmb",
            "hazma.theory._theory_constrain",
            "hazma.theory._theory_gamma_ray_limits",
            "hazma.vector_mediator",
            "hazma.vector_mediator._vector_mediator_cross_sections",
            "hazma.vector_mediator._vector_mediator_fsr",
            "hazma.vector_mediator._vector_mediator_positron_spectra",
            "hazma.vector_mediator._vector_mediator_spectra",
            "hazma.vector_mediator._vector_mediator_widths"
        ],
        "version": "1.1"
    },
    "hazpy": {
        "cmdline": [],
        "modules": [
            "hazpy",
            "hazpy.admin",
            "hazpy.admin.tools",
            "hazpy.common",
            "hazpy.common.classes",
            "hazpy.common.methods",
            "hazpy.earthquake",
            "hazpy.earthquake.classes",
            "hazpy.earthquake.modules",
            "hazpy.earthquake.modules.AEBM",
            "hazpy.earthquake.modules.advanced_engineering_bldg_mode",
            "hazpy.earthquake.modules.direct_social_losses",
            "hazpy.earthquake.modules.essential_facilities",
            "hazpy.earthquake.modules.general_buildings",
            "hazpy.earthquake.modules.indirect_economic_loss",
            "hazpy.earthquake.modules.induced_physical_damage",
            "hazpy.earthquake.modules.military_installation",
            "hazpy.earthquake.modules.transportation_systems",
            "hazpy.earthquake.modules.user_defined_structures",
            "hazpy.earthquake.modules.utility_systems",
            "hazpy.flood",
            "hazpy.flood.classes",
            "hazpy.flood.modules",
            "hazpy.flood.modules.UDF",
            "hazpy.flood.modules.agriculture",
            "hazpy.flood.modules.direct_social_losses",
            "hazpy.flood.modules.essential_facilities",
            "hazpy.flood.modules.general_building_stock",
            "hazpy.flood.modules.indirect_economic_loss",
            "hazpy.flood.modules.transportation_systems",
            "hazpy.flood.modules.user_defined_structures",
            "hazpy.flood.modules.utility_systems",
            "hazpy.flood.modules.vehicles",
            "hazpy.flood.modules.what_if",
            "hazpy.hurricane",
            "hazpy.hurricane.classes",
            "hazpy.hurricane.modules",
            "hazpy.hurricane.modules.direct_economic_loss",
            "hazpy.hurricane.modules.direct_physical_damage",
            "hazpy.hurricane.modules.direct_social_loss",
            "hazpy.hurricane.modules.induced_physical_damage",
            "hazpy.legacy",
            "hazpy.legacy.common",
            "hazpy.legacy.exporting",
            "hazpy.legacy.exporting.Setup_Connection",
            "hazpy.legacy.exporting.classes",
            "hazpy.legacy.exporting.methods",
            "hazpy.legacy.exporting.reports",
            "hazpy.legacy.exporting.reports.Eq_Report_Generator",
            "hazpy.legacy.exporting.reports.Fl_Report_Generator",
            "hazpy.legacy.exporting.reports.Hu_Report_Generator",
            "hazpy.legacy.exporting.reports.Ts_Report_Generator",
            "hazpy.legacy.exporting.results",
            "hazpy.legacy.exporting.results.Eq_Results",
            "hazpy.legacy.exporting.results.Fl_Results",
            "hazpy.legacy.exporting.results.Hu_Results",
            "hazpy.legacy.exporting.results.Ts_Results",
            "hazpy.legacy.hazusdb",
            "hazpy.legacy.report",
            "hazpy.legacy.studyregion",
            "hazpy.legacy.studyregiondataframe",
            "hazpy.tornado",
            "hazpy.tornado.classes",
            "hazpy.tsunami",
            "hazpy.tsunami.classes",
            "hazpy.tsunami.modules",
            "hazpy.tsunami.modules.general_building_stock",
            "hazpy.tsunami.modules.user_defined_facilities"
        ],
        "version": "0.0.4"
    },
    "hazus": {
        "cmdline": [],
        "modules": [
            "hazus",
            "hazus.common",
            "hazus.common.classes",
            "hazus.common.methods",
            "hazus.earthquake",
            "hazus.earthquake.classes",
            "hazus.earthquake.modules",
            "hazus.earthquake.modules.AEBM",
            "hazus.earthquake.modules.advanced_engineering_bldg_mode",
            "hazus.earthquake.modules.direct_social_losses",
            "hazus.earthquake.modules.essential_facilities",
            "hazus.earthquake.modules.general_buildings",
            "hazus.earthquake.modules.indirect_economic_loss",
            "hazus.earthquake.modules.induced_physical_damage",
            "hazus.earthquake.modules.military_installation",
            "hazus.earthquake.modules.transportation_systems",
            "hazus.earthquake.modules.user_defined_structures",
            "hazus.earthquake.modules.utility_systems",
            "hazus.flood",
            "hazus.flood.classes",
            "hazus.flood.modules",
            "hazus.flood.modules.UDF",
            "hazus.flood.modules.agriculture",
            "hazus.flood.modules.direct_social_losses",
            "hazus.flood.modules.essential_facilities",
            "hazus.flood.modules.general_building_stock",
            "hazus.flood.modules.indirect_economic_loss",
            "hazus.flood.modules.transportation_systems",
            "hazus.flood.modules.user_defined_structures",
            "hazus.flood.modules.utility_systems",
            "hazus.flood.modules.vehicles",
            "hazus.flood.modules.what_if",
            "hazus.hurricane",
            "hazus.hurricane.classes",
            "hazus.hurricane.modules",
            "hazus.hurricane.modules.direct_economic_loss",
            "hazus.hurricane.modules.direct_physical_damage",
            "hazus.hurricane.modules.direct_social_loss",
            "hazus.hurricane.modules.induced_physical_damage",
            "hazus.legacy",
            "hazus.legacy.common",
            "hazus.legacy.exporting",
            "hazus.legacy.exporting.Setup_Connection",
            "hazus.legacy.exporting.classes",
            "hazus.legacy.exporting.methods",
            "hazus.legacy.exporting.reports",
            "hazus.legacy.exporting.reports.Eq_Report_Generator",
            "hazus.legacy.exporting.reports.Fl_Report_Generator",
            "hazus.legacy.exporting.reports.Hu_Report_Generator",
            "hazus.legacy.exporting.reports.Ts_Report_Generator",
            "hazus.legacy.exporting.results",
            "hazus.legacy.exporting.results.Eq_Results",
            "hazus.legacy.exporting.results.Fl_Results",
            "hazus.legacy.exporting.results.Hu_Results",
            "hazus.legacy.exporting.results.Ts_Results",
            "hazus.tornado",
            "hazus.tornado.classes",
            "hazus.tsunami",
            "hazus.tsunami.classes",
            "hazus.tsunami.modules",
            "hazus.tsunami.modules.general_building_stock",
            "hazus.tsunami.modules.user_defined_facilities"
        ],
        "version": "0.0.10"
    },
    "hazy": {
        "cmdline": [],
        "modules": [
            "hazy",
            "hazy.aliased",
            "hazy.main",
            "hazy.resources",
            "hazy.resources.auth",
            "hazy.resources.entity",
            "hazy.resources.policy",
            "hazy.resources.source",
            "hazy.util",
            "hazy.util.browser",
            "hazy.util.flags",
            "hazy.util.interpolate",
            "hazy.validators",
            "hazy.validators.duration"
        ],
        "version": "0.0.3"
    },
    "hb": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.2"
    },
    "hb-config": {
        "cmdline": [],
        "modules": [
            "hbconfig"
        ],
        "version": "0.5.1"
    },
    "hbase-doc-zh": {
        "cmdline": [],
        "modules": [
            "HbaseDocZh",
            "HbaseDocZh.asset",
            "HbaseDocZh.docs",
            "HbaseDocZh.docs.en",
            "HbaseDocZh.docs.img"
        ],
        "version": "2020.9.21.0"
    },
    "hbase-python": {
        "cmdline": [],
        "modules": [
            "hbase",
            "hbase.client",
            "hbase.client.bstree",
            "hbase.client.client",
            "hbase.client.filters",
            "hbase.client.rbtree",
            "hbase.client.region",
            "hbase.conf",
            "hbase.connection",
            "hbase.exceptions",
            "hbase.namespace",
            "hbase.protobuf",
            "hbase.protobuf.AccessControl_pb2",
            "hbase.protobuf.Admin_pb2",
            "hbase.protobuf.Aggregate_pb2",
            "hbase.protobuf.Authentication_pb2",
            "hbase.protobuf.Cell_pb2",
            "hbase.protobuf.Client_pb2",
            "hbase.protobuf.ClusterId_pb2",
            "hbase.protobuf.ClusterStatus_pb2",
            "hbase.protobuf.Comparator_pb2",
            "hbase.protobuf.Encryption_pb2",
            "hbase.protobuf.ErrorHandling_pb2",
            "hbase.protobuf.FS_pb2",
            "hbase.protobuf.Filter_pb2",
            "hbase.protobuf.HBase_pb2",
            "hbase.protobuf.HFile_pb2",
            "hbase.protobuf.LoadBalancer_pb2",
            "hbase.protobuf.MapReduce_pb2",
            "hbase.protobuf.MasterProcedure_pb2",
            "hbase.protobuf.Master_pb2",
            "hbase.protobuf.MultiRowMutation_pb2",
            "hbase.protobuf.Procedure_pb2",
            "hbase.protobuf.Quota_pb2",
            "hbase.protobuf.RPC_pb2",
            "hbase.protobuf.RegionNormalizer_pb2",
            "hbase.protobuf.RegionServerStatus_pb2",
            "hbase.protobuf.RowProcessor_pb2",
            "hbase.protobuf.SecureBulkLoad_pb2",
            "hbase.protobuf.Snapshot_pb2",
            "hbase.protobuf.Tracing_pb2",
            "hbase.protobuf.VisibilityLabels_pb2",
            "hbase.protobuf.WAL_pb2",
            "hbase.protobuf.ZooKeeper_pb2",
            "hbase.services",
            "hbase.services.request",
            "hbase.services.services",
            "hbase.services.zookeeper",
            "hbase.shell",
            "hbase.stream_io",
            "hbase.table"
        ],
        "version": "0.5"
    },
    "hbase-thrift": {
        "cmdline": [],
        "modules": [
            "hbase",
            "hbase.Hbase",
            "hbase.constants",
            "hbase.ttypes"
        ],
        "version": "0.20.4"
    },
    "hbasepy": {
        "cmdline": [],
        "modules": [
            "hbasepy"
        ],
        "version": "0.1.1"
    },
    "hbasepython": {
        "cmdline": [],
        "modules": [
            "hbasepython",
            "hbasepython.cli"
        ],
        "version": "0.1.1"
    },
    "hbayesdm": {
        "cmdline": [],
        "modules": [
            "hbayesdm",
            "hbayesdm.base",
            "hbayesdm.diagnostics",
            "hbayesdm.models",
            "hbayesdm.models._bandit2arm_delta",
            "hbayesdm.models._bandit4arm2_kalman_filter",
            "hbayesdm.models._bandit4arm_2par_lapse",
            "hbayesdm.models._bandit4arm_4par",
            "hbayesdm.models._bandit4arm_lapse",
            "hbayesdm.models._bandit4arm_lapse_decay",
            "hbayesdm.models._bandit4arm_singleA_lapse",
            "hbayesdm.models._bart_par4",
            "hbayesdm.models._cgt_cm",
            "hbayesdm.models._choiceRT_ddm",
            "hbayesdm.models._choiceRT_ddm_single",
            "hbayesdm.models._cra_exp",
            "hbayesdm.models._cra_linear",
            "hbayesdm.models._dbdm_prob_weight",
            "hbayesdm.models._dd_cs",
            "hbayesdm.models._dd_cs_single",
            "hbayesdm.models._dd_exp",
            "hbayesdm.models._dd_hyperbolic",
            "hbayesdm.models._dd_hyperbolic_single",
            "hbayesdm.models._gng_m1",
            "hbayesdm.models._gng_m2",
            "hbayesdm.models._gng_m3",
            "hbayesdm.models._gng_m4",
            "hbayesdm.models._igt_orl",
            "hbayesdm.models._igt_pvl_decay",
            "hbayesdm.models._igt_pvl_delta",
            "hbayesdm.models._igt_vpp",
            "hbayesdm.models._peer_ocu",
            "hbayesdm.models._prl_ewa",
            "hbayesdm.models._prl_fictitious",
            "hbayesdm.models._prl_fictitious_multipleB",
            "hbayesdm.models._prl_fictitious_rp",
            "hbayesdm.models._prl_fictitious_rp_woa",
            "hbayesdm.models._prl_fictitious_woa",
            "hbayesdm.models._prl_rp",
            "hbayesdm.models._prl_rp_multipleB",
            "hbayesdm.models._pst_gainloss_Q",
            "hbayesdm.models._ra_noLA",
            "hbayesdm.models._ra_noRA",
            "hbayesdm.models._ra_prospect",
            "hbayesdm.models._rdt_happiness",
            "hbayesdm.models._ts_par4",
            "hbayesdm.models._ts_par6",
            "hbayesdm.models._ts_par7",
            "hbayesdm.models._ug_bayes",
            "hbayesdm.models._ug_delta",
            "hbayesdm.models._wcs_sql",
            "hbayesdm.preprocess_funcs"
        ],
        "version": "1.0.1"
    },
    "hbcal": {
        "cmdline": [],
        "modules": [
            "hbcal",
            "hbcal.abbrev_set",
            "hbcal.configuration_utilities",
            "hbcal.hebrew_calendar",
            "hbcal.hebrew_calendar.abs_time",
            "hbcal.hebrew_calendar.abstract_attribute",
            "hbcal.hebrew_calendar.civil_year",
            "hbcal.hebrew_calendar.daf_yomi",
            "hbcal.hebrew_calendar.date",
            "hbcal.hebrew_calendar.format_percent_string",
            "hbcal.hebrew_calendar.gematria",
            "hbcal.hebrew_calendar.hebrew_letters",
            "hbcal.hebrew_calendar.hebrew_year",
            "hbcal.hebrew_calendar.weekday",
            "hbcal.main",
            "hbcal.my_collections",
            "hbcal.ordinal",
            "hbcal.version"
        ],
        "version": "0.11.0"
    },
    "hbcapi": {
        "cmdline": [],
        "modules": [
            "hbcapi",
            "hbcapi.main"
        ],
        "version": "0.2.1"
    },
    "hbcapi-py": {
        "cmdline": [],
        "modules": [
            "hbcapi-py",
            "hbcapi-py.main"
        ],
        "version": "0.0.0"
    },
    "hbcht": {
        "cmdline": [
            "hbcht"
        ],
        "modules": [
            "hbcht"
        ],
        "version": "0.1.1"
    },
    "hbcvt": {
        "cmdline": [],
        "modules": [
            "hbcvt",
            "hbcvt.h2b"
        ],
        "version": "1.0.2"
    },
    "hbd": {
        "cmdline": [],
        "modules": [
            "cli",
            "hbd"
        ],
        "version": "0.4.0"
    },
    "hbdatacache": {
        "cmdline": [],
        "modules": [
            "hbdatacache"
        ],
        "version": "0.5"
    },
    "hbdatamonitor": {
        "cmdline": [],
        "modules": [
            "HBdataMonitor",
            "HBdataMonitor.HBdataMonitor"
        ],
        "version": "1.0.1"
    },
    "hbdl": {
        "cmdline": [],
        "modules": [
            "hbdl",
            "hbdl.hbdl"
        ],
        "version": "0.0.4"
    },
    "hbez": {
        "cmdline": [],
        "modules": [
            "jnpr",
            "jnpr.healthbot",
            "jnpr.healthbot._version",
            "jnpr.healthbot.exception",
            "jnpr.healthbot.healthbot",
            "jnpr.healthbot.modules",
            "jnpr.healthbot.modules.administration",
            "jnpr.healthbot.modules.database",
            "jnpr.healthbot.modules.devices",
            "jnpr.healthbot.modules.playbooks",
            "jnpr.healthbot.modules.profiles",
            "jnpr.healthbot.modules.rules",
            "jnpr.healthbot.modules.settings",
            "jnpr.healthbot.swagger",
            "jnpr.healthbot.swagger.api",
            "jnpr.healthbot.swagger.api.administration_api",
            "jnpr.healthbot.swagger.api.authentication_api",
            "jnpr.healthbot.swagger.api.configuration_api",
            "jnpr.healthbot.swagger.api.data_source_api",
            "jnpr.healthbot.swagger.api.data_store_api",
            "jnpr.healthbot.swagger.api.debug_api",
            "jnpr.healthbot.swagger.api.default_api",
            "jnpr.healthbot.swagger.api.documentation_api",
            "jnpr.healthbot.swagger.api.facts_api",
            "jnpr.healthbot.swagger.api.instance_schedule_state_api",
            "jnpr.healthbot.swagger.api.license_api",
            "jnpr.healthbot.swagger.api.logs_api",
            "jnpr.healthbot.swagger.api.services_api",
            "jnpr.healthbot.swagger.api.system_api",
            "jnpr.healthbot.swagger.api_client",
            "jnpr.healthbot.swagger.configuration",
            "jnpr.healthbot.swagger.models",
            "jnpr.healthbot.swagger.models.affected_groups",
            "jnpr.healthbot.swagger.models.apply_macro_schema",
            "jnpr.healthbot.swagger.models.applymacro_schema_data",
            "jnpr.healthbot.swagger.models.associated_group_schema",
            "jnpr.healthbot.swagger.models.associated_role_schema",
            "jnpr.healthbot.swagger.models.associated_user_schema",
            "jnpr.healthbot.swagger.models.associated_user_schema_inner",
            "jnpr.healthbot.swagger.models.ca_profile_schema",
            "jnpr.healthbot.swagger.models.command_rpc",
            "jnpr.healthbot.swagger.models.commit_job",
            "jnpr.healthbot.swagger.models.credential",
            "jnpr.healthbot.swagger.models.custom_plugin_schema",
            "jnpr.healthbot.swagger.models.custom_plugins_schema",
            "jnpr.healthbot.swagger.models.customplugin_schema_parameters",
            "jnpr.healthbot.swagger.models.customplugin_schema_securityparameters",
            "jnpr.healthbot.swagger.models.customplugin_schema_securityparameters_tls",
            "jnpr.healthbot.swagger.models.customplugin_schema_securityparameters_userauthentication",
            "jnpr.healthbot.swagger.models.datastore_schema",
            "jnpr.healthbot.swagger.models.debug_arguments_schema",
            "jnpr.healthbot.swagger.models.debug_job_response_schema",
            "jnpr.healthbot.swagger.models.destination_schema",
            "jnpr.healthbot.swagger.models.destination_schema_disk",
            "jnpr.healthbot.swagger.models.destination_schema_email",
            "jnpr.healthbot.swagger.models.destinations_schema",
            "jnpr.healthbot.swagger.models.device_group_health_tree",
            "jnpr.healthbot.swagger.models.device_group_schema",
            "jnpr.healthbot.swagger.models.device_groups_schema",
            "jnpr.healthbot.swagger.models.device_health_schema",
            "jnpr.healthbot.swagger.models.device_health_tree",
            "jnpr.healthbot.swagger.models.device_schema",
            "jnpr.healthbot.swagger.models.device_schema_authentication",
            "jnpr.healthbot.swagger.models.device_schema_flow",
            "jnpr.healthbot.swagger.models.device_schema_i_agent",
            "jnpr.healthbot.swagger.models.device_schema_openconfig",
            "jnpr.healthbot.swagger.models.device_schema_snmp",
            "jnpr.healthbot.swagger.models.device_schema_snmp_v2",
            "jnpr.healthbot.swagger.models.device_schema_syslog",
            "jnpr.healthbot.swagger.models.device_schema_variable",
            "jnpr.healthbot.swagger.models.device_schema_vendor",
            "jnpr.healthbot.swagger.models.device_schema_vendor_cisco",
            "jnpr.healthbot.swagger.models.device_schema_vendor_juniper",
            "jnpr.healthbot.swagger.models.device_schema_vendor_othervendor",
            "jnpr.healthbot.swagger.models.devicegroup_schema_authentication",
            "jnpr.healthbot.swagger.models.devicegroup_schema_authentication_password",
            "jnpr.healthbot.swagger.models.devicegroup_schema_authentication_ssh",
            "jnpr.healthbot.swagger.models.devicegroup_schema_authentication_ssl",
            "jnpr.healthbot.swagger.models.devicegroup_schema_flow",
            "jnpr.healthbot.swagger.models.devicegroup_schema_flow_netflow",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_byoi",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_byoi_service",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_flow",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_i_agent",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_m_lmodelbuilder",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_nativegpb",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_nonsensorrules",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_openconfig",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_reportsgeneration",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_snmp",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_syslog",
            "jnpr.healthbot.swagger.models.devicegroup_schema_logging_triggerevaluation",
            "jnpr.healthbot.swagger.models.devicegroup_schema_nativegpb",
            "jnpr.healthbot.swagger.models.devicegroup_schema_notification",
            "jnpr.healthbot.swagger.models.devicegroup_schema_publish",
            "jnpr.healthbot.swagger.models.devicegroup_schema_rawdata",
            "jnpr.healthbot.swagger.models.devicegroup_schema_rawdata_summarize",
            "jnpr.healthbot.swagger.models.devicegroup_schema_scheduler",
            "jnpr.healthbot.swagger.models.devicegroup_schema_syslog",
            "jnpr.healthbot.swagger.models.devicegroup_schema_variable",
            "jnpr.healthbot.swagger.models.devicegroup_schema_variablevalue",
            "jnpr.healthbot.swagger.models.devices_schema",
            "jnpr.healthbot.swagger.models.error",
            "jnpr.healthbot.swagger.models.event",
            "jnpr.healthbot.swagger.models.flow_schema",
            "jnpr.healthbot.swagger.models.flow_schema_flow",
            "jnpr.healthbot.swagger.models.flow_schema_flow_recognitionpattern",
            "jnpr.healthbot.swagger.models.flow_schema_flow_template",
            "jnpr.healthbot.swagger.models.frequency_profile_schema",
            "jnpr.healthbot.swagger.models.frequencyprofile_schema_nonsensor",
            "jnpr.healthbot.swagger.models.frequencyprofile_schema_sensor",
            "jnpr.healthbot.swagger.models.group",
            "jnpr.healthbot.swagger.models.group_health_schema",
            "jnpr.healthbot.swagger.models.groupgroupid_roles",
            "jnpr.healthbot.swagger.models.groupgroupid_users",
            "jnpr.healthbot.swagger.models.groups",
            "jnpr.healthbot.swagger.models.health_schema",
            "jnpr.healthbot.swagger.models.ingest_mapping_schema",
            "jnpr.healthbot.swagger.models.ingest_mappings_schema",
            "jnpr.healthbot.swagger.models.ingest_settings_schema",
            "jnpr.healthbot.swagger.models.ingestmapping_schema_i_agent",
            "jnpr.healthbot.swagger.models.ingestmapping_schema_i_agent_useplugin",
            "jnpr.healthbot.swagger.models.ingestmapping_schema_nativegpb",
            "jnpr.healthbot.swagger.models.ingestmapping_schema_netflow",
            "jnpr.healthbot.swagger.models.ingestmapping_schema_openconfig",
            "jnpr.healthbot.swagger.models.ingestmapping_schema_snmp",
            "jnpr.healthbot.swagger.models.ingestmapping_schema_syslog",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_byoi",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_byoi_defaultplugin",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_flow",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_flow_recognitionpattern",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_flow_template",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_frequencyprofile",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_sensor",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_syslog",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_syslog_constant",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_syslog_field",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_syslog_pattern",
            "jnpr.healthbot.swagger.models.ingestsettings_schema_ingestsettings_syslog_patternset",
            "jnpr.healthbot.swagger.models.inline_response200",
            "jnpr.healthbot.swagger.models.inline_response2001",
            "jnpr.healthbot.swagger.models.inline_response2002",
            "jnpr.healthbot.swagger.models.inline_response2003",
            "jnpr.healthbot.swagger.models.inline_response2004",
            "jnpr.healthbot.swagger.models.inline_response2005",
            "jnpr.healthbot.swagger.models.inline_response2006",
            "jnpr.healthbot.swagger.models.inline_response2007",
            "jnpr.healthbot.swagger.models.inline_response2008",
            "jnpr.healthbot.swagger.models.inline_response2009",
            "jnpr.healthbot.swagger.models.inline_response_200",
            "jnpr.healthbot.swagger.models.inline_response_200_1",
            "jnpr.healthbot.swagger.models.inline_response_200_2",
            "jnpr.healthbot.swagger.models.inline_response_200_3",
            "jnpr.healthbot.swagger.models.inline_response_200_4",
            "jnpr.healthbot.swagger.models.inline_response_200_5",
            "jnpr.healthbot.swagger.models.inline_response_200_6",
            "jnpr.healthbot.swagger.models.inline_response_200_7",
            "jnpr.healthbot.swagger.models.inline_response_200_8",
            "jnpr.healthbot.swagger.models.instance_schedule_state_schema",
            "jnpr.healthbot.swagger.models.instances_schedule_state_schema",
            "jnpr.healthbot.swagger.models.license_feature_schema",
            "jnpr.healthbot.swagger.models.license_features_schema",
            "jnpr.healthbot.swagger.models.license_key_schema",
            "jnpr.healthbot.swagger.models.license_keys_schema",
            "jnpr.healthbot.swagger.models.license_raw_key_schema",
            "jnpr.healthbot.swagger.models.license_raw_keys_schema",
            "jnpr.healthbot.swagger.models.licensekey_schema_features",
            "jnpr.healthbot.swagger.models.local_certificate_schema",
            "jnpr.healthbot.swagger.models.network_group_schema",
            "jnpr.healthbot.swagger.models.network_groups_schema",
            "jnpr.healthbot.swagger.models.network_health_tree",
            "jnpr.healthbot.swagger.models.networkgroup_schema_logging",
            "jnpr.healthbot.swagger.models.networkgroup_schema_publish",
            "jnpr.healthbot.swagger.models.notification_schema",
            "jnpr.healthbot.swagger.models.notification_schema_emails",
            "jnpr.healthbot.swagger.models.notification_schema_emails_filter",
            "jnpr.healthbot.swagger.models.notification_schema_httppost",
            "jnpr.healthbot.swagger.models.notification_schema_httppost_basic",
            "jnpr.healthbot.swagger.models.notification_schema_kafkapublish",
            "jnpr.healthbot.swagger.models.notification_schema_kafkapublish_sasl",
            "jnpr.healthbot.swagger.models.notification_schema_microsoftteams",
            "jnpr.healthbot.swagger.models.notification_schema_slack",
            "jnpr.healthbot.swagger.models.notifications_schema",
            "jnpr.healthbot.swagger.models.password",
            "jnpr.healthbot.swagger.models.pattern_schema",
            "jnpr.healthbot.swagger.models.pattern_schema_constant",
            "jnpr.healthbot.swagger.models.pattern_schema_field",
            "jnpr.healthbot.swagger.models.pattern_set_schema",
            "jnpr.healthbot.swagger.models.playbook_schema",
            "jnpr.healthbot.swagger.models.playbooks_schema",
            "jnpr.healthbot.swagger.models.profile_schema",
            "jnpr.healthbot.swagger.models.profile_schema_datasummarization",
            "jnpr.healthbot.swagger.models.profile_schema_datasummarization_raw",
            "jnpr.healthbot.swagger.models.profile_schema_security",
            "jnpr.healthbot.swagger.models.profiles_schema",
            "jnpr.healthbot.swagger.models.profiles_schema_profile",
            "jnpr.healthbot.swagger.models.raw_data_summarizations_schema",
            "jnpr.healthbot.swagger.models.raw_schema",
            "jnpr.healthbot.swagger.models.raw_schema_datatype",
            "jnpr.healthbot.swagger.models.raw_schema_path",
            "jnpr.healthbot.swagger.models.refresh_token",
            "jnpr.healthbot.swagger.models.report_generation_schema",
            "jnpr.healthbot.swagger.models.report_schema",
            "jnpr.healthbot.swagger.models.report_schema_canvaspanel",
            "jnpr.healthbot.swagger.models.report_schema_graphcanvas",
            "jnpr.healthbot.swagger.models.reports_schema",
            "jnpr.healthbot.swagger.models.retention_policies_schema",
            "jnpr.healthbot.swagger.models.retention_policy_schema",
            "jnpr.healthbot.swagger.models.role_schema",
            "jnpr.healthbot.swagger.models.role_schema_inner",
            "jnpr.healthbot.swagger.models.rule_schema",
            "jnpr.healthbot.swagger.models.rule_schema_argument",
            "jnpr.healthbot.swagger.models.rule_schema_byoi",
            "jnpr.healthbot.swagger.models.rule_schema_byoi_plugin",
            "jnpr.healthbot.swagger.models.rule_schema_byoi_plugin_parameters",
            "jnpr.healthbot.swagger.models.rule_schema_constant",
            "jnpr.healthbot.swagger.models.rule_schema_dataifmissing",
            "jnpr.healthbot.swagger.models.rule_schema_field",
            "jnpr.healthbot.swagger.models.rule_schema_flow",
            "jnpr.healthbot.swagger.models.rule_schema_formula",
            "jnpr.healthbot.swagger.models.rule_schema_formula1",
            "jnpr.healthbot.swagger.models.rule_schema_formula1_and",
            "jnpr.healthbot.swagger.models.rule_schema_formula1_or",
            "jnpr.healthbot.swagger.models.rule_schema_formula1_unique",
            "jnpr.healthbot.swagger.models.rule_schema_formula1_unless",
            "jnpr.healthbot.swagger.models.rule_schema_formula_1",
            "jnpr.healthbot.swagger.models.rule_schema_formula_1_and",
            "jnpr.healthbot.swagger.models.rule_schema_formula_1_or",
            "jnpr.healthbot.swagger.models.rule_schema_formula_1_unique",
            "jnpr.healthbot.swagger.models.rule_schema_formula_1_unless",
            "jnpr.healthbot.swagger.models.rule_schema_formula_anomalydetection",
            "jnpr.healthbot.swagger.models.rule_schema_formula_count",
            "jnpr.healthbot.swagger.models.rule_schema_formula_dynamicthreshold",
            "jnpr.healthbot.swagger.models.rule_schema_formula_max",
            "jnpr.healthbot.swagger.models.rule_schema_formula_mean",
            "jnpr.healthbot.swagger.models.rule_schema_formula_microburst",
            "jnpr.healthbot.swagger.models.rule_schema_formula_min",
            "jnpr.healthbot.swagger.models.rule_schema_formula_outlierdetection",
            "jnpr.healthbot.swagger.models.rule_schema_formula_outlierdetection_algorithm",
            "jnpr.healthbot.swagger.models.rule_schema_formula_outlierdetection_algorithm_dbscan",
            "jnpr.healthbot.swagger.models.rule_schema_formula_outlierdetection_algorithm_dbscan_sensitivity",
            "jnpr.healthbot.swagger.models.rule_schema_formula_outlierdetection_algorithm_kfold3sigma",
            "jnpr.healthbot.swagger.models.rule_schema_formula_predict",
            "jnpr.healthbot.swagger.models.rule_schema_formula_rateofchange",
            "jnpr.healthbot.swagger.models.rule_schema_formula_stddev",
            "jnpr.healthbot.swagger.models.rule_schema_formula_sum",
            "jnpr.healthbot.swagger.models.rule_schema_formula_userdefinedfunction",
            "jnpr.healthbot.swagger.models.rule_schema_formula_userdefinedfunction_argument",
            "jnpr.healthbot.swagger.models.rule_schema_function",
            "jnpr.healthbot.swagger.models.rule_schema_i_agent",
            "jnpr.healthbot.swagger.models.rule_schema_i_agent_args",
            "jnpr.healthbot.swagger.models.rule_schema_nativegpb",
            "jnpr.healthbot.swagger.models.rule_schema_openconfig",
            "jnpr.healthbot.swagger.models.rule_schema_reference",
            "jnpr.healthbot.swagger.models.rule_schema_reference_dataifmissing",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties_catalogue",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties_helperfiles",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties_supporteddevices",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties_supporteddevices_juniper",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties_supporteddevices_juniper_operatingsystem",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties_supporteddevices_juniper_products",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties_supporteddevices_juniper_releases",
            "jnpr.healthbot.swagger.models.rule_schema_ruleproperties_supporteddevices_othervendor",
            "jnpr.healthbot.swagger.models.rule_schema_sensor",
            "jnpr.healthbot.swagger.models.rule_schema_sensor1",
            "jnpr.healthbot.swagger.models.rule_schema_sensor_1",
            "jnpr.healthbot.swagger.models.rule_schema_snmp",
            "jnpr.healthbot.swagger.models.rule_schema_syslog",
            "jnpr.healthbot.swagger.models.rule_schema_term",
            "jnpr.healthbot.swagger.models.rule_schema_then",
            "jnpr.healthbot.swagger.models.rule_schema_then_argument",
            "jnpr.healthbot.swagger.models.rule_schema_then_status",
            "jnpr.healthbot.swagger.models.rule_schema_then_userdefinedaction",
            "jnpr.healthbot.swagger.models.rule_schema_trigger",
            "jnpr.healthbot.swagger.models.rule_schema_variable",
            "jnpr.healthbot.swagger.models.rule_schema_vector",
            "jnpr.healthbot.swagger.models.rule_schema_when",
            "jnpr.healthbot.swagger.models.rule_schema_when_doesnotmatchwith",
            "jnpr.healthbot.swagger.models.rule_schema_when_equalto",
            "jnpr.healthbot.swagger.models.rule_schema_when_exists",
            "jnpr.healthbot.swagger.models.rule_schema_when_increasingatleastbyrate",
            "jnpr.healthbot.swagger.models.rule_schema_when_increasingatleastbyvalue",
            "jnpr.healthbot.swagger.models.rule_schema_when_maxrateofincrease",
            "jnpr.healthbot.swagger.models.rule_schema_when_range",
            "jnpr.healthbot.swagger.models.rule_schema_when_userdefinedfunction",
            "jnpr.healthbot.swagger.models.rule_schema_where",
            "jnpr.healthbot.swagger.models.scheduler_schema",
            "jnpr.healthbot.swagger.models.scheduler_schema_repeat",
            "jnpr.healthbot.swagger.models.scheduler_schema_repeat_interval",
            "jnpr.healthbot.swagger.models.scheduler_schema_runfor",
            "jnpr.healthbot.swagger.models.schedulers_schema",
            "jnpr.healthbot.swagger.models.service_status",
            "jnpr.healthbot.swagger.models.ssh_key_profile_schema",
            "jnpr.healthbot.swagger.models.syslog_schema",
            "jnpr.healthbot.swagger.models.syslog_schema_syslog",
            "jnpr.healthbot.swagger.models.system_settings_schema",
            "jnpr.healthbot.swagger.models.systemsettings_schema_systemsettings",
            "jnpr.healthbot.swagger.models.systemsettings_schema_systemsettings_reportgeneration",
            "jnpr.healthbot.swagger.models.table_schema",
            "jnpr.healthbot.swagger.models.template_schema",
            "jnpr.healthbot.swagger.models.time_range_mandatory",
            "jnpr.healthbot.swagger.models.tlive_kafka_oc_schema",
            "jnpr.healthbot.swagger.models.tlive_kafka_ocs_schema",
            "jnpr.healthbot.swagger.models.tlivekafkaoc_schema_security",
            "jnpr.healthbot.swagger.models.tlivekafkaoc_schema_security_sasl",
            "jnpr.healthbot.swagger.models.token",
            "jnpr.healthbot.swagger.models.topic_schema",
            "jnpr.healthbot.swagger.models.topics_schema",
            "jnpr.healthbot.swagger.models.tsdb_schema",
            "jnpr.healthbot.swagger.models.user",
            "jnpr.healthbot.swagger.models.user1",
            "jnpr.healthbot.swagger.models.user_1",
            "jnpr.healthbot.swagger.models.user_schema",
            "jnpr.healthbot.swagger.models.user_schema_groups",
            "jnpr.healthbot.swagger.models.when_lhs_rhs_group",
            "jnpr.healthbot.swagger.rest",
            "jnpr.healthbot.urlfor"
        ],
        "version": "2.0.0"
    },
    "hbfactor": {
        "cmdline": [],
        "modules": [
            "hbfactor",
            "hbfactor.core",
            "hbfactor.datasource",
            "hbfactor.datasource.dataapi",
            "hbfactor.datasource.sdk",
            "hbfactor.factorbase",
            "hbfactor.factorbase.factorbase"
        ],
        "version": "0.0.3"
    },
    "hbfm": {
        "cmdline": [],
        "modules": [
            "hbfm",
            "hbfm.inline_coloring",
            "hbfm.inline_list",
            "hbfm.number_headers",
            "hbfm.quote_uri_hash",
            "hbfm.toc"
        ],
        "version": "1.0.0"
    },
    "hbi": {
        "cmdline": [],
        "modules": [
            "hbi",
            "hbi.aio",
            "hbi.aio.server",
            "hbi.aio.sig",
            "hbi.buflist",
            "hbi.bytesbuf",
            "hbi.cat",
            "hbi.conn",
            "hbi.context",
            "hbi.echo",
            "hbi.echo.shell",
            "hbi.interop",
            "hbi.log",
            "hbi.me",
            "hbi.pool",
            "hbi.pool._pmgr",
            "hbi.pool.consumer",
            "hbi.pool.mgmt",
            "hbi.pool.pe",
            "hbi.proto",
            "hbi.run-module",
            "hbi.sendctrl",
            "hbi.sockconn",
            "hbi.util",
            "hbi.util.sz",
            "hbi.version"
        ],
        "version": "2.0.5"
    },
    "hblock": {
        "cmdline": [],
        "modules": [
            "hblock",
            "hblock.appindicator_replacement",
            "hblock.data"
        ],
        "version": "0.0.6"
    },
    "hbm-distributions": {
        "cmdline": [],
        "modules": [
            "hbm_distributions",
            "hbm_distributions.Binomialdistribution",
            "hbm_distributions.Gaussiandistribution",
            "hbm_distributions.Generaldistribution"
        ],
        "version": "1.0"
    },
    "hbmqtt": {
        "cmdline": [],
        "modules": [
            "hbmqtt",
            "hbmqtt.adapters",
            "hbmqtt.broker",
            "hbmqtt.client",
            "hbmqtt.codecs",
            "hbmqtt.errors",
            "hbmqtt.mqtt",
            "hbmqtt.mqtt.connack",
            "hbmqtt.mqtt.connect",
            "hbmqtt.mqtt.constants",
            "hbmqtt.mqtt.disconnect",
            "hbmqtt.mqtt.packet",
            "hbmqtt.mqtt.pingreq",
            "hbmqtt.mqtt.pingresp",
            "hbmqtt.mqtt.protocol",
            "hbmqtt.mqtt.protocol.broker_handler",
            "hbmqtt.mqtt.protocol.client_handler",
            "hbmqtt.mqtt.protocol.handler",
            "hbmqtt.mqtt.puback",
            "hbmqtt.mqtt.pubcomp",
            "hbmqtt.mqtt.publish",
            "hbmqtt.mqtt.pubrec",
            "hbmqtt.mqtt.pubrel",
            "hbmqtt.mqtt.suback",
            "hbmqtt.mqtt.subscribe",
            "hbmqtt.mqtt.unsuback",
            "hbmqtt.mqtt.unsubscribe",
            "hbmqtt.plugins",
            "hbmqtt.plugins.authentication",
            "hbmqtt.plugins.logging",
            "hbmqtt.plugins.manager",
            "hbmqtt.plugins.persistence",
            "hbmqtt.plugins.sys",
            "hbmqtt.plugins.sys.broker",
            "hbmqtt.plugins.topic_checking",
            "hbmqtt.session",
            "hbmqtt.utils",
            "hbmqtt.version",
            "scripts",
            "scripts.broker_script",
            "scripts.pub_script",
            "scripts.sub_script",
            "tests.mqtt",
            "tests.mqtt.protocol",
            "tests.mqtt.protocol.test_handler",
            "tests.mqtt.test_connect",
            "tests.mqtt.test_packet",
            "tests.mqtt.test_puback",
            "tests.mqtt.test_pubcomp",
            "tests.mqtt.test_publish",
            "tests.mqtt.test_pubrec",
            "tests.mqtt.test_pubrel",
            "tests.mqtt.test_suback",
            "tests.mqtt.test_subscribe",
            "tests.mqtt.test_unsuback",
            "tests.mqtt.test_unsubscribe",
            "tests.plugins",
            "tests.plugins.test_authentication",
            "tests.plugins.test_manager",
            "tests.plugins.test_persistence"
        ],
        "version": "0.9.6"
    },
    "hbmqtt-auth-home-assistant": {
        "cmdline": [],
        "modules": [
            "hbmqtt_auth_home_assistant"
        ],
        "version": "1.0.2"
    },
    "hbmqtt-master2": {
        "cmdline": [],
        "modules": [
            "hbmqtt",
            "hbmqtt.adapters",
            "hbmqtt.broker",
            "hbmqtt.client",
            "hbmqtt.codecs",
            "hbmqtt.errors",
            "hbmqtt.mqtt",
            "hbmqtt.mqtt.connack",
            "hbmqtt.mqtt.connect",
            "hbmqtt.mqtt.constants",
            "hbmqtt.mqtt.disconnect",
            "hbmqtt.mqtt.packet",
            "hbmqtt.mqtt.pingreq",
            "hbmqtt.mqtt.pingresp",
            "hbmqtt.mqtt.protocol",
            "hbmqtt.mqtt.protocol.broker_handler",
            "hbmqtt.mqtt.protocol.client_handler",
            "hbmqtt.mqtt.protocol.handler",
            "hbmqtt.mqtt.puback",
            "hbmqtt.mqtt.pubcomp",
            "hbmqtt.mqtt.publish",
            "hbmqtt.mqtt.pubrec",
            "hbmqtt.mqtt.pubrel",
            "hbmqtt.mqtt.suback",
            "hbmqtt.mqtt.subscribe",
            "hbmqtt.mqtt.unsuback",
            "hbmqtt.mqtt.unsubscribe",
            "hbmqtt.plugins",
            "hbmqtt.plugins.authentication",
            "hbmqtt.plugins.logging",
            "hbmqtt.plugins.manager",
            "hbmqtt.plugins.persistence",
            "hbmqtt.plugins.sys",
            "hbmqtt.plugins.sys.broker",
            "hbmqtt.plugins.topic_checking",
            "hbmqtt.session",
            "hbmqtt.utils",
            "hbmqtt.version",
            "scripts",
            "scripts.pub_script",
            "scripts.sub_script",
            "tests.mqtt",
            "tests.mqtt.protocol",
            "tests.mqtt.protocol.test_handler",
            "tests.mqtt.test_connect",
            "tests.mqtt.test_packet",
            "tests.mqtt.test_puback",
            "tests.mqtt.test_pubcomp",
            "tests.mqtt.test_publish",
            "tests.mqtt.test_pubrec",
            "tests.mqtt.test_pubrel",
            "tests.mqtt.test_suback",
            "tests.mqtt.test_subscribe",
            "tests.mqtt.test_unsuback",
            "tests.mqtt.test_unsubscribe",
            "tests.plugins",
            "tests.plugins.test_authentication",
            "tests.plugins.test_manager",
            "tests.plugins.test_persistence"
        ],
        "version": "4"
    },
    "hbmqtt-master2-2": {
        "cmdline": [],
        "modules": [
            "hbmqtt",
            "hbmqtt.adapters",
            "hbmqtt.broker",
            "hbmqtt.client",
            "hbmqtt.codecs",
            "hbmqtt.errors",
            "hbmqtt.mqtt",
            "hbmqtt.mqtt.connack",
            "hbmqtt.mqtt.connect",
            "hbmqtt.mqtt.constants",
            "hbmqtt.mqtt.disconnect",
            "hbmqtt.mqtt.packet",
            "hbmqtt.mqtt.pingreq",
            "hbmqtt.mqtt.pingresp",
            "hbmqtt.mqtt.protocol",
            "hbmqtt.mqtt.protocol.broker_handler",
            "hbmqtt.mqtt.protocol.client_handler",
            "hbmqtt.mqtt.protocol.handler",
            "hbmqtt.mqtt.puback",
            "hbmqtt.mqtt.pubcomp",
            "hbmqtt.mqtt.publish",
            "hbmqtt.mqtt.pubrec",
            "hbmqtt.mqtt.pubrel",
            "hbmqtt.mqtt.suback",
            "hbmqtt.mqtt.subscribe",
            "hbmqtt.mqtt.unsuback",
            "hbmqtt.mqtt.unsubscribe",
            "hbmqtt.plugins",
            "hbmqtt.plugins.authentication",
            "hbmqtt.plugins.logging",
            "hbmqtt.plugins.manager",
            "hbmqtt.plugins.persistence",
            "hbmqtt.plugins.sys",
            "hbmqtt.plugins.sys.broker",
            "hbmqtt.plugins.topic_checking",
            "hbmqtt.session",
            "hbmqtt.utils",
            "hbmqtt.version",
            "scripts",
            "scripts.broker_script",
            "scripts.pub_script",
            "scripts.sub_script",
            "tests.mqtt",
            "tests.mqtt.protocol",
            "tests.mqtt.protocol.test_handler",
            "tests.mqtt.test_connect",
            "tests.mqtt.test_packet",
            "tests.mqtt.test_puback",
            "tests.mqtt.test_pubcomp",
            "tests.mqtt.test_publish",
            "tests.mqtt.test_pubrec",
            "tests.mqtt.test_pubrel",
            "tests.mqtt.test_suback",
            "tests.mqtt.test_subscribe",
            "tests.mqtt.test_unsuback",
            "tests.mqtt.test_unsubscribe",
            "tests.plugins",
            "tests.plugins.test_authentication",
            "tests.plugins.test_manager",
            "tests.plugins.test_persistence"
        ],
        "version": "0.9.7"
    },
    "hbmqtt2": {
        "cmdline": [],
        "modules": [
            "hbmqtt",
            "hbmqtt.adapters",
            "hbmqtt.broker",
            "hbmqtt.client",
            "hbmqtt.codecs",
            "hbmqtt.errors",
            "hbmqtt.mqtt",
            "hbmqtt.mqtt.connack",
            "hbmqtt.mqtt.connect",
            "hbmqtt.mqtt.constants",
            "hbmqtt.mqtt.disconnect",
            "hbmqtt.mqtt.packet",
            "hbmqtt.mqtt.pingreq",
            "hbmqtt.mqtt.pingresp",
            "hbmqtt.mqtt.protocol",
            "hbmqtt.mqtt.protocol.broker_handler",
            "hbmqtt.mqtt.protocol.client_handler",
            "hbmqtt.mqtt.protocol.handler",
            "hbmqtt.mqtt.puback",
            "hbmqtt.mqtt.pubcomp",
            "hbmqtt.mqtt.publish",
            "hbmqtt.mqtt.pubrec",
            "hbmqtt.mqtt.pubrel",
            "hbmqtt.mqtt.suback",
            "hbmqtt.mqtt.subscribe",
            "hbmqtt.mqtt.unsuback",
            "hbmqtt.mqtt.unsubscribe",
            "hbmqtt.plugins",
            "hbmqtt.plugins.authentication",
            "hbmqtt.plugins.logging",
            "hbmqtt.plugins.manager",
            "hbmqtt.plugins.persistence",
            "hbmqtt.plugins.sys",
            "hbmqtt.plugins.sys.broker",
            "hbmqtt.plugins.topic_checking",
            "hbmqtt.session",
            "hbmqtt.utils",
            "hbmqtt.version",
            "scripts",
            "scripts.broker_script",
            "scripts.pub_script",
            "scripts.sub_script",
            "tests.mqtt",
            "tests.mqtt.protocol",
            "tests.mqtt.protocol.test_handler",
            "tests.mqtt.test_connect",
            "tests.mqtt.test_packet",
            "tests.mqtt.test_puback",
            "tests.mqtt.test_pubcomp",
            "tests.mqtt.test_publish",
            "tests.mqtt.test_pubrec",
            "tests.mqtt.test_pubrel",
            "tests.mqtt.test_suback",
            "tests.mqtt.test_subscribe",
            "tests.mqtt.test_unsuback",
            "tests.mqtt.test_unsubscribe",
            "tests.plugins",
            "tests.plugins.test_authentication",
            "tests.plugins.test_manager",
            "tests.plugins.test_persistence"
        ],
        "version": "0.9.7"
    },
    "hbnet": {
        "cmdline": [],
        "modules": [
            "hbnet",
            "hbnet.LSTM",
            "hbnet.Neural_Net",
            "hbnet.Predict_Volume",
            "hbnet.Recurrent_Net",
            "hbnet.Trial_Solution",
            "hbnet.analysis",
            "hbnet.non_dimensional",
            "hbnet.rheogram",
            "hbnet.utils"
        ],
        "version": "0.0.1"
    },
    "hbp-archive": {
        "cmdline": [],
        "modules": [
            "hbp_archive"
        ],
        "version": "0.9.1"
    },
    "hbp-knowledge": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.7"
    },
    "hbp-neuromorphic-platform": {
        "cmdline": [],
        "modules": [
            "nmpi",
            "nmpi.cli",
            "nmpi.nmpi_admin",
            "nmpi.nmpi_saga",
            "nmpi.nmpi_user",
            "nmpi.psa-oauth2"
        ],
        "version": "0.8.2"
    },
    "hbp-seafile": {
        "cmdline": [],
        "modules": [
            "hbp_seafile",
            "hbp_seafile.access",
            "hbp_seafile.admin",
            "hbp_seafile.client",
            "hbp_seafile.exceptions",
            "hbp_seafile.files",
            "hbp_seafile.group",
            "hbp_seafile.repo",
            "hbp_seafile.repos",
            "hbp_seafile.utils",
            "tests",
            "tests.conftest",
            "tests.fixtures",
            "tests.test_files",
            "tests.test_repos",
            "tests.utils"
        ],
        "version": "0.1.1"
    },
    "hbp-seafile-beta": {
        "cmdline": [],
        "modules": [
            "hbp_seafile",
            "hbp_seafile.access",
            "hbp_seafile.admin",
            "hbp_seafile.client",
            "hbp_seafile.exceptions",
            "hbp_seafile.files",
            "hbp_seafile.group",
            "hbp_seafile.repo",
            "hbp_seafile.repos",
            "hbp_seafile.utils",
            "tests",
            "tests.conftest",
            "tests.fixtures",
            "tests.test_files",
            "tests.test_repos",
            "tests.utils"
        ],
        "version": "0.0.2a1"
    },
    "hbp-service-client": {
        "cmdline": [],
        "modules": [
            "hbp_service_client",
            "hbp_service_client.client",
            "hbp_service_client.request",
            "hbp_service_client.request.request_builder",
            "hbp_service_client.storage_service",
            "hbp_service_client.storage_service.api",
            "hbp_service_client.storage_service.client",
            "hbp_service_client.storage_service.exceptions",
            "hbp_service_client.storage_service.service_locator",
            "hbp_service_client.version",
            "test",
            "test.hbp_service_client",
            "test.hbp_service_client.request",
            "test.hbp_service_client.request.test_request_builder",
            "test.hbp_service_client.storage_service",
            "test.hbp_service_client.storage_service.test_api",
            "test.hbp_service_client.storage_service.test_client",
            "test.hbp_service_client.test_client"
        ],
        "version": "1.1.1"
    },
    "hbp-sphinx-theme": {
        "cmdline": [],
        "modules": [
            "hbp_sphinx_theme"
        ],
        "version": "0.3.4"
    },
    "hbp-validation-framework": {
        "cmdline": [],
        "modules": [
            "hbp_validation_framework",
            "hbp_validation_framework.datastores",
            "hbp_validation_framework.sample",
            "hbp_validation_framework.utils",
            "hbp_validation_framework.versioning"
        ],
        "version": "0.5.28"
    },
    "hbr-client": {
        "cmdline": [],
        "modules": [
            "hbr_client",
            "hbr_client.__version__"
        ],
        "version": "0.1.2"
    },
    "hbric": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hbrs-grader": {
        "cmdline": [],
        "modules": [
            "hbrs_grader",
            "hbrs_grader.core",
            "hbrs_grader.template"
        ],
        "version": "1.0.1"
    },
    "hbshare": {
        "cmdline": [],
        "modules": [
            "hbshare",
            "hbshare.base",
            "hbshare.base.data_api",
            "hbshare.base.data_pro",
            "hbshare.base.dateu",
            "hbshare.base.formula",
            "hbshare.base.upass",
            "hbshare.base.vars",
            "hbshare.fund",
            "hbshare.fund.cons",
            "hbshare.fund.nav",
            "hbshare.simu",
            "hbshare.simu.cons",
            "hbshare.simu.corp",
            "hbshare.simu.nav",
            "test",
            "test.fund_nav_test"
        ],
        "version": "1.0.6"
    },
    "hbt": {
        "cmdline": [],
        "modules": [
            "scripts",
            "scripts.actions",
            "scripts.config",
            "scripts.hbt",
            "scripts.hbt2",
            "scripts.pipeline",
            "scripts.sourcefile",
            "scripts.test_hbt",
            "scripts.test_hbt2"
        ],
        "version": "5.0.4"
    },
    "hbt-ip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hbt-ip-core": {
        "cmdline": [],
        "modules": [
            "libs",
            "libs.Cameras_pb2",
            "libs.CodecDetails_pb2",
            "libs.IsomDeviceMgmt_pb2",
            "libs.IsomDevices_pb2",
            "libs.IsomStdDef_pb2",
            "libs.Isom_pb2",
            "libs.hbt",
            "libs.hbt.hbt_pb2",
            "libs.hbt_pb2",
            "libs.isom",
            "libs.isom.python",
            "libs.isom.python.AC_pb2",
            "libs.isom.python.ActivationGroupTypes_pb2",
            "libs.isom.python.ActivationGroups_pb2",
            "libs.isom.python.Analytics_e_pb2",
            "libs.isom.python.Analytics_pb2",
            "libs.isom.python.AudioSources_pb2",
            "libs.isom.python.BatteryPeripheral_pb2",
            "libs.isom.python.COSensor_pb2",
            "libs.isom.python.Cameras_e_pb2",
            "libs.isom.python.Cameras_pb2",
            "libs.isom.python.CellularInterfaces_e_pb2",
            "libs.isom.python.CellularInterfaces_pb2",
            "libs.isom.python.Channels_pb2",
            "libs.isom.python.Clips_e_pb2",
            "libs.isom.python.Clips_pb2",
            "libs.isom.python.CodecDetails_pb2",
            "libs.isom.python.DetectorGroupTypes_pb2",
            "libs.isom.python.DetectorGroups_e_pb2",
            "libs.isom.python.DetectorGroups_pb2",
            "libs.isom.python.Files_e_pb2",
            "libs.isom.python.Files_pb2",
            "libs.isom.python.Flashers_pb2",
            "libs.isom.python.GBSensors_pb2",
            "libs.isom.python.IsomAccessPoints_e_pb2",
            "libs.isom.python.IsomAccessPoints_pb2",
            "libs.isom.python.IsomAccounts_e_pb2",
            "libs.isom.python.IsomAccounts_pb2",
            "libs.isom.python.IsomAssets_e_pb2",
            "libs.isom.python.IsomAssets_pb2",
            "libs.isom.python.IsomBinaryHeader_pb2",
            "libs.isom.python.IsomCommonHeaders_pb2",
            "libs.isom.python.IsomCredentialHolders_e_pb2",
            "libs.isom.python.IsomCredentialHolders_pb2",
            "libs.isom.python.IsomCredentials_e_pb2",
            "libs.isom.python.IsomCredentials_pb2",
            "libs.isom.python.IsomDeviceCollections_e_pb2",
            "libs.isom.python.IsomDeviceCollections_pb2",
            "libs.isom.python.IsomDeviceMgmt_pb2",
            "libs.isom.python.IsomDevices_a_pb2",
            "libs.isom.python.IsomDevices_e_pb2",
            "libs.isom.python.IsomDevices_pb2",
            "libs.isom.python.IsomDoors_e_pb2",
            "libs.isom.python.IsomDoors_pb2",
            "libs.isom.python.IsomEvents_pb2",
            "libs.isom.python.IsomHolidays_pb2",
            "libs.isom.python.IsomInputs_e_pb2",
            "libs.isom.python.IsomInputs_pb2",
            "libs.isom.python.IsomInterfaces_a_pb2",
            "libs.isom.python.IsomInterfaces_e_pb2",
            "libs.isom.python.IsomInterfaces_pb2",
            "libs.isom.python.IsomIpInterfaces_pb2",
            "libs.isom.python.IsomObject_pb2",
            "libs.isom.python.IsomOutputs_e_pb2",
            "libs.isom.python.IsomOutputs_pb2",
            "libs.isom.python.IsomPartitions_e_pb2",
            "libs.isom.python.IsomPartitions_pb2",
            "libs.isom.python.IsomPeripheral_a_pb2",
            "libs.isom.python.IsomPeripheral_e_pb2",
            "libs.isom.python.IsomPeripheral_pb2",
            "libs.isom.python.IsomPermissions_e_pb2",
            "libs.isom.python.IsomPermissions_pb2",
            "libs.isom.python.IsomResponseStatus_pb2",
            "libs.isom.python.IsomSchedules_e_pb2",
            "libs.isom.python.IsomSchedules_pb2",
            "libs.isom.python.IsomSecurity_pb2",
            "libs.isom.python.IsomStdDef_pb2",
            "libs.isom.python.IsomSystem_e_pb2",
            "libs.isom.python.IsomSystem_pb2",
            "libs.isom.python.IsomTimeMgmt_pb2",
            "libs.isom.python.IsomUserMgmt_pb2",
            "libs.isom.python.IsomWiFiInterfaces_pb2",
            "libs.isom.python.Isom_pb2",
            "libs.isom.python.Jobs_pb2",
            "libs.isom.python.KeyFobs_e_pb2",
            "libs.isom.python.KeyFobs_pb2",
            "libs.isom.python.KeyPads_e_pb2",
            "libs.isom.python.KeyPads_pb2",
            "libs.isom.python.KeySwitches_e_pb2",
            "libs.isom.python.KeySwitches_pb2",
            "libs.isom.python.LEDs_pb2",
            "libs.isom.python.LogicalGroup_e_pb2",
            "libs.isom.python.LogicalGroups_pb2",
            "libs.isom.python.Macros_e_pb2",
            "libs.isom.python.Macros_pb2",
            "libs.isom.python.PIRs_pb2",
            "libs.isom.python.PMCollections_e_pb2",
            "libs.isom.python.PMCollections_pb2",
            "libs.isom.python.PMs_pb2",
            "libs.isom.python.PowerPeripheral_pb2",
            "libs.isom.python.Programs_pb2",
            "libs.isom.python.RecordProfile_e_pb2",
            "libs.isom.python.RecordProfile_pb2",
            "libs.isom.python.Recorders_e_pb2",
            "libs.isom.python.Recorders_pb2",
            "libs.isom.python.SalvoViews_pb2",
            "libs.isom.python.Sites_e_pb2",
            "libs.isom.python.Sites_pb2",
            "libs.isom.python.SmokeDetectors_pb2",
            "libs.isom.python.Sounders_pb2",
            "libs.isom.python.StreamProfile_e_pb2",
            "libs.isom.python.StreamProfile_pb2",
            "libs.isom.python.Streams_e_pb2",
            "libs.isom.python.Streams_pb2",
            "libs.isom.python.Thermostat_e_pb2",
            "libs.isom.python.Thermostat_pb2",
            "libs.isom.python.Volumes_pb2",
            "libs.proto_files",
            "libs.sparkplug_b",
            "libs.sparkplug_b_pb2",
            "src",
            "src.common",
            "src.common.aliasmap",
            "src.common.config",
            "src.core",
            "src.core.device",
            "src.core.node",
            "src.core.spg_engine",
            "src.main"
        ],
        "version": "1.0.1"
    },
    "hbt-ip-test": {
        "cmdline": [],
        "modules": [
            "HBT_IP_Test",
            "HBT_IP_Test.hbt_core",
            "HBT_IP_Test.hbt_spg",
            "HBT_IP_Test.libs",
            "HBT_IP_Test.libs.Cameras_pb2",
            "HBT_IP_Test.libs.CodecDetails_pb2",
            "HBT_IP_Test.libs.IsomDeviceMgmt_pb2",
            "HBT_IP_Test.libs.IsomDevices_pb2",
            "HBT_IP_Test.libs.IsomStdDef_pb2",
            "HBT_IP_Test.libs.Isom_pb2",
            "HBT_IP_Test.libs.hbt",
            "HBT_IP_Test.libs.hbt.hbt_pb2",
            "HBT_IP_Test.libs.hbt_pb2",
            "HBT_IP_Test.libs.isom",
            "HBT_IP_Test.libs.isom.python",
            "HBT_IP_Test.libs.isom.python.AC_pb2",
            "HBT_IP_Test.libs.isom.python.ActivationGroupTypes_pb2",
            "HBT_IP_Test.libs.isom.python.ActivationGroups_pb2",
            "HBT_IP_Test.libs.isom.python.Analytics_e_pb2",
            "HBT_IP_Test.libs.isom.python.Analytics_pb2",
            "HBT_IP_Test.libs.isom.python.AudioSources_pb2",
            "HBT_IP_Test.libs.isom.python.BatteryPeripheral_pb2",
            "HBT_IP_Test.libs.isom.python.COSensor_pb2",
            "HBT_IP_Test.libs.isom.python.Cameras_e_pb2",
            "HBT_IP_Test.libs.isom.python.Cameras_pb2",
            "HBT_IP_Test.libs.isom.python.CellularInterfaces_e_pb2",
            "HBT_IP_Test.libs.isom.python.CellularInterfaces_pb2",
            "HBT_IP_Test.libs.isom.python.Channels_pb2",
            "HBT_IP_Test.libs.isom.python.Clips_e_pb2",
            "HBT_IP_Test.libs.isom.python.Clips_pb2",
            "HBT_IP_Test.libs.isom.python.CodecDetails_pb2",
            "HBT_IP_Test.libs.isom.python.DetectorGroupTypes_pb2",
            "HBT_IP_Test.libs.isom.python.DetectorGroups_e_pb2",
            "HBT_IP_Test.libs.isom.python.DetectorGroups_pb2",
            "HBT_IP_Test.libs.isom.python.Files_e_pb2",
            "HBT_IP_Test.libs.isom.python.Files_pb2",
            "HBT_IP_Test.libs.isom.python.Flashers_pb2",
            "HBT_IP_Test.libs.isom.python.GBSensors_pb2",
            "HBT_IP_Test.libs.isom.python.IsomAccessPoints_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomAccessPoints_pb2",
            "HBT_IP_Test.libs.isom.python.IsomAccounts_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomAccounts_pb2",
            "HBT_IP_Test.libs.isom.python.IsomAssets_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomAssets_pb2",
            "HBT_IP_Test.libs.isom.python.IsomBinaryHeader_pb2",
            "HBT_IP_Test.libs.isom.python.IsomCommonHeaders_pb2",
            "HBT_IP_Test.libs.isom.python.IsomCredentialHolders_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomCredentialHolders_pb2",
            "HBT_IP_Test.libs.isom.python.IsomCredentials_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomCredentials_pb2",
            "HBT_IP_Test.libs.isom.python.IsomDeviceCollections_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomDeviceCollections_pb2",
            "HBT_IP_Test.libs.isom.python.IsomDeviceMgmt_pb2",
            "HBT_IP_Test.libs.isom.python.IsomDevices_a_pb2",
            "HBT_IP_Test.libs.isom.python.IsomDevices_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomDevices_pb2",
            "HBT_IP_Test.libs.isom.python.IsomDoors_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomDoors_pb2",
            "HBT_IP_Test.libs.isom.python.IsomEvents_pb2",
            "HBT_IP_Test.libs.isom.python.IsomHolidays_pb2",
            "HBT_IP_Test.libs.isom.python.IsomInputs_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomInputs_pb2",
            "HBT_IP_Test.libs.isom.python.IsomInterfaces_a_pb2",
            "HBT_IP_Test.libs.isom.python.IsomInterfaces_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomInterfaces_pb2",
            "HBT_IP_Test.libs.isom.python.IsomIpInterfaces_pb2",
            "HBT_IP_Test.libs.isom.python.IsomObject_pb2",
            "HBT_IP_Test.libs.isom.python.IsomOutputs_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomOutputs_pb2",
            "HBT_IP_Test.libs.isom.python.IsomPartitions_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomPartitions_pb2",
            "HBT_IP_Test.libs.isom.python.IsomPeripheral_a_pb2",
            "HBT_IP_Test.libs.isom.python.IsomPeripheral_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomPeripheral_pb2",
            "HBT_IP_Test.libs.isom.python.IsomPermissions_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomPermissions_pb2",
            "HBT_IP_Test.libs.isom.python.IsomResponseStatus_pb2",
            "HBT_IP_Test.libs.isom.python.IsomSchedules_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomSchedules_pb2",
            "HBT_IP_Test.libs.isom.python.IsomSecurity_pb2",
            "HBT_IP_Test.libs.isom.python.IsomStdDef_pb2",
            "HBT_IP_Test.libs.isom.python.IsomSystem_e_pb2",
            "HBT_IP_Test.libs.isom.python.IsomSystem_pb2",
            "HBT_IP_Test.libs.isom.python.IsomTimeMgmt_pb2",
            "HBT_IP_Test.libs.isom.python.IsomUserMgmt_pb2",
            "HBT_IP_Test.libs.isom.python.IsomWiFiInterfaces_pb2",
            "HBT_IP_Test.libs.isom.python.Isom_pb2",
            "HBT_IP_Test.libs.isom.python.Jobs_pb2",
            "HBT_IP_Test.libs.isom.python.KeyFobs_e_pb2",
            "HBT_IP_Test.libs.isom.python.KeyFobs_pb2",
            "HBT_IP_Test.libs.isom.python.KeyPads_e_pb2",
            "HBT_IP_Test.libs.isom.python.KeyPads_pb2",
            "HBT_IP_Test.libs.isom.python.KeySwitches_e_pb2",
            "HBT_IP_Test.libs.isom.python.KeySwitches_pb2",
            "HBT_IP_Test.libs.isom.python.LEDs_pb2",
            "HBT_IP_Test.libs.isom.python.LogicalGroup_e_pb2",
            "HBT_IP_Test.libs.isom.python.LogicalGroups_pb2",
            "HBT_IP_Test.libs.isom.python.Macros_e_pb2",
            "HBT_IP_Test.libs.isom.python.Macros_pb2",
            "HBT_IP_Test.libs.isom.python.PIRs_pb2",
            "HBT_IP_Test.libs.isom.python.PMCollections_e_pb2",
            "HBT_IP_Test.libs.isom.python.PMCollections_pb2",
            "HBT_IP_Test.libs.isom.python.PMs_pb2",
            "HBT_IP_Test.libs.isom.python.PowerPeripheral_pb2",
            "HBT_IP_Test.libs.isom.python.Programs_pb2",
            "HBT_IP_Test.libs.isom.python.RecordProfile_e_pb2",
            "HBT_IP_Test.libs.isom.python.RecordProfile_pb2",
            "HBT_IP_Test.libs.isom.python.Recorders_e_pb2",
            "HBT_IP_Test.libs.isom.python.Recorders_pb2",
            "HBT_IP_Test.libs.isom.python.SalvoViews_pb2",
            "HBT_IP_Test.libs.isom.python.Sites_e_pb2",
            "HBT_IP_Test.libs.isom.python.Sites_pb2",
            "HBT_IP_Test.libs.isom.python.SmokeDetectors_pb2",
            "HBT_IP_Test.libs.isom.python.Sounders_pb2",
            "HBT_IP_Test.libs.isom.python.StreamProfile_e_pb2",
            "HBT_IP_Test.libs.isom.python.StreamProfile_pb2",
            "HBT_IP_Test.libs.isom.python.Streams_e_pb2",
            "HBT_IP_Test.libs.isom.python.Streams_pb2",
            "HBT_IP_Test.libs.isom.python.Thermostat_e_pb2",
            "HBT_IP_Test.libs.isom.python.Thermostat_pb2",
            "HBT_IP_Test.libs.isom.python.Volumes_pb2",
            "HBT_IP_Test.libs.proto_files",
            "HBT_IP_Test.libs.sparkplug_b",
            "HBT_IP_Test.libs.sparkplug_b_pb2",
            "HBT_IP_Test.src",
            "HBT_IP_Test.src.common",
            "HBT_IP_Test.src.common.aliasmap",
            "HBT_IP_Test.src.common.config",
            "HBT_IP_Test.src.controller",
            "HBT_IP_Test.src.core",
            "HBT_IP_Test.src.core.device",
            "HBT_IP_Test.src.core.node",
            "HBT_IP_Test.src.core.spg_engine",
            "HBT_IP_Test.src.tests",
            "HBT_IP_Test.src.tests.main_test",
            "HBT_IP_Test.src.tests.test_eagle_controller_app",
            "HBT_IP_Test.src.tests.test_messenger"
        ],
        "version": "1.0.1"
    },
    "hbtee-test": {
        "cmdline": [],
        "modules": [
            "HBTee_test"
        ],
        "version": "1.3.0"
    },
    "hbty": {
        "cmdline": [],
        "modules": [
            "hbty",
            "hbty.core",
            "hbty.drawer",
            "hbty.image_source"
        ],
        "version": "1.0.0"
    },
    "hbvigor": {
        "cmdline": [],
        "modules": [
            "HBVigor",
            "HBVigor.HBVigor",
            "utils"
        ],
        "version": "0.1.4"
    },
    "hbvpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hbx-django-tastypie-mongoengine": {
        "cmdline": [],
        "modules": [
            "tastypie_mongoengine",
            "tastypie_mongoengine.fields",
            "tastypie_mongoengine.paginator",
            "tastypie_mongoengine.resources",
            "tastypie_mongoengine.test_runner"
        ],
        "version": "0.4.6"
    },
    "hc": {
        "cmdline": [],
        "modules": [
            "hc",
            "hc._meta",
            "hc.cli",
            "hc.datatypes",
            "hc.defaults",
            "hc.helpers",
            "hc.opening_hours_js",
            "hc.schulferien_org",
            "hc.yaml"
        ],
        "version": "0.1.1"
    },
    "hc-05-configtool": {
        "cmdline": [],
        "modules": [
            "hc05config",
            "hc05config.AT_command",
            "hc05config.basic_info",
            "hc05config.bluetooth_config",
            "hc05config.input_lib",
            "hc05config.master_and_slave",
            "hc05config.port_select",
            "hc05config.preset"
        ],
        "version": "0.1.1"
    },
    "hc-amo": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hc-passphrase": {
        "cmdline": [],
        "modules": [
            "passphrase",
            "passphrase.aux",
            "passphrase.calc",
            "passphrase.passphrase",
            "passphrase.random",
            "passphrase.secrets",
            "passphrase.settings",
            "passphrase.wordlist"
        ],
        "version": "1.2.1"
    },
    "hc-probability": {
        "cmdline": [],
        "modules": [
            "hc_probability",
            "hc_probability.Binomialdistribution",
            "hc_probability.Gaussiandistribution",
            "hc_probability.Generaldistribution"
        ],
        "version": "1.0"
    },
    "hc-stock": {
        "cmdline": [],
        "modules": [
            "HC_stock",
            "HC_stock.stock"
        ],
        "version": "0.0.2"
    },
    "hc-test": {
        "cmdline": [],
        "modules": [
            "hc_test"
        ],
        "version": "0.0.2"
    },
    "hc-varoperhelper": {
        "cmdline": [],
        "modules": [
            "VarOperHelper",
            "VarOperHelper.datamodel",
            "VarOperHelper.operHelper"
        ],
        "version": "1.0.2"
    },
    "hc88po": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hca": {
        "cmdline": [],
        "modules": [
            "hca",
            "hca.auth",
            "hca.auth.cli",
            "hca.cli",
            "hca.config",
            "hca.dss",
            "hca.dss.cli",
            "hca.dss.error",
            "hca.dss.infra",
            "hca.dss.upload_to_cloud",
            "hca.dss.util",
            "hca.packages",
            "hca.upload",
            "hca.upload.cli",
            "hca.upload.cli.common",
            "hca.upload.cli.creds_command",
            "hca.upload.cli.forget_command",
            "hca.upload.cli.generate_status_report_command",
            "hca.upload.cli.list_area_command",
            "hca.upload.cli.list_areas_command",
            "hca.upload.cli.list_file_status_command",
            "hca.upload.cli.select_command",
            "hca.upload.cli.upload_command",
            "hca.upload.exceptions",
            "hca.upload.lib",
            "hca.upload.lib.api_client",
            "hca.upload.lib.client_side_checksum_handler",
            "hca.upload.lib.credentials_manager",
            "hca.upload.lib.s3_agent",
            "hca.upload.lib.upload_submission_state",
            "hca.upload.upload_area",
            "hca.upload.upload_area_uri",
            "hca.upload.upload_config",
            "hca.upload.upload_service",
            "hca.util",
            "hca.util._docs",
            "hca.util.compat",
            "hca.util.exceptions",
            "hca.util.fs_helper",
            "hca.util.pool",
            "hca.util.tsv",
            "hca.version"
        ],
        "version": "7.0.1"
    },
    "hca-bundle-jsonld": {
        "cmdline": [],
        "modules": [
            "hca_bundle_jsonld",
            "hca_bundle_jsonld.bundle_to_rdf"
        ],
        "version": "0.1.2"
    },
    "hca-cli": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "hca-ingest": {
        "cmdline": [],
        "modules": [
            "ingest",
            "ingest.api",
            "ingest.api.dssapi",
            "ingest.api.ingestapi",
            "ingest.api.requests_utils",
            "ingest.api.stagingapi",
            "ingest.api.utils",
            "ingest.exporter",
            "ingest.exporter.bundle",
            "ingest.exporter.exceptions",
            "ingest.exporter.exporter",
            "ingest.exporter.ingestexportservice",
            "ingest.exporter.metadata",
            "ingest.exporter.staging",
            "ingest.importer",
            "ingest.importer.conversion",
            "ingest.importer.conversion.column_specification",
            "ingest.importer.conversion.conversion_strategy",
            "ingest.importer.conversion.data_converter",
            "ingest.importer.conversion.exceptions",
            "ingest.importer.conversion.metadata_entity",
            "ingest.importer.conversion.template_manager",
            "ingest.importer.conversion.utils",
            "ingest.importer.data_node",
            "ingest.importer.importer",
            "ingest.importer.spreadsheet",
            "ingest.importer.spreadsheet.ingest_workbook",
            "ingest.importer.spreadsheet.ingest_worksheet",
            "ingest.importer.submission",
            "ingest.template",
            "ingest.template.descriptor",
            "ingest.template.exceptions",
            "ingest.template.linked_spreadsheet_builder",
            "ingest.template.migration_parser",
            "ingest.template.schema_parser",
            "ingest.template.schema_template",
            "ingest.template.spreadsheet_builder",
            "ingest.template.tab_config",
            "ingest.template.vanilla_spreadsheet_builder",
            "ingest.utils",
            "ingest.utils.IngestError",
            "ingest.utils.bundlevalidator",
            "ingest.utils.dcp_auth_client",
            "ingest.utils.doctict",
            "ingest.utils.errorreport",
            "ingest.utils.s2s_token_client",
            "ingest.utils.spreadsheet",
            "ingest.utils.token_manager",
            "ingest.utils.validationreport"
        ],
        "version": "0.6.10"
    },
    "hca-util": {
        "cmdline": [],
        "modules": [
            "ait.commons.util",
            "ait.commons.util.aws_client",
            "ait.commons.util.bucket_policy",
            "ait.commons.util.cmd",
            "ait.commons.util.command",
            "ait.commons.util.command.area",
            "ait.commons.util.command.config",
            "ait.commons.util.command.create",
            "ait.commons.util.command.delete",
            "ait.commons.util.command.download",
            "ait.commons.util.command.list",
            "ait.commons.util.command.select",
            "ait.commons.util.command.sync",
            "ait.commons.util.command.upload",
            "ait.commons.util.common",
            "ait.commons.util.file_transfer",
            "ait.commons.util.local_state",
            "ait.commons.util.settings",
            "ait.commons.util.settings.covid_util",
            "ait.commons.util.settings.hca_util",
            "ait.commons.util.upload_service",
            "ait.commons.util.user_profile"
        ],
        "version": "0.2.12"
    },
    "hcache": {
        "cmdline": [],
        "modules": [
            "hcache",
            "hcache.hcache"
        ],
        "version": "1.0.3"
    },
    "hcacli": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hcam-drivers": {
        "cmdline": [
            "fileserver",
            "fileserver_http",
            "get_gtc_json",
            "gtc_offsetter",
            "gtc_tweak_pointing",
            "hdriver",
            "hserver",
            "hw_monitor",
            "slide",
            "start_hicam",
            "stop_hicam",
            "test_server",
            "tsync_status"
        ],
        "modules": [
            "hcam_drivers",
            "hcam_drivers.config",
            "hcam_drivers.hardware",
            "hcam_drivers.hardware.honeywell",
            "hcam_drivers.hardware.meerstetter",
            "hcam_drivers.hardware.rack",
            "hcam_drivers.hardware.slide",
            "hcam_drivers.hardware.termserver",
            "hcam_drivers.hardware.unichiller",
            "hcam_drivers.hardware.vacuum",
            "hcam_drivers.utils",
            "hcam_drivers.utils.alarms",
            "hcam_drivers.utils.gtc",
            "hcam_drivers.utils.obsmodes",
            "hcam_drivers.utils.rtplot",
            "hcam_drivers.utils.web"
        ],
        "version": "0.5.0"
    },
    "hcam-finder": {
        "cmdline": [
            "hfinder"
        ],
        "modules": [
            "hcam_finder",
            "hcam_finder.config",
            "hcam_finder.finding_chart",
            "hcam_finder.hcam_finder",
            "hcam_finder.skyview"
        ],
        "version": "1.0.0"
    },
    "hcam-widgets": {
        "cmdline": [],
        "modules": [
            "hcam_widgets",
            "hcam_widgets.astro",
            "hcam_widgets.globals",
            "hcam_widgets.gtc",
            "hcam_widgets.gtc.corba",
            "hcam_widgets.gtc.headers",
            "hcam_widgets.hcam",
            "hcam_widgets.logs",
            "hcam_widgets.misc",
            "hcam_widgets.tcs",
            "hcam_widgets.tkutils",
            "hcam_widgets.widgets"
        ],
        "version": "0.7.0"
    },
    "hcb-aws-services": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "hcbl": {
        "cmdline": [],
        "modules": [
            "hcbl",
            "hcbl.Hachi_filter",
            "hcbl.blacklist",
            "hcbl.test_for_bl",
            "hcbl.wu_manber"
        ],
        "version": "0.0.2"
    },
    "hccencoding": {
        "cmdline": [],
        "modules": [
            "hccEncoding",
            "hccEncoding.EncoderForClassification",
            "hccEncoding.EncoderForRegression"
        ],
        "version": "0.0.1"
    },
    "hccf": {
        "cmdline": [],
        "modules": [
            "rrcf",
            "rrcf.rrcf",
            "rrcf.shingle"
        ],
        "version": "0.2"
    },
    "hcconfig": {
        "cmdline": [],
        "modules": [
            "hcconfig",
            "hcconfig.interface"
        ],
        "version": "0.2.0"
    },
    "hccpy": {
        "cmdline": [],
        "modules": [
            "hccpy",
            "hccpy._AGESEXV2",
            "hccpy._AGESEXV6",
            "hccpy._I0V05ED2",
            "hccpy._V0519F3M",
            "hccpy._V0519F3P",
            "hccpy._V2218O1M",
            "hccpy._V2218O1P",
            "hccpy._V22I0ED2",
            "hccpy._V2318P1M",
            "hccpy._V2419P1M",
            "hccpy.data",
            "hccpy.hcc",
            "hccpy.hhshcc",
            "hccpy.raeligible",
            "hccpy.utils",
            "hccpy.utils_hhs"
        ],
        "version": "0.0.9"
    },
    "hcct": {
        "cmdline": [],
        "modules": [
            "hcct",
            "hcct.Hachi_filter",
            "hcct.contact",
            "hcct.test_for_contact"
        ],
        "version": "0.0.3"
    },
    "hcdk-eks": {
        "cmdline": [],
        "modules": [
            "hcdk_eks",
            "hcdk_eks.eks_cluster",
            "tests",
            "tests.sample_stack",
            "tests.sample_stack_with_vpc",
            "tests.unit",
            "tests.unit.test_eks_cluster",
            "tests.unit.test_eks_cluster_with_vpc"
        ],
        "version": "0.0.3"
    },
    "hcdk-utils": {
        "cmdline": [],
        "modules": [
            "hcdk_utils",
            "hcdk_utils.halloumi_database_alarms",
            "hcdk_utils.halloumi_documentdb_alarms",
            "hcdk_utils.halloumi_elasticache_alarms",
            "hcdk_utils.halloumi_mq_alarms",
            "hcdk_utils.halloumi_rds_snapshot_alarms",
            "hcdk_utils.halloumi_vpc_alarms",
            "hcdk_utils.utils",
            "hcdk_utils.utils.check_cdk",
            "hcdk_utils.utils.functions",
            "hcdk_utils.utils.hcdk_config",
            "hcdk_utils.utils.parameters"
        ],
        "version": "1.60.13"
    },
    "hcf-backend": {
        "cmdline": [],
        "modules": [
            "hcf_backend",
            "hcf_backend.backend",
            "hcf_backend.manager",
            "hcf_backend.utils",
            "hcf_backend.utils.crawlmanager",
            "hcf_backend.utils.hcfpal"
        ],
        "version": "0.4.3.1"
    },
    "hcgb": {
        "cmdline": [],
        "modules": [
            "HCGB",
            "HCGB.config",
            "HCGB.config.extern_progs",
            "HCGB.config.set_config",
            "HCGB.functions",
            "HCGB.functions.aesthetics_functions",
            "HCGB.functions.blast_functions",
            "HCGB.functions.fasta_functions",
            "HCGB.functions.files_functions",
            "HCGB.functions.main_functions",
            "HCGB.functions.math_functions",
            "HCGB.functions.system_call_functions",
            "HCGB.functions.time_functions",
            "HCGB.sampleParser",
            "HCGB.sampleParser.files",
            "HCGB.sampleParser.merge",
            "HCGB.sampleParser.samples"
        ],
        "version": "0.2.4.3"
    },
    "hchk": {
        "cmdline": [],
        "modules": [
            "hchk",
            "hchk.cli"
        ],
        "version": "0.1.4"
    },
    "hci": {
        "cmdline": [],
        "modules": [
            "hci",
            "hci.asynchronous",
            "hci.asynchronous.asynchronous_data_packet",
            "hci.asynchronous.autocast",
            "hci.autocast",
            "hci.command",
            "hci.command.autocast",
            "hci.command.command_packet",
            "hci.command.commands",
            "hci.command.commands.att_exchange_mtu_req",
            "hci.command.commands.gap_device_discovery_request",
            "hci.command.commands.gap_device_init",
            "hci.command.commands.gap_establish_link_req",
            "hci.command.commands.gap_get_param",
            "hci.command.commands.gap_set_param",
            "hci.command.commands.gap_terminate_link_req",
            "hci.command.commands.gap_update_link_param_req",
            "hci.command.commands.gap_update_link_param_req_reply",
            "hci.command.commands.gatt_disc_all_char_descs",
            "hci.command.commands.gatt_read_char_value",
            "hci.command.commands.gatt_write_char_value",
            "hci.command.commands.hci_ext_one_pkt_per_evt",
            "hci.command.commands.hci_ext_packet_error_rate",
            "hci.command.commands.hci_ext_reset_system",
            "hci.command.commands.hci_ext_set_tx_power",
            "hci.command.commands.hci_read_rssi",
            "hci.command.commands.hci_reset",
            "hci.command.commands.le_set_data_length",
            "hci.command.commands.le_set_default_phy",
            "hci.command.commands.le_set_phy",
            "hci.command.commands.util_build_revision",
            "hci.command.commands.util_force_boot",
            "hci.command.opcode",
            "hci.event",
            "hci.event.autocast",
            "hci.event.event_codes",
            "hci.event.event_packet",
            "hci.event.events",
            "hci.event.events.hci_command_complete",
            "hci.event.events.hci_commands_complete",
            "hci.event.events.hci_commands_complete.autocast",
            "hci.event.events.hci_commands_complete.hci_read_rssi",
            "hci.event.events.vendor_specific",
            "hci.event.events.vendor_specific.att_error_response",
            "hci.event.events.vendor_specific.att_exchange_mtu_response",
            "hci.event.events.vendor_specific.att_find_info_rsp",
            "hci.event.events.vendor_specific.att_handle_value_notification",
            "hci.event.events.vendor_specific.att_mtu_updated",
            "hci.event.events.vendor_specific.att_read_response",
            "hci.event.events.vendor_specific.att_write_response",
            "hci.event.events.vendor_specific.autocast",
            "hci.event.events.vendor_specific.gap_device_discovery_done",
            "hci.event.events.vendor_specific.gap_device_information",
            "hci.event.events.vendor_specific.gap_device_init_done",
            "hci.event.events.vendor_specific.gap_hci_extention_command_status",
            "hci.event.events.vendor_specific.gap_link_established",
            "hci.event.events.vendor_specific.gap_link_param_update",
            "hci.event.events.vendor_specific.gap_link_terminated",
            "hci.event.events.vendor_specific.hci_ext_reset_system_done",
            "hci.event.events.vendor_specific.hci_ext_set_tx_power_done",
            "hci.event.events.vendor_specific.hci_extension_packet_error_rate",
            "hci.event.events.vendor_specific_event",
            "hci.event.events.vendor_specific_events",
            "hci.from_binary",
            "hci.hci_packet",
            "hci.transforms"
        ],
        "version": "0.0.8"
    },
    "hci-protocol": {
        "cmdline": [],
        "modules": [
            "hci_protocol",
            "hci_protocol.hci_functions",
            "hci_protocol.hci_protocol",
            "hci_protocol.hci_sniffer",
            "hci_protocol.tmp"
        ],
        "version": "0.0.5"
    },
    "hciplot": {
        "cmdline": [],
        "modules": [
            "hciplot",
            "hciplot.hciplot"
        ],
        "version": "0.1.7"
    },
    "hcipy": {
        "cmdline": [],
        "modules": [
            "hcipy",
            "hcipy.aperture",
            "hcipy.aperture.generic",
            "hcipy.aperture.realistic",
            "hcipy.atmosphere",
            "hcipy.atmosphere.atmospheric_model",
            "hcipy.atmosphere.finite_atmospheric_layer",
            "hcipy.atmosphere.infinite_atmospheric_layer",
            "hcipy.atmosphere.modal_adaptive_optics_layer",
            "hcipy.atmosphere.standard_atmosphere",
            "hcipy.atmosphere.stored_atmospheric_layer",
            "hcipy.config",
            "hcipy.config.config",
            "hcipy.coronagraphy",
            "hcipy.coronagraphy.apodizing_phase_plate",
            "hcipy.coronagraphy.knife_edge",
            "hcipy.coronagraphy.lyot",
            "hcipy.coronagraphy.perfect_coronagraph",
            "hcipy.coronagraphy.shaped_pupil",
            "hcipy.coronagraphy.vortex",
            "hcipy.field",
            "hcipy.field.cartesian_grid",
            "hcipy.field.coordinates",
            "hcipy.field.field",
            "hcipy.field.grid",
            "hcipy.field.operations",
            "hcipy.field.polar_grid",
            "hcipy.field.spherical_grid",
            "hcipy.field.util",
            "hcipy.fourier",
            "hcipy.fourier.fast_fourier_transform",
            "hcipy.fourier.fourier_operations",
            "hcipy.fourier.fourier_transform",
            "hcipy.fourier.matrix_fourier_transform",
            "hcipy.fourier.naive_fourier_transform",
            "hcipy.interpolation",
            "hcipy.interpolation.linear",
            "hcipy.interpolation.nearest",
            "hcipy.metrics",
            "hcipy.metrics.contrast",
            "hcipy.metrics.profile",
            "hcipy.mode_basis",
            "hcipy.mode_basis.LP_fiber_modes",
            "hcipy.mode_basis.disk_harmonic",
            "hcipy.mode_basis.fourier",
            "hcipy.mode_basis.gaussian_hermite",
            "hcipy.mode_basis.gaussian_laguerre",
            "hcipy.mode_basis.gaussian_pokes",
            "hcipy.mode_basis.karhunen_loeve",
            "hcipy.mode_basis.mode_basis",
            "hcipy.mode_basis.zernike",
            "hcipy.optics",
            "hcipy.optics.aberration",
            "hcipy.optics.apodization",
            "hcipy.optics.deformable_mirror",
            "hcipy.optics.detector",
            "hcipy.optics.dynamic_optical_system",
            "hcipy.optics.fiber",
            "hcipy.optics.gaussian_beam",
            "hcipy.optics.glass",
            "hcipy.optics.magnifier",
            "hcipy.optics.micro_lens_array",
            "hcipy.optics.optical_element",
            "hcipy.optics.periodic_optical_element",
            "hcipy.optics.polarization",
            "hcipy.optics.segmented_mirror",
            "hcipy.optics.surface_profiles",
            "hcipy.optics.tip_tilt_mirror",
            "hcipy.optics.vibration",
            "hcipy.optics.wavefront",
            "hcipy.plotting",
            "hcipy.plotting.animation",
            "hcipy.plotting.color_scheme",
            "hcipy.plotting.colors",
            "hcipy.plotting.error_bars",
            "hcipy.plotting.field",
            "hcipy.plotting.util",
            "hcipy.propagation",
            "hcipy.propagation.angular_spectrum",
            "hcipy.propagation.fraunhofer",
            "hcipy.propagation.fresnel",
            "hcipy.propagation.propagator",
            "hcipy.util",
            "hcipy.util.io",
            "hcipy.util.matrix_inversion",
            "hcipy.util.singular_value_decomposition",
            "hcipy.util.spectral_noise",
            "hcipy.util.stats",
            "hcipy.version",
            "hcipy.wavefront_control",
            "hcipy.wavefront_sensing",
            "hcipy.wavefront_sensing.optical_differentiation_wavefront_sensor",
            "hcipy.wavefront_sensing.pyramid",
            "hcipy.wavefront_sensing.shack_hartmann",
            "hcipy.wavefront_sensing.wavefront_sensor",
            "hcipy.wavefront_sensing.zernike_wavefront_sensor"
        ],
        "version": "0.3.1"
    },
    "hcl": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hcl-exception-py": {
        "cmdline": [],
        "modules": [
            "hcl_exception"
        ],
        "version": "1.0.0"
    },
    "hclctpm": {
        "cmdline": [],
        "modules": [
            "dataprep",
            "dataprep.QueryFunctions",
            "dataprep.combine_data",
            "dataprep.dprepare",
            "dataprep.dprepare_ponfare",
            "dataprep.dprepare_ponfare_matching",
            "dataprep.dprepare_ponfare_matching_d2dist",
            "dataprep.dprepare_uscensus",
            "dataprep.dprepare_uscensus_bkup",
            "dataprep.dprepare_uscensus_intensity_matching_age",
            "dataprep.fix_data",
            "dataprep.fix_data_allcohorts",
            "dataprep.fix_data_exploreonly_small",
            "dataprep.prep_hscls_data",
            "dataprep.prep_hscls_data_11wks_workbenchnull",
            "dataprep.preproc_ponfare",
            "dataprep.pull_data_presto",
            "dataprep.readCensus",
            "gbdtleaves",
            "gbdtleaves.inc_gbdt",
            "gbdtleaves.inc_gbdt_v2",
            "gbdtleaves.leaves",
            "gbdtleaves.leaves_cpit",
            "gbdtleaves.leaves_drm",
            "hclctpm",
            "hclctpm.ModelingUtils",
            "hclctpm.ModelingUtils_bkup",
            "hclctpm.QueryFunctions",
            "hclctpm.QueryFunctions_bkup",
            "hclctpm.dataprep",
            "hclctpm.dataprep.DataProcFunctions",
            "hclctpm.dataprep.QueryFunctions",
            "hclctpm.dataprep.combine_data",
            "hclctpm.dataprep.dprepare",
            "hclctpm.dataprep.dprepare_ponfare",
            "hclctpm.dataprep.dprepare_ponfare_matching",
            "hclctpm.dataprep.dprepare_ponfare_matching_d2dist",
            "hclctpm.dataprep.dprepare_uscensus",
            "hclctpm.dataprep.dprepare_uscensus_bkup",
            "hclctpm.dataprep.dprepare_uscensus_intensity_matching_age",
            "hclctpm.dataprep.fix_data",
            "hclctpm.dataprep.fix_data_allcohorts",
            "hclctpm.dataprep.fix_data_exploreonly_small",
            "hclctpm.dataprep.prep_hscls_data",
            "hclctpm.dataprep.prep_hscls_data_11wks_workbenchnull",
            "hclctpm.dataprep.preproc_ponfare",
            "hclctpm.dataprep.pull_data_presto",
            "hclctpm.dataprep.readCensus",
            "hclctpm.exp",
            "hclctpm.exp.Experimentation",
            "hclctpm.models",
            "hclctpm.models.CLModel",
            "hclctpm.models.LinearHTEModels",
            "hclctpm.models.ModelDefinitions",
            "hclctpm.models.PromotionModels",
            "hclctpm.models.bklog",
            "hclctpm.models.dummy",
            "hclctpm.models.layers_tfv2",
            "hclctpm.models.pyMLModelDefinitions",
            "hclctpm.models.rlearner",
            "hclctpm.models.rxgy",
            "hclctpm.notebooks",
            "hclctpm.notebooks.MichelangeloCLModelDevDemoV3",
            "hclctpm.notebooks.bklog_pyML_unittest",
            "hclctpm.settings",
            "hclctpm.settings.model_dev_config",
            "hclctpm.tests",
            "hclctpm.tests.Master_pyML_unittest",
            "hclctpm.tests.MichelangeloCLModelDevDemoV3",
            "hclctpm.tests.pyML_unittest",
            "hclctpm.tests.test_tf_ver",
            "hclctpm.tests.test_tfv2",
            "models",
            "models.ModelDefinitions",
            "models.dummy",
            "models.layers_tfv2",
            "models.pyMLModelDefinitions",
            "models.rxgy",
            "notebook_scaffolds",
            "notebook_scaffolds.Master_Scaffold_Ponfare_py3",
            "notebook_scaffolds.Master_Scaffold_Ponfare_py3_matching",
            "notebook_scaffolds.Master_Scaffold_Ponfare_py3_matching_d2dist",
            "notebook_scaffolds.Master_Scaffold_Ponfare_py3_matching_d2dist_otherMs",
            "notebook_scaffolds.Master_Scaffold_Ponfare_py3_matching_d2dist_stds",
            "notebook_scaffolds.Master_Scaffold_Ponfare_py3_matching_d2dist_stds_singular",
            "notebook_scaffolds.Master_Scaffold_R2E_marketing-GB-Newest-Copy3",
            "notebook_scaffolds.Master_Scaffold_RT",
            "notebook_scaffolds.Master_Scaffold_RxGy_py3",
            "notebook_scaffolds.Master_Scaffold_USCensus_py3_matching_d2dist_otherMs",
            "notebook_scaffolds.Master_Scaffold_USCensus_py3_matching_d2dist_std",
            "ponfare_3rd_place",
            "scripts",
            "scripts.train_model"
        ],
        "version": "0.5.3"
    },
    "hcli-core": {
        "cmdline": [],
        "modules": [
            "hcli_core",
            "hcli_core.cli",
            "hcli_core.cli.cli",
            "hcli_core.config",
            "hcli_core.haliot",
            "hcli_core.haliot.hal",
            "hcli_core.hcli",
            "hcli_core.hcli.api",
            "hcli_core.hcli.command",
            "hcli_core.hcli.document",
            "hcli_core.hcli.execution",
            "hcli_core.hcli.finalexecution",
            "hcli_core.hcli.home",
            "hcli_core.hcli.option",
            "hcli_core.hcli.parameter",
            "hcli_core.hcli.profile",
            "hcli_core.hcli.semantic",
            "hcli_core.hcli_core",
            "hcli_core.hutils",
            "hcli_core.package",
            "hcli_core.template"
        ],
        "version": "0.4.7"
    },
    "hclib": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.4"
    },
    "hclogger": {
        "cmdline": [],
        "modules": [
            "hclogger",
            "hclogger.hclogger"
        ],
        "version": "1.0.4"
    },
    "hcloud": {
        "cmdline": [],
        "modules": [
            "hcloud",
            "hcloud.__version__",
            "hcloud.actions",
            "hcloud.actions.client",
            "hcloud.actions.domain",
            "hcloud.certificates",
            "hcloud.certificates.client",
            "hcloud.certificates.domain",
            "hcloud.core",
            "hcloud.core.client",
            "hcloud.core.domain",
            "hcloud.datacenters",
            "hcloud.datacenters.client",
            "hcloud.datacenters.domain",
            "hcloud.floating_ips",
            "hcloud.floating_ips.client",
            "hcloud.floating_ips.domain",
            "hcloud.hcloud",
            "hcloud.helpers",
            "hcloud.images",
            "hcloud.images.client",
            "hcloud.images.domain",
            "hcloud.isos",
            "hcloud.isos.client",
            "hcloud.isos.domain",
            "hcloud.load_balancer_types",
            "hcloud.load_balancer_types.client",
            "hcloud.load_balancer_types.domain",
            "hcloud.load_balancers",
            "hcloud.load_balancers.client",
            "hcloud.load_balancers.domain",
            "hcloud.locations",
            "hcloud.locations.client",
            "hcloud.locations.domain",
            "hcloud.networks",
            "hcloud.networks.client",
            "hcloud.networks.domain",
            "hcloud.server_types",
            "hcloud.server_types.client",
            "hcloud.server_types.domain",
            "hcloud.servers",
            "hcloud.servers.client",
            "hcloud.servers.domain",
            "hcloud.ssh_keys",
            "hcloud.ssh_keys.client",
            "hcloud.ssh_keys.domain",
            "hcloud.volumes",
            "hcloud.volumes.client",
            "hcloud.volumes.domain"
        ],
        "version": "1.9.1"
    },
    "hcls-fhir-rdf": {
        "cmdline": [
            "download_fhir_spec",
            "generate_rdf",
            "generate_shex",
            "generate_xml_definitions"
        ],
        "modules": [
            "hcls_fhir_rdf",
            "hcls_fhir_rdf.defaults",
            "hcls_fhir_rdf.fhir_elements",
            "hcls_fhir_rdf.fhir_types",
            "hcls_fhir_rdf.namespaces",
            "hcls_fhir_rdf.rdflib_formats",
            "hcls_fhir_rdf.utils"
        ],
        "version": "0.1.3"
    },
    "hclust2": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hcluster": {
        "cmdline": [],
        "modules": [
            "hcluster",
            "hcluster.distance",
            "hcluster.hierarchy"
        ],
        "version": "0.2.0"
    },
    "hcm": {
        "cmdline": [],
        "modules": [
            "hcm",
            "hcm.subcommand",
            "hcm.subcommand.browse",
            "hcm.subcommand.create",
            "hcm.subcommand.download",
            "hcm.subcommand.install",
            "hcm.subcommand.publish",
            "hcm.subcommand.show",
            "hcm.subcommand.sub_list",
            "hcm.subcommand.uninstall",
            "hcm.subcommand.validate",
            "hcm.svn",
            "hcm.svn.extract_hcm_json_revision",
            "hcm.svn.svn",
            "hcm.svn.what_is_the_latest_file_revision",
            "hcm.utils",
            "hcm.version",
            "tests",
            "tests.mocks",
            "tests.subcommand",
            "tests.subcommand.browse",
            "tests.subcommand.browse.test_browse",
            "tests.subcommand.create",
            "tests.subcommand.create.test_create",
            "tests.subcommand.download",
            "tests.subcommand.download.test_download",
            "tests.subcommand.install",
            "tests.subcommand.install.test_install",
            "tests.subcommand.publish",
            "tests.subcommand.publish.test_publish",
            "tests.subcommand.show",
            "tests.subcommand.show.test_show",
            "tests.subcommand.sub_list",
            "tests.subcommand.sub_list.test_sub_list",
            "tests.subcommand.validate",
            "tests.subcommand.validate.test_validate",
            "tests.svn",
            "tests.svn.test_svn",
            "tests.utils",
            "tests.utils.test_utils",
            "tests.version",
            "tests.version.test_version"
        ],
        "version": "0.14"
    },
    "hcmidiasync": {
        "cmdline": [
            "hcmidia-clean",
            "hcmidia-schedule",
            "hcmidia-sync"
        ],
        "modules": [
            "hcmidiaSync",
            "hcmidiaSync.hcmidiaSync"
        ],
        "version": "0.35"
    },
    "hcml": {
        "cmdline": [],
        "modules": [
            "hcml",
            "hcml.Hachi_filter",
            "hcml.meaningless",
            "hcml.test_for_ml"
        ],
        "version": "0.0.1"
    },
    "hcnb": {
        "cmdline": [],
        "modules": [
            "hcnb",
            "hcnb.Hachi_filter",
            "hcnb.bayes",
            "hcnb.test_for_nb"
        ],
        "version": "0.0.1"
    },
    "hcolours": {
        "cmdline": [],
        "modules": [
            "hcolours",
            "hcolours.hcolours"
        ],
        "version": "0.1.4"
    },
    "hconf": {
        "cmdline": [],
        "modules": [
            "hconf",
            "hconf.Config",
            "hconf.Exceptions",
            "hconf.Subparsers",
            "hconf.Subparsers._subparser",
            "hconf.Subparsers.cmdline",
            "hconf.Subparsers.dictionary",
            "hconf.Subparsers.ini",
            "hconf.Subparsers.json_",
            "hconf.Subparsers.yaml_"
        ],
        "version": "0.0.2"
    },
    "hconfig": {
        "cmdline": [
            "hconfig"
        ],
        "modules": [
            "hconfig"
        ],
        "version": "0.5.0"
    },
    "hcore": {
        "cmdline": [],
        "modules": [
            "hcore"
        ],
        "version": "0.1.0.3"
    },
    "hcorex": {
        "cmdline": [],
        "modules": [
            "hcorex"
        ],
        "version": "0.0.0.5"
    },
    "hcp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hcp-dataprocessor": {
        "cmdline": [],
        "modules": [
            "HCP_DataProcessor",
            "HCP_DataProcessor.Data_Process",
            "HCP_DataProcessor.Data_Process.Data_Process",
            "HCP_DataProcessor.Data_Process._PCA_Filter",
            "HCP_DataProcessor.Data_Process._correlation_matrix_collector",
            "HCP_DataProcessor.main",
            "HCP_DataProcessor.script"
        ],
        "version": "0.0.6"
    },
    "hcp-utils": {
        "cmdline": [],
        "modules": [
            "hcp_utils",
            "hcp_utils.hcp_utils"
        ],
        "version": "0.1.0"
    },
    "hcp2bids": {
        "cmdline": [],
        "modules": [
            "hcp2bids",
            "hcp2bids.convert",
            "hcp2bids.download",
            "hcp2bids.subjects"
        ],
        "version": "0.1.0"
    },
    "hcpcbc": {
        "cmdline": [],
        "modules": [
            "cbc",
            "cbc.cbhandler",
            "cbc.charthandler",
            "cbc.init",
            "cbc.template",
            "cbc.tenants",
            "charts",
            "charts.init",
            "charts.prep",
            "charts.xlsx"
        ],
        "version": "2.3.1"
    },
    "hcplogs": {
        "cmdline": [],
        "modules": [
            "hcplogs",
            "hcplogs.init",
            "hcplogs.loghandler",
            "hcplogs.template"
        ],
        "version": "2.0.9"
    },
    "hcpre": {
        "cmdline": [],
        "modules": [
            "hcpre",
            "hcpre.config",
            "hcpre.duke_siemens",
            "hcpre.duke_siemens.constants",
            "hcpre.duke_siemens.util_dicom_siemens",
            "hcpre.duke_siemens.util_mrs_file",
            "hcpre.hcpipe",
            "hcpre.interfaces",
            "hcpre.util",
            "hcpre.workflows"
        ],
        "version": "0.5.5"
    },
    "hcpregistry": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hcprequestanalytics": {
        "cmdline": [],
        "modules": [
            "hcpreq",
            "hcpreq.db",
            "hcpreq.logs",
            "hcpreq.queries",
            "hcpreq.xlsx",
            "version"
        ],
        "version": "1.5.3"
    },
    "hcpsdk": {
        "cmdline": [],
        "modules": [
            "hcpsdk",
            "hcpsdk.httpclient",
            "hcpsdk.ips",
            "hcpsdk.mapi",
            "hcpsdk.mapi.chargeback",
            "hcpsdk.mapi.logs",
            "hcpsdk.mapi.replication",
            "hcpsdk.mapi.tenant",
            "hcpsdk.namespace",
            "hcpsdk.pathbuilder",
            "hcpsdk.version",
            "tests",
            "tests.failtest",
            "tests.idletimertest",
            "tests.init_tests",
            "tests.loadtest",
            "tests.nsstatstest",
            "tests.replicatest",
            "tests.retrytest",
            "tests.test_010_ips",
            "tests.test_020_hcpsdk",
            "tests.test_021_hcpsdk_w_certs",
            "tests.test_030_namespace",
            "tests.test_040_mapi_replication",
            "tests.test_041_mapi_logs",
            "tests.test_042_mapi_chargeback",
            "tests.test_043_mapi_tenant",
            "tests.test_050_pathbuilder",
            "tests.timeouttest",
            "tests.trysdk"
        ],
        "version": "0.9.4.post12"
    },
    "hcpt": {
        "cmdline": [],
        "modules": [
            "hcptcmds",
            "hcptcmds.hcpcookie",
            "hcptcmds.hcpf",
            "hcptcmds.hcpinit",
            "hcptcmds.hcplist",
            "hcptcmds.hcpload",
            "hcptcmds.hcpretention",
            "hcptcmds.hcptest",
            "hcptcmds.hcpunload",
            "hcptcmds.init"
        ],
        "version": "1.0.20"
    },
    "hcpupd": {
        "cmdline": [],
        "modules": [
            "hcpup",
            "hcpup.conf",
            "hcpup.init",
            "hcpup.log",
            "hcpup.notify",
            "hcpup.queue",
            "hcpup.service",
            "hcpup.up",
            "version"
        ],
        "version": "0.2.5"
    },
    "hcpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hcquant": {
        "cmdline": [],
        "modules": [
            "hcquant",
            "hcquant.calendar",
            "hcquant.calendar.tradedate_handle",
            "hcquant.factor",
            "hcquant.factor.factor_handle",
            "hcquant.factor.utils",
            "hcquant.factor.utils.alphalens_utils",
            "hcquant.factor.utils.factor_treament",
            "hcquant.industry",
            "hcquant.industry.industry",
            "hcquant.rqalpha_utils",
            "hcquant.rqalpha_utils.utils",
            "hcquant.stats",
            "hcquant.stats.stats"
        ],
        "version": "0.0.26"
    },
    "hcrsimpy": {
        "cmdline": [],
        "modules": [
            "HCRSimPY",
            "HCRSimPY.light_schedules",
            "HCRSimPY.light_schedules.LightSchedule",
            "HCRSimPY.models",
            "HCRSimPY.models.singlepop_model",
            "HCRSimPY.models.twopop_model",
            "HCRSimPY.models.vdp_forger99_model",
            "HCRSimPY.models.vdp_model",
            "HCRSimPY.plots",
            "HCRSimPY.plots.actogram",
            "HCRSimPY.plots.latexify",
            "HCRSimPY.plots.stroboscopic"
        ],
        "version": "1.0.0"
    },
    "hcrypt": {
        "cmdline": [],
        "modules": [
            "hcrypt"
        ],
        "version": "3"
    },
    "hcrystalball": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.7"
    },
    "hcs": {
        "cmdline": [],
        "modules": [
            "hiddenconsolestart",
            "hiddenconsolestart.hcs",
            "hiddenconsolestart.main",
            "hiddenconsolestart.metadata",
            "hiddenconsolestart.process"
        ],
        "version": "0.1.16"
    },
    "hcs-storage": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "hcs-utils": {
        "cmdline": [],
        "modules": [
            "hcs_utils",
            "hcs_utils._version",
            "hcs_utils.collections",
            "hcs_utils.daemon",
            "hcs_utils.itemstore",
            "hcs_utils.json",
            "hcs_utils.lock",
            "hcs_utils.memoize",
            "hcs_utils.path",
            "hcs_utils.storage",
            "hcs_utils.test",
            "hcs_utils.test.test_collections",
            "hcs_utils.test.test_itemstore",
            "hcs_utils.test.test_json",
            "hcs_utils.test.test_lock",
            "hcs_utils.test.test_memoize",
            "hcs_utils.test.test_path",
            "hcs_utils.test.test_storage",
            "hcs_utils.test.test_unittest",
            "hcs_utils.threading",
            "hcs_utils.unittest"
        ],
        "version": "2.0"
    },
    "hcsr04sensor": {
        "cmdline": [
            "hcsr04.py"
        ],
        "modules": [
            "hcsr04sensor",
            "hcsr04sensor.sensor"
        ],
        "version": "1.6.2"
    },
    "hcss": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "hcuppy": {
        "cmdline": [],
        "modules": [
            "hcuppy",
            "hcuppy.cci",
            "hcuppy.ccs",
            "hcuppy.cpt",
            "hcuppy.data",
            "hcuppy.elixhauser",
            "hcuppy.prcls",
            "hcuppy.sflag",
            "hcuppy.uflag",
            "hcuppy.utils"
        ],
        "version": "0.0.7"
    },
    "hcut": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "hcvcs": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "hcy-import": {
        "cmdline": [],
        "modules": [
            "pkgs",
            "pkgs.utils"
        ],
        "version": "0.1"
    },
    "hcy-schedule": {
        "cmdline": [],
        "modules": [
            "schedule"
        ],
        "version": "0.0.2"
    },
    "hd": {
        "cmdline": [],
        "modules": [
            "hd",
            "hd.hd",
            "hd.termsize"
        ],
        "version": "0.1.2"
    },
    "hd-data": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.22"
    },
    "hd-es-tools": {
        "cmdline": [],
        "modules": [
            "hd_es_tools",
            "hd_es_tools.es_sync",
            "hd_es_tools.es_sync.fav_title_1_pgc",
            "hd_es_tools.es_sync.fav_title_1_pgc.fav_pgc_title",
            "hd_es_tools.es_sync.fav_title_2_recipe",
            "hd_es_tools.es_sync.fav_title_2_recipe.fav_recipe_title",
            "hd_es_tools.es_sync.fav_title_3_favdir",
            "hd_es_tools.es_sync.fav_title_3_favdir.fav_dir_title",
            "hd_es_tools.es_sync.fav_title_sync",
            "hd_es_tools.es_sync.fav_title_sync.task_sync_fav_title",
            "hd_es_tools.mongo_connector_doc_managers",
            "hd_es_tools.mongo_connector_doc_managers.elastic5_doc_manager",
            "hd_es_tools.mongo_connector_doc_managers.formatters",
            "hd_es_tools.mongo_connector_doc_managers.formatters.fav_formatter",
            "hd_es_tools.mongo_connector_doc_managers.formatters_proxy",
            "hd_es_tools.tools"
        ],
        "version": "0.2.6"
    },
    "hd-glio": {
        "cmdline": [],
        "modules": [
            "hd_glio",
            "hd_glio.hd_glio_predict",
            "hd_glio.hd_glio_predict_folder",
            "hd_glio.paths",
            "hd_glio.setup_hd_glio",
            "hd_glio.utils"
        ],
        "version": "2.0"
    },
    "hd-gliomouse": {
        "cmdline": [],
        "modules": [
            "hd_gliomouse",
            "hd_gliomouse.hd_gliomouse_predict",
            "hd_gliomouse.hd_gliomouse_predict_folder",
            "hd_gliomouse.paths",
            "hd_gliomouse.setup_hd_gliomouse",
            "hd_gliomouse.utils"
        ],
        "version": "1.1"
    },
    "hd-llz": {
        "cmdline": [],
        "modules": [
            "hd_llz",
            "hd_llz.hand_detection",
            "object_detection",
            "object_detection.anchor_generators",
            "object_detection.anchor_generators.grid_anchor_generator",
            "object_detection.anchor_generators.grid_anchor_generator_test",
            "object_detection.anchor_generators.multiple_grid_anchor_generator",
            "object_detection.anchor_generators.multiple_grid_anchor_generator_test",
            "object_detection.box_coders",
            "object_detection.box_coders.faster_rcnn_box_coder",
            "object_detection.box_coders.faster_rcnn_box_coder_test",
            "object_detection.box_coders.keypoint_box_coder",
            "object_detection.box_coders.keypoint_box_coder_test",
            "object_detection.box_coders.mean_stddev_box_coder",
            "object_detection.box_coders.mean_stddev_box_coder_test",
            "object_detection.box_coders.square_box_coder",
            "object_detection.box_coders.square_box_coder_test",
            "object_detection.builders",
            "object_detection.builders.anchor_generator_builder",
            "object_detection.builders.anchor_generator_builder_test",
            "object_detection.builders.box_coder_builder",
            "object_detection.builders.box_coder_builder_test",
            "object_detection.builders.box_predictor_builder",
            "object_detection.builders.box_predictor_builder_test",
            "object_detection.builders.hyperparams_builder",
            "object_detection.builders.hyperparams_builder_test",
            "object_detection.builders.image_resizer_builder",
            "object_detection.builders.image_resizer_builder_test",
            "object_detection.builders.input_reader_builder",
            "object_detection.builders.input_reader_builder_test",
            "object_detection.builders.losses_builder",
            "object_detection.builders.losses_builder_test",
            "object_detection.builders.matcher_builder",
            "object_detection.builders.matcher_builder_test",
            "object_detection.builders.model_builder",
            "object_detection.builders.model_builder_test",
            "object_detection.builders.optimizer_builder",
            "object_detection.builders.optimizer_builder_test",
            "object_detection.builders.post_processing_builder",
            "object_detection.builders.post_processing_builder_test",
            "object_detection.builders.preprocessor_builder",
            "object_detection.builders.preprocessor_builder_test",
            "object_detection.builders.region_similarity_calculator_builder",
            "object_detection.builders.region_similarity_calculator_builder_test",
            "object_detection.core",
            "object_detection.core.anchor_generator",
            "object_detection.core.balanced_positive_negative_sampler",
            "object_detection.core.balanced_positive_negative_sampler_test",
            "object_detection.core.batcher",
            "object_detection.core.batcher_test",
            "object_detection.core.box_coder",
            "object_detection.core.box_coder_test",
            "object_detection.core.box_list",
            "object_detection.core.box_list_ops",
            "object_detection.core.box_list_ops_test",
            "object_detection.core.box_list_test",
            "object_detection.core.box_predictor",
            "object_detection.core.box_predictor_test",
            "object_detection.core.data_decoder",
            "object_detection.core.keypoint_ops",
            "object_detection.core.keypoint_ops_test",
            "object_detection.core.losses",
            "object_detection.core.losses_test",
            "object_detection.core.matcher",
            "object_detection.core.matcher_test",
            "object_detection.core.minibatch_sampler",
            "object_detection.core.minibatch_sampler_test",
            "object_detection.core.model",
            "object_detection.core.post_processing",
            "object_detection.core.post_processing_test",
            "object_detection.core.prefetcher",
            "object_detection.core.prefetcher_test",
            "object_detection.core.preprocessor",
            "object_detection.core.preprocessor_test",
            "object_detection.core.region_similarity_calculator",
            "object_detection.core.region_similarity_calculator_test",
            "object_detection.core.standard_fields",
            "object_detection.core.target_assigner",
            "object_detection.core.target_assigner_test",
            "object_detection.create_pascal_tf_record",
            "object_detection.create_pascal_tf_record_test",
            "object_detection.create_pet_tf_record",
            "object_detection.data_decoders",
            "object_detection.data_decoders.tf_example_decoder",
            "object_detection.data_decoders.tf_example_decoder_test",
            "object_detection.eval",
            "object_detection.eval_util",
            "object_detection.evaluator",
            "object_detection.export_inference_graph",
            "object_detection.exporter",
            "object_detection.exporter_test",
            "object_detection.matchers",
            "object_detection.matchers.argmax_matcher",
            "object_detection.matchers.argmax_matcher_test",
            "object_detection.matchers.bipartite_matcher",
            "object_detection.matchers.bipartite_matcher_test",
            "object_detection.meta_architectures",
            "object_detection.meta_architectures.faster_rcnn_meta_arch",
            "object_detection.meta_architectures.faster_rcnn_meta_arch_test",
            "object_detection.meta_architectures.faster_rcnn_meta_arch_test_lib",
            "object_detection.meta_architectures.rfcn_meta_arch",
            "object_detection.meta_architectures.rfcn_meta_arch_test",
            "object_detection.meta_architectures.ssd_meta_arch",
            "object_detection.meta_architectures.ssd_meta_arch_test",
            "object_detection.models",
            "object_detection.models.faster_rcnn_inception_resnet_v2_feature_extractor",
            "object_detection.models.faster_rcnn_inception_resnet_v2_feature_extractor_test",
            "object_detection.models.faster_rcnn_resnet_v1_feature_extractor",
            "object_detection.models.faster_rcnn_resnet_v1_feature_extractor_test",
            "object_detection.models.feature_map_generators",
            "object_detection.models.feature_map_generators_test",
            "object_detection.models.ssd_feature_extractor_test",
            "object_detection.models.ssd_inception_v2_feature_extractor",
            "object_detection.models.ssd_inception_v2_feature_extractor_test",
            "object_detection.models.ssd_mobilenet_v1_feature_extractor",
            "object_detection.models.ssd_mobilenet_v1_feature_extractor_test",
            "object_detection.protos",
            "object_detection.protos.anchor_generator_pb2",
            "object_detection.protos.argmax_matcher_pb2",
            "object_detection.protos.bipartite_matcher_pb2",
            "object_detection.protos.box_coder_pb2",
            "object_detection.protos.box_predictor_pb2",
            "object_detection.protos.eval_pb2",
            "object_detection.protos.faster_rcnn_box_coder_pb2",
            "object_detection.protos.faster_rcnn_pb2",
            "object_detection.protos.grid_anchor_generator_pb2",
            "object_detection.protos.hyperparams_pb2",
            "object_detection.protos.image_resizer_pb2",
            "object_detection.protos.input_reader_pb2",
            "object_detection.protos.losses_pb2",
            "object_detection.protos.matcher_pb2",
            "object_detection.protos.mean_stddev_box_coder_pb2",
            "object_detection.protos.model_pb2",
            "object_detection.protos.optimizer_pb2",
            "object_detection.protos.pipeline_pb2",
            "object_detection.protos.post_processing_pb2",
            "object_detection.protos.preprocessor_pb2",
            "object_detection.protos.region_similarity_calculator_pb2",
            "object_detection.protos.square_box_coder_pb2",
            "object_detection.protos.ssd_anchor_generator_pb2",
            "object_detection.protos.ssd_pb2",
            "object_detection.protos.string_int_label_map_pb2",
            "object_detection.protos.train_pb2",
            "object_detection.train",
            "object_detection.trainer",
            "object_detection.trainer_test",
            "object_detection.utils",
            "object_detection.utils.category_util",
            "object_detection.utils.category_util_test",
            "object_detection.utils.dataset_util",
            "object_detection.utils.dataset_util_test",
            "object_detection.utils.label_map_util",
            "object_detection.utils.label_map_util_test",
            "object_detection.utils.learning_schedules",
            "object_detection.utils.learning_schedules_test",
            "object_detection.utils.metrics",
            "object_detection.utils.metrics_test",
            "object_detection.utils.np_box_list",
            "object_detection.utils.np_box_list_ops",
            "object_detection.utils.np_box_list_ops_test",
            "object_detection.utils.np_box_list_test",
            "object_detection.utils.np_box_ops",
            "object_detection.utils.np_box_ops_test",
            "object_detection.utils.object_detection_evaluation",
            "object_detection.utils.object_detection_evaluation_test",
            "object_detection.utils.ops",
            "object_detection.utils.ops_test",
            "object_detection.utils.per_image_evaluation",
            "object_detection.utils.per_image_evaluation_test",
            "object_detection.utils.shape_utils",
            "object_detection.utils.shape_utils_test",
            "object_detection.utils.static_shape",
            "object_detection.utils.static_shape_test",
            "object_detection.utils.test_utils",
            "object_detection.utils.test_utils_test",
            "object_detection.utils.variables_helper",
            "object_detection.utils.variables_helper_test",
            "object_detection.utils.visualization_utils",
            "object_detection.utils.visualization_utils_test",
            "utils",
            "utils.category_util",
            "utils.category_util_test",
            "utils.dataset_util",
            "utils.dataset_util_test",
            "utils.label_map_util",
            "utils.label_map_util_test",
            "utils.learning_schedules",
            "utils.learning_schedules_test",
            "utils.metrics",
            "utils.metrics_test",
            "utils.np_box_list",
            "utils.np_box_list_ops",
            "utils.np_box_list_ops_test",
            "utils.np_box_list_test",
            "utils.np_box_ops",
            "utils.np_box_ops_test",
            "utils.object_detection_evaluation",
            "utils.object_detection_evaluation_test",
            "utils.ops",
            "utils.ops_test",
            "utils.per_image_evaluation",
            "utils.per_image_evaluation_test",
            "utils.shape_utils",
            "utils.shape_utils_test",
            "utils.static_shape",
            "utils.static_shape_test",
            "utils.test_utils",
            "utils.test_utils_test",
            "utils.variables_helper",
            "utils.variables_helper_test",
            "utils.visualization_utils",
            "utils.visualization_utils_test"
        ],
        "version": "0.0.0.2"
    },
    "hd-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "hd-training-exporter": {
        "cmdline": [
            "rasa_exporter"
        ],
        "modules": [
            "DataGenerator",
            "DataGenerator.DataGenerator"
        ],
        "version": "0.1"
    },
    "hd44780": {
        "cmdline": [],
        "modules": [
            "hd44780",
            "hd44780.backends",
            "hd44780.inputs",
            "hd44780.lcd",
            "hd44780.metadata",
            "hd44780.utils"
        ],
        "version": "1.1.2"
    },
    "hda": {
        "cmdline": [],
        "modules": [
            "hda",
            "hda.api"
        ],
        "version": "0.2.1"
    },
    "hdacpy": {
        "cmdline": [],
        "modules": [
            "hdacpy",
            "hdacpy.bip39_bip44_process",
            "hdacpy.exceptions",
            "hdacpy.transaction",
            "hdacpy.type",
            "hdacpy.typing",
            "hdacpy.wallet"
        ],
        "version": "0.5.5"
    },
    "hdao-python-sdk": {
        "cmdline": [],
        "modules": [
            "hdao",
            "hdao.hdao_cdc_op",
            "hdao.hdao_events",
            "hdao.hdao_price_feeder",
            "hdao.hx_wallet_api",
            "hdao.utils",
            "tests",
            "tests.config",
            "tests.hx_testnet",
            "tests.test_cdc_op",
            "tests.test_hdao_events",
            "tests.test_hx_wallet_api",
            "tests.test_price_feeder"
        ],
        "version": "1.0.1rc1"
    },
    "hdat": {
        "cmdline": [],
        "modules": [
            "hdat",
            "hdat.casespec",
            "hdat.hdat_cli",
            "hdat.main",
            "hdat.resultspec",
            "hdat.runner",
            "hdat.source_control",
            "hdat.store",
            "hdat.suite",
            "hdat.util"
        ],
        "version": "0.1.0"
    },
    "hdate": {
        "cmdline": [],
        "modules": [
            "hdate",
            "hdate.common",
            "hdate.converters",
            "hdate.date",
            "hdate.htables",
            "hdate.zmanim"
        ],
        "version": "0.9.11"
    },
    "hdbcli": {
        "cmdline": [],
        "modules": [
            "hdbcli",
            "hdbcli.dbapi",
            "hdbcli.resultrow"
        ],
        "version": "2.5.111"
    },
    "hdbscan": {
        "cmdline": [],
        "modules": [
            "hdbscan",
            "hdbscan.hdbscan_",
            "hdbscan.plots",
            "hdbscan.prediction",
            "hdbscan.robust_single_linkage_",
            "hdbscan.tests",
            "hdbscan.tests.test_hdbscan",
            "hdbscan.tests.test_rsl",
            "hdbscan.validity"
        ],
        "version": "0.8.26"
    },
    "hdbscan-with-cosine-distance": {
        "cmdline": [],
        "modules": [
            "hdbscan",
            "hdbscan.hdbscan_",
            "hdbscan.plots",
            "hdbscan.robust_single_linkage_",
            "hdbscan.tests",
            "hdbscan.tests.test_hdbscan",
            "hdbscan.tests.test_rsl"
        ],
        "version": "0.8.1"
    },
    "hdcb": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hdcorepy": {
        "cmdline": [],
        "modules": [
            "hdcorepy",
            "hdcorepy.Client"
        ],
        "version": "0.0.2"
    },
    "hdd-stat": {
        "cmdline": [
            "hdd-stat"
        ],
        "modules": [
            "hdd_stat",
            "hdd_stat.app",
            "hdd_stat.stat"
        ],
        "version": "1.2.0"
    },
    "hddfancontrol": {
        "cmdline": [],
        "modules": [
            "hddfancontrol",
            "hddfancontrol.bin_dep",
            "hddfancontrol.colored_logging"
        ],
        "version": "1.3.1"
    },
    "hddm": {
        "cmdline": [
            "hddm_demo.py"
        ],
        "modules": [
            "hddm",
            "hddm.MPLTraits",
            "hddm.MPLTraits_qt",
            "hddm.diag",
            "hddm.examples",
            "hddm.examples.plot_posterior_quantiles",
            "hddm.examples.simple_model",
            "hddm.generate",
            "hddm.likelihoods",
            "hddm.models",
            "hddm.models.base",
            "hddm.models.hddm_info",
            "hddm.models.hddm_regression",
            "hddm.models.hddm_rl",
            "hddm.models.hddm_rl_regression",
            "hddm.models.hddm_stimcoding",
            "hddm.models.hddm_transformed",
            "hddm.models.hddm_truncated",
            "hddm.models.rl",
            "hddm.tests",
            "hddm.tests.benchmark",
            "hddm.tests.matlab_values",
            "hddm.tests.test_generate",
            "hddm.tests.test_likelihoods",
            "hddm.tests.test_models",
            "hddm.tests.test_optimization",
            "hddm.utils"
        ],
        "version": "0.8.0"
    },
    "hddtemp": {
        "cmdline": [],
        "modules": [
            "hddtemp"
        ],
        "version": "0.1.0"
    },
    "hddtempnc": {
        "cmdline": [],
        "modules": [
            "hddtempnc",
            "hddtempnc.hddtempnc"
        ],
        "version": "1.3.0"
    },
    "hdeeprm": {
        "cmdline": [],
        "modules": [
            "hdeeprm",
            "hdeeprm.__meta__",
            "hdeeprm.__xml__",
            "hdeeprm.agent",
            "hdeeprm.cmd",
            "hdeeprm.entrypoints",
            "hdeeprm.entrypoints.BaseWorkloadManager",
            "hdeeprm.entrypoints.HDeepRMWorkloadManager",
            "hdeeprm.environment",
            "hdeeprm.manager",
            "hdeeprm.resource",
            "hdeeprm.util"
        ],
        "version": "0.3.1b1"
    },
    "hdf-compass": {
        "cmdline": [],
        "modules": [
            "hdf_compass",
            "hdf_compass.array_model",
            "hdf_compass.array_model.model",
            "hdf_compass.array_model.test",
            "hdf_compass.asc_model",
            "hdf_compass.asc_model.model",
            "hdf_compass.asc_model.test",
            "hdf_compass.bag_model",
            "hdf_compass.bag_model.model",
            "hdf_compass.bag_model.test",
            "hdf_compass.compass_model",
            "hdf_compass.compass_model.model",
            "hdf_compass.compass_model.test",
            "hdf_compass.compass_viewer",
            "hdf_compass.compass_viewer.array",
            "hdf_compass.compass_viewer.array.frame",
            "hdf_compass.compass_viewer.array.plot",
            "hdf_compass.compass_viewer.container",
            "hdf_compass.compass_viewer.container.frame",
            "hdf_compass.compass_viewer.container.list",
            "hdf_compass.compass_viewer.events",
            "hdf_compass.compass_viewer.frame",
            "hdf_compass.compass_viewer.geo_array",
            "hdf_compass.compass_viewer.geo_array.frame",
            "hdf_compass.compass_viewer.geo_array.plot",
            "hdf_compass.compass_viewer.geo_surface",
            "hdf_compass.compass_viewer.geo_surface.frame",
            "hdf_compass.compass_viewer.geo_surface.plot",
            "hdf_compass.compass_viewer.image",
            "hdf_compass.compass_viewer.image.frame",
            "hdf_compass.compass_viewer.info",
            "hdf_compass.compass_viewer.keyvalue",
            "hdf_compass.compass_viewer.keyvalue.frame",
            "hdf_compass.compass_viewer.text",
            "hdf_compass.compass_viewer.text.frame",
            "hdf_compass.compass_viewer.text.text_ctrl",
            "hdf_compass.compass_viewer.viewer",
            "hdf_compass.filesystem_model",
            "hdf_compass.filesystem_model.model",
            "hdf_compass.filesystem_model.test",
            "hdf_compass.hdf5_model",
            "hdf_compass.hdf5_model.model",
            "hdf_compass.hdf5_model.test",
            "hdf_compass.hdf5rest_model",
            "hdf_compass.hdf5rest_model.hdf5dtype",
            "hdf_compass.hdf5rest_model.model",
            "hdf_compass.hdf5rest_model.test",
            "hdf_compass.opendap_model",
            "hdf_compass.opendap_model.model",
            "hdf_compass.opendap_model.test",
            "hdf_compass.utils",
            "hdf_compass.utils.utils"
        ],
        "version": "0.6.0"
    },
    "hdf5-django": {
        "cmdline": [],
        "modules": [
            "h5dj",
            "h5dj.models",
            "h5dj.storage",
            "tests",
            "tests.h5dj_tests",
            "tests.h5dj_tests.tests",
            "tests.runtests",
            "tests.test_settings"
        ],
        "version": "0.1.2"
    },
    "hdf5-matlab-reader": {
        "cmdline": [],
        "modules": [
            "hdf5_matlab_reader",
            "hdf5_matlab_reader.empty_matrix",
            "hdf5_matlab_reader.matlab_reader",
            "hdf5_matlab_reader.tree_printer"
        ],
        "version": "0.1.2"
    },
    "hdf5-vds-check": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hdf5able": {
        "cmdline": [],
        "modules": [
            "hdf5able",
            "hdf5able._version",
            "hdf5able.base",
            "hdf5able.callable",
            "hdf5able.test",
            "hdf5able.test.testbasetypes",
            "hdf5able.test.testcallable",
            "hdf5able.test.testhdf5able"
        ],
        "version": "0.3.0"
    },
    "hdf5lazy": {
        "cmdline": [],
        "modules": [
            "hdf5lazy",
            "hdf5lazy.core"
        ],
        "version": "0.0.1"
    },
    "hdf5pickle": {
        "cmdline": [],
        "modules": [
            "hdf5pickle",
            "hdf5pickle.base"
        ],
        "version": "0.3"
    },
    "hdf5plugin": {
        "cmdline": [],
        "modules": [
            "hdf5plugin",
            "hdf5plugin.test"
        ],
        "version": "2.3.1"
    },
    "hdf5storage": {
        "cmdline": [],
        "modules": [
            "hdf5storage",
            "hdf5storage.Marshallers",
            "hdf5storage.lowlevel",
            "hdf5storage.utilities"
        ],
        "version": "0.1.15"
    },
    "hdf5widget": {
        "cmdline": [],
        "modules": [
            "hdf5widget",
            "hdf5widget.hdf5object",
            "hdf5widget.hdf5widget"
        ],
        "version": "0.1.0"
    },
    "hdface": {
        "cmdline": [],
        "modules": [
            "hdface",
            "hdface.hdface",
            "hdface.image_tools",
            "hdface.models",
            "hdface.utils"
        ],
        "version": "0.1.3"
    },
    "hdfconvert": {
        "cmdline": [],
        "modules": [
            "H5toImage"
        ],
        "version": "1.0.1"
    },
    "hdfdict": {
        "cmdline": [],
        "modules": [
            "hdfdict",
            "hdfdict.hdfdict"
        ],
        "version": "0.3.1"
    },
    "hdfe": {
        "cmdline": [],
        "modules": [
            "hdfe",
            "hdfe.groupby",
            "hdfe.hdfe",
            "hdfe.multicollinearity"
        ],
        "version": "0.0.4"
    },
    "hdfio": {
        "cmdline": [],
        "modules": [
            "hdfio",
            "hdfio.dict_io",
            "hdfio.json_io",
            "hdfio.mat_io"
        ],
        "version": "0.3.0"
    },
    "hdfk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hdflow": {
        "cmdline": [
            "csv2hdf"
        ],
        "modules": [
            "hdflow",
            "hdflow.converters",
            "hdflow.lanl_format"
        ],
        "version": "0.3"
    },
    "hdfqs": {
        "cmdline": [],
        "modules": [
            "hdfqs"
        ],
        "version": "1.1.0"
    },
    "hdfs": {
        "cmdline": [],
        "modules": [
            "hdfs",
            "hdfs.client",
            "hdfs.config",
            "hdfs.ext",
            "hdfs.ext.avro",
            "hdfs.ext.dataframe",
            "hdfs.ext.kerberos",
            "hdfs.util"
        ],
        "version": "2.5.8"
    },
    "hdfs-lmdc": {
        "cmdline": [],
        "modules": [
            "hdfs_lmdc.HDFSWrapperBase",
            "hdfs_lmdc.HDFSWrapperJava",
            "hdfs_lmdc.demo",
            "hdfs_lmdc.hdfs"
        ],
        "version": "2.0.5"
    },
    "hdfs-pycompss": {
        "cmdline": [],
        "modules": [
            "hdfspycompss",
            "hdfspycompss.block",
            "hdfspycompss.hdfs",
            "hdfspycompss.utils"
        ],
        "version": "0.4"
    },
    "hdfs-to-clickhouse": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hdfs3": {
        "cmdline": [],
        "modules": [
            "hdfs3",
            "hdfs3._pyarrow",
            "hdfs3._version",
            "hdfs3.compatibility",
            "hdfs3.conf",
            "hdfs3.core",
            "hdfs3.dask",
            "hdfs3.lib",
            "hdfs3.mapping",
            "hdfs3.utils"
        ],
        "version": "0.3.1"
    },
    "hdfsbrowser": {
        "cmdline": [],
        "modules": [
            "hdfsbrowser",
            "hdfsbrowser._version",
            "hdfsbrowser.serverextension"
        ],
        "version": "1.0.0"
    },
    "hdfscontents": {
        "cmdline": [],
        "modules": [
            "hdfscontents",
            "hdfscontents.hdfscheckpoints",
            "hdfscontents.hdfsio",
            "hdfscontents.hdfsmanager",
            "tests",
            "tests.runall"
        ],
        "version": "0.7"
    },
    "hdfuse": {
        "cmdline": [],
        "modules": [
            "hdfuse",
            "hdfuse.hdfuse"
        ],
        "version": "1.0.2"
    },
    "hdfviewer": {
        "cmdline": [],
        "modules": [
            "hdfviewer",
            "hdfviewer.viewers",
            "hdfviewer.viewers.MplDataViewer",
            "hdfviewer.viewers.MplDataViewer1D",
            "hdfviewer.viewers.MplDataViewer2D",
            "hdfviewer.viewers.MplDataViewer3D",
            "hdfviewer.widgets",
            "hdfviewer.widgets.HDFViewer",
            "hdfviewer.widgets.MplOutput",
            "hdfviewer.widgets.PathSelector"
        ],
        "version": "0.11.0"
    },
    "hdfwriter": {
        "cmdline": [],
        "modules": [
            "hdfwriter",
            "hdfwriter.hdfwriter"
        ],
        "version": "0.1.4"
    },
    "hdgfrom": {
        "cmdline": [],
        "modules": [
            "hdgfrom",
            "hdgfrom.adapters",
            "hdgfrom.cli",
            "hdgfrom.errors",
            "hdgfrom.flow"
        ],
        "version": "0.3.0"
    },
    "hdhomerun": {
        "cmdline": [],
        "modules": [
            "hdhomerun",
            "hdhomerun.hdhomerun"
        ],
        "version": "0.2"
    },
    "hdhomerun-recorder": {
        "cmdline": [
            "hdhomerun_recorder",
            "hdhomerun_recorder_setup"
        ],
        "modules": [
            "hdhomerun_recorder",
            "hdhomerun_recorder.recorder",
            "hdhomerun_recorder.setup"
        ],
        "version": "0.1.0"
    },
    "hdhr": {
        "cmdline": [],
        "modules": [
            "hdhr",
            "hdhr.adapter",
            "hdhr.adapter_types",
            "hdhr.constants",
            "hdhr.externals",
            "hdhr.libhdhr",
            "hdhr.log_config",
            "hdhr.types",
            "hdhr.utility"
        ],
        "version": "0.0.8"
    },
    "hdhr-disk-space-monitor": {
        "cmdline": [],
        "modules": [
            "hdhr_disk_space_monitor",
            "hdhr_disk_space_monitor.__about__",
            "hdhr_disk_space_monitor.core",
            "hdhr_disk_space_monitor.hdhr",
            "hdhr_disk_space_monitor.hdhr.crc32c",
            "hdhr_disk_space_monitor.hdhr.devices",
            "hdhr_disk_space_monitor.hdhr.errors",
            "hdhr_disk_space_monitor.hdhr.netif",
            "hdhr_disk_space_monitor.hdhr.netif.getifaddrs",
            "hdhr_disk_space_monitor.hdhr.netif.ipconfig",
            "hdhr_disk_space_monitor.hdhr.recordings",
            "tests",
            "tests.test_hdhr_monitor_disk_space"
        ],
        "version": "2.0.0"
    },
    "hdhrhttpapi": {
        "cmdline": [],
        "modules": [
            "hdhrhttpapi"
        ],
        "version": "0.0.1"
    },
    "hdidx": {
        "cmdline": [
            "hdidx_build",
            "hdidx_index",
            "test_cext.py",
            "test_indexer.py"
        ],
        "modules": [
            "hdidx",
            "hdidx.distance",
            "hdidx.encoder",
            "hdidx.encoder.pq",
            "hdidx.encoder.sh",
            "hdidx.indexer",
            "hdidx.indexer.hamming",
            "hdidx.indexer.vq",
            "hdidx.storage",
            "hdidx.storage.lmdb_storage",
            "hdidx.storage.mem_storage",
            "hdidx.util"
        ],
        "version": "0.2.8.2"
    },
    "hdijupyterutils": {
        "cmdline": [],
        "modules": [
            "hdijupyterutils",
            "hdijupyterutils.configuration",
            "hdijupyterutils.constants",
            "hdijupyterutils.events",
            "hdijupyterutils.eventshandler",
            "hdijupyterutils.filehandler",
            "hdijupyterutils.filesystemreaderwriter",
            "hdijupyterutils.guid",
            "hdijupyterutils.ipythondisplay",
            "hdijupyterutils.ipywidgetfactory",
            "hdijupyterutils.log",
            "hdijupyterutils.utils"
        ],
        "version": "0.16.0"
    },
    "hdijupyterutils3": {
        "cmdline": [],
        "modules": [
            "hdijupyterutils",
            "hdijupyterutils.configuration",
            "hdijupyterutils.constants",
            "hdijupyterutils.events",
            "hdijupyterutils.eventshandler",
            "hdijupyterutils.filehandler",
            "hdijupyterutils.filesystemreaderwriter",
            "hdijupyterutils.guid",
            "hdijupyterutils.ipythondisplay",
            "hdijupyterutils.ipywidgetfactory",
            "hdijupyterutils.log",
            "hdijupyterutils.utils"
        ],
        "version": "0.12.11"
    },
    "hdim": {
        "cmdline": [],
        "modules": [
            "hdim",
            "hdim.hdim"
        ],
        "version": "0.1.4"
    },
    "hdintegrator": {
        "cmdline": [
            "N-sphere.py",
            "cell.py",
            "hdintegrator.py",
            "ndgrid.py"
        ],
        "modules": [],
        "version": "1.0.1"
    },
    "hdir": {
        "cmdline": [],
        "modules": [
            "hdir"
        ],
        "version": "0.5"
    },
    "hdk-pkg-cri": {
        "cmdline": [],
        "modules": [
            "hdk_pkg",
            "hdk_pkg.backtest",
            "hdk_pkg.backtest.func_Momentum",
            "hdk_pkg.backtest.func_Status",
            "hdk_pkg.critest",
            "hdk_pkg.plotting",
            "hdk_pkg.plotting.func_plot_type1",
            "hdk_pkg.process",
            "hdk_pkg.process.func_1min2day",
            "hdk_pkg.process.func_BarCount",
            "hdk_pkg.process.func_BarHA",
            "hdk_pkg.process.func_BarPS",
            "hdk_pkg.process.func_ChangeGranularity",
            "hdk_pkg.process.func_WVF",
            "hdk_pkg.sampledata",
            "hdk_pkg.sampledata.data"
        ],
        "version": "0.0.8"
    },
    "hdk-pkg-critest": {
        "cmdline": [],
        "modules": [
            "hdk_pkg",
            "hdk_pkg.critest"
        ],
        "version": "1.0.1"
    },
    "hdkey": {
        "cmdline": [],
        "modules": [
            "riemann_keys",
            "riemann_keys.base58",
            "riemann_keys.bip39",
            "riemann_keys.data",
            "riemann_keys.data.english",
            "riemann_keys.hdkey",
            "riemann_keys.tests",
            "riemann_keys.tests.bip39_test_vectors",
            "riemann_keys.tests.test_bip39",
            "riemann_keys.tests.test_hdkey",
            "riemann_keys.utils"
        ],
        "version": "0.1.1"
    },
    "hdl": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hdl-checker": {
        "cmdline": [],
        "modules": [
            "hdl_checker",
            "hdl_checker._version",
            "hdl_checker.base_server",
            "hdl_checker.builder_utils",
            "hdl_checker.builders",
            "hdl_checker.builders.base_builder",
            "hdl_checker.builders.fallback",
            "hdl_checker.builders.ghdl",
            "hdl_checker.builders.msim",
            "hdl_checker.builders.xvhdl",
            "hdl_checker.config_generators",
            "hdl_checker.config_generators.base_generator",
            "hdl_checker.config_generators.simple_finder",
            "hdl_checker.database",
            "hdl_checker.diagnostics",
            "hdl_checker.exceptions",
            "hdl_checker.handlers",
            "hdl_checker.lsp",
            "hdl_checker.parser_utils",
            "hdl_checker.parsers",
            "hdl_checker.parsers.base_parser",
            "hdl_checker.parsers.config_parser",
            "hdl_checker.parsers.elements",
            "hdl_checker.parsers.elements.dependency_spec",
            "hdl_checker.parsers.elements.design_unit",
            "hdl_checker.parsers.elements.identifier",
            "hdl_checker.parsers.elements.parsed_element",
            "hdl_checker.parsers.verilog_parser",
            "hdl_checker.parsers.vhdl_parser",
            "hdl_checker.path",
            "hdl_checker.serialization",
            "hdl_checker.server",
            "hdl_checker.static_check",
            "hdl_checker.tests",
            "hdl_checker.tests.test_base_server",
            "hdl_checker.tests.test_builder_utils",
            "hdl_checker.tests.test_builders",
            "hdl_checker.tests.test_config_generator",
            "hdl_checker.tests.test_config_parser",
            "hdl_checker.tests.test_database",
            "hdl_checker.tests.test_lsp",
            "hdl_checker.tests.test_misc",
            "hdl_checker.tests.test_parser_utils",
            "hdl_checker.tests.test_server",
            "hdl_checker.tests.test_server_handlers",
            "hdl_checker.tests.test_static_check",
            "hdl_checker.tests.test_verilog_parser",
            "hdl_checker.tests.test_vhdl_parser",
            "hdl_checker.types",
            "hdl_checker.utils"
        ],
        "version": "0.6.14"
    },
    "hdlcomposer": {
        "cmdline": [
            "ghdl_cli"
        ],
        "modules": [
            "hdlcomposer",
            "hdlcomposer.signals",
            "hdlcomposer.signals.signals",
            "hdlcomposer.sim",
            "hdlcomposer.sim.ghdl",
            "hdlcomposer.sim.ghdl.ghdl",
            "hdlcomposer.sim.ghdl.parse",
            "hdlcomposer.utils",
            "hdlcomposer.utils.general",
            "hdlcomposer.vcd",
            "hdlcomposer.vcd.parse",
            "hdlcomposer.vcd.utils",
            "hdlcomposer.verilog",
            "hdlcomposer.vhdl",
            "hdlcomposer.vhdl.units",
            "hdlcomposer.vhdl.utils"
        ],
        "version": "0.32"
    },
    "hdlcontroller": {
        "cmdline": [
            "hdlc_test"
        ],
        "modules": [
            "hdlcontroller",
            "hdlcontroller.hdlcontroller",
            "hdlcontroller.version",
            "test",
            "test.test"
        ],
        "version": "0.4.1"
    },
    "hdlconvertor": {
        "cmdline": [],
        "modules": [
            "hdlConvertor"
        ],
        "version": "2.1"
    },
    "hdlconvertorast": {
        "cmdline": [],
        "modules": [
            "hdlConvertorAst",
            "hdlConvertorAst.hdlAst",
            "hdlConvertorAst.hdlAst._bases",
            "hdlConvertorAst.hdlAst._defs",
            "hdlConvertorAst.hdlAst._expr",
            "hdlConvertorAst.hdlAst._statements",
            "hdlConvertorAst.hdlAst._structural",
            "hdlConvertorAst.hdlAst._typeDefs",
            "hdlConvertorAst.hdlAst.utils",
            "hdlConvertorAst.language",
            "hdlConvertorAst.parse_hdlConvertor_json",
            "hdlConvertorAst.py_ver_compatibility",
            "hdlConvertorAst.to",
            "hdlConvertorAst.to.basic_hdl_sim_model",
            "hdlConvertorAst.to.basic_hdl_sim_model._main",
            "hdlConvertorAst.to.basic_hdl_sim_model.expr",
            "hdlConvertorAst.to.basic_hdl_sim_model.keywords",
            "hdlConvertorAst.to.basic_hdl_sim_model.stm",
            "hdlConvertorAst.to.basic_hdl_sim_model.utils",
            "hdlConvertorAst.to.common",
            "hdlConvertorAst.to.hdlUtils",
            "hdlConvertorAst.to.hdl_ast_visitor",
            "hdlConvertorAst.to.hwt",
            "hdlConvertorAst.to.hwt._main",
            "hdlConvertorAst.to.hwt.expr",
            "hdlConvertorAst.to.hwt.keywords",
            "hdlConvertorAst.to.hwt.stm",
            "hdlConvertorAst.to.hwt.utils",
            "hdlConvertorAst.to.json",
            "hdlConvertorAst.to.json_debug",
            "hdlConvertorAst.to.systemc",
            "hdlConvertorAst.to.systemc._main",
            "hdlConvertorAst.to.systemc.expr",
            "hdlConvertorAst.to.systemc.keywords",
            "hdlConvertorAst.to.systemc.stm",
            "hdlConvertorAst.to.verilog",
            "hdlConvertorAst.to.verilog.constants",
            "hdlConvertorAst.to.verilog.expr",
            "hdlConvertorAst.to.verilog.keywords",
            "hdlConvertorAst.to.verilog.stm",
            "hdlConvertorAst.to.verilog.utils",
            "hdlConvertorAst.to.verilog.verilog2005",
            "hdlConvertorAst.to.vhdl",
            "hdlConvertorAst.to.vhdl.expr",
            "hdlConvertorAst.to.vhdl.keywords",
            "hdlConvertorAst.to.vhdl.stm",
            "hdlConvertorAst.to.vhdl.vhdl2008",
            "hdlConvertorAst.translate",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.add_unique_labels_to_all_processes",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.apply_io_scope_to_signal_names",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.assignment_to_update_assignment",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.discover_stm_outputs",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.elifs_to_if_then_else",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.utils",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.verilog_operands_to_basic_hdl_sim_model",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.verilog_types_to_basic_hdl_sim_model",
            "hdlConvertorAst.translate._verilog_to_basic_hdl_sim_model.wrap_module_statements_to_processes",
            "hdlConvertorAst.translate._verilog_to_hwt",
            "hdlConvertorAst.translate._verilog_to_hwt.verilog_types_to_hwt",
            "hdlConvertorAst.translate._verilog_to_vhdl",
            "hdlConvertorAst.translate._verilog_to_vhdl.inject_process_sens_to_statements",
            "hdlConvertorAst.translate.common",
            "hdlConvertorAst.translate.common.discover_declarations",
            "hdlConvertorAst.translate.common.name_scope",
            "hdlConvertorAst.translate.common.resolve_names",
            "hdlConvertorAst.translate.verilog_to_basic_hdl_sim_model",
            "hdlConvertorAst.translate.verilog_to_hwt",
            "hdlConvertorAst.translate.vhdl_to_verilog"
        ],
        "version": "0.5"
    },
    "hdllib": {
        "cmdline": [],
        "modules": [
            "HdlLib",
            "HdlLib.Drawing",
            "HdlLib.EvalResources",
            "HdlLib.GUIGeneric",
            "HdlLib.Graphics",
            "HdlLib.SysGen",
            "HdlLib.SysGen.Assignment",
            "HdlLib.SysGen.Condition",
            "HdlLib.SysGen.Constraints",
            "HdlLib.SysGen.FiniteStateMachine",
            "HdlLib.SysGen.FpgaOperations",
            "HdlLib.SysGen.HDLEditor",
            "HdlLib.SysGen.HW",
            "HdlLib.SysGen.HW.HwConstraints",
            "HdlLib.SysGen.HW.HwLib",
            "HdlLib.SysGen.HW.HwModel",
            "HdlLib.SysGen.HW.HwResources",
            "HdlLib.SysGen.Interface",
            "HdlLib.SysGen.LibEditor",
            "HdlLib.SysGen.Module",
            "HdlLib.SysGen.PackageBuilder",
            "HdlLib.SysGen.Protocol",
            "HdlLib.SysGen.Service",
            "HdlLib.SysGen.Signal",
            "HdlLib.SysGen.Simulation",
            "HdlLib.SysGen.Verify",
            "HdlLib.SysGen.XmlLibManager",
            "HdlLib.TBGen",
            "HdlLib.Utilities",
            "HdlLib.Utilities.BugManager",
            "HdlLib.Utilities.ColoredLogging",
            "HdlLib.Utilities.ConsoleInterface",
            "HdlLib.Utilities.DataMining",
            "HdlLib.Utilities.DesignTree",
            "HdlLib.Utilities.ErrorHandlers",
            "HdlLib.Utilities.ExtensionSilence",
            "HdlLib.Utilities.GUITools",
            "HdlLib.Utilities.HtmlTextView",
            "HdlLib.Utilities.Misc",
            "HdlLib.Utilities.PlotViewer",
            "HdlLib.Utilities.RemoteOperations",
            "HdlLib.Utilities.SafeRun",
            "HdlLib.Utilities.Threads",
            "HdlLib.Utilities.Timer",
            "HdlLib.Utilities.UserConfig",
            "HdlLib.VHDLParser"
        ],
        "version": "0.1.1"
    },
    "hdlmake": {
        "cmdline": [],
        "modules": [
            "hdlmake",
            "hdlmake._version",
            "hdlmake.action",
            "hdlmake.action.action",
            "hdlmake.action.commands",
            "hdlmake.action.tree",
            "hdlmake.fetch",
            "hdlmake.fetch.fetcher",
            "hdlmake.fetch.git",
            "hdlmake.fetch.local",
            "hdlmake.fetch.svn",
            "hdlmake.main",
            "hdlmake.manifest_parser",
            "hdlmake.manifest_parser.configparser",
            "hdlmake.manifest_parser.manifestparser",
            "hdlmake.module",
            "hdlmake.module.module",
            "hdlmake.sourcefiles",
            "hdlmake.sourcefiles.dep_file",
            "hdlmake.sourcefiles.new_dep_solver",
            "hdlmake.sourcefiles.sourcefileset",
            "hdlmake.sourcefiles.srcfile",
            "hdlmake.sourcefiles.vhdl_parser",
            "hdlmake.sourcefiles.vlog_parser",
            "hdlmake.sourcefiles.xci_parser",
            "hdlmake.tools",
            "hdlmake.tools.active_hdl",
            "hdlmake.tools.diamond",
            "hdlmake.tools.ghdl",
            "hdlmake.tools.icestorm",
            "hdlmake.tools.ise",
            "hdlmake.tools.isim",
            "hdlmake.tools.iverilog",
            "hdlmake.tools.libero",
            "hdlmake.tools.load_tool",
            "hdlmake.tools.makefile",
            "hdlmake.tools.makefilesim",
            "hdlmake.tools.makefilesyn",
            "hdlmake.tools.makefilevsim",
            "hdlmake.tools.modelsim",
            "hdlmake.tools.planahead",
            "hdlmake.tools.quartus",
            "hdlmake.tools.riviera",
            "hdlmake.tools.vivado",
            "hdlmake.tools.vivado_sim",
            "hdlmake.tools.xilinx",
            "hdlmake.util",
            "hdlmake.util.path",
            "hdlmake.util.shell",
            "hdlmake.util.termcolor"
        ],
        "version": "3.3"
    },
    "hdlparse": {
        "cmdline": [],
        "modules": [
            "hdlparse",
            "hdlparse.minilexer",
            "hdlparse.verilog_parser",
            "hdlparse.vhdl_parser"
        ],
        "version": "1.0.4"
    },
    "hdltex": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.5"
    },
    "hdltypes": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hdm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hdmedians": {
        "cmdline": [],
        "modules": [
            "hdmedians",
            "hdmedians.medoid",
            "hdmedians.tests",
            "hdmedians.tests.test_geomedian",
            "hdmedians.tests.test_medoid"
        ],
        "version": "0.14.1"
    },
    "hdmf": {
        "cmdline": [],
        "modules": [
            "hdmf",
            "hdmf._version",
            "hdmf.array",
            "hdmf.backends",
            "hdmf.backends.hdf5",
            "hdmf.backends.hdf5.h5_utils",
            "hdmf.backends.hdf5.h5tools",
            "hdmf.backends.io",
            "hdmf.backends.warnings",
            "hdmf.build",
            "hdmf.build.builders",
            "hdmf.build.errors",
            "hdmf.build.manager",
            "hdmf.build.map",
            "hdmf.build.objectmapper",
            "hdmf.build.warnings",
            "hdmf.common",
            "hdmf.common.io",
            "hdmf.common.io.table",
            "hdmf.common.sparse",
            "hdmf.common.table",
            "hdmf.container",
            "hdmf.data_utils",
            "hdmf.monitor",
            "hdmf.query",
            "hdmf.region",
            "hdmf.spec",
            "hdmf.spec.catalog",
            "hdmf.spec.namespace",
            "hdmf.spec.spec",
            "hdmf.spec.write",
            "hdmf.testing",
            "hdmf.testing.testcase",
            "hdmf.testing.validate_spec",
            "hdmf.utils",
            "hdmf.validate",
            "hdmf.validate.errors",
            "hdmf.validate.validator"
        ],
        "version": "2.2.0"
    },
    "hdmf-docutils": {
        "cmdline": [],
        "modules": [
            "hdmf_docutils",
            "hdmf_docutils._version",
            "hdmf_docutils.doctools",
            "hdmf_docutils.doctools.output",
            "hdmf_docutils.doctools.render",
            "hdmf_docutils.doctools.renderrst",
            "hdmf_docutils.doctools.rst",
            "hdmf_docutils.generate_format_docs",
            "hdmf_docutils.init_sphinx_extension_doc",
            "hdmf_docutils.sg_prototype"
        ],
        "version": "0.4.1"
    },
    "hdmi2usb-modeswitch": {
        "cmdline": [],
        "modules": [
            "hdmi2usb",
            "hdmi2usb.modeswitch",
            "hdmi2usb.modeswitch._version",
            "hdmi2usb.modeswitch.base",
            "hdmi2usb.modeswitch.boards",
            "hdmi2usb.modeswitch.cli",
            "hdmi2usb.modeswitch.files",
            "hdmi2usb.modeswitch.libusb",
            "hdmi2usb.modeswitch.lsusb",
            "hdmi2usb.modeswitch.tests"
        ],
        "version": "0.0.1"
    },
    "hdnester": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hdob": {
        "cmdline": [],
        "modules": [
            "hdob",
            "hdob.hdob"
        ],
        "version": "0.0.9"
    },
    "hdose": {
        "cmdline": [
            "hdose"
        ],
        "modules": [
            "harmonize",
            "harmonize.create_exposure_outcome_table",
            "harmonize.flip_swap",
            "harmonize.harmonize",
            "harmonize.vcf_to_dosage",
            "harmonize.version"
        ],
        "version": "0.0.4"
    },
    "hdp": {
        "cmdline": [],
        "modules": [
            "hdp"
        ],
        "version": "0.3"
    },
    "hdpitkinter": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.3"
    },
    "hdproc": {
        "cmdline": [],
        "modules": [
            "hdproc",
            "hdproc.HDP",
            "hdproc.text_prep"
        ],
        "version": "0.38"
    },
    "hdptest": {
        "cmdline": [],
        "modules": [
            "hdptest",
            "hdptest.hdptest"
        ],
        "version": "0.7"
    },
    "hdpwordseg": {
        "cmdline": [
            "hdpwordseg"
        ],
        "modules": [
            "hdp",
            "hdp.hdpwordseg",
            "hdp.ngram",
            "hdp.prob",
            "hdp.strdist",
            "hdp.topicdist",
            "hdp.topicngram",
            "hdp.wordseg"
        ],
        "version": "1.1.9"
    },
    "hdpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hdql": {
        "cmdline": [],
        "modules": [
            "hdql"
        ],
        "version": "0.0.1"
    },
    "hdr-plot": {
        "cmdline": [],
        "modules": [
            "hdr_plot",
            "hdr_plot.hdr_plot"
        ],
        "version": "0.2.0"
    },
    "hdrhistogram": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.0"
    },
    "hdrpy": {
        "cmdline": [],
        "modules": [
            "hdrpy"
        ],
        "version": "0.3.3"
    },
    "hdrstats": {
        "cmdline": [],
        "modules": [
            "hdrstats",
            "hdrstats.cli",
            "hdrstats.hdrstats",
            "hdrstats.image"
        ],
        "version": "0.1.7"
    },
    "hds-821pr": {
        "cmdline": [],
        "modules": [
            "hds_821pr",
            "hds_821pr.ascii",
            "hds_821pr.dicts",
            "hds_821pr.hex"
        ],
        "version": "0.0.1"
    },
    "hdsident": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hdsubnetfinder": {
        "cmdline": [],
        "modules": [
            "hdsubnetfinder",
            "hdsubnetfinder.kernel",
            "hdsubnetfinder.kernel.kernel",
            "hdsubnetfinder.kernel.kernel_generator",
            "hdsubnetfinder.kernel.kernel_util",
            "hdsubnetfinder.subnetwork",
            "hdsubnetfinder.subnetwork.network_util",
            "hdsubnetfinder.subnetwork.sub_network_finder",
            "tests",
            "tests.resource",
            "tests.test_kernel",
            "tests.test_kernel_generator",
            "tests.test_network_util",
            "tests.test_sub_network_finder"
        ],
        "version": "0.2.2"
    },
    "hdt": {
        "cmdline": [],
        "modules": [],
        "version": "2.3"
    },
    "hdtable": {
        "cmdline": [],
        "modules": [
            "hdtable",
            "hdtable.hdtable",
            "hdtable.sphinx_ext",
            "hdtable.utils",
            "tests",
            "tests.test_column"
        ],
        "version": "0.1a5"
    },
    "hdtgraph": {
        "cmdline": [],
        "modules": [
            "hdtgraph",
            "hdtgraph.DoublyLinkedList",
            "hdtgraph.DynamicGraph",
            "hdtgraph.ETTree",
            "hdtgraph.Tree"
        ],
        "version": "0.0.1"
    },
    "hdtools": {
        "cmdline": [],
        "modules": [
            "hdtools",
            "hdtools.address",
            "hdtools.bech32",
            "hdtools.conversions",
            "hdtools.crypto_utils",
            "hdtools.extended_keys",
            "hdtools.keys",
            "hdtools.message",
            "hdtools.network",
            "hdtools.nt_utils",
            "hdtools.opcodes",
            "hdtools.script",
            "hdtools.tests"
        ],
        "version": "0.1.5"
    },
    "hdtv": {
        "cmdline": [
            "hdtv"
        ],
        "modules": [
            "hdtv",
            "hdtv._version",
            "hdtv.cal",
            "hdtv.calc",
            "hdtv.cmdline",
            "hdtv.color",
            "hdtv.corrgroup",
            "hdtv.cut",
            "hdtv.database",
            "hdtv.database.DDEPLibraries",
            "hdtv.database.IAEALibraries",
            "hdtv.database.PGAALibraries",
            "hdtv.database.common",
            "hdtv.drawable",
            "hdtv.efficiency",
            "hdtv.efficiency.efficiency",
            "hdtv.efficiency.exp",
            "hdtv.efficiency.polyeff",
            "hdtv.efficiency.pow",
            "hdtv.efficiency.wiedenhoever",
            "hdtv.efficiency.wunder",
            "hdtv.fit",
            "hdtv.fitpanel",
            "hdtv.fitter",
            "hdtv.fitxml",
            "hdtv.histogram",
            "hdtv.integral",
            "hdtv.marker",
            "hdtv.matrix",
            "hdtv.options",
            "hdtv.peakmodels",
            "hdtv.peakmodels.eePeak",
            "hdtv.peakmodels.peak",
            "hdtv.peakmodels.theuerkaufPeak",
            "hdtv.physics",
            "hdtv.physics.nuclear",
            "hdtv.physics.pgaa",
            "hdtv.plugins",
            "hdtv.plugins.EnergyCalibration",
            "hdtv.plugins.calInterface",
            "hdtv.plugins.config",
            "hdtv.plugins.dblookup",
            "hdtv.plugins.fitInterface",
            "hdtv.plugins.fitlist",
            "hdtv.plugins.fitmap",
            "hdtv.plugins.fittex",
            "hdtv.plugins.ls",
            "hdtv.plugins.matInterface",
            "hdtv.plugins.peakfinder",
            "hdtv.plugins.printing",
            "hdtv.plugins.rootInterface",
            "hdtv.plugins.run",
            "hdtv.plugins.specInterface",
            "hdtv.plugins.textInterface",
            "hdtv.rfile_utils",
            "hdtv.rootext",
            "hdtv.rootext.display",
            "hdtv.rootext.dlmgr",
            "hdtv.rootext.fit",
            "hdtv.rootext.mfile",
            "hdtv.session",
            "hdtv.specreader",
            "hdtv.spectrum",
            "hdtv.tabformat",
            "hdtv.ui",
            "hdtv.util",
            "hdtv.weakref",
            "hdtv.window"
        ],
        "version": "20.4.1"
    },
    "hdu": {
        "cmdline": [],
        "modules": [
            "hdu",
            "hdu._version",
            "hdu.hdu"
        ],
        "version": "0.2.3.12"
    },
    "hdu-api": {
        "cmdline": [],
        "modules": [
            "hdu_api",
            "hdu_api._internal_utils",
            "hdu_api._pyDes",
            "hdu_api.api",
            "hdu_api.config",
            "hdu_api.exceptions",
            "hdu_api.models",
            "hdu_api.sessions"
        ],
        "version": "0.1.0"
    },
    "hdv-dummy": {
        "cmdline": [],
        "modules": [
            "hdv_dummy",
            "hdv_dummy.dummy"
        ],
        "version": "0.0.2"
    },
    "hdv-emails": {
        "cmdline": [],
        "modules": [
            "hdv_emails",
            "hdv_emails.mail"
        ],
        "version": "0.0.1"
    },
    "hdv-handyman": {
        "cmdline": [],
        "modules": [
            "hdv_handyman",
            "hdv_handyman.classhelper",
            "hdv_handyman.converters",
            "hdv_handyman.filters",
            "hdv_handyman.utils",
            "hdv_handyman.validators"
        ],
        "version": "0.1.0"
    },
    "hdv-logging": {
        "cmdline": [],
        "modules": [
            "hdv_logging",
            "hdv_logging.filter",
            "hdv_logging.logger"
        ],
        "version": "0.1.1"
    },
    "hdv-ncddns": {
        "cmdline": [],
        "modules": [
            "hdv_ncddns",
            "hdv_ncddns.update"
        ],
        "version": "0.0.1"
    },
    "hdv-pyrun": {
        "cmdline": [],
        "modules": [
            "hdv_pyrun",
            "hdv_pyrun.api"
        ],
        "version": "0.1.1"
    },
    "hdv-scalr": {
        "cmdline": [],
        "modules": [
            "hdv_scalr",
            "hdv_scalr.api",
            "hdv_scalr.cli",
            "hdv_scalr.utils"
        ],
        "version": "0.1.0"
    },
    "hdv-sqlalchemywrapper": {
        "cmdline": [],
        "modules": [
            "hdv_sqlalchemywrapper",
            "hdv_sqlalchemywrapper.wrapper"
        ],
        "version": "0.0.5"
    },
    "hdwallet": {
        "cmdline": [],
        "modules": [
            "hdwallet",
            "hdwallet.base58",
            "hdwallet.bip32_test_vector",
            "hdwallet.curves",
            "hdwallet.hdwallet"
        ],
        "version": "0.3"
    },
    "hdwallets": {
        "cmdline": [],
        "modules": [
            "hdwallets",
            "hdwallets._bip32",
            "hdwallets._utils"
        ],
        "version": "0.1.1"
    },
    "hdx-data-freshness": {
        "cmdline": [],
        "modules": [
            "hdx",
            "hdx.freshness",
            "hdx.freshness.database",
            "hdx.freshness.database.dbdataset",
            "hdx.freshness.database.dbinfodataset",
            "hdx.freshness.database.dborganization",
            "hdx.freshness.database.dbresource",
            "hdx.freshness.database.dbrun",
            "hdx.freshness.datafreshness",
            "hdx.freshness.ratelimiter",
            "hdx.freshness.retrieval",
            "hdx.freshness.retry",
            "hdx.freshness.testdata",
            "hdx.freshness.testdata.dbtestdataset",
            "hdx.freshness.testdata.dbtestdate",
            "hdx.freshness.testdata.dbtesthashresult",
            "hdx.freshness.testdata.dbtestresource",
            "hdx.freshness.testdata.dbtestresult",
            "hdx.freshness.testdata.serialize",
            "hdx.freshness.version"
        ],
        "version": "1.5.8"
    },
    "hdx-data-freshness-emailer": {
        "cmdline": [],
        "modules": [
            "hdx",
            "hdx.freshness",
            "hdx.freshness.emailer",
            "hdx.freshness.emailer.databasequeries",
            "hdx.freshness.emailer.datafreshnessstatus",
            "hdx.freshness.emailer.datasethelper",
            "hdx.freshness.emailer.freshnessemail",
            "hdx.freshness.emailer.sheet",
            "hdx.freshness.emailer.version"
        ],
        "version": "1.4.7"
    },
    "hdx-python-api": {
        "cmdline": [],
        "modules": [
            "hdx",
            "hdx.data",
            "hdx.data.dataset",
            "hdx.data.dataset_title_helper",
            "hdx.data.filestore_helper",
            "hdx.data.hdxobject",
            "hdx.data.organization",
            "hdx.data.resource",
            "hdx.data.resource_matcher",
            "hdx.data.resource_view",
            "hdx.data.showcase",
            "hdx.data.user",
            "hdx.data.vocabulary",
            "hdx.facades",
            "hdx.facades.keyword_arguments",
            "hdx.facades.simple",
            "hdx.hdx_configuration",
            "hdx.hdx_locations",
            "hdx.version"
        ],
        "version": "4.6.5"
    },
    "hdx-python-country": {
        "cmdline": [],
        "modules": [
            "hdx",
            "hdx.location",
            "hdx.location.country",
            "hdx.location.version"
        ],
        "version": "2.6.1"
    },
    "hdx-python-utilities": {
        "cmdline": [],
        "modules": [
            "hdx",
            "hdx.utilities",
            "hdx.utilities.compare",
            "hdx.utilities.database",
            "hdx.utilities.dateparse",
            "hdx.utilities.dictandlist",
            "hdx.utilities.downloader",
            "hdx.utilities.easy_logging",
            "hdx.utilities.email",
            "hdx.utilities.encoding",
            "hdx.utilities.html",
            "hdx.utilities.loader",
            "hdx.utilities.path",
            "hdx.utilities.saver",
            "hdx.utilities.session",
            "hdx.utilities.text",
            "hdx.utilities.useragent",
            "hdx.utilities.version"
        ],
        "version": "2.4.0"
    },
    "hdx-scraper-geonode": {
        "cmdline": [],
        "modules": [
            "hdx",
            "hdx.scraper",
            "hdx.scraper.geonode",
            "hdx.scraper.geonode.geonodetohdx",
            "hdx.scraper.geonode.version"
        ],
        "version": "1.3.5"
    },
    "hdxpop": {
        "cmdline": [],
        "modules": [
            "hdxpop",
            "hdxpop.hdxpop"
        ],
        "version": "0.0.3"
    },
    "hdxpythoncountry": {
        "cmdline": [],
        "modules": [
            "hdxpythoncountry",
            "hdxpythoncountry.cli"
        ],
        "version": "0.1.1"
    },
    "hdxpythonutilities": {
        "cmdline": [],
        "modules": [
            "hdxpythonutilities",
            "hdxpythonutilities.cli"
        ],
        "version": "0.1.1"
    },
    "hdy-pypi-test": {
        "cmdline": [],
        "modules": [
            "hdy_pypi_test"
        ],
        "version": "1.1.0"
    },
    "hdytools": {
        "cmdline": [],
        "modules": [
            "hdytools",
            "hdytools.basic",
            "hdytools.ml_lib"
        ],
        "version": "0.4"
    },
    "he": {
        "cmdline": [],
        "modules": [
            "he",
            "he.contexts",
            "he.data",
            "he.decorators",
            "he.file_tools",
            "he.handlers",
            "he.http_tools",
            "he.other"
        ],
        "version": "2019.3"
    },
    "he-sdk-python": {
        "cmdline": [],
        "modules": [
            "hackerearth",
            "hackerearth.api_handlers",
            "hackerearth.parameters",
            "hackerearth.result",
            "hackerearth.settings",
            "hackerearth.test_api"
        ],
        "version": "0.3"
    },
    "he-update": {
        "cmdline": [],
        "modules": [
            "he_update"
        ],
        "version": "1.1"
    },
    "head": {
        "cmdline": [],
        "modules": [
            "Head"
        ],
        "version": "1.0.0"
    },
    "head-controller": {
        "cmdline": [],
        "modules": [
            "head_controller",
            "head_controller.Camera",
            "head_controller.Features",
            "head_controller.Model",
            "head_controller.capture_features",
            "head_controller.db",
            "head_controller.init_db",
            "head_controller.predict_gesture",
            "head_controller.tests"
        ],
        "version": "1.1.2"
    },
    "head-first": {
        "cmdline": [],
        "modules": [
            "head_first"
        ],
        "version": "1.4.1"
    },
    "head-first-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "head-first-python-upload-test": {
        "cmdline": [],
        "modules": [
            "test"
        ],
        "version": "1.0.0"
    },
    "head-firstpy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "head-pose": {
        "cmdline": [],
        "modules": [
            "head_pose",
            "head_pose.face",
            "head_pose.head_pose_estimator",
            "head_pose.model_loader",
            "head_pose.utils"
        ],
        "version": "0.0.4"
    },
    "headcache": {
        "cmdline": [],
        "modules": [
            "headcache",
            "headcache.file_watcher",
            "headcache.headcache",
            "headcache.md_parser",
            "headcache.search",
            "headcache.ui_components"
        ],
        "version": "0.1.2"
    },
    "header": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "header-app": {
        "cmdline": [],
        "modules": [
            "header.functions"
        ],
        "version": "1.0.2"
    },
    "header-detail-footer": {
        "cmdline": [],
        "modules": [],
        "version": "2.4"
    },
    "header2whatever": {
        "cmdline": [],
        "modules": [
            "header2whatever",
            "header2whatever.config",
            "header2whatever.default_hooks",
            "header2whatever.parse",
            "header2whatever.preprocess",
            "header2whatever.util",
            "header2whatever.version",
            "header2whatever/_pcpp",
            "header2whatever/_pcpp.evaluator",
            "header2whatever/_pcpp.preprocessor",
            "header2whatever/_pcpp/ply/ply",
            "header2whatever/_pcpp/ply/ply.cpp",
            "header2whatever/_pcpp/ply/ply.ctokens",
            "header2whatever/_pcpp/ply/ply.lex",
            "header2whatever/_pcpp/ply/ply.yacc",
            "header2whatever/_pcpp/ply/ply.ygen"
        ],
        "version": "0.4.2"
    },
    "headercop": {
        "cmdline": [],
        "modules": [
            "headercop",
            "headercop.cli",
            "headercop.headercop"
        ],
        "version": "0.1.1"
    },
    "headercount": {
        "cmdline": [],
        "modules": [
            "headercount",
            "headercount.files",
            "headercount.includes"
        ],
        "version": "1.0.0"
    },
    "headerindexer": {
        "cmdline": [],
        "modules": [
            "headerindexer",
            "headerindexer._hi_objects",
            "headerindexer._hi_objects.data_obj",
            "headerindexer._hi_objects.data_obj._errors",
            "headerindexer._hi_objects.data_obj._workings",
            "headerindexer._hi_objects.pycolims_0_2_0",
            "headerindexer._hi_objects.pycolims_0_2_0.menus",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.Menu_Factory",
            "headerindexer._hi_objects.pycolims_0_2_0.menus._base_menu_template",
            "headerindexer._hi_objects.pycolims_0_2_0.menus._menu_engine",
            "headerindexer._hi_objects.pycolims_0_2_0.menus._menu_multi",
            "headerindexer._hi_objects.pycolims_0_2_0.menus._menu_single",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.data",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.data._command",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.data._pages",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.data._terminal",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.data._work",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.data.customtypes",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.data.customtypes._cremental_list",
            "headerindexer._hi_objects.pycolims_0_2_0.menus.data.data_factory"
        ],
        "version": "0.1.5"
    },
    "headerparser": {
        "cmdline": [],
        "modules": [
            "headerparser",
            "headerparser.errors",
            "headerparser.normdict",
            "headerparser.parser",
            "headerparser.scanner",
            "headerparser.types",
            "headerparser.util"
        ],
        "version": "0.4.0"
    },
    "headers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "headers-workaround": {
        "cmdline": [],
        "modules": [
            "headers_workaround"
        ],
        "version": "0.18"
    },
    "headersformatter": {
        "cmdline": [],
        "modules": [
            "HeadersFormatter",
            "HeadersFormatter.HeadersFormatter"
        ],
        "version": "0.0.2"
    },
    "headerstodict": {
        "cmdline": [],
        "modules": [
            "HeadersToDict",
            "HeadersToDict.HeadersToDict"
        ],
        "version": "1.0.6"
    },
    "headerz": {
        "cmdline": [],
        "modules": [
            "headerz"
        ],
        "version": "0.3"
    },
    "headfirst4": {
        "cmdline": [],
        "modules": [
            "headfirst4"
        ],
        "version": "1.0.0"
    },
    "headfirstex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "headfirstpython": {
        "cmdline": [],
        "modules": [
            "HeadFirstPython",
            "HeadFirstPython.al_test",
            "HeadFirstPython.di_gui_diao_yong"
        ],
        "version": "0.0.1"
    },
    "headfirsttest1": {
        "cmdline": [],
        "modules": [
            "HeadFirstTest1"
        ],
        "version": "1.2.0"
    },
    "headgen": {
        "cmdline": [],
        "modules": [
            "headgen",
            "headgen.controller",
            "headgen.file_filter",
            "headgen.file_worker",
            "headgen.helper_visitor",
            "headgen.key_parser",
            "headgen.maker",
            "headgen.run",
            "headgen.string_worker",
            "headgen.visitor"
        ],
        "version": "2.3.4"
    },
    "headhorn": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "headhunter": {
        "cmdline": [],
        "modules": [
            "headhunter",
            "headhunter.manager",
            "headhunter.runner"
        ],
        "version": "0.0.1"
    },
    "headintheclouds": {
        "cmdline": [],
        "modules": [
            "headintheclouds",
            "headintheclouds.boot2docker",
            "headintheclouds.cache",
            "headintheclouds.dependencies",
            "headintheclouds.dependencies.PyDbLite",
            "headintheclouds.dependencies.PyDbLite.MySQL",
            "headintheclouds.dependencies.PyDbLite.PyDbLite",
            "headintheclouds.dependencies.PyDbLite.PyDbLiteConv",
            "headintheclouds.dependencies.PyDbLite.PyDbLite_SQL",
            "headintheclouds.dependencies.PyDbLite.PyDbLite_conversions",
            "headintheclouds.dependencies.PyDbLite.SQLite",
            "headintheclouds.docker",
            "headintheclouds.ec2",
            "headintheclouds.ensemble",
            "headintheclouds.ensemble.container",
            "headintheclouds.ensemble.create",
            "headintheclouds.ensemble.dependency",
            "headintheclouds.ensemble.dependencygraph",
            "headintheclouds.ensemble.exceptions",
            "headintheclouds.ensemble.firewall",
            "headintheclouds.ensemble.parse",
            "headintheclouds.ensemble.remote",
            "headintheclouds.ensemble.server",
            "headintheclouds.ensemble.tasks",
            "headintheclouds.ensemble.thing",
            "headintheclouds.ensemble.thingindex",
            "headintheclouds.firewall",
            "headintheclouds.gcp",
            "headintheclouds.tasks",
            "headintheclouds.unmanaged",
            "headintheclouds.util"
        ],
        "version": "0.8.3"
    },
    "headit": {
        "cmdline": [],
        "modules": [
            "headit"
        ],
        "version": "1.0.0"
    },
    "headjack": {
        "cmdline": [],
        "modules": [
            "headjack",
            "headjack.__version__",
            "headjack.archiver",
            "headjack.archiver.devonthink",
            "headjack.archiver.docs",
            "headjack.archiver.marvin",
            "headjack.archiver.papers",
            "headjack.archiver.tests",
            "headjack.archiver.tests.test_devonthink",
            "headjack.archiver.tests.test_docs",
            "headjack.archiver.tests.test_marvin",
            "headjack.archiver.tests.test_papers",
            "headjack.archiver.tests.tmp",
            "headjack.cl_utils",
            "headjack.commonutils",
            "headjack.commonutils.getpackagepath",
            "headjack.read",
            "headjack.read.convertKindleNB",
            "headjack.read.generate_web_article_epubs",
            "headjack.read.sendToKindle",
            "headjack.read.tests",
            "headjack.read.tests.test_convertKindleNB",
            "headjack.read.tests.test_generate_web_article_epubs",
            "headjack.read.tests.test_sendToKindle",
            "headjack.tests",
            "headjack.utKit"
        ],
        "version": "0.8.6"
    },
    "headless-pdfkit": {
        "cmdline": [],
        "modules": [
            "headless_pdfkit"
        ],
        "version": "0.1.5"
    },
    "headlesspdfkit": {
        "cmdline": [],
        "modules": [
            "headlesspdfkit",
            "headlesspdfkit.cli"
        ],
        "version": "0.1.1"
    },
    "headlessplot": {
        "cmdline": [],
        "modules": [
            "plot"
        ],
        "version": "1.0.2"
    },
    "headlessvim": {
        "cmdline": [],
        "modules": [
            "headlessvim",
            "headlessvim._version",
            "headlessvim.arguments",
            "headlessvim.process",
            "headlessvim.runtimepath"
        ],
        "version": "0.0.5"
    },
    "headliner": {
        "cmdline": [],
        "modules": [
            "headliner",
            "headliner.attention_plot",
            "headliner.callbacks",
            "headliner.callbacks.evaluation_callback",
            "headliner.callbacks.model_checkpoint_callback",
            "headliner.callbacks.tensorboard_callback",
            "headliner.callbacks.validation_callback",
            "headliner.clean_training_runner",
            "headliner.embeddings",
            "headliner.evaluation",
            "headliner.evaluation.bleu_scorer",
            "headliner.evaluation.scorer",
            "headliner.losses",
            "headliner.model",
            "headliner.model.attention_model",
            "headliner.model.attention_summarizer",
            "headliner.model.basic_model",
            "headliner.model.basic_summarizer",
            "headliner.model.bert_model",
            "headliner.model.bert_summarizer",
            "headliner.model.summarizer",
            "headliner.model.transformer_model",
            "headliner.model.transformer_summarizer",
            "headliner.model.transformer_util",
            "headliner.prediction_runner",
            "headliner.preprocessing",
            "headliner.preprocessing.bert_preprocessor",
            "headliner.preprocessing.bert_vectorizer",
            "headliner.preprocessing.bucket_generator",
            "headliner.preprocessing.dataset_generator",
            "headliner.preprocessing.keras_tokenizer",
            "headliner.preprocessing.preprocessor",
            "headliner.preprocessing.tokenizer",
            "headliner.preprocessing.vectorizer",
            "headliner.trainer",
            "headliner.training_runner",
            "headliner.training_runner_test",
            "headliner.utils",
            "headliner.utils.logger"
        ],
        "version": "1.0.2"
    },
    "headlines": {
        "cmdline": [],
        "modules": [
            "headlines"
        ],
        "version": "0.0.3"
    },
    "headlock": {
        "cmdline": [],
        "modules": [
            "headlock",
            "headlock.address_space",
            "headlock.address_space.inprocess",
            "headlock.address_space.virtual",
            "headlock.bridge_gen",
            "headlock.buildsys_drvs",
            "headlock.buildsys_drvs.default",
            "headlock.buildsys_drvs.gcc",
            "headlock.buildsys_drvs.mingw",
            "headlock.buildsys_drvs.test_buildsys_drvs",
            "headlock.c_data_model",
            "headlock.c_data_model.array",
            "headlock.c_data_model.core",
            "headlock.c_data_model.enum",
            "headlock.c_data_model.float",
            "headlock.c_data_model.funcpointer",
            "headlock.c_data_model.function",
            "headlock.c_data_model.integer",
            "headlock.c_data_model.memory_access",
            "headlock.c_data_model.pointer",
            "headlock.c_data_model.struct",
            "headlock.c_data_model.union",
            "headlock.c_data_model.vector",
            "headlock.c_data_model.void",
            "headlock.c_parser",
            "headlock.integrations.pytest",
            "headlock.integrations.pytest.common",
            "headlock.integrations.pytest.debug_failed",
            "headlock.integrations.pytest.plugin_headlock_debug",
            "headlock.integrations.pytest.plugin_headlock_report",
            "headlock.libclang",
            "headlock.libclang.cindex",
            "headlock.libclang.enumerations",
            "headlock.testsetup"
        ],
        "version": "0.5.0"
    },
    "headnode-notifier": {
        "cmdline": [],
        "modules": [],
        "version": "1.5.4"
    },
    "headphones": {
        "cmdline": [],
        "modules": [
            "headphones"
        ],
        "version": "0.0.0"
    },
    "headspin-cli": {
        "cmdline": [],
        "modules": [
            "headspin_cli",
            "headspin_cli.api",
            "headspin_cli.cli",
            "headspin_cli.config",
            "headspin_cli.connect_method",
            "headspin_cli.version"
        ],
        "version": "0.4.3"
    },
    "headstock": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "headsup": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "healer": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6.dev4"
    },
    "healing-scattering-image": {
        "cmdline": [],
        "modules": [
            "healing_scattering_image",
            "healing_scattering_image._version",
            "healing_scattering_image.example_test",
            "healing_scattering_image.heal_scatter_image",
            "healing_scattering_image.oneD_intensity",
            "healing_scattering_image.tests",
            "healing_scattering_image.tests.conftest",
            "healing_scattering_image.tests.test_examples"
        ],
        "version": "0.1.1"
    },
    "healpix-alchemy": {
        "cmdline": [],
        "modules": [
            "healpix_alchemy",
            "healpix_alchemy.math",
            "healpix_alchemy.point",
            "healpix_alchemy.tests",
            "healpix_alchemy.tests.conftest",
            "healpix_alchemy.tests.test_math",
            "healpix_alchemy.tests.test_point"
        ],
        "version": "0.1.2"
    },
    "healpixmap": {
        "cmdline": [],
        "modules": [
            "HealpixMap",
            "HealpixMap._version",
            "HealpixMap.containers",
            "HealpixMap.containers.healpix_base",
            "HealpixMap.containers.healpix_map",
            "HealpixMap.pixelfunc",
            "HealpixMap.pixelfunc.moc",
            "HealpixMap.pixelfunc.single"
        ],
        "version": "0.1.6"
    },
    "healpy": {
        "cmdline": [
            "healpy_get_wmap_maps.sh"
        ],
        "modules": [
            "healpy",
            "healpy.cookbook",
            "healpy.fitsfunc",
            "healpy.newvisufunc",
            "healpy.pixelfunc",
            "healpy.projaxes",
            "healpy.projector",
            "healpy.rotator",
            "healpy.sphtfunc",
            "healpy.test",
            "healpy.test.conftest",
            "healpy.test.test_fitsfunc",
            "healpy.test.test_line_integral_convolution",
            "healpy.test.test_pixelfunc",
            "healpy.test.test_pixelweights",
            "healpy.test.test_query_disc",
            "healpy.test.test_rotator",
            "healpy.test.test_sphtfunc",
            "healpy.test.test_spinfunc",
            "healpy.test.test_visufunc",
            "healpy.version",
            "healpy.visufunc",
            "healpy.zoomtool"
        ],
        "version": "1.14.0"
    },
    "healsparse": {
        "cmdline": [],
        "modules": [
            "healsparse",
            "healsparse._version",
            "healsparse.cat_healsparse_files",
            "healsparse.fits_shim",
            "healsparse.geom",
            "healsparse.healSparseCoverage",
            "healsparse.healSparseMap",
            "healsparse.healSparseRandoms",
            "healsparse.operations",
            "healsparse.utils"
        ],
        "version": "1.2.2"
    },
    "health": {
        "cmdline": [],
        "modules": [
            "health",
            "health.c2v",
            "health.codes",
            "health.utils"
        ],
        "version": "1.4"
    },
    "health-check": {
        "cmdline": [],
        "modules": [
            "health_check",
            "health_check.api",
            "health_check.api.mixins",
            "health_check.api.urls",
            "health_check.api.views",
            "health_check.apps",
            "health_check.commands",
            "health_check.management",
            "health_check.management.commands",
            "health_check.management.commands.health_check",
            "health_check.management.commands.status",
            "health_check.providers",
            "health_check.providers.base",
            "health_check.providers.celery",
            "health_check.providers.celery.health",
            "health_check.providers.celery.stats",
            "health_check.providers.django",
            "health_check.providers.django.health",
            "health_check.providers.django.stats",
            "health_check.providers.health",
            "health_check.providers.stats",
            "health_check.settings",
            "health_check.urls",
            "health_check.utils"
        ],
        "version": "3.4.1"
    },
    "health-checker": {
        "cmdline": [],
        "modules": [
            "healthchecker",
            "healthchecker.async_checker",
            "healthchecker.checker"
        ],
        "version": "0.2.0"
    },
    "health-monitoring-plugins": {
        "cmdline": [
            "check_jenkins_api.py",
            "check_local_cpu_temperature.py",
            "check_meinberg_ntp.py",
            "check_microwavemodem.py",
            "check_moxa_6000.py",
            "check_newtecmodem.py",
            "check_snmp_apc_ups.py",
            "check_snmp_cambium_ptp700.py",
            "check_snmp_eaton_ups.py",
            "check_snmp_eps_plus.py",
            "check_snmp_fortinet.py",
            "check_snmp_idrac.py",
            "check_snmp_ilo4.py",
            "check_snmp_inradios_csm.py",
            "check_snmp_janitza.py",
            "check_snmp_large_storage.py",
            "check_snmp_lband.py",
            "check_snmp_port.py",
            "check_snmp_procurve.py",
            "check_snmp_raritan.py",
            "check_snmp_service.py",
            "check_snmp_teledyne.py",
            "check_snmp_time2.py",
            "check_snmp_trusted_filter.py",
            "check_snmp_ubiquiti.py",
            "snmpSessionBaseClass.py"
        ],
        "modules": [
            "health_monitoring_plugins",
            "health_monitoring_plugins.cambium",
            "health_monitoring_plugins.eaton",
            "health_monitoring_plugins.eps_plus",
            "health_monitoring_plugins.idrac",
            "health_monitoring_plugins.ilo",
            "health_monitoring_plugins.inradios_csm",
            "health_monitoring_plugins.ipport",
            "health_monitoring_plugins.meinberg",
            "health_monitoring_plugins.microwavemodem",
            "health_monitoring_plugins.newtecmodem",
            "health_monitoring_plugins.procurve",
            "health_monitoring_plugins.raritan",
            "health_monitoring_plugins.snmpSessionBaseClass",
            "health_monitoring_plugins.storage",
            "health_monitoring_plugins.timesource",
            "health_monitoring_plugins.trustedfilter",
            "health_monitoring_plugins.windowsservice"
        ],
        "version": "0.2.1"
    },
    "health-service": {
        "cmdline": [],
        "modules": [
            "health_service",
            "health_service.admin",
            "health_service.migrations",
            "health_service.migrations.0001_initial",
            "health_service.migrations.0002_auto_20170320_1024",
            "health_service.migrations.0003_update_area_related_name",
            "health_service.migrations.0004_catchment_areas_is_blankable",
            "health_service.models",
            "health_service.tests",
            "health_service.urls"
        ],
        "version": "1.3.4"
    },
    "health-tracking": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "healthbip": {
        "cmdline": [],
        "modules": [
            "healthbip",
            "healthbip.middleware",
            "healthbip.urls",
            "healthbip.views"
        ],
        "version": "0.1.1"
    },
    "healthcareai": {
        "cmdline": [],
        "modules": [
            "healthcareai",
            "healthcareai.advanced_supvervised_model_trainer",
            "healthcareai.common",
            "healthcareai.common.azure_blob_storage_helper",
            "healthcareai.common.catalyst_sqlite_db_fixtures",
            "healthcareai.common.csv_loader",
            "healthcareai.common.database_connections",
            "healthcareai.common.database_library_validators",
            "healthcareai.common.database_validators",
            "healthcareai.common.database_writers",
            "healthcareai.common.feature_availability_profiler",
            "healthcareai.common.file_io_utilities",
            "healthcareai.common.filters",
            "healthcareai.common.get_categorical_levels",
            "healthcareai.common.healthcareai_error",
            "healthcareai.common.helpers",
            "healthcareai.common.impact_coding",
            "healthcareai.common.model_eval",
            "healthcareai.common.predict",
            "healthcareai.common.randomized_search",
            "healthcareai.common.table_archiver",
            "healthcareai.common.top_factors",
            "healthcareai.common.transformers",
            "healthcareai.datasets",
            "healthcareai.datasets.base",
            "healthcareai.pipelines",
            "healthcareai.pipelines.data_preparation",
            "healthcareai.supervised_model_trainer",
            "healthcareai.tests",
            "healthcareai.tests.helpers",
            "healthcareai.tests.test_advanced_trainer",
            "healthcareai.tests.test_categorical_levels",
            "healthcareai.tests.test_csv_loader",
            "healthcareai.tests.test_database_validation",
            "healthcareai.tests.test_dataframe_filters",
            "healthcareai.tests.test_dataframe_transformers",
            "healthcareai.tests.test_feature_availability_profiler",
            "healthcareai.tests.test_file_utilities",
            "healthcareai.tests.test_impact_coding",
            "healthcareai.tests.test_model_eval",
            "healthcareai.tests.test_model_eval_helpers",
            "healthcareai.tests.test_predict",
            "healthcareai.tests.test_top_factors",
            "healthcareai.tests.test_trained_supervised_model",
            "healthcareai.tests.test_trainer",
            "healthcareai.trained_models",
            "healthcareai.trained_models.trained_supervised_model"
        ],
        "version": "1.0"
    },
    "healthcareai-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "healthcheck": {
        "cmdline": [],
        "modules": [
            "healthcheck",
            "tests",
            "tests.test_unit",
            "tests.test_unit.test_healthcheck"
        ],
        "version": "1.3.3"
    },
    "healthcheck-extended": {
        "cmdline": [],
        "modules": [
            "healthcheck_extended",
            "tests",
            "tests.unit",
            "tests.unit.test_healthcheck"
        ],
        "version": "1.3.4"
    },
    "healthcheckbot": {
        "cmdline": [],
        "modules": [
            "healthcheckbot",
            "healthcheckbot.app",
            "healthcheckbot.assertions",
            "healthcheckbot.cli",
            "healthcheckbot.common",
            "healthcheckbot.common.bootstrap",
            "healthcheckbot.common.core",
            "healthcheckbot.common.error",
            "healthcheckbot.common.evaluator",
            "healthcheckbot.common.model",
            "healthcheckbot.common.utils",
            "healthcheckbot.common.validators",
            "healthcheckbot.contrib",
            "healthcheckbot.contrib.celery",
            "healthcheckbot.contrib.celery.redis",
            "healthcheckbot.contrib.postgres",
            "healthcheckbot.outputs",
            "healthcheckbot.triggers",
            "healthcheckbot.version",
            "healthcheckbot.watchers"
        ],
        "version": "0.3.3"
    },
    "healthchecker": {
        "cmdline": [],
        "modules": [
            "healthchecker",
            "healthchecker.core",
            "healthchecker.objects",
            "healthchecker.settings",
            "healthchecker.tests",
            "healthchecker.tests.tests_cli",
            "healthchecker.tests.tests_core",
            "healthchecker.tests.tests_main",
            "healthchecker.tests.tests_objects",
            "healthchecker.tests.tests_utils",
            "healthchecker.utils"
        ],
        "version": "1.1.1"
    },
    "healthchecks-manager": {
        "cmdline": [],
        "modules": [
            "healthchecks_manager",
            "healthchecks_manager.healthchecks_api_wrapper",
            "healthchecks_manager.manager",
            "tests",
            "tests.test_ahealthchecks"
        ],
        "version": "0.1.4"
    },
    "healthdes": {
        "cmdline": [],
        "modules": [
            "healthdes",
            "healthdes.ActivityBase",
            "healthdes.Check",
            "healthdes.DataCollection",
            "healthdes.DecisionBase",
            "healthdes.PersonBase",
            "healthdes.ResourceBase",
            "healthdes.Routing"
        ],
        "version": "0.0.2"
    },
    "healthgraph-api": {
        "cmdline": [],
        "modules": [
            "healthgraph",
            "healthgraph.authmgr",
            "healthgraph.content_type",
            "healthgraph.exceptions",
            "healthgraph.parser",
            "healthgraph.resources",
            "healthgraph.sessionmgr",
            "healthgraph.settings"
        ],
        "version": "0.3.0"
    },
    "healthkit-to-sqlite": {
        "cmdline": [],
        "modules": [
            "healthkit_to_sqlite",
            "healthkit_to_sqlite.cli",
            "healthkit_to_sqlite.utils"
        ],
        "version": "0.5"
    },
    "healthos": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "healthpy": {
        "cmdline": [],
        "modules": [
            "healthpy",
            "healthpy._http",
            "healthpy._response",
            "healthpy._status",
            "healthpy.flask_restx",
            "healthpy.http",
            "healthpy.httpx",
            "healthpy.redis",
            "healthpy.requests",
            "healthpy.starlette",
            "healthpy.testing",
            "healthpy.version"
        ],
        "version": "1.12.0"
    },
    "healthupdates": {
        "cmdline": [],
        "modules": [
            "healthupdates",
            "healthupdates.test",
            "healthupdates.test.test_updater",
            "healthupdates.updates"
        ],
        "version": "0.1.2"
    },
    "healthy": {
        "cmdline": [],
        "modules": [
            "tests",
            "tests.test_healthy"
        ],
        "version": "0.1.2"
    },
    "healthy-cli": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "healthyhouse-api": {
        "cmdline": [],
        "modules": [
            "healthyhouse_api",
            "healthyhouse_api.healthyhouse_api",
            "healthyhouse_api.import_orders",
            "healthyhouse_api.import_results"
        ],
        "version": "0.3.0"
    },
    "healthywork": {
        "cmdline": [],
        "modules": [
            "healthywork",
            "healthywork.app",
            "healthywork.config"
        ],
        "version": "1.6.2"
    },
    "healtics": {
        "cmdline": [],
        "modules": [
            "healtics",
            "healtics.setup_matplotlib"
        ],
        "version": "1.1.3"
    },
    "heamon7-calc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heamon7-tushare": {
        "cmdline": [],
        "modules": [
            "tushare",
            "tushare.data",
            "tushare.datayes",
            "tushare.datayes.HKequity",
            "tushare.datayes.IV",
            "tushare.datayes.api",
            "tushare.datayes.bond",
            "tushare.datayes.equity",
            "tushare.datayes.fund",
            "tushare.datayes.fundamental",
            "tushare.datayes.future",
            "tushare.datayes.idx",
            "tushare.datayes.macro",
            "tushare.datayes.market",
            "tushare.datayes.master",
            "tushare.datayes.options",
            "tushare.datayes.subject",
            "tushare.fund",
            "tushare.fund.cons",
            "tushare.fund.nav",
            "tushare.futures",
            "tushare.futures.cons",
            "tushare.futures.intlfutures",
            "tushare.internet",
            "tushare.internet.boxoffice",
            "tushare.stock",
            "tushare.stock.billboard",
            "tushare.stock.classifying",
            "tushare.stock.cons",
            "tushare.stock.fundamental",
            "tushare.stock.globals",
            "tushare.stock.macro",
            "tushare.stock.macro_vars",
            "tushare.stock.news_vars",
            "tushare.stock.newsevent",
            "tushare.stock.ref_vars",
            "tushare.stock.reference",
            "tushare.stock.shibor",
            "tushare.stock.trading",
            "tushare.trader",
            "tushare.trader.trader",
            "tushare.trader.utils",
            "tushare.trader.vars",
            "tushare.util",
            "tushare.util.common",
            "tushare.util.dateu",
            "tushare.util.netbase",
            "tushare.util.store",
            "tushare.util.upass",
            "tushare.util.vars"
        ],
        "version": "0.1.0"
    },
    "heamy": {
        "cmdline": [],
        "modules": [
            "heamy",
            "heamy.cache",
            "heamy.dataset",
            "heamy.estimator",
            "heamy.feature",
            "heamy.pipeline",
            "heamy.utils",
            "heamy.utils.main",
            "heamy.utils.optimizer"
        ],
        "version": "0.0.7"
    },
    "heap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heapapi": {
        "cmdline": [],
        "modules": [
            "heapapi",
            "tests",
            "tests.test_init"
        ],
        "version": "0.0.3"
    },
    "heapdict": {
        "cmdline": [],
        "modules": [
            "heapdict"
        ],
        "version": "1.0.1"
    },
    "heapprof": {
        "cmdline": [],
        "modules": [
            "heapprof",
            "heapprof._flow_graph",
            "heapprof._si_prefix",
            "heapprof.flow_graph",
            "heapprof.lowlevel",
            "heapprof.reader",
            "heapprof.tests",
            "heapprof.tests.end_to_end_test",
            "heapprof.tests.si_prefix_test",
            "heapprof.types"
        ],
        "version": "1.0.2"
    },
    "heapq-max": {
        "cmdline": [],
        "modules": [
            "heapq_max",
            "heapq_max.heapq_max",
            "heapq_max.test"
        ],
        "version": "0.21"
    },
    "heaps": {
        "cmdline": [],
        "modules": [
            "heapy.heap"
        ],
        "version": "0.0.3"
    },
    "heapsy": {
        "cmdline": [],
        "modules": [
            "heapsy"
        ],
        "version": "0.0.2"
    },
    "heapy": {
        "cmdline": [],
        "modules": [
            "heapy",
            "heapy.pqueue",
            "heapy.util"
        ],
        "version": "0.6"
    },
    "hearkinator": {
        "cmdline": [],
        "modules": [
            "hearkinator",
            "hearkinator.akinator_bot"
        ],
        "version": "1.0"
    },
    "hearplanetapi": {
        "cmdline": [],
        "modules": [
            "hearplanet",
            "hearplanet.api",
            "hearplanet.check_version",
            "hearplanet.config",
            "hearplanet.query",
            "hearplanet.query.base",
            "hearplanet.query.read",
            "hearplanet.query.table",
            "hearplanet.query.utf8_pprint"
        ],
        "version": "0.1.1"
    },
    "hearsay-elasticmock": {
        "cmdline": [],
        "modules": [
            "elasticmock",
            "elasticmock.behaviour",
            "elasticmock.behaviour.server_failure",
            "elasticmock.fake_cluster",
            "elasticmock.fake_elasticsearch",
            "elasticmock.fake_indices",
            "elasticmock.utilities",
            "elasticmock.utilities.decorator",
            "tests",
            "tests.fake_cluster",
            "tests.fake_cluster.test_health",
            "tests.fake_elasticsearch",
            "tests.fake_elasticsearch.behaviour",
            "tests.fake_elasticsearch.behaviour.test_server_failure",
            "tests.fake_elasticsearch.test_bulk",
            "tests.fake_elasticsearch.test_count",
            "tests.fake_elasticsearch.test_delete",
            "tests.fake_elasticsearch.test_exists",
            "tests.fake_elasticsearch.test_get",
            "tests.fake_elasticsearch.test_index",
            "tests.fake_elasticsearch.test_info",
            "tests.fake_elasticsearch.test_instance",
            "tests.fake_elasticsearch.test_ping",
            "tests.fake_elasticsearch.test_scroll",
            "tests.fake_elasticsearch.test_search",
            "tests.fake_elasticsearch.test_suggest",
            "tests.fake_indices",
            "tests.fake_indices.test_create",
            "tests.fake_indices.test_delete",
            "tests.fake_indices.test_exists",
            "tests.fake_indices.test_refresh",
            "tests.tox_banner"
        ],
        "version": "2.1"
    },
    "hearstpatterns": {
        "cmdline": [],
        "modules": [
            "hearstPatterns",
            "hearstPatterns.hearstPatterns",
            "hearstPatterns.test",
            "hearstPatterns.test.test_hearstPatterns"
        ],
        "version": "0.1.3"
    },
    "heart": {
        "cmdline": [],
        "modules": [
            "heart",
            "heart.cli",
            "heart.heart"
        ],
        "version": "0.1.0"
    },
    "heartandsole": {
        "cmdline": [],
        "modules": [
            "heartandsole",
            "heartandsole.activity",
            "heartandsole.filereaders",
            "heartandsole.powerutils",
            "heartandsole.stressutils",
            "heartandsole.util"
        ],
        "version": "0.0.19"
    },
    "heartbank": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heartbeat": {
        "cmdline": [
            "heartbeat",
            "heartbeatd"
        ],
        "modules": [
            "hbeat",
            "hbeat.daemon",
            "hbeat.logging",
            "hbeat.logging.base",
            "hbeat.logging.instance",
            "hbeat.server"
        ],
        "version": "0.1.0"
    },
    "heartbeat-client": {
        "cmdline": [],
        "modules": [
            "heartbeat_client",
            "heartbeat_client.main"
        ],
        "version": "0.7.0"
    },
    "heartbeat-sh": {
        "cmdline": [],
        "modules": [
            "heartbeat_sh",
            "heartbeat_sh.heartbeat"
        ],
        "version": "0.0.3"
    },
    "heartbeatmaker": {
        "cmdline": [],
        "modules": [
            "HeartbeatMaker",
            "HeartbeatMaker.beater"
        ],
        "version": "0.9"
    },
    "heartbeatmonitor": {
        "cmdline": [],
        "modules": [
            "heartbeatmonitor",
            "heartbeatmonitor.heartbeat",
            "heartbeatmonitor.monitor"
        ],
        "version": "0.1a18"
    },
    "heartbridge": {
        "cmdline": [],
        "modules": [
            "heartbridge",
            "heartbridge.app",
            "heartbridge.heart",
            "heartbridge.server"
        ],
        "version": "1.0.0"
    },
    "heartcrm": {
        "cmdline": [],
        "modules": [
            "heartcrm",
            "heartcrm.cli",
            "heartcrm.conf",
            "heartcrm.heart"
        ],
        "version": "0.1.0"
    },
    "hearthsim-identity": {
        "cmdline": [],
        "modules": [],
        "version": "3.2.1"
    },
    "hearthsim-instrumentation": {
        "cmdline": [],
        "modules": [
            "instrumentation",
            "instrumentation.django_influxdb",
            "instrumentation.ssm"
        ],
        "version": "0.1.0"
    },
    "hearthstone": {
        "cmdline": [],
        "modules": [],
        "version": "5.25.0"
    },
    "hearthstone-card-generator": {
        "cmdline": [],
        "modules": [
            "hearthstone_card_generator",
            "hearthstone_card_generator.card_generator",
            "hearthstone_card_generator.card_generator_test",
            "hearthstone_card_generator.card_information_database",
            "hearthstone_card_generator.hearthstone_card"
        ],
        "version": "1.5"
    },
    "hearthstone-data": {
        "cmdline": [],
        "modules": [
            "hearthstone_data"
        ],
        "version": "60352.1"
    },
    "hearthstonearenalogwatcher": {
        "cmdline": [],
        "modules": [
            "hearthstonearenalogwatcher"
        ],
        "version": "0.1.1"
    },
    "hearthstonecarddetector": {
        "cmdline": [],
        "modules": [
            "hearthstonecarddetector"
        ],
        "version": "0.1.4"
    },
    "heartland": {
        "cmdline": [],
        "modules": [
            "heartland",
            "heartland.e3reader",
            "heartland.posgateway"
        ],
        "version": "0.1"
    },
    "heartmath": {
        "cmdline": [],
        "modules": [
            "heartmath"
        ],
        "version": "1.0.0"
    },
    "heartpole": {
        "cmdline": [],
        "modules": [
            "heartpole"
        ],
        "version": "1.1"
    },
    "heartpy": {
        "cmdline": [],
        "modules": [
            "heartpy",
            "heartpy.analysis",
            "heartpy.config",
            "heartpy.datautils",
            "heartpy.exceptions",
            "heartpy.filtering",
            "heartpy.heartpy",
            "heartpy.peakdetection",
            "heartpy.preprocessing",
            "heartpy.visualizeutils"
        ],
        "version": "1.2.6"
    },
    "heartrate": {
        "cmdline": [],
        "modules": [
            "heartrate",
            "heartrate.core",
            "heartrate.files"
        ],
        "version": "0.2.1"
    },
    "hearts": {
        "cmdline": [],
        "modules": [
            "hearts",
            "hearts.axis",
            "hearts.bars",
            "hearts.chart",
            "hearts.datatype",
            "hearts.dots",
            "hearts.grid",
            "hearts.line",
            "hearts.linear",
            "hearts.ordinal",
            "hearts.scale",
            "hearts.scoreticker",
            "hearts.scoretimeticker",
            "hearts.series",
            "hearts.svg",
            "hearts.temporal",
            "hearts.theme",
            "hearts.ticker",
            "hearts.utils"
        ],
        "version": "0.0.0"
    },
    "heartwave": {
        "cmdline": [],
        "modules": [
            "heartwave",
            "heartwave.app",
            "heartwave.conf",
            "heartwave.facetracker",
            "heartwave.person",
            "heartwave.plot",
            "heartwave.sceneanalyzer",
            "heartwave.util",
            "heartwave.videostream",
            "heartwave.widgets"
        ],
        "version": "0.9.1"
    },
    "heaspa": {
        "cmdline": [],
        "modules": [
            "heaspa"
        ],
        "version": "0.0.0"
    },
    "heat": {
        "cmdline": [],
        "modules": [
            "heat",
            "heat.classification",
            "heat.classification.knn",
            "heat.cluster",
            "heat.cluster._kcluster",
            "heat.cluster.kmeans",
            "heat.cluster.kmedians",
            "heat.cluster.kmedoids",
            "heat.cluster.spectral",
            "heat.core",
            "heat.core._operations",
            "heat.core.arithmetics",
            "heat.core.base",
            "heat.core.communication",
            "heat.core.constants",
            "heat.core.devices",
            "heat.core.dndarray",
            "heat.core.exponential",
            "heat.core.factories",
            "heat.core.indexing",
            "heat.core.io",
            "heat.core.linalg",
            "heat.core.linalg.basics",
            "heat.core.linalg.qr",
            "heat.core.linalg.solver",
            "heat.core.linalg.svd",
            "heat.core.logical",
            "heat.core.manipulations",
            "heat.core.memory",
            "heat.core.printing",
            "heat.core.random",
            "heat.core.relational",
            "heat.core.rounding",
            "heat.core.sanitation",
            "heat.core.statistics",
            "heat.core.stride_tricks",
            "heat.core.tiling",
            "heat.core.trigonometrics",
            "heat.core.types",
            "heat.core.version",
            "heat.graph",
            "heat.graph.laplacian",
            "heat.naive_bayes",
            "heat.naive_bayes.gaussianNB",
            "heat.regression",
            "heat.regression.lasso",
            "heat.spatial",
            "heat.spatial.distance",
            "heat.utils",
            "heat.utils.matrixgallery"
        ],
        "version": "0.5.0"
    },
    "heat-agents": {
        "cmdline": [],
        "modules": [],
        "version": "2.1.1"
    },
    "heat-cfntools": {
        "cmdline": [],
        "modules": [
            "heat_cfntools",
            "heat_cfntools.cfntools",
            "heat_cfntools.cfntools.cfn_helper",
            "heat_cfntools.tests",
            "heat_cfntools.tests.test_cfn_helper",
            "heat_cfntools.tests.test_cfn_hup"
        ],
        "version": "1.4.2"
    },
    "heat-dashboard": {
        "cmdline": [],
        "modules": [],
        "version": "3.0.1"
    },
    "heat-death": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "heat-index": {
        "cmdline": [],
        "modules": [
            "heat_index",
            "heat_index.calculate",
            "heat_index.coefficients"
        ],
        "version": "0.0.1"
    },
    "heat-index-calculator": {
        "cmdline": [],
        "modules": [
            "heat_index"
        ],
        "version": "2"
    },
    "heat-infoblox": {
        "cmdline": [],
        "modules": [
            "heat_infoblox",
            "heat_infoblox.config",
            "heat_infoblox.connector",
            "heat_infoblox.constants",
            "heat_infoblox.ibexceptions",
            "heat_infoblox.netmri_resource_mixin",
            "heat_infoblox.object_manipulator",
            "heat_infoblox.resource_utils",
            "heat_infoblox.resources",
            "heat_infoblox.resources.anycast_loopback",
            "heat_infoblox.resources.bgp",
            "heat_infoblox.resources.bgp_neighbor",
            "heat_infoblox.resources.grid_member",
            "heat_infoblox.resources.ha_pair",
            "heat_infoblox.resources.nameserver_group_member",
            "heat_infoblox.resources.netmri_job",
            "heat_infoblox.resources.netmri_managed_resource",
            "heat_infoblox.resources.ospf",
            "heat_infoblox.tests",
            "heat_infoblox.tests.test_bgp",
            "heat_infoblox.tests.test_bgp_neighbor",
            "heat_infoblox.tests.test_grid_member",
            "heat_infoblox.tests.test_ha_pair",
            "heat_infoblox.tests.test_nameserver_group_member",
            "heat_infoblox.tests.test_object_manipulator",
            "heat_infoblox.tests.test_ospf",
            "heat_infoblox.tests.test_resource_utils",
            "heat_infoblox.tests.utils"
        ],
        "version": "2.0.0"
    },
    "heat-tempest-plugin": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "heat-translator": {
        "cmdline": [],
        "modules": [],
        "version": "2.1.0"
    },
    "heat1d": {
        "cmdline": [],
        "modules": [
            "heat1d",
            "heat1d.cli",
            "heat1d.main",
            "heat1d.orbits",
            "heat1d.plotting"
        ],
        "version": "0.3.2"
    },
    "heat2d": {
        "cmdline": [],
        "modules": [
            "heat2d",
            "heat2d.engine",
            "heat2d.errors",
            "heat2d.gameobject",
            "heat2d.grid",
            "heat2d.networking",
            "heat2d.postprocess",
            "heat2d.renderer",
            "heat2d.sprite",
            "heat2d.stage",
            "heat2d.timer",
            "heat2d.ui",
            "heat2d.ui.context",
            "heat2d.visuals",
            "heat2d.visuals.rectangle",
            "heat2d.window"
        ],
        "version": "0.0.3"
    },
    "heatequation": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "heater": {
        "cmdline": [],
        "modules": [
            "heater",
            "heater.heater",
            "heater.resources"
        ],
        "version": "0.0.1"
    },
    "heatherr": {
        "cmdline": [],
        "modules": [
            "heatherr",
            "heatherr.account",
            "heatherr.account.tests",
            "heatherr.account.tests.test_views",
            "heatherr.account.urls",
            "heatherr.account.views",
            "heatherr.admin",
            "heatherr.apps",
            "heatherr.groups",
            "heatherr.groups.admin",
            "heatherr.groups.commands",
            "heatherr.groups.migrations",
            "heatherr.groups.migrations.0001_initial",
            "heatherr.groups.models",
            "heatherr.groups.tests",
            "heatherr.groups.tests.test_commands",
            "heatherr.migrations",
            "heatherr.migrations.0001_initial",
            "heatherr.models",
            "heatherr.settings",
            "heatherr.tests",
            "heatherr.tests.base",
            "heatherr.tests.test_views",
            "heatherr.urls",
            "heatherr.views",
            "heatherr.wsgi"
        ],
        "version": "1.0.2"
    },
    "heatherrd": {
        "cmdline": [],
        "modules": [
            "heatherrd",
            "heatherrd.protocol",
            "heatherrd.relay",
            "heatherrd.server"
        ],
        "version": "1.0.0"
    },
    "heatmap": {
        "cmdline": [],
        "modules": [
            "heatmap",
            "heatmap.colorschemes",
            "heatmap.heatmap"
        ],
        "version": "2.2.1"
    },
    "heatmap-provider": {
        "cmdline": [],
        "modules": [
            "app"
        ],
        "version": "0.1.0"
    },
    "heatmap4kmers": {
        "cmdline": [],
        "modules": [
            "heatmap4kmers",
            "heatmap4kmers.general_heatmap",
            "heatmap4kmers.kmers_heatmap"
        ],
        "version": "1.1.4"
    },
    "heatmapcluster": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "heatmappy": {
        "cmdline": [],
        "modules": [
            "heatmappy",
            "heatmappy.heatmap",
            "heatmappy.video"
        ],
        "version": "0.2.6"
    },
    "heatmaps": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heatmapx": {
        "cmdline": [],
        "modules": [
            "heatmapx"
        ],
        "version": "0.1.3"
    },
    "heatmapz": {
        "cmdline": [],
        "modules": [
            "heatmap",
            "heatmap.heatmap"
        ],
        "version": "0.0.4"
    },
    "heatmisercontroller": {
        "cmdline": [
            "hm_check_time_example.py",
            "hm_find_example.py",
            "hm_get_example.py",
            "hm_set_example.py"
        ],
        "modules": [
            "heatmisercontroller",
            "heatmisercontroller.adaptor",
            "heatmisercontroller.decorators",
            "heatmisercontroller.devices_prt_e",
            "heatmisercontroller.devices_prt_hw",
            "heatmisercontroller.exceptions",
            "heatmisercontroller.fields",
            "heatmisercontroller.fields_special",
            "heatmisercontroller.framing",
            "heatmisercontroller.generaldevices",
            "heatmisercontroller.genericdevice",
            "heatmisercontroller.hm_constants",
            "heatmisercontroller.logging_setup",
            "heatmisercontroller.network",
            "heatmisercontroller.observer",
            "heatmisercontroller.schedule_functions",
            "heatmisercontroller.setup",
            "heatmisercontroller.thermostatstate"
        ],
        "version": "0.44"
    },
    "heatmiserv3": {
        "cmdline": [],
        "modules": [
            "heatmiserV3",
            "heatmiserV3.connection",
            "heatmiserV3.constants",
            "heatmiserV3.heatmiser"
        ],
        "version": "1.1.18"
    },
    "heatpump": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "heatpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "heatrapy": {
        "cmdline": [],
        "modules": [
            "heatrapy"
        ],
        "version": "1.0.3"
    },
    "heatshrink": {
        "cmdline": [],
        "modules": [
            "heatshrink",
            "heatshrink.streams"
        ],
        "version": "0.3.2"
    },
    "heatshrink2": {
        "cmdline": [],
        "modules": [
            "heatshrink2",
            "heatshrink2.streams",
            "heatshrink2.version"
        ],
        "version": "0.9.0"
    },
    "heatwave": {
        "cmdline": [],
        "modules": [
            "src",
            "src.main",
            "tests"
        ],
        "version": "1.2.1"
    },
    "heatzy": {
        "cmdline": [
            "heatzy-cli"
        ],
        "modules": [
            "heatzy",
            "heatzy.heatzy"
        ],
        "version": "0.0.11"
    },
    "heatzypy": {
        "cmdline": [],
        "modules": [
            "heatzypy",
            "heatzypy.const",
            "heatzypy.exception",
            "heatzypy.heatzy"
        ],
        "version": "0.1.4.1"
    },
    "heaviside": {
        "cmdline": [
            "heaviside"
        ],
        "modules": [
            "heaviside",
            "heaviside.activities",
            "heaviside.ast",
            "heaviside.exceptions",
            "heaviside.lexer",
            "heaviside.parser",
            "heaviside.sfn",
            "heaviside.utils"
        ],
        "version": "2.0"
    },
    "heavy-celery": {
        "cmdline": [],
        "modules": [
            "heavy_celery",
            "heavy_celery.admin",
            "heavy_celery.apps",
            "heavy_celery.base",
            "heavy_celery.cron",
            "heavy_celery.middlewares",
            "heavy_celery.models",
            "heavy_celery.storage",
            "heavy_celery.tasks",
            "heavy_celery.urls",
            "heavy_celery.utils",
            "heavy_celery.views"
        ],
        "version": "0.3.0"
    },
    "heavymodel-lewisfogden": {
        "cmdline": [],
        "modules": [
            "heavymodel",
            "heavymodel.basis",
            "heavymodel.data",
            "heavymodel.model",
            "heavymodel.tables",
            "heavymodel.yaml_validation"
        ],
        "version": "0.0.2"
    },
    "heavymouse": {
        "cmdline": [],
        "modules": [
            "heavymouse",
            "heavymouse.alternate_heavymouse",
            "heavymouse.heavymouse"
        ],
        "version": "1.2"
    },
    "heavytailed": {
        "cmdline": [],
        "modules": [
            "heavytailed",
            "heavytailed.base_distribution",
            "heavytailed.compare",
            "heavytailed.exponential",
            "heavytailed.lognormal",
            "heavytailed.pairwise_powerlaw",
            "heavytailed.poisson",
            "heavytailed.powerlaw",
            "heavytailed.powerlaw_exp",
            "heavytailed.shifted_powerlaw_exp",
            "heavytailed.trunc_lognormal",
            "heavytailed.trunc_powerlaw",
            "heavytailed.yule"
        ],
        "version": "1.0.3"
    },
    "hebcal": {
        "cmdline": [],
        "modules": [
            "hebcal",
            "hebcal.calendar",
            "hebcal.heb_date",
            "hebcal.parshios",
            "hebcal.pronunciation_tags",
            "hebcal.pronunciation_tags.american_ashkinazik",
            "hebcal.pronunciation_tags.numbers",
            "hebcal.time_info",
            "hebcal.util",
            "hebcal.util.location",
            "hebcal.util.parse_datetime",
            "hebcal.util.proccess_time",
            "hebcal.util.sun",
            "hebcal.zmanim",
            "tests",
            "tests.test_TimeInfo",
            "tests.test_calendar",
            "tests.test_parshios",
            "tests.test_util",
            "tests.test_zmanim"
        ],
        "version": "0.0.1a0.dev4"
    },
    "hebcmkarel": {
        "cmdline": [],
        "modules": [
            "hebcmkarel",
            "hebcmkarel.app",
            "hebcmkarel.karel",
            "hebcmkarel.karelmain",
            "hebcmkarel.settings",
            "hebcmkarel.superkarel"
        ],
        "version": "0.3"
    },
    "hebe": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "hebel": {
        "cmdline": [
            "train_model.py"
        ],
        "modules": [
            "hebel",
            "hebel.config",
            "hebel.cross_validation",
            "hebel.data_providers",
            "hebel.layers",
            "hebel.layers.dummy_layer",
            "hebel.layers.hidden_layer",
            "hebel.layers.input_dropout",
            "hebel.layers.linear_regression_layer",
            "hebel.layers.logistic_layer",
            "hebel.layers.multitask_top_layer",
            "hebel.layers.softmax_layer",
            "hebel.layers.top_layer",
            "hebel.models",
            "hebel.models.logistic_regression",
            "hebel.models.model",
            "hebel.models.multitask_neural_net",
            "hebel.models.neural_net",
            "hebel.models.neural_net_regression",
            "hebel.monitors",
            "hebel.optimizers",
            "hebel.parameter_updaters",
            "hebel.pycuda_ops",
            "hebel.pycuda_ops.cublas",
            "hebel.pycuda_ops.cuda",
            "hebel.pycuda_ops.cudadrv",
            "hebel.pycuda_ops.cudart",
            "hebel.pycuda_ops.elementwise",
            "hebel.pycuda_ops.linalg",
            "hebel.pycuda_ops.matrix",
            "hebel.pycuda_ops.reductions",
            "hebel.pycuda_ops.softmax",
            "hebel.pycuda_ops.utils",
            "hebel.schedulers",
            "hebel.utils",
            "hebel.utils.call_check",
            "hebel.utils.environ",
            "hebel.utils.exc",
            "hebel.utils.math",
            "hebel.utils.plotting",
            "hebel.utils.serial",
            "hebel.utils.string_utils",
            "hebel.version"
        ],
        "version": "0.02.1"
    },
    "heberto-test": {
        "cmdline": [],
        "modules": [
            "heberto_test",
            "heberto_test.Binomialdistribution",
            "heberto_test.Gaussiandistribution",
            "heberto_test.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hebi-py": {
        "cmdline": [],
        "modules": [
            "hebi",
            "hebi.robot_model",
            "hebi.trajectory",
            "hebi.util",
            "hebi.version"
        ],
        "version": "2.2.1"
    },
    "hebireki": {
        "cmdline": [],
        "modules": [
            "hebireki",
            "hebireki.era",
            "hebireki.wareki"
        ],
        "version": "0.2.3"
    },
    "heboan": {
        "cmdline": [],
        "modules": [
            "heboan"
        ],
        "version": "1.0.0"
    },
    "hebpipe": {
        "cmdline": [],
        "modules": [
            "hebpipe",
            "hebpipe.heb_pipe",
            "hebpipe.lib",
            "hebpipe.lib._version",
            "hebpipe.lib.append_column",
            "hebpipe.lib.binarize_tags",
            "hebpipe.lib.depedit",
            "hebpipe.lib.harvest_tt_sgml",
            "hebpipe.lib.preprocess",
            "hebpipe.lib.sent_split",
            "hebpipe.lib.timing",
            "hebpipe.lib.tt2conll",
            "hebpipe.lib.whitespace_tokenize",
            "hebpipe.lib.xrenner",
            "hebpipe.lib.xrenner.modules",
            "hebpipe.lib.xrenner.modules.depedit",
            "hebpipe.lib.xrenner.modules.get_models",
            "hebpipe.lib.xrenner.modules.timing",
            "hebpipe.lib.xrenner.modules.xrenner_classes",
            "hebpipe.lib.xrenner.modules.xrenner_classify",
            "hebpipe.lib.xrenner.modules.xrenner_compatible",
            "hebpipe.lib.xrenner.modules.xrenner_coref",
            "hebpipe.lib.xrenner.modules.xrenner_lex",
            "hebpipe.lib.xrenner.modules.xrenner_marker",
            "hebpipe.lib.xrenner.modules.xrenner_ontoreader",
            "hebpipe.lib.xrenner.modules.xrenner_out",
            "hebpipe.lib.xrenner.modules.xrenner_parse",
            "hebpipe.lib.xrenner.modules.xrenner_postprocess",
            "hebpipe.lib.xrenner.modules.xrenner_preprocess",
            "hebpipe.lib.xrenner.modules.xrenner_propagate",
            "hebpipe.lib.xrenner.modules.xrenner_rule",
            "hebpipe.lib.xrenner.modules.xrenner_sequence",
            "hebpipe.lib.xrenner.modules.xrenner_test",
            "hebpipe.lib.xrenner.modules.xrenner_xrenner",
            "hebpipe.lib.xrenner.xrenner"
        ],
        "version": "1.0.0.2"
    },
    "hebrew-fix": {
        "cmdline": [],
        "modules": [
            "Hebrew_Fixer"
        ],
        "version": "0.0.2"
    },
    "hebrew-tokenizer": {
        "cmdline": [],
        "modules": [
            "hebrew_tokenizer",
            "hebrew_tokenizer.api",
            "hebrew_tokenizer.groups",
            "hebrew_tokenizer.lexicon",
            "hebrew_tokenizer.tokenizer",
            "tests",
            "tests.tokenizer_tests"
        ],
        "version": "1.1.0"
    },
    "hec": {
        "cmdline": [
            "hecs.py"
        ],
        "modules": [
            "hec",
            "hec.encryption",
            "hec.gui"
        ],
        "version": "0.0.5"
    },
    "hecate": {
        "cmdline": [],
        "modules": [
            "hecate",
            "hecate.hecate",
            "hecate.runner",
            "hecate.tmux",
            "hecate.version"
        ],
        "version": "0.1.0"
    },
    "heccer": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0-alpha"
    },
    "hecho": {
        "cmdline": [],
        "modules": [
            "hecho",
            "hecho.daemon",
            "hecho.hecho"
        ],
        "version": "0.1.4"
    },
    "heconvert": {
        "cmdline": [],
        "modules": [
            "heconvert",
            "heconvert.converter",
            "heconvert.core",
            "heconvert.keyboard",
            "heconvert.keyboard.ksx5002",
            "heconvert.keyboard.ksx5002.core",
            "heconvert.keyboard.ksx5002.interface",
            "heconvert.keyboard.ksx5002.mapping",
            "heconvert.misc",
            "heconvert.misc.util",
            "test",
            "test.tests"
        ],
        "version": "1.0.2"
    },
    "hectare": {
        "cmdline": [],
        "modules": [
            "hectare",
            "hectare._HectareListener",
            "hectare._HectareVhdlGen",
            "hectare._hectare_types",
            "hectare._vhdl_templates",
            "hectare.hectare"
        ],
        "version": "0.2.0"
    },
    "hecto": {
        "cmdline": [],
        "modules": [],
        "version": "1.200708"
    },
    "hecuba": {
        "cmdline": [],
        "modules": [
            "hecuba",
            "hecuba.IStorage",
            "hecuba.hdict",
            "hecuba.hfilter",
            "hecuba.hnumpy",
            "hecuba.parser",
            "hecuba.qbeast",
            "hecuba.storageiter",
            "hecuba.storageobj",
            "hecuba.tools",
            "storage",
            "storage.api"
        ],
        "version": "0.1.3.post1"
    },
    "hed-mkproj": {
        "cmdline": [],
        "modules": [
            "mkproj",
            "mkproj.cli",
            "mkproj.util"
        ],
        "version": "2.0.0"
    },
    "hed-utils": {
        "cmdline": [],
        "modules": [],
        "version": "4.5.0"
    },
    "hedaro": {
        "cmdline": [],
        "modules": [
            "hedaro",
            "hedaro.core",
            "hedaro.core.main"
        ],
        "version": "0.0.8"
    },
    "heddex-cityportal": {
        "cmdline": [],
        "modules": [
            "heddex",
            "heddex.cityportal",
            "heddex.cityportal.browser",
            "heddex.cityportal.browser.interfaces",
            "heddex.cityportal.browser.viewlets",
            "heddex.cityportal.portlets",
            "heddex.cityportal.portlets.personaltools",
            "heddex.cityportal.setuphandlers",
            "heddex.cityportal.tests"
        ],
        "version": "2.0"
    },
    "heddex-greenfield": {
        "cmdline": [],
        "modules": [
            "heddex",
            "heddex.greenfield",
            "heddex.greenfield.browser",
            "heddex.greenfield.browser.interfaces",
            "heddex.greenfield.browser.viewlets",
            "heddex.greenfield.portlets",
            "heddex.greenfield.setuphandlers",
            "heddex.greenfield.tests"
        ],
        "version": "2.0"
    },
    "heddex-tranquility": {
        "cmdline": [],
        "modules": [
            "heddex",
            "heddex.tranquility",
            "heddex.tranquility.browser",
            "heddex.tranquility.browser.common",
            "heddex.tranquility.browser.interfaces",
            "heddex.tranquility.portlets",
            "heddex.tranquility.portlets.personaltools",
            "heddex.tranquility.setuphandlers",
            "heddex.tranquility.tests"
        ],
        "version": "1.1"
    },
    "hedera": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hedfpy": {
        "cmdline": [],
        "modules": [
            "src",
            "src.CommandLineOperator",
            "src.EDFOperator",
            "src.EyeSignalOperator",
            "src.HDFEyeOperator",
            "src.Operator",
            "src.log"
        ],
        "version": "0.0.dev3"
    },
    "hedge": {
        "cmdline": [],
        "modules": [
            "python",
            "python.cuda",
            "python.cuda.cgen",
            "python.cuda.discretization",
            "python.cuda.execute",
            "python.cuda.optemplate",
            "python.cuda.plan",
            "python.cuda.tools",
            "python.data",
            "python.discr_precompiled",
            "python.discretization",
            "python.element",
            "python.flux",
            "python.interpolation",
            "python.log",
            "python.mesh",
            "python.operators",
            "python.optemplate",
            "python.parallel",
            "python.pde",
            "python.polynomial",
            "python.quadrature",
            "python.timestep",
            "python.tools",
            "python.visualization",
            "python.vtk"
        ],
        "version": "0.91"
    },
    "hedgedata": {
        "cmdline": [],
        "modules": [
            "hedgedata",
            "hedgedata.backfill",
            "hedgedata.cache",
            "hedgedata.data",
            "hedgedata.data_utils",
            "hedgedata.define",
            "hedgedata.distributor",
            "hedgedata.etf",
            "hedgedata.fetch",
            "hedgedata.log_utils",
            "hedgedata.options",
            "hedgedata.transform",
            "hedgedata.utils",
            "hedgedata.validate"
        ],
        "version": "0.0.2"
    },
    "hedgehog": {
        "cmdline": [],
        "modules": [
            "hedgehog",
            "hedgehog.base",
            "hedgehog.server",
            "hedgehog.steam_cmd",
            "hedgehog.tools"
        ],
        "version": "0.2.3"
    },
    "hedgehog-client": {
        "cmdline": [],
        "modules": [
            "hedgehog",
            "hedgehog.client",
            "hedgehog.client.async_client",
            "hedgehog.client.async_handlers",
            "hedgehog.client.shutdown_handler",
            "hedgehog.client.sync_client",
            "hedgehog.client.test_utils"
        ],
        "version": "0.9.1"
    },
    "hedgehog-fa": {
        "cmdline": [],
        "modules": [
            "automationserver",
            "automationserver.main",
            "automationserver.server",
            "cli",
            "cli.client",
            "cli.main",
            "fieldagent",
            "fieldagent.common",
            "fieldagent.devicemanager",
            "fieldagent.main",
            "fieldagent.rpc",
            "fieldagent.version"
        ],
        "version": "1.1"
    },
    "hedgehog-field-agent": {
        "cmdline": [],
        "modules": [
            "assetadapter",
            "assetadapter.admin",
            "assetadapter.apps",
            "assetadapter.migrations",
            "assetadapter.migrations.0001_initial",
            "assetadapter.models",
            "assetadapter.serializers",
            "assetadapter.tasks",
            "assetadapter.tests",
            "assetadapter.urls",
            "assetadapter.version",
            "assetadapter.views",
            "assetadapter.visualizers",
            "orchestrator",
            "orchestrator.celeryapp",
            "orchestrator.config",
            "orchestrator.config.server",
            "orchestrator.settings",
            "orchestrator.urls",
            "orchestrator.version",
            "orchestrator.wsgi",
            "processengine",
            "processengine.admin",
            "processengine.apps",
            "processengine.flows",
            "processengine.forms",
            "processengine.migrations",
            "processengine.migrations.0001_initial",
            "processengine.models",
            "processengine.serializers",
            "processengine.tasks",
            "processengine.tests",
            "processengine.urls",
            "processengine.version",
            "processengine.views",
            "rmd",
            "rmd.admin",
            "rmd.apps",
            "rmd.migrations",
            "rmd.models",
            "rmd.tests",
            "rmd.urls",
            "rmd.version",
            "rmd.views",
            "visacore",
            "visacore.core",
            "visaweb",
            "visaweb.admin",
            "visaweb.apps",
            "visaweb.management",
            "visaweb.management.commands",
            "visaweb.management.commands.packagepolymer",
            "visaweb.migrations",
            "visaweb.models",
            "visaweb.tests",
            "visaweb.urls",
            "visaweb.version",
            "visaweb.views"
        ],
        "version": "4.7.1"
    },
    "hedgehog-hedgehog-pyvisa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hedgehog-hwc-flasher": {
        "cmdline": [],
        "modules": [
            "hedgehog",
            "hedgehog.flasher",
            "hedgehog.flasher.flasher_serial"
        ],
        "version": "0.1.1"
    },
    "hedgehog-platform": {
        "cmdline": [],
        "modules": [
            "hedgehog",
            "hedgehog.platform"
        ],
        "version": "0.2.0"
    },
    "hedgehog-protocol": {
        "cmdline": [],
        "modules": [
            "gsl_protocol_python",
            "gsl_protocol_python.python_target",
            "hedgehog",
            "hedgehog.protocol",
            "hedgehog.protocol.errors",
            "hedgehog.protocol.messages",
            "hedgehog.protocol.messages.ack",
            "hedgehog.protocol.messages.analog",
            "hedgehog.protocol.messages.digital",
            "hedgehog.protocol.messages.emergency",
            "hedgehog.protocol.messages.imu",
            "hedgehog.protocol.messages.io",
            "hedgehog.protocol.messages.motor",
            "hedgehog.protocol.messages.process",
            "hedgehog.protocol.messages.servo",
            "hedgehog.protocol.messages.speaker",
            "hedgehog.protocol.messages.version",
            "hedgehog.protocol.proto",
            "hedgehog.protocol.proto.ack_pb2",
            "hedgehog.protocol.proto.analog_pb2",
            "hedgehog.protocol.proto.digital_pb2",
            "hedgehog.protocol.proto.emergency_pb2",
            "hedgehog.protocol.proto.hedgehog_pb2",
            "hedgehog.protocol.proto.imu_pb2",
            "hedgehog.protocol.proto.io_pb2",
            "hedgehog.protocol.proto.motor_pb2",
            "hedgehog.protocol.proto.process_pb2",
            "hedgehog.protocol.proto.servo_pb2",
            "hedgehog.protocol.proto.speaker_pb2",
            "hedgehog.protocol.proto.subscription_pb2",
            "hedgehog.protocol.proto.version_pb2",
            "hedgehog.protocol.zmq",
            "hedgehog.protocol.zmq.asyncio",
            "hedgehog.protocol.zmq.trio"
        ],
        "version": "0.9.0"
    },
    "hedgehog-protocol-spec": {
        "cmdline": [],
        "modules": [
            "gsl_protocol",
            "gsl_protocol.grammar",
            "gsl_protocol.grammar.HedgehogProtocolLexer",
            "gsl_protocol.grammar.HedgehogProtocolParser",
            "gsl_protocol.grammar.HedgehogProtocolVisitor",
            "gsl_protocol.proto_target"
        ],
        "version": "0.9.0"
    },
    "hedgehog-pyvisa": {
        "cmdline": [],
        "modules": [
            "pyvisa",
            "pyvisa.attributes",
            "pyvisa.compat",
            "pyvisa.compat.check_output",
            "pyvisa.compat.nullhandler",
            "pyvisa.compat.ordereddict",
            "pyvisa.compat.struct",
            "pyvisa.constants",
            "pyvisa.ctwrapper",
            "pyvisa.ctwrapper.cthelper",
            "pyvisa.ctwrapper.functions",
            "pyvisa.ctwrapper.highlevel",
            "pyvisa.ctwrapper.types",
            "pyvisa.errors",
            "pyvisa.highlevel",
            "pyvisa.resources",
            "pyvisa.resources.firewire",
            "pyvisa.resources.gpib",
            "pyvisa.resources.messagebased",
            "pyvisa.resources.pxi",
            "pyvisa.resources.registerbased",
            "pyvisa.resources.resource",
            "pyvisa.resources.serial",
            "pyvisa.resources.tcpip",
            "pyvisa.resources.usb",
            "pyvisa.resources.vxi",
            "pyvisa.rname",
            "pyvisa.shell",
            "pyvisa.testsuite",
            "pyvisa.testsuite.test_rname",
            "pyvisa.testsuite.test_util",
            "pyvisa.thirdparty",
            "pyvisa.thirdparty.prettytable",
            "pyvisa.util",
            "visa"
        ],
        "version": "2.0.0"
    },
    "hedgehog-pyvisa-py": {
        "cmdline": [],
        "modules": [
            "pyvisa-py",
            "pyvisa-py.common",
            "pyvisa-py.gpib",
            "pyvisa-py.highlevel",
            "pyvisa-py.protocols",
            "pyvisa-py.protocols.rpc",
            "pyvisa-py.protocols.usbraw",
            "pyvisa-py.protocols.usbtmc",
            "pyvisa-py.protocols.usbutil",
            "pyvisa-py.protocols.vxi11",
            "pyvisa-py.serial",
            "pyvisa-py.sessions",
            "pyvisa-py.tcpip",
            "pyvisa-py.testsuite",
            "pyvisa-py.usb"
        ],
        "version": "0.4"
    },
    "hedgehog-pyvisa-sim": {
        "cmdline": [],
        "modules": [
            "pyvisa-sim",
            "pyvisa-sim.channels",
            "pyvisa-sim.common",
            "pyvisa-sim.component",
            "pyvisa-sim.devices",
            "pyvisa-sim.gpib",
            "pyvisa-sim.highlevel",
            "pyvisa-sim.parser",
            "pyvisa-sim.serial",
            "pyvisa-sim.sessions",
            "pyvisa-sim.tcpip",
            "pyvisa-sim.testsuite",
            "pyvisa-sim.testsuite.test_all",
            "pyvisa-sim.testsuite.test_channel",
            "pyvisa-sim.usb"
        ],
        "version": "0.5"
    },
    "hedgehog-server": {
        "cmdline": [],
        "modules": [
            "hedgehog",
            "hedgehog.server",
            "hedgehog.server._version",
            "hedgehog.server.handlers",
            "hedgehog.server.handlers.hardware",
            "hedgehog.server.handlers.process",
            "hedgehog.server.hardware",
            "hedgehog.server.hardware.mocked",
            "hedgehog.server.hardware.serial",
            "hedgehog.server.hardware.serial.constants",
            "hedgehog.server.hardware.simulated",
            "hedgehog.server.hedgehog_server",
            "hedgehog.server.server",
            "hedgehog.server.simulator",
            "hedgehog.server.subscription"
        ],
        "version": "0.9.1"
    },
    "hedgehog-station-controller": {
        "cmdline": [],
        "modules": [
            "assetadapter",
            "assetadapter.devicemanager",
            "assetadapter.main",
            "core",
            "core.common",
            "rmd",
            "rmd.main",
            "rmd.manage",
            "rmd.settings",
            "rmd.urls",
            "rmd.version",
            "rmd.wsgi",
            "rpc",
            "rpc.amqp",
            "rpc.client",
            "rpc.server",
            "visaweb",
            "visaweb.admin",
            "visaweb.apps",
            "visaweb.migrations",
            "visaweb.migrations.0001_initial",
            "visaweb.models",
            "visaweb.serializers",
            "visaweb.tests",
            "visaweb.urls",
            "visaweb.views"
        ],
        "version": "2.6.9"
    },
    "hedgehog-utils": {
        "cmdline": [],
        "modules": [
            "hedgehog",
            "hedgehog.utils",
            "hedgehog.utils.asyncio",
            "hedgehog.utils.protobuf",
            "hedgehog.utils.test_utils",
            "hedgehog.utils.zmq",
            "hedgehog.utils.zmq.async_socket",
            "hedgehog.utils.zmq.socket"
        ],
        "version": "0.6.0"
    },
    "hedgepig-logger": {
        "cmdline": [],
        "modules": [
            "dng_logger",
            "dng_logger.logger",
            "dng_logger.writeConfig",
            "hedgepig_logger",
            "hedgepig_logger.logger",
            "hedgepig_logger.writeConfig"
        ],
        "version": "0.1.4"
    },
    "hedgeq": {
        "cmdline": [],
        "modules": [
            "zipline",
            "zipline._version",
            "zipline.algorithm",
            "zipline.api",
            "zipline.assets",
            "zipline.assets.asset_db_migrations",
            "zipline.assets.asset_db_schema",
            "zipline.assets.asset_writer",
            "zipline.assets.assets",
            "zipline.assets.exchange_info",
            "zipline.assets.futures",
            "zipline.assets.roll_finder",
            "zipline.assets.synthetic",
            "zipline.country",
            "zipline.currency",
            "zipline.data",
            "zipline.data.adjustments",
            "zipline.data.bar_reader",
            "zipline.data.bcolz_daily_bars",
            "zipline.data.benchmarks",
            "zipline.data.bundles",
            "zipline.data.bundles.core",
            "zipline.data.bundles.csvdir",
            "zipline.data.bundles.quandl",
            "zipline.data.continuous_future_reader",
            "zipline.data.data_portal",
            "zipline.data.dispatch_bar_reader",
            "zipline.data.fx",
            "zipline.data.fx.base",
            "zipline.data.fx.exploding",
            "zipline.data.fx.hdf5",
            "zipline.data.fx.in_memory",
            "zipline.data.fx.utils",
            "zipline.data.hdf5_daily_bars",
            "zipline.data.history_loader",
            "zipline.data.in_memory_daily_bars",
            "zipline.data.loader",
            "zipline.data.minute_bars",
            "zipline.data.resample",
            "zipline.data.session_bars",
            "zipline.dispatch",
            "zipline.errors",
            "zipline.examples",
            "zipline.examples.buy_and_hold",
            "zipline.examples.buyapple",
            "zipline.examples.download_data",
            "zipline.examples.dual_ema_talib",
            "zipline.examples.dual_moving_average",
            "zipline.examples.momentum_pipeline",
            "zipline.examples.olmar",
            "zipline.extensions",
            "zipline.finance",
            "zipline.finance.asset_restrictions",
            "zipline.finance.blotter",
            "zipline.finance.blotter.blotter",
            "zipline.finance.blotter.simulation_blotter",
            "zipline.finance.cancel_policy",
            "zipline.finance.commission",
            "zipline.finance.constants",
            "zipline.finance.controls",
            "zipline.finance.execution",
            "zipline.finance.ledger",
            "zipline.finance.metrics",
            "zipline.finance.metrics.core",
            "zipline.finance.metrics.metric",
            "zipline.finance.metrics.tracker",
            "zipline.finance.order",
            "zipline.finance.position",
            "zipline.finance.shared",
            "zipline.finance.slippage",
            "zipline.finance.trading",
            "zipline.finance.transaction",
            "zipline.gens",
            "zipline.gens.composites",
            "zipline.gens.tradesimulation",
            "zipline.gens.utils",
            "zipline.lib",
            "zipline.lib.adjusted_array",
            "zipline.lib.labelarray",
            "zipline.lib.normalize",
            "zipline.lib.quantiles",
            "zipline.pipeline",
            "zipline.pipeline.api_utils",
            "zipline.pipeline.classifiers",
            "zipline.pipeline.classifiers.classifier",
            "zipline.pipeline.common",
            "zipline.pipeline.data",
            "zipline.pipeline.data.dataset",
            "zipline.pipeline.data.equity_pricing",
            "zipline.pipeline.data.testing",
            "zipline.pipeline.domain",
            "zipline.pipeline.downsample_helpers",
            "zipline.pipeline.dtypes",
            "zipline.pipeline.engine",
            "zipline.pipeline.expression",
            "zipline.pipeline.factors",
            "zipline.pipeline.factors.basic",
            "zipline.pipeline.factors.events",
            "zipline.pipeline.factors.factor",
            "zipline.pipeline.factors.statistical",
            "zipline.pipeline.factors.technical",
            "zipline.pipeline.filters",
            "zipline.pipeline.filters.filter",
            "zipline.pipeline.filters.smoothing",
            "zipline.pipeline.graph",
            "zipline.pipeline.hooks",
            "zipline.pipeline.hooks.delegate",
            "zipline.pipeline.hooks.iface",
            "zipline.pipeline.hooks.no",
            "zipline.pipeline.hooks.progress",
            "zipline.pipeline.hooks.testing",
            "zipline.pipeline.loaders",
            "zipline.pipeline.loaders.base",
            "zipline.pipeline.loaders.blaze",
            "zipline.pipeline.loaders.blaze.core",
            "zipline.pipeline.loaders.blaze.estimates",
            "zipline.pipeline.loaders.blaze.events",
            "zipline.pipeline.loaders.blaze.utils",
            "zipline.pipeline.loaders.earnings_estimates",
            "zipline.pipeline.loaders.equity_pricing_loader",
            "zipline.pipeline.loaders.events",
            "zipline.pipeline.loaders.frame",
            "zipline.pipeline.loaders.synthetic",
            "zipline.pipeline.loaders.testing",
            "zipline.pipeline.loaders.utils",
            "zipline.pipeline.mixins",
            "zipline.pipeline.pipeline",
            "zipline.pipeline.sentinels",
            "zipline.pipeline.term",
            "zipline.pipeline.visualize",
            "zipline.protocol",
            "zipline.sources",
            "zipline.sources.benchmark_source",
            "zipline.sources.requests_csv",
            "zipline.sources.test_source",
            "zipline.test_algorithms",
            "zipline.testing",
            "zipline.testing.core",
            "zipline.testing.debug",
            "zipline.testing.fixtures",
            "zipline.testing.pipeline_terms",
            "zipline.testing.predicates",
            "zipline.testing.slippage",
            "zipline.utils",
            "zipline.utils.algo_instance",
            "zipline.utils.api_support",
            "zipline.utils.argcheck",
            "zipline.utils.cache",
            "zipline.utils.calendars",
            "zipline.utils.classproperty",
            "zipline.utils.cli",
            "zipline.utils.compat",
            "zipline.utils.context_tricks",
            "zipline.utils.data",
            "zipline.utils.date_utils",
            "zipline.utils.deprecate",
            "zipline.utils.dummy",
            "zipline.utils.enum",
            "zipline.utils.events",
            "zipline.utils.exploding_object",
            "zipline.utils.factory",
            "zipline.utils.final",
            "zipline.utils.formatting",
            "zipline.utils.functional",
            "zipline.utils.idbox",
            "zipline.utils.input_validation",
            "zipline.utils.math_utils",
            "zipline.utils.memoize",
            "zipline.utils.metautils",
            "zipline.utils.numpy_utils",
            "zipline.utils.pandas_utils",
            "zipline.utils.paths",
            "zipline.utils.pool",
            "zipline.utils.preprocess",
            "zipline.utils.range",
            "zipline.utils.run_algo",
            "zipline.utils.security_list",
            "zipline.utils.sentinel",
            "zipline.utils.sharedoc",
            "zipline.utils.sqlite_utils",
            "zipline.utils.string_formatting",
            "zipline.utils.tradingcalendar",
            "zipline.zipline_warnings"
        ],
        "version": "5.0.0"
    },
    "hedgeye-analysis": {
        "cmdline": [],
        "modules": [
            "hedgeye_analysis",
            "hedgeye_analysis.hedgeye_analysis_boilerplate",
            "hedgeye_analysis.hedgeye_clinical_trials",
            "hedgeye_analysis.hedgeye_pandas_patch",
            "hedgeye_analysis.hedgeye_stock_analysis",
            "hedgeye_analysis.introspection"
        ],
        "version": "0.2.1"
    },
    "hedju": {
        "cmdline": [],
        "modules": [
            "hedju",
            "hedju.pagination"
        ],
        "version": "0.1.0"
    },
    "hedwig": {
        "cmdline": [],
        "modules": [
            "hedwig",
            "hedwig.backends",
            "hedwig.backends.base",
            "hedwig.backends.console",
            "hedwig.backends.smtp",
            "hedwig.message"
        ],
        "version": "0.1"
    },
    "hedwig-nest": {
        "cmdline": [],
        "modules": [
            "hedwig",
            "hedwig.nest",
            "hedwig.nest.worker"
        ],
        "version": "0.1.8"
    },
    "hedwig-owl": {
        "cmdline": [],
        "modules": [
            "hedwig",
            "hedwig.owl"
        ],
        "version": "0.1.5"
    },
    "hedwig-py": {
        "cmdline": [],
        "modules": [
            "hedwig",
            "hedwig.utils",
            "hedwig/core",
            "hedwig/core.base",
            "hedwig/core.consumer",
            "hedwig/core.emitter",
            "hedwig/core.exceptions",
            "hedwig/core.service",
            "hedwig/core.settings",
            "hedwig/core.worker",
            "hedwig/django",
            "hedwig/django.apps",
            "hedwig/django.emitter",
            "hedwig/django.run",
            "hedwig/django.settings",
            "hedwig/django.signals",
            "hedwig/django.views",
            "hedwig/django.worker",
            "hedwig/rest_framework",
            "hedwig/rest_framework.apps",
            "hedwig/rest_framework.serializers",
            "hedwig/rest_framework.settings"
        ],
        "version": "0.1.9"
    },
    "heedy": {
        "cmdline": [],
        "modules": [
            "heedy",
            "heedy.apps",
            "heedy.base",
            "heedy.kv",
            "heedy.notifications",
            "heedy.objects",
            "heedy.objects.objects",
            "heedy.objects.registry",
            "heedy.objects.timeseries",
            "heedy.plugins",
            "heedy.users",
            "tests",
            "tests.test_basic"
        ],
        "version": "0.0.8"
    },
    "heeelllooooo": {
        "cmdline": [],
        "modules": [
            "hello"
        ],
        "version": "0.1.2"
    },
    "hefmath": {
        "cmdline": [],
        "modules": [
            "hefMath",
            "hefMath.demo1",
            "hefMath.demo2"
        ],
        "version": "1.0"
    },
    "heft": {
        "cmdline": [],
        "modules": [
            "heft",
            "heft.core",
            "heft.util"
        ],
        "version": "0.1.1"
    },
    "hehe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hehe-maker": {
        "cmdline": [],
        "modules": [
            "hehemaker",
            "hehemaker.autoarticle",
            "hehemaker.hehemaker"
        ],
        "version": "1.3.19"
    },
    "heheda1": {
        "cmdline": [],
        "modules": [
            "heheda1"
        ],
        "version": "0.1"
    },
    "hehehaha": {
        "cmdline": [],
        "modules": [
            "hehehaha",
            "hehehaha.print_cwd",
            "hehehaha.print_now"
        ],
        "version": "1.0.1"
    },
    "hehehe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hehehehe": {
        "cmdline": [],
        "modules": [
            "hehehehe",
            "hehehehe.hehe_one",
            "hehehehe.hehe_two"
        ],
        "version": "1.0"
    },
    "hehey": {
        "cmdline": [],
        "modules": [
            "hehe",
            "hehe.common",
            "hehe.common.func",
            "hehe.core",
            "hehe.core.base",
            "hehe.core.base.BaseApplication",
            "hehe.core.base.BaseController",
            "hehe.core.base.BaseHeHe",
            "hehe.core.base.Component",
            "hehe.core.base.Config",
            "hehe.core.base.Dictionary",
            "hehe.core.base.Request",
            "hehe.core.base.Response",
            "hehe.core.base.annotation",
            "hehe.core.base.exception",
            "hehe.core.console",
            "hehe.core.console.ConsoleApplication",
            "hehe.core.console.ConsoleConfig",
            "hehe.core.console.ConsoleController",
            "hehe.core.console.ConsoleRequest",
            "hehe.core.console.ConsoleResponse",
            "hehe.core.hconfig",
            "hehe.core.hconfig.config",
            "hehe.core.hconfig.parser",
            "hehe.core.hconfig.parser.BaseParser",
            "hehe.core.hconfig.parser.XmlParser",
            "hehe.core.hconfig.utils",
            "hehe.core.hcontainer",
            "hehe.core.hcontainer.base",
            "hehe.core.hcontainer.base.ClassReflection",
            "hehe.core.hcontainer.base.Container",
            "hehe.core.hcontainer.base.Definition",
            "hehe.core.hcontainer.base.annotation",
            "hehe.core.hcontainer.base.aop",
            "hehe.core.hcontainer.base.proxy",
            "hehe.core.hcontainer.bean",
            "hehe.core.hcontainer.utils",
            "hehe.core.hevent",
            "hehe.core.hevent.base",
            "hehe.core.hevent.base.BaseBehavior",
            "hehe.core.hevent.base.BaseEvent",
            "hehe.core.hevent.event",
            "hehe.core.hevent.utils",
            "hehe.core.hi18n",
            "hehe.core.hi18n.I18n",
            "hehe.core.hi18n.base",
            "hehe.core.hi18n.base.BaseLangPackage",
            "hehe.core.hi18n.base.DefaultLangPackage",
            "hehe.core.hi18n.utils",
            "hehe.core.hi18n.utils.CommonUtil",
            "hehe.core.hi18n.utils.XmlUtil",
            "hehe.core.hlogger",
            "hehe.core.hlogger.logger",
            "hehe.core.hlogger.utils",
            "hehe.core.hmiddleware",
            "hehe.core.hmiddleware.middleware",
            "hehe.core.hmiddleware.middlewares",
            "hehe.core.hmiddleware.middlewares.LoadStaticRes",
            "hehe.core.hmiddleware.middlewares.session",
            "hehe.core.hmiddleware.utils",
            "hehe.core.hrouter",
            "hehe.core.hrouter.base",
            "hehe.core.hrouter.base.BaseRouter",
            "hehe.core.hrouter.base.RouterRequest",
            "hehe.core.hrouter.base.Rule",
            "hehe.core.hrouter.easy",
            "hehe.core.hrouter.easy.EasyRouter",
            "hehe.core.hrouter.easy.EasyRule",
            "hehe.core.hrouter.route",
            "hehe.core.hrouter.utils",
            "hehe.core.hscheduler",
            "hehe.core.hscheduler.SchedulerManagerIde",
            "hehe.core.hscheduler.scheduler",
            "hehe.core.hscheduler.schedulers",
            "hehe.core.hscheduler.schedulers.ApsScheduler",
            "hehe.core.hscheduler.utils",
            "hehe.core.hsession",
            "hehe.core.hsession.base",
            "hehe.core.hsession.base.SafeSerializer",
            "hehe.core.hsession.base.SessionHandler",
            "hehe.core.hsession.base.WebSession",
            "hehe.core.hsession.storages",
            "hehe.core.hsession.storages.FileSession",
            "hehe.core.hsession.storages.MysqlSession",
            "hehe.core.hsession.storages.RedisSession",
            "hehe.core.hsession.utils",
            "hehe.core.hvalidation",
            "hehe.core.hvalidation.ValidationIde",
            "hehe.core.hvalidation.base",
            "hehe.core.hvalidation.base.Rule",
            "hehe.core.hvalidation.base.ValidationResult",
            "hehe.core.hvalidation.base.Validator",
            "hehe.core.hvalidation.base.ValidatorResult",
            "hehe.core.hvalidation.utils",
            "hehe.core.hvalidation.validation",
            "hehe.core.hvalidation.validators",
            "hehe.core.hvalidation.validators.BooleanValidator",
            "hehe.core.hvalidation.validators.CharValidator",
            "hehe.core.hvalidation.validators.ChineseValidator",
            "hehe.core.hvalidation.validators.CompareFieldValidator",
            "hehe.core.hvalidation.validators.CompareValidator",
            "hehe.core.hvalidation.validators.CurrencyValidator",
            "hehe.core.hvalidation.validators.DateValidator",
            "hehe.core.hvalidation.validators.DefaultValidator",
            "hehe.core.hvalidation.validators.EmailValidator",
            "hehe.core.hvalidation.validators.EmptyValidator",
            "hehe.core.hvalidation.validators.EnglishValidator",
            "hehe.core.hvalidation.validators.EqualValidator",
            "hehe.core.hvalidation.validators.FloatValidator",
            "hehe.core.hvalidation.validators.FuncValidator",
            "hehe.core.hvalidation.validators.InValidator",
            "hehe.core.hvalidation.validators.IntValidator",
            "hehe.core.hvalidation.validators.IpValidator",
            "hehe.core.hvalidation.validators.LengthValidator",
            "hehe.core.hvalidation.validators.ListValidator",
            "hehe.core.hvalidation.validators.RangeDateValidator",
            "hehe.core.hvalidation.validators.RangeLengthValidator",
            "hehe.core.hvalidation.validators.RangeValidator",
            "hehe.core.hvalidation.validators.RegularValidator",
            "hehe.core.hvalidation.validators.RequiredValidator",
            "hehe.core.hvalidation.validators.TelValidator",
            "hehe.core.hvalidation.validators.UrlValidator",
            "hehe.core.hview",
            "hehe.core.hview.HeheEngine",
            "hehe.core.hview.JinjaEngine",
            "hehe.core.hview.utils",
            "hehe.core.hview.view",
            "hehe.core.hview.viewide",
            "hehe.core.web",
            "hehe.core.web.ApiController",
            "hehe.core.web.BaseAction",
            "hehe.core.web.BaseWidget",
            "hehe.core.web.Cookies",
            "hehe.core.web.Headers",
            "hehe.core.web.Request",
            "hehe.core.web.WebApplication",
            "hehe.core.web.WebConfig",
            "hehe.core.web.WebController",
            "hehe.core.web.WebRequest",
            "hehe.core.web.WebResponse",
            "hehe.core.web.responseformatter",
            "hehe.core.web.wsgihttp",
            "hehe.helper",
            "hehe.helper.ArrayHelper",
            "hehe.helper.ClassHelper",
            "hehe.helper.JsonEncoder",
            "hehe.helper.common",
            "hehe.helper.threadlocal",
            "hehe.helper.utils",
            "hehe.helper.utils.compat",
            "hehe.lib",
            "hehe.lib.Pagination",
            "hehe.lib.Url",
            "hehe.lib.WhereUtil",
            "hehe.server",
            "hehe.server.console",
            "hehe.server.server",
            "hehe.server.uwsgi",
            "hehe.server.wsgiref"
        ],
        "version": "1.0.0"
    },
    "hehey-hcache": {
        "cmdline": [],
        "modules": [
            "hcache",
            "hcache.cache",
            "hcache.storages",
            "hcache.storages.FileStorage",
            "hcache.storages.LocalStorage",
            "hcache.storages.MemcachedStorage",
            "hcache.storages.RedisStorage",
            "hcache.utils",
            "hcache.utils.CacheUtil"
        ],
        "version": "1.0.2"
    },
    "hehey-hclient": {
        "cmdline": [],
        "modules": [
            "hclient",
            "hclient.ClientIde",
            "hclient.base",
            "hclient.base.BaseClient",
            "hclient.base.Cookies",
            "hclient.base.Headers",
            "hclient.base.Request",
            "hclient.base.RequestGroup",
            "hclient.base.Response",
            "hclient.base.Site",
            "hclient.client",
            "hclient.formatters",
            "hclient.formatters.Formatter",
            "hclient.formatters.JsonFormatter",
            "hclient.formatters.JsonParser",
            "hclient.formatters.Parser",
            "hclient.protocols",
            "hclient.protocols.HttpRequest",
            "hclient.protocols.ServiceResponse",
            "hclient.transports",
            "hclient.transports.CurlTransport",
            "hclient.transports.SocketTransport",
            "hclient.transports.Transport",
            "hclient.transports.UrllibTransport",
            "hclient.utils"
        ],
        "version": "1.3.9"
    },
    "hehey-hcontainer": {
        "cmdline": [],
        "modules": [
            "hcontainer",
            "hcontainer.base",
            "hcontainer.base.ClassReflection",
            "hcontainer.base.Container",
            "hcontainer.base.Definition",
            "hcontainer.bean",
            "hcontainer.utils",
            "hcontainer.utils.BeanUtil"
        ],
        "version": "1.0.1"
    },
    "hehey-hrouter": {
        "cmdline": [],
        "modules": [
            "hrouter",
            "hrouter.base",
            "hrouter.base.BaseRouter",
            "hrouter.base.RouterRequest",
            "hrouter.base.Rule",
            "hrouter.easy",
            "hrouter.easy.EasyRouter",
            "hrouter.easy.EasyRule",
            "hrouter.route",
            "hrouter.utils",
            "hrouter.utils.RouteUtil"
        ],
        "version": "1.0.2"
    },
    "hehey-htemplate": {
        "cmdline": [],
        "modules": [
            "htemplate",
            "htemplate.base",
            "htemplate.base.BaseTemplate",
            "htemplate.base.Expression",
            "htemplate.base.Filters",
            "htemplate.base.MyTemplate",
            "htemplate.base.TemplateCompiler",
            "htemplate.base.TemplateContext",
            "htemplate.context",
            "htemplate.context.common",
            "htemplate.filters",
            "htemplate.filters.common",
            "htemplate.filters.risk",
            "htemplate.nodes",
            "htemplate.nodes.BaseNode",
            "htemplate.nodes.FuncNode",
            "htemplate.nodes.MainNode",
            "htemplate.nodes.TagNode",
            "htemplate.tag",
            "htemplate.tag.FormTag",
            "htemplate.tag.HtmlTag",
            "htemplate.tag.SysTag",
            "htemplate.tag.Tag",
            "htemplate.utils",
            "htemplate.view"
        ],
        "version": "1.0.6"
    },
    "hehey-hupload": {
        "cmdline": [],
        "modules": [
            "hupload",
            "hupload.storages",
            "hupload.storages.CosStorage",
            "hupload.storages.LocalStorage",
            "hupload.storages.OssStorage",
            "hupload.storages.QiniuStorage",
            "hupload.upload",
            "hupload.utils",
            "hupload.utils.UploadUtil"
        ],
        "version": "1.0.0"
    },
    "hehey-hvalidation": {
        "cmdline": [],
        "modules": [
            "hvalidation",
            "hvalidation.base",
            "hvalidation.base.Rule",
            "hvalidation.base.ValidateResult",
            "hvalidation.base.Validator",
            "hvalidation.utils",
            "hvalidation.utils.ValidUtil",
            "hvalidation.validation",
            "hvalidation.validator",
            "hvalidation.validator.BooleanValidator",
            "hvalidation.validator.CharValidator",
            "hvalidation.validator.ChineseValidator",
            "hvalidation.validator.CompareFieldValidator",
            "hvalidation.validator.CompareValidator",
            "hvalidation.validator.CurrencyValidator",
            "hvalidation.validator.DateValidator",
            "hvalidation.validator.DefaultValidator",
            "hvalidation.validator.EmailValidator",
            "hvalidation.validator.EmptyValidator",
            "hvalidation.validator.EnglishValidator",
            "hvalidation.validator.EqualValidator",
            "hvalidation.validator.FloatValidator",
            "hvalidation.validator.FuncValidator",
            "hvalidation.validator.InValidator",
            "hvalidation.validator.IntValidator",
            "hvalidation.validator.IpValidator",
            "hvalidation.validator.LengthValidator",
            "hvalidation.validator.ListValidator",
            "hvalidation.validator.RangeDateValidator",
            "hvalidation.validator.RangeLengthValidator",
            "hvalidation.validator.RangeValidator",
            "hvalidation.validator.RegularValidator",
            "hvalidation.validator.RequiredValidator",
            "hvalidation.validator.TelValidator",
            "hvalidation.validator.UrlValidator"
        ],
        "version": "1.2.4"
    },
    "heiafr-hydrocontest-sensor-api": {
        "cmdline": [],
        "modules": [
            "heiafr.hydrocontest.sensor_api"
        ],
        "version": "1.1.1"
    },
    "heiafr-isc-se-tpchecker": {
        "cmdline": [],
        "modules": [
            "check",
            "heiafr.isc.se.tpchecker",
            "heiafr.isc.se.tpchecker.checkdoc",
            "heiafr.isc.se.tpchecker.checkgit",
            "heiafr.isc.se.tpchecker.command"
        ],
        "version": "1.0.6"
    },
    "heiankyoview": {
        "cmdline": [
            "heiankyoview"
        ],
        "modules": [
            "__init__",
            "heiankyoview"
        ],
        "version": "1.0"
    },
    "heic": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "heidelberg-subtyping": {
        "cmdline": [],
        "modules": [
            "heidelberg_subtyping",
            "heidelberg_subtyping.blast_wrapper",
            "heidelberg_subtyping.blast_wrapper.const",
            "heidelberg_subtyping.blast_wrapper.helpers",
            "heidelberg_subtyping.kmer_count",
            "heidelberg_subtyping.main",
            "heidelberg_subtyping.subtype",
            "heidelberg_subtyping.subtype_stats",
            "heidelberg_subtyping.subtyper",
            "heidelberg_subtyping.utils"
        ],
        "version": "0.5.0"
    },
    "heidi": {
        "cmdline": [],
        "modules": [
            "heidi",
            "heidi.Parse",
            "heidi.Parse.parse",
            "heidi.Segmentation",
            "heidi.Segmentation.texttiling",
            "heidi.Summarization",
            "heidi.Summarization.clusterrank",
            "heidi.Summarization.randomSum"
        ],
        "version": "1.0.18"
    },
    "heif": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "height2obj": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.0"
    },
    "heightfield": {
        "cmdline": [],
        "modules": [
            "heightfield",
            "heightfield.deposition",
            "heightfield.gl",
            "heightfield.main",
            "heightfield.surface",
            "heightfield.viewer",
            "heightfield.viewer.pygameviewer"
        ],
        "version": "0.2"
    },
    "heihama": {
        "cmdline": [],
        "modules": [
            "heihama"
        ],
        "version": "1.0.00"
    },
    "heikesheng": {
        "cmdline": [],
        "modules": [
            "heikesheng"
        ],
        "version": "1.1.0"
    },
    "heiko": {
        "cmdline": [],
        "modules": [
            "heiko",
            "heiko.items",
            "heiko.maassimpleconfig",
            "heiko.menu",
            "heiko.migrate",
            "heiko.nfc",
            "heiko.service",
            "heiko.users",
            "heiko.utils",
            "heiko.voice",
            "swagger_client",
            "swagger_client.api",
            "swagger_client.api.auth_api",
            "swagger_client.api.items_api",
            "swagger_client.api.service_api",
            "swagger_client.api.users_api",
            "swagger_client.api_client",
            "swagger_client.configuration",
            "swagger_client.models",
            "swagger_client.models.auth_success",
            "swagger_client.models.error",
            "swagger_client.models.item",
            "swagger_client.models.item_stats",
            "swagger_client.models.service_stats",
            "swagger_client.models.service_stats_items",
            "swagger_client.models.service_stats_items_cost",
            "swagger_client.models.service_stats_users",
            "swagger_client.models.service_stats_users_credits",
            "swagger_client.models.transferred_credits",
            "swagger_client.models.user",
            "swagger_client.models.user_stats",
            "swagger_client.rest",
            "test",
            "test.test_auth_api",
            "test.test_auth_success",
            "test.test_error",
            "test.test_item",
            "test.test_item_stats",
            "test.test_items_api",
            "test.test_service_api",
            "test.test_service_stats",
            "test.test_service_stats_items",
            "test.test_service_stats_items_cost",
            "test.test_service_stats_users",
            "test.test_service_stats_users_credits",
            "test.test_transferred_credits",
            "test.test_user",
            "test.test_user_stats",
            "test.test_users_api"
        ],
        "version": "4.6.0"
    },
    "heima0712": {
        "cmdline": [],
        "modules": [
            "heima0712"
        ],
        "version": "0.0.1"
    },
    "heimdall": {
        "cmdline": [],
        "modules": [
            "heimdall",
            "heimdall.devices",
            "heimdall.heimdall",
            "heimdall.take_screenshot"
        ],
        "version": "0.0.6"
    },
    "heimdall-android": {
        "cmdline": [],
        "modules": [
            "performance",
            "performance.base",
            "performance.base.baseThread",
            "performance.controller",
            "performance.controller.performance_server",
            "performance.heimdall",
            "performance.hrof",
            "performance.hrof.conv_hprof",
            "performance.hrof.pull_hprof",
            "performance.manager",
            "performance.memory",
            "performance.memory.record",
            "performance.version"
        ],
        "version": "0.0.7"
    },
    "heimdall-mail-notifier": {
        "cmdline": [],
        "modules": [
            "heimdall",
            "heimdall.gcs",
            "heimdall.mail_mailjet",
            "heimdall.pubsub",
            "heimdall.secret_manager"
        ],
        "version": "0.1"
    },
    "heimdallr": {
        "cmdline": [],
        "modules": [
            "benchmarks",
            "exclude",
            "exclude.dash-object-detection",
            "exclude.dash-object-detection.app",
            "exclude.dash-object-detection.config",
            "exclude.dash-object-detection.utils",
            "exclude.dash-object-detection.utils.dash_reusable_components",
            "exclude.dash-object-detection.utils.generate_video_data",
            "exclude.dash-object-detection.utils.mscoco_label_map",
            "exclude.dash-object-detection.utils.visualization_utils",
            "exclude.dash-salesforce-crm",
            "exclude.dash-salesforce-crm.app",
            "exclude.dash-salesforce-crm.apps",
            "exclude.dash-salesforce-crm.apps.cases",
            "exclude.dash-salesforce-crm.apps.leads",
            "exclude.dash-salesforce-crm.apps.opportunities",
            "exclude.dash-salesforce-crm.config",
            "exclude.dash-salesforce-crm.index",
            "exclude.dash-salesforce-crm.sfManager",
            "exclude.gpustat-web",
            "exclude.gpustat-web.gpustat_web",
            "exclude.gpustat-web.gpustat_web.app",
            "exclude.gpustat-web.setup",
            "heimdallr",
            "heimdallr.board_layout",
            "heimdallr.board_layout.body",
            "heimdallr.board_layout.footer",
            "heimdallr.board_layout.header",
            "heimdallr.board_layout.root_layout",
            "heimdallr.entry_points",
            "heimdallr.entry_points.cli",
            "heimdallr.entry_points.publisher",
            "heimdallr.entry_points.server",
            "heimdallr.exclude",
            "heimdallr.exclude.mqtt_config",
            "heimdallr.exclude.server_interface",
            "heimdallr.exclude.server_interface.exclude",
            "heimdallr.exclude.server_interface.exclude.lab_board",
            "heimdallr.exclude.specifications",
            "heimdallr.exclude.specifications.Device",
            "heimdallr.exclude.specifications.Machine",
            "heimdallr.exclude.specifications.Process",
            "heimdallr.utilities",
            "heimdallr.utilities.date_tools",
            "heimdallr.utilities.exclude",
            "heimdallr.utilities.exclude.amd",
            "heimdallr.utilities.exclude.amd.adl_api",
            "heimdallr.utilities.exclude.amd.adl_defines",
            "heimdallr.utilities.exclude.amd.adl_device",
            "heimdallr.utilities.exclude.amd.adl_manager",
            "heimdallr.utilities.exclude.amd.adl_structures",
            "heimdallr.utilities.exclude.intel",
            "heimdallr.utilities.exclude.intel.get_intel_gpu",
            "heimdallr.utilities.exclude.windows",
            "heimdallr.utilities.exclude.windows.gg",
            "heimdallr.utilities.google_calendar",
            "heimdallr.utilities.gpu_utilities",
            "heimdallr.utilities.heimdallr_config",
            "heimdallr.utilities.heimdallr_settings",
            "heimdallr.utilities.nvidia",
            "heimdallr.utilities.nvidia.bindings",
            "heimdallr.utilities.nvidia.packing",
            "heimdallr.utilities.nvidia.smi_parsing",
            "heimdallr.utilities.systemd_utilities",
            "tests",
            "tests.lab_board",
            "tests.lab_board.test_lab_board",
            "tests.test_nvml",
            "tests.test_sanity",
            "tests.test_smi"
        ],
        "version": "0.2.1"
    },
    "hein": {
        "cmdline": [],
        "modules": [
            "hein",
            "hein._version",
            "hein.core",
            "hein.socreceiver",
            "hein.soctransmitter"
        ],
        "version": "0.2.3"
    },
    "hein-control": {
        "cmdline": [],
        "modules": [
            "hein_control",
            "hein_control.action",
            "hein_control.action.basic",
            "hein_control.action.configured",
            "hein_control.action.logic",
            "hein_control.action.operators",
            "hein_control.automation",
            "hein_control.mixin",
            "hein_control.mixin.config",
            "hein_control.mixin.reg",
            "hein_control.mixin.status",
            "hein_control.scheduler",
            "hein_control.sequencing",
            "hein_control.sequencing.automation",
            "hein_control.sequencing.execution",
            "hein_control.timepoint",
            "hein_control.version",
            "tests",
            "tests.test_actions",
            "tests.test_automation",
            "tests.test_registry",
            "tests.test_scheduler",
            "tests.test_sequencing",
            "tests.test_timepoints"
        ],
        "version": "6.0.8"
    },
    "hein-utilities": {
        "cmdline": [],
        "modules": [
            "hein_utilities",
            "hein_utilities.control_manager",
            "hein_utilities.datetime_utilities",
            "hein_utilities.files",
            "hein_utilities.files_gui",
            "hein_utilities.json_utilities",
            "hein_utilities.misc",
            "hein_utilities.runnable",
            "hein_utilities.slack_integration",
            "hein_utilities.slack_integration.bots",
            "hein_utilities.slack_integration.logging",
            "hein_utilities.slack_integration.parsing",
            "hein_utilities.slack_integration.slack_managers",
            "hein_utilities.slackbot",
            "tests",
            "tests.json_utilities_test",
            "tests.test_watcher"
        ],
        "version": "3.8.2"
    },
    "heir": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "heisenberg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heisenberg-drugwars": {
        "cmdline": [],
        "modules": [
            "heisenberg",
            "heisenberg.actions",
            "heisenberg.actions.attack",
            "heisenberg.actions.char",
            "heisenberg.actions.heist",
            "heisenberg.actions.unit",
            "heisenberg.actions.upgrade",
            "heisenberg.core",
            "heisenberg.datastructures",
            "heisenberg.rest_client",
            "heisenberg.shell",
            "heisenberg.utils"
        ],
        "version": "0.1.1"
    },
    "heisenberg-ec2": {
        "cmdline": [],
        "modules": [
            "heisenberg",
            "heisenberg.command",
            "heisenberg.command.base",
            "heisenberg.command.find",
            "heisenberg.command.ssh",
            "heisenberg.interface",
            "heisenberg.utils"
        ],
        "version": "1.0.3"
    },
    "heist": {
        "cmdline": [],
        "modules": [
            "heist.artifact.contracts.init",
            "heist.artifact.salt_artifact",
            "heist.conf",
            "heist.heist.init",
            "heist.heist.salt_master",
            "heist.roster.clustershell",
            "heist.roster.contracts.init",
            "heist.roster.flat",
            "heist.roster.init",
            "heist.roster.scan",
            "heist.scripts",
            "heist.tunnel.asyncssh_tunnel",
            "heist.tunnel.contracts.init",
            "heist.version"
        ],
        "version": "2.4"
    },
    "heist-hemiplasy": {
        "cmdline": [],
        "modules": [
            "heist",
            "heist.hemiplasytool",
            "heist.seqtools"
        ],
        "version": "0.3.1"
    },
    "heizidafirst": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "hejing": {
        "cmdline": [],
        "modules": [
            "hejing"
        ],
        "version": "0.1"
    },
    "hejl-nester": {
        "cmdline": [],
        "modules": [
            "hejl_nester"
        ],
        "version": "1.1.1"
    },
    "hejtado-quido": {
        "cmdline": [],
        "modules": [
            "hejtado",
            "hejtado.quido",
            "hejtado.quido.api",
            "hejtado.quido.api.endpoints",
            "hejtado.quido.api.endpoints.relays",
            "hejtado.quido.api.endpoints.thermometers",
            "hejtado.quido.app",
            "hejtado.quido.business",
            "hejtado.quido.settings"
        ],
        "version": "0.2.6"
    },
    "hejunjie-nester": {
        "cmdline": [],
        "modules": [
            "HeJunjie_nester"
        ],
        "version": "1.4.0"
    },
    "hek-pool": {
        "cmdline": [],
        "modules": [
            "hek_pool",
            "hek_pool.app_window",
            "hek_pool.config_def",
            "hek_pool.constants",
            "hek_pool.help_text",
            "hek_pool.run",
            "hek_pool.util"
        ],
        "version": "1.5.0"
    },
    "heka-py": {
        "cmdline": [],
        "modules": [
            "heka",
            "heka.client",
            "heka.command",
            "heka.config",
            "heka.decorators",
            "heka.decorators.base",
            "heka.decorators.stats",
            "heka.decorators.util",
            "heka.encoders",
            "heka.exceptions",
            "heka.filters",
            "heka.holder",
            "heka.logging",
            "heka.message",
            "heka.message_pb2",
            "heka.path",
            "heka.streams",
            "heka.streams.dev",
            "heka.streams.logging",
            "heka.streams.tcp",
            "heka.streams.udp",
            "heka.tests",
            "heka.tests.helpers",
            "heka.tests.plugin",
            "heka.tests.plugin_exception",
            "heka.tests.sync_subscriber",
            "heka.tests.test_client",
            "heka.tests.test_config",
            "heka.tests.test_decorators",
            "heka.tests.test_encoders",
            "heka.tests.test_filters",
            "heka.tests.test_hmac",
            "heka.tests.test_logging",
            "heka.tests.test_protobuf",
            "heka.tests.test_streams",
            "heka.tests.test_timer",
            "heka.util"
        ],
        "version": "0.30.3"
    },
    "heka-py-cef": {
        "cmdline": [],
        "modules": [
            "heka_cef",
            "heka_cef.cef_plugin",
            "heka_cef.tests",
            "heka_cef.tests.ceftests",
            "heka_cef.tests.test_cef"
        ],
        "version": "0.3.1"
    },
    "heka-py-raven": {
        "cmdline": [],
        "modules": [
            "heka_raven",
            "heka_raven.raven_plugin"
        ],
        "version": "0.7"
    },
    "heka-raven": {
        "cmdline": [],
        "modules": [
            "heka_raven",
            "heka_raven.raven_plugin"
        ],
        "version": "0.5"
    },
    "hekate": {
        "cmdline": [],
        "modules": [
            "hekate"
        ],
        "version": "0.0.1"
    },
    "heketi": {
        "cmdline": [],
        "modules": [
            "heketi",
            "heketi.heketi"
        ],
        "version": "3.0.0"
    },
    "hekrapi": {
        "cmdline": [],
        "modules": [
            "hekrapi",
            "hekrapi.account",
            "hekrapi.aioudp",
            "hekrapi.argument",
            "hekrapi.command",
            "hekrapi.const",
            "hekrapi.device",
            "hekrapi.exceptions",
            "hekrapi.helpers",
            "hekrapi.protocol",
            "hekrapi.protocols",
            "hekrapi.protocols.power_meter",
            "hekrapi.types"
        ],
        "version": "0.2.5"
    },
    "hektor": {
        "cmdline": [
            "hektor"
        ],
        "modules": [
            "hektor",
            "lib",
            "lib.generic",
            "lib.identity",
            "lib.qti",
            "lib.xls"
        ],
        "version": "0.3.6"
    },
    "hela-utils": {
        "cmdline": [],
        "modules": [
            "hela_utils",
            "hela_utils.eloqua",
            "hela_utils.eloqua.utils",
            "hela_utils.luigi_scheduler",
            "hela_utils.luigi_scheduler.requests_fetcher",
            "hela_utils.luigi_scheduler.scheduler",
            "hela_utils.luigi_scheduler.scheduler_factory",
            "hela_utils.metrics",
            "hela_utils.metrics.metric_monitoring",
            "hela_utils.metrics.metrics_pusher",
            "hela_utils.test_utils",
            "hela_utils.test_utils.luigi_mock",
            "hela_utils.vdm",
            "hela_utils.vdm.helpers",
            "hela_utils.vdm.utils"
        ],
        "version": "0.3.5"
    },
    "helasentilex": {
        "cmdline": [],
        "modules": [
            "helasentilex"
        ],
        "version": "0.0.8"
    },
    "helcli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helen": {
        "cmdline": [],
        "modules": [
            "helen",
            "helen.helen",
            "helen.helen_train",
            "helen.marginpolish",
            "helen.modules",
            "helen.modules.python",
            "helen.modules.python.CallConsensusInterface",
            "helen.modules.python.DataStore",
            "helen.modules.python.DownloadModel",
            "helen.modules.python.FileManager",
            "helen.modules.python.Options",
            "helen.modules.python.PairwiseAlignment",
            "helen.modules.python.PolishInterface",
            "helen.modules.python.Stitch",
            "helen.modules.python.StitchInterface",
            "helen.modules.python.TestInterface",
            "helen.modules.python.TextColor",
            "helen.modules.python.TrainInterface",
            "helen.modules.python.helper",
            "helen.modules.python.helper.VCF_remove_phase",
            "helen.modules.python.helper.assess_summary_analyzer",
            "helen.modules.python.helper.csv_analyzer",
            "helen.modules.python.helper.hdf5_reader",
            "helen.modules.python.helper.quast_sv_extractor",
            "helen.modules.python.helper.tensor_analyzer",
            "helen.modules.python.helper.test_pairwisealigner",
            "helen.modules.python.hyperbandInterface",
            "helen.modules.python.models",
            "helen.modules.python.models.ModelHander",
            "helen.modules.python.models.TransducerModel",
            "helen.modules.python.models.dataloader",
            "helen.modules.python.models.dataloader_debug",
            "helen.modules.python.models.dataloader_predict",
            "helen.modules.python.models.hyperband",
            "helen.modules.python.models.predict",
            "helen.modules.python.models.predict_cpu",
            "helen.modules.python.models.predict_gpu",
            "helen.modules.python.models.test",
            "helen.modules.python.models.test_debug",
            "helen.modules.python.models.train",
            "helen.modules.python.models.train_distributed",
            "helen.version"
        ],
        "version": "0.0.23"
    },
    "helen-electricity-usage": {
        "cmdline": [],
        "modules": [
            "helen_electricity_usage"
        ],
        "version": "0.1.1"
    },
    "helena": {
        "cmdline": [],
        "modules": [],
        "version": "0.92"
    },
    "helena-eth-events": {
        "cmdline": [],
        "modules": [
            "django_eth_events",
            "django_eth_events.admin",
            "django_eth_events.apps",
            "django_eth_events.chainevents",
            "django_eth_events.decoder",
            "django_eth_events.event_listener",
            "django_eth_events.exceptions",
            "django_eth_events.factories",
            "django_eth_events.management",
            "django_eth_events.management.commands",
            "django_eth_events.management.commands.resync_daemon",
            "django_eth_events.migrations",
            "django_eth_events.migrations.0001_initial",
            "django_eth_events.migrations.0002_daemon_last_error_block_number",
            "django_eth_events.migrations.0003_block",
            "django_eth_events.migrations.0004_auto_20171127_0501",
            "django_eth_events.migrations.0005_daemon_status",
            "django_eth_events.migrations.0006_block_timestamp",
            "django_eth_events.migrations.0007_auto_20171207_0759",
            "django_eth_events.migrations.0008_daemon_listener_lock",
            "django_eth_events.migrations.0009_daemon_last_error_date_time",
            "django_eth_events.models",
            "django_eth_events.reorgs",
            "django_eth_events.singleton",
            "django_eth_events.tasks",
            "django_eth_events.tests",
            "django_eth_events.tests.mocked_testrpc_reorg",
            "django_eth_events.tests.test_celery",
            "django_eth_events.tests.test_daemon_model",
            "django_eth_events.tests.test_decoder",
            "django_eth_events.tests.test_event_listener_exec",
            "django_eth_events.tests.test_event_listener_functions",
            "django_eth_events.tests.test_reorg_detector",
            "django_eth_events.tests.test_singleton",
            "django_eth_events.tests.test_utils",
            "django_eth_events.tests.test_web3_service",
            "django_eth_events.tests.utils",
            "django_eth_events.utils",
            "django_eth_events.version",
            "django_eth_events.web3_service"
        ],
        "version": "3.1.9"
    },
    "helfertool": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helga": {
        "cmdline": [],
        "modules": [
            "helga",
            "helga.bin",
            "helga.bin.helga",
            "helga.comm",
            "helga.comm.base",
            "helga.comm.irc",
            "helga.comm.slack",
            "helga.comm.xmpp",
            "helga.db",
            "helga.log",
            "helga.my_settings",
            "helga.plugins",
            "helga.plugins.help",
            "helga.plugins.manager",
            "helga.plugins.operator",
            "helga.plugins.ping",
            "helga.plugins.version",
            "helga.plugins.webhooks",
            "helga.settings",
            "helga.tests",
            "helga.tests.bin",
            "helga.tests.bin.test_helga",
            "helga.tests.comm",
            "helga.tests.comm.test_irc",
            "helga.tests.comm.test_slack",
            "helga.tests.comm.test_xmpp",
            "helga.tests.plugins",
            "helga.tests.plugins.test_core",
            "helga.tests.plugins.test_help",
            "helga.tests.plugins.test_manager",
            "helga.tests.plugins.test_operator",
            "helga.tests.plugins.test_ping",
            "helga.tests.plugins.test_version",
            "helga.tests.plugins.test_webhooks",
            "helga.tests.test_db",
            "helga.tests.test_log",
            "helga.tests.test_settings",
            "helga.tests.util",
            "helga.tests.util.test_encodings",
            "helga.tests.webhooks",
            "helga.tests.webhooks.test_announcements",
            "helga.tests.webhooks.test_logger",
            "helga.util",
            "helga.util.encodings",
            "helga.webhooks",
            "helga.webhooks.announcements",
            "helga.webhooks.logger"
        ],
        "version": "1.7.13"
    },
    "helga-alias": {
        "cmdline": [],
        "modules": [
            "helga_alias"
        ],
        "version": "0.4.0"
    },
    "helga-alkafact": {
        "cmdline": [],
        "modules": [
            "helga_alkafact"
        ],
        "version": "0.2.0"
    },
    "helga-amazon-meta": {
        "cmdline": [],
        "modules": [
            "helga_amazon_meta",
            "helga_amazon_meta.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.1.0"
    },
    "helga-api-monitor": {
        "cmdline": [],
        "modules": [
            "helga_api_monitor",
            "helga_api_monitor.plugin"
        ],
        "version": "1.0.2"
    },
    "helga-bugzilla": {
        "cmdline": [],
        "modules": [
            "helga_bugzilla",
            "helga_bugzilla.actions",
            "helga_bugzilla.actions.describe",
            "helga_bugzilla.actions.search_external",
            "helga_bugzilla.exceptions",
            "helga_bugzilla.utils"
        ],
        "version": "1.3.2"
    },
    "helga-contrib-updates": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.4"
    },
    "helga-cowsay": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.2"
    },
    "helga-craigslist-meta": {
        "cmdline": [],
        "modules": [
            "helga_craigslist_meta",
            "helga_craigslist_meta.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.1.0"
    },
    "helga-crickets": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "helga-dubstep": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-elo": {
        "cmdline": [],
        "modules": [
            "helga_elo",
            "helga_elo.plugin"
        ],
        "version": "1.0.0"
    },
    "helga-facts": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "helga-flip": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-giphy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "helga-github-meta": {
        "cmdline": [],
        "modules": [
            "helga_github_meta",
            "helga_github_meta.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.1.0"
    },
    "helga-grafana": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "helga-haskell": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "helga-hipchat-nicks": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "helga-hipster": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "helga-icanhazascii": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-ignore": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-isup": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "helga-jenkins": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "helga-jeopardy": {
        "cmdline": [],
        "modules": [
            "helga_jeopardy"
        ],
        "version": "0.3.15"
    },
    "helga-jira": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "helga-karma": {
        "cmdline": [],
        "modules": [
            "helga_karma",
            "helga_karma.data",
            "helga_karma.plugin",
            "tests",
            "tests.test_data",
            "tests.test_integration",
            "tests.test_plugin"
        ],
        "version": "1.3.0"
    },
    "helga-koji": {
        "cmdline": [],
        "modules": [
            "helga_koji",
            "helga_koji.actions",
            "helga_koji.actions.get_build",
            "helga_koji.actions.get_package",
            "helga_koji.actions.kojiweb",
            "helga_koji.actions.user_tasks",
            "helga_koji.colorize",
            "helga_koji.colors",
            "helga_koji.signals",
            "helga_koji.signals.build",
            "helga_koji.signals.task",
            "helga_koji.signals.util",
            "helga_koji.tests",
            "helga_koji.tests.test_colorize",
            "helga_koji.tests.test_user_tasks",
            "helga_koji.tests.test_util",
            "helga_koji.util"
        ],
        "version": "1.7.0"
    },
    "helga-lingo": {
        "cmdline": [],
        "modules": [
            "helga_lingo",
            "helga_lingo.plugin",
            "tests",
            "tests.test_lingo"
        ],
        "version": "1.0.7"
    },
    "helga-log-reader": {
        "cmdline": [],
        "modules": [
            "helga_log_reader",
            "helga_log_reader.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.0.4"
    },
    "helga-loljava": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-mail": {
        "cmdline": [],
        "modules": [
            "helga_mail"
        ],
        "version": "1.0.2"
    },
    "helga-markovify": {
        "cmdline": [],
        "modules": [
            "helga_markovify",
            "helga_markovify.markov",
            "helga_markovify.plugin",
            "helga_markovify.twitter"
        ],
        "version": "1.1.1"
    },
    "helga-meant-to-say": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-meet": {
        "cmdline": [],
        "modules": [
            "helga_meet",
            "helga_meet.helga_meet"
        ],
        "version": "1.1.1"
    },
    "helga-mimic": {
        "cmdline": [],
        "modules": [
            "helga_mimic"
        ],
        "version": "0.4.11.1"
    },
    "helga-mud": {
        "cmdline": [],
        "modules": [
            "helga_mud",
            "helga_mud.plugin"
        ],
        "version": "0.1.1"
    },
    "helga-newrelic": {
        "cmdline": [],
        "modules": [
            "helga_newrelic",
            "helga_newrelic.plugins",
            "helga_newrelic.webhooks"
        ],
        "version": "0.2.0"
    },
    "helga-no-more-olga": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-notify": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-oneliner": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-oral-history": {
        "cmdline": [],
        "modules": [
            "helga_oral_history"
        ],
        "version": "0.2.0"
    },
    "helga-pika": {
        "cmdline": [],
        "modules": [
            "helga_pika",
            "helga_pika.plugin"
        ],
        "version": "0.0.2"
    },
    "helga-poems": {
        "cmdline": [],
        "modules": [
            "helga_poems",
            "helga_poems.plugin",
            "helga_poems.tests",
            "helga_poems.tests.test_plugin",
            "helga_poems.tests.test_util",
            "helga_poems.util"
        ],
        "version": "0.2.0"
    },
    "helga-pointing-poker": {
        "cmdline": [],
        "modules": [
            "helga_pointing_poker",
            "helga_pointing_poker.helga_pointing_poker"
        ],
        "version": "1.0.0"
    },
    "helga-prod-fixer": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "helga-productpages": {
        "cmdline": [],
        "modules": [
            "helga_productpages",
            "helga_productpages.actions",
            "helga_productpages.actions.release_date",
            "helga_productpages.actions.release_schedule",
            "helga_productpages.task",
            "helga_productpages.util"
        ],
        "version": "1.4.0"
    },
    "helga-pull-requests": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "helga-quest": {
        "cmdline": [],
        "modules": [
            "helga_quest",
            "helga_quest.core",
            "helga_quest.driver",
            "helga_quest.plugin",
            "helga_quest.util",
            "tests",
            "tests.test_core"
        ],
        "version": "1.1.0"
    },
    "helga-quip": {
        "cmdline": [],
        "modules": [
            "helga_quip",
            "helga_quip.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.2.0"
    },
    "helga-redmine": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "helga-reminders": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "helga-repost": {
        "cmdline": [],
        "modules": [
            "helga_repost"
        ],
        "version": "1.0.2"
    },
    "helga-reviewboard": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "helga-reviews": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "helga-roll": {
        "cmdline": [],
        "modules": [
            "helga_roll",
            "helga_roll.plugin",
            "tests",
            "tests.test_roll"
        ],
        "version": "1.1.0"
    },
    "helga-spongebob": {
        "cmdline": [],
        "modules": [
            "helga_spongebob"
        ],
        "version": "0.1"
    },
    "helga-spook": {
        "cmdline": [],
        "modules": [
            "helga_spook",
            "helga_spook.plugin"
        ],
        "version": "1.1.5"
    },
    "helga-spotify": {
        "cmdline": [],
        "modules": [
            "helga_spotify"
        ],
        "version": "1.0.0"
    },
    "helga-stfu": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-team": {
        "cmdline": [],
        "modules": [
            "helga_team",
            "helga_team.helga_team",
            "tests",
            "tests.test_team"
        ],
        "version": "1.0.2"
    },
    "helga-trade": {
        "cmdline": [],
        "modules": [
            "helga_trade",
            "helga_trade.helga_trade"
        ],
        "version": "1.0.2"
    },
    "helga-twitter": {
        "cmdline": [],
        "modules": [
            "helga_twitter"
        ],
        "version": "0.4.3"
    },
    "helga-urban-jeopardy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-urbandictionary": {
        "cmdline": [],
        "modules": [
            "helga_urbandictionary",
            "helga_urbandictionary.plugin"
        ],
        "version": "2.0.0"
    },
    "helga-users": {
        "cmdline": [],
        "modules": [
            "helga_users",
            "helga_users.command",
            "helga_users.ldap",
            "helga_users.user"
        ],
        "version": "0.0.2"
    },
    "helga-versionone": {
        "cmdline": [],
        "modules": [
            "helga_versionone",
            "helga_versionone.tests",
            "helga_versionone.tests.test_alias",
            "helga_versionone.tests.test_commands",
            "helga_versionone.tests.test_oauth_command",
            "helga_versionone.tests.test_review",
            "helga_versionone.tests.test_take",
            "helga_versionone.tests.test_team",
            "helga_versionone.tests.test_things",
            "helga_versionone.tests.test_v1_wrapper",
            "helga_versionone.tests.util",
            "helga_versionone.v1_wrapper"
        ],
        "version": "0.1.10"
    },
    "helga-weather": {
        "cmdline": [],
        "modules": [
            "helga_weather",
            "helga_weather.plugin"
        ],
        "version": "1.0.4"
    },
    "helga-wiki-whois": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-winks": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "helga-xkcd": {
        "cmdline": [],
        "modules": [
            "helga_xkcd",
            "helga_xkcd.client",
            "helga_xkcd.command",
            "helga_xkcd.db"
        ],
        "version": "0.1.2"
    },
    "helga-yelling": {
        "cmdline": [],
        "modules": [
            "helga_yelling"
        ],
        "version": "0.2.2"
    },
    "helga-youtube-meta": {
        "cmdline": [],
        "modules": [
            "helga_youtube_meta",
            "helga_youtube_meta.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.1.0"
    },
    "helga-zen": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "heli-kojofix": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heliacal": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.1"
    },
    "helianthus-tools": {
        "cmdline": [],
        "modules": [
            "helianthus",
            "helianthus.awd",
            "helianthus.awd.awdconsole",
            "helianthus.awd.xingmeng",
            "helianthus.ctf",
            "helianthus.ctf.http_ddos",
            "helianthus.ctf.md5_scan",
            "helianthus.ctf.port_scanner",
            "helianthus.hello",
            "helianthus.other",
            "helianthus.other.tools"
        ],
        "version": "1.7.5"
    },
    "helical-thread": {
        "cmdline": [],
        "modules": [
            "helical_thread",
            "helical_thread.helicalthread"
        ],
        "version": "0.2.2"
    },
    "helicopter": {
        "cmdline": [],
        "modules": [
            "helicopter",
            "helicopter.config_private",
            "helicopter.data",
            "helicopter.feed"
        ],
        "version": "0.0.6"
    },
    "helics": {
        "cmdline": [],
        "modules": [
            "helics",
            "helics._version"
        ],
        "version": "2.6.0"
    },
    "helics-apps": {
        "cmdline": [],
        "modules": [
            "helics_apps",
            "helics_apps._version"
        ],
        "version": "2.6.0"
    },
    "helio": {
        "cmdline": [],
        "modules": [
            "helio",
            "helio.controller",
            "helio.controller.base",
            "helio.controller.finders",
            "helio.controller.finders_tests",
            "helio.controller.helpers",
            "helio.controller.helpers_tests",
            "helio.controller.tests",
            "helio.helio_exceptions",
            "helio.heliodjango",
            "helio.heliodjango.finders",
            "helio.heliodjango.middleware",
            "helio.heliodjango.renderers",
            "helio.heliodjango.tests",
            "helio.heliodjango.url_tests",
            "helio.heliodjango.urls",
            "helio.heliodjango.views",
            "helio.heliodjango.views_tests",
            "helio.helioflask",
            "helio.helioflask.blueprint_tests",
            "helio.helioflask.finders",
            "helio.helioflask.finders_tests",
            "helio.helioflask.helioflask",
            "helio.helioflask.renderers",
            "helio.javascript",
            "helio.javascript.tests",
            "helio.settings",
            "helio.views",
            "helio.views.tests",
            "helio.views.views",
            "helio.viewstate",
            "helio.viewstate.notification",
            "helio.viewstate.notification_tests",
            "helio.viewstate.tests",
            "helio.viewstate.viewstate"
        ],
        "version": "1.0.0b1"
    },
    "heliocats": {
        "cmdline": [],
        "modules": [
            "heliocats",
            "heliocats.cats",
            "heliocats.data",
            "heliocats.plot",
            "heliocats.stats"
        ],
        "version": "1.1.1"
    },
    "helionsdk": {
        "cmdline": [],
        "modules": [
            "helionsdk",
            "helionsdk.dns",
            "helionsdk.dns.dns_service",
            "helionsdk.dns.v1",
            "helionsdk.dns.v1._proxy",
            "helionsdk.dns.v1.domain",
            "helionsdk.dns.version",
            "helionsdk.hp",
            "helionsdk.shell",
            "helionsdk.tests",
            "helionsdk.tests.functional",
            "helionsdk.tests.functional.base",
            "helionsdk.tests.functional.dns",
            "helionsdk.tests.functional.dns.v1",
            "helionsdk.tests.functional.dns.v1.test_domain",
            "helionsdk.tests.unit",
            "helionsdk.tests.unit.dns",
            "helionsdk.tests.unit.dns.test_dns_service",
            "helionsdk.tests.unit.dns.test_version",
            "helionsdk.tests.unit.dns.v1",
            "helionsdk.tests.unit.dns.v1.test_domain",
            "helionsdk.tests.unit.dns.v1.test_proxy",
            "helionsdk.tests.unit.test_hp"
        ],
        "version": "0.3.0"
    },
    "heliopy": {
        "cmdline": [],
        "modules": [],
        "version": "0.14.0"
    },
    "heliopy-multid": {
        "cmdline": [],
        "modules": [
            "heliopy_multid",
            "heliopy_multid.data",
            "heliopy_multid.data.cluster",
            "heliopy_multid.data.mms",
            "heliopy_multid.data.test",
            "heliopy_multid.data.test.test_cluster",
            "heliopy_multid.data.test.test_mms",
            "heliopy_multid.data.test.util",
            "heliopy_multid.data.util"
        ],
        "version": "0.0.3"
    },
    "helios": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.8"
    },
    "helios-client": {
        "cmdline": [],
        "modules": [
            "helios",
            "helios.__version__",
            "helios.chunked_upload",
            "helios.client",
            "helios.exceptions",
            "helios.requests",
            "helios.responses"
        ],
        "version": "0.3.dev20200304"
    },
    "helios-lib": {
        "cmdline": [],
        "modules": [
            "helios_lib",
            "helios_lib.config",
            "helios_lib.crypto",
            "helios_lib.crypto.algs",
            "helios_lib.crypto.electionalgs",
            "helios_lib.crypto.elgamal",
            "helios_lib.crypto.number",
            "helios_lib.crypto.numtheory",
            "helios_lib.crypto.randpool",
            "helios_lib.crypto.utils",
            "helios_lib.exceptions",
            "helios_lib.models",
            "helios_lib.serializer",
            "helios_lib.tests",
            "helios_lib.tests.test_election",
            "helios_lib.utils",
            "helios_lib.workflows",
            "helios_lib.workflows.homomorphic"
        ],
        "version": "0.0.1"
    },
    "helios-monitor": {
        "cmdline": [],
        "modules": [
            "helios",
            "helios.helios",
            "helios.settings"
        ],
        "version": "1.0.2"
    },
    "helios-sdk": {
        "cmdline": [],
        "modules": [
            "helios",
            "helios.alerts_api",
            "helios.cameras_api",
            "helios.collections_api",
            "helios.core",
            "helios.core.config",
            "helios.core.mixins",
            "helios.core.request_manager",
            "helios.core.session",
            "helios.core.structure",
            "helios.observations_api",
            "helios.utilities",
            "helios.utilities.data_utils",
            "helios.utilities.json_utils",
            "helios.utilities.logging_utils",
            "helios.utilities.parsing_utils"
        ],
        "version": "3.0.1"
    },
    "helios-web3": {
        "cmdline": [],
        "modules": [
            "helios_web3",
            "helios_web3.abi",
            "helios_web3.account",
            "helios_web3.admin",
            "helios_web3.hls",
            "helios_web3.main",
            "helios_web3.personal",
            "helios_web3.pythonic_middleware",
            "helios_web3.temp_fork_files",
            "helios_web3.temp_fork_files.photon",
            "helios_web3.utils",
            "helios_web3.utils.block_creation",
            "helios_web3.utils.get_version",
            "helios_web3.utils.rpc_abi"
        ],
        "version": "5.0.13"
    },
    "helios1101-gaussian-distributions": {
        "cmdline": [],
        "modules": [
            "helios1101_gaussian_distributions",
            "helios1101_gaussian_distributions.Binomialdistribution",
            "helios1101_gaussian_distributions.Gaussiandistribution",
            "helios1101_gaussian_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "heliosat": {
        "cmdline": [],
        "modules": [
            "heliosat",
            "heliosat.caching",
            "heliosat.coordinates",
            "heliosat.download",
            "heliosat.helcats",
            "heliosat.satellites",
            "heliosat.smoothing",
            "heliosat.spacecraft",
            "heliosat.spice",
            "heliosat.util"
        ],
        "version": "0.4.7"
    },
    "heliosethernetsilaacooling": {
        "cmdline": [],
        "modules": [
            "HeliosEthernetSilaaCooling",
            "HeliosEthernetSilaaCooling.Helios_Errors",
            "HeliosEthernetSilaaCooling.Helios_Ethernet",
            "HeliosEthernetSilaaCooling.Helios_HexConverter"
        ],
        "version": "1.2.3"
    },
    "heliotron": {
        "cmdline": [],
        "modules": [
            "heliotron",
            "heliotron.bridge",
            "heliotron.light",
            "heliotron.presets",
            "heliotron.util"
        ],
        "version": "0.2.1"
    },
    "helipad": {
        "cmdline": [],
        "modules": [
            "helipad",
            "helipad.agent",
            "helipad.cpanel",
            "helipad.data",
            "helipad.graph",
            "helipad.helpers",
            "helipad.jupyter",
            "helipad.model",
            "helipad.param",
            "helipad.utility"
        ],
        "version": "1.0.1"
    },
    "helipypter": {
        "cmdline": [],
        "modules": [
            "helipypter",
            "helipypter.funcs",
            "helipypter.vehicles",
            "tests",
            "tests.doctest",
            "tests.project_test"
        ],
        "version": "0.0.7"
    },
    "helium": {
        "cmdline": [],
        "modules": [
            "helium",
            "helium._impl",
            "helium._impl.match_type",
            "helium._impl.selenium_wrappers",
            "helium._impl.util",
            "helium._impl.util.dictionary",
            "helium._impl.util.geom",
            "helium._impl.util.html",
            "helium._impl.util.inspect_",
            "helium._impl.util.lang",
            "helium._impl.util.os_",
            "helium._impl.util.path",
            "helium._impl.util.system",
            "helium._impl.util.xpath"
        ],
        "version": "3.0.5"
    },
    "helium-cli": {
        "cmdline": [],
        "modules": [
            "helium",
            "helium.helium_functions",
            "helium.helium_functions.convert_youtube_url",
            "helium.utility_functions",
            "helium.utility_functions.decorators",
            "helium.utility_functions.json_functions"
        ],
        "version": "0.0.5"
    },
    "helium-client": {
        "cmdline": [],
        "modules": [
            "helium_client",
            "helium_client._version"
        ],
        "version": "1.5.1"
    },
    "helium-commander": {
        "cmdline": [],
        "modules": [
            "helium_commander",
            "helium_commander.__about__",
            "helium_commander._version",
            "helium_commander.cli",
            "helium_commander.client",
            "helium_commander.commands",
            "helium_commander.commands.configuration",
            "helium_commander.commands.element",
            "helium_commander.commands.label",
            "helium_commander.commands.metadata",
            "helium_commander.commands.organization",
            "helium_commander.commands.sensor",
            "helium_commander.commands.timeseries",
            "helium_commander.commands.user",
            "helium_commander.configuration",
            "helium_commander.device",
            "helium_commander.device_configuration",
            "helium_commander.element",
            "helium_commander.label",
            "helium_commander.metadata",
            "helium_commander.options",
            "helium_commander.organization",
            "helium_commander.resource",
            "helium_commander.sensor",
            "helium_commander.timeseries",
            "helium_commander.user",
            "helium_commander.writer"
        ],
        "version": "0.15.7"
    },
    "helium-python": {
        "cmdline": [],
        "modules": [
            "helium",
            "helium.__about__",
            "helium._version",
            "helium.adapter",
            "helium.adapter.aiohttp",
            "helium.adapter.requests",
            "helium.client",
            "helium.configuration",
            "helium.device",
            "helium.device_configuration",
            "helium.element",
            "helium.exceptions",
            "helium.label",
            "helium.metadata",
            "helium.organization",
            "helium.relations",
            "helium.resource",
            "helium.sensor",
            "helium.session",
            "helium.timeseries",
            "helium.user",
            "helium.util"
        ],
        "version": "0.9.0"
    },
    "heliumbot": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "heliumcli": {
        "cmdline": [
            "helium-cli"
        ],
        "modules": [
            "heliumcli",
            "heliumcli.actions",
            "heliumcli.actions.buildrelease",
            "heliumcli.actions.deploybuild",
            "heliumcli.actions.init",
            "heliumcli.actions.listbuilds",
            "heliumcli.actions.prepcode",
            "heliumcli.actions.setbuild",
            "heliumcli.actions.startservers",
            "heliumcli.actions.update",
            "heliumcli.actions.updateprojects",
            "heliumcli.main",
            "heliumcli.settings",
            "heliumcli.utils"
        ],
        "version": "1.5.15"
    },
    "helix": {
        "cmdline": [],
        "modules": [
            "helix",
            "helix.app",
            "helix.client",
            "helix.eventhandler",
            "helix.exceptions"
        ],
        "version": "0.1.0"
    },
    "helix-installer": {
        "cmdline": [],
        "modules": [
            "helix-installer"
        ],
        "version": "0.0.1"
    },
    "helix-scripts": {
        "cmdline": [],
        "modules": [
            "helix-scripts"
        ],
        "version": "0.0.1"
    },
    "helixclient": {
        "cmdline": [],
        "modules": [
            "helixclient",
            "helixclient._client"
        ],
        "version": "0.0.1"
    },
    "helixmc": {
        "cmdline": [
            "helixmc-run"
        ],
        "modules": [
            "helixmc",
            "helixmc._c_build",
            "helixmc._cython_build",
            "helixmc.fitfxn",
            "helixmc.pose",
            "helixmc.random_step",
            "helixmc.score",
            "helixmc.tests",
            "helixmc.tests.test_util",
            "helixmc.util"
        ],
        "version": "0.9"
    },
    "helixpc": {
        "cmdline": [],
        "modules": [
            "helixpc",
            "helixpc._version",
            "helixpc.cli",
            "helixpc.graph_genes",
            "helixpc.group_genes"
        ],
        "version": "1.2.1"
    },
    "helixvis": {
        "cmdline": [],
        "modules": [
            "helixvis",
            "helixvis.draw_wenxiang",
            "helixvis.draw_wheel"
        ],
        "version": "1.0.1"
    },
    "hell": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.1"
    },
    "hell123": {
        "cmdline": [],
        "modules": [
            "hell123",
            "hell123.dependencies",
            "hell123.dependencies.dependencies",
            "hell123.dependencies.dependency",
            "hell123.lib",
            "hell123.lib.args",
            "hell123.lib.meditor",
            "hell123.lib.srbColour",
            "hell123.lib.time",
            "hell123.lib.util",
            "hell123.main"
        ],
        "version": "1.0.6"
    },
    "hellahella": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellanzb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellas": {
        "cmdline": [],
        "modules": [
            "Hellas",
            "Hellas.Athens",
            "Hellas.Delphi",
            "Hellas.Olympia",
            "Hellas.Pella",
            "Hellas.Sparta",
            "Hellas.Thebes",
            "Hellas.tests",
            "Hellas.tests.tests"
        ],
        "version": "1.0.16"
    },
    "hellbox": {
        "cmdline": [],
        "modules": [
            "hellbox",
            "hellbox.autoimporter",
            "hellbox.chute",
            "hellbox.hellbox",
            "hellbox.jobs",
            "hellbox.source_file",
            "hellbox.task"
        ],
        "version": "0.1.3"
    },
    "hellbox-dsig": {
        "cmdline": [],
        "modules": [
            "dsig",
            "dsig.insert_dummy_dsig"
        ],
        "version": "0.1.0"
    },
    "hellbox-fontmake": {
        "cmdline": [],
        "modules": [
            "fontmake",
            "fontmake.generate_otf",
            "fontmake.generate_ttf"
        ],
        "version": "0.1.1"
    },
    "helldiver": {
        "cmdline": [],
        "modules": [
            "helldiver",
            "helldiver.helldiver"
        ],
        "version": "0.1.6"
    },
    "hellfire": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hellflask": {
        "cmdline": [],
        "modules": [
            "HellFlask",
            "HellFlask.create"
        ],
        "version": "0.0.5"
    },
    "helli2": {
        "cmdline": [],
        "modules": [
            "helli2",
            "helli2.turtle_helper"
        ],
        "version": "0.1.5"
    },
    "helllohuirong": {
        "cmdline": [
            "cluster.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hello": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-amit": {
        "cmdline": [],
        "modules": [
            "hello-amit",
            "hello-amit.MainFile"
        ],
        "version": "0.1"
    },
    "hello-atlas": {
        "cmdline": [],
        "modules": [
            "hello_atlas",
            "hello_atlas.atlas_basic_pipeline",
            "hello_atlas.atlas_eda",
            "hello_atlas.atlas_eda_wip",
            "hello_atlas.atlas_nlp_pipeline"
        ],
        "version": "0.0.8"
    },
    "hello-baby0": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.hello"
        ],
        "version": "0.0.3"
    },
    "hello-c-extension": {
        "cmdline": [],
        "modules": [
            "cmod",
            "cmod.pymod"
        ],
        "version": "0.5"
    },
    "hello-cargo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hello-clarice": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hello-curtis": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1"
    },
    "hello-czj": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.hello"
        ],
        "version": "0.0.1"
    },
    "hello-darkness-script": {
        "cmdline": [
            "hello_darkness"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hello-demo": {
        "cmdline": [],
        "modules": [
            "hello_demo",
            "hello_demo.cli",
            "hello_demo.hello_demo"
        ],
        "version": "0.1.7"
    },
    "hello-dependencies": {
        "cmdline": [],
        "modules": [
            "hello_dependencies",
            "hello_dependencies.hello"
        ],
        "version": "0.1"
    },
    "hello-egg": {
        "cmdline": [],
        "modules": [
            "hello_egg",
            "hello_egg.foo"
        ],
        "version": "0.1"
    },
    "hello-ehmed": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hello-fastai": {
        "cmdline": [],
        "modules": [
            "Hello_fastai",
            "Hello_fastai._nbdev",
            "Hello_fastai.core"
        ],
        "version": "0.0.3"
    },
    "hello-from-asif": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hello-from-secret-unicorns": {
        "cmdline": [],
        "modules": [
            "hello_from_secret_unicorns",
            "hello_from_secret_unicorns.HelloWorld",
            "hello_from_secret_unicorns.test"
        ],
        "version": "1.0"
    },
    "hello-fun": {
        "cmdline": [],
        "modules": [
            "hello_fun",
            "hello_fun.print_hello"
        ],
        "version": "0.4"
    },
    "hello-gfw": {
        "cmdline": [],
        "modules": [
            "hgfw"
        ],
        "version": "0.1.2"
    },
    "hello-gh-actions": {
        "cmdline": [],
        "modules": [
            "hello_gh_actions",
            "hello_gh_actions.fizzbuzz",
            "hello_gh_actions.hello"
        ],
        "version": "0.0.4"
    },
    "hello-googoo": {
        "cmdline": [],
        "modules": [
            "hello_googoo",
            "hello_googoo.googoo"
        ],
        "version": "0.1.0"
    },
    "hello-greeting-test": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hello-gwss": {
        "cmdline": [
            "hello_gwss"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hello-hbk": {
        "cmdline": [],
        "modules": [
            "hello_hbk",
            "hello_hbk.hello"
        ],
        "version": "1.0.0"
    },
    "hello-hedgehog": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-hepeng": {
        "cmdline": [],
        "modules": [
            "hello_hepeng"
        ],
        "version": "1.0.0"
    },
    "hello-huajia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-image": {
        "cmdline": [],
        "modules": [
            "hello_image"
        ],
        "version": "0.0.2"
    },
    "hello-issac": {
        "cmdline": [],
        "modules": [
            "hello_issac.cli"
        ],
        "version": "1.0.0"
    },
    "hello-juan": {
        "cmdline": [],
        "modules": [
            "hello_juan",
            "hello_juan._version",
            "hello_juan.command_line",
            "hello_juan.say_hello"
        ],
        "version": "0.18"
    },
    "hello-kjmerf": {
        "cmdline": [],
        "modules": [
            "hello_kjmerf",
            "hello_kjmerf.say_hello",
            "tests",
            "tests.test_say_hello"
        ],
        "version": "2.0.9"
    },
    "hello-kkk": {
        "cmdline": [],
        "modules": [
            "hello_kkk",
            "hello_kkk.say"
        ],
        "version": "0.1.0"
    },
    "hello-maimai": {
        "cmdline": [],
        "modules": [
            "hello_maimai"
        ],
        "version": "1.0.0"
    },
    "hello-maiya": {
        "cmdline": [
            "hello_maiya.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hello-mattmoony": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.hello"
        ],
        "version": "0.1.1"
    },
    "hello-memoryview": {
        "cmdline": [
            "hello-memoryview"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "hello-mnv": {
        "cmdline": [],
        "modules": [
            "hello_mnv"
        ],
        "version": "0.0.2"
    },
    "hello-my-world": {
        "cmdline": [],
        "modules": [
            "hello_my_world",
            "hello_my_world.hello"
        ],
        "version": "0.1.4"
    },
    "hello-natalia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-oxffffff": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "hello-package": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hello-package-baymaxx": {
        "cmdline": [],
        "modules": [
            "hello_package",
            "hello_package.helloworld"
        ],
        "version": "0.0.1"
    },
    "hello-package-charuvil": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hello-pckg": {
        "cmdline": [],
        "modules": [
            "example_pkg",
            "example_pkg.main"
        ],
        "version": "0.0.1"
    },
    "hello-pi": {
        "cmdline": [],
        "modules": [
            "hello_pi"
        ],
        "version": "0.0.1"
    },
    "hello-pip": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.hello"
        ],
        "version": "1.0.5"
    },
    "hello-pip-first-time": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hello-pip-goran": {
        "cmdline": [],
        "modules": [
            "hello_pip_goran",
            "hello_pip_goran.say_hello"
        ],
        "version": "0.3"
    },
    "hello-pipi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-pkg": {
        "cmdline": [],
        "modules": [
            "hello_pkg"
        ],
        "version": "3.7.1"
    },
    "hello-py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-pylab-example": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.maiusculo",
            "hello.minusculo"
        ],
        "version": "0.0.1"
    },
    "hello-pypi": {
        "cmdline": [],
        "modules": [
            "hello_pypi"
        ],
        "version": "1.2"
    },
    "hello-pypi-github": {
        "cmdline": [],
        "modules": [
            "hello_pypi_github"
        ],
        "version": "1.1.0"
    },
    "hello-pypi-world": {
        "cmdline": [],
        "modules": [
            "funniest"
        ],
        "version": "0.1"
    },
    "hello-pypi-ye": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hello-pypi-yud": {
        "cmdline": [],
        "modules": [
            "test_yud"
        ],
        "version": "0.2"
    },
    "hello-pypi-yue": {
        "cmdline": [],
        "modules": [
            "say_hello",
            "say_hello.hello"
        ],
        "version": "0.1.1"
    },
    "hello-python": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hello-python-cli": {
        "cmdline": [
            "hello"
        ],
        "modules": [
            "hello_module",
            "hello_module.hello",
            "hello_module.test_hello",
            "hello_module.test_utils",
            "hello_module.utils"
        ],
        "version": "0.0.9"
    },
    "hello-python-demo": {
        "cmdline": [
            "hello_python_demo_script1.py"
        ],
        "modules": [
            "hello_python_demo_top1",
            "hello_python_demo_top2",
            "module1",
            "module1.hello2",
            "module1.hello3",
            "module1.submodule1",
            "module1.submodule1.hello1"
        ],
        "version": "1.0.3"
    },
    "hello-python-package": {
        "cmdline": [],
        "modules": [
            "hello_python_package",
            "hello_python_package.hello"
        ],
        "version": "0.2"
    },
    "hello-python2": {
        "cmdline": [],
        "modules": [
            "lambda_test",
            "lambda_test.shell"
        ],
        "version": "1.2.4"
    },
    "hello-rajnish-307-2020": {
        "cmdline": [],
        "modules": [
            "hello_rajnish_307_2020"
        ],
        "version": "0.0.1"
    },
    "hello-robot-stretch-body": {
        "cmdline": [],
        "modules": [
            "stretch_body",
            "stretch_body.arm",
            "stretch_body.base",
            "stretch_body.cobbs_framing",
            "stretch_body.device",
            "stretch_body.dynamixel_XL430",
            "stretch_body.dynamixel_X_chain",
            "stretch_body.dynamixel_hello_XL430",
            "stretch_body.end_of_arm",
            "stretch_body.head",
            "stretch_body.hello_utils",
            "stretch_body.lift",
            "stretch_body.pimu",
            "stretch_body.robot",
            "stretch_body.robot_monitor",
            "stretch_body.robot_sentry",
            "stretch_body.scope",
            "stretch_body.stepper",
            "stretch_body.stretch_gripper",
            "stretch_body.transport",
            "stretch_body.version",
            "stretch_body.wacc",
            "stretch_body.wrist_yaw",
            "stretch_body.xbox_controller"
        ],
        "version": "0.0.19"
    },
    "hello-robot-stretch-body-tools": {
        "cmdline": [
            "stretch_about.py",
            "stretch_arm_home.py",
            "stretch_arm_jog.py",
            "stretch_audio_test.py",
            "stretch_base_jog.py",
            "stretch_gripper_home.py",
            "stretch_gripper_jog.py",
            "stretch_hardware_echo.py",
            "stretch_head_jog.py",
            "stretch_lift_home.py",
            "stretch_lift_jog.py",
            "stretch_pimu_jog.py",
            "stretch_pimu_scope.py",
            "stretch_respeaker_test.py",
            "stretch_robot_battery_check.py",
            "stretch_robot_dynamixel_reboot.py",
            "stretch_robot_home.py",
            "stretch_robot_jog.py",
            "stretch_robot_keyboard_teleop.py",
            "stretch_robot_monitor.py",
            "stretch_robot_stow.py",
            "stretch_robot_system_check.py",
            "stretch_rp_lidar_jog.py",
            "stretch_wacc_jog.py",
            "stretch_wacc_scope.py",
            "stretch_wrist_yaw_home.py",
            "stretch_wrist_yaw_jog.py",
            "stretch_xbox_controller_teleop.py"
        ],
        "modules": [],
        "version": "0.0.13"
    },
    "hello-robot-stretch-body-tools-py3": {
        "cmdline": [
            "stretch_urdf_show.py"
        ],
        "modules": [],
        "version": "0.0.8"
    },
    "hello-robot-stretch-factory": {
        "cmdline": [
            "RE1_base_calibrate_imu_collect.py",
            "RE1_base_calibrate_imu_process.py",
            "RE1_cliff_sensor_calibrate.py",
            "RE1_dynamixel_id_change.py",
            "RE1_dynamixel_id_scan.py",
            "RE1_dynamixel_jog.py",
            "RE1_dynamixel_reboot.py",
            "RE1_gripper_calibrate.py",
            "RE1_head_calibrate_pan.py",
            "RE1_stepper_calibration_YAML_to_flash.py",
            "RE1_stepper_calibration_flash_to_YAML.py",
            "RE1_stepper_calibration_run.py",
            "RE1_stepper_jog.py",
            "RE1_stepper_mechaduino_menu.py",
            "RE1_wacc_calibrate.py",
            "README.md"
        ],
        "modules": [],
        "version": "0.0.14"
    },
    "hello-rule-set": {
        "cmdline": [],
        "modules": [
            "hello_rule_set",
            "hello_rule_set.get_rule_set",
            "hello_rule_set.rule_tool",
            "hello_rule_set.weight_optimization"
        ],
        "version": "1.5.2"
    },
    "hello-rupesh": {
        "cmdline": [],
        "modules": [
            "Hello_Rupesh"
        ],
        "version": "1.0.0"
    },
    "hello-salam": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-samu": {
        "cmdline": [
            "hello_samu.py"
        ],
        "modules": [],
        "version": "0.5"
    },
    "hello-sanam": {
        "cmdline": [],
        "modules": [
            "test"
        ],
        "version": "1.0"
    },
    "hello-sjy2": {
        "cmdline": [],
        "modules": [
            "hello-sjy2",
            "hello-sjy2.main"
        ],
        "version": "0.0.2"
    },
    "hello-skadai": {
        "cmdline": [],
        "modules": [
            "hello_skadai"
        ],
        "version": "0.1"
    },
    "hello-smr39-rasa": {
        "cmdline": [],
        "modules": [
            "hello_smr39_rasa",
            "hello_smr39_rasa.gunicorn_conf",
            "hello_smr39_rasa.hello",
            "hello_smr39_rasa.wsgi"
        ],
        "version": "0.1.8"
    },
    "hello-sumu": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hello-super-try": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.3"
    },
    "hello-swa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-test": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.hello"
        ],
        "version": "1.0-1"
    },
    "hello-test-dev": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-test-rinki": {
        "cmdline": [],
        "modules": [
            "hello_test_rinki"
        ],
        "version": "1.0.3"
    },
    "hello-testo1": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hello-there-library": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hello-todo": {
        "cmdline": [],
        "modules": [
            "hello_todo",
            "hello_todo.cli",
            "hello_todo.db"
        ],
        "version": "0.1.5"
    },
    "hello-word-joao-neto": {
        "cmdline": [],
        "modules": [
            "hello_word_joao_neto"
        ],
        "version": "0.1"
    },
    "hello-world": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "hello-world-1989": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hello-world-20200509": {
        "cmdline": [],
        "modules": [
            "hello_world"
        ],
        "version": "0.0.2"
    },
    "hello-world-alex": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hello-world-amit": {
        "cmdline": [],
        "modules": [
            "try_pypi"
        ],
        "version": "0.1"
    },
    "hello-world-baxter2": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "hello-world-crock-dev": {
        "cmdline": [],
        "modules": [
            "hello_world",
            "hello_world.main"
        ],
        "version": "1.2.0"
    },
    "hello-world-ericjaychi": {
        "cmdline": [],
        "modules": [
            "hello_world",
            "hello_world.main"
        ],
        "version": "0.0.1"
    },
    "hello-world-extension": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-world-fbrilej": {
        "cmdline": [],
        "modules": [
            "hello_world"
        ],
        "version": "0.0.3"
    },
    "hello-world-gnits": {
        "cmdline": [],
        "modules": [
            "hello_world",
            "hello_world.foo"
        ],
        "version": "0.0.4"
    },
    "hello-world-library": {
        "cmdline": [],
        "modules": [
            "hello_world_library",
            "hello_world_library.hello_world"
        ],
        "version": "0.1"
    },
    "hello-world-lizixi": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.hello"
        ],
        "version": "0.0.3"
    },
    "hello-world-mashanm": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "hello-world-package": {
        "cmdline": [],
        "modules": [
            "hello_world",
            "hello_world._version",
            "hello_world.cli"
        ],
        "version": "0.1.3"
    },
    "hello-world-py": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.Hello"
        ],
        "version": "1.0"
    },
    "hello-world-python": {
        "cmdline": [],
        "modules": [
            "hello_world",
            "hello_world.hello_world",
            "hello_world.location",
            "tests",
            "tests.test_hello_world",
            "tests.test_location"
        ],
        "version": "0.0.4"
    },
    "hello-world-repo": {
        "cmdline": [],
        "modules": [
            "hello_world_repo",
            "hello_world_repo.hello"
        ],
        "version": "0.0.2"
    },
    "hello-world-sandhya": {
        "cmdline": [],
        "modules": [
            "hello_world_sandhya.app"
        ],
        "version": "1.0.4"
    },
    "hello-world-script": {
        "cmdline": [
            "helloworld.py"
        ],
        "modules": [],
        "version": "0.2"
    },
    "hello-world-somughosh": {
        "cmdline": [],
        "modules": [
            "hello_world_somughosh"
        ],
        "version": "0.1.0"
    },
    "hello-world-source-code": {
        "cmdline": [],
        "modules": [
            "hello_world_source_code",
            "hello_world_source_code.Listing_11-6",
            "hello_world_source_code.Listing_11-7",
            "hello_world_source_code.Listing_13-1",
            "hello_world_source_code.Listing_13-2",
            "hello_world_source_code.Listing_13-3",
            "hello_world_source_code.Listing_13-4",
            "hello_world_source_code.Listing_13-5",
            "hello_world_source_code.Listing_13-6",
            "hello_world_source_code.Listing_13-7",
            "hello_world_source_code.Listing_14-1",
            "hello_world_source_code.Listing_14-2",
            "hello_world_source_code.Listing_14-3",
            "hello_world_source_code.Listing_14-4",
            "hello_world_source_code.Listing_14-5",
            "hello_world_source_code.Listing_14-6",
            "hello_world_source_code.Listing_15-1",
            "hello_world_source_code.Listing_15-2",
            "hello_world_source_code.Listing_15-3",
            "hello_world_source_code.Listing_16-1",
            "hello_world_source_code.Listing_16-10",
            "hello_world_source_code.Listing_16-11",
            "hello_world_source_code.Listing_16-12",
            "hello_world_source_code.Listing_16-13",
            "hello_world_source_code.Listing_16-14",
            "hello_world_source_code.Listing_16-15",
            "hello_world_source_code.Listing_16-16",
            "hello_world_source_code.Listing_16-2",
            "hello_world_source_code.Listing_16-3",
            "hello_world_source_code.Listing_16-4",
            "hello_world_source_code.Listing_16-5",
            "hello_world_source_code.Listing_16-6",
            "hello_world_source_code.Listing_16-7",
            "hello_world_source_code.Listing_16-8",
            "hello_world_source_code.Listing_17-1",
            "hello_world_source_code.Listing_17-2",
            "hello_world_source_code.Listing_17-3",
            "hello_world_source_code.Listing_17-4",
            "hello_world_source_code.Listing_18-1",
            "hello_world_source_code.Listing_18-2",
            "hello_world_source_code.Listing_18-3",
            "hello_world_source_code.Listing_18-4",
            "hello_world_source_code.Listing_18-5",
            "hello_world_source_code.Listing_19-1",
            "hello_world_source_code.Listing_19-2",
            "hello_world_source_code.Listing_19-3",
            "hello_world_source_code.Listing_19-4",
            "hello_world_source_code.Listing_19-5",
            "hello_world_source_code.Listing_20-1",
            "hello_world_source_code.Listing_20-2",
            "hello_world_source_code.Listing_20-3",
            "hello_world_source_code.Listing_20-4",
            "hello_world_source_code.Listing_23-10",
            "hello_world_source_code.Listing_23-11",
            "hello_world_source_code.Listing_23-5",
            "hello_world_source_code.Listing_23-6",
            "hello_world_source_code.Listing_23-7",
            "hello_world_source_code.Listing_23-8",
            "hello_world_source_code.Listing_23-9",
            "hello_world_source_code.Listing_24-1",
            "hello_world_source_code.Listing_24-2",
            "hello_world_source_code.Listing_24-3",
            "hello_world_source_code.Listing_24-4",
            "hello_world_source_code.cards",
            "hello_world_source_code.circleai",
            "hello_world_source_code.crazy_eights",
            "hello_world_source_code.listing_1-1",
            "hello_world_source_code.listing_1-2",
            "hello_world_source_code.listing_10-1",
            "hello_world_source_code.listing_11-1",
            "hello_world_source_code.listing_11-2",
            "hello_world_source_code.listing_11-3",
            "hello_world_source_code.listing_11-4",
            "hello_world_source_code.listing_11-5",
            "hello_world_source_code.listing_21-1",
            "hello_world_source_code.listing_22-1",
            "hello_world_source_code.listing_22-2",
            "hello_world_source_code.listing_22-3",
            "hello_world_source_code.listing_22-4",
            "hello_world_source_code.listing_22-5",
            "hello_world_source_code.listing_22-6",
            "hello_world_source_code.listing_22-7",
            "hello_world_source_code.listing_22-8",
            "hello_world_source_code.listing_23-1",
            "hello_world_source_code.listing_23-2",
            "hello_world_source_code.listing_23-3",
            "hello_world_source_code.listing_23-4",
            "hello_world_source_code.listing_25-1",
            "hello_world_source_code.listing_25-2",
            "hello_world_source_code.listing_25-3",
            "hello_world_source_code.listing_26-1",
            "hello_world_source_code.listing_26-2",
            "hello_world_source_code.listing_5-1",
            "hello_world_source_code.listing_5-2",
            "hello_world_source_code.listing_5-3",
            "hello_world_source_code.listing_5-4",
            "hello_world_source_code.listing_6-1",
            "hello_world_source_code.listing_6-2",
            "hello_world_source_code.listing_6-3",
            "hello_world_source_code.listing_6-4",
            "hello_world_source_code.listing_6-5",
            "hello_world_source_code.listing_7-1",
            "hello_world_source_code.listing_8-1",
            "hello_world_source_code.listing_8-2",
            "hello_world_source_code.listing_8-3",
            "hello_world_source_code.listing_8-4",
            "hello_world_source_code.listing_8-5",
            "hello_world_source_code.listing_8-6",
            "hello_world_source_code.listing_8-7",
            "hello_world_source_code.listing_8-8",
            "hello_world_source_code.listing_8-9",
            "hello_world_source_code.nullai",
            "hello_world_source_code.pythonbattle",
            "hello_world_source_code.randomai"
        ],
        "version": "2.0"
    },
    "hello-world-yaz": {
        "cmdline": [],
        "modules": [
            "__init__",
            "sayhelloworld"
        ],
        "version": "0.1.0"
    },
    "hello-world3108": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.5.2.5"
    },
    "hello-worldrinki": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello1234": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hello20191124-qiguaimaomao": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello20191124qiguaimaomao": {
        "cmdline": [],
        "modules": [
            "hello20191124"
        ],
        "version": "1.0.0"
    },
    "hello20200509": {
        "cmdline": [],
        "modules": [
            "hello20200509"
        ],
        "version": "1.0.0"
    },
    "hello52": {
        "cmdline": [],
        "modules": [
            "hello52",
            "hello52.run",
            "hello52.util",
            "hello52.util.log",
            "hello52.version"
        ],
        "version": "0.0.5"
    },
    "helloa": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "helloaaron": {
        "cmdline": [
            "helloWorld.py"
        ],
        "modules": [
            "bin",
            "bin.helloWorld",
            "helloAaron",
            "helloAaron.welcome"
        ],
        "version": "0.3"
    },
    "hellobalazs": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hellobikelibrary": {
        "cmdline": [],
        "modules": [
            "HelloBikeLibrary",
            "HelloBikeLibrary.common",
            "HelloBikeLibrary.con_mysql",
            "HelloBikeLibrary.data_conversion",
            "HelloBikeLibrary.get_thirdInfo",
            "HelloBikeLibrary.request",
            "HelloBikeLibrary.version"
        ],
        "version": "1.1.1"
    },
    "hellobikelibrary2": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hellobluenove": {
        "cmdline": [],
        "modules": [
            "hellobluenove"
        ],
        "version": "2.0"
    },
    "hellobomma": {
        "cmdline": [],
        "modules": [
            "sample.__.init__",
            "sample.hello"
        ],
        "version": "1.0.4"
    },
    "hellobye": {
        "cmdline": [],
        "modules": [
            "hellobye",
            "hellobye.hellobye"
        ],
        "version": "0.0.1"
    },
    "hellocase": {
        "cmdline": [],
        "modules": [
            "caseSelector"
        ],
        "version": "1.0.1"
    },
    "hellocasechhavi": {
        "cmdline": [],
        "modules": [
            "newPackage"
        ],
        "version": "1.0.0"
    },
    "hellocasehw": {
        "cmdline": [],
        "modules": [
            "caseSelector2"
        ],
        "version": "1.0.1"
    },
    "hellocaseul": {
        "cmdline": [],
        "modules": [
            "caseSelector2"
        ],
        "version": "1.0.1"
    },
    "hellocaseulw": {
        "cmdline": [],
        "modules": [
            "caseSelector2"
        ],
        "version": "1.0.1"
    },
    "hellocdw": {
        "cmdline": [],
        "modules": [
            "hellocdw"
        ],
        "version": "0.0.2"
    },
    "hellocivis": {
        "cmdline": [],
        "modules": [
            "hellocivis",
            "hellocivis.api",
            "hellocivis.hello_civis"
        ],
        "version": "1.0.5"
    },
    "hellocow": {
        "cmdline": [],
        "modules": [
            "hellocow",
            "hellocow.hellocow"
        ],
        "version": "0.1"
    },
    "hellodai22": {
        "cmdline": [],
        "modules": [
            "hello",
            "nihao"
        ],
        "version": "1.0"
    },
    "hellodepils": {
        "cmdline": [],
        "modules": [
            "hellodepils"
        ],
        "version": "0.1"
    },
    "hellodeploy": {
        "cmdline": [],
        "modules": [
            "hellodeploy",
            "hellodeploy.cli",
            "hellodeploy.settings",
            "hellodeploy.utils"
        ],
        "version": "2.5"
    },
    "helloderek": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellodmt2": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hellodoodle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellodoycode": {
        "cmdline": [],
        "modules": [
            "hellodoycode",
            "hellodoycode.helloworld1",
            "hellodoycode.helloworld2",
            "hellodoycode.helloworld3"
        ],
        "version": "0.0.2"
    },
    "hellodude": {
        "cmdline": [],
        "modules": [
            "hellodude"
        ],
        "version": "0.0.2"
    },
    "hellodyy": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "helloeveryone": {
        "cmdline": [],
        "modules": [
            "helloeveryone",
            "helloeveryone.translate"
        ],
        "version": "0.1.0"
    },
    "helloflask": {
        "cmdline": [],
        "modules": [
            "helloflask",
            "helloflask.classes",
            "helloflask.cmdline",
            "helloflask.controllers",
            "helloflask.controllers.os_utils",
            "helloflask.controllers.packages_utils",
            "helloflask.controllers.snippets_utils",
            "helloflask.controllers.ui_utils",
            "helloflask.controllers.venv_utils",
            "helloflask.run",
            "helloflask.snippets",
            "helloflask.snippets.app",
            "helloflask.snippets.run"
        ],
        "version": "1.2.0"
    },
    "helloforcalvin12": {
        "cmdline": [],
        "modules": [
            "hello"
        ],
        "version": "1.2.0"
    },
    "hellofresh-oa-data": {
        "cmdline": [],
        "modules": [
            "hellofresh_data",
            "hellofresh_data.aws_s3",
            "hellofresh_data.bodega_connect",
            "hellofresh_data.data_master",
            "hellofresh_data.google_drive_tools",
            "hellofresh_data.impala_reader",
            "hellofresh_data.logging_setup",
            "hellofresh_data.parameter_store"
        ],
        "version": "0.3.27"
    },
    "hellogoodbye": {
        "cmdline": [],
        "modules": [
            "hellogoodbye"
        ],
        "version": "0.0.2"
    },
    "hellogrpc": {
        "cmdline": [],
        "modules": [
            "hellogrpc",
            "hellogrpc.hellogrpc_pb2",
            "hellogrpc.hellogrpc_pb2_grpc"
        ],
        "version": "0.2.0"
    },
    "hellogui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellohello": {
        "cmdline": [],
        "modules": [
            "hellohello",
            "hellohello.func"
        ],
        "version": "0.0.3"
    },
    "hellohyperas": {
        "cmdline": [],
        "modules": [
            "hellohyperas",
            "hellohyperas.distributions",
            "hellohyperas.ensemble",
            "hellohyperas.optim",
            "hellohyperas.utils"
        ],
        "version": "1.0.0"
    },
    "helloiammayur": {
        "cmdline": [],
        "modules": [],
        "version": "1.4"
    },
    "helloipv": {
        "cmdline": [],
        "modules": [
            "ipv"
        ],
        "version": "1.0"
    },
    "hellojdh99": {
        "cmdline": [],
        "modules": [
            "hellojdh99"
        ],
        "version": "1.1"
    },
    "hellojosh": {
        "cmdline": [],
        "modules": [
            "helloJosh",
            "helloJosh.welcome"
        ],
        "version": "0.1"
    },
    "hellojr": {
        "cmdline": [],
        "modules": [
            "hellojr",
            "hellojr.addition",
            "hellojr.addition_tests",
            "hellojr.command",
            "hellojr.command_tests",
            "hellojr.localization",
            "hellojr.localization_tests",
            "hellojr.multiplcation_tests",
            "hellojr.multiplication",
            "hellojr.web",
            "hellojr.web_tests"
        ],
        "version": "1.0.2"
    },
    "hellokitty": {
        "cmdline": [],
        "modules": [
            "hellokitty",
            "hellokitty.meow"
        ],
        "version": "0.0.6"
    },
    "hellokyle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellolan": {
        "cmdline": [],
        "modules": [
            "hellolan",
            "hellolan.hellolan"
        ],
        "version": "0.0.6"
    },
    "hellolib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellomanuworld": {
        "cmdline": [
            "hellomanuworld"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hellomars": {
        "cmdline": [],
        "modules": [
            "hellomars"
        ],
        "version": "1.0.0"
    },
    "hellomeme": {
        "cmdline": [],
        "modules": [
            "hellomeme",
            "hellomeme.welcome"
        ],
        "version": "0.2"
    },
    "hellomyname": {
        "cmdline": [],
        "modules": [
            "helloMyName",
            "helloMyName.welcome"
        ],
        "version": "0.2"
    },
    "helloname": {
        "cmdline": [],
        "modules": [
            "helloname"
        ],
        "version": "0.2"
    },
    "hellonbdev": {
        "cmdline": [],
        "modules": [
            "hellonbdev",
            "hellonbdev._nbdev",
            "hellonbdev.core"
        ],
        "version": "0.0.3"
    },
    "hellonlp": {
        "cmdline": [],
        "modules": [
            "hellonlp",
            "hellonlp.ChineseWordSegmentation",
            "hellonlp.ChineseWordSegmentation.discovery",
            "hellonlp.ChineseWordSegmentation.hyperparameters",
            "hellonlp.ChineseWordSegmentation.modules",
            "hellonlp.ChineseWordSegmentation.probability",
            "hellonlp.ChineseWordSegmentation.segment_entropy",
            "hellonlp.ChineseWordSegmentation.tokenization",
            "hellonlp.ChineseWordSegmentation.utils"
        ],
        "version": "0.2.23"
    },
    "hellopackage": {
        "cmdline": [],
        "modules": [
            "hellopackage",
            "hellopackage.hello"
        ],
        "version": "0.0.1"
    },
    "hellopy": {
        "cmdline": [],
        "modules": [
            "main",
            "main.main",
            "ne1",
            "ne1.fe",
            "v",
            "v.call"
        ],
        "version": "1.0"
    },
    "hellopypa": {
        "cmdline": [],
        "modules": [
            "hellopypa",
            "hellopypa.hellopypa",
            "hellopypa.version"
        ],
        "version": "0.0.11"
    },
    "hellopypi": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "hellopython": {
        "cmdline": [],
        "modules": [],
        "version": "0.10"
    },
    "hellopythonbymirror": {
        "cmdline": [],
        "modules": [
            "hellopythonbymirror",
            "hellopythonbymirror.color",
            "hellopythonbymirror.sayHello",
            "hellopythonbymirror.templates"
        ],
        "version": "0.1.9"
    },
    "hellopythonmanumg": {
        "cmdline": [],
        "modules": [
            "app"
        ],
        "version": "1.0"
    },
    "helloqinfei": {
        "cmdline": [],
        "modules": [
            "helloqinfei"
        ],
        "version": "1.0.0"
    },
    "hellorap": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5.1"
    },
    "hellorap1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellorapp": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "hellorp-test": {
        "cmdline": [],
        "modules": [
            "hello"
        ],
        "version": "1.2.0"
    },
    "hellosagemaker-2020": {
        "cmdline": [],
        "modules": [
            "hellosagemaker_2020",
            "hellosagemaker_2020.cli",
            "hellosagemaker_2020.hellosagemaker_2020"
        ],
        "version": "0.1.0"
    },
    "hellosamjones": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloshopply": {
        "cmdline": [],
        "modules": [
            "helloshopply.code",
            "helloshopply.code.hello_es",
            "helloshopply.code.hello_shopply",
            "helloshopply.code.server",
            "helloshopply.test",
            "helloshopply.test.test_hello_es"
        ],
        "version": "0.0.3"
    },
    "hellosign": {
        "cmdline": [],
        "modules": [
            "hellosign",
            "hellosign.api",
            "hellosign.hello_objects",
            "hellosign.hellosign"
        ],
        "version": "0.1.2"
    },
    "hellosign-python-sdk": {
        "cmdline": [],
        "modules": [
            "hellosign_sdk",
            "hellosign_sdk.hsclient",
            "hellosign_sdk.resource",
            "hellosign_sdk.resource.account",
            "hellosign_sdk.resource.apiapp",
            "hellosign_sdk.resource.embedded",
            "hellosign_sdk.resource.resource",
            "hellosign_sdk.resource.resource_list",
            "hellosign_sdk.resource.signature",
            "hellosign_sdk.resource.signature_request",
            "hellosign_sdk.resource.team",
            "hellosign_sdk.resource.template",
            "hellosign_sdk.resource.unclaimed_draft",
            "hellosign_sdk.utils",
            "hellosign_sdk.utils.exception",
            "hellosign_sdk.utils.hsaccesstokenauth",
            "hellosign_sdk.utils.hsformat",
            "hellosign_sdk.utils.request"
        ],
        "version": "4.0.0"
    },
    "hellosign-python-sdk-custom": {
        "cmdline": [],
        "modules": [
            "hellosign_sdk",
            "hellosign_sdk.hsclient",
            "hellosign_sdk.resource",
            "hellosign_sdk.resource.account",
            "hellosign_sdk.resource.embedded",
            "hellosign_sdk.resource.resource",
            "hellosign_sdk.resource.resource_list",
            "hellosign_sdk.resource.signature",
            "hellosign_sdk.resource.signature_request",
            "hellosign_sdk.resource.team",
            "hellosign_sdk.resource.template",
            "hellosign_sdk.resource.unclaimed_draft",
            "hellosign_sdk.utils",
            "hellosign_sdk.utils.exception",
            "hellosign_sdk.utils.hsaccesstokenauth",
            "hellosign_sdk.utils.hsformat",
            "hellosign_sdk.utils.request"
        ],
        "version": "1"
    },
    "hellosignpythonsdk": {
        "cmdline": [],
        "modules": [
            "hellosignpythonsdk",
            "hellosignpythonsdk.cli"
        ],
        "version": "0.1.1"
    },
    "hellosina": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellosriram": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hellot": {
        "cmdline": [],
        "modules": [
            "helloT"
        ],
        "version": "1.0.0"
    },
    "hellotest": {
        "cmdline": [],
        "modules": [
            "hellotest",
            "hellotest.hello"
        ],
        "version": "0.1"
    },
    "hellotest-eduardo": {
        "cmdline": [],
        "modules": [
            "PyHydro",
            "PyHydro.dadosgerais",
            "PyHydro.fcf",
            "PyHydro.hidr",
            "PyHydro.interc",
            "PyHydro.mddh",
            "PyHydro.planerg",
            "PyHydro.pmo",
            "PyHydro.resequiv",
            "PyHydro.submercado",
            "PyHydro.term"
        ],
        "version": "0.0.9"
    },
    "hellotest987": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hellotest988": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellotest989": {
        "cmdline": [],
        "modules": [
            "py_sample",
            "py_sample.hello"
        ],
        "version": "1.1.2"
    },
    "hellotestpackage": {
        "cmdline": [],
        "modules": [
            "greetings",
            "greetings.hello",
            "greetings.world"
        ],
        "version": "3.0.0"
    },
    "hellotestxlc": {
        "cmdline": [],
        "modules": [
            "hellotestxlc",
            "hellotestxlc.start"
        ],
        "version": "0.1.0"
    },
    "hellotimostar": {
        "cmdline": [],
        "modules": [
            "hellotimostar",
            "hellotimostar.hello"
        ],
        "version": "1.0.1"
    },
    "hellotome": {
        "cmdline": [],
        "modules": [
            "hellotome",
            "hellotome.goodbye",
            "hellotome.hello"
        ],
        "version": "2.0"
    },
    "hellotrik": {
        "cmdline": [],
        "modules": [
            "hellotrik",
            "hellotrik/examples",
            "hellotrik/examples.hw",
            "hellotrik/examples.mnist",
            "hellotrik/kernel",
            "hellotrik/kernel.uwnet"
        ],
        "version": "0.0.0"
    },
    "helloturan": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "hellouniverse": {
        "cmdline": [],
        "modules": [
            "hellouniverse",
            "tests"
        ],
        "version": "0.1.1"
    },
    "hellouser": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hellouser-bnb": {
        "cmdline": [],
        "modules": [
            "hello"
        ],
        "version": "0.0.1"
    },
    "hellouser123": {
        "cmdline": [],
        "modules": [
            "hellouser123",
            "hellouser123.hello"
        ],
        "version": "0.0.1"
    },
    "hellovansel": {
        "cmdline": [],
        "modules": [
            "HelloVansel"
        ],
        "version": "1.0.0"
    },
    "hellovivianas9244": {
        "cmdline": [
            "cluster.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hellovivianas9250": {
        "cmdline": [
            "week9project.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hellovivianas9290": {
        "cmdline": [
            "cluster.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hellow": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hellowebapp-deploy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.4"
    },
    "hellowolrd12345": {
        "cmdline": [],
        "modules": [
            "helloWolrd12345"
        ],
        "version": "1.0.1"
    },
    "hellowor-ldsssss": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.Hello_World"
        ],
        "version": "0.0.1"
    },
    "hellowor-ldssssss": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.Hello_World"
        ],
        "version": "0.0.1"
    },
    "hellowor-ldsssssss": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.Hello_World"
        ],
        "version": "0.0.1"
    },
    "hellowor-ldsssssssa": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.Hello_World"
        ],
        "version": "0.0.1"
    },
    "helloword": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworks-python-sdk": {
        "cmdline": [],
        "modules": [
            "helloworks",
            "helloworks.hwclient",
            "helloworks.utils",
            "helloworks.utils.access",
            "helloworks.utils.api_endpoints",
            "helloworks.utils.exceptions",
            "helloworks.utils.helper",
            "helloworks.utils.request"
        ],
        "version": "0.4"
    },
    "helloworld": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.config",
            "helloworld.config.environment",
            "helloworld.config.middleware",
            "helloworld.config.routing",
            "helloworld.controllers",
            "helloworld.controllers.error",
            "helloworld.controllers.hello",
            "helloworld.lib",
            "helloworld.lib.app_globals",
            "helloworld.lib.base",
            "helloworld.lib.helpers",
            "helloworld.model",
            "helloworld.tests",
            "helloworld.tests.functional",
            "helloworld.tests.functional.test_hello",
            "helloworld.tests.test_models",
            "helloworld.websetup"
        ],
        "version": "0.1dev"
    },
    "helloworld-1": {
        "cmdline": [
            "test_script.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "helloworld-1m1": {
        "cmdline": [],
        "modules": [
            "slashdot"
        ],
        "version": "0.1"
    },
    "helloworld-2015": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.core"
        ],
        "version": "1.0.0"
    },
    "helloworld-20200320": {
        "cmdline": [],
        "modules": [
            "helloworld_20200320",
            "helloworld_20200320.cli",
            "helloworld_20200320.helloworld_20200320"
        ],
        "version": "0.1.0"
    },
    "helloworld-ajilraju": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.helloworld"
        ],
        "version": "0.0.3"
    },
    "helloworld-anubharathpabba": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworld-apoorva-vaidya": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld-butageek-01": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-bvd": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld-custom": {
        "cmdline": [],
        "modules": [
            "hello_world"
        ],
        "version": "0.0.2"
    },
    "helloworld-deanaz": {
        "cmdline": [],
        "modules": [
            "helloworld_deanaz"
        ],
        "version": "0.0.3"
    },
    "helloworld-dylanballback": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-eduardo": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "helloworld-inazir-406": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "helloworld-jsnook": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.hi",
            "helloworld.hiname"
        ],
        "version": "0.0.2"
    },
    "helloworld-judy2k": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-kienast": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "helloworld-library-friendryu": {
        "cmdline": [],
        "modules": [
            "HelloWorld",
            "HelloWorld.HelloWorldKeywords"
        ],
        "version": "1.0"
    },
    "helloworld-library-jintana08": {
        "cmdline": [],
        "modules": [
            "HelloWorld",
            "HelloWorld.HelloWorldKeywords"
        ],
        "version": "2.0"
    },
    "helloworld-message": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld-mj": {
        "cmdline": [],
        "modules": [
            "hello"
        ],
        "version": "0.0.1"
    },
    "helloworld-mkmenta": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.2"
    },
    "helloworld-mytest": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "helloworld-nagalatha": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-nb-extension": {
        "cmdline": [
            "jupyter-contrib-nbextension"
        ],
        "modules": [
            "jupyter_contrib_nbextensions",
            "jupyter_contrib_nbextensions.application",
            "jupyter_contrib_nbextensions.config_scripts",
            "jupyter_contrib_nbextensions.config_scripts.highlight_html_cfg",
            "jupyter_contrib_nbextensions.config_scripts.highlight_latex_cfg",
            "jupyter_contrib_nbextensions.install",
            "jupyter_contrib_nbextensions.migrate",
            "jupyter_contrib_nbextensions.nbconvert_support",
            "jupyter_contrib_nbextensions.nbconvert_support.embedhtml",
            "jupyter_contrib_nbextensions.nbconvert_support.pp_highlighter",
            "jupyter_contrib_nbextensions.nbconvert_support.pre_codefolding",
            "jupyter_contrib_nbextensions.nbconvert_support.pre_collapsible_headings",
            "jupyter_contrib_nbextensions.nbconvert_support.pre_pymarkdown",
            "jupyter_contrib_nbextensions.nbconvert_support.pre_svg2pdf",
            "jupyter_contrib_nbextensions.nbconvert_support.strip_output_prompt",
            "jupyter_contrib_nbextensions.nbconvert_support.toc2"
        ],
        "version": "0.2"
    },
    "helloworld-ngealy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld-notha99y": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-oliverwilletts": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.hw",
            "helloworld.test_hw"
        ],
        "version": "1.2"
    },
    "helloworld-package": {
        "cmdline": [],
        "modules": [
            "helloworld-package",
            "helloworld-package.helloworld",
            "helloworld-package.main"
        ],
        "version": "0.1"
    },
    "helloworld-pypi": {
        "cmdline": [],
        "modules": [
            "helloworld_pypi",
            "helloworld_pypi.helloworld"
        ],
        "version": "0.1"
    },
    "helloworld-pypi-data": {
        "cmdline": [],
        "modules": [
            "HelloWorld_PyPI"
        ],
        "version": "0.1"
    },
    "helloworld-s528358": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld-serhii73": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-sida": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld-sriman": {
        "cmdline": [],
        "modules": [
            "HelloWorld",
            "HelloWorld.hello"
        ],
        "version": "0.0.1"
    },
    "helloworld-sujanay": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-tc2-20200319": {
        "cmdline": [],
        "modules": [
            "helloworld_tc2_20200319",
            "helloworld_tc2_20200319.cli",
            "helloworld_tc2_20200319.helloworld_tc2_20200319"
        ],
        "version": "0.1.0"
    },
    "helloworld-test": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-v1": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "helloworld-v3030": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworld-veldhaenchen": {
        "cmdline": [],
        "modules": [
            "helloworld_veldhaenchen"
        ],
        "version": "0.0.2"
    },
    "helloworld-x47892": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworld-xiaoyanli": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld-yhp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworld1": {
        "cmdline": [],
        "modules": [
            "d3"
        ],
        "version": "1.1.0"
    },
    "helloworld1995": {
        "cmdline": [],
        "modules": [
            "helloworld1995",
            "helloworld1995.helloworld"
        ],
        "version": "0.13"
    },
    "helloworld2016": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworld2019": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.hello",
            "helloworld.images"
        ],
        "version": "0.1"
    },
    "helloworld2020": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld2300": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld32332323": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworld3663": {
        "cmdline": [],
        "modules": [
            "helloworld3663"
        ],
        "version": "0.0.1"
    },
    "helloworldak": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworldbvd": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "helloworlddvbhat": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "1.0"
    },
    "helloworldextreme": {
        "cmdline": [],
        "modules": [
            "helloworldextreme"
        ],
        "version": "0.0.1"
    },
    "helloworldfredytrees": {
        "cmdline": [],
        "modules": [
            "helloWorld"
        ],
        "version": "1.0.1"
    },
    "helloworldgeez": {
        "cmdline": [],
        "modules": [
            "helloworldgeez",
            "helloworldgeez.cli",
            "helloworldgeez.fun"
        ],
        "version": "0.3.1"
    },
    "helloworldinpip": {
        "cmdline": [],
        "modules": [
            "HelloWorldInPIP",
            "HelloWorldInPIP.HelloWorldInPIP"
        ],
        "version": "0.0.2"
    },
    "helloworldjcap": {
        "cmdline": [],
        "modules": [
            "helloworld"
        ],
        "version": "0.0.1"
    },
    "helloworldkent": {
        "cmdline": [],
        "modules": [
            "helloworldkent",
            "helloworldkent.test"
        ],
        "version": "0.1"
    },
    "helloworldname": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworldnishantsalot": {
        "cmdline": [],
        "modules": [
            "scipytest",
            "scipytest.ScipyTest",
            "testbuiltins",
            "testbuiltins.testbuiltinFunctions",
            "testnumpy",
            "testnumpy.testnp",
            "testpython",
            "testpython.Plot",
            "testpython.RandomWalk",
            "testpython.app",
            "testpython.inheritance",
            "testpython.visual",
            "threadingtest",
            "threadingtest.Hi",
            "threadingtest.PriorityQueueTest"
        ],
        "version": "0.2"
    },
    "helloworldoffelix": {
        "cmdline": [],
        "modules": [
            "helloworldoffelix",
            "helloworldoffelix.add"
        ],
        "version": "0.1"
    },
    "helloworldpack": {
        "cmdline": [
            "helloworld"
        ],
        "modules": [],
        "version": "1.1"
    },
    "helloworldpackage": {
        "cmdline": [],
        "modules": [
            "helloworld.helloworld"
        ],
        "version": "1.3"
    },
    "helloworldrinki": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworldrinki1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworldsssss": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworldsyasya": {
        "cmdline": [],
        "modules": [
            "helloworldsyasya"
        ],
        "version": "0.0.1"
    },
    "helloworldtest": {
        "cmdline": [],
        "modules": [
            "helloworldtest",
            "helloworldtest.cli",
            "helloworldtest.helloworldtest"
        ],
        "version": "0.2.0"
    },
    "helloworldtest20": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "helloworldtg": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "helloworldwcy": {
        "cmdline": [
            "say_hello.py"
        ],
        "modules": [
            "myapp",
            "myapp.great"
        ],
        "version": "0.1"
    },
    "helloworldxiaoyanli": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hellowworlde": {
        "cmdline": [],
        "modules": [
            "hellowworlde"
        ],
        "version": "0.1"
    },
    "hellp": {
        "cmdline": [],
        "modules": [
            "hellp",
            "hellp.factory",
            "hellp.pipe",
            "hellp.version"
        ],
        "version": "0.0.1"
    },
    "hellpy": {
        "cmdline": [],
        "modules": [
            "hellpy",
            "hellpy.exceptions",
            "hellpy.requests",
            "hellpy.store",
            "hellpy.structures",
            "hellpy.structures.builders",
            "hellpy.structures.response",
            "hellpy.structures.statements",
            "hellpy.structures.types",
            "hellpy.tokens",
            "hellpy.utils"
        ],
        "version": "1.1.0"
    },
    "helm": {
        "cmdline": [
            "helm_launcher.py"
        ],
        "modules": [
            "helm",
            "helm.color",
            "helm.core",
            "helm.model",
            "helm.models",
            "helm.models.cpu",
            "helm.models.fs",
            "helm.models.mem",
            "helm.models.network",
            "helm.primitives",
            "helm.theme",
            "helm.view",
            "helm.views",
            "helm.views.bar",
            "helm.views.histogram",
            "helm.views.ring",
            "helm.widget",
            "helm.widgets",
            "helm.widgets.cpus",
            "helm.widgets.fss",
            "helm.widgets.memswap",
            "helm.widgets.networks"
        ],
        "version": "0.4"
    },
    "helm-charts": {
        "cmdline": [],
        "modules": [
            "helm_charts",
            "helm_charts.helm_functions",
            "helm_charts.helper",
            "helm_charts.init_checks",
            "helm_charts.k8s_charts_installer",
            "helm_charts.k8s_charts_installer_unittest",
            "helm_charts.kubectl_functions",
            "helm_charts.menu_create_namespace",
            "helm_charts.menu_delete_charts",
            "helm_charts.menu_delete_namespace",
            "helm_charts.menu_delete_repos",
            "helm_charts.menu_install_charts",
            "helm_charts.menu_install_repo"
        ],
        "version": "1.0.16"
    },
    "helm-python": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "helm-sign": {
        "cmdline": [],
        "modules": [
            "HelmSign",
            "HelmSign.chart",
            "HelmSign.main"
        ],
        "version": "0.1.1"
    },
    "helm-template-generator": {
        "cmdline": [],
        "modules": [
            "helm_template_generator.args",
            "helm_template_generator.generator"
        ],
        "version": "2.0"
    },
    "helm-upgrade": {
        "cmdline": [],
        "modules": [
            "helm_upgrade",
            "helm_upgrade.__version__",
            "helm_upgrade.app",
            "helm_upgrade.cli"
        ],
        "version": "0.0.2"
    },
    "helmbump": {
        "cmdline": [],
        "modules": [
            "helmbump",
            "helmbump.helmbump",
            "helmbump.helmbump_unittest"
        ],
        "version": "0.1.1"
    },
    "helmer": {
        "cmdline": [],
        "modules": [
            "helmer",
            "helmer.helmer"
        ],
        "version": "0.0.4"
    },
    "helmholtz": {
        "cmdline": [],
        "modules": [
            "helmholtz",
            "helmholtz.access_control",
            "helmholtz.access_control.admin",
            "helmholtz.access_control.backends",
            "helmholtz.access_control.decorators",
            "helmholtz.access_control.forms",
            "helmholtz.access_control.middleware",
            "helmholtz.access_control.models",
            "helmholtz.access_control.overload",
            "helmholtz.access_control.templatetags",
            "helmholtz.access_control.templatetags.access_control",
            "helmholtz.access_control.urls",
            "helmholtz.access_control.views",
            "helmholtz.access_request",
            "helmholtz.access_request.admin",
            "helmholtz.access_request.forms",
            "helmholtz.access_request.models",
            "helmholtz.access_request.templatetags",
            "helmholtz.access_request.templatetags.access_request",
            "helmholtz.access_request.urls",
            "helmholtz.access_request.views",
            "helmholtz.analysis",
            "helmholtz.analysis.admin",
            "helmholtz.analysis.fields",
            "helmholtz.analysis.models",
            "helmholtz.analysis.models.analysis",
            "helmholtz.analysis.models.component",
            "helmholtz.analysis.models.configuration",
            "helmholtz.analysis.models.pin",
            "helmholtz.analysis.models.potential",
            "helmholtz.analysis.templatetags",
            "helmholtz.analysis.templatetags.operations",
            "helmholtz.analysis.tools",
            "helmholtz.analysis.tools.core",
            "helmholtz.analysis.tools.core.analyses",
            "helmholtz.analysis.tools.core.authentication",
            "helmholtz.analysis.tools.core.components",
            "helmholtz.analysis.tools.core.decorators",
            "helmholtz.analysis.tools.core.pins",
            "helmholtz.analysis.tools.factories",
            "helmholtz.analysis.tools.factories.common",
            "helmholtz.analysis.tools.factories.django",
            "helmholtz.analysis.tools.factories.django.analyses",
            "helmholtz.analysis.tools.factories.django.components",
            "helmholtz.analysis.tools.library",
            "helmholtz.analysis.tools.library.base_components",
            "helmholtz.analysis.tools.library.base_components.action_potential_filter",
            "helmholtz.analysis.tools.library.base_components.multiplier",
            "helmholtz.analysis.tools.library.base_components.signals",
            "helmholtz.analysis.tools.library.complex_components",
            "helmholtz.analysis.tools.library.complex_components.complex_component",
            "helmholtz.analysis.tools.managers",
            "helmholtz.analysis.tools.managers.common",
            "helmholtz.analysis.tools.managers.django_manager",
            "helmholtz.annotation",
            "helmholtz.annotation.admin",
            "helmholtz.annotation.fields",
            "helmholtz.annotation.models",
            "helmholtz.bin",
            "helmholtz.bin.helmholtz-admin",
            "helmholtz.cells",
            "helmholtz.cells.admin",
            "helmholtz.cells.models",
            "helmholtz.chemistry",
            "helmholtz.chemistry.admin",
            "helmholtz.chemistry.models",
            "helmholtz.core",
            "helmholtz.core.context_processors",
            "helmholtz.core.decorators",
            "helmholtz.core.dependencies",
            "helmholtz.core.fields",
            "helmholtz.core.loggers",
            "helmholtz.core.management",
            "helmholtz.core.management.commands",
            "helmholtz.core.management.commands.populate_site",
            "helmholtz.core.management.commands.startproject",
            "helmholtz.core.models",
            "helmholtz.core.modules",
            "helmholtz.core.populate",
            "helmholtz.core.schema",
            "helmholtz.core.shortcuts",
            "helmholtz.drug_applications",
            "helmholtz.drug_applications.admin",
            "helmholtz.drug_applications.models",
            "helmholtz.editor",
            "helmholtz.editor.commands",
            "helmholtz.editor.form_generator",
            "helmholtz.editor.forms",
            "helmholtz.editor.forms.access_control",
            "helmholtz.editor.forms.access_request",
            "helmholtz.editor.forms.acquisition",
            "helmholtz.editor.forms.analysis",
            "helmholtz.editor.forms.annotation",
            "helmholtz.editor.forms.chemistry",
            "helmholtz.editor.forms.community",
            "helmholtz.editor.forms.drug_applications",
            "helmholtz.editor.forms.editor",
            "helmholtz.editor.forms.electrodes",
            "helmholtz.editor.forms.electrophysiology",
            "helmholtz.editor.forms.equipment",
            "helmholtz.editor.forms.experiment",
            "helmholtz.editor.forms.location",
            "helmholtz.editor.forms.measurements",
            "helmholtz.editor.forms.methods",
            "helmholtz.editor.forms.neural_structure",
            "helmholtz.editor.forms.neuralstructures",
            "helmholtz.editor.forms.people",
            "helmholtz.editor.forms.preparation",
            "helmholtz.editor.forms.preparations",
            "helmholtz.editor.forms.recording",
            "helmholtz.editor.forms.signal",
            "helmholtz.editor.forms.species",
            "helmholtz.editor.forms.stimuli",
            "helmholtz.editor.forms.storage",
            "helmholtz.editor.forms.trackers",
            "helmholtz.editor.forms.units",
            "helmholtz.editor.management",
            "helmholtz.editor.management.commands",
            "helmholtz.editor.management.commands.access_control_contraints",
            "helmholtz.editor.management.commands.analysis_constraints",
            "helmholtz.editor.management.commands.chemistry_constraints",
            "helmholtz.editor.management.commands.editor_constraints",
            "helmholtz.editor.management.commands.equipment_constraints",
            "helmholtz.editor.management.commands.experiment_constraints",
            "helmholtz.editor.management.commands.measurements_constraints",
            "helmholtz.editor.management.commands.neuralstructures_constraints",
            "helmholtz.editor.management.commands.people_constraints",
            "helmholtz.editor.management.commands.populate_editor",
            "helmholtz.editor.management.commands.preparations_constraints",
            "helmholtz.editor.management.commands.signals_constraints",
            "helmholtz.editor.management.commands.species_constraints",
            "helmholtz.editor.management.commands.stimulation_constraints",
            "helmholtz.editor.management.commands.storage_constraints",
            "helmholtz.editor.management.commands.trackers_constraints",
            "helmholtz.editor.models",
            "helmholtz.editor.receivers",
            "helmholtz.editor.shortcuts",
            "helmholtz.editor.templatetags",
            "helmholtz.editor.templatetags.markups",
            "helmholtz.editor.templatetags.stripwhitespaces",
            "helmholtz.editor.urls",
            "helmholtz.editor.view",
            "helmholtz.editor.views",
            "helmholtz.editor.views.editor",
            "helmholtz.editor.widgets",
            "helmholtz.electricalstimulation",
            "helmholtz.electricalstimulation.admin",
            "helmholtz.electricalstimulation.models",
            "helmholtz.electrophysiology",
            "helmholtz.electrophysiology.admin",
            "helmholtz.electrophysiology.fields",
            "helmholtz.electrophysiology.models",
            "helmholtz.equipment",
            "helmholtz.equipment.admin",
            "helmholtz.equipment.models",
            "helmholtz.experiment",
            "helmholtz.experiment.admin",
            "helmholtz.experiment.forms",
            "helmholtz.experiment.models",
            "helmholtz.experiment.templatetags",
            "helmholtz.experiment.templatetags.experiments",
            "helmholtz.experiment.urls",
            "helmholtz.experiment.views",
            "helmholtz.fields",
            "helmholtz.histochemistry",
            "helmholtz.histochemistry.admin",
            "helmholtz.histochemistry.models",
            "helmholtz.location",
            "helmholtz.location.admin",
            "helmholtz.location.models",
            "helmholtz.measurements",
            "helmholtz.measurements.admin",
            "helmholtz.measurements.models",
            "helmholtz.neuralstructures",
            "helmholtz.neuralstructures.admin",
            "helmholtz.neuralstructures.management",
            "helmholtz.neuralstructures.management.commands",
            "helmholtz.neuralstructures.management.commands.populate_atlases",
            "helmholtz.neuralstructures.management.commands.populate_brain_regions",
            "helmholtz.neuralstructures.management.commands.populate_cell_types",
            "helmholtz.neuralstructures.models",
            "helmholtz.optical_imaging",
            "helmholtz.optical_imaging.admin",
            "helmholtz.optical_imaging.models",
            "helmholtz.people",
            "helmholtz.people.admin",
            "helmholtz.people.fields",
            "helmholtz.people.forms",
            "helmholtz.people.management",
            "helmholtz.people.management.commands",
            "helmholtz.people.management.commands.populate_skill_types",
            "helmholtz.people.models",
            "helmholtz.people.templatetags",
            "helmholtz.people.templatetags.profiles",
            "helmholtz.people.urls",
            "helmholtz.people.views",
            "helmholtz.preparations",
            "helmholtz.preparations.admin",
            "helmholtz.preparations.models",
            "helmholtz.preparations.templatetags",
            "helmholtz.preparations.templatetags.preparations",
            "helmholtz.reconstruction",
            "helmholtz.reconstruction.admin",
            "helmholtz.reconstruction.models",
            "helmholtz.recording",
            "helmholtz.recording.admin",
            "helmholtz.recording.forms",
            "helmholtz.recording.models",
            "helmholtz.recording.templatetags",
            "helmholtz.recording.templatetags.recordings",
            "helmholtz.recording.templatetags.tags",
            "helmholtz.recording.tools",
            "helmholtz.recording.tools.filters",
            "helmholtz.recording.urls",
            "helmholtz.recording.views",
            "helmholtz.signals",
            "helmholtz.signals.admin",
            "helmholtz.signals.models",
            "helmholtz.species",
            "helmholtz.species.admin",
            "helmholtz.species.management",
            "helmholtz.species.management.commands",
            "helmholtz.species.management.commands.populate_species",
            "helmholtz.species.models",
            "helmholtz.stimulation",
            "helmholtz.stimulation.admin",
            "helmholtz.stimulation.models",
            "helmholtz.storage",
            "helmholtz.storage.admin",
            "helmholtz.storage.management",
            "helmholtz.storage.management.commands",
            "helmholtz.storage.management.commands.populate_communication_protocols",
            "helmholtz.storage.management.commands.populate_mimetypes",
            "helmholtz.storage.models",
            "helmholtz.trackers",
            "helmholtz.trackers.admin",
            "helmholtz.trackers.models",
            "helmholtz.trackers.urls",
            "helmholtz.trackers.views",
            "helmholtz.units",
            "helmholtz.units.admin",
            "helmholtz.units.fields",
            "helmholtz.units.management",
            "helmholtz.units.management.commands",
            "helmholtz.units.management.commands.populate_units",
            "helmholtz.units.models",
            "helmholtz.units.urls",
            "helmholtz.units.views",
            "helmholtz.urls",
            "helmholtz.views",
            "helmholtz.vision",
            "helmholtz.vision.admin",
            "helmholtz.vision.models",
            "helmholtz.visualstimulation",
            "helmholtz.visualstimulation.admin",
            "helmholtz.visualstimulation.models",
            "helmholtz.waveforms",
            "helmholtz.waveforms.admin",
            "helmholtz.waveforms.models"
        ],
        "version": "0.2.0"
    },
    "helmpy": {
        "cmdline": [],
        "modules": [
            "helmpy",
            "helmpy.core",
            "helmpy.core.helm_ds_m1_pv1",
            "helmpy.core.helm_ds_m1_pv2",
            "helmpy.core.helm_ds_m2_pv1",
            "helmpy.core.helm_ds_m2_pv2",
            "helmpy.core.helm_epsilon_algorithm",
            "helmpy.core.helm_pade",
            "helmpy.core.helm_pv1",
            "helmpy.core.helm_pv2",
            "helmpy.core.nr",
            "helmpy.core.nr_ds",
            "helmpy.core.write_results_to_csv"
        ],
        "version": "0.1.0rc20190802075106"
    },
    "helmpythonclient": {
        "cmdline": [],
        "modules": [
            "helmpythonclient",
            "helmpythonclient.client"
        ],
        "version": "v1.1"
    },
    "helmstack": {
        "cmdline": [],
        "modules": [],
        "version": "1.9.0"
    },
    "helmstate": {
        "cmdline": [],
        "modules": [
            "HelmState",
            "HelmState.Main",
            "HelmState.Tools",
            "HelmState.Tools.ArgumentTools",
            "HelmState.Tools.GitTools",
            "HelmState.Tools.StateHandler"
        ],
        "version": "1.0.14"
    },
    "helo": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "helotcommon": {
        "cmdline": [],
        "modules": [
            "helot",
            "helot.common",
            "helot.common.configuration",
            "helot.common.tests",
            "helot.common.tests.configuration_test"
        ],
        "version": "0.0.3"
    },
    "helotjunk": {
        "cmdline": [],
        "modules": [
            "junk",
            "junk.math",
            "junk.math.simple_calculations"
        ],
        "version": "0.0.1"
    },
    "help": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "help-selen": {
        "cmdline": [],
        "modules": [
            "helper_selen",
            "helper_selen.generation",
            "helper_selen.helper",
            "helper_selen.screenshot"
        ],
        "version": "10.0.1"
    },
    "help-support": {
        "cmdline": [],
        "modules": [
            "help_support"
        ],
        "version": "0.2"
    },
    "help-tokens": {
        "cmdline": [],
        "modules": [
            "help_tokens",
            "help_tokens.apps",
            "help_tokens.context_processor",
            "help_tokens.core",
            "help_tokens.models",
            "help_tokens.urls",
            "help_tokens.views"
        ],
        "version": "1.1.2"
    },
    "help50": {
        "cmdline": [],
        "modules": [
            "help50",
            "help50.internal"
        ],
        "version": "3.0.1"
    },
    "helpdeskbot": {
        "cmdline": [],
        "modules": [
            "helpdeskbot"
        ],
        "version": "2.2.1"
    },
    "helpdev": {
        "cmdline": [],
        "modules": [
            "helpdev"
        ],
        "version": "0.7.1"
    },
    "helpe": {
        "cmdline": [],
        "modules": [
            "helpe",
            "helpe.eda"
        ],
        "version": "0.1.1"
    },
    "helper": {
        "cmdline": [],
        "modules": [
            "helper",
            "helper.config",
            "helper.controller",
            "helper.parser",
            "helper.setupext",
            "helper.unix",
            "helper.windows"
        ],
        "version": "2.4.2"
    },
    "helper-clickhouse": {
        "cmdline": [],
        "modules": [
            "helper_clickhouse"
        ],
        "version": "0.0.6"
    },
    "helper-datetime": {
        "cmdline": [],
        "modules": [
            "helper_datetime"
        ],
        "version": "0.6"
    },
    "helper-funcs": {
        "cmdline": [],
        "modules": [
            "helper_funcs",
            "helper_funcs.helper_funcs"
        ],
        "version": "0.1.35"
    },
    "helper-functions": {
        "cmdline": [],
        "modules": [
            "helper_functions"
        ],
        "version": "2.0.11"
    },
    "helper-functions-007": {
        "cmdline": [],
        "modules": [
            "helper_functions_007.helper_functions_007"
        ],
        "version": "0.1"
    },
    "helper-object": {
        "cmdline": [],
        "modules": [
            "helper_object",
            "helper_object.funchelp"
        ],
        "version": "0.1.5"
    },
    "helper-string": {
        "cmdline": [],
        "modules": [
            "helper_string"
        ],
        "version": "0.4.2"
    },
    "helper-uri": {
        "cmdline": [],
        "modules": [
            "helper_uri"
        ],
        "version": "0.4"
    },
    "helper-zlib": {
        "cmdline": [],
        "modules": [
            "helper_zlib"
        ],
        "version": "0.0.2"
    },
    "helperlib": {
        "cmdline": [
            "hl-hexII.py",
            "hl-hexdump.py",
            "hl-unhexII.py",
            "hl-unhexdump.py"
        ],
        "modules": [
            "helperlib",
            "helperlib.binary",
            "helperlib.exception",
            "helperlib.internal",
            "helperlib.logging",
            "helperlib.minimize",
            "helperlib.spinner",
            "helperlib.terminal"
        ],
        "version": "0.5.1"
    },
    "helperlibs": {
        "cmdline": [],
        "modules": [
            "helperlibs",
            "helperlibs.bio",
            "helperlibs.bio.featurematch",
            "helperlibs.bio.seqio",
            "helperlibs.tests",
            "helperlibs.tests.bio",
            "helperlibs.tests.bio.test_featurematch",
            "helperlibs.tests.bio.test_seqio",
            "helperlibs.tests.wrappers",
            "helperlibs.tests.wrappers.test_io",
            "helperlibs.wrappers",
            "helperlibs.wrappers.io"
        ],
        "version": "0.2.1"
    },
    "helpers": {
        "cmdline": [],
        "modules": [
            "helpers"
        ],
        "version": "0.2.0"
    },
    "helpertools": {
        "cmdline": [],
        "modules": [
            "helpertools",
            "helpertools.cli",
            "helpertools.convert",
            "helpertools.decorators",
            "helpertools.filereader",
            "helpertools.http",
            "helpertools.prettyprint",
            "helpertools.testgenerator",
            "helpertools.webscrap"
        ],
        "version": "1.0.3"
    },
    "helpful": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.1"
    },
    "helpful-site": {
        "cmdline": [],
        "modules": [
            "helpful_site",
            "helpful_site.cli"
        ],
        "version": "0.1.0"
    },
    "helpfunc": {
        "cmdline": [],
        "modules": [
            "helpfunc"
        ],
        "version": "1.0.1"
    },
    "helpgen": {
        "cmdline": [],
        "modules": [
            "helpgen",
            "helpgen.decorators",
            "helpgen.parser"
        ],
        "version": "0.1"
    },
    "helpgen4android": {
        "cmdline": [],
        "modules": [
            "HelpGen4Android",
            "HelpGen4Android.config",
            "HelpGen4Android.downloadUtils",
            "HelpGen4Android.helpGen",
            "HelpGen4Android.parseUtils"
        ],
        "version": "0.3.5"
    },
    "helphelp": {
        "cmdline": [],
        "modules": [
            "helphelp"
        ],
        "version": "2.0.1"
    },
    "helping": {
        "cmdline": [],
        "modules": [
            "helping",
            "helping.helping"
        ],
        "version": "0.0.5"
    },
    "helping-conquerprogramming1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helpline-scheduler": {
        "cmdline": [],
        "modules": [],
        "version": "2019.4.8.post6"
    },
    "helplotlib": {
        "cmdline": [],
        "modules": [
            "helplotlib",
            "helplotlib.helplotlib"
        ],
        "version": "0.0.1"
    },
    "helpme": {
        "cmdline": [],
        "modules": [
            "helpme",
            "helpme.action",
            "helpme.action.record",
            "helpme.action.submit",
            "helpme.client",
            "helpme.client.config",
            "helpme.client.help",
            "helpme.client.list",
            "helpme.defaults",
            "helpme.logger",
            "helpme.logger.message",
            "helpme.logger.namer",
            "helpme.logger.progress",
            "helpme.logger.spinner",
            "helpme.main",
            "helpme.main.base",
            "helpme.main.base.auth",
            "helpme.main.base.headers",
            "helpme.main.base.http",
            "helpme.main.base.settings",
            "helpme.main.discourse",
            "helpme.main.discourse.utils",
            "helpme.main.github",
            "helpme.main.github.utils",
            "helpme.main.uservoice",
            "helpme.main.workers",
            "helpme.main.workers.tasks",
            "helpme.main.workers.worker",
            "helpme.utils",
            "helpme.utils.fileio",
            "helpme.utils.format",
            "helpme.utils.memory",
            "helpme.utils.metrics",
            "helpme.utils.settings",
            "helpme.utils.terminal",
            "helpme.version"
        ],
        "version": "0.0.43"
    },
    "helpmeplease": {
        "cmdline": [],
        "modules": [
            "helpmeplease",
            "helpmeplease.config",
            "helpmeplease.helpme",
            "helpmeplease.trackerror"
        ],
        "version": "0.1"
    },
    "helppy": {
        "cmdline": [],
        "modules": [
            "helppy",
            "helppy.helppy"
        ],
        "version": "0.1.3"
    },
    "helpscout": {
        "cmdline": [],
        "modules": [
            "helpscout",
            "helpscout.apis",
            "helpscout.apis.conversations",
            "helpscout.apis.customers",
            "helpscout.apis.mailboxes",
            "helpscout.apis.tags",
            "helpscout.apis.teams",
            "helpscout.apis.users",
            "helpscout.apis.web_hook",
            "helpscout.auth_proxy",
            "helpscout.base_api",
            "helpscout.base_model",
            "helpscout.domain",
            "helpscout.exceptions",
            "helpscout.models",
            "helpscout.models.address",
            "helpscout.models.attachment",
            "helpscout.models.attachment_data",
            "helpscout.models.base_conversation",
            "helpscout.models.chat",
            "helpscout.models.conversation",
            "helpscout.models.custom_field",
            "helpscout.models.customer",
            "helpscout.models.email",
            "helpscout.models.field",
            "helpscout.models.folder",
            "helpscout.models.mailbox",
            "helpscout.models.mailbox_ref",
            "helpscout.models.option",
            "helpscout.models.person",
            "helpscout.models.phone",
            "helpscout.models.rating",
            "helpscout.models.search_conversation",
            "helpscout.models.search_customer",
            "helpscout.models.social_profile",
            "helpscout.models.source",
            "helpscout.models.tag",
            "helpscout.models.thread",
            "helpscout.models.user",
            "helpscout.models.web_hook",
            "helpscout.models.web_hook_event",
            "helpscout.models.website",
            "helpscout.models.workflow",
            "helpscout.request_paginator",
            "helpscout.tests",
            "helpscout.tests.api_common",
            "helpscout.tests.test_apis_conversations",
            "helpscout.tests.test_apis_customers",
            "helpscout.tests.test_apis_mailboxes",
            "helpscout.tests.test_apis_tags",
            "helpscout.tests.test_apis_teams",
            "helpscout.tests.test_apis_users",
            "helpscout.tests.test_auth_proxy",
            "helpscout.tests.test_base_api",
            "helpscout.tests.test_base_model",
            "helpscout.tests.test_domain",
            "helpscout.tests.test_exceptions",
            "helpscout.tests.test_helpscout",
            "helpscout.tests.test_helpscout_web_hook",
            "helpscout.tests.test_helpscout_web_hook_event",
            "helpscout.tests.test_model_person",
            "helpscout.tests.test_request_paginator",
            "helpscout.web_hook"
        ],
        "version": "0.1.3"
    },
    "helpscout-wrapper": {
        "cmdline": [],
        "modules": [
            "helpscout",
            "helpscout.endpoints",
            "helpscout.endpoints.conversations",
            "helpscout.endpoints.conversations.attachment",
            "helpscout.endpoints.conversations.conversation",
            "helpscout.endpoints.conversations.custom_field",
            "helpscout.endpoints.conversations.tag",
            "helpscout.endpoints.conversations.thread",
            "helpscout.endpoints.customers",
            "helpscout.endpoints.customers.address",
            "helpscout.endpoints.customers.chat_handler",
            "helpscout.endpoints.customers.customer",
            "helpscout.endpoints.customers.email",
            "helpscout.endpoints.customers.phone",
            "helpscout.endpoints.customers.social_profile",
            "helpscout.endpoints.customers.website",
            "helpscout.endpoints.endpoint",
            "helpscout.endpoints.mailbox",
            "helpscout.endpoints.reports",
            "helpscout.endpoints.reports.company",
            "helpscout.endpoints.reports.conversation",
            "helpscout.endpoints.reports.doc",
            "helpscout.endpoints.reports.happiness",
            "helpscout.endpoints.reports.productivity",
            "helpscout.endpoints.reports.report",
            "helpscout.endpoints.reports.user",
            "helpscout.endpoints.tag",
            "helpscout.endpoints.team",
            "helpscout.endpoints.user",
            "helpscout.endpoints.webhook",
            "helpscout.endpoints.workflow",
            "helpscout.exceptions",
            "helpscout.helpscout"
        ],
        "version": "0.0.3"
    },
    "helptokens": {
        "cmdline": [],
        "modules": [
            "helptokens",
            "helptokens.cli"
        ],
        "version": "0.1.1"
    },
    "helptranslator": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "helputils": {
        "cmdline": [],
        "modules": [
            "helputils",
            "helputils._version",
            "helputils.core",
            "helputils.defaultlog",
            "helputils.gfs"
        ],
        "version": "1.4.38"
    },
    "helpvester": {
        "cmdline": [],
        "modules": [
            "helpvester"
        ],
        "version": "0.1.0"
    },
    "helpy": {
        "cmdline": [],
        "modules": [
            "helpy",
            "helpy.app",
            "helpy.commands",
            "helpy.commands.pyhelp",
            "helpy.settings"
        ],
        "version": "1.0.1"
    },
    "helpyfuncs": {
        "cmdline": [],
        "modules": [
            "HelpyFuncs",
            "HelpyFuncs.DataFrames",
            "HelpyFuncs.Dicts",
            "HelpyFuncs.Geometry2D",
            "HelpyFuncs.Print",
            "HelpyFuncs.SymPy",
            "HelpyFuncs.Visualizations",
            "HelpyFuncs.zzz"
        ],
        "version": "0.0.1"
    },
    "helsingborgalarm": {
        "cmdline": [],
        "modules": [
            "helsingborgalarm"
        ],
        "version": "1.0.1"
    },
    "helsonnester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "heluxup": {
        "cmdline": [],
        "modules": [
            "heluxup",
            "heluxup.main"
        ],
        "version": "1.0.2"
    },
    "hem": {
        "cmdline": [],
        "modules": [
            "hem",
            "hem.config",
            "hem.db",
            "hem.interfaces",
            "hem.schemas",
            "hem.text"
        ],
        "version": "0.4.1"
    },
    "heman": {
        "cmdline": [],
        "modules": [
            "heman",
            "heman.api",
            "heman.api.cch",
            "heman.api.empowering",
            "heman.api.empowering.base",
            "heman.api.empowering.custom",
            "heman.api.empowering.ot101",
            "heman.api.empowering.ot103",
            "heman.api.empowering.ot201",
            "heman.api.empowering.ot401",
            "heman.api.form",
            "heman.app",
            "heman.auth",
            "heman.config",
            "heman.heman"
        ],
        "version": "0.3.0"
    },
    "hemapp": {
        "cmdline": [],
        "modules": [
            "hemApp",
            "hemApp.cli",
            "hemApp.drivers",
            "hemApp.drivers.discovery_consul",
            "hemApp.drivers.discovery_dns",
            "hemApp.drivers.discovery_file",
            "hemApp.drivers.metrics_console",
            "hemApp.drivers.metrics_graphite",
            "hemApp.drivers.metrics_kafka",
            "hemApp.drivers.metrics_prometheus"
        ],
        "version": "10.9"
    },
    "hematite": {
        "cmdline": [],
        "modules": [
            "hematite",
            "hematite._redirects",
            "hematite.async",
            "hematite.client",
            "hematite.compat",
            "hematite.compat._py2_socketio",
            "hematite.compat.dictutils",
            "hematite.compat.tests",
            "hematite.constants",
            "hematite.cookies",
            "hematite.fields",
            "hematite.profile",
            "hematite.raw",
            "hematite.raw.core",
            "hematite.raw.datastructures",
            "hematite.raw.drivers",
            "hematite.raw.messages",
            "hematite.raw.parser",
            "hematite.raw.request",
            "hematite.raw.response",
            "hematite.raw.tests",
            "hematite.raw.tests.test_datastructures",
            "hematite.raw.tests.test_messages",
            "hematite.raw.tests.test_parser",
            "hematite.request",
            "hematite.response",
            "hematite.serdes",
            "hematite.tests",
            "hematite.tests.pytest_support",
            "hematite.tests.test_header_progress",
            "hematite.tests.test_request",
            "hematite.tests.test_response",
            "hematite.tests.test_serdes",
            "hematite.tests.test_url",
            "hematite.tests.test_url_w3c",
            "hematite.url"
        ],
        "version": "0.0.2"
    },
    "hematopy": {
        "cmdline": [],
        "modules": [
            "data",
            "data.make_dataset",
            "features",
            "features.build_features",
            "haemapy",
            "haemapy.banner",
            "haemapy.banner.cli",
            "haemapy.banner.http",
            "haemapy.banner.model",
            "haemapy.cli",
            "haemapy.http",
            "haemapy.http.server",
            "models",
            "models.predict_model",
            "models.train_model",
            "visualization",
            "visualization.visualize"
        ],
        "version": "0.0.1.dev6"
    },
    "hemenson-pypi": {
        "cmdline": [],
        "modules": [
            "hemenson"
        ],
        "version": "1.0.0"
    },
    "hemi": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.5"
    },
    "hemlock": {
        "cmdline": [],
        "modules": [
            "hemlock",
            "hemlock.clients",
            "hemlock.clients.file_types",
            "hemlock.clients.file_types.hcsv",
            "hemlock.clients.file_types.hdoc",
            "hemlock.clients.file_types.hgeneric",
            "hemlock.clients.file_types.hjson",
            "hemlock.clients.file_types.hpcap",
            "hemlock.clients.file_types.hpdf",
            "hemlock.clients.file_types.hppt",
            "hemlock.clients.file_types.htext",
            "hemlock.clients.file_types.hxls",
            "hemlock.clients.file_types.hxml",
            "hemlock.clients.hemlock_base",
            "hemlock.clients.hemlock_debugger",
            "hemlock.clients.hemlock_runner",
            "hemlock.clients.hfs",
            "hemlock.clients.hfs_old",
            "hemlock.clients.hhbase",
            "hemlock.clients.hhdfs",
            "hemlock.clients.hmongo",
            "hemlock.clients.hmysql",
            "hemlock.clients.hredis",
            "hemlock.clients.hrest",
            "hemlock.clients.hstream_odd",
            "hemlock.clients.test_hemlock_base",
            "hemlock.clients.test_hfs",
            "hemlock.clients.test_hhbase",
            "hemlock.clients.test_hhdfs",
            "hemlock.clients.test_hmongo",
            "hemlock.clients.test_hmysql",
            "hemlock.clients.test_hredis",
            "hemlock.clients.test_hrest",
            "hemlock.hemlock",
            "hemlock.hemlock_options_parser",
            "hemlock.hemlock_scheduler",
            "hemlock.load_scripts",
            "hemlock.load_scripts.csv_to_mysql",
            "hemlock.load_scripts.csv_to_redis_hash",
            "hemlock.load_scripts.doc_to_mongo",
            "hemlock.test_hemlock",
            "hemlock.www",
            "hemlock.www.hemlock_web"
        ],
        "version": "0.1.6"
    },
    "hemlock-berlin": {
        "cmdline": [],
        "modules": [
            "hemlock_berlin"
        ],
        "version": "0.0.2"
    },
    "hemlock-cli": {
        "cmdline": [],
        "modules": [
            "hemlock_cli",
            "hemlock_cli.add_profile",
            "hemlock_cli.hlk"
        ],
        "version": "0.0.18"
    },
    "hemlock-cli-dsbowen": {
        "cmdline": [],
        "modules": [
            "hemlock_cli",
            "hemlock_cli.hlk"
        ],
        "version": "0.0.8"
    },
    "hemlock-crt": {
        "cmdline": [],
        "modules": [
            "hemlock_crt"
        ],
        "version": "0.0.2"
    },
    "hemlock-demographics": {
        "cmdline": [],
        "modules": [
            "hemlock_demographics",
            "hemlock_demographics.languages"
        ],
        "version": "0.0.3"
    },
    "hemlock-io": {
        "cmdline": [],
        "modules": [
            "hemlock_io"
        ],
        "version": "0.0.13"
    },
    "hemlock-rest": {
        "cmdline": [],
        "modules": [
            "hemlock_rest",
            "hemlock_rest.hemlock_rest",
            "hemlock_rest.test_hemlock_rest"
        ],
        "version": "0.1.6"
    },
    "hemlock-survey": {
        "cmdline": [],
        "modules": [
            "hemlock",
            "hemlock.app",
            "hemlock.app.settings",
            "hemlock.debug",
            "hemlock.functions",
            "hemlock.functions.compile",
            "hemlock.functions.debug",
            "hemlock.functions.submit",
            "hemlock.functions.utils",
            "hemlock.functions.validate",
            "hemlock.models",
            "hemlock.models.bases",
            "hemlock.models.branch",
            "hemlock.models.choice",
            "hemlock.models.embedded",
            "hemlock.models.functions",
            "hemlock.models.page",
            "hemlock.models.participant",
            "hemlock.models.private",
            "hemlock.models.private.data_frame",
            "hemlock.models.private.data_store",
            "hemlock.models.private.router",
            "hemlock.models.private.viewing_page",
            "hemlock.models.question",
            "hemlock.models.worker",
            "hemlock.qpolymorphs",
            "hemlock.qpolymorphs.check",
            "hemlock.qpolymorphs.dashboard",
            "hemlock.qpolymorphs.download",
            "hemlock.qpolymorphs.file",
            "hemlock.qpolymorphs.input",
            "hemlock.qpolymorphs.input_group",
            "hemlock.qpolymorphs.label",
            "hemlock.qpolymorphs.range",
            "hemlock.qpolymorphs.select",
            "hemlock.qpolymorphs.textarea",
            "hemlock.routes",
            "hemlock.routes.participant",
            "hemlock.routes.researcher",
            "hemlock.routes.researcher.download",
            "hemlock.routes.researcher.login",
            "hemlock.routes.researcher.profile",
            "hemlock.routes.researcher.status",
            "hemlock.routes.researcher.utils",
            "hemlock.tools",
            "hemlock.tools.comprehension",
            "hemlock.tools.lang",
            "hemlock.tools.navbar",
            "hemlock.tools.random",
            "hemlock.tools.statics",
            "hemlock.tools.utils"
        ],
        "version": "0.0.27"
    },
    "hemnes": {
        "cmdline": [],
        "modules": [
            "hemnes",
            "hemnes.helpers",
            "hemnes.helpers.Logger",
            "hemnes.helpers.Options",
            "hemnes.helpers.PageFetcher",
            "hemnes.helpers.Product",
            "hemnes.helpers.find_element",
            "hemnes.helpers.scrape",
            "hemnes.helpers.url_generator",
            "hemnes.hemnes",
            "test",
            "test.test_integrated",
            "test.test_isolated"
        ],
        "version": "1.2.2"
    },
    "hemoglobin": {
        "cmdline": [
            "hemoglobin"
        ],
        "modules": [
            "hemoglobin",
            "hemoglobin.files",
            "hemoglobin.grammarbot",
            "hemoglobin.hemoglobin"
        ],
        "version": "0.0.1"
    },
    "hemp": {
        "cmdline": [],
        "modules": [
            "hemp",
            "hemp.api",
            "hemp.gitutils",
            "hemp.internal",
            "hemp.internal.hempfile",
            "hemp.internal.utils",
            "hemp.main",
            "hemp.release",
            "hemp.tasks",
            "hemp.tasks.stage",
            "hemp.workspace"
        ],
        "version": "0.1.9"
    },
    "hemvfunniest": {
        "cmdline": [],
        "modules": [
            "hemvfunniest",
            "hemvfunniest.text"
        ],
        "version": "0.0.3"
    },
    "hen": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.1"
    },
    "henchman": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hencoder": {
        "cmdline": [],
        "modules": [
            "Hencoder",
            "test",
            "test.test_basic"
        ],
        "version": "1.0.0"
    },
    "hendria-distributions": {
        "cmdline": [],
        "modules": [
            "hendria_distributions",
            "hendria_distributions.Binomialdistribution",
            "hendria_distributions.Gaussiandistribution",
            "hendria_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hendrics": {
        "cmdline": [],
        "modules": [],
        "version": "5.0"
    },
    "hendrix": {
        "cmdline": [],
        "modules": [
            "hendrix",
            "hendrix.contrib",
            "hendrix.contrib.cache",
            "hendrix.contrib.cache.backends",
            "hendrix.contrib.cache.backends.memory_cache",
            "hendrix.contrib.cache.backends.redis_cache",
            "hendrix.contrib.cache.resource",
            "hendrix.contrib.concurrency",
            "hendrix.contrib.concurrency.messaging",
            "hendrix.contrib.concurrency.resources",
            "hendrix.contrib.concurrency.signals",
            "hendrix.contrib.resources",
            "hendrix.contrib.resources.static",
            "hendrix.contrib.services",
            "hendrix.contrib.services.cache",
            "hendrix.defaults",
            "hendrix.deploy",
            "hendrix.deploy.base",
            "hendrix.deploy.cache",
            "hendrix.deploy.hybrid",
            "hendrix.deploy.tls",
            "hendrix.experience",
            "hendrix.experience.crosstown_traffic",
            "hendrix.experience.hey_joe",
            "hendrix.facilities",
            "hendrix.facilities.gather",
            "hendrix.facilities.protocols",
            "hendrix.facilities.resources",
            "hendrix.facilities.response",
            "hendrix.facilities.services",
            "hendrix.logger",
            "hendrix.management",
            "hendrix.management.commands",
            "hendrix.management.commands.hx",
            "hendrix.mechanics",
            "hendrix.mechanics.concurrency",
            "hendrix.mechanics.concurrency.decorators",
            "hendrix.mechanics.concurrency.exceptions",
            "hendrix.options",
            "hendrix.utils",
            "hendrix.utils.conf",
            "hendrix.utils.test_utils",
            "hendrix.ux",
            "test",
            "test.debug_test_application",
            "test.flasky",
            "test.resources",
            "test.test_crosstown_traffic",
            "test.test_deploy",
            "test.test_hey_joe",
            "test.test_hx_launcher",
            "test.test_request_behavior",
            "test.test_resources",
            "test.test_testing_utils",
            "test.test_tls_requests",
            "test.test_ux",
            "test.testproject",
            "test.testproject.settings",
            "test.testproject.urls",
            "test.testproject.wsgi",
            "test.utils",
            "test.wsgi"
        ],
        "version": "3.4.0"
    },
    "henge": {
        "cmdline": [],
        "modules": [
            "henge",
            "henge._version",
            "henge.const",
            "henge.henge"
        ],
        "version": "0.0.3"
    },
    "henipipe": {
        "cmdline": [],
        "modules": [
            "henipipe",
            "henipipe.auc",
            "henipipe.henipipe",
            "henipipe.pyWriter",
            "henipipe.samComp",
            "henipipe.samTobed"
        ],
        "version": "1.62"
    },
    "henmedlib": {
        "cmdline": [],
        "modules": [
            "henmedlib",
            "henmedlib.functions",
            "henmedlib.functions.anonymise",
            "henmedlib.functions.command_line_related",
            "henmedlib.functions.directory_structure",
            "henmedlib.functions.hounsfield",
            "henmedlib.i_o",
            "henmedlib.i_o.dicom",
            "henmedlib.i_o.mha"
        ],
        "version": "1.0.10"
    },
    "henon-map": {
        "cmdline": [],
        "modules": [
            "henon_map",
            "henon_map.cpu_henon_core",
            "henon_map.gpu_henon_core"
        ],
        "version": "0.0.8"
    },
    "henosis": {
        "cmdline": [],
        "modules": [
            "Henosis.model",
            "Henosis.server",
            "Henosis.utils"
        ],
        "version": "0.0.11"
    },
    "henrietta": {
        "cmdline": [],
        "modules": [
            "henrietta",
            "henrietta.fitting",
            "henrietta.goodnesses",
            "henrietta.imaging",
            "henrietta.imaging.io",
            "henrietta.imaging.simulations",
            "henrietta.imaging.visualize",
            "henrietta.imports",
            "henrietta.lightcurves",
            "henrietta.mcmc",
            "henrietta.modeling",
            "henrietta.optimizers",
            "henrietta.photometry",
            "henrietta.photometry.apertures",
            "henrietta.photometry.cartoons",
            "henrietta.photometry.centroid",
            "henrietta.photometry.loupe",
            "henrietta.photometry.photometry",
            "henrietta.photometry.photometry_plot",
            "henrietta.statistics",
            "henrietta.tests",
            "henrietta.tests.test_centroid",
            "henrietta.tests.test_fitting",
            "henrietta.tests.test_imaging",
            "henrietta.tests.test_lightcurves",
            "henrietta.tests.test_models",
            "henrietta.tests.test_photometry",
            "henrietta.tests.test_statistics",
            "henrietta.tests.test_tools",
            "henrietta.tests.test_tpf",
            "henrietta.tools",
            "henrietta.tpf",
            "henrietta.utilities",
            "henrietta.version"
        ],
        "version": "1.0.4"
    },
    "henrio": {
        "cmdline": [],
        "modules": [
            "henrio",
            "henrio.bases",
            "henrio.futures",
            "henrio.io",
            "henrio.locks",
            "henrio.loop",
            "henrio.protocols",
            "henrio.queue",
            "henrio.selector",
            "henrio.timeout",
            "henrio.universals",
            "henrio.windows",
            "henrio.workers",
            "henrio.yields"
        ],
        "version": "3.4"
    },
    "henriquepdf": {
        "cmdline": [],
        "modules": [
            "henriquepdf",
            "henriquepdf.pdf2image",
            "henriquepdf.pdf2text"
        ],
        "version": "1.0"
    },
    "henry": {
        "cmdline": [],
        "modules": [
            "henry",
            "henry.__version__",
            "henry.cli",
            "henry/commands",
            "henry/commands.analyze",
            "henry/commands.pulse",
            "henry/commands.vacuum",
            "henry/modules",
            "henry/modules.exceptions",
            "henry/modules.fetcher",
            "henry/modules.spinner"
        ],
        "version": "0.2.3"
    },
    "henry-test-tool": {
        "cmdline": [],
        "modules": [
            "henry_test_tool",
            "henry_test_tool.testit"
        ],
        "version": "0.1.2"
    },
    "henrys-model-utils": {
        "cmdline": [],
        "modules": [
            "henrys_model_utils",
            "henrys_model_utils.mselossflat",
            "henrys_model_utils.reshape"
        ],
        "version": "0.1"
    },
    "henson": {
        "cmdline": [],
        "modules": [
            "henson",
            "henson.base",
            "henson.cli",
            "henson.config",
            "henson.contrib",
            "henson.contrib.retry",
            "henson.contrib.sphinx",
            "henson.exceptions",
            "henson.extensions"
        ],
        "version": "2.1.0"
    },
    "henson-amqp": {
        "cmdline": [],
        "modules": [
            "henson_amqp"
        ],
        "version": "0.8.1"
    },
    "henson-database": {
        "cmdline": [],
        "modules": [
            "henson_database"
        ],
        "version": "0.4.0"
    },
    "henson-logging": {
        "cmdline": [],
        "modules": [
            "henson_logging",
            "henson_logging.processors"
        ],
        "version": "0.4.0"
    },
    "henson-s3": {
        "cmdline": [],
        "modules": [
            "henson_s3"
        ],
        "version": "0.1.0"
    },
    "henson-sentry": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "henson-sqs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hentai": {
        "cmdline": [],
        "modules": [],
        "version": "2.0"
    },
    "hentry": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "heobs-core-library": {
        "cmdline": [],
        "modules": [
            "majormode",
            "majormode.heobs",
            "majormode.heobs.constant",
            "majormode.heobs.constant.alert",
            "majormode.heobs.constant.har",
            "majormode.heobs.constant.photo",
            "majormode.heobs.constant.report",
            "majormode.heobs.model",
            "majormode.heobs.model.alert",
            "majormode.heobs.model.document",
            "majormode.heobs.model.heritage",
            "majormode.heobs.model.report"
        ],
        "version": "1.0.7"
    },
    "heobs-restful-api-client-library": {
        "cmdline": [],
        "modules": [
            "majormode",
            "majormode.heobs",
            "majormode.heobs.client",
            "majormode.heobs.client.service",
            "majormode.heobs.client.service.alert_service",
            "majormode.heobs.client.service.benefactor_service",
            "majormode.heobs.client.service.expert_service",
            "majormode.heobs.client.service.har_service",
            "majormode.heobs.client.service.heobs_service",
            "majormode.heobs.client.service.photo_service",
            "majormode.heobs.client.service.watermark_service"
        ],
        "version": "1.0.0"
    },
    "heol-humanoid": {
        "cmdline": [],
        "modules": [
            "heol_humanoid",
            "heol_humanoid._version",
            "heol_humanoid.heol_humanoid",
            "heol_humanoid.primitives",
            "heol_humanoid.primitives.postures"
        ],
        "version": "0.2.1"
    },
    "heol-torso": {
        "cmdline": [],
        "modules": [
            "heol_torso",
            "heol_torso._version",
            "heol_torso.heol_torso"
        ],
        "version": "1.0.2"
    },
    "heospy": {
        "cmdline": [],
        "modules": [
            "heospy",
            "heospy.heos_player",
            "heospy.ssdp"
        ],
        "version": "0.1.4"
    },
    "hep-ml": {
        "cmdline": [],
        "modules": [
            "hep_ml",
            "hep_ml.commonutils",
            "hep_ml.experiments",
            "hep_ml.gradientboosting",
            "hep_ml.losses",
            "hep_ml.metrics",
            "hep_ml.metrics_utils",
            "hep_ml.nnet",
            "hep_ml.preprocessing",
            "hep_ml.reweight",
            "hep_ml.speedup",
            "hep_ml.splot",
            "hep_ml.tree",
            "hep_ml.uboost"
        ],
        "version": "0.6.1"
    },
    "hep-rest-api": {
        "cmdline": [],
        "modules": [
            "hep_rest_api",
            "hep_rest_api.api",
            "hep_rest_api.api.rest_api",
            "hep_rest_api.api_client",
            "hep_rest_api.configuration",
            "hep_rest_api.entry",
            "hep_rest_api.models",
            "hep_rest_api.models.auth_cache_request",
            "hep_rest_api.models.auth_cache_response",
            "hep_rest_api.models.cancel_proof_request",
            "hep_rest_api.models.cancel_proof_response",
            "hep_rest_api.models.create_auth_cache_response",
            "hep_rest_api.models.create_pay_cache_response",
            "hep_rest_api.models.create_proof_request",
            "hep_rest_api.models.create_proof_response",
            "hep_rest_api.models.dapp",
            "hep_rest_api.models.newchain_transaction_response",
            "hep_rest_api.models.newforce_daily_stats_response",
            "hep_rest_api.models.newid_response",
            "hep_rest_api.models.order",
            "hep_rest_api.models.order_item",
            "hep_rest_api.models.pay_cache_request",
            "hep_rest_api.models.pay_cache_response",
            "hep_rest_api.models.proof",
            "hep_rest_api.models.proof_data",
            "hep_rest_api.models.proof_response",
            "hep_rest_api.models.proof_reward",
            "hep_rest_api.models.receipt_field",
            "hep_rest_api.models.retrieve_dapp_daily_stats_response",
            "hep_rest_api.models.retrieve_oracle_response",
            "hep_rest_api.models.retrieve_proof_receipts_request",
            "hep_rest_api.models.retrieve_proof_receipts_response",
            "hep_rest_api.models.retrieve_proof_rewards_request",
            "hep_rest_api.models.retrieve_proof_rewards_response",
            "hep_rest_api.models.thing",
            "hep_rest_api.rest",
            "hep_rest_api.scenarios",
            "hep_rest_api.scenarios.auth",
            "hep_rest_api.scenarios.pay",
            "hep_rest_api.scenarios.proof",
            "hep_rest_api.utils",
            "test",
            "test.test_auth_cache_request",
            "test.test_auth_cache_response",
            "test.test_basic",
            "test.test_cancel_proof_request",
            "test.test_cancel_proof_response",
            "test.test_create_auth_cache_response",
            "test.test_create_pay_cache_response",
            "test.test_create_proof_request",
            "test.test_create_proof_response",
            "test.test_dapp",
            "test.test_newchain_transaction_response",
            "test.test_newforce_daily_stats_response",
            "test.test_newid_response",
            "test.test_order",
            "test.test_order_item",
            "test.test_pay_cache_request",
            "test.test_pay_cache_response",
            "test.test_proof",
            "test.test_proof_data",
            "test.test_proof_response",
            "test.test_proof_reward",
            "test.test_receipt_field",
            "test.test_rest_api",
            "test.test_retrieve_dapp_daily_stats_response",
            "test.test_retrieve_oracle_response",
            "test.test_retrieve_proof_receipts_request",
            "test.test_retrieve_proof_receipts_response",
            "test.test_retrieve_proof_rewards_request",
            "test.test_retrieve_proof_rewards_response",
            "test.test_thing"
        ],
        "version": "1.0.12"
    },
    "hep-rfm": {
        "cmdline": [
            "hep-rfm-old-table-to-new",
            "hep-rfm-table"
        ],
        "modules": [
            "hep_rfm",
            "hep_rfm.core",
            "hep_rfm.exceptions",
            "hep_rfm.fields",
            "hep_rfm.files",
            "hep_rfm.parallel",
            "hep_rfm.protocols",
            "hep_rfm.tables",
            "hep_rfm.version"
        ],
        "version": "0.0.0.dev4"
    },
    "hep-spt": {
        "cmdline": [],
        "modules": [
            "hep_spt",
            "hep_spt.adbin",
            "hep_spt.cls",
            "hep_spt.core",
            "hep_spt.cpython",
            "hep_spt.histograms",
            "hep_spt.math_aux",
            "hep_spt.plotting",
            "hep_spt.stats",
            "hep_spt.version"
        ],
        "version": "0.0.0.dev3"
    },
    "hep-tables": {
        "cmdline": [],
        "modules": [
            "hep_tables",
            "hep_tables.hep_table",
            "hep_tables.local",
            "hep_tables.np_functions",
            "hep_tables.render",
            "hep_tables.statements",
            "hep_tables.utils"
        ],
        "version": "1.0.0"
    },
    "hepaccelerate": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.benchmark",
            "examples.cpu_kernels",
            "examples.cuda_kernels",
            "examples.full_analysis",
            "examples.histos",
            "examples.simple_hzz",
            "examples.timing",
            "examples.train_dnn",
            "hepaccelerate",
            "hepaccelerate.__version__",
            "hepaccelerate.backend_cpu",
            "hepaccelerate.backend_cuda",
            "hepaccelerate.core",
            "hepaccelerate.utils"
        ],
        "version": "0.2.3"
    },
    "hepbasestack": {
        "cmdline": [],
        "modules": [
            "hepbasestack",
            "hepbasestack.colors",
            "hepbasestack.itools",
            "hepbasestack.layout",
            "hepbasestack.logger",
            "hepbasestack.visual"
        ],
        "version": "0.1.3"
    },
    "hepcrawl": {
        "cmdline": [],
        "modules": [
            "hepcrawl",
            "hepcrawl.api",
            "hepcrawl.dateutils",
            "hepcrawl.downloaders",
            "hepcrawl.extensions",
            "hepcrawl.extractors",
            "hepcrawl.extractors.jats",
            "hepcrawl.extractors.nlm",
            "hepcrawl.inputs",
            "hepcrawl.items",
            "hepcrawl.loaders",
            "hepcrawl.mappings",
            "hepcrawl.middlewares",
            "hepcrawl.outputs",
            "hepcrawl.parsers",
            "hepcrawl.parsers.arxiv",
            "hepcrawl.parsers.crossref",
            "hepcrawl.parsers.elsevier",
            "hepcrawl.parsers.jats",
            "hepcrawl.pipelines",
            "hepcrawl.settings",
            "hepcrawl.spiders",
            "hepcrawl.spiders.aps_spider",
            "hepcrawl.spiders.arxiv_spider",
            "hepcrawl.spiders.cds_spider",
            "hepcrawl.spiders.common",
            "hepcrawl.spiders.common.lastrunstore_spider",
            "hepcrawl.spiders.common.oaipmh_spider",
            "hepcrawl.spiders.crossref_spider",
            "hepcrawl.spiders.desy_spider",
            "hepcrawl.spiders.edp_spider",
            "hepcrawl.spiders.elsevier_spider",
            "hepcrawl.spiders.hindawi_spider",
            "hepcrawl.spiders.iop_spider",
            "hepcrawl.spiders.pos_spider",
            "hepcrawl.spiders.wsp_spider",
            "hepcrawl.testlib",
            "hepcrawl.testlib.celery_monitor",
            "hepcrawl.testlib.fixtures",
            "hepcrawl.testlib.scrapyd_coverage_runner",
            "hepcrawl.testlib.tasks",
            "hepcrawl.testlib.utils",
            "hepcrawl.tohep",
            "hepcrawl.utils",
            "hepcrawl.version"
        ],
        "version": "13.0.13"
    },
    "hepdata": {
        "cmdline": [],
        "modules": [
            "hepdata",
            "hepdata.client",
            "hepdata.exceptions"
        ],
        "version": "0.2.1"
    },
    "hepdata-cli": {
        "cmdline": [],
        "modules": [
            "hepdata_cli",
            "hepdata_cli.api",
            "hepdata_cli.cli",
            "hepdata_cli.resilient_requests",
            "hepdata_cli.version"
        ],
        "version": "0.2.0"
    },
    "hepdata-converter": {
        "cmdline": [],
        "modules": [
            "hepdata_converter",
            "hepdata_converter.common",
            "hepdata_converter.parsers",
            "hepdata_converter.parsers.oldhepdata_parser",
            "hepdata_converter.parsers.yaml_parser",
            "hepdata_converter.testsuite",
            "hepdata_converter.testsuite.test_arraywriter",
            "hepdata_converter.testsuite.test_clitools",
            "hepdata_converter.testsuite.test_convert",
            "hepdata_converter.testsuite.test_csvwriter",
            "hepdata_converter.testsuite.test_getconcretesubclassmixin",
            "hepdata_converter.testsuite.test_oldhepdata",
            "hepdata_converter.testsuite.test_optioninitmixin",
            "hepdata_converter.testsuite.test_parser",
            "hepdata_converter.testsuite.test_rootwriter",
            "hepdata_converter.testsuite.test_writer",
            "hepdata_converter.testsuite.test_yamlparser",
            "hepdata_converter.testsuite.test_yamlwriter",
            "hepdata_converter.testsuite.test_yodawriter",
            "hepdata_converter.version",
            "hepdata_converter.writers",
            "hepdata_converter.writers.array_writer",
            "hepdata_converter.writers.csv_writer",
            "hepdata_converter.writers.root_writer",
            "hepdata_converter.writers.utils",
            "hepdata_converter.writers.yaml_writer",
            "hepdata_converter.writers.yoda_writer"
        ],
        "version": "0.2.3"
    },
    "hepdata-converter-ws": {
        "cmdline": [],
        "modules": [
            "hepdata_converter_ws",
            "hepdata_converter_ws.api",
            "hepdata_converter_ws.version"
        ],
        "version": "0.2.0"
    },
    "hepdata-converter-ws-client": {
        "cmdline": [],
        "modules": [
            "hepdata_converter_ws_client",
            "hepdata_converter_ws_client.version"
        ],
        "version": "0.1.6"
    },
    "hepdata-lib": {
        "cmdline": [],
        "modules": [
            "hepdata_lib",
            "hepdata_lib.c_file_reader",
            "hepdata_lib.helpers",
            "hepdata_lib.root_utils"
        ],
        "version": "0.4.1"
    },
    "hepdata-rootcnv": {
        "cmdline": [],
        "modules": [
            "hepdatarootcnv",
            "hepdatarootcnv.cli",
            "hepdatarootcnv.formatters"
        ],
        "version": "0.0.1"
    },
    "hepdata-validator": {
        "cmdline": [],
        "modules": [
            "hepdata_validator",
            "hepdata_validator.data_file_validator",
            "hepdata_validator.schema_downloader",
            "hepdata_validator.schema_resolver",
            "hepdata_validator.submission_file_validator",
            "hepdata_validator.version"
        ],
        "version": "0.2.3"
    },
    "hephaestus": {
        "cmdline": [],
        "modules": [
            "hephaestus",
            "hephaestus.utils",
            "hephaestus.walk"
        ],
        "version": "0.1.2"
    },
    "hepigram": {
        "cmdline": [],
        "modules": [
            "hepigram",
            "hepigram.app",
            "hepigram.git_handler",
            "hepigram.linter",
            "hepigram.mkdocs",
            "hepigram.utils",
            "hepigram.yaml_parser"
        ],
        "version": "0.1"
    },
    "hepkit": {
        "cmdline": [],
        "modules": [
            "hepkit",
            "hepkit.hepData",
            "hepkit.hepFormat",
            "hepkit.hepIO",
            "hepkit.hepPlot"
        ],
        "version": "1.1.1"
    },
    "hepmc3": {
        "cmdline": [],
        "modules": [],
        "version": "3.2.2"
    },
    "hepml": {
        "cmdline": [],
        "modules": [
            "hepml",
            "hepml._nbdev",
            "hepml.core",
            "hepml.evaluation",
            "hepml.structured"
        ],
        "version": "0.0.12"
    },
    "hepos": {
        "cmdline": [],
        "modules": [
            "hepos",
            "hepos.matfunc",
            "hepos.tests"
        ],
        "version": "0.1.0"
    },
    "heppdap": {
        "cmdline": [],
        "modules": [
            "heppdap",
            "heppdap.channelnames",
            "heppdap.event_classes",
            "heppdap.fnameparser",
            "heppdap.main",
            "heppdap.read_data",
            "heppdap.spectrums",
            "heppdap.stats"
        ],
        "version": "1.3.1"
    },
    "heppi": {
        "cmdline": [],
        "modules": [
            "heppi",
            "heppi.heppi",
            "heppi.performance",
            "heppi.settings"
        ],
        "version": "2.1.0"
    },
    "heppy": {
        "cmdline": [],
        "modules": [
            "heppy",
            "heppy.Args",
            "heppy.Client",
            "heppy.Config",
            "heppy.Daemon",
            "heppy.Doc",
            "heppy.EPP",
            "heppy.Error",
            "heppy.Login",
            "heppy.Module",
            "heppy.Net",
            "heppy.RabbitMQ",
            "heppy.Request",
            "heppy.Response",
            "heppy.SignalHandler"
        ],
        "version": "0.0.2"
    },
    "heppyfwk": {
        "cmdline": [
            "das.py",
            "dataset.py",
            "edmIntegrityCheck.py",
            "heppy",
            "heppy_batch.py",
            "heppy_check.py",
            "heppy_hadd.py",
            "heppy_interactive.py",
            "heppy_loop.py",
            "pythia_batch.py"
        ],
        "modules": [
            "bin",
            "bin.das",
            "bin.dataset",
            "bin.edmIntegrityCheck",
            "bin.heppy_batch",
            "bin.heppy_check",
            "bin.heppy_hadd",
            "bin.heppy_interactive",
            "bin.heppy_loop",
            "bin.pythia_batch",
            "heppy",
            "heppy.analyzers",
            "heppy.analyzers.ChargedHadronsFromB",
            "heppy.analyzers.EventByNumber",
            "heppy.analyzers.EventFilter",
            "heppy.analyzers.EventSkipper",
            "heppy.analyzers.GaussianSmearer",
            "heppy.analyzers.GlobalEventTreeProducer",
            "heppy.analyzers.Gun",
            "heppy.analyzers.ImpactParameterJetTag",
            "heppy.analyzers.ImpactParameterSmearer",
            "heppy.analyzers.IsolationAnalyzer",
            "heppy.analyzers.JetEnergyCorrector",
            "heppy.analyzers.JetTreeProducer",
            "heppy.analyzers.LeptonFsrDresser",
            "heppy.analyzers.LeptonicZedBuilder",
            "heppy.analyzers.M3Builder",
            "heppy.analyzers.METBuilder",
            "heppy.analyzers.MTW",
            "heppy.analyzers.Masker",
            "heppy.analyzers.Matcher",
            "heppy.analyzers.Merger",
            "heppy.analyzers.P4SumBuilder",
            "heppy.analyzers.PDebugger",
            "heppy.analyzers.PapasDagPlotter",
            "heppy.analyzers.PapasDisplay",
            "heppy.analyzers.PapasFromFccsw",
            "heppy.analyzers.PapasHistoryPrinter",
            "heppy.analyzers.PapasPFBlockBuilder",
            "heppy.analyzers.PapasPFReconstructor",
            "heppy.analyzers.PapasParticlesComparer",
            "heppy.analyzers.PapasSim",
            "heppy.analyzers.ParametrizedBTagger",
            "heppy.analyzers.ParticleTreeProducer",
            "heppy.analyzers.RecoilBuilder",
            "heppy.analyzers.ResonanceBuilder",
            "heppy.analyzers.ResonanceLegExtractor",
            "heppy.analyzers.ResonanceMatcher",
            "heppy.analyzers.Selector",
            "heppy.analyzers.SingleJetBuilder",
            "heppy.analyzers.Subtractor",
            "heppy.analyzers.Tagger",
            "heppy.analyzers.cms",
            "heppy.analyzers.cms.JetReader",
            "heppy.analyzers.cms.Reader",
            "heppy.analyzers.examples",
            "heppy.analyzers.examples.hzz4l",
            "heppy.analyzers.examples.hzz4l.HTo4lGenTreeProducer",
            "heppy.analyzers.examples.hzz4l.HTo4lTreeProducer",
            "heppy.analyzers.examples.hzz4l.selection",
            "heppy.analyzers.examples.jetsubstructure",
            "heppy.analyzers.examples.jetsubstructure.TreeProducer",
            "heppy.analyzers.examples.objects",
            "heppy.analyzers.examples.objects.IsoParticleTreeProducer",
            "heppy.analyzers.examples.objects.LeptonTreeProducer",
            "heppy.analyzers.examples.simple",
            "heppy.analyzers.examples.simple.Histogrammer",
            "heppy.analyzers.examples.simple.Printer",
            "heppy.analyzers.examples.simple.RandomAnalyzer",
            "heppy.analyzers.examples.simple.SimpleTreeProducer",
            "heppy.analyzers.examples.simple.Stopper",
            "heppy.analyzers.examples.simple.TextAnalyzer",
            "heppy.analyzers.examples.ttbar",
            "heppy.analyzers.examples.ttbar.BTagging",
            "heppy.analyzers.examples.ttbar.TTbarTreeProducer",
            "heppy.analyzers.examples.ttbar.selection",
            "heppy.analyzers.examples.zh",
            "heppy.analyzers.examples.zh.ZHTreeProducer",
            "heppy.analyzers.examples.zh.selection",
            "heppy.analyzers.examples.zh_had",
            "heppy.analyzers.examples.zh_had.JetEnergyComputer",
            "heppy.analyzers.examples.zh_had.Selection",
            "heppy.analyzers.examples.zh_had.TreeProducer",
            "heppy.analyzers.examples.zh_had.ZHReconstruction",
            "heppy.analyzers.fcc",
            "heppy.analyzers.fcc.JetClusterizer",
            "heppy.analyzers.fcc.Reader",
            "heppy.analyzers.lcio",
            "heppy.analyzers.lcio.MCParticlePrinter",
            "heppy.analyzers.ntuple",
            "heppy.analyzers.roc",
            "heppy.analyzers.test_Filter",
            "heppy.analyzers.test_Gun",
            "heppy.analyzers.test_roc",
            "heppy.analyzers.tmp",
            "heppy.configuration",
            "heppy.display",
            "heppy.display.core",
            "heppy.display.geometry",
            "heppy.display.helix",
            "heppy.display.pfobjects",
            "heppy.framework",
            "heppy.framework.analyzer",
            "heppy.framework.chain",
            "heppy.framework.chain_noindexing",
            "heppy.framework.config",
            "heppy.framework.context",
            "heppy.framework.event",
            "heppy.framework.eventsfwlite",
            "heppy.framework.eventsgen",
            "heppy.framework.eventslcio",
            "heppy.framework.eventstext",
            "heppy.framework.eventstfile",
            "heppy.framework.exceptions",
            "heppy.framework.heppy_loop",
            "heppy.framework.looper",
            "heppy.framework.services",
            "heppy.framework.services.service",
            "heppy.framework.services.test_service",
            "heppy.framework.services.tfile",
            "heppy.framework.test_chain",
            "heppy.framework.test_config",
            "heppy.framework.test_context",
            "heppy.framework.test_event",
            "heppy.framework.test_eventstext",
            "heppy.framework.test_eventstfile",
            "heppy.framework.weight",
            "heppy.papas",
            "heppy.papas.data",
            "heppy.papas.data.comparer",
            "heppy.papas.data.historyhelper",
            "heppy.papas.data.idcoder",
            "heppy.papas.data.papasevent",
            "heppy.papas.data.test_historyhelper",
            "heppy.papas.data.test_idcoder",
            "heppy.papas.data.test_papasevent",
            "heppy.papas.detector",
            "heppy.papas.detectors",
            "heppy.papas.detectors.CLIC",
            "heppy.papas.detectors.CMS",
            "heppy.papas.detectors.base",
            "heppy.papas.detectors.detector",
            "heppy.papas.detectors.geometry",
            "heppy.papas.detectors.material",
            "heppy.papas.detectors.perfect",
            "heppy.papas.detectors.plot_cms_hcal_response",
            "heppy.papas.detectors.plot_fccee_trackres",
            "heppy.papas.detectors.test_geometry",
            "heppy.papas.geotools",
            "heppy.papas.graphtools",
            "heppy.papas.graphtools.DAG",
            "heppy.papas.graphtools.dagplotter",
            "heppy.papas.graphtools.edge",
            "heppy.papas.graphtools.subgraphbuilder",
            "heppy.papas.graphtools.test_DAG",
            "heppy.papas.graphtools.test_subgraphbuilder",
            "heppy.papas.mergedclusterbuilder",
            "heppy.papas.multiple_scattering",
            "heppy.papas.papas_exceptions",
            "heppy.papas.path",
            "heppy.papas.pdt",
            "heppy.papas.pfalgo",
            "heppy.papas.pfalgo.blockbuilder",
            "heppy.papas.pfalgo.distance",
            "heppy.papas.pfalgo.floodfill",
            "heppy.papas.pfalgo.links",
            "heppy.papas.pfalgo.merger",
            "heppy.papas.pfalgo.pfblock",
            "heppy.papas.pfalgo.pfblockbuilder",
            "heppy.papas.pfalgo.pfblocksplitter",
            "heppy.papas.pfalgo.pfreconstructor",
            "heppy.papas.pfalgo.test_block_reconstruction",
            "heppy.papas.pfalgo.test_distance",
            "heppy.papas.pfalgo.test_floodfill",
            "heppy.papas.pfalgo.test_links",
            "heppy.papas.pfalgo.test_merger",
            "heppy.papas.pfobjects",
            "heppy.papas.propagator",
            "heppy.papas.simulator",
            "heppy.papas.test_cluster",
            "heppy.papas.test_path",
            "heppy.papas.test_propagator",
            "heppy.papas.toyevents",
            "heppy.papas.vectors",
            "heppy.particles",
            "heppy.particles.cms",
            "heppy.particles.cms.jet",
            "heppy.particles.cms.particle",
            "heppy.particles.fcc",
            "heppy.particles.fcc.jet",
            "heppy.particles.fcc.met",
            "heppy.particles.fcc.particle",
            "heppy.particles.fcc.particle_MCparticle_link",
            "heppy.particles.fcc.pod",
            "heppy.particles.fcc.vertex",
            "heppy.particles.genbrowser",
            "heppy.particles.handle",
            "heppy.particles.isolation",
            "heppy.particles.jet",
            "heppy.particles.met",
            "heppy.particles.object_link",
            "heppy.particles.p4",
            "heppy.particles.particle",
            "heppy.particles.pdgcodes",
            "heppy.particles.physicsobjects",
            "heppy.particles.test_genbrowser",
            "heppy.particles.test_isolation",
            "heppy.particles.test_jet",
            "heppy.particles.test_particle",
            "heppy.particles.test_resonance",
            "heppy.particles.tlv",
            "heppy.particles.tlv.jet",
            "heppy.particles.tlv.met",
            "heppy.particles.tlv.particle",
            "heppy.particles.tlv.resonance",
            "heppy.particles.tlv.rootobj",
            "heppy.particles.tlv.test_rootobj",
            "heppy.particles.tlv.vertex",
            "heppy.particles.vertex",
            "heppy.statistics",
            "heppy.statistics.average",
            "heppy.statistics.counter",
            "heppy.statistics.histograms",
            "heppy.statistics.random_cpplib",
            "heppy.statistics.random_root",
            "heppy.statistics.rrandom",
            "heppy.statistics.test_average",
            "heppy.statistics.test_counter",
            "heppy.statistics.test_random",
            "heppy.statistics.test_tree",
            "heppy.statistics.test_value",
            "heppy.statistics.tree",
            "heppy.statistics.value",
            "heppy.test",
            "heppy.test.analysis_ee_ZH_cfg",
            "heppy.test.analysis_ee_ZH_had_cfg",
            "heppy.test.analysis_ee_ZZ_resmatch_cfg",
            "heppy.test.analysis_ee_Z_bb_cfg",
            "heppy.test.analysis_ee_Z_cfg",
            "heppy.test.analysis_hh_ttbar_cfg",
            "heppy.test.analysis_pp_hTo4l_advanced_cfg",
            "heppy.test.analysis_pp_hTo4l_simple_cfg",
            "heppy.test.btag_ip_smearing_2_cfg",
            "heppy.test.btag_parametrized_cfg",
            "heppy.test.cms_jets",
            "heppy.test.create_tree",
            "heppy.test.delphes_cfg",
            "heppy.test.fccsw_cfg",
            "heppy.test.gun_papas_cfg",
            "heppy.test.jet_tree_cff",
            "heppy.test.lcio_cfg",
            "heppy.test.lepton_iso_cfg",
            "heppy.test.papas_cfg",
            "heppy.test.pdebug_cfg",
            "heppy.test.plot_ee_Z",
            "heppy.test.plot_ee_ZH",
            "heppy.test.plot_ee_Z_CMS_vs_CLIC",
            "heppy.test.plot_ee_b",
            "heppy.test.simple_example_cfg",
            "heppy.test.simple_example_noindexing_cfg",
            "heppy.test.simple_multi_example_cfg",
            "heppy.test.simrec_papas_cfg",
            "heppy.test.substructure",
            "heppy.test.suite",
            "heppy.test.test_analysis_ee_Z",
            "heppy.test.test_analysis_ee_ZH",
            "heppy.test.test_analysis_ee_ZZ_resmatch",
            "heppy.test.test_analysis_ee_Z_bb",
            "heppy.test.test_analysis_ee_Z_bb_fccsw",
            "heppy.test.test_analysis_pdebug_clic",
            "heppy.test.test_analysis_pdebug_cms",
            "heppy.test.test_gun",
            "heppy.test.test_multiprocessing",
            "heppy.test.test_noindexing",
            "heppy.test.test_simple_example",
            "heppy.test.test_text_example",
            "heppy.test.text_example_cfg",
            "heppy.utils",
            "heppy.utils.absglob",
            "heppy.utils.addToDatasets",
            "heppy.utils.batchmanager",
            "heppy.utils.castorBaseDir",
            "heppy.utils.computeIP",
            "heppy.utils.das",
            "heppy.utils.dataset",
            "heppy.utils.datasetToSource",
            "heppy.utils.debug_tree",
            "heppy.utils.deltar",
            "heppy.utils.diclist",
            "heppy.utils.edmIntegrityCheck",
            "heppy.utils.eostools",
            "heppy.utils.logger",
            "heppy.utils.pdebug",
            "heppy.utils.production_tasks",
            "heppy.utils.test_deltar",
            "heppy.utils.test_diclist",
            "heppy.utils.test_pdebug",
            "heppy.utils.test_versions",
            "heppy.utils.timeout",
            "heppy.utils.versions"
        ],
        "version": "3.0.1"
    },
    "heppyness": {
        "cmdline": [],
        "modules": [
            "heppy",
            "heppy.heatmap",
            "heppy.histogram",
            "heppy.more_uncertainty_tools",
            "heppy.panel",
            "heppy.plot",
            "heppy.readroot",
            "heppy.readyoda",
            "heppy.scanroot",
            "heppy.uncertainty",
            "heppy.value",
            "heppy.yodarun"
        ],
        "version": "1.1.1"
    },
    "heprefs": {
        "cmdline": [],
        "modules": [
            "heprefs",
            "heprefs.arxiv_article",
            "heprefs.cds_article",
            "heprefs.heprefs",
            "heprefs.inspire_article",
            "heprefs.invenio"
        ],
        "version": "0.1.4"
    },
    "heprops": {
        "cmdline": [],
        "modules": [
            "heprops",
            "heprops.helium",
            "heprops.potential"
        ],
        "version": "1.0.0"
    },
    "hepstats": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "hepstyle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heptapod": {
        "cmdline": [],
        "modules": [
            "heptapod",
            "heptapod.gitlab",
            "heptapod.gitlab.branch",
            "heptapod.gitlab.hooks",
            "heptapod.gitlab.prune_reasons",
            "heptapod.gitlab.tests",
            "heptapod.gitlab.tests.test_hooks_inner",
            "heptapod.gitlab.tests.test_hooks_integration",
            "heptapod.hooks",
            "heptapod.hooks.check_publish",
            "heptapod.hooks.dev_util",
            "heptapod.hooks.gitlab_mirror",
            "heptapod.hooks.perm",
            "heptapod.hooks.subrepos",
            "heptapod.hooks.tests",
            "heptapod.hooks.tests.test_check_publish",
            "heptapod.hooks.tests.test_check_write",
            "heptapod.hooks.tests.test_dev_utils",
            "heptapod.hooks.tests.utils",
            "heptapod.testhelpers",
            "heptapod.tests",
            "heptapod.tests.test_harness",
            "heptapod.tests.test_testhelpers",
            "heptapod.tests.test_wsgi",
            "heptapod.tests.test_wsgi_webtest",
            "heptapod.util",
            "heptapod.wsgi",
            "hgext3rd",
            "hgext3rd.heptapod",
            "hgext3rd.heptapod.branch",
            "hgext3rd.heptapod.git",
            "hgext3rd.heptapod.obsutil",
            "hgext3rd.heptapod.tests",
            "hgext3rd.heptapod.tests.git",
            "hgext3rd.heptapod.tests.git.test_inner",
            "hgext3rd.heptapod.tests.git.test_inner_subrepos",
            "hgext3rd.heptapod.tests.git.test_integration",
            "hgext3rd.heptapod.tests.test_commands_misc",
            "hgext3rd.heptapod.tests.test_config",
            "hgext3rd.heptapod.tests.test_default_branch",
            "hgext3rd.heptapod.tests.test_initial_import_mode",
            "hgext3rd.heptapod.tests.test_patch_runsystem",
            "hgext3rd.heptapod.tests.test_pull_force_topic",
            "hgext3rd.heptapod.tests.utils",
            "hgext3rd.heptapod.topic"
        ],
        "version": "0.16.1"
    },
    "heptet-app": {
        "cmdline": [],
        "modules": [
            "heptet_app",
            "heptet_app.context",
            "heptet_app.default",
            "heptet_app.entity_layer",
            "heptet_app.entrypoint",
            "heptet_app.exceptions",
            "heptet_app.field_renderer",
            "heptet_app.impl",
            "heptet_app.interfaces",
            "heptet_app.mixin",
            "heptet_app.mschema",
            "heptet_app.myapp_config",
            "heptet_app.process",
            "heptet_app.process_views",
            "heptet_app.process_views2",
            "heptet_app.routes",
            "heptet_app.template",
            "heptet_app.tvars",
            "heptet_app.util",
            "heptet_app.view",
            "heptet_app.viewderiver",
            "heptet_app.views",
            "heptet_app.webapp_main",
            "tests",
            "tests.conftest",
            "tests.fixtures",
            "tests.integration",
            "tests.integration.conftest",
            "tests.integration.test_context_found",
            "tests.t_process",
            "tests.t_process.test_process_views",
            "tests.test_default"
        ],
        "version": "0.45.0"
    },
    "heptet-app-metadata": {
        "cmdline": [],
        "modules": [
            "db_dump",
            "db_dump.args",
            "db_dump.dbd_fields",
            "db_dump.events",
            "db_dump.info",
            "db_dump.loader",
            "db_dump.main",
            "db_dump.model",
            "db_dump.registry",
            "heptet_app_metadata",
            "heptet_app_metadata.args",
            "heptet_app_metadata.dbd_fields",
            "heptet_app_metadata.events",
            "heptet_app_metadata.info",
            "heptet_app_metadata.main",
            "heptet_app_metadata.model",
            "heptet_app_metadata.registry"
        ],
        "version": "0.1"
    },
    "heptet-app-sqlalchemy": {
        "cmdline": [],
        "modules": [
            "heptet_app_sqlalchemy"
        ],
        "version": "0.45.0"
    },
    "heptet-model-adapter": {
        "cmdline": [],
        "modules": [
            "heptet_model_adapter",
            "heptet_model_adapter.entity",
            "heptet_model_adapter.form"
        ],
        "version": "0.45.0"
    },
    "heptools": {
        "cmdline": [],
        "modules": [
            "heptools",
            "heptools.entry"
        ],
        "version": "1.0"
    },
    "hepunits": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.0"
    },
    "hepy": {
        "cmdline": [],
        "modules": [
            "he",
            "he.colors",
            "he.config",
            "he.experiment",
            "he.he",
            "he.trial",
            "he.util",
            "he.workspace"
        ],
        "version": "0.0.2"
    },
    "her": {
        "cmdline": [],
        "modules": [
            "her",
            "her.decoder",
            "her.encoder",
            "her.her"
        ],
        "version": "1.5.0"
    },
    "hera": {
        "cmdline": [],
        "modules": [
            "hera",
            "hera.contrib",
            "hera.contrib.django_forms",
            "hera.contrib.django_utils",
            "hera.tests",
            "hera.tests.test_hera"
        ],
        "version": "0.1.2"
    },
    "hera-librarian": {
        "cmdline": [
            "add_librarian_file_event.py",
            "add_obs_librarian.py",
            "launch_librarian_copy.py",
            "librarian_assign_sessions.py",
            "librarian_delete_files.py",
            "librarian_initiate_offload.py",
            "librarian_locate_file.py",
            "librarian_offload_helper.py",
            "librarian_set_file_deletion_policy.py",
            "librarian_stage_files.py",
            "librarian_stream_file_or_directory.sh",
            "upload_to_librarian.py"
        ],
        "modules": [
            "hera_librarian",
            "hera_librarian.store",
            "hera_librarian.utils"
        ],
        "version": "0.1.6"
    },
    "hera-py": {
        "cmdline": [],
        "modules": [
            "hera",
            "hera.assembler",
            "hera.checker",
            "hera.data",
            "hera.debugger",
            "hera.debugger.debugger",
            "hera.debugger.miniparser",
            "hera.debugger.shell",
            "hera.lexer",
            "hera.loader",
            "hera.main",
            "hera.op",
            "hera.parser",
            "hera.stdlib",
            "hera.utils",
            "hera.vm",
            "test",
            "test.test_assembler",
            "test.test_cmd",
            "test.test_debugger",
            "test.test_disassembler",
            "test.test_error",
            "test.test_exec",
            "test.test_exec.test_arithmetic_logic",
            "test.test_exec.test_branch_call_return",
            "test.test_exec.test_data_statements",
            "test.test_exec.test_debug_ops",
            "test.test_exec.test_flag",
            "test.test_exec.test_load_store",
            "test.test_exec.test_set_inc_dec",
            "test.test_exec.test_shift",
            "test.test_exec.utils",
            "test.test_from_cs240",
            "test.test_from_cs350",
            "test.test_from_manual",
            "test.test_include",
            "test.test_misc",
            "test.test_parse_error",
            "test.test_preprocessor",
            "test.test_unit",
            "test.test_unit.test_checker",
            "test.test_unit.test_conversion",
            "test.test_unit.test_disassembly",
            "test.test_unit.test_lexer",
            "test.test_unit.test_miniparser",
            "test.test_unit.test_op",
            "test.test_unit.test_parser",
            "test.test_unit.test_utils",
            "test.test_warning",
            "test.utils"
        ],
        "version": "1.0.2"
    },
    "heracles": {
        "cmdline": [],
        "modules": [
            "heracles"
        ],
        "version": "1.0.1"
    },
    "heractor": {
        "cmdline": [],
        "modules": [
            "heractor",
            "heractor.commands",
            "heractor.heract",
            "heractor.plugins",
            "heractor.plugins.blog",
            "heractor.plugins.breadcrumbs",
            "heractor.plugins.buildmenu",
            "heractor.plugins.include",
            "heractor.plugins.listviewdetail",
            "heractor.plugins.markdn",
            "heractor.plugins.paginator",
            "heractor.plugins.structure"
        ],
        "version": "1.05"
    },
    "herai": {
        "cmdline": [],
        "modules": [
            "her",
            "her.Speecher",
            "her.db"
        ],
        "version": "1.0.1"
    },
    "herakles": {
        "cmdline": [],
        "modules": [
            "herakles",
            "herakles.auth",
            "herakles.issue_wrapper",
            "herakles.jira_date_parser",
            "herakles.jira_response_iterable",
            "herakles.jira_wrapper",
            "herakles.jql",
            "herakles.jql.jql_builder",
            "herakles.util",
            "herakles.util.file_utils"
        ],
        "version": "0.1.7"
    },
    "herald": {
        "cmdline": [],
        "modules": [
            "herald",
            "herald.Client"
        ],
        "version": "0.4"
    },
    "herald-notify": {
        "cmdline": [],
        "modules": [
            "herald",
            "herald.herald",
            "herald.notifiers",
            "herald.notifiers.base",
            "herald.notifiers.gmail",
            "herald.notifiers.outlook",
            "herald.notifiers.twilio"
        ],
        "version": "1.0.1"
    },
    "herald-slack": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "heralding": {
        "cmdline": [
            "heralding"
        ],
        "modules": [
            "heralding",
            "heralding.capabilities",
            "heralding.capabilities.ftp",
            "heralding.capabilities.handlerbase",
            "heralding.capabilities.http",
            "heralding.capabilities.https",
            "heralding.capabilities.imap",
            "heralding.capabilities.imaps",
            "heralding.capabilities.mysql",
            "heralding.capabilities.pop3",
            "heralding.capabilities.pop3s",
            "heralding.capabilities.postgresql",
            "heralding.capabilities.rdp",
            "heralding.capabilities.smtp",
            "heralding.capabilities.socks5",
            "heralding.capabilities.ssh",
            "heralding.capabilities.telnet",
            "heralding.capabilities.vnc",
            "heralding.honeypot",
            "heralding.libs",
            "heralding.libs.aiobaserequest",
            "heralding.libs.http",
            "heralding.libs.http.aioclient",
            "heralding.libs.http.aioserver",
            "heralding.libs.msrdp",
            "heralding.libs.msrdp.packer",
            "heralding.libs.msrdp.parser",
            "heralding.libs.msrdp.pdu",
            "heralding.libs.msrdp.security",
            "heralding.libs.msrdp.tls",
            "heralding.libs.telnetsrv",
            "heralding.libs.telnetsrv.telnetsrvlib",
            "heralding.misc",
            "heralding.misc.common",
            "heralding.misc.session",
            "heralding.misc.socket_names",
            "heralding.reporting",
            "heralding.reporting.base_logger",
            "heralding.reporting.curiosum_integration",
            "heralding.reporting.file_logger",
            "heralding.reporting.hpfeeds_logger",
            "heralding.reporting.reporting_relay",
            "heralding.reporting.syslog_logger",
            "heralding.tests",
            "heralding.tests.test_config",
            "heralding.tests.test_encoding",
            "heralding.tests.test_ftp",
            "heralding.tests.test_hpfeeds",
            "heralding.tests.test_http",
            "heralding.tests.test_imap",
            "heralding.tests.test_mysql",
            "heralding.tests.test_pop3",
            "heralding.tests.test_postgresql",
            "heralding.tests.test_rdp",
            "heralding.tests.test_smtp",
            "heralding.tests.test_socks5",
            "heralding.tests.test_ssh",
            "heralding.tests.test_telnet",
            "heralding.tests.test_vnc"
        ],
        "version": "1.0.6"
    },
    "heraspy": {
        "cmdline": [],
        "modules": [
            "heraspy",
            "heraspy.callback",
            "heraspy.model"
        ],
        "version": "0.2"
    },
    "herb": {
        "cmdline": [],
        "modules": [
            "herb",
            "herb.metadata",
            "herb.models",
            "herb.traversal"
        ],
        "version": "0.1.0"
    },
    "herbert": {
        "cmdline": [],
        "modules": [
            "herbert",
            "herbert.ast",
            "herbert.interpreter",
            "herbert.lexer",
            "herbert.main",
            "herbert.parser"
        ],
        "version": "0.2"
    },
    "herbert-python": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1a3"
    },
    "herbie": {
        "cmdline": [],
        "modules": [],
        "version": "1.0b2"
    },
    "herbie-aws-sns-sqs-adapter": {
        "cmdline": [],
        "modules": [],
        "version": "1.0b1"
    },
    "herbie-google-pubsub-adapter": {
        "cmdline": [],
        "modules": [],
        "version": "1.0b1"
    },
    "herborist": {
        "cmdline": [],
        "modules": [
            "herborist",
            "herborist._version",
            "herborist.herborist"
        ],
        "version": "3.3.2"
    },
    "hercule": {
        "cmdline": [],
        "modules": [
            "hercule",
            "hercule.hercule"
        ],
        "version": "1.1.1"
    },
    "hercules": {
        "cmdline": [],
        "modules": [
            "hercules",
            "hercules.decorators",
            "hercules.dict",
            "hercules.lazylist",
            "hercules.loop_interface",
            "hercules.stream",
            "hercules.tokentype",
            "hercules.trie",
            "hercules.utils"
        ],
        "version": "0.0"
    },
    "herculeum": {
        "cmdline": [
            "herculeum"
        ],
        "modules": [
            "herculeum",
            "herculeum.ai",
            "herculeum.ai.simple",
            "herculeum.ai.skeleton",
            "herculeum.application",
            "herculeum.config",
            "herculeum.config.config",
            "herculeum.config.levels",
            "herculeum.config.levels.configure_items",
            "herculeum.config.levels.creatures",
            "herculeum.config.levels.crimson_lair",
            "herculeum.config.levels.effects",
            "herculeum.config.levels.player_characters",
            "herculeum.ui",
            "herculeum.ui.controllers",
            "herculeum.ui.controllers.endscreen",
            "herculeum.ui.controllers.inventory",
            "herculeum.ui.controllers.moving",
            "herculeum.ui.controllers.startgame",
            "herculeum.ui.gui",
            "herculeum.ui.gui.animations",
            "herculeum.ui.gui.animations.animation",
            "herculeum.ui.gui.animations.attack",
            "herculeum.ui.gui.animations.counters",
            "herculeum.ui.gui.animations.damage",
            "herculeum.ui.gui.animations.death",
            "herculeum.ui.gui.animations.factory",
            "herculeum.ui.gui.animations.healing",
            "herculeum.ui.gui.animations.inventory",
            "herculeum.ui.gui.animations.moving",
            "herculeum.ui.gui.animations.perception",
            "herculeum.ui.gui.animations.poison",
            "herculeum.ui.gui.character",
            "herculeum.ui.gui.config",
            "herculeum.ui.gui.endscreen",
            "herculeum.ui.gui.eventdisplay",
            "herculeum.ui.gui.images",
            "herculeum.ui.gui.inventory",
            "herculeum.ui.gui.layers",
            "herculeum.ui.gui.mainwindow",
            "herculeum.ui.gui.map",
            "herculeum.ui.gui.menu",
            "herculeum.ui.gui.resources",
            "herculeum.ui.gui.startgame",
            "herculeum.ui.gui.surfaceManager",
            "herculeum.ui.gui.widgets",
            "herculeum.ui.text",
            "herculeum.ui.text.character",
            "herculeum.ui.text.config",
            "herculeum.ui.text.endscreen",
            "herculeum.ui.text.interface",
            "herculeum.ui.text.inventory",
            "herculeum.ui.text.main_window",
            "herculeum.ui.text.map",
            "herculeum.ui.text.start_game",
            "herculeum.ui.text.surface_manager",
            "pyherc",
            "pyherc.ai",
            "pyherc.ai.heapset",
            "pyherc.ai.pathfinding",
            "pyherc.ai.pyheapq",
            "pyherc.config",
            "pyherc.config.config",
            "pyherc.config.dsl",
            "pyherc.config.dsl.levelgeneratorfactory",
            "pyherc.config.dsl.roomgenerators",
            "pyherc.data",
            "pyherc.data.character",
            "pyherc.data.constants",
            "pyherc.data.dungeon",
            "pyherc.data.effects",
            "pyherc.data.effects.effectscollection",
            "pyherc.data.features",
            "pyherc.data.geometry",
            "pyherc.data.inventory",
            "pyherc.data.item",
            "pyherc.data.magic",
            "pyherc.data.magic.spell",
            "pyherc.data.magic.spellbook",
            "pyherc.data.model",
            "pyherc.data.portal",
            "pyherc.data.traps",
            "pyherc.data.traps.pit",
            "pyherc.events",
            "pyherc.generators",
            "pyherc.generators.item",
            "pyherc.generators.level",
            "pyherc.generators.level.creatures",
            "pyherc.generators.level.decorator",
            "pyherc.generators.level.decorator.basic",
            "pyherc.generators.level.generator",
            "pyherc.generators.level.item",
            "pyherc.generators.level.old_config",
            "pyherc.generators.level.partitioners",
            "pyherc.generators.level.partitioners.old_grid",
            "pyherc.generators.level.portal",
            "pyherc.generators.level.prototiles",
            "pyherc.generators.level.room",
            "pyherc.generators.level.room.catacombs",
            "pyherc.generators.level.room.corridor",
            "pyherc.generators.level.room.crimson_lair",
            "pyherc.generators.level.room.pillarroom",
            "pyherc.generators.level.room.squareroom",
            "pyherc.generators.spells",
            "pyherc.generators.utils",
            "pyherc.ports",
            "pyherc.ports.actions",
            "pyherc.rules",
            "pyherc.rules.combat",
            "pyherc.rules.combat.action",
            "pyherc.rules.combat.factories",
            "pyherc.rules.combat.interface",
            "pyherc.rules.combat.melee",
            "pyherc.rules.combat.ranged",
            "pyherc.rules.combat.unarmed",
            "pyherc.rules.constants",
            "pyherc.rules.consume",
            "pyherc.rules.consume.action",
            "pyherc.rules.consume.factories",
            "pyherc.rules.consume.interface",
            "pyherc.rules.digging",
            "pyherc.rules.ending",
            "pyherc.rules.engine",
            "pyherc.rules.factory",
            "pyherc.rules.inventory",
            "pyherc.rules.inventory.action",
            "pyherc.rules.inventory.equip",
            "pyherc.rules.inventory.factories",
            "pyherc.rules.inventory.interface",
            "pyherc.rules.inventory.unequip",
            "pyherc.rules.los",
            "pyherc.rules.magic",
            "pyherc.rules.magic.action",
            "pyherc.rules.magic.factories",
            "pyherc.rules.magic.interface",
            "pyherc.rules.public",
            "pyherc.rules.waiting",
            "pyherc.rules.waiting.action",
            "pyherc.rules.waiting.factories",
            "pyherc.rules.waiting.interface"
        ],
        "version": "0.15"
    },
    "herd": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "herder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "herdingspikes": {
        "cmdline": [],
        "modules": [
            "herdingspikes",
            "herdingspikes.clustering",
            "herdingspikes.clustering.mean_shift_",
            "herdingspikes.detection_localisation",
            "herdingspikes.hs2",
            "herdingspikes.parameter_optimisation",
            "herdingspikes.probe",
            "herdingspikes.probe_functions",
            "herdingspikes.probe_functions.generate_pos_neigh_rectang_probe",
            "herdingspikes.probe_functions.neighborMatrixUtils",
            "herdingspikes.probe_functions.readUtils",
            "herdingspikes.version"
        ],
        "version": "0.3.7"
    },
    "here": {
        "cmdline": [],
        "modules": [
            "here",
            "here.here",
            "tests",
            "tests.test_here"
        ],
        "version": "0.1.0"
    },
    "here-env": {
        "cmdline": [],
        "modules": [
            "here_env"
        ],
        "version": "0.2.1"
    },
    "hereapi": {
        "cmdline": [],
        "modules": [
            "hereapi"
        ],
        "version": "0.0.1"
    },
    "hereby": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "herecomes": {
        "cmdline": [],
        "modules": [
            "herecomes"
        ],
        "version": "0.0.1"
    },
    "heregeocoder": {
        "cmdline": [],
        "modules": [
            "heregeocoder",
            "heregeocoder.GeocoderApi"
        ],
        "version": "0.10"
    },
    "herepy": {
        "cmdline": [],
        "modules": [
            "herepy",
            "herepy.destination_weather_api",
            "herepy.error",
            "herepy.ev_charging_stations_api",
            "herepy.fleet_telematics_api",
            "herepy.geocoder_api",
            "herepy.geocoder_autocomplete_api",
            "herepy.geocoder_reverse_api",
            "herepy.here_api",
            "herepy.here_enum",
            "herepy.models",
            "herepy.places_api",
            "herepy.public_transit_api",
            "herepy.rme_api",
            "herepy.routing_api",
            "herepy.utils"
        ],
        "version": "3.0.2"
    },
    "herepyhive": {
        "cmdline": [],
        "modules": [
            "TCLIService",
            "TCLIService.TCLIService",
            "TCLIService.constants",
            "TCLIService.ttypes",
            "pyhive",
            "pyhive.common",
            "pyhive.exc",
            "pyhive.hive",
            "pyhive.presto",
            "pyhive.sqlalchemy_hive",
            "pyhive.sqlalchemy_presto"
        ],
        "version": "0.6.2"
    },
    "hererocks": {
        "cmdline": [],
        "modules": [
            "hererocks"
        ],
        "version": "0.22.0"
    },
    "heresafe": {
        "cmdline": [],
        "modules": [
            "heresafe",
            "heresafe.heresafe"
        ],
        "version": "1.0.4"
    },
    "heresuperset": {
        "cmdline": [
            "superset"
        ],
        "modules": [
            "superset",
            "superset.bin",
            "superset.cache_util",
            "superset.cli",
            "superset.config",
            "superset.connectors",
            "superset.connectors.base",
            "superset.connectors.base.models",
            "superset.connectors.base.views",
            "superset.connectors.connector_registry",
            "superset.connectors.druid",
            "superset.connectors.druid.models",
            "superset.connectors.druid.views",
            "superset.connectors.sqla",
            "superset.connectors.sqla.models",
            "superset.connectors.sqla.views",
            "superset.data",
            "superset.data.countries",
            "superset.dataframe",
            "superset.db_engine_specs",
            "superset.db_engines",
            "superset.db_engines.hive",
            "superset.dict_import_export_util",
            "superset.exceptions",
            "superset.extract_table_names",
            "superset.forms",
            "superset.import_util",
            "superset.jinja_context",
            "superset.legacy",
            "superset.migrations",
            "superset.migrations.env",
            "superset.models",
            "superset.models.annotations",
            "superset.models.core",
            "superset.models.helpers",
            "superset.models.sql_lab",
            "superset.models.user_attributes",
            "superset.security",
            "superset.sql_lab",
            "superset.sql_parse",
            "superset.stats_logger",
            "superset.translations",
            "superset.translations.utils",
            "superset.utils",
            "superset.views",
            "superset.views.annotations",
            "superset.views.base",
            "superset.views.core",
            "superset.views.datasource",
            "superset.views.sql_lab",
            "superset.views.utils",
            "superset.viz"
        ],
        "version": "0.27.6"
    },
    "heretic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heretts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "herit-from-base-class": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "heritagego-core-library": {
        "cmdline": [],
        "modules": [
            "majormode",
            "majormode.heritagego",
            "majormode.heritagego.model",
            "majormode.heritagego.model.contest",
            "majormode.heritagego.model.heritagego"
        ],
        "version": "1.0.0"
    },
    "herja": {
        "cmdline": [],
        "modules": [
            "herja",
            "herja.assertions",
            "herja.common",
            "herja.constants",
            "herja.conversions",
            "herja.decorators",
            "herja.fs",
            "herja.logging",
            "herja.logging.decorators",
            "herja.net",
            "herja.settings"
        ],
        "version": "0.1.0"
    },
    "herklosbotscore": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "herman": {
        "cmdline": [],
        "modules": [
            "playhouse",
            "playhouse.apsw_ext",
            "playhouse.berkeleydb",
            "playhouse.csv_loader",
            "playhouse.csv_utils",
            "playhouse.dataset",
            "playhouse.db_url",
            "playhouse.djpeewee",
            "playhouse.fields",
            "playhouse.flask_utils",
            "playhouse.gfk",
            "playhouse.hybrid",
            "playhouse.kv",
            "playhouse.migrate",
            "playhouse.pool",
            "playhouse.postgres_ext",
            "playhouse.read_slave",
            "playhouse.reflection",
            "playhouse.shortcuts",
            "playhouse.signals",
            "playhouse.sqlcipher_ext",
            "playhouse.sqlite_ext",
            "playhouse.sqlite_udf",
            "playhouse.sqliteq",
            "playhouse.test_utils"
        ],
        "version": "1.2.5"
    },
    "hermes": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.api",
            "hermes.chatroom",
            "hermes.log",
            "hermes.server"
        ],
        "version": "0.3.0"
    },
    "hermes-audio-server": {
        "cmdline": [],
        "modules": [
            "hermes_audio_server",
            "hermes_audio_server.about",
            "hermes_audio_server.cli",
            "hermes_audio_server.config",
            "hermes_audio_server.config.mqtt",
            "hermes_audio_server.config.vad",
            "hermes_audio_server.exceptions",
            "hermes_audio_server.logger",
            "hermes_audio_server.mqtt",
            "hermes_audio_server.player",
            "hermes_audio_server.recorder"
        ],
        "version": "0.2.0"
    },
    "hermes-chat": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.chatserver",
            "hermes.database"
        ],
        "version": "0.2.2"
    },
    "hermes-cli": {
        "cmdline": [],
        "modules": [
            "hermes-cli",
            "hermes-cli.helper",
            "hermes-cli.hermes-cli"
        ],
        "version": "0.0.1.4"
    },
    "hermes-core": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.1"
    },
    "hermes-parser": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.Conflict",
            "hermes.Grammar",
            "hermes.GrammarAnalyzer",
            "hermes.GrammarCodeGenerator",
            "hermes.GrammarFileParser",
            "hermes.Logger",
            "hermes.Macro",
            "hermes.Main",
            "hermes.Morpheme",
            "hermes.Theme"
        ],
        "version": "1.1"
    },
    "hermes-pg": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.client",
            "hermes.components",
            "hermes.connectors",
            "hermes.exceptions",
            "hermes.listeners",
            "hermes.log",
            "hermes.strategies"
        ],
        "version": "0.3.1"
    },
    "hermes-py": {
        "cmdline": [],
        "modules": [
            "HErmes",
            "HErmes.analysis",
            "HErmes.analysis.calculus",
            "HErmes.analysis.fluxes",
            "HErmes.analysis.tasks",
            "HErmes.fitting",
            "HErmes.fitting.fit",
            "HErmes.fitting.functions",
            "HErmes.fitting.model",
            "HErmes.icecube_goodies",
            "HErmes.icecube_goodies.conversions",
            "HErmes.icecube_goodies.fluxes",
            "HErmes.icecube_goodies.helpers",
            "HErmes.icecube_goodies.weighting",
            "HErmes.selection",
            "HErmes.selection.categories",
            "HErmes.selection.cut",
            "HErmes.selection.dataset",
            "HErmes.selection.magic_keywords",
            "HErmes.selection.variables",
            "HErmes.utils",
            "HErmes.utils.files",
            "HErmes.visual",
            "HErmes.visual.canvases",
            "HErmes.visual.plotting"
        ],
        "version": "0.1.4"
    },
    "hermes-pygments": {
        "cmdline": [],
        "modules": [
            "hermes_pygments",
            "hermes_pygments.hermes_lexer"
        ],
        "version": "0.1"
    },
    "hermes-pyramid": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.report",
            "hermes.server",
            "hermes.templates",
            "hermes.views"
        ],
        "version": "0.0.1"
    },
    "hermes-python": {
        "cmdline": [],
        "modules": [
            "hermes_python",
            "hermes_python.api",
            "hermes_python.api.ffi",
            "hermes_python.api.ffi.dialogue",
            "hermes_python.api.ffi.feedback",
            "hermes_python.api.ffi.injection",
            "hermes_python.api.ffi.tts",
            "hermes_python.ffi",
            "hermes_python.ffi.ontology",
            "hermes_python.ffi.ontology.asr",
            "hermes_python.ffi.ontology.dialogue",
            "hermes_python.ffi.ontology.facades",
            "hermes_python.ffi.ontology.feedback",
            "hermes_python.ffi.ontology.injection",
            "hermes_python.ffi.ontology.nlu",
            "hermes_python.ffi.ontology.tts",
            "hermes_python.ffi.utils",
            "hermes_python.ffi.wrappers",
            "hermes_python.hermes",
            "hermes_python.ontology",
            "hermes_python.ontology.asr",
            "hermes_python.ontology.dialogue",
            "hermes_python.ontology.dialogue.intent",
            "hermes_python.ontology.dialogue.session",
            "hermes_python.ontology.feedback",
            "hermes_python.ontology.injection",
            "hermes_python.ontology.nlu",
            "hermes_python.ontology.slot",
            "hermes_python.ontology.tts"
        ],
        "version": "0.8.1"
    },
    "hermes-simulator": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.analysis",
            "hermes.constellations",
            "hermes.constellations.O3b_constellation",
            "hermes.examples",
            "hermes.geometry",
            "hermes.main",
            "hermes.objects",
            "hermes.orientation",
            "hermes.propagation_bulk",
            "hermes.simulation",
            "hermes.util"
        ],
        "version": "0.1.3b0"
    },
    "hermes-subscribe": {
        "cmdline": [],
        "modules": [],
        "version": "1.3"
    },
    "hermes-zmq": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.config",
            "hermes.node",
            "hermes.proxy",
            "hermes.publisher",
            "hermes.receiver",
            "hermes.structs"
        ],
        "version": "1.3.0"
    },
    "hermescache": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.backend",
            "hermes.backend.dict",
            "hermes.backend.memcached",
            "hermes.backend.redis",
            "hermes.test",
            "hermes.test.abstract",
            "hermes.test.dict",
            "hermes.test.memcached",
            "hermes.test.redis"
        ],
        "version": "0.8.0"
    },
    "hermesnetwork-gabriel-oliveira": {
        "cmdline": [],
        "modules": [
            "HermesNetwork",
            "HermesNetwork.core"
        ],
        "version": "4.dev0"
    },
    "hermetic": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hermetica": {
        "cmdline": [],
        "modules": [
            "hermetica",
            "hermetica.cli",
            "hermetica.scaffold",
            "hermetica.scaffold.api",
            "hermetica.scaffold.app",
            "hermetica.scaffold.config",
            "hermetica.scaffold.decorator",
            "hermetica.scaffold.docker",
            "hermetica.scaffold.extension",
            "hermetica.scaffold.model",
            "hermetica.scaffold.pipfile",
            "hermetica.scaffold.test",
            "hermetica.scaffold.wsgi"
        ],
        "version": "1.0.0"
    },
    "hermetrics": {
        "cmdline": [],
        "modules": [
            "hermetrics",
            "hermetrics.damerau_levenshtein",
            "hermetrics.dice",
            "hermetrics.hamming",
            "hermetrics.jaccard",
            "hermetrics.jaro",
            "hermetrics.jaro_winkler",
            "hermetrics.levenshtein",
            "hermetrics.metric",
            "hermetrics.metric_comparator",
            "hermetrics.osa",
            "hermetrics.tests",
            "hermetrics.tests.test_damerau_levenshtein",
            "hermetrics.tests.test_dice",
            "hermetrics.tests.test_hamming",
            "hermetrics.tests.test_jaccard",
            "hermetrics.tests.test_jaro",
            "hermetrics.tests.test_jaro_winkler",
            "hermetrics.tests.test_levenshtein",
            "hermetrics.tests.test_metric",
            "hermetrics.tests.test_metric_comparator",
            "hermetrics.tests.test_osa",
            "hermetrics.version"
        ],
        "version": "0.1.13"
    },
    "herming": {
        "cmdline": [],
        "modules": [
            "herming"
        ],
        "version": "1.4"
    },
    "hermione": {
        "cmdline": [],
        "modules": [
            "hermione",
            "hermione.horizonplot"
        ],
        "version": "0.1.2"
    },
    "hermione-databricks": {
        "cmdline": [],
        "modules": [
            "hermione_databricks",
            "hermione_databricks.cli",
            "hermione_databricks.cli.cli",
            "hermione_databricks.project",
            "hermione_databricks.project.writer",
            "hermione_databricks.tests",
            "hermione_databricks.tests.test_hermione",
            "hermione_databricks.version"
        ],
        "version": "1.0.1"
    },
    "hermione-ml": {
        "cmdline": [],
        "modules": [
            "hermione",
            "hermione._version",
            "hermione.cli",
            "hermione.tests",
            "hermione.tests.test_hermione",
            "hermione.writer"
        ],
        "version": "0.2"
    },
    "hermit": {
        "cmdline": [
            "hermit"
        ],
        "modules": [
            "hermit",
            "hermit.config",
            "hermit.errors",
            "hermit.plugin",
            "hermit.qrcode",
            "hermit.qrcode.displayer",
            "hermit.qrcode.format",
            "hermit.qrcode.reader",
            "hermit.qrcode.utils",
            "hermit.rng",
            "hermit.shamir_share",
            "hermit.shards",
            "hermit.shards.interface",
            "hermit.shards.shard",
            "hermit.shards.shard_set",
            "hermit.signer",
            "hermit.signer.base",
            "hermit.signer.bitcoin_signer",
            "hermit.signer.echo_signer",
            "hermit.ui",
            "hermit.ui.base",
            "hermit.ui.common",
            "hermit.ui.main",
            "hermit.ui.relocker",
            "hermit.ui.repl",
            "hermit.ui.shards",
            "hermit.ui.state",
            "hermit.ui.toolbar",
            "hermit.ui.wallet",
            "hermit.wallet",
            "hermit.wordlists",
            "pybitcointools",
            "pybitcointools.bci",
            "pybitcointools.blocks",
            "pybitcointools.composite",
            "pybitcointools.deterministic",
            "pybitcointools.main",
            "pybitcointools.mnemonic",
            "pybitcointools.py2specials",
            "pybitcointools.py3specials",
            "pybitcointools.ripemd",
            "pybitcointools.stealth",
            "pybitcointools.transaction"
        ],
        "version": "0.1.12"
    },
    "hermit-unchained": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hermitcraftvideos": {
        "cmdline": [],
        "modules": [
            "hermitcraftvideos",
            "hermitcraftvideos.errors",
            "hermitcraftvideos.hermit",
            "hermitcraftvideos.video"
        ],
        "version": "0.1.1"
    },
    "hero": {
        "cmdline": [
            "hero"
        ],
        "modules": [
            "lib",
            "lib.constants",
            "lib.interactive",
            "lib.prompter",
            "lib.pyhero",
            "lib.utils"
        ],
        "version": "0.3.2"
    },
    "hero-crawl": {
        "cmdline": [],
        "modules": [
            "vanko",
            "vanko.excel",
            "vanko.excel.base",
            "vanko.excel.csvwriter",
            "vanko.excel.openpyxl",
            "vanko.excel.xlsxwriter",
            "vanko.flask",
            "vanko.flask.admin",
            "vanko.flask.admin_pymongo",
            "vanko.flask.admin_redis",
            "vanko.flask.admin_sqla",
            "vanko.flask.compat",
            "vanko.flask.forms",
            "vanko.flask.ping",
            "vanko.flask.session",
            "vanko.flask.sqla",
            "vanko.flask.utils",
            "vanko.scrapy",
            "vanko.scrapy.crawl",
            "vanko.scrapy.defaults",
            "vanko.scrapy.downloader",
            "vanko.scrapy.fast_exit",
            "vanko.scrapy.helpers",
            "vanko.scrapy.httpcache",
            "vanko.scrapy.item_loader",
            "vanko.scrapy.mongo",
            "vanko.scrapy.mongo.connection",
            "vanko.scrapy.mongo.dupefilter",
            "vanko.scrapy.mongo.httpcache",
            "vanko.scrapy.mongo.queue",
            "vanko.scrapy.mongo.stats",
            "vanko.scrapy.pipelines",
            "vanko.scrapy.qt4",
            "vanko.scrapy.qt4.defs",
            "vanko.scrapy.qt4.filter",
            "vanko.scrapy.qt4.handlers",
            "vanko.scrapy.qt4.login",
            "vanko.scrapy.qt4.qt4webkit",
            "vanko.scrapy.qt4.test",
            "vanko.scrapy.qt4.utils",
            "vanko.scrapy.redis",
            "vanko.scrapy.redis.connection",
            "vanko.scrapy.redis.dupefilter",
            "vanko.scrapy.redis.httpcache",
            "vanko.scrapy.redis.pipelines",
            "vanko.scrapy.redis.queue",
            "vanko.scrapy.redis.spiders",
            "vanko.scrapy.redis.stats",
            "vanko.scrapy.redis.tests",
            "vanko.scrapy.reqser",
            "vanko.scrapy.restart_on",
            "vanko.scrapy.scheduler",
            "vanko.scrapy.settings",
            "vanko.scrapy.sftp_httpcache",
            "vanko.scrapy.sftp_store",
            "vanko.scrapy.show_ip",
            "vanko.scrapy.spider",
            "vanko.scrapy.spider_loader",
            "vanko.scrapy.stats",
            "vanko.scrapy.useragent",
            "vanko.scrapy.webdriver",
            "vanko.scrapy.webdriver.action_chains",
            "vanko.scrapy.webdriver.download",
            "vanko.scrapy.webdriver.http",
            "vanko.scrapy.webdriver.manager",
            "vanko.scrapy.webdriver.middlewares",
            "vanko.scrapy.webdriver.response",
            "vanko.scrapy.webdriver.selector",
            "vanko.scrapy.webdriver.spider",
            "vanko.scrapy.webdriver.wrapper",
            "vanko.utils",
            "vanko.utils.dates",
            "vanko.utils.decode",
            "vanko.utils.heroku",
            "vanko.utils.ipython",
            "vanko.utils.misc",
            "vanko.utils.multiprocessing",
            "vanko.utils.pdb",
            "vanko.utils.serialize",
            "vanko.utils.sftp",
            "vanko.utils.signal",
            "vanko.utils.watch_log",
            "vanko.utils.xvfb"
        ],
        "version": "0.1.4"
    },
    "herochatclient": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.2"
    },
    "herochatserver": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.2"
    },
    "heroes": {
        "cmdline": [],
        "modules": [
            "heroes"
        ],
        "version": "1.0.2"
    },
    "heroes-build-scrapper": {
        "cmdline": [],
        "modules": [
            "heroes_build_scrapper",
            "heroes_build_scrapper.data",
            "heroes_build_scrapper.scrapping",
            "heroes_build_scrapper.utils"
        ],
        "version": "1.2"
    },
    "heroescli": {
        "cmdline": [],
        "modules": [
            "heroescli",
            "heroescli.heroescli"
        ],
        "version": "1.0.2"
    },
    "heroesoflegend": {
        "cmdline": [],
        "modules": [
            "heroesoflegend",
            "heroesoflegend.heroesoflegend",
            "heroesoflegend.rolltables"
        ],
        "version": "0.2.0"
    },
    "heroicli": {
        "cmdline": [],
        "modules": [
            "heroicli",
            "heroicli.cli",
            "heroicli.config_util",
            "heroicli.heroic",
            "heroicli.tags"
        ],
        "version": "0.0.5"
    },
    "heroin": {
        "cmdline": [],
        "modules": [
            "heroin",
            "heroin.test",
            "heroin.trial"
        ],
        "version": "0.0.2"
    },
    "herokal-settings": {
        "cmdline": [],
        "modules": [
            "herokal",
            "herokal.management",
            "herokal.management.commands",
            "herokal.management.commands.exportenv",
            "herokal.settings"
        ],
        "version": "0.0.1"
    },
    "heroku": {
        "cmdline": [],
        "modules": [
            "heroku",
            "heroku.api",
            "heroku.compat",
            "heroku.core",
            "heroku.helpers",
            "heroku.models",
            "heroku.structures"
        ],
        "version": "0.1.4"
    },
    "heroku-bouncer": {
        "cmdline": [],
        "modules": [],
        "version": "1.3"
    },
    "heroku-cli-wrapper": {
        "cmdline": [],
        "modules": [
            "heroku_cli_wrapper",
            "heroku_cli_wrapper.helper",
            "heroku_cli_wrapper.heroku"
        ],
        "version": "0.0.8"
    },
    "heroku-django-helpers": {
        "cmdline": [],
        "modules": [
            "heroku_django_helpers",
            "heroku_django_helpers.helpers",
            "heroku_django_helpers.middleware"
        ],
        "version": "0.3"
    },
    "heroku-env": {
        "cmdline": [],
        "modules": [
            "heroku_env",
            "heroku_env.cli",
            "heroku_env.constants",
            "heroku_env.exceptions",
            "heroku_env.heroku_env",
            "heroku_env.param_types"
        ],
        "version": "0.5.5"
    },
    "heroku-git-fs": {
        "cmdline": [],
        "modules": [
            "heroku_git_fs"
        ],
        "version": "1.0.0"
    },
    "heroku-kafka": {
        "cmdline": [],
        "modules": [
            "heroku_kafka"
        ],
        "version": "2.1.4"
    },
    "heroku-kafka-eze": {
        "cmdline": [],
        "modules": [
            "heroku_kafka_eze"
        ],
        "version": "0.0.2"
    },
    "heroku-syslog-parser": {
        "cmdline": [],
        "modules": [
            "heroku_syslog_parser",
            "heroku_syslog_parser.message",
            "heroku_syslog_parser.parser"
        ],
        "version": "0.0.4"
    },
    "heroku-tools": {
        "cmdline": [],
        "modules": [
            "heroku_tools",
            "heroku_tools.config",
            "heroku_tools.deploy",
            "heroku_tools.git",
            "heroku_tools.heroku",
            "heroku_tools.settings",
            "heroku_tools.tests",
            "heroku_tools.utils"
        ],
        "version": "0.3.3"
    },
    "heroku3": {
        "cmdline": [],
        "modules": [
            "heroku3",
            "heroku3.api",
            "heroku3.core",
            "heroku3.helpers",
            "heroku3.rendezvous",
            "heroku3.structures"
        ],
        "version": "4.2.3"
    },
    "herokufu": {
        "cmdline": [
            "hfu"
        ],
        "modules": [
            "herokufu"
        ],
        "version": "0.0.3"
    },
    "herokuify-scrapyd": {
        "cmdline": [],
        "modules": [
            "herokuify_scrapyd",
            "herokuify_scrapyd.app"
        ],
        "version": "1.0"
    },
    "herokuslugignorehelper": {
        "cmdline": [],
        "modules": [
            "herokuslugignorehelper",
            "herokuslugignorehelper.cli"
        ],
        "version": "0.2"
    },
    "herokutokenizer": {
        "cmdline": [],
        "modules": [
            "herokutokenizer"
        ],
        "version": "0.0.1"
    },
    "heron": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heron-automation": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heron-model": {
        "cmdline": [],
        "modules": [
            "heron",
            "heron._version",
            "heron.acquisition",
            "heron.bilby",
            "heron.corner",
            "heron.data",
            "heron.filtering",
            "heron.kernels",
            "heron.models",
            "heron.models.georgebased",
            "heron.models.gw",
            "heron.plotting",
            "heron.priors",
            "heron.regression",
            "heron.sampling",
            "heron.scripts",
            "heron.scripts.bbh",
            "heron.training",
            "heron.waveform",
            "tests",
            "tests.test_data",
            "tests.test_regression"
        ],
        "version": "0.2.5"
    },
    "heronpy": {
        "cmdline": [],
        "modules": [
            "heronpy",
            "heronpy.api",
            "heronpy.api.api_constants",
            "heronpy.api.bolt",
            "heronpy.api.bolt.base_bolt",
            "heronpy.api.bolt.bolt",
            "heronpy.api.bolt.window_bolt",
            "heronpy.api.cloudpickle",
            "heronpy.api.component",
            "heronpy.api.component.base_component",
            "heronpy.api.component.component_spec",
            "heronpy.api.custom_grouping",
            "heronpy.api.global_metrics",
            "heronpy.api.metrics",
            "heronpy.api.serializer",
            "heronpy.api.spout",
            "heronpy.api.spout.base_spout",
            "heronpy.api.spout.spout",
            "heronpy.api.state",
            "heronpy.api.state.state",
            "heronpy.api.state.stateful_component",
            "heronpy.api.stream",
            "heronpy.api.task_hook",
            "heronpy.api.topology",
            "heronpy.api.topology_context",
            "heronpy.api.tuple",
            "heronpy.connectors",
            "heronpy.connectors.mock",
            "heronpy.connectors.mock.arraylooper",
            "heronpy.connectors.pulsar",
            "heronpy.connectors.pulsar.pulsarspout",
            "heronpy.connectors.pulsar.pulsarstreamlet",
            "heronpy.connectors.textfiles",
            "heronpy.connectors.textfiles.textfilesgenerator",
            "heronpy.proto",
            "heronpy.proto.ckptmgr_pb2",
            "heronpy.proto.common_pb2",
            "heronpy.proto.execution_state_pb2",
            "heronpy.proto.metrics_pb2",
            "heronpy.proto.packing_plan_pb2",
            "heronpy.proto.physical_plan_pb2",
            "heronpy.proto.scheduler_pb2",
            "heronpy.proto.stats_pb2",
            "heronpy.proto.stmgr_pb2",
            "heronpy.proto.tmaster_pb2",
            "heronpy.proto.topology_pb2",
            "heronpy.proto.tuple_pb2",
            "heronpy.streamlet",
            "heronpy.streamlet.builder",
            "heronpy.streamlet.config",
            "heronpy.streamlet.context",
            "heronpy.streamlet.generator",
            "heronpy.streamlet.impl",
            "heronpy.streamlet.impl.consumebolt",
            "heronpy.streamlet.impl.contextimpl",
            "heronpy.streamlet.impl.filterbolt",
            "heronpy.streamlet.impl.flatmapbolt",
            "heronpy.streamlet.impl.generatorspout",
            "heronpy.streamlet.impl.joinbolt",
            "heronpy.streamlet.impl.logbolt",
            "heronpy.streamlet.impl.mapbolt",
            "heronpy.streamlet.impl.reducebykeyandwindowbolt",
            "heronpy.streamlet.impl.reducebywindowbolt",
            "heronpy.streamlet.impl.repartitionbolt",
            "heronpy.streamlet.impl.streamletboltbase",
            "heronpy.streamlet.impl.streamletspoutbase",
            "heronpy.streamlet.impl.supplierspout",
            "heronpy.streamlet.impl.transformbolt",
            "heronpy.streamlet.impl.unionbolt",
            "heronpy.streamlet.keyedwindow",
            "heronpy.streamlet.resources",
            "heronpy.streamlet.runner",
            "heronpy.streamlet.streamlet",
            "heronpy.streamlet.transformoperator",
            "heronpy.streamlet.window",
            "heronpy.streamlet.windowconfig"
        ],
        "version": "0.17.8"
    },
    "heroprotocol": {
        "cmdline": [],
        "modules": [
            "heroprotocol",
            "heroprotocol.build",
            "heroprotocol.compat",
            "heroprotocol.decoders",
            "heroprotocol.hero_cli",
            "heroprotocol.versions",
            "heroprotocol.versions.protocol29406",
            "heroprotocol.versions.protocol30414",
            "heroprotocol.versions.protocol30509",
            "heroprotocol.versions.protocol30829",
            "heroprotocol.versions.protocol30948",
            "heroprotocol.versions.protocol31090",
            "heroprotocol.versions.protocol31360",
            "heroprotocol.versions.protocol31566",
            "heroprotocol.versions.protocol31726",
            "heroprotocol.versions.protocol31948",
            "heroprotocol.versions.protocol32120",
            "heroprotocol.versions.protocol32253",
            "heroprotocol.versions.protocol32455",
            "heroprotocol.versions.protocol32524",
            "heroprotocol.versions.protocol33182",
            "heroprotocol.versions.protocol33353",
            "heroprotocol.versions.protocol33684",
            "heroprotocol.versions.protocol34053",
            "heroprotocol.versions.protocol34190",
            "heroprotocol.versions.protocol34659",
            "heroprotocol.versions.protocol34846",
            "heroprotocol.versions.protocol35360",
            "heroprotocol.versions.protocol35529",
            "heroprotocol.versions.protocol35634",
            "heroprotocol.versions.protocol35702",
            "heroprotocol.versions.protocol36144",
            "heroprotocol.versions.protocol36280",
            "heroprotocol.versions.protocol36359",
            "heroprotocol.versions.protocol36536",
            "heroprotocol.versions.protocol36693",
            "heroprotocol.versions.protocol37069",
            "heroprotocol.versions.protocol37117",
            "heroprotocol.versions.protocol37274",
            "heroprotocol.versions.protocol37351",
            "heroprotocol.versions.protocol37569",
            "heroprotocol.versions.protocol37795",
            "heroprotocol.versions.protocol38236",
            "heroprotocol.versions.protocol38500",
            "heroprotocol.versions.protocol38593",
            "heroprotocol.versions.protocol38793",
            "heroprotocol.versions.protocol39015",
            "heroprotocol.versions.protocol39153",
            "heroprotocol.versions.protocol39271",
            "heroprotocol.versions.protocol39445",
            "heroprotocol.versions.protocol39595",
            "heroprotocol.versions.protocol39709",
            "heroprotocol.versions.protocol39951",
            "heroprotocol.versions.protocol40087",
            "heroprotocol.versions.protocol40322",
            "heroprotocol.versions.protocol40336",
            "heroprotocol.versions.protocol40431",
            "heroprotocol.versions.protocol40697",
            "heroprotocol.versions.protocol40798",
            "heroprotocol.versions.protocol41150",
            "heroprotocol.versions.protocol41393",
            "heroprotocol.versions.protocol41504",
            "heroprotocol.versions.protocol41609",
            "heroprotocol.versions.protocol41707",
            "heroprotocol.versions.protocol41764",
            "heroprotocol.versions.protocol41810",
            "heroprotocol.versions.protocol42178",
            "heroprotocol.versions.protocol42273",
            "heroprotocol.versions.protocol42406",
            "heroprotocol.versions.protocol42506",
            "heroprotocol.versions.protocol42590",
            "heroprotocol.versions.protocol42742",
            "heroprotocol.versions.protocol42958",
            "heroprotocol.versions.protocol43051",
            "heroprotocol.versions.protocol43170",
            "heroprotocol.versions.protocol43259",
            "heroprotocol.versions.protocol43481",
            "heroprotocol.versions.protocol43527",
            "heroprotocol.versions.protocol43571",
            "heroprotocol.versions.protocol43905",
            "heroprotocol.versions.protocol44124",
            "heroprotocol.versions.protocol44256",
            "heroprotocol.versions.protocol44468",
            "heroprotocol.versions.protocol44737",
            "heroprotocol.versions.protocol44797",
            "heroprotocol.versions.protocol44941",
            "heroprotocol.versions.protocol45024",
            "heroprotocol.versions.protocol45228",
            "heroprotocol.versions.protocol45635",
            "heroprotocol.versions.protocol45815",
            "heroprotocol.versions.protocol45889",
            "heroprotocol.versions.protocol45949",
            "heroprotocol.versions.protocol46158",
            "heroprotocol.versions.protocol46416",
            "heroprotocol.versions.protocol46446",
            "heroprotocol.versions.protocol46690",
            "heroprotocol.versions.protocol46787",
            "heroprotocol.versions.protocol46869",
            "heroprotocol.versions.protocol46889",
            "heroprotocol.versions.protocol47024",
            "heroprotocol.versions.protocol47133",
            "heroprotocol.versions.protocol47219",
            "heroprotocol.versions.protocol47479",
            "heroprotocol.versions.protocol47801",
            "heroprotocol.versions.protocol47903",
            "heroprotocol.versions.protocol47944",
            "heroprotocol.versions.protocol48027",
            "heroprotocol.versions.protocol48297",
            "heroprotocol.versions.protocol48548",
            "heroprotocol.versions.protocol48583",
            "heroprotocol.versions.protocol48760",
            "heroprotocol.versions.protocol49008",
            "heroprotocol.versions.protocol49076",
            "heroprotocol.versions.protocol49278",
            "heroprotocol.versions.protocol49495",
            "heroprotocol.versions.protocol49582",
            "heroprotocol.versions.protocol49747",
            "heroprotocol.versions.protocol49838",
            "heroprotocol.versions.protocol49907",
            "heroprotocol.versions.protocol50286",
            "heroprotocol.versions.protocol50424",
            "heroprotocol.versions.protocol50441",
            "heroprotocol.versions.protocol50673",
            "heroprotocol.versions.protocol50950",
            "heroprotocol.versions.protocol51150",
            "heroprotocol.versions.protocol51375",
            "heroprotocol.versions.protocol51609",
            "heroprotocol.versions.protocol51779",
            "heroprotocol.versions.protocol51923",
            "heroprotocol.versions.protocol51978",
            "heroprotocol.versions.protocol52008",
            "heroprotocol.versions.protocol52124",
            "heroprotocol.versions.protocol52214",
            "heroprotocol.versions.protocol52351",
            "heroprotocol.versions.protocol52381",
            "heroprotocol.versions.protocol52561",
            "heroprotocol.versions.protocol52647",
            "heroprotocol.versions.protocol52860",
            "heroprotocol.versions.protocol52986",
            "heroprotocol.versions.protocol53174",
            "heroprotocol.versions.protocol53270",
            "heroprotocol.versions.protocol53275",
            "heroprotocol.versions.protocol53548",
            "heroprotocol.versions.protocol53965",
            "heroprotocol.versions.protocol54098",
            "heroprotocol.versions.protocol54339",
            "heroprotocol.versions.protocol54968",
            "heroprotocol.versions.protocol55010",
            "heroprotocol.versions.protocol55058",
            "heroprotocol.versions.protocol55288",
            "heroprotocol.versions.protocol55844",
            "heroprotocol.versions.protocol55929",
            "heroprotocol.versions.protocol56175",
            "heroprotocol.versions.protocol56361",
            "heroprotocol.versions.protocol56705",
            "heroprotocol.versions.protocol56784",
            "heroprotocol.versions.protocol56859",
            "heroprotocol.versions.protocol57062",
            "heroprotocol.versions.protocol57286",
            "heroprotocol.versions.protocol57547",
            "heroprotocol.versions.protocol57589",
            "heroprotocol.versions.protocol57797",
            "heroprotocol.versions.protocol58209",
            "heroprotocol.versions.protocol58344",
            "heroprotocol.versions.protocol58482",
            "heroprotocol.versions.protocol58623",
            "heroprotocol.versions.protocol58795",
            "heroprotocol.versions.protocol59239",
            "heroprotocol.versions.protocol59279",
            "heroprotocol.versions.protocol59657",
            "heroprotocol.versions.protocol59799",
            "heroprotocol.versions.protocol59837",
            "heroprotocol.versions.protocol59944",
            "heroprotocol.versions.protocol59988",
            "heroprotocol.versions.protocol60228",
            "heroprotocol.versions.protocol60265",
            "heroprotocol.versions.protocol60399",
            "heroprotocol.versions.protocol60522",
            "heroprotocol.versions.protocol60567",
            "heroprotocol.versions.protocol60632",
            "heroprotocol.versions.protocol60821",
            "heroprotocol.versions.protocol61129",
            "heroprotocol.versions.protocol61361",
            "heroprotocol.versions.protocol61552",
            "heroprotocol.versions.protocol61718",
            "heroprotocol.versions.protocol61872",
            "heroprotocol.versions.protocol61952",
            "heroprotocol.versions.protocol62119",
            "heroprotocol.versions.protocol62212",
            "heroprotocol.versions.protocol62424",
            "heroprotocol.versions.protocol62548",
            "heroprotocol.versions.protocol62833",
            "heroprotocol.versions.protocol63070",
            "heroprotocol.versions.protocol63203",
            "heroprotocol.versions.protocol63402",
            "heroprotocol.versions.protocol63507",
            "heroprotocol.versions.protocol63635",
            "heroprotocol.versions.protocol64100",
            "heroprotocol.versions.protocol64129",
            "heroprotocol.versions.protocol64255",
            "heroprotocol.versions.protocol64331",
            "heroprotocol.versions.protocol64455",
            "heroprotocol.versions.protocol64657",
            "heroprotocol.versions.protocol64863",
            "heroprotocol.versions.protocol65006",
            "heroprotocol.versions.protocol65054",
            "heroprotocol.versions.protocol65285",
            "heroprotocol.versions.protocol65579",
            "heroprotocol.versions.protocol65617",
            "heroprotocol.versions.protocol65654",
            "heroprotocol.versions.protocol65655",
            "heroprotocol.versions.protocol65751",
            "heroprotocol.versions.protocol65846",
            "heroprotocol.versions.protocol65943",
            "heroprotocol.versions.protocol66182",
            "heroprotocol.versions.protocol66292",
            "heroprotocol.versions.protocol66488",
            "heroprotocol.versions.protocol66810",
            "heroprotocol.versions.protocol66946",
            "heroprotocol.versions.protocol66977",
            "heroprotocol.versions.protocol67143",
            "heroprotocol.versions.protocol67462",
            "heroprotocol.versions.protocol67621",
            "heroprotocol.versions.protocol67679",
            "heroprotocol.versions.protocol67985",
            "heroprotocol.versions.protocol68406",
            "heroprotocol.versions.protocol68509",
            "heroprotocol.versions.protocol68669",
            "heroprotocol.versions.protocol68740",
            "heroprotocol.versions.protocol68778",
            "heroprotocol.versions.protocol69099",
            "heroprotocol.versions.protocol69185",
            "heroprotocol.versions.protocol69228",
            "heroprotocol.versions.protocol69264",
            "heroprotocol.versions.protocol69350",
            "heroprotocol.versions.protocol69790",
            "heroprotocol.versions.protocol69823",
            "heroprotocol.versions.protocol69947",
            "heroprotocol.versions.protocol70133",
            "heroprotocol.versions.protocol70200",
            "heroprotocol.versions.protocol70616",
            "heroprotocol.versions.protocol70682",
            "heroprotocol.versions.protocol70920",
            "heroprotocol.versions.protocol71040",
            "heroprotocol.versions.protocol71134",
            "heroprotocol.versions.protocol71138",
            "heroprotocol.versions.protocol71449",
            "heroprotocol.versions.protocol71652",
            "heroprotocol.versions.protocol71931",
            "heroprotocol.versions.protocol72053",
            "heroprotocol.versions.protocol72191",
            "heroprotocol.versions.protocol72307",
            "heroprotocol.versions.protocol72481",
            "heroprotocol.versions.protocol72649",
            "heroprotocol.versions.protocol72880",
            "heroprotocol.versions.protocol73016",
            "heroprotocol.versions.protocol73493",
            "heroprotocol.versions.protocol73576",
            "heroprotocol.versions.protocol73662",
            "heroprotocol.versions.protocol74238",
            "heroprotocol.versions.protocol74592",
            "heroprotocol.versions.protocol74665",
            "heroprotocol.versions.protocol74739",
            "heroprotocol.versions.protocol75132",
            "heroprotocol.versions.protocol75410",
            "heroprotocol.versions.protocol75484",
            "heroprotocol.versions.protocol75589",
            "heroprotocol.versions.protocol75792",
            "heroprotocol.versions.protocol76003",
            "heroprotocol.versions.protocol76124",
            "heroprotocol.versions.protocol76268",
            "heroprotocol.versions.protocol76389",
            "heroprotocol.versions.protocol76437",
            "heroprotocol.versions.protocol76517",
            "heroprotocol.versions.protocol76753",
            "heroprotocol.versions.protocol76781",
            "heroprotocol.versions.protocol76893",
            "heroprotocol.versions.protocol77205",
            "heroprotocol.versions.protocol77406",
            "heroprotocol.versions.protocol77435",
            "heroprotocol.versions.protocol77525",
            "heroprotocol.versions.protocol77548",
            "heroprotocol.versions.protocol77662",
            "heroprotocol.versions.protocol77692",
            "heroprotocol.versions.protocol77981",
            "heroprotocol.versions.protocol78256",
            "heroprotocol.versions.protocol78679",
            "heroprotocol.versions.protocol78725",
            "heroprotocol.versions.protocol79033",
            "heroprotocol.versions.protocol79155",
            "heroprotocol.versions.protocol79515",
            "heroprotocol.versions.protocol79999",
            "heroprotocol.versions.protocol80046",
            "heroprotocol.versions.protocol80205",
            "heroprotocol.versions.protocol80293",
            "heroprotocol.versions.protocol80333",
            "heroprotocol.versions.protocol80702",
            "heroprotocol.versions.protocol81376",
            "heroprotocol.versions.protocol81571",
            "heroprotocol.versions.protocol81700",
            "heroprotocol.versions.protocol82169"
        ],
        "version": "2.52.1.82169"
    },
    "heroqsx-distributions": {
        "cmdline": [],
        "modules": [
            "heroqsx_distributions",
            "heroqsx_distributions.Binomialdistribution",
            "heroqsx_distributions.Gaussiandistribution",
            "heroqsx_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "heroquotes": {
        "cmdline": [],
        "modules": [
            "heroquotes"
        ],
        "version": "1.0"
    },
    "herosrpg": {
        "cmdline": [],
        "modules": [
            "HerosRPG",
            "HerosRPG.Hero",
            "HerosRPG.HerosRPG"
        ],
        "version": "1.3"
    },
    "herpetologist": {
        "cmdline": [],
        "modules": [
            "herpetologist"
        ],
        "version": "0.0.9"
    },
    "herptest": {
        "cmdline": [],
        "modules": [
            "herptest",
            "herptest.extract_lms_archive",
            "herptest.run_test_suite",
            "herptest.toolbox"
        ],
        "version": "0.9.9.3"
    },
    "herring": {
        "cmdline": [],
        "modules": [
            "herring",
            "herring.argument_helper",
            "herring.hack_sys_path",
            "herring.herring_app",
            "herring.herring_cli",
            "herring.herring_file",
            "herring.herring_loader",
            "herring.herring_main",
            "herring.herring_runner",
            "herring.herring_settings",
            "herring.parallelize",
            "herring.support",
            "herring.support.application_settings",
            "herring.support.comparable_mixin",
            "herring.support.graceful_interrupt_handler",
            "herring.support.list_helper",
            "herring.support.mkdir_p",
            "herring.support.path",
            "herring.support.safe_edit",
            "herring.support.simple_logger",
            "herring.support.terminalsize",
            "herring.support.toposort2",
            "herring.support.touch",
            "herring.support.utils",
            "herring.task_with_args"
        ],
        "version": "0.1.49"
    },
    "hershey-fonts": {
        "cmdline": [],
        "modules": [
            "HersheyFonts",
            "HersheyFonts.HersheyFonts",
            "tests",
            "tests.test_HersheyFonts"
        ],
        "version": "2.0.0"
    },
    "hertizianantenna": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hertz-scraper": {
        "cmdline": [],
        "modules": [
            "hertz_scraper",
            "hertz_scraper.Car",
            "hertz_scraper.Scraper"
        ],
        "version": "0.0.2"
    },
    "hes": {
        "cmdline": [],
        "modules": [
            "hes.hes"
        ],
        "version": "0.5"
    },
    "hesburgh-utilities": {
        "cmdline": [],
        "modules": [
            "hesburgh",
            "hesburgh.heslog",
            "hesburgh.hestest",
            "hesburgh.hesutil",
            "hesburgh.scriptText",
            "hesburgh.scriptutil",
            "hesburgh.secretFiles",
            "hesburgh.test"
        ],
        "version": "2.0.5"
    },
    "hescore-hpxml": {
        "cmdline": [],
        "modules": [
            "hescorehpxml",
            "hescorehpxml.base",
            "hescorehpxml.create_all_example_json",
            "hescorehpxml.exceptions",
            "hescorehpxml.hpxml2",
            "hescorehpxml.hpxml3"
        ],
        "version": "6.0.1"
    },
    "hesdeploy": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.2"
    },
    "hesiod53": {
        "cmdline": [],
        "modules": [
            "hesiod53",
            "hesiod53.ssh",
            "hesiod53.sync"
        ],
        "version": "0.1.0"
    },
    "hesiod53-jumpcloud": {
        "cmdline": [],
        "modules": [
            "jumpcloud",
            "jumpcloud.jumpcloud"
        ],
        "version": "0.1.2"
    },
    "hesitate": {
        "cmdline": [],
        "modules": [
            "django16",
            "django16.settings",
            "django16.urls",
            "django16.wsgi",
            "django17",
            "django17.settings",
            "django17.urls",
            "django17.wsgi",
            "hesitate",
            "hesitate.conf",
            "hesitate.driver",
            "hesitate.rewriter",
            "hesitate.wrappers",
            "hesitate.wrappers.django",
            "test_app",
            "test_app.migrations",
            "test_app.tests",
            "test_app.views",
            "tests",
            "tests.impl_docstring",
            "tests.impl_futureimport",
            "tests.impl_plain",
            "tests.test_rewriter"
        ],
        "version": "0.0.2"
    },
    "hesong-ipsc-busnetcli": {
        "cmdline": [],
        "modules": [
            "hesong",
            "hesong.ipsc",
            "hesong.ipsc.busnetcli",
            "hesong.ipsc.busnetcli._c",
            "hesong.ipsc.busnetcli._c.helper",
            "hesong.ipsc.busnetcli._c.mutual",
            "hesong.ipsc.busnetcli._c.netapi",
            "hesong.ipsc.busnetcli._version",
            "hesong.ipsc.busnetcli.client",
            "hesong.ipsc.busnetcli.errors",
            "hesong.ipsc.busnetcli.head",
            "hesong.ipsc.busnetcli.utils",
            "hesong.ipsc.busnetcli.version"
        ],
        "version": "3.2.1.post1"
    },
    "hesong-utils": {
        "cmdline": [],
        "modules": [
            "hesong",
            "hesong.utils",
            "hesong.utils.configfile",
            "hesong.utils.jsonable",
            "hesong.utils.jsonrpc",
            "hesong.utils.jsonutils",
            "hesong.utils.loggermixin",
            "hesong.utils.loggingconfig",
            "hesong.utils.stringhelper"
        ],
        "version": "1.1.post2"
    },
    "hesperides-cli": {
        "cmdline": [],
        "modules": [
            "hesperidescli",
            "hesperidescli.applications",
            "hesperidescli.applications.applications",
            "hesperidescli.applications.platforms",
            "hesperidescli.applications.platforms.platforms",
            "hesperidescli.applications.platforms.properties",
            "hesperidescli.applications.platforms.properties.properties",
            "hesperidescli.applications.platforms.snapshots",
            "hesperidescli.applications.platforms.snapshots.snapshots",
            "hesperidescli.cache",
            "hesperidescli.cache.cache",
            "hesperidescli.client",
            "hesperidescli.configure",
            "hesperidescli.configure.configfile",
            "hesperidescli.configure.configure",
            "hesperidescli.configure.reader",
            "hesperidescli.configure.writer",
            "hesperidescli.events",
            "hesperidescli.events.events",
            "hesperidescli.feedback",
            "hesperidescli.feedback.feedback",
            "hesperidescli.files",
            "hesperidescli.files.files",
            "hesperidescli.hesperidescli",
            "hesperidescli.indexation",
            "hesperidescli.indexation.indexation",
            "hesperidescli.local",
            "hesperidescli.local.descriptor_utils",
            "hesperidescli.local.generate",
            "hesperidescli.local.validate",
            "hesperidescli.modules",
            "hesperidescli.modules.modules",
            "hesperidescli.stats",
            "hesperidescli.stats.stats",
            "hesperidescli.technos",
            "hesperidescli.technos.technos",
            "hesperidescli.users",
            "hesperidescli.users.users",
            "hesperidescli.utils",
            "hesperidescli.versions",
            "hesperidescli.versions.versions"
        ],
        "version": "0.4.3"
    },
    "hess": {
        "cmdline": [],
        "modules": [
            "hess",
            "hess.hess"
        ],
        "version": "0.0.6"
    },
    "hesseflux": {
        "cmdline": [
            "europe-fluxdata_units.csv",
            "europe-fluxdata_units.py"
        ],
        "modules": [
            "hesseflux",
            "hesseflux.argsort",
            "hesseflux.ascii2ascii",
            "hesseflux.const",
            "hesseflux.const.const",
            "hesseflux.date2dec",
            "hesseflux.dec2date",
            "hesseflux.division",
            "hesseflux.esat",
            "hesseflux.fgui",
            "hesseflux.fread",
            "hesseflux.fsread",
            "hesseflux.functions",
            "hesseflux.functions.fit_functions",
            "hesseflux.functions.general_functions",
            "hesseflux.functions.logistic_function",
            "hesseflux.functions.opti_test_functions",
            "hesseflux.functions.sa_test_functions",
            "hesseflux.gapfill",
            "hesseflux.logtools",
            "hesseflux.logtools.logtools",
            "hesseflux.mad",
            "hesseflux.madspikes",
            "hesseflux.nee2gpp",
            "hesseflux.sread",
            "hesseflux.ustarfilter",
            "hesseflux.version"
        ],
        "version": "3.0"
    },
    "hessianfree": {
        "cmdline": [],
        "modules": [
            "hessianfree",
            "hessianfree.dataplotter",
            "hessianfree.demos",
            "hessianfree.ffnet",
            "hessianfree.gpu",
            "hessianfree.gpu.kernel_wrappers",
            "hessianfree.gpu.profiling",
            "hessianfree.loss_funcs",
            "hessianfree.nonlinearities",
            "hessianfree.optimizers",
            "hessianfree.rnnet",
            "hessianfree.test",
            "hessianfree.tests",
            "hessianfree.tests.test_demos",
            "hessianfree.tests.test_ffnet",
            "hessianfree.tests.test_gpu",
            "hessianfree.tests.test_optimizers",
            "hessianfree.tests.test_rnnet",
            "hessianfree.version"
        ],
        "version": "0.4.0"
    },
    "hessianpy": {
        "cmdline": [],
        "modules": [
            "hessian",
            "hessian.UTF8",
            "hessian.client",
            "hessian.common",
            "hessian.hello",
            "hessian.hessian",
            "hessian.lab",
            "hessian.secureServer",
            "hessian.server",
            "hessian.test",
            "hessian.test.UTF8Test",
            "hessian.test.test",
            "hessian.test.testSecure",
            "hessian.transports"
        ],
        "version": "1.0.4"
    },
    "hester-zqing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hestia": {
        "cmdline": [],
        "modules": [
            "hestia",
            "hestia.auth",
            "hestia.bool_utils",
            "hestia.cached_property",
            "hestia.crypto",
            "hestia.date_formatter",
            "hestia.date_utils",
            "hestia.datetime_typing",
            "hestia.ephemeral_services",
            "hestia.exceptions",
            "hestia.fs",
            "hestia.hashing",
            "hestia.headers",
            "hestia.http",
            "hestia.humanize",
            "hestia.imports",
            "hestia.internal_services",
            "hestia.list_utils",
            "hestia.logging_utils",
            "hestia.manager_interface",
            "hestia.memoize_decorators",
            "hestia.np_utils",
            "hestia.paths",
            "hestia.service_interface",
            "hestia.signal_decorators",
            "hestia.string_utils",
            "hestia.tz_utils",
            "hestia.units",
            "hestia.unknown",
            "hestia.urls_utils",
            "hestia.user_path",
            "tests",
            "tests.test_humanize",
            "tests.test_list_utils",
            "tests.test_logging_utils",
            "tests.test_memoize",
            "tests.test_units"
        ],
        "version": "0.6.0"
    },
    "hestia-api": {
        "cmdline": [],
        "modules": [
            "hestia",
            "hestia._version",
            "hestia.api"
        ],
        "version": "0.0.8"
    },
    "hestia-earth-abstract-engine": {
        "cmdline": [],
        "modules": [
            "hestia_earth",
            "hestia_earth.abstract_engine",
            "hestia_earth.abstract_hierarchy",
            "hestia_earth.abstract_model"
        ],
        "version": "0.0.10"
    },
    "hestia-earth-calculation": {
        "cmdline": [],
        "modules": [
            "hestia_earth",
            "hestia_earth.calculation",
            "hestia_earth.calculation_hierarchies",
            "hestia_earth.data",
            "hestia_earth.data.emissions",
            "hestia_earth.data.impacts",
            "hestia_earth.data.lookups",
            "hestia_earth.emissions",
            "hestia_earth.emissions.co2ToAirLimeHydrolysis",
            "hestia_earth.emissions.co2ToAirUreaHydrolysis",
            "hestia_earth.emissions.n2OToAirInorganicFertilizerDirect",
            "hestia_earth.emissions.n2OToAirOrganicFertilizerDirect",
            "hestia_earth.impacts",
            "hestia_earth.impacts.bio1",
            "hestia_earth.models",
            "hestia_earth.models.ch4N2ONh3AndNoxToAirCropResidueBurningAkagiEtAl2011AndIpcc2006",
            "hestia_earth.models.co2ToAirLimeAndUreaIpcc2006",
            "hestia_earth.models.n2OToAirFertilizerAndExcretaDirectIpcc2006",
            "hestia_earth.models.n2OToAirFertilizerAndExcretadirectStehfestBouwman2006",
            "hestia_earth.models.nh3ToAirCropResidueDecompositionDeRuijterEtAl2010",
            "hestia_earth.models.nh3ToAirInorganicFertilizerEuropeanEnvironmentAgency2016",
            "hestia_earth.models.nh3ToAirOrganicFertilizerWebbEtAl2012AndSintermannEtAl2012",
            "hestia_earth.models.no3ToGroundwaterAllInputsPooreNemecek2018",
            "hestia_earth.models.noxToAirFertilizerAndExcretaStehfestBouwman2006",
            "hestia_earth.version"
        ],
        "version": "0.0.8"
    },
    "hestia-earth-extend-bibliography": {
        "cmdline": [],
        "modules": [
            "hestia_earth",
            "hestia_earth.bibliography_apis",
            "hestia_earth.bibliography_apis.crossref",
            "hestia_earth.bibliography_apis.mendeley",
            "hestia_earth.bibliography_apis.utils",
            "hestia_earth.bibliography_apis.wos",
            "hestia_earth.bibliography_apis.wos_rest",
            "hestia_earth.bibliography_apis.wos_rest.client",
            "hestia_earth.bibliography_apis.wos_soap",
            "hestia_earth.bibliography_apis.wos_soap.client",
            "hestia_earth.extend_bibliography"
        ],
        "version": "0.2.5"
    },
    "hestia-earth-extend-mendeley": {
        "cmdline": [],
        "modules": [
            "hestia_earth",
            "hestia_earth.mendeley"
        ],
        "version": "0.1.1"
    },
    "hestia-earth-gap-filling": {
        "cmdline": [],
        "modules": [
            "hestia_earth",
            "hestia_earth.data",
            "hestia_earth.data.lookups",
            "hestia_earth.data.properties",
            "hestia_earth.gap_filling",
            "hestia_earth.gap_filling_hierarchy",
            "hestia_earth.gapfills",
            "hestia_earth.gapfills.bg_crop_residue_dry_matter",
            "hestia_earth.gapfills.cropseed",
            "hestia_earth.gapfills.machineryUsage",
            "hestia_earth.gapfills.rootingdepth",
            "hestia_earth.models",
            "hestia_earth.models.bg_crop_residue_dm_model",
            "hestia_earth.models.crop_seed_model",
            "hestia_earth.models.machinery_usage_model",
            "hestia_earth.models.root_depth_model",
            "hestia_earth.version"
        ],
        "version": "0.1.1"
    },
    "hestia-earth-schema": {
        "cmdline": [],
        "modules": [
            "hestia_earth",
            "hestia_earth.schema"
        ],
        "version": "0.1.4"
    },
    "hestia-earth-validation": {
        "cmdline": [],
        "modules": [
            "hestia_earth",
            "hestia_earth.gadm",
            "hestia_earth.geojson",
            "hestia_earth.validation",
            "hestia_earth.validators",
            "hestia_earth.validators.cycle",
            "hestia_earth.validators.organisation",
            "hestia_earth.validators.shared",
            "hestia_earth.validators.site"
        ],
        "version": "0.0.9"
    },
    "hestiaapi": {
        "cmdline": [],
        "modules": [
            "hestia",
            "hestia._version",
            "hestia.api"
        ],
        "version": "0.0.9"
    },
    "hesystem": {
        "cmdline": [],
        "modules": [
            "hesystem",
            "hesystem.client",
            "hesystem.essentials",
            "hesystem.server"
        ],
        "version": "0.3.6.2"
    },
    "het": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hetdex-api": {
        "cmdline": [],
        "modules": [
            "hetdex_api",
            "hetdex_api.config",
            "hetdex_api.detections",
            "hetdex_api.detwidgets",
            "hetdex_api.elixer",
            "hetdex_api.elixer_widget_cls",
            "hetdex_api.elixer_widget_for",
            "hetdex_api.elixer_widget_lae",
            "hetdex_api.elixer_widget_spur",
            "hetdex_api.elixer_widgets",
            "hetdex_api.extract",
            "hetdex_api.flux_limits",
            "hetdex_api.flux_limits.collapse_cubes",
            "hetdex_api.flux_limits.flim_models",
            "hetdex_api.flux_limits.generate_simulation_inputs",
            "hetdex_api.flux_limits.hdf5_sensitivity_cubes",
            "hetdex_api.flux_limits.sensitivity_cube",
            "hetdex_api.input_utils",
            "hetdex_api.mask",
            "hetdex_api.mask_tools",
            "hetdex_api.mask_tools.amplifier_positions",
            "hetdex_api.mask_tools.generate_sky_masks",
            "hetdex_api.qc",
            "hetdex_api.query_widget",
            "hetdex_api.shot",
            "hetdex_api.sqlite_utils",
            "hetdex_api.survey",
            "hetdex_tools",
            "hetdex_tools.compute_average_one_sigma",
            "hetdex_tools.fof_kdtree",
            "hetdex_tools.get_contour",
            "hetdex_tools.get_rsp_spec",
            "hetdex_tools.get_shots_of_interest",
            "hetdex_tools.get_spec",
            "hetdex_tools.get_spec2D",
            "hetdex_tools.hdf5_visualize_ds9",
            "hetdex_tools.hetillum",
            "hetdex_tools.line_fitting",
            "hetdex_tools.make_curated_catalog",
            "hetdex_tools.make_flim_mask",
            "hetdex_tools.plot_flim_slice",
            "hetdex_tools.plot_flux_limit_v_detections"
        ],
        "version": "0.8.1"
    },
    "heteromotility": {
        "cmdline": [],
        "modules": [
            "heteromotility",
            "heteromotility.command_line",
            "heteromotility.dfa",
            "heteromotility.heteromotility",
            "heteromotility.hmdetail",
            "heteromotility.hmio",
            "heteromotility.hmplot",
            "heteromotility.hmsims",
            "heteromotility.hmstats",
            "heteromotility.hmtests",
            "heteromotility.hmtools",
            "heteromotility.hmtrack"
        ],
        "version": "0.1.9"
    },
    "heteroscedasticity-tests": {
        "cmdline": [],
        "modules": [
            "heteroscedasticity_tests",
            "heteroscedasticity_tests.Glejser_test",
            "heteroscedasticity_tests.Heteroscedasticity_test_general",
            "heteroscedasticity_tests.Park_test"
        ],
        "version": "1.4"
    },
    "hetio": {
        "cmdline": [],
        "modules": [
            "hetio",
            "hetio.abbreviation",
            "hetio.hetnet",
            "hetio.matrix",
            "hetio.neo4j",
            "hetio.pathtools",
            "hetio.permute",
            "hetio.readwrite",
            "hetio.stats"
        ],
        "version": "0.2.11"
    },
    "hetmatpy": {
        "cmdline": [],
        "modules": [
            "hetmatpy",
            "hetmatpy.degree_group",
            "hetmatpy.degree_weight",
            "hetmatpy.diffusion",
            "hetmatpy.hetmat",
            "hetmatpy.hetmat.archive",
            "hetmatpy.hetmat.caching",
            "hetmatpy.matrix",
            "hetmatpy.pipeline",
            "hetmatpy.testing",
            "hetmatpy.xarray"
        ],
        "version": "0.0.0"
    },
    "hetnetpy": {
        "cmdline": [],
        "modules": [
            "hetio",
            "hetio.abbreviation",
            "hetio.hetnet",
            "hetio.matrix",
            "hetio.neo4j",
            "hetio.pathtools",
            "hetio.permute",
            "hetio.readwrite",
            "hetio.stats",
            "hetnetpy",
            "hetnetpy.abbreviation",
            "hetnetpy.hetnet",
            "hetnetpy.matrix",
            "hetnetpy.neo4j",
            "hetnetpy.pathtools",
            "hetnetpy.permute",
            "hetnetpy.readwrite",
            "hetnetpy.stats"
        ],
        "version": "0.3.0"
    },
    "hetzner": {
        "cmdline": [
            "hetznerctl"
        ],
        "modules": [
            "hetzner",
            "hetzner.failover",
            "hetzner.rdns",
            "hetzner.reset",
            "hetzner.robot",
            "hetzner.server",
            "hetzner.tests",
            "hetzner.tests.test_util_addr",
            "hetzner.util",
            "hetzner.util.addr",
            "hetzner.util.http",
            "hetzner.util.scraping"
        ],
        "version": "0.8.2"
    },
    "hetzner-fix-report": {
        "cmdline": [
            "hetzner-fix-report"
        ],
        "modules": [],
        "version": "0.11.0"
    },
    "hetzner-set-dns-txt-record": {
        "cmdline": [],
        "modules": [
            "hetzner_set_dns_txt_record",
            "hetzner_set_dns_txt_record.api"
        ],
        "version": "0.2.2"
    },
    "hetznercloud": {
        "cmdline": [],
        "modules": [
            "hetznercloud",
            "hetznercloud.actions",
            "hetznercloud.client",
            "hetznercloud.constants",
            "hetznercloud.datacenters",
            "hetznercloud.exceptions",
            "hetznercloud.floating_ips",
            "hetznercloud.images",
            "hetznercloud.isos",
            "hetznercloud.locations",
            "hetznercloud.server_types",
            "hetznercloud.servers",
            "hetznercloud.shared",
            "hetznercloud.ssh_keys"
        ],
        "version": "1.1.1"
    },
    "heudiconv": {
        "cmdline": [],
        "modules": [
            "heudiconv",
            "heudiconv.bids",
            "heudiconv.cli",
            "heudiconv.cli.monitor",
            "heudiconv.cli.run",
            "heudiconv.convert",
            "heudiconv.dicoms",
            "heudiconv.external",
            "heudiconv.external.dcmstack",
            "heudiconv.external.dlad",
            "heudiconv.external.pydicom",
            "heudiconv.external.tests",
            "heudiconv.external.tests.test_dlad",
            "heudiconv.heuristics",
            "heudiconv.heuristics.banda-bids",
            "heudiconv.heuristics.bids_ME",
            "heudiconv.heuristics.bids_with_ses",
            "heudiconv.heuristics.cmrr_heuristic",
            "heudiconv.heuristics.convertall",
            "heudiconv.heuristics.example",
            "heudiconv.heuristics.multires_7Tbold",
            "heudiconv.heuristics.reproin",
            "heudiconv.heuristics.studyforrest_phase2",
            "heudiconv.heuristics.test_reproin",
            "heudiconv.heuristics.uc_bids",
            "heudiconv.info",
            "heudiconv.parser",
            "heudiconv.queue",
            "heudiconv.tests",
            "heudiconv.tests.anonymize_script",
            "heudiconv.tests.test_dicoms",
            "heudiconv.tests.test_heuristics",
            "heudiconv.tests.test_main",
            "heudiconv.tests.test_monitor",
            "heudiconv.tests.test_queue",
            "heudiconv.tests.test_regression",
            "heudiconv.tests.test_tarballs",
            "heudiconv.tests.test_utils",
            "heudiconv.tests.utils",
            "heudiconv.utils"
        ],
        "version": "0.8.0"
    },
    "heureka": {
        "cmdline": [],
        "modules": [
            "heureka",
            "heureka.io",
            "heureka.io.qap"
        ],
        "version": "0.1.1"
    },
    "heuris": {
        "cmdline": [],
        "modules": [
            "heuris",
            "heuris.client",
            "heuris.message"
        ],
        "version": "0.5.0"
    },
    "heurisp": {
        "cmdline": [],
        "modules": [
            "heurisp",
            "heurisp.heurisp"
        ],
        "version": "0.3.0"
    },
    "heurispy": {
        "cmdline": [],
        "modules": [
            "heurispy",
            "heurispy.ayudantes",
            "heurispy.framework",
            "heurispy.heuristicas",
            "heurispy.heuristicas.busqueda_armonica",
            "heurispy.heuristicas.busqueda_local_iterada",
            "heurispy.heuristicas.busqueda_tabu",
            "heurispy.heuristicas.heuristica",
            "heurispy.heuristicas.recocido_simulado",
            "heurispy.problema",
            "heurispy.recolector_resultados",
            "heurispy.script_prueba_automatizada"
        ],
        "version": "1.0.5"
    },
    "heuristic-optimization": {
        "cmdline": [],
        "modules": [
            "heuristic_optimization",
            "heuristic_optimization.base",
            "heuristic_optimization.base.batch_optimizer",
            "heuristic_optimization.base.iterative_optimizer",
            "heuristic_optimization.base.optimizer",
            "heuristic_optimization.optimizers",
            "heuristic_optimization.optimizers.particle_swarm",
            "heuristic_optimization.util",
            "heuristic_optimization.util.position_initializers",
            "heuristic_optimization.util.util"
        ],
        "version": "0.4.3"
    },
    "heva": {
        "cmdline": [],
        "modules": [
            "cn",
            "cn.mldn",
            "cn.mldn.info",
            "cn.mldn.info.information",
            "cn.mldn.info.message"
        ],
        "version": "0.1"
    },
    "hevc": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hevea": {
        "cmdline": [],
        "modules": [
            "hevea",
            "hevea.handler"
        ],
        "version": "0.2"
    },
    "hewei": {
        "cmdline": [],
        "modules": [
            "hewei"
        ],
        "version": "1.1.0"
    },
    "hewwwo": {
        "cmdline": [],
        "modules": [
            "hewwwo"
        ],
        "version": "1.0.6"
    },
    "hex": {
        "cmdline": [],
        "modules": [
            "hex"
        ],
        "version": "2.2.0"
    },
    "hex-grid": {
        "cmdline": [],
        "modules": [],
        "version": "0.7.1"
    },
    "hex-gym": {
        "cmdline": [],
        "modules": [
            "hex_gym",
            "hex_gym.envs",
            "hex_gym.envs.pod_env"
        ],
        "version": "1.0.0"
    },
    "hex-ocr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hex-utils": {
        "cmdline": [],
        "modules": [
            "hex_utils",
            "hex_utils.asc",
            "hex_utils.asc2hasc",
            "hex_utils.csv2hasc",
            "hex_utils.hasc",
            "hex_utils.hasc2geojson",
            "hex_utils.hasc2gml",
            "hex_utils.parserExtent",
            "hex_utils.parserSurface",
            "hex_utils.raster",
            "hex_utils.surface2asc",
            "hex_utils.surface2hasc",
            "surfaces",
            "surfaces.channel",
            "surfaces.eat2",
            "surfaces.eat2Gaussian",
            "surfaces.eat2Hubbert",
            "surfaces.pit",
            "surfaces.pitGaussian",
            "surfaces.pitHubbert",
            "surfaces.surface",
            "tests",
            "tests.test_optional_headers"
        ],
        "version": "0.4.5"
    },
    "hex2": {
        "cmdline": [],
        "modules": [
            "hex"
        ],
        "version": "2.2.0"
    },
    "hex2dec": {
        "cmdline": [],
        "modules": [
            "hex2dec"
        ],
        "version": "1.0.0"
    },
    "hex2file": {
        "cmdline": [],
        "modules": [
            "hex2file",
            "hex2file.hex2file"
        ],
        "version": "1.1.1"
    },
    "hex2words": {
        "cmdline": [],
        "modules": [
            "hex2words",
            "hex2words.hex2words",
            "hex2words.input",
            "hex2words.program",
            "hex2words.version"
        ],
        "version": "0.1.0"
    },
    "hexadecimal": {
        "cmdline": [],
        "modules": [],
        "version": "0.51"
    },
    "hexafid": {
        "cmdline": [],
        "modules": [
            "hexafid",
            "hexafid.hexafid_analysis",
            "hexafid.hexafid_cli",
            "hexafid.hexafid_core",
            "hexafid.hexafid_file",
            "hexafid.hexafid_keygen",
            "hexafid.hexafid_utilities",
            "hexafid.hexafid_widget",
            "hexafid.tests",
            "hexafid.tests.test_app_random",
            "hexafid.tests.test_app_vectors",
            "tests",
            "tests.integration",
            "tests.integration.check_random",
            "tests.integration.test_random",
            "tests.integration.test_vectors",
            "tests.unit",
            "tests.unit.test_hexafid_core",
            "tests.unit.test_hexafid_keygen"
        ],
        "version": "0.7.3.2"
    },
    "hexagdly": {
        "cmdline": [],
        "modules": [
            "hexagdly",
            "hexagdly.hexagdly"
        ],
        "version": "2.0.2"
    },
    "hexagen": {
        "cmdline": [
            "hexagen"
        ],
        "modules": [
            "hexagen"
        ],
        "version": "1.2"
    },
    "hexagon": {
        "cmdline": [],
        "modules": [
            "hexagon",
            "hexagon.core",
            "hexagon.utils"
        ],
        "version": "0.1"
    },
    "hexagonit-decorators": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.decorators",
            "hexagonit.decorators.browser",
            "hexagonit.decorators.tests"
        ],
        "version": "0.2"
    },
    "hexagonit-form": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.form",
            "hexagonit.form.interfaces",
            "hexagonit.form.orderable",
            "hexagonit.form.tests"
        ],
        "version": "0.1"
    },
    "hexagonit-portletroles": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.portletroles",
            "hexagonit.portletroles.browser",
            "hexagonit.portletroles.browser.interfaces",
            "hexagonit.portletroles.tests",
            "hexagonit.portletroles.tests.base",
            "hexagonit.portletroles.tests.rolemap",
            "hexagonit.portletroles.tests.test_functional",
            "hexagonit.portletroles.tests.test_setup"
        ],
        "version": "1.0"
    },
    "hexagonit-portletstyle": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.portletstyle",
            "hexagonit.portletstyle.browser",
            "hexagonit.portletstyle.browser.controlpanel",
            "hexagonit.portletstyle.interfaces",
            "hexagonit.portletstyle.patcher",
            "hexagonit.portletstyle.tests",
            "hexagonit.portletstyle.tests.base",
            "hexagonit.portletstyle.tests.test_controlpanel",
            "hexagonit.portletstyle.tests.test_docstring",
            "hexagonit.portletstyle.tests.test_functional",
            "hexagonit.portletstyle.tests.test_portlets",
            "hexagonit.portletstyle.tests.test_setup",
            "hexagonit.portletstyle.tests.test_style_selection",
            "hexagonit.portletstyle.tests.test_vocabulary",
            "hexagonit.portletstyle.vocabulary"
        ],
        "version": "1.3.2"
    },
    "hexagonit-recipe-cmmi": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.recipe",
            "hexagonit.recipe.cmmi",
            "hexagonit.recipe.cmmi.tests"
        ],
        "version": "2.0"
    },
    "hexagonit-recipe-download": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.recipe",
            "hexagonit.recipe.download",
            "hexagonit.recipe.download.tests"
        ],
        "version": "1.7.1"
    },
    "hexagonit-socialbutton": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.socialbutton",
            "hexagonit.socialbutton.adapter",
            "hexagonit.socialbutton.adapter.dollar",
            "hexagonit.socialbutton.browser",
            "hexagonit.socialbutton.browser.interfaces",
            "hexagonit.socialbutton.browser.miscellaneous",
            "hexagonit.socialbutton.browser.template",
            "hexagonit.socialbutton.browser.viewlet",
            "hexagonit.socialbutton.config",
            "hexagonit.socialbutton.data",
            "hexagonit.socialbutton.interfaces",
            "hexagonit.socialbutton.tests",
            "hexagonit.socialbutton.tests.base",
            "hexagonit.socialbutton.tests.old",
            "hexagonit.socialbutton.tests.test_functional",
            "hexagonit.socialbutton.tests.test_setup",
            "hexagonit.socialbutton.tests.test_upgrades",
            "hexagonit.socialbutton.tests.test_viewlet",
            "hexagonit.socialbutton.upgrades",
            "hexagonit.socialbutton.utility",
            "hexagonit.socialbutton.vocabulary"
        ],
        "version": "0.11"
    },
    "hexagonit-swfheader": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.swfheader",
            "hexagonit.swfheader.tests"
        ],
        "version": "1.2"
    },
    "hexagonit-testing": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.testing",
            "hexagonit.testing.browser",
            "hexagonit.testing.date",
            "hexagonit.testing.mech",
            "hexagonit.testing.mime",
            "hexagonit.testing.tests",
            "hexagonit.testing.tests.base",
            "hexagonit.testing.tests.browser",
            "hexagonit.testing.tests.browser.template",
            "hexagonit.testing.tests.test_browser",
            "hexagonit.testing.tests.test_date",
            "hexagonit.testing.tests.test_datetime",
            "hexagonit.testing.tests.test_functional",
            "hexagonit.testing.tests.test_mechanize",
            "hexagonit.testing.tests.test_mime"
        ],
        "version": "1.2.2"
    },
    "hexagonit-virtualgallery": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.virtualgallery",
            "hexagonit.virtualgallery.browser",
            "hexagonit.virtualgallery.browser.data",
            "hexagonit.virtualgallery.browser.gallery",
            "hexagonit.virtualgallery.browser.interfaces",
            "hexagonit.virtualgallery.browser.settings",
            "hexagonit.virtualgallery.interfaces",
            "hexagonit.virtualgallery.schema",
            "hexagonit.virtualgallery.tests",
            "hexagonit.virtualgallery.tests.base",
            "hexagonit.virtualgallery.tests.test_data",
            "hexagonit.virtualgallery.tests.test_functional",
            "hexagonit.virtualgallery.tests.test_gallery_view",
            "hexagonit.virtualgallery.tests.test_setup"
        ],
        "version": "1.0"
    },
    "hexagons": {
        "cmdline": [],
        "modules": [
            "hexagons",
            "hexagons.ascii",
            "hexagons.coordinate",
            "hexagons.grid",
            "hexagons.sample"
        ],
        "version": "0.1.0.0"
    },
    "hexahexacontadecimal": {
        "cmdline": [],
        "modules": [
            "hexahexacontadecimal",
            "hexahexacontadecimal.num_encode_base64"
        ],
        "version": "2.2.1"
    },
    "hexahub": {
        "cmdline": [],
        "modules": [
            "hexahub",
            "hexahub.cmd",
            "hexahub.connection",
            "hexahub.exceptions",
            "hexahub.response",
            "hexahub.utils"
        ],
        "version": "1.0.9"
    },
    "hexalattice": {
        "cmdline": [],
        "modules": [
            "hexalattice",
            "hexalattice.hexalattice"
        ],
        "version": "1.0.0"
    },
    "hexalattice-alexkaz": {
        "cmdline": [],
        "modules": [
            "hexalattice",
            "hexalattice.hexalattice"
        ],
        "version": "1.0.0"
    },
    "hexapodo-utils": {
        "cmdline": [],
        "modules": [
            "hexapodo_utils",
            "hexapodo_utils.f1",
            "hexapodo_utils.f1_p",
            "hexapodo_utils.text",
            "text_utils",
            "text_utils.f1",
            "text_utils.f1_p",
            "text_utils.helllo"
        ],
        "version": "0.1"
    },
    "hexaprime": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexaviz": {
        "cmdline": [],
        "modules": [
            "hexaviz"
        ],
        "version": "1.2.1"
    },
    "hexbytes": {
        "cmdline": [],
        "modules": [
            "hexbytes",
            "hexbytes._utils",
            "hexbytes.main"
        ],
        "version": "0.2.1"
    },
    "hexc": {
        "cmdline": [],
        "modules": [
            "__init__"
        ],
        "version": "0.1.2"
    },
    "hexclient": {
        "cmdline": [
            "hex_client"
        ],
        "modules": [
            "hex_client",
            "hex_connection",
            "spellbook"
        ],
        "version": "0.1.2"
    },
    "hexcolors": {
        "cmdline": [],
        "modules": [
            "hexcolors",
            "hexcolors.colors"
        ],
        "version": "0.0.2"
    },
    "hexconnector": {
        "cmdline": [],
        "modules": [
            "hexconnector",
            "hexconnector.connector",
            "hexconnector.version"
        ],
        "version": "0.1.1"
    },
    "hexcover": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0"
    },
    "hexdi": {
        "cmdline": [],
        "modules": [
            "hexdi",
            "hexdi.core",
            "hexdi.decorator",
            "hexdi.finder",
            "hexdi.gentype",
            "hexdi.lifetime",
            "hexdi.loader",
            "hexdi.meta",
            "hexdi.utils"
        ],
        "version": "0.2.1"
    },
    "hexdomain": {
        "cmdline": [],
        "modules": [
            "hexdomain"
        ],
        "version": "1.0.0"
    },
    "hexdoor": {
        "cmdline": [],
        "modules": [
            "hexdoor",
            "hexdoor.main"
        ],
        "version": "0.1.0"
    },
    "hexdump": {
        "cmdline": [],
        "modules": [
            "hexdump"
        ],
        "version": "3.3"
    },
    "hexdutils": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.1"
    },
    "hexeditor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexencoder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexer": {
        "cmdline": [],
        "modules": [
            "hexer",
            "hexer.hexer",
            "hexer.metropro"
        ],
        "version": "0.0.2"
    },
    "hexer-hx": {
        "cmdline": [],
        "modules": [
            "hexer",
            "hexer.regs",
            "hexer.test"
        ],
        "version": "0.0.1"
    },
    "hexes": {
        "cmdline": [],
        "modules": [
            "hexes",
            "hexes.aiotextpad",
            "hexes.behaviors",
            "hexes.hexes",
            "hexes.utils",
            "tests",
            "tests.test_hexes",
            "tests.test_utils"
        ],
        "version": "0.4.0"
    },
    "hexfarm": {
        "cmdline": [],
        "modules": [
            "condor",
            "hexfarm",
            "hexfarm._version",
            "hexfarm.cli",
            "hexfarm.condor",
            "hexfarm.condor.core",
            "hexfarm.condor.daemon",
            "hexfarm.config",
            "hexfarm.io",
            "hexfarm.ml",
            "hexfarm.optimization",
            "hexfarm.root",
            "hexfarm.shell",
            "hexfarm.util"
        ],
        "version": "0.0.7"
    },
    "hexfile": {
        "cmdline": [],
        "modules": [
            "hexfile",
            "hexfile.core"
        ],
        "version": "0.1.1"
    },
    "hexformat": {
        "cmdline": [],
        "modules": [
            "hexformat",
            "hexformat.base",
            "hexformat.fillpattern",
            "hexformat.hexdump",
            "hexformat.intelhex",
            "hexformat.multipartbuffer",
            "hexformat.srecord",
            "hexformat.tektronix",
            "tests",
            "tests.test_base",
            "tests.test_fillpattern",
            "tests.test_hexdump",
            "tests.test_intelhex",
            "tests.test_inttobytes",
            "tests.test_multipartbuffer",
            "tests.test_random",
            "tests.test_randomcontent",
            "tests.test_srec_encode",
            "tests.test_srecord",
            "tests.test_temp"
        ],
        "version": "0.2"
    },
    "hexgrid": {
        "cmdline": [],
        "modules": [
            "hexgrid"
        ],
        "version": "0.2.1"
    },
    "hexgrid-py": {
        "cmdline": [],
        "modules": [
            "hexgrid"
        ],
        "version": "1.3"
    },
    "hexgridgeo-py": {
        "cmdline": [],
        "modules": [
            "hexgridgeo"
        ],
        "version": "1.3"
    },
    "hexhamming": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.2"
    },
    "hexia-blog": {
        "cmdline": [],
        "modules": [
            "blog",
            "blog.admin",
            "blog.apps",
            "blog.config",
            "blog.context_processors",
            "blog.migrations",
            "blog.migrations.0001_initial",
            "blog.migrations.0002_tag_slug",
            "blog.migrations.0003_populate_slug",
            "blog.migrations.0004_unique_slug",
            "blog.models",
            "blog.templatetags",
            "blog.templatetags.hexia_blog_tags",
            "blog.tests",
            "blog.urls",
            "blog.utils",
            "blog.views"
        ],
        "version": "1.0.12"
    },
    "hexia-pages": {
        "cmdline": [],
        "modules": [
            "hexia_pages",
            "hexia_pages.admin",
            "hexia_pages.apps",
            "hexia_pages.config",
            "hexia_pages.management",
            "hexia_pages.management.commands",
            "hexia_pages.management.commands.initialise_hexia_pages",
            "hexia_pages.migrations",
            "hexia_pages.migrations.0001_initial",
            "hexia_pages.models",
            "hexia_pages.tests",
            "hexia_pages.urls",
            "hexia_pages.views"
        ],
        "version": "1.0.6"
    },
    "hexia-parameters": {
        "cmdline": [],
        "modules": [
            "hexia_parameters",
            "hexia_parameters.admin",
            "hexia_parameters.apps",
            "hexia_parameters.config",
            "hexia_parameters.context_processors",
            "hexia_parameters.management",
            "hexia_parameters.management.commands",
            "hexia_parameters.management.commands.initialise_hexia_parameters",
            "hexia_parameters.migrations",
            "hexia_parameters.migrations.0001_initial",
            "hexia_parameters.migrations.0002_auto_20190104_0926",
            "hexia_parameters.models",
            "hexia_parameters.tests",
            "hexia_parameters.views"
        ],
        "version": "1.0.4"
    },
    "hexin": {
        "cmdline": [],
        "modules": [
            "hexin"
        ],
        "version": "0.1"
    },
    "hexip": {
        "cmdline": [
            "hexip"
        ],
        "modules": [
            "hexip",
            "hexip.hexip"
        ],
        "version": "0.1"
    },
    "hexlet": {
        "cmdline": [],
        "modules": [
            "hexlet",
            "hexlet.cli",
            "hexlet.commands",
            "hexlet.commands.dist",
            "hexlet.commands.exercise",
            "hexlet.commands.lesson",
            "hexlet.commands.shared",
            "hexlet.exceptions",
            "hexlet.lesson_cli",
            "hexlet.logger",
            "hexlet.routes",
            "hexlet.utils"
        ],
        "version": "0.6.3"
    },
    "hexlet-immutable-fs-trees": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "hexlet-pairs": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "hexlet-points": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "hexlet-python-package": {
        "cmdline": [],
        "modules": [
            "hexlet_python_package",
            "hexlet_python_package.scripts",
            "hexlet_python_package.scripts.hexlet_python_package",
            "hexlet_python_package.user"
        ],
        "version": "0.2.0"
    },
    "hexlite": {
        "cmdline": [],
        "modules": [
            "acthex",
            "acthex.actionmanager",
            "acthex.main",
            "acthex.rewriter",
            "dlvhex",
            "dlvhex.dlvhex-not-implemented-plugin",
            "hexlite",
            "hexlite.app",
            "hexlite.ast",
            "hexlite.ast.shallowparser",
            "hexlite.auxiliary",
            "hexlite.buildclingo",
            "hexlite.clingobackend",
            "hexlite.clingogroundprogramprinter",
            "hexlite.common",
            "hexlite.explicitflpcheck",
            "hexlite.main",
            "hexlite.modelcallback",
            "hexlite.rewriter"
        ],
        "version": "1.3.0"
    },
    "hexmap": {
        "cmdline": [],
        "modules": [
            "hexmap"
        ],
        "version": "0.1.0"
    },
    "hexmeshcylinders": {
        "cmdline": [],
        "modules": [
            "HexMeshCylinders",
            "HexMeshCylinders.Shapes",
            "HexMeshCylinders.Shapes.circle",
            "HexMeshCylinders.Shapes.ellipse",
            "HexMeshCylinders.Shapes.rectangle",
            "HexMeshCylinders.Shapes.shape2D",
            "HexMeshCylinders.boundary",
            "HexMeshCylinders.boundary_editor",
            "HexMeshCylinders.boundary_list",
            "HexMeshCylinders.cell_list",
            "HexMeshCylinders.face",
            "HexMeshCylinders.face_list",
            "HexMeshCylinders.headers",
            "HexMeshCylinders.internal_face_list",
            "HexMeshCylinders.point_list",
            "HexMeshCylinders.printer",
            "HexMeshCylinders.stack"
        ],
        "version": "0.0.3"
    },
    "hexo-image-tool": {
        "cmdline": [],
        "modules": [
            "app"
        ],
        "version": "0.0.2"
    },
    "hexocr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexomega": {
        "cmdline": [],
        "modules": [
            "HexOmega",
            "HexOmega.settings",
            "HexOmega.urls",
            "HexOmega.wsgi",
            "log",
            "log.Log",
            "log.admin",
            "log.apps",
            "log.migrations",
            "log.models",
            "log.parse_to_html",
            "log.tests",
            "log.urls",
            "log.views",
            "users",
            "users.Claudia",
            "users.Claudia.add_user_form",
            "users.Claudia.tests",
            "users.Claudia.user_form",
            "users.Claudia.views",
            "users.Xav",
            "users.Xav.add_leader_form",
            "users.Xav.user_context",
            "users.Xav.views",
            "users.admin",
            "users.apps",
            "users.backends",
            "users.filters",
            "users.forms",
            "users.forms.login_form",
            "users.forms.member_form",
            "users.forms.project_forms",
            "users.forms.task_forms",
            "users.login_form",
            "users.management",
            "users.management.commands",
            "users.management.commands.run_scheduled",
            "users.management.commands.setup_init",
            "users.migrations",
            "users.migrations.0001_initial",
            "users.migrations.0002_auto_20170327_1709",
            "users.migrations.0003_auto_20170405_1014",
            "users.models",
            "users.other",
            "users.tasks",
            "users.templatetags",
            "users.templatetags.del_tags",
            "users.tests",
            "users.urls",
            "users.utils",
            "users.views"
        ],
        "version": "0.3"
    },
    "hexonet-apiconnector": {
        "cmdline": [],
        "modules": [
            "hexonet",
            "hexonet.apiconnector",
            "hexonet.apiconnector.apiclient",
            "hexonet.apiconnector.column",
            "hexonet.apiconnector.customlogger",
            "hexonet.apiconnector.logger",
            "hexonet.apiconnector.record",
            "hexonet.apiconnector.response",
            "hexonet.apiconnector.responseparser",
            "hexonet.apiconnector.responsetemplate",
            "hexonet.apiconnector.responsetemplatemanager",
            "hexonet.apiconnector.socketconfig"
        ],
        "version": "3.8.1"
    },
    "hexonet-ispapicli": {
        "cmdline": [],
        "modules": [
            "hexonet",
            "hexonet.ispapicli",
            "hexonet.ispapicli.commands",
            "hexonet.ispapicli.config",
            "hexonet.ispapicli.gui",
            "hexonet.ispapicli.gui.login",
            "hexonet.ispapicli.gui.mainframe",
            "hexonet.ispapicli.icons",
            "hexonet.ispapicli.ispapicli",
            "hexonet.ispapicli.modules",
            "hexonet.ispapicli.modules.core",
            "hexonet.ispapicli.modules.scrap"
        ],
        "version": "1.0.1"
    },
    "hexotools": {
        "cmdline": [],
        "modules": [
            "hexotools",
            "hexotools.gui",
            "hexotools.gui.functions",
            "hexotools.gui.main",
            "hexotools.imgmanage",
            "hexotools.imgmanage.img",
            "hexotools.postprocess",
            "hexotools.postprocess.post",
            "hexotools.sh",
            "hexotools.sh.sh"
        ],
        "version": "0.1.9"
    },
    "hexpot": {
        "cmdline": [],
        "modules": [
            "hexpot",
            "hexpot.hexpot",
            "hexpot.hexpot_pb",
            "hexpot.hexpot_pb.cdformat_pb2",
            "hexpot.hexpot_pb.kfinformat_pb2",
            "hexpot.hexpot_pb.kstdformat_pb2"
        ],
        "version": "0.3.4"
    },
    "hexprint": {
        "cmdline": [],
        "modules": [
            "hexprint",
            "hexprint.hexprint"
        ],
        "version": "0.0.2"
    },
    "hexpy": {
        "cmdline": [],
        "modules": [
            "hexpy",
            "hexpy.activity",
            "hexpy.analysis",
            "hexpy.base",
            "hexpy.content_upload",
            "hexpy.custom",
            "hexpy.hexpy",
            "hexpy.metadata",
            "hexpy.models",
            "hexpy.monitor",
            "hexpy.project",
            "hexpy.realtime",
            "hexpy.session",
            "hexpy.streams"
        ],
        "version": "0.7.3"
    },
    "hexrd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexrec": {
        "cmdline": [],
        "modules": [
            "hexrec",
            "hexrec.blocks",
            "hexrec.cli",
            "hexrec.formats",
            "hexrec.formats.ascii_hex",
            "hexrec.formats.binary",
            "hexrec.formats.intel",
            "hexrec.formats.mos",
            "hexrec.formats.motorola",
            "hexrec.formats.tektronix",
            "hexrec.records",
            "hexrec.utils",
            "hexrec.xxd"
        ],
        "version": "0.2.1"
    },
    "hexs": {
        "cmdline": [],
        "modules": [
            "hexs",
            "hexs.hexs",
            "hexs.tests",
            "hexs.tests.test_hex"
        ],
        "version": "1.1.0"
    },
    "hexson": {
        "cmdline": [],
        "modules": [
            "hexson",
            "hexson.dumpper",
            "hexson.exceptions",
            "hexson.parser",
            "hexson.serializer"
        ],
        "version": "0.0.5"
    },
    "hexsticker": {
        "cmdline": [],
        "modules": [
            "hexsticker",
            "hexsticker.cli",
            "hexsticker.create",
            "hexsticker.exception"
        ],
        "version": "1.2.0"
    },
    "hext": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.5"
    },
    "hextapus": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hextech": {
        "cmdline": [],
        "modules": [
            "hextech",
            "hextech.classes",
            "hextech.consts",
            "hextech.ddragon",
            "hextech.leaguepedia"
        ],
        "version": "1.0.4"
    },
    "hexutil": {
        "cmdline": [],
        "modules": [
            "hexutil"
        ],
        "version": "0.2.2"
    },
    "hexwordify": {
        "cmdline": [],
        "modules": [
            "hexwordify",
            "hexwordify.bip_0039",
            "hexwordify.hexwordify"
        ],
        "version": "0.0.3"
    },
    "hexxy": {
        "cmdline": [
            "hexxy"
        ],
        "modules": [],
        "version": "0.2.1"
    },
    "hexy": {
        "cmdline": [],
        "modules": [
            "hexy",
            "hexy.errors",
            "hexy.hex_map",
            "hexy.hex_tile",
            "hexy.hexy"
        ],
        "version": "1.4.3"
    },
    "hexy-viewer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hey": {
        "cmdline": [],
        "modules": [
            "src",
            "src.compression",
            "src.copy",
            "src.directions",
            "src.download",
            "src.find",
            "src.go",
            "src.google",
            "src.push",
            "src.rename",
            "src.tell",
            "src.update",
            "src.what"
        ],
        "version": "0.1.2"
    },
    "hey-april": {
        "cmdline": [],
        "modules": [
            "hey_april",
            "hey_april.april"
        ],
        "version": "1.0.5"
    },
    "hey-babe-ahsan-freedi": {
        "cmdline": [],
        "modules": [
            "hey_babe",
            "hey_babe.cli",
            "hey_babe.hey_babe"
        ],
        "version": "0.1.0"
    },
    "hey-bebe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hey-distributions": {
        "cmdline": [],
        "modules": [
            "hey_distributions",
            "hey_distributions.Binomialdistribution",
            "hey_distributions.Gaussiandistribution",
            "hey_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hey-dl": {
        "cmdline": [],
        "modules": [
            "hey_dl",
            "hey_dl.directory_localizer"
        ],
        "version": "1.0.1"
    },
    "hey-pgsqlexec": {
        "cmdline": [],
        "modules": [
            "hey_pgsqlexec",
            "hey_pgsqlexec.pgsqlexec"
        ],
        "version": "1.0.2"
    },
    "hey-rexec": {
        "cmdline": [],
        "modules": [
            "hey_rexec",
            "hey_rexec.rexec"
        ],
        "version": "1.0.0"
    },
    "heyathena": {
        "cmdline": [],
        "modules": [
            "athena",
            "athena.api_library",
            "athena.api_library.geo_info_api",
            "athena.api_library.ifttt_api",
            "athena.api_library.sms_text_api",
            "athena.api_library.user_api",
            "athena.api_library.voice_browse_api",
            "athena.apis",
            "athena.brain",
            "athena.classes",
            "athena.classes.api",
            "athena.classes.input_field",
            "athena.classes.module",
            "athena.classes.response",
            "athena.classes.task",
            "athena.config",
            "athena.log",
            "athena.mods",
            "athena.modules",
            "athena.modules.active",
            "athena.modules.active.athena_control",
            "athena.modules.active.conversation",
            "athena.modules.active.geo_info",
            "athena.modules.active.google",
            "athena.modules.active.hello_world",
            "athena.modules.active.music",
            "athena.modules.active.shop",
            "athena.modules.active.sms_text",
            "athena.modules.active.twitter",
            "athena.modules.active.uber",
            "athena.modules.active.voice_browse",
            "athena.modules.active.wolfram",
            "athena.modules.passive",
            "athena.settings",
            "athena.stt",
            "athena.tests",
            "athena.tests.dependencies_test",
            "athena.tests.input_test",
            "athena.tests.mic_test",
            "athena.tts"
        ],
        "version": "1.3.2"
    },
    "heybrochecklog": {
        "cmdline": [],
        "modules": [
            "heybrochecklog",
            "heybrochecklog.analyze",
            "heybrochecklog.logfile",
            "heybrochecklog.markup",
            "heybrochecklog.markup.matches",
            "heybrochecklog.resources",
            "heybrochecklog.score",
            "heybrochecklog.score.eac",
            "heybrochecklog.score.eac95",
            "heybrochecklog.score.logchecker",
            "heybrochecklog.score.modules",
            "heybrochecklog.score.modules.combined",
            "heybrochecklog.score.modules.drives",
            "heybrochecklog.score.modules.parsers",
            "heybrochecklog.score.modules.validation",
            "heybrochecklog.score.xld",
            "heybrochecklog.shared",
            "heybrochecklog.translate"
        ],
        "version": "1.3.2"
    },
    "heyexreader": {
        "cmdline": [],
        "modules": [
            "heyexReader",
            "heyexReader.volReader"
        ],
        "version": "0.1.3"
    },
    "heynicepackage": {
        "cmdline": [],
        "modules": [
            "HeyNicePackage",
            "HeyNicePackage.HeyThere",
            "HeyNicePackage.HowYouDoing"
        ],
        "version": "0.1"
    },
    "heyshaun": {
        "cmdline": [
            "shaunak1"
        ],
        "modules": [],
        "version": "0.1.3"
    },
    "heysummit": {
        "cmdline": [],
        "modules": [
            "heysummit",
            "heysummit.api"
        ],
        "version": "0.1.4"
    },
    "heytest": {
        "cmdline": [],
        "modules": [
            "heytest",
            "heytest.heytest"
        ],
        "version": "0.1.0"
    },
    "heywatch": {
        "cmdline": [],
        "modules": [
            "heywatch",
            "heywatch.config",
            "heywatch.job"
        ],
        "version": "2.2.1"
    },
    "heywood": {
        "cmdline": [],
        "modules": [
            "heywood",
            "heywood.main",
            "heywood.manager",
            "heywood.watchdog"
        ],
        "version": "0.3"
    },
    "heyy": {
        "cmdline": [],
        "modules": [
            "heyy",
            "heyy.__version__",
            "heyy.core",
            "heyy.pathtool"
        ],
        "version": "0.2.0"
    },
    "hezbutions": {
        "cmdline": [],
        "modules": [
            "hezbutions",
            "hezbutions.Binomialdistribution",
            "hezbutions.Gaussiandistribution",
            "hezbutions.Generaldistribution"
        ],
        "version": "1.3"
    },
    "hezhong": {
        "cmdline": [],
        "modules": [
            "hezhong"
        ],
        "version": "1.0.0"
    },
    "hf-1-movies-191007bj": {
        "cmdline": [],
        "modules": [
            "hf_1_movies_191007BJ"
        ],
        "version": "1.3.0"
    },
    "hf-bi": {
        "cmdline": [],
        "modules": [
            "hf_bi.setup",
            "hf_bi.test"
        ],
        "version": "0.0.1"
    },
    "hf-datasets": {
        "cmdline": [
            "nlp-cli"
        ],
        "modules": [
            "nlp",
            "nlp.arrow_dataset",
            "nlp.arrow_reader",
            "nlp.arrow_writer",
            "nlp.builder",
            "nlp.commands",
            "nlp.commands.convert",
            "nlp.commands.download",
            "nlp.commands.dummy_data",
            "nlp.commands.env",
            "nlp.commands.run_beam",
            "nlp.commands.test",
            "nlp.commands.user",
            "nlp.datasets",
            "nlp.datasets.trec",
            "nlp.datasets.trec.8d17af785ebd9dc949a67d11d062a6610cc4d60bd96fce7538adf5c01f5f56e0",
            "nlp.datasets.trec.8d17af785ebd9dc949a67d11d062a6610cc4d60bd96fce7538adf5c01f5f56e0.trec",
            "nlp.datasets.trec.fa5fb29bbccaaec6b8eee795b49802ded5a0b23521aeed9159f948b9566956e2",
            "nlp.datasets.trec.fa5fb29bbccaaec6b8eee795b49802ded5a0b23521aeed9159f948b9566956e2.trec",
            "nlp.features",
            "nlp.hf_api",
            "nlp.info",
            "nlp.inspect",
            "nlp.load",
            "nlp.metric",
            "nlp.metrics",
            "nlp.naming",
            "nlp.search",
            "nlp.splits",
            "nlp.utils",
            "nlp.utils.beam_utils",
            "nlp.utils.download_manager",
            "nlp.utils.file_utils",
            "nlp.utils.info_utils",
            "nlp.utils.mock_download_manager",
            "nlp.utils.py_utils",
            "nlp.utils.tqdm_utils",
            "nlp.utils.version"
        ],
        "version": "0.3.0"
    },
    "hf-excel": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hf-jk-nester": {
        "cmdline": [],
        "modules": [
            "hf_jk_nester"
        ],
        "version": "1.4.0"
    },
    "hf01": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hf2": {
        "cmdline": [],
        "modules": [
            "hf2"
        ],
        "version": "1.1.1"
    },
    "hf3lint": {
        "cmdline": [],
        "modules": [
            "hf3lint"
        ],
        "version": "0.1-rc"
    },
    "hfahrudin": {
        "cmdline": [],
        "modules": [
            "facex",
            "facex.facex"
        ],
        "version": "0.0.7"
    },
    "hfapi": {
        "cmdline": [],
        "modules": [],
        "version": "0.1b0"
    },
    "hfble": {
        "cmdline": [],
        "modules": [
            "hfble"
        ],
        "version": "2.0"
    },
    "hfbpnester": {
        "cmdline": [],
        "modules": [
            "hfbpnester"
        ],
        "version": "1.4.2"
    },
    "hfc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfc-py": {
        "cmdline": [],
        "modules": [
            "hfc",
            "hfc.fabric",
            "hfc.fabric.block_decoder",
            "hfc.fabric.channel",
            "hfc.fabric.channel.channel",
            "hfc.fabric.channel.channel_configuration",
            "hfc.fabric.channel.instantiation",
            "hfc.fabric.channel.invocation",
            "hfc.fabric.client",
            "hfc.fabric.config",
            "hfc.fabric.config.default",
            "hfc.fabric.eventhub",
            "hfc.fabric.msp",
            "hfc.fabric.orderer",
            "hfc.fabric.organization",
            "hfc.fabric.peer",
            "hfc.fabric.transaction",
            "hfc.fabric.transaction.tx_context",
            "hfc.fabric.transaction.tx_proposal_request",
            "hfc.fabric.user",
            "hfc.fabric_ca",
            "hfc.fabric_ca.caservice",
            "hfc.protos",
            "hfc.protos.common",
            "hfc.protos.common.common_pb2",
            "hfc.protos.common.common_pb2_grpc",
            "hfc.protos.common.configtx_pb2",
            "hfc.protos.common.configtx_pb2_grpc",
            "hfc.protos.common.configuration_pb2",
            "hfc.protos.common.configuration_pb2_grpc",
            "hfc.protos.common.ledger_pb2",
            "hfc.protos.common.ledger_pb2_grpc",
            "hfc.protos.common.policies_pb2",
            "hfc.protos.common.policies_pb2_grpc",
            "hfc.protos.ledger",
            "hfc.protos.ledger.queryresult",
            "hfc.protos.ledger.queryresult.kv_query_result_pb2",
            "hfc.protos.ledger.queryresult.kv_query_result_pb2_grpc",
            "hfc.protos.ledger.rwset",
            "hfc.protos.ledger.rwset.kvrwset",
            "hfc.protos.ledger.rwset.kvrwset.kv_rwset_pb2",
            "hfc.protos.ledger.rwset.kvrwset.kv_rwset_pb2_grpc",
            "hfc.protos.ledger.rwset.rwset_pb2",
            "hfc.protos.ledger.rwset.rwset_pb2_grpc",
            "hfc.protos.msp",
            "hfc.protos.msp.identities_pb2",
            "hfc.protos.msp.identities_pb2_grpc",
            "hfc.protos.msp.msp_principal_pb2",
            "hfc.protos.msp.msp_principal_pb2_grpc",
            "hfc.protos.msp.mspconfig_pb2",
            "hfc.protos.msp.mspconfig_pb2_grpc",
            "hfc.protos.orderer",
            "hfc.protos.orderer.ab_pb2",
            "hfc.protos.orderer.ab_pb2_grpc",
            "hfc.protos.orderer.configuration_pb2",
            "hfc.protos.orderer.configuration_pb2_grpc",
            "hfc.protos.peer",
            "hfc.protos.peer.admin_pb2",
            "hfc.protos.peer.admin_pb2_grpc",
            "hfc.protos.peer.chaincode_event_pb2",
            "hfc.protos.peer.chaincode_event_pb2_grpc",
            "hfc.protos.peer.chaincode_pb2",
            "hfc.protos.peer.chaincode_pb2_grpc",
            "hfc.protos.peer.chaincodeevent_pb2",
            "hfc.protos.peer.chaincodeevent_pb2_grpc",
            "hfc.protos.peer.configuration_pb2",
            "hfc.protos.peer.configuration_pb2_grpc",
            "hfc.protos.peer.events_pb2",
            "hfc.protos.peer.events_pb2_grpc",
            "hfc.protos.peer.peer_pb2",
            "hfc.protos.peer.peer_pb2_grpc",
            "hfc.protos.peer.proposal_pb2",
            "hfc.protos.peer.proposal_pb2_grpc",
            "hfc.protos.peer.proposal_response_pb2",
            "hfc.protos.peer.proposal_response_pb2_grpc",
            "hfc.protos.peer.query_pb2",
            "hfc.protos.peer.query_pb2_grpc",
            "hfc.protos.peer.transaction_pb2",
            "hfc.protos.peer.transaction_pb2_grpc",
            "hfc.protos.utils",
            "hfc.util",
            "hfc.util.channel",
            "hfc.util.crypto",
            "hfc.util.crypto.crypto",
            "hfc.util.keyvaluestore",
            "hfc.util.utils",
            "hfc.version",
            "test",
            "test.integration",
            "test.integration.ca_test",
            "test.integration.chaincode_instantiate_test",
            "test.integration.chaincode_invoke_test",
            "test.integration.config",
            "test.integration.e2e_test",
            "test.integration.e2e_utils",
            "test.integration.query_block",
            "test.integration.query_chain_info",
            "test.integration.query_test",
            "test.integration.query_transaction_test",
            "test.integration.user_test",
            "test.integration.utils",
            "test.integration.utils_test",
            "test.unit",
            "test.unit.block_decoder_test",
            "test.unit.ca_test",
            "test.unit.channel",
            "test.unit.channel.channel_configuration_test",
            "test.unit.channel.channel_test",
            "test.unit.channel.instantiation_test",
            "test.unit.channel.invocation_test",
            "test.unit.client_test",
            "test.unit.crypto_test",
            "test.unit.eventhub_test",
            "test.unit.keyvaluestore_test",
            "test.unit.msp",
            "test.unit.orderer_test",
            "test.unit.peer_test",
            "test.unit.user_test"
        ],
        "version": "0.7.0"
    },
    "hfcca": {
        "cmdline": [],
        "modules": [
            "lizard_ext",
            "lizard_ext.htmloutput",
            "lizard_ext.keywords",
            "lizard_ext.lizardcpre",
            "lizard_ext.lizarddependencycount",
            "lizard_ext.lizardexitcount",
            "lizard_ext.lizardignoreassert",
            "lizard_ext.lizardinternalrelationship",
            "lizard_ext.lizardmccabe",
            "lizard_ext.lizardoutside",
            "lizard_ext.lizardwordcount",
            "lizard_ext.xmloutput",
            "lizard_languages",
            "lizard_languages.clike",
            "lizard_languages.code_reader",
            "lizard_languages.java",
            "lizard_languages.javascript",
            "lizard_languages.js_style_regex_expression",
            "lizard_languages.objc",
            "lizard_languages.python",
            "lizard_languages.ruby",
            "lizard_languages.script_language",
            "lizard_languages.swift",
            "lizard_languages.tnsdl",
            "lizard_languages.ttcn"
        ],
        "version": "1.10.2"
    },
    "hfch1levi": {
        "cmdline": [],
        "modules": [
            "HfCh1Levi"
        ],
        "version": "1.0.0"
    },
    "hfch1levirefined": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hfch3levi": {
        "cmdline": [],
        "modules": [
            "HfCh3Levi"
        ],
        "version": "1.0.0"
    },
    "hfch3levirefined": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hfch4levi": {
        "cmdline": [],
        "modules": [
            "HfCh4Levi"
        ],
        "version": "1.0.0"
    },
    "hfch5levi": {
        "cmdline": [],
        "modules": [
            "HfCh5Levi"
        ],
        "version": "1.0.4"
    },
    "hfch6levi": {
        "cmdline": [],
        "modules": [
            "HfCh6Levi"
        ],
        "version": "1.0.5"
    },
    "hfch7levi": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "hfchlevimodel": {
        "cmdline": [],
        "modules": [
            "HfChLeviModel"
        ],
        "version": "1.0.1"
    },
    "hfda": {
        "cmdline": [],
        "modules": [
            "hfda",
            "hfda.core"
        ],
        "version": "0.1.1"
    },
    "hfexcel": {
        "cmdline": [],
        "modules": [
            "hfexcel",
            "hfexcel.helpers",
            "hfexcel.managers",
            "hfexcel.models",
            "hfexcel.schemas",
            "hfexcel.styles",
            "hfexcel.utils"
        ],
        "version": "0.0.17"
    },
    "hffe": {
        "cmdline": [],
        "modules": [
            "hffe",
            "hffe.bigplot",
            "hffe.options",
            "hffe.parsers",
            "hffe.stock",
            "hffe.utilities",
            "hffe.volatility"
        ],
        "version": "0.0.13"
    },
    "hfhd": {
        "cmdline": [],
        "modules": [
            "hfhd",
            "hfhd.hd",
            "hfhd.hf",
            "hfhd.loss",
            "hfhd.sim"
        ],
        "version": "0.1.4"
    },
    "hfile": {
        "cmdline": [],
        "modules": [
            "hfile",
            "hfile.cli",
            "hfile.filterbymtime",
            "hfile.removefile",
            "hfile.walkdirectory"
        ],
        "version": "1.0.8"
    },
    "hfilesize": {
        "cmdline": [],
        "modules": [
            "hfilesize",
            "hfilesize.hfilesize"
        ],
        "version": "0.1.0"
    },
    "hflags": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hflossk": {
        "cmdline": [],
        "modules": [
            "hflossk",
            "hflossk.blueprints",
            "hflossk.cli",
            "hflossk.cli.openshift_utils",
            "hflossk.cli.util",
            "hflossk.participants",
            "hflossk.site",
            "hflossk.util",
            "hflossk.version",
            "tests",
            "tests.hflossk_tests"
        ],
        "version": "0.5.10"
    },
    "hflow": {
        "cmdline": [],
        "modules": [
            "hflow",
            "hflow.condition",
            "hflow.function",
            "hflow.sequence"
        ],
        "version": "0.1.2"
    },
    "hfnester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfo-py": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "hfofpython": {
        "cmdline": [],
        "modules": [
            "HFofPython"
        ],
        "version": "1.1.0"
    },
    "hfogui": {
        "cmdline": [],
        "modules": [
            "hfoGUI",
            "hfoGUI.core",
            "hfoGUI.core.ChooseFile",
            "hfoGUI.core.GUI_Utils",
            "hfoGUI.core.GraphSettings",
            "hfoGUI.core.Score",
            "hfoGUI.core.TFA_Functions",
            "hfoGUI.core.TFplots",
            "hfoGUI.core.Tint_Matlab",
            "hfoGUI.core.defaultParameters",
            "hfoGUI.core.filtering",
            "hfoGUI.exporters",
            "hfoGUI.exporters.Exporter",
            "hfoGUI.exporters.ImageExporter",
            "hfoGUI.exporters.tests",
            "hfoGUI.exporters.tests.test_csv",
            "hfoGUI.exporters.tests.test_svg",
            "hfoGUI.img",
            "hfoGUI.main"
        ],
        "version": "1.0.10"
    },
    "hforl": {
        "cmdline": [],
        "modules": [
            "hforl",
            "hforl.agent",
            "hforl.agents",
            "hforl.agents.basic",
            "hforl.agents.core",
            "hforl.agents.ddqn",
            "hforl.agents.dqn",
            "hforl.agents.static",
            "hforl.explorers",
            "hforl.explorers.ou",
            "hforl.loss",
            "hforl.memory",
            "hforl.policy",
            "hforl.trainer"
        ],
        "version": "0.0.2"
    },
    "hformat": {
        "cmdline": [],
        "modules": [
            "hformat",
            "hformat.hformat",
            "hformat.placeholder",
            "hformat.tokenizer"
        ],
        "version": "0.1.0a4"
    },
    "hfos": {
        "cmdline": [],
        "modules": [
            "isomer",
            "isomer.hfos",
            "isomer.hfos.core"
        ],
        "version": "1.3.0"
    },
    "hfp-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfplesson1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfprintnestedlists": {
        "cmdline": [],
        "modules": [
            "hfprintnestedlists"
        ],
        "version": "1.0.0"
    },
    "hfpy": {
        "cmdline": [],
        "modules": [
            "hfpy",
            "hfpy.atp",
            "hfpy.atp_pg",
            "hfpy.bar",
            "hfpy.config",
            "hfpy.data",
            "hfpy.moniter",
            "hfpy.order",
            "hfpy.report_stra",
            "hfpy.strategy",
            "hfpy.structs"
        ],
        "version": "0.2.2"
    },
    "hfpy2": {
        "cmdline": [],
        "modules": [
            "hfpy2"
        ],
        "version": "1.4.0"
    },
    "hfpython": {
        "cmdline": [],
        "modules": [
            "hfpython"
        ],
        "version": "1.0.0"
    },
    "hfpython-chapter1-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "hfpython-nester": {
        "cmdline": [],
        "modules": [
            "hfpython_nester"
        ],
        "version": "1.4.0"
    },
    "hfpythonstudy": {
        "cmdline": [],
        "modules": [
            "print_help",
            "study_io_2"
        ],
        "version": "1.0.6"
    },
    "hfpythontest": {
        "cmdline": [],
        "modules": [
            "HFPythonTest"
        ],
        "version": "1.0.0"
    },
    "hfr": {
        "cmdline": [],
        "modules": [
            "hash_sentences",
            "hash_sentences.contractions",
            "hash_sentences.divide_conquer_optimize_split",
            "hash_sentences.embed_path_tuples",
            "hash_sentences.expanding_contractions",
            "hash_sentences.hash_function_representations_info_theoretic_optimization",
            "hash_sentences.hash_sentences",
            "hash_sentences.information_theoretic_measures_hashcodes",
            "hash_sentences.nonascii_text_processing",
            "hash_sentences.parallel_computing",
            "hash_sentences.parallel_computing_wrapper",
            "hash_sentences.random_k_nearest_neighbors_hash",
            "hash_sentences.random_maximum_margin_hash",
            "hash_sentences.random_neural_hash",
            "hash_sentences.rnn_hash_model",
            "hash_sentences.script_hash_sentences",
            "hash_sentences.text_kernel",
            "hash_sentences.total_correlations_estimation",
            "hash_sentences.word_embeddings"
        ],
        "version": "1.0.0"
    },
    "hfs": {
        "cmdline": [],
        "modules": [
            "hfs",
            "hfs.bottle",
            "hfs.constants",
            "hfs.core",
            "hfs.show_my_ip"
        ],
        "version": "0.6.0"
    },
    "hfs-felixolivier": {
        "cmdline": [],
        "modules": [
            "example_pkg"
        ],
        "version": "0.1"
    },
    "hfscanstat": {
        "cmdline": [],
        "modules": [
            "hfscanstat",
            "hfscanstat._nbdev",
            "hfscanstat.scanstat"
        ],
        "version": "0.0.1"
    },
    "hfsslib": {
        "cmdline": [],
        "modules": [
            "hfsslib",
            "hfsslib.constants",
            "hfsslib.hfss",
            "hfsslib.hfss_writer"
        ],
        "version": "0.0.0"
    },
    "hfst": {
        "cmdline": [],
        "modules": [
            "hfst",
            "hfst.exceptions",
            "hfst.sfst_rules",
            "hfst.xerox_rules"
        ],
        "version": "3.15.0.0b0"
    },
    "hfst-dev": {
        "cmdline": [],
        "modules": [
            "hfst_dev",
            "hfst_dev.exceptions",
            "hfst_dev.sfst_rules",
            "hfst_dev.xerox_rules"
        ],
        "version": "3.15.0.10b0"
    },
    "hfstol": {
        "cmdline": [],
        "modules": [
            "hfstol",
            "hfstol.constants",
            "hfstol.main",
            "hfstol.shared",
            "hfstol.transducer"
        ],
        "version": "1.2.11"
    },
    "hft": {
        "cmdline": [],
        "modules": [
            "hft",
            "hft.forecast",
            "hft.metric",
            "hft.optimization",
            "hft.plot",
            "hft.portfolio",
            "hft.position",
            "hft.util"
        ],
        "version": "1.0.8"
    },
    "hft-dj": {
        "cmdline": [],
        "modules": [
            "HFT"
        ],
        "version": "1.0.0"
    },
    "hftools": {
        "cmdline": [],
        "modules": [
            "hftools",
            "hftools.fitting",
            "hftools.hepdata",
            "hftools.hepdata.rootcnv",
            "hftools.hepdata.rootcnv.cli",
            "hftools.hepdata.rootcnv.formatters",
            "hftools.jupyter",
            "hftools.plotting",
            "hftools.plotting.quickplot_cli",
            "hftools.utils",
            "hftools.utils.parsexml"
        ],
        "version": "0.0.6"
    },
    "hfttools": {
        "cmdline": [],
        "modules": [
            "hfttools",
            "hfttools.core"
        ],
        "version": "0.0.2"
    },
    "hftu": {
        "cmdline": [],
        "modules": [
            "hftu",
            "hftu.folding",
            "hftu.hftu",
            "hftu.init",
            "hftu.optimization",
            "hftu.plot",
            "hftu.test_hftu",
            "hftu.test_perf",
            "hftu.types"
        ],
        "version": "1.0.3"
    },
    "hfunctions": {
        "cmdline": [],
        "modules": [
            "hfunctions",
            "hfunctions._hfunctions",
            "hfunctions.cli",
            "tests",
            "tests.test_hfunctions"
        ],
        "version": "0.1.1"
    },
    "hfut": {
        "cmdline": [],
        "modules": [
            "hfut",
            "hfut.exception",
            "hfut.interface",
            "hfut.log",
            "hfut.parser",
            "hfut.session",
            "hfut.shortcut",
            "hfut.util",
            "hfut.value",
            "tests",
            "tests.conftest",
            "tests.test_log",
            "tests.test_parser",
            "tests.test_session",
            "tests.test_shortcut",
            "tests.test_util"
        ],
        "version": "2.2.3"
    },
    "hfut-brush": {
        "cmdline": [],
        "modules": [
            "hfut_brush",
            "hfut_brush.bru",
            "test",
            "test.test_login"
        ],
        "version": "0.1.0"
    },
    "hg-api": {
        "cmdline": [],
        "modules": [
            "hg_api",
            "hg_api.api",
            "hg_api.utils"
        ],
        "version": "0.1.0"
    },
    "hg-autohooks": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hg-autoshelve": {
        "cmdline": [],
        "modules": [
            "hgext3rd.autoshelve",
            "hgext3rd.autoshelve.metadata"
        ],
        "version": "0.1.7"
    },
    "hg-branchlog": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hg-commit-sanity": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hg-config-reader": {
        "cmdline": [],
        "modules": [
            "hg_config_reader",
            "hg_config_reader.utils"
        ],
        "version": "0.0.2"
    },
    "hg-configexpress": {
        "cmdline": [],
        "modules": [
            "hgext3rd",
            "hgext3rd.configexpress"
        ],
        "version": "0.4.0"
    },
    "hg-confman": {
        "cmdline": [],
        "modules": [
            "confman",
            "confman.commands",
            "confman.configuration",
            "confman.gr",
            "confman.hgcompat",
            "confman.managed",
            "confman.meta",
            "confman.opts",
            "confman.utils"
        ],
        "version": "1.0.2"
    },
    "hg-convert-prcs-extension": {
        "cmdline": [],
        "modules": [
            "hgext3rd.convert_prcs",
            "hgext3rd.convert_prcs.prcs"
        ],
        "version": "2.0.0"
    },
    "hg-delivery": {
        "cmdline": [],
        "modules": [
            "hg_delivery",
            "hg_delivery.models",
            "hg_delivery.models.hgd_model",
            "hg_delivery.models.meta",
            "hg_delivery.nodes",
            "hg_delivery.predicates",
            "hg_delivery.routes",
            "hg_delivery.scripts",
            "hg_delivery.scripts.initializedb",
            "hg_delivery.security",
            "hg_delivery.subscribers",
            "hg_delivery.tests",
            "hg_delivery.views"
        ],
        "version": "1.1.5"
    },
    "hg-diff": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hg-docgraph": {
        "cmdline": [],
        "modules": [
            "hgext3rd",
            "hgext3rd.docgraph"
        ],
        "version": "0.0.4.dev0"
    },
    "hg-easy": {
        "cmdline": [
            "easymerge"
        ],
        "modules": [
            "easyhg",
            "easyhg.api",
            "easyhg.commit",
            "easyhg.merge",
            "easyhg.mergetool",
            "easyhg.output"
        ],
        "version": "0.9.4"
    },
    "hg-evolve": {
        "cmdline": [],
        "modules": [
            "hgext3rd",
            "hgext3rd.evolve",
            "hgext3rd.evolve.cmdrewrite",
            "hgext3rd.evolve.compat",
            "hgext3rd.evolve.dagutil",
            "hgext3rd.evolve.debugcmd",
            "hgext3rd.evolve.depthcache",
            "hgext3rd.evolve.evolvecmd",
            "hgext3rd.evolve.exthelper",
            "hgext3rd.evolve.firstmergecache",
            "hgext3rd.evolve.genericcaches",
            "hgext3rd.evolve.headchecking",
            "hgext3rd.evolve.legacy",
            "hgext3rd.evolve.metadata",
            "hgext3rd.evolve.obscache",
            "hgext3rd.evolve.obsdiscovery",
            "hgext3rd.evolve.obsexchange",
            "hgext3rd.evolve.obshashtree",
            "hgext3rd.evolve.obshistory",
            "hgext3rd.evolve.rewind",
            "hgext3rd.evolve.rewriteutil",
            "hgext3rd.evolve.safeguard",
            "hgext3rd.evolve.serveronly",
            "hgext3rd.evolve.stablerange",
            "hgext3rd.evolve.stablerangecache",
            "hgext3rd.evolve.stablesort",
            "hgext3rd.evolve.state",
            "hgext3rd.evolve.templatekw",
            "hgext3rd.evolve.thirdparty",
            "hgext3rd.evolve.thirdparty.cbor",
            "hgext3rd.evolve.utility",
            "hgext3rd.pullbundle",
            "hgext3rd.serverminitopic",
            "hgext3rd.topic",
            "hgext3rd.topic.common",
            "hgext3rd.topic.compat",
            "hgext3rd.topic.constants",
            "hgext3rd.topic.destination",
            "hgext3rd.topic.discovery",
            "hgext3rd.topic.evolvebits",
            "hgext3rd.topic.flow",
            "hgext3rd.topic.randomname",
            "hgext3rd.topic.revset",
            "hgext3rd.topic.server",
            "hgext3rd.topic.stack",
            "hgext3rd.topic.topicmap"
        ],
        "version": "10.0.2"
    },
    "hg-fingerprint": {
        "cmdline": [],
        "modules": [
            "hg_fingerprint",
            "hg_fingerprint.test",
            "hg_fingerprint.test.test_fingerprint"
        ],
        "version": "0.1.6"
    },
    "hg-fluiddyn": {
        "cmdline": [],
        "modules": [
            "hgfluiddyn",
            "hgfluiddyn._version"
        ],
        "version": "0.0.3"
    },
    "hg-formatsource": {
        "cmdline": [],
        "modules": [
            "hgext3rd",
            "hgext3rd.formatsource"
        ],
        "version": "0.4.0"
    },
    "hg-git": {
        "cmdline": [],
        "modules": [
            "hggit",
            "hggit._ssh",
            "hggit.compat",
            "hggit.git2hg",
            "hggit.git_handler",
            "hggit.gitdirstate",
            "hggit.gitrepo",
            "hggit.hg2git",
            "hggit.hgrepo",
            "hggit.overlay",
            "hggit.util",
            "hggit.verify"
        ],
        "version": "0.9.0"
    },
    "hg-github": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "hg-importfs": {
        "cmdline": [],
        "modules": [
            "importfs"
        ],
        "version": "1.3.2"
    },
    "hg-loggingmod": {
        "cmdline": [],
        "modules": [
            "hgext3rd",
            "hgext3rd.loggingmod",
            "hgext3rd.loggingmod.config",
            "hgext3rd.loggingmod.sentry",
            "hgext3rd.loggingmod.version"
        ],
        "version": "0.2.0"
    },
    "hg-number": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "hg-request-pull": {
        "cmdline": [],
        "modules": [
            "hgext.request-pull",
            "request-pull"
        ],
        "version": "0.5.1"
    },
    "hg-versions": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.1"
    },
    "hg-webhooks": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hg-wiki": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgallpaths": {
        "cmdline": [],
        "modules": [
            "hgallpaths"
        ],
        "version": "0.1"
    },
    "hgapi": {
        "cmdline": [],
        "modules": [
            "hgapi",
            "hgapi.hgapi",
            "hgapi.testhgapi"
        ],
        "version": "1.7.4"
    },
    "hgblog": {
        "cmdline": [],
        "modules": [
            "custom_fixers",
            "custom_fixers.fix_alt_unicode",
            "etree13",
            "etree13.ElementPath",
            "etree13.ElementTree",
            "etree13.HTMLTreeBuilder",
            "hgblog",
            "hgblog.generate_html",
            "hgblog.refresh",
            "hgblog.server",
            "hgblog.utils",
            "sphinx",
            "sphinx.addnodes",
            "sphinx.apidoc",
            "sphinx.application",
            "sphinx.builders",
            "sphinx.builders.changes",
            "sphinx.builders.devhelp",
            "sphinx.builders.epub",
            "sphinx.builders.gettext",
            "sphinx.builders.html",
            "sphinx.builders.htmlhelp",
            "sphinx.builders.latex",
            "sphinx.builders.linkcheck",
            "sphinx.builders.manpage",
            "sphinx.builders.qthelp",
            "sphinx.builders.texinfo",
            "sphinx.builders.text",
            "sphinx.builders.websupport",
            "sphinx.cmdline",
            "sphinx.config",
            "sphinx.directives",
            "sphinx.directives.code",
            "sphinx.directives.other",
            "sphinx.domains",
            "sphinx.domains.c",
            "sphinx.domains.cpp",
            "sphinx.domains.javascript",
            "sphinx.domains.python",
            "sphinx.domains.rst",
            "sphinx.domains.std",
            "sphinx.environment",
            "sphinx.errors",
            "sphinx.ext",
            "sphinx.ext.autodoc",
            "sphinx.ext.autosummary",
            "sphinx.ext.autosummary.generate",
            "sphinx.ext.coverage",
            "sphinx.ext.doctest",
            "sphinx.ext.extlinks",
            "sphinx.ext.graphviz",
            "sphinx.ext.ifconfig",
            "sphinx.ext.inheritance_diagram",
            "sphinx.ext.intersphinx",
            "sphinx.ext.jsmath",
            "sphinx.ext.mathbase",
            "sphinx.ext.mathjax",
            "sphinx.ext.oldcmarkup",
            "sphinx.ext.pngmath",
            "sphinx.ext.refcounting",
            "sphinx.ext.todo",
            "sphinx.ext.viewcode",
            "sphinx.highlighting",
            "sphinx.jinja2glue",
            "sphinx.locale",
            "sphinx.pycode",
            "sphinx.pycode.nodes",
            "sphinx.pycode.pgen2",
            "sphinx.pycode.pgen2.driver",
            "sphinx.pycode.pgen2.grammar",
            "sphinx.pycode.pgen2.literals",
            "sphinx.pycode.pgen2.parse",
            "sphinx.pycode.pgen2.pgen",
            "sphinx.pycode.pgen2.token",
            "sphinx.pycode.pgen2.tokenize",
            "sphinx.pygments_styles",
            "sphinx.quickstart",
            "sphinx.roles",
            "sphinx.search",
            "sphinx.search.en",
            "sphinx.search.ja",
            "sphinx.setup_command",
            "sphinx.theming",
            "sphinx.util",
            "sphinx.util.compat",
            "sphinx.util.console",
            "sphinx.util.docfields",
            "sphinx.util.docstrings",
            "sphinx.util.inspect",
            "sphinx.util.jsdump",
            "sphinx.util.jsonimpl",
            "sphinx.util.matching",
            "sphinx.util.nodes",
            "sphinx.util.osutil",
            "sphinx.util.png",
            "sphinx.util.pycompat",
            "sphinx.util.smartypants",
            "sphinx.util.stemmer",
            "sphinx.util.tags",
            "sphinx.util.texescape",
            "sphinx.util.websupport",
            "sphinx.versioning",
            "sphinx.websupport",
            "sphinx.websupport.errors",
            "sphinx.websupport.search",
            "sphinx.websupport.search.nullsearch",
            "sphinx.websupport.search.whooshsearch",
            "sphinx.websupport.search.xapiansearch",
            "sphinx.websupport.storage",
            "sphinx.websupport.storage.differ",
            "sphinx.websupport.storage.sqlalchemy_db",
            "sphinx.websupport.storage.sqlalchemystorage",
            "sphinx.writers",
            "sphinx.writers.html",
            "sphinx.writers.latex",
            "sphinx.writers.manpage",
            "sphinx.writers.texinfo",
            "sphinx.writers.text",
            "sphinx.writers.websupport"
        ],
        "version": "0.7.1"
    },
    "hgboost": {
        "cmdline": [],
        "modules": [
            "hgboost",
            "hgboost.examples",
            "hgboost.hgboost",
            "hgboost.utils"
        ],
        "version": "0.1.7"
    },
    "hgc": {
        "cmdline": [],
        "modules": [
            "hgc",
            "hgc.constants",
            "hgc.constants.constants",
            "hgc.constants.read_write",
            "hgc.samples_frame",
            "hgc.utils"
        ],
        "version": "0.2.3"
    },
    "hgcampfire": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.2"
    },
    "hgcanttype": {
        "cmdline": [],
        "modules": [
            "hgcanttype"
        ],
        "version": "1.0.8"
    },
    "hgcp": {
        "cmdline": [],
        "modules": [
            "codeviking",
            "codeviking.hg",
            "codeviking.hg.hgcp",
            "codeviking.hg.hgcp.commands"
        ],
        "version": "0.12"
    },
    "hgdiffmetrics": {
        "cmdline": [],
        "modules": [
            "hgdiffmetrics",
            "hgdiffmetrics.hooks"
        ],
        "version": "1.0"
    },
    "hgdistver": {
        "cmdline": [],
        "modules": [],
        "version": "0.25"
    },
    "hgenvconfig": {
        "cmdline": [],
        "modules": [
            "hgext.envconfig"
        ],
        "version": "0.1.2"
    },
    "hgexternals": {
        "cmdline": [],
        "modules": [
            "hgexternals"
        ],
        "version": "0.2"
    },
    "hgf": {
        "cmdline": [],
        "modules": [
            "hgf",
            "hgf.app",
            "hgf.component",
            "hgf.double_buffer",
            "hgf.gui",
            "hgf.gui.base",
            "hgf.gui.button",
            "hgf.gui.component",
            "hgf.gui.drag",
            "hgf.gui.frame",
            "hgf.gui.image",
            "hgf.gui.menu",
            "hgf.gui.structure",
            "hgf.gui.switch",
            "hgf.gui.text",
            "hgf.gui.text_entry",
            "hgf.gui.widget",
            "hgf.gui.window",
            "hgf.model",
            "hgf.timing",
            "hgf.timing.component",
            "hgf.timing.gradient",
            "hgf.timing.switch",
            "hgf.timing.ticker",
            "hgf.util",
            "hgf.util.keyboard",
            "hgf.util.keys",
            "hgf.util.rect",
            "hgf.util.timer"
        ],
        "version": "0.2.2"
    },
    "hgfinance": {
        "cmdline": [],
        "modules": [
            "hgfinance",
            "hgfinance.hgfinance"
        ],
        "version": "0.0.7"
    },
    "hgflask": {
        "cmdline": [],
        "modules": [
            "hgflask.client",
            "hgflask.httpfs",
            "hgflask.server",
            "hgflask.tilesets"
        ],
        "version": "0.1.2"
    },
    "hgflow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgflow-official": {
        "cmdline": [],
        "modules": [
            "hgext.hgflow"
        ],
        "version": "0.9.8.5"
    },
    "hgforest-crew": {
        "cmdline": [],
        "modules": [
            "forest"
        ],
        "version": "dev"
    },
    "hgfs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgftp": {
        "cmdline": [],
        "modules": [
            "hgftp"
        ],
        "version": "0.1.1"
    },
    "hggit2": {
        "cmdline": [],
        "modules": [
            "hggit2.hggitRun"
        ],
        "version": "0.1"
    },
    "hggit3": {
        "cmdline": [],
        "modules": [
            "hggit3.hggitRun"
        ],
        "version": "0.2"
    },
    "hgh-headfirst-test": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "hghooks": {
        "cmdline": [],
        "modules": [
            "hghooks",
            "hghooks.code",
            "hghooks.trachooks"
        ],
        "version": "0.7.0"
    },
    "hghudson": {
        "cmdline": [],
        "modules": [
            "hghudson",
            "hghudson.tests",
            "hghudson.tests.testhook"
        ],
        "version": "0.1.1dev"
    },
    "hgicommon": {
        "cmdline": [],
        "modules": [
            "hgicommon",
            "hgicommon.collections",
            "hgicommon.data_source",
            "hgicommon.data_source.basic",
            "hgicommon.data_source.common",
            "hgicommon.data_source.dynamic_from_file",
            "hgicommon.data_source.static_from_file",
            "hgicommon.decorators",
            "hgicommon.decorators.gotta_catchem_all",
            "hgicommon.docker",
            "hgicommon.docker.client",
            "hgicommon.docker.models",
            "hgicommon.enums",
            "hgicommon.helpers",
            "hgicommon.managers",
            "hgicommon.mixable",
            "hgicommon.mixable.listenable",
            "hgicommon.mixable.priority",
            "hgicommon.models",
            "hgicommon.testing",
            "hgicommon.tests",
            "hgicommon.tests._helpers",
            "hgicommon.tests._stubs",
            "hgicommon.tests.data_source",
            "hgicommon.tests.data_source._helpers",
            "hgicommon.tests.data_source._stubs",
            "hgicommon.tests.data_source.test_basic",
            "hgicommon.tests.data_source.test_dynamic_from_file",
            "hgicommon.tests.data_source.test_static_from_file",
            "hgicommon.tests.decorators",
            "hgicommon.tests.decorators.test_gotta_catchem_all",
            "hgicommon.tests.mixable",
            "hgicommon.tests.mixable.test_listenable",
            "hgicommon.tests.mixable.test_priority",
            "hgicommon.tests.test_collection",
            "hgicommon.tests.test_helpers",
            "hgicommon.tests.test_managers",
            "hgicommon.tests.test_models",
            "hgicommon.tests.test_testing",
            "hgicommon.tests.threading",
            "hgicommon.tests.threading.test_counting_lock",
            "hgicommon.threading",
            "hgicommon.threading.counting_lock"
        ],
        "version": "1.3.1"
    },
    "hgijson": {
        "cmdline": [],
        "modules": [
            "hgijson",
            "hgijson.custom_types",
            "hgijson.json_converters",
            "hgijson.json_converters._converters",
            "hgijson.json_converters._serialization",
            "hgijson.json_converters._serializers",
            "hgijson.json_converters.automatic",
            "hgijson.json_converters.builders",
            "hgijson.json_converters.interfaces",
            "hgijson.json_converters.models",
            "hgijson.json_converters.primitive",
            "hgijson.serialization",
            "hgijson.serializers",
            "hgijson.tests",
            "hgijson.tests._models",
            "hgijson.tests._serializers",
            "hgijson.tests._stubs",
            "hgijson.tests.json_converters",
            "hgijson.tests.json_converters._helpers",
            "hgijson.tests.json_converters._serializers",
            "hgijson.tests.json_converters.functionality",
            "hgijson.tests.json_converters.functionality.test_collection_support",
            "hgijson.tests.json_converters.functionality.test_no_property_access",
            "hgijson.tests.json_converters.functionality.test_parent_json_properties",
            "hgijson.tests.json_converters.test_automatic",
            "hgijson.tests.json_converters.test_builders",
            "hgijson.tests.json_converters.test_converters",
            "hgijson.tests.json_converters.test_models",
            "hgijson.tests.json_converters.test_primitive",
            "hgijson.tests.json_converters.test_serialization",
            "hgijson.tests.test_models",
            "hgijson.tests.test_serialization",
            "hgijson.tests.test_serializers"
        ],
        "version": "3.1.0"
    },
    "hgj-first-package": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hgl": {
        "cmdline": [],
        "modules": [
            "hgl",
            "hgl.calculate",
            "hgl.calculate.angle",
            "hgl.calculate.box",
            "hgl.calculate.camera",
            "hgl.calculate.circle",
            "hgl.calculate.curve",
            "hgl.calculate.distance",
            "hgl.calculate.font_outline",
            "hgl.calculate.grid",
            "hgl.calculate.line",
            "hgl.calculate.misc",
            "hgl.calculate.numpy_structures",
            "hgl.calculate.origin",
            "hgl.calculate.point",
            "hgl.calculate.polygon",
            "hgl.calculate.triangle",
            "hgl.context",
            "hgl.context.glut_context",
            "hgl.context.gtkglarea_context",
            "hgl.context.kivy_context",
            "hgl.context.pygame_context",
            "hgl.context.sdl2_context",
            "hgl.context.template",
            "hgl.engine",
            "hgl.helpers",
            "hgl.helpers.context",
            "hgl.helpers.defaults",
            "hgl.libs",
            "hgl.libs.textures",
            "hgl.settings"
        ],
        "version": "0.1.3"
    },
    "hglib": {
        "cmdline": [],
        "modules": [
            "hglib",
            "hglib.client",
            "hglib.context",
            "hglib.error",
            "hglib.merge",
            "hglib.templates",
            "hglib.util"
        ],
        "version": "2.6.1"
    },
    "hglist": {
        "cmdline": [],
        "modules": [
            "hglist",
            "hglist.filters",
            "hglist.list_files"
        ],
        "version": "0.3"
    },
    "hglock": {
        "cmdline": [],
        "modules": [
            "hglock",
            "hglock.pushkeyrpc",
            "hglock.unrepr"
        ],
        "version": "0.5.4"
    },
    "hgm": {
        "cmdline": [],
        "modules": [
            "hgm",
            "hgm.computetensor",
            "hgm.ggmf",
            "hgm.kdfe",
            "hgm.preproc"
        ],
        "version": "0.5.4"
    },
    "hgmd": {
        "cmdline": [],
        "modules": [
            "scripts",
            "scripts.autocalculation",
            "scripts.backgroup",
            "scripts.calnohup",
            "scripts.config",
            "scripts.dataframe",
            "scripts.files",
            "scripts.gmdkit",
            "scripts.molecule",
            "scripts.plotting",
            "scripts.plotting_v1",
            "scripts.running_calnohup"
        ],
        "version": "2.0.1"
    },
    "hgmeans": {
        "cmdline": [],
        "modules": [],
        "version": "2.2"
    },
    "hgmonitor": {
        "cmdline": [],
        "modules": [
            "hgmonitor",
            "hgmonitor.hglib",
            "hgmonitor.hgmonlib"
        ],
        "version": "0.5"
    },
    "hgnc-queries": {
        "cmdline": [],
        "modules": [
            "hgnc_queries",
            "hgnc_queries.api",
            "hgnc_queries.conversion",
            "hgnc_queries.queries"
        ],
        "version": "0.1.0"
    },
    "hgnested": {
        "cmdline": [],
        "modules": [
            "hgnested"
        ],
        "version": "0.8"
    },
    "hgpack": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.5"
    },
    "hgpaste": {
        "cmdline": [],
        "modules": [
            "hgpaste",
            "hgpaste.factory"
        ],
        "version": "0.1.1"
    },
    "hgpasteapp": {
        "cmdline": [],
        "modules": [
            "hgpasteapp"
        ],
        "version": "0.1.3"
    },
    "hgpmatch": {
        "cmdline": [
            "hgpmatch"
        ],
        "modules": [
            "hgp",
            "hgp.match",
            "hgp.match.main",
            "hgp.match.matching",
            "tests",
            "tests.match",
            "tests.match.test_main",
            "tests.match.test_match",
            "tests.match.util"
        ],
        "version": "1.0.1"
    },
    "hgrecipe": {
        "cmdline": [],
        "modules": [
            "hgrecipe",
            "hgrecipe.recipe",
            "hgrecipe.tests"
        ],
        "version": "0.9"
    },
    "hgreview": {
        "cmdline": [],
        "modules": [
            "hgreview"
        ],
        "version": "0.4"
    },
    "hgshelve": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hgspellcheck": {
        "cmdline": [],
        "modules": [],
        "version": "1.0rc2"
    },
    "hgsqs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgstools": {
        "cmdline": [],
        "modules": [
            "hgsTools",
            "hgsTools.auxiliary",
            "hgsTools.auxiliary.s3tools",
            "hgsTools.messaging"
        ],
        "version": "0.2.71a1"
    },
    "hgsubversion": {
        "cmdline": [],
        "modules": [
            "hgsubversion",
            "hgsubversion.compathacks",
            "hgsubversion.editor",
            "hgsubversion.hooks",
            "hgsubversion.hooks.updatemeta",
            "hgsubversion.layouts",
            "hgsubversion.layouts.base",
            "hgsubversion.layouts.custom",
            "hgsubversion.layouts.single",
            "hgsubversion.layouts.standard",
            "hgsubversion.maps",
            "hgsubversion.pushmod",
            "hgsubversion.replay",
            "hgsubversion.stupid",
            "hgsubversion.svncommands",
            "hgsubversion.svnexternals",
            "hgsubversion.svnmeta",
            "hgsubversion.svnrepo",
            "hgsubversion.svnwrap",
            "hgsubversion.svnwrap.common",
            "hgsubversion.svnwrap.subvertpy_wrapper",
            "hgsubversion.svnwrap.svn_swig_wrapper",
            "hgsubversion.util",
            "hgsubversion.verify",
            "hgsubversion.wrappers"
        ],
        "version": "1.9.3"
    },
    "hgsvn": {
        "cmdline": [],
        "modules": [
            "hgsvn",
            "hgsvn.common",
            "hgsvn.errors",
            "hgsvn.hgclient",
            "hgsvn.run",
            "hgsvn.run.common",
            "hgsvn.run.hgimportsvn",
            "hgsvn.run.hgpullsvn",
            "hgsvn.run.hgpushsvn",
            "hgsvn.shell",
            "hgsvn.svnclient",
            "hgsvn.ui",
            "hgsvn.unittests",
            "hgsvn.unittests._test",
            "hgsvn.unittests.test_client_utf",
            "hgsvn.unittests.test_common",
            "hgsvn.unittests.test_hgclient",
            "hgsvn.unittests.test_hgclient_base",
            "hgsvn.unittests.test_svnclient"
        ],
        "version": "0.6.0"
    },
    "hgticket": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hgtiles": {
        "cmdline": [],
        "modules": [
            "hgtiles",
            "hgtiles.bed2ddb",
            "hgtiles.bedarcsdb",
            "hgtiles.beddb",
            "hgtiles.bedfile",
            "hgtiles.bigwig",
            "hgtiles.chromsizes",
            "hgtiles.cooler",
            "hgtiles.density",
            "hgtiles.files",
            "hgtiles.format",
            "hgtiles.geo",
            "hgtiles.hitile",
            "hgtiles.imtiles",
            "hgtiles.multivec",
            "hgtiles.npmatrix",
            "hgtiles.npvector",
            "hgtiles.points",
            "hgtiles.time_interval",
            "hgtiles.utils"
        ],
        "version": "0.2.17"
    },
    "hgtk": {
        "cmdline": [],
        "modules": [
            "hgtk",
            "hgtk.checker",
            "hgtk.const",
            "hgtk.exception",
            "hgtk.josa",
            "hgtk.letter",
            "hgtk.text"
        ],
        "version": "0.1.3"
    },
    "hgtools": {
        "cmdline": [],
        "modules": [],
        "version": "8.2.0"
    },
    "hgtsim": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "hgversion": {
        "cmdline": [],
        "modules": [
            "hgversion",
            "hgversion.hgvers",
            "hgversion.hgversion"
        ],
        "version": "0.1.8"
    },
    "hgview": {
        "cmdline": [],
        "modules": [
            "hgext3rd",
            "hgext3rd.hgview",
            "hgviewlib",
            "hgviewlib.application",
            "hgviewlib.config",
            "hgviewlib.curses",
            "hgviewlib.curses.application",
            "hgviewlib.curses.canvas",
            "hgviewlib.curses.exceptions",
            "hgviewlib.curses.graphlog",
            "hgviewlib.curses.helpviewer",
            "hgviewlib.curses.hgrepoviewer",
            "hgviewlib.curses.mainframe",
            "hgviewlib.curses.manifest",
            "hgviewlib.curses.utils",
            "hgviewlib.curses.widgets",
            "hgviewlib.decorators",
            "hgviewlib.hggraph",
            "hgviewlib.hgpatches",
            "hgviewlib.hgpatches.graphmod",
            "hgviewlib.hgpatches.mqsupport",
            "hgviewlib.hgpatches.phases",
            "hgviewlib.hgpatches.scmutil",
            "hgviewlib.hgviewhelp",
            "hgviewlib.inotify",
            "hgviewlib.qt5",
            "hgviewlib.qt5.application",
            "hgviewlib.qt5.blockmatcher",
            "hgviewlib.qt5.config",
            "hgviewlib.qt5.helpviewer",
            "hgviewlib.qt5.hgfiledialog",
            "hgviewlib.qt5.hgfileview",
            "hgviewlib.qt5.hgmanifestdialog",
            "hgviewlib.qt5.hgrepomodel",
            "hgviewlib.qt5.hgrepoviewer",
            "hgviewlib.qt5.lexers",
            "hgviewlib.qt5.mixins",
            "hgviewlib.qt5.quickbar",
            "hgviewlib.qt5.revision_description",
            "hgviewlib.qt5.revisions_table",
            "hgviewlib.qt5.styleditemdelegate",
            "hgviewlib.qt5.widgets",
            "hgviewlib.util"
        ],
        "version": "1.14.0"
    },
    "hgvs": {
        "cmdline": [],
        "modules": [
            "hgvs",
            "hgvs.alignmentmapper",
            "hgvs.assemblymapper",
            "hgvs.config",
            "hgvs.dataproviders",
            "hgvs.dataproviders.interface",
            "hgvs.dataproviders.ncbi",
            "hgvs.dataproviders.seqfetcher",
            "hgvs.dataproviders.uta",
            "hgvs.decorators",
            "hgvs.decorators.deprecated",
            "hgvs.decorators.lru_cache",
            "hgvs.easy",
            "hgvs.edit",
            "hgvs.enums",
            "hgvs.exceptions",
            "hgvs.extras",
            "hgvs.extras.babelfish",
            "hgvs.hgvsposition",
            "hgvs.intervalmapper",
            "hgvs.location",
            "hgvs.normalizer",
            "hgvs.parser",
            "hgvs.posedit",
            "hgvs.projector",
            "hgvs.sequencevariant",
            "hgvs.shell",
            "hgvs.transcriptmapper",
            "hgvs.utils",
            "hgvs.utils.PersistentDict",
            "hgvs.utils.altseq_to_hgvsp",
            "hgvs.utils.altseqbuilder",
            "hgvs.utils.cigarmapper",
            "hgvs.utils.context",
            "hgvs.utils.norm",
            "hgvs.utils.orderedenum",
            "hgvs.utils.reftranscriptdata",
            "hgvs.utils.validation",
            "hgvs.validator",
            "hgvs.variantmapper"
        ],
        "version": "1.5.1"
    },
    "hgvs-lexicon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgwatchman": {
        "cmdline": [],
        "modules": [
            "hgwatchman",
            "hgwatchman.client",
            "hgwatchman.pywatchman",
            "hgwatchman.state"
        ],
        "version": "0.5.4"
    },
    "hgwebcommit": {
        "cmdline": [],
        "modules": [
            "hgwebcommit",
            "hgwebcommit.actions",
            "hgwebcommit.actions.base",
            "hgwebcommit.actions.command",
            "hgwebcommit.actions.commit",
            "hgwebcommit.actions.decorators",
            "hgwebcommit.actions.hello",
            "hgwebcommit.actions.loaders",
            "hgwebcommit.forms",
            "hgwebcommit.hgcmd",
            "hgwebcommit.logger",
            "hgwebcommit.main",
            "hgwebcommit.repository",
            "hgwebcommit.repository.base",
            "hgwebcommit.repository.dummy",
            "hgwebcommit.repository.hg",
            "hgwebcommit.utils",
            "hgwebcommit.views",
            "tests",
            "tests.action_testcases"
        ],
        "version": "0.2"
    },
    "hgwebinit": {
        "cmdline": [],
        "modules": [
            "src",
            "src.hgwebinit"
        ],
        "version": "0.1.0"
    },
    "hgwebplus": {
        "cmdline": [],
        "modules": [
            "hgext3rd.hgwebplus"
        ],
        "version": "0.5.3"
    },
    "hgwin": {
        "cmdline": [],
        "modules": [
            "hgwin",
            "hgwin.hgwin",
            "hgwin.newconnectiondialog",
            "hgwin.serverlist",
            "hgwin.servers",
            "hgwin.taskbaricon"
        ],
        "version": "1.0d"
    },
    "hgx": {
        "cmdline": [],
        "modules": [
            "hgx",
            "hgx.accounting",
            "hgx.app",
            "hgx.bootstrapping",
            "hgx.comms",
            "hgx.config",
            "hgx.core",
            "hgx.daemon",
            "hgx.dispatch",
            "hgx.embed",
            "hgx.exceptions",
            "hgx.gao",
            "hgx.hypothetical",
            "hgx.inquisition",
            "hgx.ipc",
            "hgx.lawyer",
            "hgx.librarian",
            "hgx.logutils",
            "hgx.objproxy",
            "hgx.persistence",
            "hgx.postal",
            "hgx.privateer",
            "hgx.remotes",
            "hgx.rolodex",
            "hgx.service",
            "hgx.undertaker",
            "hgx.utils"
        ],
        "version": "0.1.0"
    },
    "hh": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.0"
    },
    "hh-elastic2-doc-manager": {
        "cmdline": [],
        "modules": [
            "mongo_connector",
            "mongo_connector.doc_managers",
            "mongo_connector.doc_managers.formatters_proxy",
            "mongo_connector.doc_managers.hh_elastic2_doc_manager"
        ],
        "version": "0.1.0"
    },
    "hh-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4"
    },
    "hh-plean": {
        "cmdline": [],
        "modules": [
            "__init__",
            "game_engine",
            "game_sprites",
            "gamestart"
        ],
        "version": "1.0"
    },
    "hh-ssl-cert-check": {
        "cmdline": [
            "hh-ssl-cert-check"
        ],
        "modules": [],
        "version": "0.0.4"
    },
    "hh-stats": {
        "cmdline": [],
        "modules": [
            "hh_stats",
            "hh_stats.cli",
            "hh_stats.consts",
            "hh_stats.hh_api",
            "hh_stats.hh_api_ex",
            "hh_stats.input_",
            "hh_stats.logger",
            "hh_stats.main",
            "hh_stats.output",
            "hh_stats.output.csv",
            "hh_stats.output.raw",
            "hh_stats.output.svg",
            "hh_stats.stats",
            "hh_stats.utils",
            "hh_stats.vacancy"
        ],
        "version": "1.4.0"
    },
    "hhc": {
        "cmdline": [],
        "modules": [
            "hhc",
            "hhc.coding",
            "hhc.hhc_test",
            "hhc.num_encode_base64"
        ],
        "version": "3.0.2"
    },
    "hhcalcs": {
        "cmdline": [],
        "modules": [
            "hhcalcs",
            "hhcalcs.hydraulics"
        ],
        "version": "0.1"
    },
    "hhcp": {
        "cmdline": [],
        "modules": [
            "hhcp",
            "hhcp.cp_dir_multi",
            "hhcp.cp_list_multi",
            "hhcp.utils",
            "hhcp.utils.chunks",
            "hhcp.version",
            "tools",
            "tools.hhcpsdk"
        ],
        "version": "0.1.2"
    },
    "hhdpy": {
        "cmdline": [],
        "modules": [
            "hhdpy",
            "hhdpy.jupyter",
            "hhdpy.tex",
            "hhdpy.typora"
        ],
        "version": "1.0.7"
    },
    "hhelper": {
        "cmdline": [],
        "modules": [
            "hhelper",
            "hhelper.hhelper"
        ],
        "version": "1.0.12"
    },
    "hhelper-client": {
        "cmdline": [],
        "modules": [
            "hhelper_client",
            "hhelper_client.hhelper_client"
        ],
        "version": "0.0.5"
    },
    "hhgkjif": {
        "cmdline": [],
        "modules": [
            "hhgkjif"
        ],
        "version": "0.0.1"
    },
    "hhh": {
        "cmdline": [],
        "modules": [
            "hello"
        ],
        "version": "0.0.1"
    },
    "hhh1": {
        "cmdline": [],
        "modules": [
            "hhh1"
        ],
        "version": "1.0.0"
    },
    "hhhh": {
        "cmdline": [],
        "modules": [
            "nnModel",
            "nnModel.AlexNet",
            "nnModel.DenseASPP",
            "nnModel.GoogLeNet",
            "nnModel.LeNet5",
            "nnModel.ResNet",
            "nnModel.VGG"
        ],
        "version": "0.0.1"
    },
    "hhic": {
        "cmdline": [],
        "modules": [
            "hhic",
            "hhic.connector",
            "hhic.hh",
            "hhic.tools"
        ],
        "version": "1.0"
    },
    "hhnester": {
        "cmdline": [],
        "modules": [
            "hhnester"
        ],
        "version": "1.0.0"
    },
    "hhpp": {
        "cmdline": [],
        "modules": [
            "hhpp",
            "hhpp.llive",
            "hhpp.llive.fallbacks",
            "test",
            "test.llive",
            "test.llive.test_fallbacks"
        ],
        "version": "0.1"
    },
    "hhpy": {
        "cmdline": [],
        "modules": [
            "hhpy",
            "hhpy.__version__",
            "hhpy.ds",
            "hhpy.entry_points",
            "hhpy.ipython",
            "hhpy.main",
            "hhpy.modelling",
            "hhpy.plotting",
            "hhpy.regression"
        ],
        "version": "0.2.9"
    },
    "hhrtest": {
        "cmdline": [],
        "modules": [
            "hhrtest",
            "hhrtest.help"
        ],
        "version": "0.0.4"
    },
    "hhsearch-python": {
        "cmdline": [],
        "modules": [
            "hhsearch_python"
        ],
        "version": "1.12"
    },
    "hht": {
        "cmdline": [],
        "modules": [
            "hht"
        ],
        "version": "0.0.2"
    },
    "hhunt": {
        "cmdline": [],
        "modules": [
            "hhunt",
            "hhunt.qt",
            "hhunt.qt.main",
            "hhunt.qt.widgets",
            "hhunt.qt.widgets.mainwindow",
            "hhunt.qt.widgets.tabs",
            "hhunt.qt.widgets.tabs.apartment",
            "hhunt.qt.widgets.tabs.house",
            "hhunt.qt.widgets.tabs.websites"
        ],
        "version": "1.0.dev2"
    },
    "hhutil": {
        "cmdline": [],
        "modules": [
            "hhutil",
            "hhutil._version",
            "hhutil.functools",
            "hhutil.io"
        ],
        "version": "0.1"
    },
    "hhwnester": {
        "cmdline": [],
        "modules": [
            "hhwnester"
        ],
        "version": "1.3.3"
    },
    "hi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hi-lasso": {
        "cmdline": [],
        "modules": [
            "hi_lasso",
            "hi_lasso.glmnet_model",
            "hi_lasso.hi_lasso",
            "hi_lasso.util"
        ],
        "version": "0.1.1"
    },
    "hi-lasso-spark": {
        "cmdline": [],
        "modules": [
            "hi_lasso_spark",
            "hi_lasso_spark.Hi_LASSO_spark"
        ],
        "version": "0.1.1"
    },
    "hiandrewworld": {
        "cmdline": [],
        "modules": [
            "hiandrewworld",
            "hiandrewworld.main"
        ],
        "version": "1.1"
    },
    "hiargparse": {
        "cmdline": [],
        "modules": [
            "hiargparse",
            "hiargparse._version",
            "hiargparse.alternatives",
            "hiargparse.alternatives.arg_parse",
            "hiargparse.alternatives.namespace",
            "hiargparse.args_providers",
            "hiargparse.args_providers.args_provider",
            "hiargparse.args_providers.argument",
            "hiargparse.args_providers.child_provider",
            "hiargparse.args_providers.exceptions",
            "hiargparse.file_protocols",
            "hiargparse.file_protocols.configure_file_type",
            "hiargparse.file_protocols.dict_readers",
            "hiargparse.file_protocols.dict_readers.abstract_dict_reader",
            "hiargparse.file_protocols.dict_readers.added_double_hyphen",
            "hiargparse.file_protocols.dict_readers.normalize_dict",
            "hiargparse.file_protocols.dict_readers.toml_reader",
            "hiargparse.file_protocols.dict_readers.yaml_reader",
            "hiargparse.file_protocols.dict_writers",
            "hiargparse.file_protocols.dict_writers.abstract_dict_writer",
            "hiargparse.file_protocols.dict_writers.null_writer",
            "hiargparse.file_protocols.dict_writers.raw_writer",
            "hiargparse.file_protocols.dict_writers.toml_writer",
            "hiargparse.file_protocols.dict_writers.yaml_writer",
            "hiargparse.hierarchy",
            "hiargparse.hierarchy.format_parent_names",
            "hiargparse.hierarchy.hierarchy",
            "hiargparse.miscs",
            "hiargparse.miscs.dirty_accesses",
            "hiargparse.miscs.if_none_then"
        ],
        "version": "0.2.2"
    },
    "hiarjun": {
        "cmdline": [
            "hiarjun.py"
        ],
        "modules": [],
        "version": "0.0.7"
    },
    "hiatus": {
        "cmdline": [],
        "modules": [
            "hiatus"
        ],
        "version": "0.0.1"
    },
    "hibachi": {
        "cmdline": [],
        "modules": [
            "hibachi",
            "hibachi.criteria",
            "hibachi.penalties",
            "hibachi.rankers",
            "hibachi.utils",
            "test",
            "test.test_criteria",
            "test.test_rankers",
            "test.test_utils"
        ],
        "version": "0.0.1"
    },
    "hibget": {
        "cmdline": [],
        "modules": [
            "hibget",
            "hibget.requests_logging",
            "hibget.utils",
            "hibget.widgets"
        ],
        "version": "0.0.2"
    },
    "hibp": {
        "cmdline": [],
        "modules": [
            "hibp",
            "hibp.example",
            "hibp.hibp"
        ],
        "version": "0.0.5"
    },
    "hibp-pwlookup": {
        "cmdline": [
            "hibp-pwlookup"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "hibp-zetsumeishi": {
        "cmdline": [],
        "modules": [
            "hibp",
            "hibp.constants",
            "hibp.hibp"
        ],
        "version": "0.1.1"
    },
    "hibpcli": {
        "cmdline": [],
        "modules": [
            "hibpcli",
            "hibpcli.cli",
            "hibpcli.exceptions",
            "hibpcli.keepass",
            "hibpcli.password"
        ],
        "version": "0.4.1"
    },
    "hibpwned": {
        "cmdline": [],
        "modules": [
            "hibpwned"
        ],
        "version": "1.1.9"
    },
    "hibro": {
        "cmdline": [],
        "modules": [
            "hibro",
            "hibro.dashboard",
            "hibro.data",
            "hibro.plot",
            "hibro.wsgi"
        ],
        "version": "0.2.1"
    },
    "hic": {
        "cmdline": [],
        "modules": [
            "hic",
            "hic.flow",
            "hic.initial",
            "hic.test",
            "hic.test.test_flow",
            "hic.test.test_initial"
        ],
        "version": "0.1.0"
    },
    "hic-straw": {
        "cmdline": [],
        "modules": [
            "straw",
            "straw.straw"
        ],
        "version": "0.0.6"
    },
    "hic2cool": {
        "cmdline": [],
        "modules": [
            "hic2cool",
            "hic2cool._version",
            "hic2cool.hic2cool_config",
            "hic2cool.hic2cool_updates",
            "hic2cool.hic2cool_utils"
        ],
        "version": "0.8.3"
    },
    "hic3defdr": {
        "cmdline": [],
        "modules": [
            "hic3defdr",
            "hic3defdr._version",
            "hic3defdr.analysis",
            "hic3defdr.analysis.alternatives",
            "hic3defdr.analysis.analysis",
            "hic3defdr.analysis.constructor",
            "hic3defdr.analysis.core",
            "hic3defdr.analysis.plotting",
            "hic3defdr.analysis.simulation",
            "hic3defdr.plotting",
            "hic3defdr.plotting.dispersion",
            "hic3defdr.plotting.distance_bias",
            "hic3defdr.plotting.distance_dependence",
            "hic3defdr.plotting.fdr",
            "hic3defdr.plotting.fn_vs_fp",
            "hic3defdr.plotting.grid",
            "hic3defdr.plotting.heatmap",
            "hic3defdr.plotting.histograms",
            "hic3defdr.plotting.ma",
            "hic3defdr.plotting.roc",
            "hic3defdr.util",
            "hic3defdr.util.apa",
            "hic3defdr.util.balancing",
            "hic3defdr.util.banded_matrix",
            "hic3defdr.util.binning",
            "hic3defdr.util.classification",
            "hic3defdr.util.cluster_table",
            "hic3defdr.util.clusters",
            "hic3defdr.util.demo_data",
            "hic3defdr.util.dispersion",
            "hic3defdr.util.evaluation",
            "hic3defdr.util.filtering",
            "hic3defdr.util.lowess",
            "hic3defdr.util.lrt",
            "hic3defdr.util.matrices",
            "hic3defdr.util.parallelization",
            "hic3defdr.util.printing",
            "hic3defdr.util.progress",
            "hic3defdr.util.scaled_nb",
            "hic3defdr.util.scaling",
            "hic3defdr.util.simulation",
            "hic3defdr.util.thresholding"
        ],
        "version": "0.2.1"
    },
    "hicassembler": {
        "cmdline": [],
        "modules": [
            "hicassembler",
            "hicassembler.HiCAssembler",
            "hicassembler.HiCAssembler_working_copy",
            "hicassembler.PathGraph",
            "hicassembler.Scaffolds",
            "hicassembler._version",
            "hicassembler.hicassembler_attic",
            "hicassembler.parserCommon",
            "hicassembler.plotScaffoldInteractive",
            "hicassembler.plotScaffoldsHiC"
        ],
        "version": "1.1.1"
    },
    "hicexplorer": {
        "cmdline": [],
        "modules": [
            "hicexplorer",
            "hicexplorer._version",
            "hicexplorer.chicAggregateStatistic",
            "hicexplorer.chicCorrectMatrix",
            "hicexplorer.chicDifferentialAnalysis",
            "hicexplorer.chicDifferentialTest",
            "hicexplorer.chicPlotViewpoint",
            "hicexplorer.chicViewpoint",
            "hicexplorer.chicViewpointBackgroundModel",
            "hicexplorer.findRestSite",
            "hicexplorer.hicAdjustMatrix",
            "hicexplorer.hicAggregateContacts",
            "hicexplorer.hicAverageRegions",
            "hicexplorer.hicBuildMatrix",
            "hicexplorer.hicCompareMatrices",
            "hicexplorer.hicConvertFormat",
            "hicexplorer.hicCorrectMatrix",
            "hicexplorer.hicCorrelate",
            "hicexplorer.hicDetectLoops",
            "hicexplorer.hicDifferentialAnalysis",
            "hicexplorer.hicFindEnrichedContacts",
            "hicexplorer.hicFindTADs",
            "hicexplorer.hicInfo",
            "hicexplorer.hicLog2Ratio",
            "hicexplorer.hicMergeMatrixBins",
            "hicexplorer.hicMergeTADbins",
            "hicexplorer.hicNormalize",
            "hicexplorer.hicPCA",
            "hicexplorer.hicPlotAverageRegions",
            "hicexplorer.hicPlotDistVsCounts",
            "hicexplorer.hicPlotMatrix",
            "hicexplorer.hicPlotTADs",
            "hicexplorer.hicPlotViewpoint",
            "hicexplorer.hicPrepareQCreport",
            "hicexplorer.hicSumMatrices",
            "hicexplorer.hicTransform",
            "hicexplorer.iterativeCorrection",
            "hicexplorer.lib",
            "hicexplorer.lib.utilities",
            "hicexplorer.lib.viewpoint",
            "hicexplorer.list_tools",
            "hicexplorer.old_pca",
            "hicexplorer.parserCommon",
            "hicexplorer.readBed",
            "hicexplorer.reduceMatrix",
            "hicexplorer.trackPlot",
            "hicexplorer.utilities"
        ],
        "version": "2.2.1.1"
    },
    "hichao-test": {
        "cmdline": [],
        "modules": [
            "hichao_test",
            "hichao_test.conf",
            "hichao_test.curl_builder",
            "hichao_test.curl_reader",
            "hichao_test.decorator",
            "hichao_torn",
            "hichao_torn.main",
            "hichao_torn.test",
            "hichao_torn.test.runtests",
            "hichao_torn.test.test",
            "hichao_torn.test.util",
            "hichao_torn.views"
        ],
        "version": "0.2.2"
    },
    "hichao-thrift": {
        "cmdline": [],
        "modules": [
            "thrift",
            "thrift.TSCons",
            "thrift.TSerialization",
            "thrift.TTornado",
            "thrift.Thrift",
            "thrift.protocol",
            "thrift.protocol.TBase",
            "thrift.protocol.TBinaryProtocol",
            "thrift.protocol.TCompactProtocol",
            "thrift.protocol.TJSONProtocol",
            "thrift.protocol.TProtocol",
            "thrift.server",
            "thrift.server.THttpServer",
            "thrift.server.TNonblockingServer",
            "thrift.server.TProcessPoolServer",
            "thrift.server.TServer",
            "thrift.transport",
            "thrift.transport.THttpClient",
            "thrift.transport.TSSLSocket",
            "thrift.transport.TSocket",
            "thrift.transport.TTransport",
            "thrift.transport.TTwisted",
            "thrift.transport.TZlibTransport"
        ],
        "version": "1.0.1"
    },
    "hichap": {
        "cmdline": [
            "hichap"
        ],
        "modules": [
            "HiCHap",
            "HiCHap.AllelicSpecificity",
            "HiCHap.StructureFind",
            "HiCHap.bamProcess",
            "HiCHap.fastqPlus",
            "HiCHap.filtering",
            "HiCHap.genome",
            "HiCHap.mapping",
            "HiCHap.matrixBuilding"
        ],
        "version": "1.4"
    },
    "hichesslib": {
        "cmdline": [],
        "modules": [
            "hichess",
            "hichess.hichess"
        ],
        "version": "1.2.10.3"
    },
    "hichip-peaks": {
        "cmdline": [],
        "modules": [
            "hichip_peaks",
            "hichip_peaks.bedgraph",
            "hichip_peaks.diffpeaks",
            "hichip_peaks.helpers",
            "hichip_peaks.interaction_to_sparse",
            "hichip_peaks.main",
            "hichip_peaks.quality_report",
            "hichip_peaks.site_matrix_class",
            "hichip_peaks.sparse_to_peaks"
        ],
        "version": "0.1.2"
    },
    "hichipper": {
        "cmdline": [],
        "modules": [
            "hichipper",
            "hichipper.cli",
            "hichipper.hichipperHelp",
            "hichipper.hichipperProjectClass",
            "hichipper.hicproHelper"
        ],
        "version": "0.7.7"
    },
    "hickle": {
        "cmdline": [],
        "modules": [
            "hickle",
            "hickle.__version__",
            "hickle.helpers",
            "hickle.hickle",
            "hickle.legacy_v3",
            "hickle.legacy_v3.__version__",
            "hickle.legacy_v3.helpers",
            "hickle.legacy_v3.hickle",
            "hickle.legacy_v3.loaders",
            "hickle.legacy_v3.loaders.load_astropy",
            "hickle.legacy_v3.loaders.load_numpy",
            "hickle.legacy_v3.loaders.load_pandas",
            "hickle.legacy_v3.loaders.load_python3",
            "hickle.legacy_v3.loaders.load_scipy",
            "hickle.legacy_v3.lookup",
            "hickle.loaders",
            "hickle.loaders.load_astropy",
            "hickle.loaders.load_builtins",
            "hickle.loaders.load_numpy",
            "hickle.loaders.load_pandas",
            "hickle.loaders.load_scipy",
            "hickle.lookup",
            "hickle.tests",
            "hickle.tests.test_astropy",
            "hickle.tests.test_hickle",
            "hickle.tests.test_hickle_helpers",
            "hickle.tests.test_legacy_load",
            "hickle.tests.test_scipy"
        ],
        "version": "4.0.1"
    },
    "hickory": {
        "cmdline": [],
        "modules": [
            "hickory",
            "hickory.cli",
            "hickory.constants",
            "hickory.every_launchd",
            "hickory.every_systemd",
            "hickory.format_status",
            "hickory.launchd",
            "hickory.systemd",
            "hickory.utils"
        ],
        "version": "1.0.0"
    },
    "hicli": {
        "cmdline": [],
        "modules": [
            "hi",
            "hi.cli",
            "hi.config",
            "hi.exceptions",
            "hi.group",
            "hi.hi",
            "hi.host",
            "hi.log",
            "hi.rules"
        ],
        "version": "1.0.3"
    },
    "hicmatrix": {
        "cmdline": [],
        "modules": [
            "hicmatrix",
            "hicmatrix.HiCMatrix",
            "hicmatrix._version",
            "hicmatrix.lib",
            "hicmatrix.lib.cool",
            "hicmatrix.lib.ginteractions",
            "hicmatrix.lib.h5",
            "hicmatrix.lib.hicpro",
            "hicmatrix.lib.homer",
            "hicmatrix.lib.matrixFile",
            "hicmatrix.lib.matrixFileHandler",
            "hicmatrix.utilities"
        ],
        "version": "13"
    },
    "hiconet": {
        "cmdline": [],
        "modules": [
            "hiconet",
            "hiconet.HiCoNet",
            "hiconet.btm",
            "hiconet.btm.btm_example_data",
            "hiconet.btm.btm_tool",
            "hiconet.community_detection",
            "hiconet.data_society",
            "hiconet.export",
            "hiconet.html_visual",
            "hiconet.input_functions",
            "hiconet.pls2_network"
        ],
        "version": "0.5.2"
    },
    "hicore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hicpeaks": {
        "cmdline": [],
        "modules": [
            "hicpeaks",
            "hicpeaks.apa",
            "hicpeaks.callers",
            "hicpeaks.utilities"
        ],
        "version": "0.3.4"
    },
    "hicplotlib": {
        "cmdline": [],
        "modules": [
            "hicplotlib",
            "hicplotlib.GenomicIntervals",
            "hicplotlib.HiCParameters",
            "hicplotlib.HiCPlot"
        ],
        "version": "0.3"
    },
    "hicprediction-abajorat": {
        "cmdline": [
            "createBaseFile.py",
            "createTrainingSet.py",
            "plotMatrix.py",
            "predict",
            "training.py"
        ],
        "modules": [
            "HiCPrediction",
            "HiCPrediction.configurations",
            "HiCPrediction.createAllTrainSets",
            "HiCPrediction.createBaseFile",
            "HiCPrediction.createTrainingSet",
            "HiCPrediction.plotMatrix",
            "HiCPrediction.predict",
            "HiCPrediction.showFiles",
            "HiCPrediction.tagCreator",
            "HiCPrediction.test_createBaseFile",
            "HiCPrediction.training"
        ],
        "version": "0.0.1"
    },
    "hicrep": {
        "cmdline": [],
        "modules": [
            "hicrep",
            "hicrep.hicrep",
            "hicrep.utils"
        ],
        "version": "0.1.7"
    },
    "hicreppy": {
        "cmdline": [],
        "modules": [
            "hicreppy",
            "hicreppy.cli",
            "hicreppy.hicrep",
            "hicreppy.utils",
            "hicreppy.utils.mat_process",
            "tests",
            "tests.test_cli",
            "tests.test_hicrep",
            "tests.test_mat_process"
        ],
        "version": "0.0.6"
    },
    "hics": {
        "cmdline": [],
        "modules": [
            "hics",
            "hics.config",
            "hics.io",
            "hics.version"
        ],
        "version": "0.0.3"
    },
    "hicstuff": {
        "cmdline": [],
        "modules": [
            "hicstuff",
            "hicstuff.commands",
            "hicstuff.digest",
            "hicstuff.distance_law",
            "hicstuff.filter",
            "hicstuff.hicstuff",
            "hicstuff.io",
            "hicstuff.iteralign",
            "hicstuff.log",
            "hicstuff.main",
            "hicstuff.pipeline",
            "hicstuff.version",
            "hicstuff.view"
        ],
        "version": "2.3.2"
    },
    "hictools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hictornadio2": {
        "cmdline": [],
        "modules": [
            "tornadio2",
            "tornadio2.conn",
            "tornadio2.flashserver",
            "tornadio2.gen",
            "tornadio2.periodic",
            "tornadio2.persistent",
            "tornadio2.polling",
            "tornadio2.preflight",
            "tornadio2.proto",
            "tornadio2.router",
            "tornadio2.server",
            "tornadio2.session",
            "tornadio2.sessioncontainer",
            "tornadio2.stats"
        ],
        "version": "0.1.2"
    },
    "hid": {
        "cmdline": [],
        "modules": [
            "hid"
        ],
        "version": "1.0.4"
    },
    "hid-converge": {
        "cmdline": [],
        "modules": [
            "Queue",
            "Queue.q",
            "QueueModule",
            "QueueModule.q",
            "authentication",
            "authentication.authentication",
            "authentication.gateway"
        ],
        "version": "2.0.1.1"
    },
    "hid-converge-batch": {
        "cmdline": [],
        "modules": [
            "ngs",
            "ngs.batch",
            "service",
            "service.ContactViewObject",
            "service.DictionaryEntry",
            "service.DnaCase",
            "service.DnaCaseMap",
            "service.EthinicityEnum",
            "service.GenotypeLocusViewObject",
            "service.GenotypeProfileViewObject",
            "service.LocusViewObject",
            "service.OrganizationViewObject",
            "service.ProfileCategoryEnum",
            "service.RelationshipEnum",
            "service.SubjectViewObject",
            "service.batchService",
            "service.caseService",
            "service.masterDataEnum",
            "utils.exporter"
        ],
        "version": "2.0.1.1"
    },
    "hid-converge-ngs": {
        "cmdline": [],
        "modules": [
            "ngs",
            "ngs.batch",
            "service",
            "service.ContactViewObject",
            "service.DictionaryEntry",
            "service.DnaCase",
            "service.DnaCaseMap",
            "service.EthinicityEnum",
            "service.GenotypeLocusViewObject",
            "service.GenotypeProfileViewObject",
            "service.LocusViewObject",
            "service.OrganizationViewObject",
            "service.ProfileCategoryEnum",
            "service.RelationshipEnum",
            "service.SubjectViewObject",
            "service.batchService",
            "service.caseService",
            "service.masterDataEnum",
            "utils",
            "utils.exporter"
        ],
        "version": "2.0.1.8"
    },
    "hid-parser": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hid-tools": {
        "cmdline": [],
        "modules": [
            "hidtools",
            "hidtools.hid",
            "hidtools.hidraw",
            "hidtools.hut",
            "hidtools.uhid",
            "hidtools.util"
        ],
        "version": "0.2"
    },
    "hid-watchdog": {
        "cmdline": [],
        "modules": [
            "hid_watchdog",
            "hid_watchdog.cli",
            "hid_watchdog.hid_watchdog"
        ],
        "version": "0.1.7"
    },
    "hidapi": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.0.post3"
    },
    "hidapi-cffi": {
        "cmdline": [],
        "modules": [
            "hidapi"
        ],
        "version": "0.2.2"
    },
    "hidash": {
        "cmdline": [],
        "modules": [
            "hidash",
            "hidash.admin",
            "hidash.forms",
            "hidash.migrations",
            "hidash.migrations.0001_initial",
            "hidash.migrations.0002_auto_20160929_1312",
            "hidash.migrations.0003_auto_20161005_0715",
            "hidash.migrations.0004_auto_20161012_0739",
            "hidash.migrations.0005_auto_20161213_1214",
            "hidash.migrations.0006_auto_20161213_1238",
            "hidash.migrations.0007_auto_20170206_1206",
            "hidash.models",
            "hidash.router",
            "hidash.south_migrations",
            "hidash.south_migrations.0001_initial",
            "hidash.south_migrations.0002_auto__del_chartgroup",
            "hidash.south_migrations.0003_auto__add_group__add_chartgroup__add_chartparameter__add_field_chart_s",
            "hidash.south_migrations.0004_auto__add_field_scheduledreport_email_subject__add_field_scheduledrepo",
            "hidash.south_migrations.0005_auto__add_field_scheduledreportparam_is_parameter_value_sql_function",
            "hidash.south_migrations.0006_auto__add_field_scheduledreport_group__add_field_scheduledreport_templ",
            "hidash.south_migrations.0007_auto__chg_field_chart_name__chg_field_chart_height__chg_field_chart_di",
            "hidash.south_migrations.0008_auto__add_field_group_template",
            "hidash.views"
        ],
        "version": "0.2.29"
    },
    "hidden-markov": {
        "cmdline": [],
        "modules": [
            "hidden_markov",
            "hidden_markov.hmm_class"
        ],
        "version": "0.3.2"
    },
    "hiddenalphabet": {
        "cmdline": [],
        "modules": [
            "hiddenAlphabet",
            "hiddenAlphabet.hiddenAlphabet"
        ],
        "version": "0.0.9"
    },
    "hiddenalphabet-finance-nlp-model": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiddenalphabet-finance-nlp-model1": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hiddenalphabet-finance-nlp-model2": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hiddenalphabet-model": {
        "cmdline": [],
        "modules": [
            "hiddenalphabet_model",
            "hiddenalphabet_model.nlp_model"
        ],
        "version": "0.0.8"
    },
    "hiddeneye-reborn": {
        "cmdline": [],
        "modules": [
            "hiddeneye_reborn",
            "hiddeneye_reborn.controllers",
            "hiddeneye_reborn.controllers.controller_compression",
            "hiddeneye_reborn.controllers.controller_connection",
            "hiddeneye_reborn.hiddeneye_reborn",
            "hiddeneye_reborn.models",
            "hiddeneye_reborn.models.model_compression",
            "hiddeneye_reborn.models.model_connection",
            "hiddeneye_reborn.models.model_templates_helper"
        ],
        "version": "0.0a1.dev4"
    },
    "hiddenlayer": {
        "cmdline": [],
        "modules": [
            "hiddenlayer",
            "hiddenlayer.canvas",
            "hiddenlayer.ge",
            "hiddenlayer.graph",
            "hiddenlayer.history",
            "hiddenlayer.pytorch_builder",
            "hiddenlayer.tf_builder",
            "hiddenlayer.transforms",
            "hiddenlayer.utils"
        ],
        "version": "0.3"
    },
    "hiddenv": {
        "cmdline": [],
        "modules": [
            "hiddenv",
            "hiddenv.conf",
            "hiddenv.dotenv",
            "hiddenv.environment"
        ],
        "version": "2020.9.3"
    },
    "hiddev": {
        "cmdline": [
            "hiddevexplorer"
        ],
        "modules": [
            "hiddev",
            "hiddev.gui",
            "hiddev.monitorcontrol",
            "hiddev.usages"
        ],
        "version": "0.4.2"
    },
    "hide": {
        "cmdline": [],
        "modules": [
            "hide"
        ],
        "version": "0.1.1.7"
    },
    "hide-code": {
        "cmdline": [],
        "modules": [
            "hide_code",
            "hide_code.hide_code",
            "hide_code.hide_code_config",
            "hide_code.hide_code_html_exporter",
            "hide_code.hide_code_latex_exporter",
            "hide_code.hide_code_latexpdf_exporter",
            "hide_code.hide_code_pdf_exporter",
            "hide_code.hide_code_preprocessor",
            "hide_code.hide_code_slides_exporter",
            "hide_code.utils"
        ],
        "version": "0.5.5"
    },
    "hide-env": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hidebound": {
        "cmdline": [],
        "modules": [
            "hidebound",
            "hidebound.core",
            "hidebound.core.config",
            "hidebound.core.database",
            "hidebound.core.database_tools",
            "hidebound.core.parser",
            "hidebound.core.specification_base",
            "hidebound.core.specifications",
            "hidebound.core.tools",
            "hidebound.core.traits",
            "hidebound.core.validators",
            "hidebound.exporters",
            "hidebound.exporters.exporter_base",
            "hidebound.exporters.girder_exporter",
            "hidebound.server",
            "hidebound.server.api",
            "hidebound.server.app",
            "hidebound.server.components",
            "hidebound.server.server_tools"
        ],
        "version": "0.9.2"
    },
    "hideez": {
        "cmdline": [
            "hideezctl"
        ],
        "modules": [
            "hideezlib",
            "hideezlib._ed25519",
            "hideezlib.client",
            "hideezlib.coins",
            "hideezlib.cosi",
            "hideezlib.log",
            "hideezlib.mapping",
            "hideezlib.messages",
            "hideezlib.messages.Address",
            "hideezlib.messages.ApplyFlags",
            "hideezlib.messages.ApplySettings",
            "hideezlib.messages.BackupDevice",
            "hideezlib.messages.ButtonAck",
            "hideezlib.messages.ButtonRequest",
            "hideezlib.messages.ButtonRequestType",
            "hideezlib.messages.Cancel",
            "hideezlib.messages.ChangePin",
            "hideezlib.messages.CipherKeyValue",
            "hideezlib.messages.CipheredKeyValue",
            "hideezlib.messages.ClearSession",
            "hideezlib.messages.CosiCommit",
            "hideezlib.messages.CosiCommitment",
            "hideezlib.messages.CosiSign",
            "hideezlib.messages.CosiSignature",
            "hideezlib.messages.DebugLinkDecision",
            "hideezlib.messages.DebugLinkFlashErase",
            "hideezlib.messages.DebugLinkGetState",
            "hideezlib.messages.DebugLinkLog",
            "hideezlib.messages.DebugLinkMemory",
            "hideezlib.messages.DebugLinkMemoryRead",
            "hideezlib.messages.DebugLinkMemoryWrite",
            "hideezlib.messages.DebugLinkState",
            "hideezlib.messages.DebugLinkStop",
            "hideezlib.messages.DecryptMessage",
            "hideezlib.messages.DecryptedMessage",
            "hideezlib.messages.ECDHSessionKey",
            "hideezlib.messages.EncryptMessage",
            "hideezlib.messages.EncryptedMessage",
            "hideezlib.messages.Entropy",
            "hideezlib.messages.EntropyAck",
            "hideezlib.messages.EntropyRequest",
            "hideezlib.messages.EstimateTxSize",
            "hideezlib.messages.Failure",
            "hideezlib.messages.FailureType",
            "hideezlib.messages.Features",
            "hideezlib.messages.FirmwareErase",
            "hideezlib.messages.FirmwareRequest",
            "hideezlib.messages.FirmwareUpload",
            "hideezlib.messages.GetAddress",
            "hideezlib.messages.GetECDHSessionKey",
            "hideezlib.messages.GetEntropy",
            "hideezlib.messages.GetFeatures",
            "hideezlib.messages.GetPublicKey",
            "hideezlib.messages.HDNodePathType",
            "hideezlib.messages.HDNodeType",
            "hideezlib.messages.IdentityType",
            "hideezlib.messages.Initialize",
            "hideezlib.messages.InputScriptType",
            "hideezlib.messages.LoadDevice",
            "hideezlib.messages.MessageSignature",
            "hideezlib.messages.MessageType",
            "hideezlib.messages.MultisigRedeemScriptType",
            "hideezlib.messages.OutputScriptType",
            "hideezlib.messages.PassphraseAck",
            "hideezlib.messages.PassphraseRequest",
            "hideezlib.messages.PassphraseSourceType",
            "hideezlib.messages.PassphraseStateAck",
            "hideezlib.messages.PassphraseStateRequest",
            "hideezlib.messages.PinMatrixAck",
            "hideezlib.messages.PinMatrixRequest",
            "hideezlib.messages.PinMatrixRequestType",
            "hideezlib.messages.Ping",
            "hideezlib.messages.PublicKey",
            "hideezlib.messages.RecoveryDevice",
            "hideezlib.messages.RecoveryDeviceType",
            "hideezlib.messages.RequestType",
            "hideezlib.messages.ResetDevice",
            "hideezlib.messages.SelfTest",
            "hideezlib.messages.SetU2FCounter",
            "hideezlib.messages.SignIdentity",
            "hideezlib.messages.SignMessage",
            "hideezlib.messages.SignTx",
            "hideezlib.messages.SignedIdentity",
            "hideezlib.messages.SimpleSignTx",
            "hideezlib.messages.Success",
            "hideezlib.messages.TransactionType",
            "hideezlib.messages.TxAck",
            "hideezlib.messages.TxInputType",
            "hideezlib.messages.TxOutputBinType",
            "hideezlib.messages.TxOutputType",
            "hideezlib.messages.TxRequest",
            "hideezlib.messages.TxRequestDetailsType",
            "hideezlib.messages.TxRequestSerializedType",
            "hideezlib.messages.TxSize",
            "hideezlib.messages.VerifyMessage",
            "hideezlib.messages.WipeDevice",
            "hideezlib.messages.WordAck",
            "hideezlib.messages.WordRequest",
            "hideezlib.messages.WordRequestType",
            "hideezlib.protobuf",
            "hideezlib.tests",
            "hideezlib.tests.device_tests",
            "hideezlib.tests.device_tests.common",
            "hideezlib.tests.device_tests.conftest",
            "hideezlib.tests.device_tests.test_basic",
            "hideezlib.tests.device_tests.test_bip32_speed",
            "hideezlib.tests.device_tests.test_cancel",
            "hideezlib.tests.device_tests.test_cosi",
            "hideezlib.tests.device_tests.test_msg_applysettings",
            "hideezlib.tests.device_tests.test_msg_cipherkeyvalue",
            "hideezlib.tests.device_tests.test_msg_clearsession",
            "hideezlib.tests.device_tests.test_msg_getaddress",
            "hideezlib.tests.device_tests.test_msg_getaddress_segwit",
            "hideezlib.tests.device_tests.test_msg_getaddress_segwit_native",
            "hideezlib.tests.device_tests.test_msg_getaddress_show",
            "hideezlib.tests.device_tests.test_msg_getecdhsessionkey",
            "hideezlib.tests.device_tests.test_msg_getentropy",
            "hideezlib.tests.device_tests.test_msg_getpublickey",
            "hideezlib.tests.device_tests.test_msg_getpublickey_curve",
            "hideezlib.tests.device_tests.test_msg_loaddevice",
            "hideezlib.tests.device_tests.test_msg_ping",
            "hideezlib.tests.device_tests.test_msg_signidentity",
            "hideezlib.tests.device_tests.test_msg_signmessage",
            "hideezlib.tests.device_tests.test_msg_signmessage_segwit",
            "hideezlib.tests.device_tests.test_msg_signmessage_segwit_native",
            "hideezlib.tests.device_tests.test_msg_signtx",
            "hideezlib.tests.device_tests.test_msg_signtx_segwit",
            "hideezlib.tests.device_tests.test_msg_signtx_segwit_native",
            "hideezlib.tests.device_tests.test_msg_verifymessage",
            "hideezlib.tests.device_tests.test_msg_verifymessage_segwit",
            "hideezlib.tests.device_tests.test_msg_verifymessage_segwit_native",
            "hideezlib.tests.device_tests.test_msg_wipedevice",
            "hideezlib.tests.device_tests.test_multisig",
            "hideezlib.tests.device_tests.test_multisig_change",
            "hideezlib.tests.device_tests.test_op_return",
            "hideezlib.tests.device_tests.test_protect_call",
            "hideezlib.tests.device_tests.test_protection_levels",
            "hideezlib.tests.device_tests.test_zerosig",
            "hideezlib.tests.support",
            "hideezlib.tests.support.ckd_public",
            "hideezlib.tests.unit_tests",
            "hideezlib.tests.unit_tests.test_ckd_public",
            "hideezlib.tests.unit_tests.test_cosi",
            "hideezlib.tests.unit_tests.test_protobuf",
            "hideezlib.tests.unit_tests.test_transport",
            "hideezlib.tests.unit_tests.test_tx_api",
            "hideezlib.tools",
            "hideezlib.transport",
            "hideezlib.transport.bridge",
            "hideezlib.tx_api"
        ],
        "version": "0.2.1"
    },
    "hideit": {
        "cmdline": [],
        "modules": [
            "hideit.cli"
        ],
        "version": "0.0.3"
    },
    "hideme": {
        "cmdline": [],
        "modules": [
            "hideme",
            "hideme.proxy_collector"
        ],
        "version": "0.0.2"
    },
    "hideout": {
        "cmdline": [],
        "modules": [
            "hideout",
            "hideout.area",
            "hideout.env",
            "hideout.file",
            "hideout.log",
            "tests",
            "tests.test_file",
            "tests.test_load"
        ],
        "version": "0.3.2"
    },
    "hidi": {
        "cmdline": [],
        "modules": [
            "hidi",
            "hidi.clean",
            "hidi.examples",
            "hidi.examples.forking",
            "hidi.examples.simple",
            "hidi.forking",
            "hidi.inout",
            "hidi.linalg",
            "hidi.matrix",
            "hidi.pipeline",
            "hidi.transform"
        ],
        "version": "0.0.3"
    },
    "hidio": {
        "cmdline": [],
        "modules": [
            "hidio",
            "hidio.client",
            "hidio.schema"
        ],
        "version": "0.1.0b1"
    },
    "hidiocore": {
        "cmdline": [],
        "modules": [
            "hidiocore",
            "hidiocore.client",
            "hidiocore.schema"
        ],
        "version": "0.1.0b3"
    },
    "hidraw": {
        "cmdline": [],
        "modules": [
            "hidraw",
            "hidraw.hidraw"
        ],
        "version": "0.1"
    },
    "hidraw-pure": {
        "cmdline": [],
        "modules": [
            "hidraw"
        ],
        "version": "1.1"
    },
    "hidrocomp": {
        "cmdline": [],
        "modules": [
            "hidrocomp"
        ],
        "version": "1.1.7"
    },
    "hidrokit": {
        "cmdline": [],
        "modules": [
            "hidrokit",
            "hidrokit.__version__",
            "hidrokit.analysis",
            "hidrokit.contrib",
            "hidrokit.contrib.taruma",
            "hidrokit.contrib.taruma.hk106",
            "hidrokit.contrib.taruma.hk43",
            "hidrokit.contrib.taruma.hk53",
            "hidrokit.contrib.taruma.hk73",
            "hidrokit.contrib.taruma.hk79",
            "hidrokit.contrib.taruma.hk84",
            "hidrokit.contrib.taruma.hk87",
            "hidrokit.contrib.taruma.hk88",
            "hidrokit.contrib.taruma.hk89",
            "hidrokit.contrib.taruma.hk90",
            "hidrokit.contrib.taruma.hk96",
            "hidrokit.contrib.taruma.hk98",
            "hidrokit.contrib.taruma.hk99",
            "hidrokit.prep",
            "hidrokit.prep.excel",
            "hidrokit.prep.read",
            "hidrokit.prep.timeseries",
            "hidrokit.viz",
            "hidrokit.viz.graph",
            "hidrokit.viz.table"
        ],
        "version": "0.3.6"
    },
    "hidropy": {
        "cmdline": [],
        "modules": [
            "hidropy",
            "hidropy.calibration",
            "hidropy.calibration.smap",
            "hidropy.operational",
            "hidropy.preprocessing",
            "hidropy.preprocessing.compute_daily_pcp",
            "hidropy.preprocessing.compute_daily_temp",
            "hidropy.preprocessing.txt2npz",
            "hidropy.preprocessing.write_thiessen"
        ],
        "version": "0.1.4"
    },
    "hiduu": {
        "cmdline": [],
        "modules": [
            "hiduu._init_",
            "hiduu.hiduu"
        ],
        "version": "1.0.7"
    },
    "hidx": {
        "cmdline": [],
        "modules": [
            "GUI",
            "GUI.Ui_aboutHiDX",
            "GUI.Ui_dbserver",
            "GUI.Ui_main",
            "GUI.Ui_webview",
            "GUI.aboutHiDX",
            "GUI.dbserver",
            "GUI.icons_rc",
            "GUI.main",
            "GUI.stats",
            "GUI.stats.explore",
            "GUI.viz",
            "GUI.viz.Ui_motionchart",
            "GUI.viz.icons_rc",
            "GUI.viz.motionchart",
            "GUI.viz.scatmat",
            "GUI.webview"
        ],
        "version": "0.5"
    },
    "hiegeo": {
        "cmdline": [],
        "modules": [
            "hiegeo",
            "hiegeo.hiegeo"
        ],
        "version": "0.1.6"
    },
    "hiel": {
        "cmdline": [],
        "modules": [
            "hiel",
            "hiel.cli",
            "hiel.services",
            "hiel.services.bootstrap",
            "hiel.services.github",
            "hiel.utils",
            "hiel.utils.constants",
            "hiel.utils.enums"
        ],
        "version": "0.0.1"
    },
    "hienoi": {
        "cmdline": [],
        "modules": [
            "hienoi",
            "hienoi._common",
            "hienoi._dynamicarray",
            "hienoi._kdtree",
            "hienoi._nani",
            "hienoi._numeric",
            "hienoi._orderedbuffer",
            "hienoi._vectors",
            "hienoi.application",
            "hienoi.dynamics",
            "hienoi.gui",
            "hienoi.renderer"
        ],
        "version": "0.2.0"
    },
    "hier-backbone": {
        "cmdline": [],
        "modules": [
            "hier_backbone",
            "hier_backbone.core"
        ],
        "version": "0.9.0"
    },
    "hier-client": {
        "cmdline": [],
        "modules": [
            "hier_client",
            "hier_client.__version__",
            "hier_client.client",
            "hier_client.forward_emails",
            "hier_client.test",
            "hier_client.tree2pdf"
        ],
        "version": "0.1.5"
    },
    "hier-config": {
        "cmdline": [],
        "modules": [
            "hier_config",
            "hier_config.base",
            "hier_config.hc_child",
            "hier_config.hconfig",
            "hier_config.helpers",
            "hier_config.host",
            "hier_config.text_match"
        ],
        "version": "1.6.1"
    },
    "hiera-py": {
        "cmdline": [],
        "modules": [
            "hiera",
            "hiera.client",
            "hiera.exc"
        ],
        "version": "0.0.1"
    },
    "hieralb": {
        "cmdline": [],
        "modules": [
            "hieralb",
            "hieralb.core",
            "hieralb.create_album_files"
        ],
        "version": "0.1.2"
    },
    "hierapy": {
        "cmdline": [],
        "modules": [
            "hierapy",
            "tests.test_hiera_config"
        ],
        "version": "0.0.3"
    },
    "hierarc": {
        "cmdline": [],
        "modules": [
            "hierarc",
            "hierarc.Diagnostics",
            "hierarc.Diagnostics.goodness_of_fit",
            "hierarc.LensPosterior",
            "hierarc.LensPosterior.anisotropy_config",
            "hierarc.LensPosterior.base_config",
            "hierarc.LensPosterior.ddt_kin_constraints",
            "hierarc.LensPosterior.ddt_kin_gauss_constraints",
            "hierarc.LensPosterior.imaging_constraints",
            "hierarc.LensPosterior.kin_constraints",
            "hierarc.Likelihood",
            "hierarc.Likelihood.LensLikelihood",
            "hierarc.Likelihood.LensLikelihood.base_lens_likelihood",
            "hierarc.Likelihood.LensLikelihood.ddt_dd_gauss_likelihood",
            "hierarc.Likelihood.LensLikelihood.ddt_dd_kde_likelihood",
            "hierarc.Likelihood.LensLikelihood.ddt_gauss_kin_likelihood",
            "hierarc.Likelihood.LensLikelihood.ddt_gauss_likelihood",
            "hierarc.Likelihood.LensLikelihood.ddt_hist_kin_likelihood",
            "hierarc.Likelihood.LensLikelihood.ddt_hist_likelihood",
            "hierarc.Likelihood.LensLikelihood.ddt_lognorm_likelihood",
            "hierarc.Likelihood.LensLikelihood.ds_dds_gauss_likelihood",
            "hierarc.Likelihood.LensLikelihood.kin_likelihood",
            "hierarc.Likelihood.anisotropy_scaling",
            "hierarc.Likelihood.cosmo_interp",
            "hierarc.Likelihood.cosmo_likelihood",
            "hierarc.Likelihood.hierarchy_likelihood",
            "hierarc.Likelihood.lens_sample_likelihood",
            "hierarc.Likelihood.transformed_cosmography",
            "hierarc.Sampling",
            "hierarc.Sampling.ParamManager",
            "hierarc.Sampling.ParamManager.cosmo_param",
            "hierarc.Sampling.ParamManager.kin_param",
            "hierarc.Sampling.ParamManager.lens_param",
            "hierarc.Sampling.ParamManager.param_manager",
            "hierarc.Sampling.mcmc_sampling",
            "hierarc.Util",
            "hierarc.Util.distribution_util",
            "hierarc.Util.ifu_util",
            "hierarc.Util.likelihood_util",
            "test",
            "test.test_Diagnostics",
            "test.test_Diagnostics.test_goodness_of_fit",
            "test.test_LensPosterior",
            "test.test_LensPosterior.test_anisotropy_config",
            "test.test_LensPosterior.test_ddt_kin_constraints",
            "test.test_LensPosterior.test_ddt_kin_gauss_constraints",
            "test.test_LensPosterior.test_kin_constraints",
            "test.test_Likelihood",
            "test.test_Likelihood.test_LensLikelihood",
            "test.test_Likelihood.test_LensLikelihood.test_base_lens_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_ddt_dd_gauss_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_ddt_dd_kde_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_ddt_gauss_kin_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_ddt_gauss_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_ddt_hist_kin_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_ddt_hist_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_ddt_log_norm_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_ds_dds_gauss_likelihood",
            "test.test_Likelihood.test_LensLikelihood.test_kin_likelihood",
            "test.test_Likelihood.test_anisotropy_scaling",
            "test.test_Likelihood.test_cosmo_interp",
            "test.test_Likelihood.test_cosmo_likelihood",
            "test.test_Likelihood.test_hierarchy_likelihood",
            "test.test_Likelihood.test_lens_sample_likelihood",
            "test.test_Likelihood.test_transform_cosmography",
            "test.test_Sampling",
            "test.test_Sampling.test_ParamManager",
            "test.test_Sampling.test_ParamManager.test_cosmo_param",
            "test.test_Sampling.test_ParamManager.test_kin_param",
            "test.test_Sampling.test_ParamManager.test_lens_param",
            "test.test_Sampling.test_ParamManager.test_param_manager",
            "test.test_Sampling.test_mcmc_sampling",
            "test.test_Util",
            "test.test_Util.test_distribution_util",
            "test.test_Util.test_ifu_util",
            "test.test_Util.test_likelihood_util"
        ],
        "version": "1.0.0"
    },
    "hierarchical": {
        "cmdline": [],
        "modules": [
            "hierarchical",
            "hierarchical.HierarchicalDict"
        ],
        "version": "0.0.9"
    },
    "hierarchical-classifier": {
        "cmdline": [],
        "modules": [
            "hierarchical_classifier",
            "hierarchical_classifier.hierarchical_classifier"
        ],
        "version": "2020.5.20a0"
    },
    "hierarchical-memmap-format": {
        "cmdline": [],
        "modules": [
            "HMF",
            "HMF.core",
            "HMF.hmf",
            "HMF.parallel",
            "HMF.utils"
        ],
        "version": "0.0b24"
    },
    "hierarchy": {
        "cmdline": [
            "hierarchy"
        ],
        "modules": [
            "hierarchy",
            "hierarchy.cli",
            "hierarchy.cloner",
            "hierarchy.loader",
            "hierarchy.utils"
        ],
        "version": "0.4.0"
    },
    "hierarchy-utils": {
        "cmdline": [],
        "modules": [
            "hierarchy_utils",
            "hierarchy_utils.main"
        ],
        "version": "0.1.3"
    },
    "hieratic": {
        "cmdline": [],
        "modules": [
            "hieratic",
            "hieratic.collection",
            "hieratic.engine",
            "hieratic.engine.memory",
            "hieratic.exceptions",
            "hieratic.index",
            "hieratic.item",
            "hieratic.service"
        ],
        "version": "0.0.7"
    },
    "hieratic-dynamodb": {
        "cmdline": [],
        "modules": [
            "hieratic_dynamodb",
            "hieratic_dynamodb.context"
        ],
        "version": "0.0.7"
    },
    "hiercc": {
        "cmdline": [],
        "modules": [
            "HierCC",
            "HierCC.HCCeval",
            "HierCC.HierCC",
            "HierCC.getDistance"
        ],
        "version": "1.0"
    },
    "hierdiff": {
        "cmdline": [],
        "modules": [
            "hierdiff",
            "hierdiff.association_testing",
            "hierdiff.hier_plot",
            "hierdiff.tally",
            "hierdiff.templates",
            "hierdiff.tests",
            "hierdiff.tests.data_generator",
            "hierdiff.tests.test_assoc",
            "hierdiff.tests.test_plot",
            "hierdiff.tests.test_tally"
        ],
        "version": "0.7"
    },
    "hiermat": {
        "cmdline": [],
        "modules": [
            "HierMat",
            "HierMat.block_cluster_tree",
            "HierMat.cluster",
            "HierMat.cluster_tree",
            "HierMat.cuboid",
            "HierMat.grid",
            "HierMat.hmat",
            "HierMat.rmat",
            "HierMat.splitable",
            "HierMat.utils",
            "HierMat/examples",
            "HierMat/examples.model_1d"
        ],
        "version": "0.9.2"
    },
    "hiero": {
        "cmdline": [],
        "modules": [
            "hiero",
            "hiero.formatters",
            "hiero.formatters.htmlblock_formatter",
            "hiero.formatters.linebreaks",
            "hiero.formatters.markdown_formatter",
            "hiero.formatters.rst_formatter",
            "hiero.forms",
            "hiero.interfaces",
            "hiero.models",
            "hiero.models.blog",
            "hiero.models.page",
            "hiero.resources",
            "hiero.routes",
            "hiero.schemas",
            "hiero.schemas.blog",
            "hiero.tests",
            "hiero.tests.blog",
            "hiero.tests.blog.test_models",
            "hiero.tests.blog.test_views",
            "hiero.tests.models",
            "hiero.tests.test_interfaces",
            "hiero.tests.wsgi_demo",
            "hiero.views",
            "hiero.views.blog",
            "hiero.views.page"
        ],
        "version": "0.3.4"
    },
    "hieroglyph": {
        "cmdline": [],
        "modules": [
            "hieroglyph",
            "hieroglyph._version",
            "hieroglyph.builder",
            "hieroglyph.directives",
            "hieroglyph.html",
            "hieroglyph.quickstart",
            "hieroglyph.slides",
            "hieroglyph.tests",
            "hieroglyph.tests.test_builder",
            "hieroglyph.tests.test_directives",
            "hieroglyph.tests.test_event_handlers",
            "hieroglyph.tests.test_path_fixing",
            "hieroglyph.tests.test_quickstart",
            "hieroglyph.tests.test_slide_footer",
            "hieroglyph.tests.test_translator",
            "hieroglyph.tests.util",
            "hieroglyph.themes",
            "hieroglyph.writer"
        ],
        "version": "2.1.0"
    },
    "hierogram": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hieropt": {
        "cmdline": [],
        "modules": [
            "hieropt",
            "hieropt.OrderedDict",
            "hieropt.test",
            "hieropt.test.test_hieropt"
        ],
        "version": "0.3"
    },
    "hieroskopia": {
        "cmdline": [],
        "modules": [
            "hieroskopia",
            "hieroskopia.date_analyser",
            "hieroskopia.numeric_analyser",
            "hieroskopia.tests",
            "hieroskopia.tests.test_date_analyser",
            "hieroskopia.tests.test_numeric_analyser",
            "hieroskopia.utils",
            "hieroskopia.utils.evaluator"
        ],
        "version": "0.1.0"
    },
    "hierreg": {
        "cmdline": [],
        "modules": [
            "hierreg"
        ],
        "version": "0.1"
    },
    "hierscale": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "hievpy": {
        "cmdline": [],
        "modules": [
            "hievpy",
            "hievpy.utils"
        ],
        "version": "1.2.0"
    },
    "hifi-se": {
        "cmdline": [
            "HIFI-SE.py"
        ],
        "modules": [
            "HIFI-SE"
        ],
        "version": "1.0.5"
    },
    "hifiberrydsp": {
        "cmdline": [],
        "modules": [
            "hifiberrydsp",
            "hifiberrydsp.alsa",
            "hifiberrydsp.alsa.alsasync",
            "hifiberrydsp.client",
            "hifiberrydsp.client.sigmatcp",
            "hifiberrydsp.datatools",
            "hifiberrydsp.dsptoolkit",
            "hifiberrydsp.filtering",
            "hifiberrydsp.filtering.biquad",
            "hifiberrydsp.filtering.filtermath",
            "hifiberrydsp.filtering.volume",
            "hifiberrydsp.hardware",
            "hifiberrydsp.hardware.adau145x",
            "hifiberrydsp.hardware.spi",
            "hifiberrydsp.lg",
            "hifiberrydsp.lg.soundsync",
            "hifiberrydsp.lg.test_soundsync",
            "hifiberrydsp.measurement",
            "hifiberrydsp.measurement.data",
            "hifiberrydsp.parser",
            "hifiberrydsp.parser.biquad",
            "hifiberrydsp.parser.rew",
            "hifiberrydsp.parser.settings",
            "hifiberrydsp.parser.sigmaparams",
            "hifiberrydsp.parser.xmlprofile",
            "hifiberrydsp.server",
            "hifiberrydsp.server.constants",
            "hifiberrydsp.server.sigmatcp"
        ],
        "version": "0.20"
    },
    "hifipower": {
        "cmdline": [],
        "modules": [
            "hifipower",
            "hifipower.driver",
            "hifipower.main"
        ],
        "version": "0.2"
    },
    "hifive": {
        "cmdline": [
            "fetch_mrh_data",
            "hifive"
        ],
        "modules": [
            "hifive",
            "hifive.commands",
            "hifive.commands.combine_fivec_replicates",
            "hifive.commands.combine_hic_replicates",
            "hifive.commands.complete_fivec_project",
            "hifive.commands.complete_hic_project",
            "hifive.commands.connect_files",
            "hifive.commands.create_fendset",
            "hifive.commands.create_fivec_dataset",
            "hifive.commands.create_fivec_heatmap",
            "hifive.commands.create_fivec_project",
            "hifive.commands.create_fragmentset",
            "hifive.commands.create_hic_dataset",
            "hifive.commands.create_hic_heatmap",
            "hifive.commands.create_hic_mrheatmap",
            "hifive.commands.create_hic_project",
            "hifive.commands.find_quasar_scores",
            "hifive.commands.get_fivec_interval",
            "hifive.commands.get_hic_interval",
            "hifive.commands.normalize_fivec_project",
            "hifive.commands.normalize_hic_project",
            "hifive.fend",
            "hifive.fivec",
            "hifive.fivec_binning",
            "hifive.fivec_data",
            "hifive.fragment",
            "hifive.hic",
            "hifive.hic_binning",
            "hifive.hic_data",
            "hifive.hic_domains",
            "hifive.libraries",
            "hifive.libraries.hmm",
            "hifive.plotting",
            "hifive.quasar",
            "hifive.schic",
            "hifive.version"
        ],
        "version": "1.5.7"
    },
    "hifive-openapi-py": {
        "cmdline": [],
        "modules": [
            "aliyun",
            "aliyun.api",
            "aliyun.api.base",
            "aliyun.api.rest",
            "hifive",
            "hifive.api",
            "hifive.api.base",
            "hifive.api.rest",
            "hifive.api.rest.AreaEnum",
            "hifive.api.rest.EducationEnum",
            "hifive.api.rest.GenderEnum",
            "hifive.api.rest.HFBaseFavoriteRequest",
            "hifive.api.rest.HFBaseHotRequest",
            "hifive.api.rest.HFBaseLoginRequest",
            "hifive.api.rest.HFBaseReportRequest",
            "hifive.api.rest.HFBaseVisualRequest",
            "hifive.api.rest.HFBaseWeatherRequest",
            "hifive.api.rest.HFBitRateEnum",
            "hifive.api.rest.HFChannelRequest",
            "hifive.api.rest.HFChannelSheetRequest",
            "hifive.api.rest.HFHQListenRequest",
            "hifive.api.rest.HFHQListenSliceRequest",
            "hifive.api.rest.HFMusicConfigRequest",
            "hifive.api.rest.HFOrderAuthorizationRequest",
            "hifive.api.rest.HFOrderDetailRequest",
            "hifive.api.rest.HFOrderGroupRequest",
            "hifive.api.rest.HFOrderGroupSheetRequest",
            "hifive.api.rest.HFOrderListenMixedRequest",
            "hifive.api.rest.HFOrderListenRequest",
            "hifive.api.rest.HFOrderListenSliceRequest",
            "hifive.api.rest.HFOrderMusicRequest",
            "hifive.api.rest.HFOrderPublishRequest",
            "hifive.api.rest.HFOrderRefundRequest",
            "hifive.api.rest.HFOrderSearchMusicRequest",
            "hifive.api.rest.HFOrderSheetMusicRequest",
            "hifive.api.rest.HFOrderTagMusicRequest",
            "hifive.api.rest.HFOrderTagRequest",
            "hifive.api.rest.HFOrderTagSheetRequest",
            "hifive.api.rest.HFSearchMusicRequest",
            "hifive.api.rest.HFSheetMusicRequest",
            "hifive.api.rest.HFSheetTagRequest",
            "hifive.api.rest.HFTagSheetRequest",
            "hifive.api.rest.HFTrafficDownloadRequest",
            "hifive.api.rest.HFTrafficGroupRequest",
            "hifive.api.rest.HFTrafficGroupSheetRequest",
            "hifive.api.rest.HFTrafficListenMixedRequest",
            "hifive.api.rest.HFTrafficListenRequest",
            "hifive.api.rest.HFTrafficListenSliceRequest",
            "hifive.api.rest.HFTrafficSearchMusicRequest",
            "hifive.api.rest.HFTrafficSheetMusicRequest",
            "hifive.api.rest.HFTrafficTagMusicRequest",
            "hifive.api.rest.HFTrafficTagRequest",
            "hifive.api.rest.HFTrafficTagSheetRequest",
            "hifive.api.rest.PeriodEnum",
            "hifive.api.rest.SheetTypeEnum"
        ],
        "version": "4.0.1"
    },
    "hifrost": {
        "cmdline": [],
        "modules": [
            "hifrost"
        ],
        "version": "0.0.1"
    },
    "higdon": {
        "cmdline": [],
        "modules": [
            "higdon"
        ],
        "version": "0.1.2"
    },
    "higgs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "higgs-boson": {
        "cmdline": [],
        "modules": [
            "builder.Commands",
            "builder.DependencyBuildManager",
            "builder.Dockerfile",
            "builder.HiggsBuilder",
            "builder.PeruManager",
            "builder.Utils",
            "builder.YamlParser",
            "higgs_boson"
        ],
        "version": "0.1.0"
    },
    "higgsbacktest": {
        "cmdline": [],
        "modules": [
            "higgsbacktesting",
            "higgsbacktesting.AlphaStockBacktesting",
            "higgsbacktesting.CFSingleInstrumentStrategy",
            "higgsbacktesting.CFTimetoTicklabel",
            "higgsbacktesting.GTASingleStockStrategy",
            "higgsbacktesting.GTATimetoTicklabel",
            "higgsbacktesting.SingleInstrumentStrategy"
        ],
        "version": "0.1.0"
    },
    "higgsboom": {
        "cmdline": [],
        "modules": [
            "higgsboom",
            "higgsboom.Exceptions",
            "higgsboom.FactorsGeneration",
            "higgsboom.FactorsGeneration.TickFactorsGenerationManager",
            "higgsboom.FactorsGeneration.TickFactorsGeneratorBase",
            "higgsboom.FactorsUtils",
            "higgsboom.FactorsUtils.TickFactorsRetrieverBase",
            "higgsboom.FuncUtils",
            "higgsboom.FuncUtils.DataBase",
            "higgsboom.FuncUtils.DateTime",
            "higgsboom.FuncUtils.Randomize",
            "higgsboom.Maintainance",
            "higgsboom.Maintainance.DataFileSynchronizer",
            "higgsboom.MarketData",
            "higgsboom.MarketData.AStockUtils",
            "higgsboom.MarketData.AStockUtils.AStockDailyDataUtils",
            "higgsboom.MarketData.AStockUtils.AStockMinuteDataUtils",
            "higgsboom.MarketData.AStockUtils.IndexConstituentUtils",
            "higgsboom.MarketData.AStockUtils.IndustryConstituentUtils",
            "higgsboom.MarketData.CFuturesMarketDataUtils",
            "higgsboom.MarketData.CSecurityMarketDataUtils",
            "higgsboom.MarketData.GTAMarketDataUtils",
            "higgsboom.MarketData.HGSMarketDataUtils"
        ],
        "version": "0.6.0"
    },
    "high": {
        "cmdline": [],
        "modules": [
            "high"
        ],
        "version": "0.1.0"
    },
    "high-entropy-string": {
        "cmdline": [],
        "modules": [
            "high_entropy_string"
        ],
        "version": "0.2.1"
    },
    "high-level-markov-logic-network": {
        "cmdline": [],
        "modules": [
            "database",
            "database.database",
            "fuzzy_markov_logic_network",
            "fuzzy_markov_logic_network.is_a_generator",
            "fuzzy_markov_logic_network.word_net",
            "ground_atom",
            "ground_atom.ground_atom",
            "high_level_markov_logic_network",
            "high_level_markov_logic_network.database",
            "high_level_markov_logic_network.fuzzy_markov_logic_network",
            "high_level_markov_logic_network.fuzzy_markov_logic_network.is_a_generator",
            "high_level_markov_logic_network.fuzzy_markov_logic_network.word_net",
            "high_level_markov_logic_network.ground_atom",
            "high_level_markov_logic_network.markov_logic_network",
            "high_level_markov_logic_network.test",
            "high_level_markov_logic_network.test.database",
            "high_level_markov_logic_network.test.fuzzy_markov_logic_network_test",
            "high_level_markov_logic_network.test.fuzzy_markov_logic_network_test.is_a_generator_test",
            "high_level_markov_logic_network.test.ground_atom",
            "high_level_markov_logic_network.test.ground_atom.ground_atom_test",
            "high_level_markov_logic_network.test.markov_logic_network",
            "high_level_markov_logic_network.test.markov_logic_network.markov_logic_network_test",
            "markov_logic_network",
            "markov_logic_network.markov_logic_network",
            "test",
            "test.database",
            "test.fuzzy_markov_logic_network_test",
            "test.fuzzy_markov_logic_network_test.is_a_generator_test",
            "test.ground_atom",
            "test.ground_atom.ground_atom_test",
            "test.markov_logic_network",
            "test.markov_logic_network.markov_logic_network_test"
        ],
        "version": "1.0.1"
    },
    "high-order-layers": {
        "cmdline": [],
        "modules": [
            "high_order_layers",
            "high_order_layers.FourierLayers",
            "high_order_layers.Functions",
            "high_order_layers.HighOrderConvolution2D",
            "high_order_layers.HighOrderLayer",
            "high_order_layers.PolynomialLayers"
        ],
        "version": "1.1.7"
    },
    "high-templar": {
        "cmdline": [],
        "modules": [
            "high_templar",
            "high_templar.connection",
            "high_templar.hub",
            "high_templar.main",
            "high_templar.room",
            "high_templar.test"
        ],
        "version": "2.5.0"
    },
    "highcompress": {
        "cmdline": [],
        "modules": [
            "highcompress",
            "highcompress.client",
            "highcompress.compressed"
        ],
        "version": "3.2"
    },
    "highdicom": {
        "cmdline": [],
        "modules": [
            "highdicom",
            "highdicom._iods",
            "highdicom._modules",
            "highdicom.base",
            "highdicom.content",
            "highdicom.enum",
            "highdicom.legacy",
            "highdicom.legacy.sop",
            "highdicom.sc",
            "highdicom.sc.enum",
            "highdicom.sc.sop",
            "highdicom.seg",
            "highdicom.seg.content",
            "highdicom.seg.enum",
            "highdicom.seg.sop",
            "highdicom.seg.utils",
            "highdicom.sr",
            "highdicom.sr.coding",
            "highdicom.sr.content",
            "highdicom.sr.enum",
            "highdicom.sr.sop",
            "highdicom.sr.templates",
            "highdicom.sr.utils",
            "highdicom.sr.value_types",
            "highdicom.uid",
            "highdicom.utils",
            "highdicom.version"
        ],
        "version": "0.4.1"
    },
    "higher": {
        "cmdline": [],
        "modules": [
            "higher",
            "higher.optim",
            "higher.patch",
            "higher.utils"
        ],
        "version": "0.2.1"
    },
    "highered": {
        "cmdline": [],
        "modules": [
            "highered"
        ],
        "version": "0.2.1"
    },
    "highfield": {
        "cmdline": [],
        "modules": [
            "highfield",
            "highfield.application",
            "highfield.base_controller",
            "highfield.base_model",
            "highfield.build",
            "highfield.decorators",
            "highfield.defaults",
            "highfield.errors",
            "highfield.helpers",
            "highfield.helpers.encode",
            "highfield.helpers.random",
            "highfield.loading",
            "highfield.naming"
        ],
        "version": "1.0.21"
    },
    "highfive": {
        "cmdline": [],
        "modules": [
            "highfive",
            "highfive.jobs",
            "highfive.master",
            "highfive.worker"
        ],
        "version": "0.2"
    },
    "highfre": {
        "cmdline": [],
        "modules": [
            "highfre",
            "highfre.bitmex_etc",
            "highfre.bitmex_ws",
            "highfre.crawl_data",
            "highfre.filter_data",
            "highfre.main",
            "highfre.model",
            "highfre.okex_ws",
            "highfre.trade_conf",
            "highfre.trader",
            "highfre.wave_trader"
        ],
        "version": "1.0.0"
    },
    "highiq": {
        "cmdline": [],
        "modules": [
            "highiq",
            "highiq.calc",
            "highiq.calc.gpu_methods",
            "highiq.calc.moments",
            "highiq.calc.spectra",
            "highiq.io",
            "highiq.io.arm_data",
            "highiq.testing",
            "highiq.vis",
            "highiq.vis.plots"
        ],
        "version": "1.0.1"
    },
    "highlander": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "highlander-one": {
        "cmdline": [],
        "modules": [
            "highlander",
            "highlander.exceptions",
            "highlander.highlander"
        ],
        "version": "0.2.2"
    },
    "highlight-ranges": {
        "cmdline": [],
        "modules": [
            "highlight_ranges",
            "highlight_ranges.filters",
            "highlight_ranges.styles",
            "highlight_ranges.version"
        ],
        "version": "1.0.0"
    },
    "highlight-text": {
        "cmdline": [],
        "modules": [
            "highlight_text",
            "highlight_text.htext"
        ],
        "version": "0.0.5"
    },
    "highlighter": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "highlightpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "highlights": {
        "cmdline": [],
        "modules": [
            "highlights",
            "highlights.evaluate",
            "highlights.evaluate.rouge",
            "highlights.extractive",
            "highlights.extractive.erank",
            "highlights.extractive.textrank",
            "highlights.extractive.tgraph",
            "highlights.internals",
            "highlights.internals.graph",
            "highlights.internals.helpers",
            "highlights.internals.pagerank"
        ],
        "version": "0.1.1"
    },
    "highlyprobable": {
        "cmdline": [],
        "modules": [
            "highlyprobable",
            "highlyprobable.api",
            "highlyprobable.base",
            "highlyprobable.config",
            "highlyprobable.highlyprobable"
        ],
        "version": "0.0.1.22"
    },
    "highresnet": {
        "cmdline": [],
        "modules": [
            "highresnet",
            "highresnet.cli",
            "highresnet.cli.deepgif",
            "highresnet.cli.download_oasis",
            "highresnet.histogram",
            "highresnet.inference",
            "highresnet.modules",
            "highresnet.modules.convolution",
            "highresnet.modules.dilation",
            "highresnet.modules.highresnet",
            "highresnet.modules.residual",
            "highresnet.preprocessing",
            "highresnet.sampling"
        ],
        "version": "0.10.2"
    },
    "highrise": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "highscalability-examples-zh": {
        "cmdline": [],
        "modules": [
            "HighscalabilityExamplesZh",
            "HighscalabilityExamplesZh.asset",
            "HighscalabilityExamplesZh.docs",
            "HighscalabilityExamplesZh.docs.img"
        ],
        "version": "2020.9.21.0"
    },
    "highteacli": {
        "cmdline": [],
        "modules": [
            "highteacli",
            "highteacli.apiactions",
            "highteacli.app"
        ],
        "version": "0.5"
    },
    "hightime": {
        "cmdline": [],
        "modules": [
            "hightime",
            "hightime._datetime",
            "hightime._timedelta"
        ],
        "version": "0.2.0"
    },
    "highton": {
        "cmdline": [],
        "modules": [
            "highton",
            "highton.call_mixins",
            "highton.call_mixins.call",
            "highton.call_mixins.create_call_mixin",
            "highton.call_mixins.create_note_call_mixin",
            "highton.call_mixins.create_tag_call_mixin",
            "highton.call_mixins.delete_call_mixin",
            "highton.call_mixins.delete_tag_call_mixin",
            "highton.call_mixins.detail_call_mixin",
            "highton.call_mixins.list_call_mixin",
            "highton.call_mixins.list_comment_call_mixin",
            "highton.call_mixins.list_email_call_mixin",
            "highton.call_mixins.list_note_call_mixin",
            "highton.call_mixins.list_tag_call_mixin",
            "highton.call_mixins.list_task_call_mixin",
            "highton.call_mixins.search_call_mixin",
            "highton.call_mixins.update_call_mixin",
            "highton.fields",
            "highton.fields.boolean_field",
            "highton.fields.date_field",
            "highton.fields.datetime_field",
            "highton.fields.field",
            "highton.fields.field_constants",
            "highton.fields.integer_field",
            "highton.fields.list_field",
            "highton.fields.object_field",
            "highton.fields.string_field",
            "highton.highton_constants",
            "highton.highton_settings",
            "highton.models",
            "highton.models.address",
            "highton.models.associated_party",
            "highton.models.attachment",
            "highton.models.case",
            "highton.models.category",
            "highton.models.comment",
            "highton.models.company",
            "highton.models.contact",
            "highton.models.contact_data",
            "highton.models.deal",
            "highton.models.deal_category",
            "highton.models.email",
            "highton.models.email_address",
            "highton.models.group",
            "highton.models.highton_model",
            "highton.models.instant_messenger",
            "highton.models.note",
            "highton.models.party",
            "highton.models.person",
            "highton.models.phone_number",
            "highton.models.status",
            "highton.models.subject_data",
            "highton.models.subject_field",
            "highton.models.tag",
            "highton.models.task",
            "highton.models.task_category",
            "highton.models.twitter_account",
            "highton.models.type_category",
            "highton.models.user",
            "highton.models.web_address",
            "highton.parsing",
            "highton.parsing.xml_decoder",
            "highton.parsing.xml_encoder"
        ],
        "version": "2.3.0"
    },
    "highway-py": {
        "cmdline": [],
        "modules": [
            "highway",
            "highway.close_reasons",
            "highway.converters",
            "highway.data_types",
            "highway.header",
            "highway.log",
            "highway.preparers",
            "highway.routing",
            "highway.utils"
        ],
        "version": "0.2.2"
    },
    "highwayhash-cffi": {
        "cmdline": [],
        "modules": [
            "highwayhash"
        ],
        "version": "0.1.6"
    },
    "higlass-jupyter": {
        "cmdline": [],
        "modules": [
            "higlass_jupyter",
            "higlass_jupyter._version"
        ],
        "version": "0.1.3"
    },
    "higlass-manage": {
        "cmdline": [],
        "modules": [
            "higlass_manage",
            "higlass_manage.browse",
            "higlass_manage.cli",
            "higlass_manage.common",
            "higlass_manage.create",
            "higlass_manage.delete",
            "higlass_manage.ingest",
            "higlass_manage.list",
            "higlass_manage.logs",
            "higlass_manage.shell",
            "higlass_manage.start",
            "higlass_manage.stop",
            "higlass_manage.update_viewconfs",
            "higlass_manage.view"
        ],
        "version": "0.8.0"
    },
    "higlass-python": {
        "cmdline": [],
        "modules": [
            "higlass",
            "higlass._version",
            "higlass.client",
            "higlass.server",
            "higlass.tilesets",
            "higlass.utils",
            "higlass.viewer"
        ],
        "version": "0.4.3"
    },
    "higra": {
        "cmdline": [],
        "modules": [
            "higra",
            "higra.accumulator",
            "higra.accumulator.at_accumulator",
            "higra.accumulator.graph_accumulator",
            "higra.accumulator.tree_accumulator",
            "higra.accumulator.tree_contour_accumulator",
            "higra.algo",
            "higra.algo.alignment",
            "higra.algo.graph_core",
            "higra.algo.graph_weights",
            "higra.algo.horizontal_cuts",
            "higra.algo.rag",
            "higra.algo.tree",
            "higra.algo.tree_energy_optimization",
            "higra.algo.tree_fusion",
            "higra.algo.tree_monotonic_regression",
            "higra.algo.watershed",
            "higra.assessment",
            "higra.assessment.fragmentation_curve",
            "higra.assessment.hierarchical_cost",
            "higra.attribute",
            "higra.attribute.graph_attributes",
            "higra.attribute.tree_attributes",
            "higra.concept",
            "higra.data_cache",
            "higra.hg_utils",
            "higra.hierarchy",
            "higra.hierarchy.binary_partition_tree",
            "higra.hierarchy.component_tree",
            "higra.hierarchy.constrained_connectivity_hierarchy",
            "higra.hierarchy.hierarchy_core",
            "higra.hierarchy.random_hierarchy",
            "higra.hierarchy.watershed_hierarchy",
            "higra.image",
            "higra.image.contour_2d",
            "higra.image.graph_image",
            "higra.image.hierarchy_mean_pb",
            "higra.image.image_utils",
            "higra.image.tree_of_shapes",
            "higra.interop",
            "higra.interop.interop_scipy",
            "higra.io_utils",
            "higra.io_utils.pink_io",
            "higra.io_utils.tree_io",
            "higra.plot",
            "higra.plot.plot_graph",
            "higra.plot.plot_tree",
            "higra.plot.utils",
            "higra.structure",
            "higra.structure.lca_fast",
            "higra.structure.tree_graph"
        ],
        "version": "0.5.3"
    },
    "higrid": {
        "cmdline": [],
        "modules": [
            "higrid",
            "higrid.Microphone",
            "higrid.TreeClusteri",
            "higrid.Treei",
            "higrid.dpd",
            "higrid.emulate",
            "higrid.higridestimate",
            "higrid.shd",
            "higrid.testpos3d",
            "higrid.treeutils",
            "higrid.utils"
        ],
        "version": "0.1.1"
    },
    "hihellobye": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.3"
    },
    "hihimann": {
        "cmdline": [],
        "modules": [
            "hihimann"
        ],
        "version": "1.3.0"
    },
    "hihydebugaa": {
        "cmdline": [],
        "modules": [
            "hihydebugaa"
        ],
        "version": "0.1.1"
    },
    "hihylang": {
        "cmdline": [],
        "modules": [
            "hihylang"
        ],
        "version": "1.0"
    },
    "hiisi": {
        "cmdline": [],
        "modules": [
            "hiisi",
            "hiisi.hiisi",
            "hiisi.odim"
        ],
        "version": "0.0.9"
    },
    "hijack": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hijri-converter": {
        "cmdline": [],
        "modules": [
            "hijri_converter",
            "hijri_converter.convert",
            "hijri_converter.locales",
            "hijri_converter.locales.ar",
            "hijri_converter.locales.en",
            "hijri_converter.ummalqura"
        ],
        "version": "2.1.1"
    },
    "hijricalendar": {
        "cmdline": [],
        "modules": [
            "hijricalendar"
        ],
        "version": "0.0.1"
    },
    "hijriconverter": {
        "cmdline": [],
        "modules": [
            "hijriconverter",
            "hijriconverter.convert",
            "hijriconverter.ummalqura"
        ],
        "version": "1.5.0"
    },
    "hikari": {
        "cmdline": [],
        "modules": [
            "hikari",
            "hikari._about",
            "hikari.api",
            "hikari.api.cache",
            "hikari.api.chunker",
            "hikari.api.entity_factory",
            "hikari.api.event_dispatcher",
            "hikari.api.event_factory",
            "hikari.api.rest",
            "hikari.api.shard",
            "hikari.api.special_endpoints",
            "hikari.api.voice",
            "hikari.applications",
            "hikari.audit_logs",
            "hikari.channels",
            "hikari.cli",
            "hikari.colors",
            "hikari.colours",
            "hikari.config",
            "hikari.embeds",
            "hikari.emojis",
            "hikari.errors",
            "hikari.event_stream",
            "hikari.events",
            "hikari.events.base_events",
            "hikari.events.channel_events",
            "hikari.events.guild_events",
            "hikari.events.lifetime_events",
            "hikari.events.member_events",
            "hikari.events.message_events",
            "hikari.events.reaction_events",
            "hikari.events.role_events",
            "hikari.events.shard_events",
            "hikari.events.typing_events",
            "hikari.events.user_events",
            "hikari.events.voice_events",
            "hikari.files",
            "hikari.guilds",
            "hikari.impl",
            "hikari.impl.bot",
            "hikari.impl.buckets",
            "hikari.impl.entity_factory",
            "hikari.impl.event_factory",
            "hikari.impl.event_manager_base",
            "hikari.impl.rate_limits",
            "hikari.impl.rest",
            "hikari.impl.shard",
            "hikari.impl.special_endpoints",
            "hikari.impl.stateful_cache",
            "hikari.impl.stateful_event_manager",
            "hikari.impl.stateful_guild_chunker",
            "hikari.impl.stateless_cache",
            "hikari.impl.stateless_event_manager",
            "hikari.impl.stateless_guild_chunker",
            "hikari.impl.voice",
            "hikari.intents",
            "hikari.internal",
            "hikari.internal.aio",
            "hikari.internal.attr_extensions",
            "hikari.internal.cache",
            "hikari.internal.collections",
            "hikari.internal.data_binding",
            "hikari.internal.enums",
            "hikari.internal.net",
            "hikari.internal.reflect",
            "hikari.internal.routes",
            "hikari.internal.spel",
            "hikari.internal.time",
            "hikari.internal.ux",
            "hikari.invites",
            "hikari.iterators",
            "hikari.messages",
            "hikari.permissions",
            "hikari.presences",
            "hikari.sessions",
            "hikari.snowflakes",
            "hikari.traits",
            "hikari.undefined",
            "hikari.urls",
            "hikari.users",
            "hikari.voices",
            "hikari.webhooks"
        ],
        "version": "2.0.0.dev92"
    },
    "hikari-lightbulb": {
        "cmdline": [],
        "modules": [
            "lightbulb",
            "lightbulb.checks",
            "lightbulb.command_handler",
            "lightbulb.commands",
            "lightbulb.context",
            "lightbulb.converters",
            "lightbulb.cooldowns",
            "lightbulb.errors",
            "lightbulb.events",
            "lightbulb.help",
            "lightbulb.plugins",
            "lightbulb.stringview",
            "lightbulb.utils",
            "lightbulb.utils.nav",
            "lightbulb.utils.pag",
            "lightbulb.utils.search"
        ],
        "version": "0.0.54"
    },
    "hikecalc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiker": {
        "cmdline": [],
        "modules": [
            "hiker",
            "hiker.hiker"
        ],
        "version": "0.1.2"
    },
    "hikingmap": {
        "cmdline": [],
        "modules": [
            "hikingmap",
            "hikingmap.area",
            "hikingmap.coordinate",
            "hikingmap.hikingmap",
            "hikingmap.page",
            "hikingmap.trackfinder",
            "hikingmap.tracks"
        ],
        "version": "0.0.2"
    },
    "hikjghkjhkj": {
        "cmdline": [],
        "modules": [
            "main",
            "main.primary"
        ],
        "version": "0.0.1"
    },
    "hiko": {
        "cmdline": [],
        "modules": [
            "hiko",
            "hiko.dask",
            "hiko.time",
            "hiko.version"
        ],
        "version": "0.0.6"
    },
    "hiku": {
        "cmdline": [],
        "modules": [
            "hiku",
            "hiku.builder",
            "hiku.compat",
            "hiku.console",
            "hiku.console.ui",
            "hiku.denormalize",
            "hiku.denormalize.base",
            "hiku.denormalize.graphql",
            "hiku.edn",
            "hiku.endpoint",
            "hiku.endpoint.graphql",
            "hiku.engine",
            "hiku.executors",
            "hiku.executors.asyncio",
            "hiku.executors.queue",
            "hiku.executors.sync",
            "hiku.executors.threads",
            "hiku.export",
            "hiku.export.graphql",
            "hiku.export.protobuf",
            "hiku.export.simple",
            "hiku.expr",
            "hiku.expr.checker",
            "hiku.expr.compiler",
            "hiku.expr.core",
            "hiku.expr.nodes",
            "hiku.expr.refs",
            "hiku.graph",
            "hiku.introspection",
            "hiku.introspection.graphql",
            "hiku.protobuf",
            "hiku.protobuf.query_pb2",
            "hiku.query",
            "hiku.readers",
            "hiku.readers.graphql",
            "hiku.readers.protobuf",
            "hiku.readers.simple",
            "hiku.result",
            "hiku.sources",
            "hiku.sources.aiopg",
            "hiku.sources.graph",
            "hiku.sources.sqlalchemy",
            "hiku.telemetry",
            "hiku.telemetry.prometheus",
            "hiku.typedef",
            "hiku.typedef.kinko",
            "hiku.typedef.types",
            "hiku.types",
            "hiku.utils",
            "hiku.validate",
            "hiku.validate.errors",
            "hiku.validate.graph",
            "hiku.validate.query"
        ],
        "version": "0.6.0"
    },
    "hikvision": {
        "cmdline": [],
        "modules": [
            "hikvision",
            "hikvision.api",
            "hikvision.constants",
            "hikvision.error"
        ],
        "version": "2.0.3"
    },
    "hikvision-client": {
        "cmdline": [
            "hikvision-client-gtk",
            "hikvision-client-tk"
        ],
        "modules": [
            "bin",
            "hikvision_client",
            "hikvision_client.config",
            "hikvision_client.config.ConfigParser",
            "hikvision_client.main",
            "hikvision_client.metadata",
            "hikvision_client.resources",
            "hikvision_client.tests",
            "hikvision_client.userinterface",
            "hikvision_client.userinterface.LoginGui",
            "hikvision_client.userinterface.MainGui"
        ],
        "version": "0.5"
    },
    "hikvision-recover": {
        "cmdline": [],
        "modules": [
            "hikvision_recover",
            "hikvision_recover.recover"
        ],
        "version": "1.0.1"
    },
    "hikvisionapi": {
        "cmdline": [],
        "modules": [
            "hikvisionapi",
            "hikvisionapi.hikvisionapi",
            "tests",
            "tests.test_hikvisionapi"
        ],
        "version": "0.2.1"
    },
    "hikyaku": {
        "cmdline": [],
        "modules": [
            "hikyaku",
            "hikyaku.base",
            "hikyaku.channels",
            "hikyaku.channels.email",
            "hikyaku.channels.slack"
        ],
        "version": "0.2.2"
    },
    "hikyuu": {
        "cmdline": [],
        "modules": [
            "hikyuu",
            "hikyuu.config",
            "hikyuu.core",
            "hikyuu.core_doc",
            "hikyuu.data",
            "hikyuu.data.common",
            "hikyuu.data.common_h5",
            "hikyuu.data.common_mysql",
            "hikyuu.data.common_pytdx",
            "hikyuu.data.common_sqlite3",
            "hikyuu.data.hku_config_template",
            "hikyuu.data.mysql_upgrade",
            "hikyuu.data.pytdx_finance_to_sqlite",
            "hikyuu.data.pytdx_to_h5",
            "hikyuu.data.pytdx_to_mysql",
            "hikyuu.data.sqlite_upgrade",
            "hikyuu.data.tdx_to_h5",
            "hikyuu.data.tdx_to_mysql",
            "hikyuu.data.weight_to_mysql",
            "hikyuu.data.weight_to_sqlite",
            "hikyuu.data_driver",
            "hikyuu.data_driver.data_driver",
            "hikyuu.data_driver.jqdata_data_driver",
            "hikyuu.data_driver.pytdx_data_driver",
            "hikyuu.examples",
            "hikyuu.examples.Turtle_SG",
            "hikyuu.examples.examples_init",
            "hikyuu.examples.quick_crtsg",
            "hikyuu.gui",
            "hikyuu.gui.HikyuuTDX",
            "hikyuu.gui.data",
            "hikyuu.gui.data.EscapetimeThread",
            "hikyuu.gui.data.ImportHistoryFinanceTask",
            "hikyuu.gui.data.ImportPytdxTimeToH5Task",
            "hikyuu.gui.data.ImportPytdxToH5Task",
            "hikyuu.gui.data.ImportPytdxTransToH5Task",
            "hikyuu.gui.data.ImportTdxToH5Task",
            "hikyuu.gui.data.ImportWeightToSqliteTask",
            "hikyuu.gui.data.MainWindow",
            "hikyuu.gui.data.UsePytdxImportToH5Thread",
            "hikyuu.gui.data.UseTdxImportToH5Thread",
            "hikyuu.gui.data.tool",
            "hikyuu.gui.importdata",
            "hikyuu.hku_config",
            "hikyuu.importdata",
            "hikyuu.indicator",
            "hikyuu.indicator.indicator",
            "hikyuu.indicator.indicator_doc",
            "hikyuu.indicator.pyind",
            "hikyuu.indicator.talib_wrap",
            "hikyuu.interactive",
            "hikyuu.interactive.drawplot",
            "hikyuu.interactive.drawplot.common",
            "hikyuu.interactive.drawplot.echart_draw",
            "hikyuu.interactive.drawplot.matplotlib_draw",
            "hikyuu.interactive.elder",
            "hikyuu.interactive.interactive",
            "hikyuu.interactive.kaufman",
            "hikyuu.interactive.puppet",
            "hikyuu.interactive.volume",
            "hikyuu.setup",
            "hikyuu.tools",
            "hikyuu.tools.copy_file",
            "hikyuu.tools.delete_index",
            "hikyuu.tools.fenge",
            "hikyuu.tools.h5_data_clear",
            "hikyuu.trade_instance",
            "hikyuu.trade_instance.ama_instance",
            "hikyuu.trade_manage",
            "hikyuu.trade_manage.broker",
            "hikyuu.trade_manage.broker_mail",
            "hikyuu.trade_manage.trade",
            "hikyuu.trade_manage.trade_doc",
            "hikyuu.trade_sys",
            "hikyuu.trade_sys.allocatefunds",
            "hikyuu.trade_sys.condition",
            "hikyuu.trade_sys.environment",
            "hikyuu.trade_sys.moneymanager",
            "hikyuu.trade_sys.portfolio",
            "hikyuu.trade_sys.profitgoal",
            "hikyuu.trade_sys.selector",
            "hikyuu.trade_sys.signal",
            "hikyuu.trade_sys.slippage",
            "hikyuu.trade_sys.stoploss",
            "hikyuu.trade_sys.system",
            "hikyuu.util",
            "hikyuu.util.mylog",
            "hikyuu.util.slice",
            "hikyuu.util.unicode"
        ],
        "version": "1.1.3"
    },
    "hil": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hilal": {
        "cmdline": [],
        "modules": [
            "djamaluddinconv",
            "hilal"
        ],
        "version": "1.0.1"
    },
    "hilale": {
        "cmdline": [],
        "modules": [
            "hilale",
            "hilale.hilale"
        ],
        "version": "0.1.2"
    },
    "hilbert": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hilbert-curve": {
        "cmdline": [],
        "modules": [
            "hilbert",
            "hilbert.algebra",
            "hilbert.curves",
            "hilbert.curves.base",
            "hilbert.curves.lib",
            "hilbert.curves.vectors",
            "hilbert.operators",
            "hilbert.quantum",
            "hilbert.spaces",
            "hilbert.stock",
            "tests",
            "tests.test_algebra",
            "tests.test_curves",
            "tests.test_spaces",
            "tests.test_stock"
        ],
        "version": "1.0.dev4"
    },
    "hilbertcurve": {
        "cmdline": [],
        "modules": [
            "hilbertcurve",
            "hilbertcurve.hilbertcurve"
        ],
        "version": "1.0.3"
    },
    "hilde": {
        "cmdline": [],
        "modules": [
            "hilde",
            "hilde._defaults",
            "hilde.fireworks",
            "hilde.fireworks.combined_launcher",
            "hilde.fireworks.launchpad",
            "hilde.fireworks.qlaunch_remote",
            "hilde.fireworks.queue_launcher",
            "hilde.fireworks.rocket_launcher",
            "hilde.fireworks.scripts",
            "hilde.fireworks.scripts.claunch_run",
            "hilde.fireworks.scripts.qlaunch_run",
            "hilde.fireworks.scripts.rlaunch_run",
            "hilde.fireworks.workflows",
            "hilde.fireworks.workflows.phonon_wf",
            "hilde.fireworks.workflows.workflow_generator",
            "hilde.harmonic_analysis",
            "hilde.harmonic_analysis.displacements",
            "hilde.harmonic_analysis.dynamical_matrix",
            "hilde.harmonic_analysis.force_constants",
            "hilde.harmonic_analysis.mode_projection",
            "hilde.harmonic_analysis.normal_modes",
            "hilde.harmonic_analysis.spectral_energy_density",
            "hilde.helpers",
            "hilde.helpers.attribute_dict",
            "hilde.helpers.brillouinzone",
            "hilde.helpers.cell",
            "hilde.helpers.compression",
            "hilde.helpers.converters",
            "hilde.helpers.fileformats",
            "hilde.helpers.geometry",
            "hilde.helpers.hash",
            "hilde.helpers.k_grid",
            "hilde.helpers.lattice",
            "hilde.helpers.lattice_points",
            "hilde.helpers.notifications",
            "hilde.helpers.numerics",
            "hilde.helpers.paths",
            "hilde.helpers.pickle",
            "hilde.helpers.plotting",
            "hilde.helpers.restarts",
            "hilde.helpers.sobol",
            "hilde.helpers.sobol.directions",
            "hilde.helpers.sobol.sobol",
            "hilde.helpers.socketio",
            "hilde.helpers.structure",
            "hilde.helpers.supercell",
            "hilde.helpers.supercell.setup",
            "hilde.helpers.utils",
            "hilde.helpers.warnings",
            "hilde.helpers.watchdogs",
            "hilde.io",
            "hilde.k_grid",
            "hilde.k_grid.converge_kgrid",
            "hilde.k_grid.kpointoptimizer",
            "hilde.konstanten",
            "hilde.konstanten.atomic_masses",
            "hilde.konstanten.einheiten",
            "hilde.konstanten.io",
            "hilde.konstanten.maths",
            "hilde.konstanten.numerics",
            "hilde.konstanten.symmetry",
            "hilde.materials_fp",
            "hilde.materials_fp.material_fingerprint",
            "hilde.molecular_dynamics",
            "hilde.molecular_dynamics.initialization",
            "hilde.molecular_dynamics.utils",
            "hilde.molecular_dynamics.workflow",
            "hilde.phono3py",
            "hilde.phono3py._defaults",
            "hilde.phono3py.postprocess",
            "hilde.phono3py.postprocess_bak",
            "hilde.phono3py.workflow",
            "hilde.phono3py.wrapper",
            "hilde.phonon_db",
            "hilde.phonon_db.ase_converters",
            "hilde.phonon_db.database_interface",
            "hilde.phonon_db.phonon_db",
            "hilde.phonon_db.phonon_jsondb",
            "hilde.phonon_db.phonon_postgresqldb",
            "hilde.phonon_db.phonon_sqlitedb",
            "hilde.phonon_db.row",
            "hilde.phonopy",
            "hilde.phonopy._defaults",
            "hilde.phonopy.postprocess",
            "hilde.phonopy.utils",
            "hilde.phonopy.workflow",
            "hilde.phonopy.wrapper",
            "hilde.relaxation",
            "hilde.relaxation.bfgs",
            "hilde.scripts",
            "hilde.scripts.add_fireworks_phonon_workflow",
            "hilde.scripts.add_fireworks_workflow",
            "hilde.scripts.add_trajectory_to_database",
            "hilde.scripts.create_samples",
            "hilde.scripts.create_trajectory",
            "hilde.scripts.geometry_info",
            "hilde.scripts.get_relaxation_info",
            "hilde.scripts.hilde_phonopy",
            "hilde.scripts.hilde_run",
            "hilde.scripts.hilde_single_task",
            "hilde.scripts.make_supercell",
            "hilde.scripts.md_sum",
            "hilde.scripts.nomad_upload",
            "hilde.scripts.refine_geometry",
            "hilde.scripts.rewrite_geometry",
            "hilde.scripts.suggest_k_grid",
            "hilde.scripts.trajectory2tdep",
            "hilde.scripts.trajectory2xyz",
            "hilde.scripts.update_md_trajectory",
            "hilde.scripts.yaml2json",
            "hilde.settings",
            "hilde.son",
            "hilde.spglib",
            "hilde.spglib.q_mesh",
            "hilde.spglib.wrapper",
            "hilde.structure",
            "hilde.structure.convert",
            "hilde.structure.io",
            "hilde.structure.misc",
            "hilde.tasks",
            "hilde.tasks.calculate",
            "hilde.tasks.fireworks",
            "hilde.tasks.fireworks.calculate_wrapper",
            "hilde.tasks.fireworks.fw_out",
            "hilde.tasks.fireworks.fw_out.calculate",
            "hilde.tasks.fireworks.fw_out.general",
            "hilde.tasks.fireworks.fw_out.optimizations",
            "hilde.tasks.fireworks.fw_out.phonons",
            "hilde.tasks.fireworks.fw_out.relax",
            "hilde.tasks.fireworks.general_py_task",
            "hilde.tasks.fireworks.phonopy_phono3py_functions",
            "hilde.tasks.fireworks.utility_tasks",
            "hilde.tdep",
            "hilde.tdep.wrapper",
            "hilde.templates",
            "hilde.templates.aims",
            "hilde.templates.lammps",
            "hilde.templates.lammps.setup",
            "hilde.trajectory"
        ],
        "version": "0.2.0"
    },
    "hilearn": {
        "cmdline": [],
        "modules": [
            "hilearn",
            "hilearn.base",
            "hilearn.cross_validation",
            "hilearn.mixture_model",
            "hilearn.mixture_model.mix_linear_regression",
            "hilearn.plot",
            "hilearn.plot.base_plot",
            "hilearn.plot.box_plot",
            "hilearn.plot.curve_plot",
            "hilearn.plot.dot_plot",
            "hilearn.plot.seaborn_plot",
            "hilearn.stats",
            "hilearn.stats.base_stats",
            "hilearn.version"
        ],
        "version": "0.1.1"
    },
    "hilite-syntax": {
        "cmdline": [
            "hilite_syntax"
        ],
        "modules": [
            "hilite_syntax",
            "hilite_syntax.converter",
            "hilite_syntax.inline",
            "hilite_syntax.lark",
            "hilite_syntax.node",
            "hilite_syntax.vim"
        ],
        "version": "0.0.4"
    },
    "hillmaker": {
        "cmdline": [],
        "modules": [
            "hillmaker",
            "hillmaker.bydatetime",
            "hillmaker.hills",
            "hillmaker.hmlib",
            "hillmaker.summarize"
        ],
        "version": "0.2.3"
    },
    "hilltop-py": {
        "cmdline": [],
        "modules": [
            "hilltoppy",
            "hilltoppy.com",
            "hilltoppy.hilltop",
            "hilltoppy.tests",
            "hilltoppy.tests.test_web_service",
            "hilltoppy.util",
            "hilltoppy.web_service"
        ],
        "version": "1.3.2"
    },
    "hillup": {
        "cmdline": [
            "hillup-seed.py"
        ],
        "modules": [
            "Hillup",
            "Hillup.data",
            "Hillup.data.NED100m",
            "Hillup.data.NED10m",
            "Hillup.data.NED1km",
            "Hillup.data.SRTM1",
            "Hillup.data.SRTM3",
            "Hillup.data.VFP",
            "Hillup.data.Worldwide",
            "Hillup.tiles"
        ],
        "version": "0.8.1"
    },
    "hilster-support": {
        "cmdline": [],
        "modules": [
            "hilster_support"
        ],
        "version": "0.0.1"
    },
    "himalaya": {
        "cmdline": [],
        "modules": [
            "himalaya"
        ],
        "version": "0.1"
    },
    "himawari8": {
        "cmdline": [],
        "modules": [
            "himawari8",
            "himawari8.himawari8"
        ],
        "version": "0.8"
    },
    "himawaripy": {
        "cmdline": [],
        "modules": [],
        "version": "2.1.0"
    },
    "hime": {
        "cmdline": [],
        "modules": [
            "hime"
        ],
        "version": "0.0.0"
    },
    "hime-redist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "himl": {
        "cmdline": [],
        "modules": [
            "himl",
            "himl.config_generator",
            "himl.inject_secrets",
            "himl.interpolation",
            "himl.main",
            "himl.python_compat",
            "himl.remote_state",
            "himl.secret_resolvers",
            "himl.simples3",
            "himl.simplessm",
            "himl.simplevault"
        ],
        "version": "0.5.6"
    },
    "himoon": {
        "cmdline": [],
        "modules": [
            "hiMoon",
            "hiMoon.config",
            "hiMoon.gene",
            "hiMoon.haplotype",
            "hiMoon.himoon",
            "hiMoon.subject",
            "hiMoon.template",
            "hiMoon.tests",
            "hiMoon.tests.haplotype_test",
            "hiMoon.tests.hiMoon_test",
            "hiMoon.vcf"
        ],
        "version": "0.11"
    },
    "hinagiku": {
        "cmdline": [
            "hinagiku"
        ],
        "modules": [
            "hinagiku",
            "hinagiku.core"
        ],
        "version": "0.0.0"
    },
    "hindemith": {
        "cmdline": [],
        "modules": [
            "dev-examples",
            "dev-examples.optical_flow",
            "dev-examples.optical_flow.hs_cg",
            "dev-examples.optical_flow.hs_cg_numpy",
            "dev-examples.optical_flow.hs_jacobi",
            "dev-examples.optical_flow.hs_jacobi_multi",
            "dev-examples.optical_flow.hs_jacobi_numpy",
            "dev-examples.optical_flow.hs_jacobi_single",
            "dev-examples.optical_flow.hs_jacobi_webcam",
            "dev-examples.optical_flow.ik",
            "dev-examples.optical_flow.png_to_raw",
            "dev-examples.optical_flow.r5demo_capture",
            "dev-examples.optical_flow.r5demo_webcam",
            "dev-examples.optical_flow.riscv-demo",
            "dev-examples.optical_flow.riscv-demo.create_moving_bar",
            "dev-examples.optical_flow.riscv-demo.webcam_file",
            "dev-examples.optical_flow.sequence",
            "dev-examples.optical_flow.show_raw_images",
            "dev-examples.optical_flow.solver",
            "dev-examples.optical_flow.tvl1",
            "dev-examples.optical_flow.webcam",
            "dev-examples.py_tvl1",
            "dev-examples.tvl1",
            "examples-copy",
            "examples-copy.optical_flow",
            "examples-copy.optical_flow.hs_jacobi",
            "examples-copy.optical_flow.hs_jacobi_multi",
            "examples-copy.optical_flow.hs_jacobi_numpy",
            "examples-copy.optical_flow.hs_jacobi_single",
            "examples-copy.optical_flow.hs_jacobi_webcam",
            "examples-copy.optical_flow.ik",
            "examples-copy.optical_flow.png_to_raw",
            "examples-copy.optical_flow.r5demo_capture",
            "examples-copy.optical_flow.r5demo_webcam",
            "examples-copy.optical_flow.riscv-demo",
            "examples-copy.optical_flow.riscv-demo.create_moving_bar",
            "examples-copy.optical_flow.riscv-demo.webcam_file",
            "examples-copy.optical_flow.sequence",
            "examples-copy.optical_flow.show_raw_images",
            "examples-copy.optical_flow.solver",
            "examples-copy.optical_flow.tvl1",
            "examples-copy.optical_flow.webcam",
            "examples-riscv",
            "examples-riscv.optical_flow",
            "examples-riscv.optical_flow.hs_jacobi",
            "examples-riscv.optical_flow.hs_jacobi_c",
            "examples-riscv.optical_flow.hs_jacobi_multi",
            "examples-riscv.optical_flow.hs_jacobi_numpy",
            "examples-riscv.optical_flow.hs_jacobi_single",
            "examples-riscv.optical_flow.hs_jacobi_webcam",
            "examples-riscv.optical_flow.ik",
            "examples-riscv.optical_flow.png_to_raw",
            "examples-riscv.optical_flow.r5demo_capture",
            "examples-riscv.optical_flow.r5demo_display",
            "examples-riscv.optical_flow.r5demo_webcam",
            "examples-riscv.optical_flow.r5solver",
            "examples-riscv.optical_flow.riscv-demo",
            "examples-riscv.optical_flow.riscv-demo.create_moving_bar",
            "examples-riscv.optical_flow.riscv-demo.webcam_file",
            "examples-riscv.optical_flow.sequence",
            "examples-riscv.optical_flow.show_raw_images",
            "examples-riscv.optical_flow.solver",
            "examples-riscv.optical_flow.tvl1",
            "examples-riscv.optical_flow.webcam",
            "examples-riscv.tvl1",
            "hindemith",
            "hindemith.meta",
            "hindemith.meta.basic_blocks",
            "hindemith.meta.core",
            "hindemith.meta.liveness_analysis",
            "hindemith.meta.merge",
            "hindemith.meta.util",
            "hindemith.nodes",
            "hindemith.operations",
            "hindemith.operations.common",
            "hindemith.operations.gemm",
            "hindemith.operations.interp",
            "hindemith.operations.map",
            "hindemith.operations.reduce",
            "hindemith.operations.transform",
            "hindemith.operations.zip_with",
            "hindemith.types",
            "hindemith.types.hmarray",
            "hindemith.utils",
            "optical_flow",
            "optical_flow.hs_jacobi",
            "optical_flow.solver",
            "tests",
            "tests.test_meta",
            "tests.test_meta.array_add",
            "tests.test_meta.kernels",
            "tests.test_meta.simple_stencil",
            "tests.test_meta.test_basic_blocks",
            "tests.test_meta.test_core",
            "tests.test_meta.test_liveness_analysis",
            "tests.test_meta.test_util",
            "tests.test_operations",
            "tests.test_operations.base_test",
            "tests.test_operations.test_gemm",
            "tests.test_operations.test_interp",
            "tests.test_operations.test_map",
            "tests.test_operations.test_reduce",
            "tests.test_operations.test_sqrt",
            "tests.test_operations.test_square",
            "tests.test_operations.test_zip_with",
            "tests.test_types",
            "tests.test_types.test_array",
            "tests.test_types.test_c_array"
        ],
        "version": "0.1.1"
    },
    "hindikosh": {
        "cmdline": [],
        "modules": [
            "hindikosh",
            "hindikosh.HindiTokenizer",
            "hindikosh.reader"
        ],
        "version": "0.0.1"
    },
    "hindinlp": {
        "cmdline": [],
        "modules": [
            "HindiNLP",
            "HindiNLP.AutoClassifier",
            "HindiNLP.HindiNer",
            "HindiNLP.google_drive"
        ],
        "version": "0.2"
    },
    "hindsight": {
        "cmdline": [],
        "modules": [
            "hindsight",
            "hindsight.behave",
            "hindsight.cli"
        ],
        "version": "0.1.7"
    },
    "hinetpy": {
        "cmdline": [],
        "modules": [
            "HinetPy",
            "HinetPy._version",
            "HinetPy.client",
            "HinetPy.header",
            "HinetPy.utils",
            "HinetPy.win32"
        ],
        "version": "0.6.7"
    },
    "hinhello": {
        "cmdline": [],
        "modules": [
            "hinhello",
            "hinhello.api",
            "hinhello.chs"
        ],
        "version": "0.2"
    },
    "hinkaponka": {
        "cmdline": [],
        "modules": [
            "hinkaponka",
            "hinkaponka.helloworld"
        ],
        "version": "0.1"
    },
    "hinoki": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hinomaru": {
        "cmdline": [],
        "modules": [
            "hinomaru",
            "hinomaru.tree"
        ],
        "version": "0.0.1.dev0"
    },
    "hinpy": {
        "cmdline": [],
        "modules": [
            "hinpy",
            "hinpy.classes",
            "hinpy.classes.hin_class",
            "hinpy.classes.hin_functions",
            "hinpy.classes.hin_graphics",
            "hinpy.classes.link_group_class",
            "hinpy.classes.link_group_functions",
            "hinpy.classes.object_group_class",
            "hinpy.datasets",
            "hinpy.datasets.generators",
            "hinpy.diversity",
            "hinpy.diversity.classic_measures",
            "hinpy.diversity.diversities_measures",
            "hinpy.diversity.other_measures",
            "hinpy.diversity.truediversity",
            "hinpy.diversity.utils",
            "hinpy.general",
            "hinpy.generators",
            "hinpy.generators.random_graphs",
            "hinpy.rs",
            "hinpy.rs.content_based",
            "hinpy.rs.hin_rs",
            "hinpy.rs.implicit_utility",
            "hinpy.rs.pure_popularity",
            "hinpy.rs.random_rs",
            "hinpy.rs.surprise_based"
        ],
        "version": "0.1.10"
    },
    "hint": {
        "cmdline": [],
        "modules": [
            "hint",
            "hint.cli",
            "hint.detector",
            "hint.detector.error",
            "hint.detector.exxx",
            "hint.hint",
            "hint.parsing",
            "hint.utils"
        ],
        "version": "1.0.4"
    },
    "hint-cli": {
        "cmdline": [],
        "modules": [
            "hint_cli",
            "hint_cli.config",
            "hint_cli.format",
            "hint_cli.hint",
            "hint_cli.repo",
            "markdown",
            "markdown.parser"
        ],
        "version": "0.6.0"
    },
    "hint-package": {
        "cmdline": [
            "hint"
        ],
        "modules": [
            "HiNT",
            "HiNT.ArgsValidator",
            "HiNT.BPsummarization",
            "HiNT.DoRegressionAllchroms",
            "HiNT.HiCprocessingPip",
            "HiNT.coolToMatrix",
            "HiNT.corelib",
            "HiNT.diff",
            "HiNT.doBICseq",
            "HiNT.getBPfromChimericReads",
            "HiNT.getGenomeRowSumsFromCool",
            "HiNT.getGenomeRowSumsFromHiC",
            "HiNT.getRankProduct",
            "HiNT.getRoughBreakpoints",
            "HiNT.hicToMatrix",
            "HiNT.prepare_regression",
            "HiNT.read_hic_header",
            "HiNT.runhint",
            "HiNT.straw"
        ],
        "version": "2.2.8"
    },
    "hinterlist": {
        "cmdline": [],
        "modules": [
            "hinterlist",
            "hinterlist.check",
            "hinterlist.detox"
        ],
        "version": "0.0.2"
    },
    "hinux": {
        "cmdline": [],
        "modules": [
            "Hinux",
            "Hinux.client",
            "Hinux.client.base",
            "Hinux.client.manager",
            "Hinux.connection",
            "Hinux.connection.gateway",
            "Hinux.connection.http",
            "Hinux.errors",
            "Hinux.flags",
            "Hinux.objects",
            "Hinux.objects.auditlog",
            "Hinux.objects.channel",
            "Hinux.objects.emoji",
            "Hinux.objects.guild",
            "Hinux.objects.integration",
            "Hinux.objects.invite",
            "Hinux.objects.message",
            "Hinux.objects.user",
            "Hinux.objects.webhook",
            "Hinux.voice"
        ],
        "version": "0.4.3"
    },
    "hinux-asleep-cult": {
        "cmdline": [],
        "modules": [
            "Hinux-asleep-cult",
            "Hinux-asleep-cult.api",
            "Hinux-asleep-cult.cache_manager",
            "Hinux-asleep-cult.client",
            "Hinux-asleep-cult.events",
            "Hinux-asleep-cult.gateway",
            "Hinux-asleep-cult.objects"
        ],
        "version": "0.0.2"
    },
    "hinzkunz": {
        "cmdline": [],
        "modules": [
            "hinzkunz"
        ],
        "version": "0.0.1"
    },
    "hio": {
        "cmdline": [],
        "modules": [
            "hio",
            "hio.base",
            "hio.base.basing",
            "hio.base.cycling",
            "hio.cli",
            "hio.core",
            "hio.core.coring",
            "hio.core.tcp",
            "hio.core.tcp.clienting",
            "hio.core.tcp.serving",
            "hio.core.tcp.tcping",
            "hio.core.udp",
            "hio.core.udp.udping",
            "hio.core.wiring",
            "hio.daemon",
            "hio.help",
            "hio.help.helping",
            "hio.help.timing",
            "hio.hioing"
        ],
        "version": "0.0.3"
    },
    "hiorco": {
        "cmdline": [],
        "modules": [
            "hiorco",
            "hiorco.cli",
            "hiorco.method"
        ],
        "version": "1.0.0"
    },
    "hip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hip-data-tools": {
        "cmdline": [],
        "modules": [
            "hip_data_tools",
            "hip_data_tools.apache",
            "hip_data_tools.apache.cassandra",
            "hip_data_tools.apache.kafka",
            "hip_data_tools.aws",
            "hip_data_tools.aws.athena",
            "hip_data_tools.aws.common",
            "hip_data_tools.aws.s3",
            "hip_data_tools.common",
            "hip_data_tools.etl",
            "hip_data_tools.etl.adwords_to_athena",
            "hip_data_tools.etl.adwords_to_s3",
            "hip_data_tools.etl.athena_to_adwords",
            "hip_data_tools.etl.athena_to_athena",
            "hip_data_tools.etl.athena_to_cassandra",
            "hip_data_tools.etl.athena_to_dataframe",
            "hip_data_tools.etl.athena_to_s3",
            "hip_data_tools.etl.common",
            "hip_data_tools.etl.google_sheet_to_athena",
            "hip_data_tools.etl.google_sheet_to_s3",
            "hip_data_tools.etl.s3",
            "hip_data_tools.etl.s3_to_cassandra",
            "hip_data_tools.etl.s3_to_dataframe",
            "hip_data_tools.etl.s3_to_s3",
            "hip_data_tools.google",
            "hip_data_tools.google.adwords",
            "hip_data_tools.google.common",
            "hip_data_tools.google.sheets",
            "hip_data_tools.hipages",
            "hip_data_tools.hipages.version_tracking"
        ],
        "version": "1.52.1"
    },
    "hip2slack-emoji": {
        "cmdline": [],
        "modules": [
            "hip2slack_emoji",
            "hip2slack_emoji.problem"
        ],
        "version": "0.2.2"
    },
    "hipachectl": {
        "cmdline": [],
        "modules": [
            "hipachectl",
            "hipachectl.api",
            "hipachectl.main",
            "hipachectl.utils",
            "hipachectl.version"
        ],
        "version": "0.3.0"
    },
    "hipack": {
        "cmdline": [],
        "modules": [],
        "version": "13"
    },
    "hipay-python-sdk": {
        "cmdline": [],
        "modules": [
            "hipay_python_sdk",
            "hipay_python_sdk.HiPayCreditService",
            "hipay_python_sdk.HiPayMBService",
            "hipay_python_sdk.HiPayPayshopService"
        ],
        "version": "1.2.6"
    },
    "hipcat": {
        "cmdline": [],
        "modules": [
            "hipcat",
            "hipcat.cli"
        ],
        "version": "0.1.0"
    },
    "hipchat": {
        "cmdline": [],
        "modules": [
            "hipchat",
            "hipchat.commands",
            "hipchat.config",
            "hipchat.connection",
            "hipchat.room",
            "hipchat.user"
        ],
        "version": "0.0.1"
    },
    "hipchat-api": {
        "cmdline": [],
        "modules": [
            "hipchat",
            "hipchat.api",
            "hipchat.data",
            "hipchat.messages",
            "hipchat.rooms",
            "hipchat.users"
        ],
        "version": "0.0.2"
    },
    "hipchat-notif": {
        "cmdline": [],
        "modules": [
            "hipchat_notif",
            "hipchat_notif.error",
            "hipchat_notif.hipchat_notif"
        ],
        "version": "0.2.3"
    },
    "hipchat-notifications": {
        "cmdline": [],
        "modules": [
            "hipchat",
            "hipchat.compat",
            "hipchat.exceptions",
            "hipchat.logger",
            "hipchat.notifications",
            "hipchat.tests"
        ],
        "version": "0.4.1"
    },
    "hipchatpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.17"
    },
    "hipchav": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "hipdf": {
        "cmdline": [],
        "modules": [
            "hipdf",
            "hipdf.__version__",
            "hipdf.core",
            "hipdf.main"
        ],
        "version": "0.1.0"
    },
    "hipe4ml": {
        "cmdline": [],
        "modules": [
            "hipe4ml",
            "hipe4ml.analysis_utils",
            "hipe4ml.model_handler",
            "hipe4ml.plot_utils",
            "hipe4ml.tree_handler"
        ],
        "version": "0.0.8"
    },
    "hiphip": {
        "cmdline": [],
        "modules": [
            "hiphip",
            "hiphip.http",
            "hiphip.http.client",
            "hiphip.http.response"
        ],
        "version": "1.0.0a6"
    },
    "hiphive": {
        "cmdline": [],
        "modules": [
            "hiphive",
            "hiphive.calculators",
            "hiphive.calculators.ase_calculator",
            "hiphive.calculators.numba_calc",
            "hiphive.cluster_space",
            "hiphive.config",
            "hiphive.core",
            "hiphive.core.atoms",
            "hiphive.core.cluster_space_builder",
            "hiphive.core.clusters",
            "hiphive.core.config",
            "hiphive.core.debug",
            "hiphive.core.eigentensors",
            "hiphive.core.orbits",
            "hiphive.core.rotational_constraints",
            "hiphive.core.structure_alignment",
            "hiphive.core.structures",
            "hiphive.core.tensors",
            "hiphive.core.translational_constraints",
            "hiphive.core.utilities",
            "hiphive.cutoffs",
            "hiphive.fitting",
            "hiphive.fitting.base_optimizer",
            "hiphive.fitting.cross_validation",
            "hiphive.fitting.ensemble_optimizer",
            "hiphive.fitting.fit_methods",
            "hiphive.fitting.model_selection",
            "hiphive.fitting.oi",
            "hiphive.fitting.optimizer",
            "hiphive.fitting.split_bregman",
            "hiphive.fitting.tools",
            "hiphive.force_constant_model",
            "hiphive.force_constant_potential",
            "hiphive.force_constants",
            "hiphive.input_output",
            "hiphive.input_output.gpumd",
            "hiphive.input_output.logging_tools",
            "hiphive.input_output.phonopy",
            "hiphive.input_output.pretty_table_prints",
            "hiphive.input_output.read_write_files",
            "hiphive.input_output.shengBTE",
            "hiphive.md_tools",
            "hiphive.md_tools.spectral_energy_density",
            "hiphive.self_consistent_phonons",
            "hiphive.self_consistent_phonons.self_consistent_harmonic_model",
            "hiphive.structure_container",
            "hiphive.structure_generation",
            "hiphive.structure_generation.phonon",
            "hiphive.structure_generation.rattle",
            "hiphive.utilities"
        ],
        "version": "0.7.1"
    },
    "hiphopscrap": {
        "cmdline": [],
        "modules": [
            "msvdd_bloc",
            "msvdd_bloc.about",
            "msvdd_bloc.fileio",
            "msvdd_bloc.job_postings",
            "msvdd_bloc.job_postings.fetch",
            "msvdd_bloc.job_postings.munge",
            "msvdd_bloc.regexes",
            "msvdd_bloc.resumes",
            "msvdd_bloc.resumes.augment_utils",
            "msvdd_bloc.resumes.basics",
            "msvdd_bloc.resumes.basics.augment",
            "msvdd_bloc.resumes.basics.constants",
            "msvdd_bloc.resumes.basics.generate",
            "msvdd_bloc.resumes.basics.parse",
            "msvdd_bloc.resumes.constants",
            "msvdd_bloc.resumes.education",
            "msvdd_bloc.resumes.education.augment",
            "msvdd_bloc.resumes.education.constants",
            "msvdd_bloc.resumes.education.generate",
            "msvdd_bloc.resumes.education.parse",
            "msvdd_bloc.resumes.extract",
            "msvdd_bloc.resumes.generate_utils",
            "msvdd_bloc.resumes.munge",
            "msvdd_bloc.resumes.parse",
            "msvdd_bloc.resumes.parse_utils",
            "msvdd_bloc.resumes.segment",
            "msvdd_bloc.resumes.skills",
            "msvdd_bloc.resumes.skills.augment",
            "msvdd_bloc.resumes.skills.constants",
            "msvdd_bloc.resumes.skills.generate",
            "msvdd_bloc.resumes.skills.parse",
            "msvdd_bloc.resumes.work",
            "msvdd_bloc.resumes.work.augment",
            "msvdd_bloc.resumes.work.constants",
            "msvdd_bloc.resumes.work.generate",
            "msvdd_bloc.resumes.work.parse",
            "msvdd_bloc.schemas",
            "msvdd_bloc.tokenize",
            "msvdd_bloc.utils"
        ],
        "version": "0.1.1"
    },
    "hipims": {
        "cmdline": [],
        "modules": [
            "pypims",
            "pypims.IO",
            "pypims.IO.Boundary",
            "pypims.IO.InputHipims",
            "pypims.IO.Landcover",
            "pypims.IO.OutputHipims",
            "pypims.IO.Rainfall",
            "pypims.IO.Raster",
            "pypims.IO.Summary",
            "pypims.IO.demo_functions",
            "pypims.IO.grid_show",
            "pypims.IO.indep_functions",
            "pypims.IO.rainfall_processing",
            "pypims.IO.spatial_analysis",
            "pypims.version"
        ],
        "version": "0.0.3.5"
    },
    "hipims-engine": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hipims-io": {
        "cmdline": [],
        "modules": [
            "hipims_io",
            "hipims_io.Boundary",
            "hipims_io.InputHipims",
            "hipims_io.Landcover",
            "hipims_io.OutputHipims",
            "hipims_io.Rainfall",
            "hipims_io.Raster",
            "hipims_io.Summary",
            "hipims_io.demo_functions",
            "hipims_io.grid_show",
            "hipims_io.indep_functions",
            "hipims_io.rainfall_processing",
            "hipims_io.spatial_analysis"
        ],
        "version": "0.4.9"
    },
    "hipku": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiplogging": {
        "cmdline": [],
        "modules": [
            "hiplogging"
        ],
        "version": "2.0.0"
    },
    "hiplot": {
        "cmdline": [
            "hiplot",
            "hiplot-render"
        ],
        "modules": [
            "hiplot",
            "hiplot.experiment",
            "hiplot.fetchers",
            "hiplot.fetchers_demo",
            "hiplot.ipython",
            "hiplot.pkginfo",
            "hiplot.render",
            "hiplot.server",
            "hiplot.test_experiment",
            "hiplot.test_fetchers",
            "hiplot.test_render"
        ],
        "version": "0.1.19"
    },
    "hiplot-master": {
        "cmdline": [
            "hiplot",
            "hiplot-render"
        ],
        "modules": [
            "hiplot",
            "hiplot.experiment",
            "hiplot.fetchers",
            "hiplot.fetchers_demo",
            "hiplot.ipython",
            "hiplot.pkginfo",
            "hiplot.render",
            "hiplot.server",
            "hiplot.test_experiment",
            "hiplot.test_fetchers",
            "hiplot.test_render"
        ],
        "version": "0.1.19.96"
    },
    "hiplot-mlflow": {
        "cmdline": [],
        "modules": [
            "hiplot_mlflow"
        ],
        "version": "0.1.0"
    },
    "hipmob": {
        "cmdline": [],
        "modules": [
            "hipmob",
            "hipmob.version"
        ],
        "version": "0.5.0"
    },
    "hipnotify": {
        "cmdline": [],
        "modules": [
            "hipnotify",
            "hipnotify.hipnotify",
            "tests",
            "tests.conftest",
            "tests.test_hipnotify"
        ],
        "version": "1.0.8"
    },
    "hipo-drf-exceptions": {
        "cmdline": [],
        "modules": [
            "hipo_drf_exceptions",
            "hipo_drf_exceptions.apps",
            "hipo_drf_exceptions.exceptions",
            "hipo_drf_exceptions.handlers"
        ],
        "version": "0.1.5"
    },
    "hipochat": {
        "cmdline": [],
        "modules": [
            "hipochat",
            "hipochat.chat"
        ],
        "version": "0.1"
    },
    "hipparchos2-io": {
        "cmdline": [],
        "modules": [
            "hip2",
            "hip2.reader",
            "hip2.star",
            "hip2.writer"
        ],
        "version": "1.0.2"
    },
    "hippasos": {
        "cmdline": [],
        "modules": [
            "hippasos",
            "hippasos.schema",
            "hippasos.soundevent",
            "hippasos.soundservice"
        ],
        "version": "0.1.7"
    },
    "hippiagent": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hippie": {
        "cmdline": [],
        "modules": [
            "hippie"
        ],
        "version": "0.0.1"
    },
    "hippiehug": {
        "cmdline": [],
        "modules": [
            "hippiehug",
            "hippiehug.Chain",
            "hippiehug.Nodes",
            "hippiehug.RedisChain",
            "hippiehug.RedisStore",
            "hippiehug.S3Chain",
            "hippiehug.Tree",
            "hippiehug.Utils"
        ],
        "version": "0.1.3"
    },
    "hippiepug": {
        "cmdline": [],
        "modules": [
            "hippiepug",
            "hippiepug.chain",
            "hippiepug.pack",
            "hippiepug.store",
            "hippiepug.struct",
            "hippiepug.tree"
        ],
        "version": "0.5.0"
    },
    "hippo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hippo-diabetes": {
        "cmdline": [],
        "modules": [
            "egret",
            "egret.EgretCleanBigWideFormatTransformer",
            "egret.EgretCleanCategoricalMasker",
            "egret.EgretCleanDropColTransformer",
            "egret.EgretCleanDropContinuousValuesTransformer",
            "egret.EgretCleanDummyTransformer",
            "egret.EgretCleanPDCNullFillerTransformer",
            "egret.EgretCleanPassthroughTransformer",
            "egret.egret",
            "hippo",
            "hippo.HippoOutcomePredictionTranche",
            "hippo.HippoRowRandomizerMasker",
            "hippo.HippoShapTransformer",
            "hippo.HippoXgboostModel",
            "hippo.hippo",
            "moose",
            "moose.MooseColumnCareGapOpenCountTransformer",
            "moose.MooseColumnFillerTransformer",
            "moose.MooseColumnMoldMarginalTransformer",
            "moose.MooseColumnMultiplicationTransformer",
            "moose.MooseColumnTypeSetTransformer",
            "moose.MooseGapOAReportOutput",
            "moose.MooseKeepNamedColumnsTransformer",
            "moose.MooseKeeperOffenderDrugCountTransformer",
            "moose.MooseKeeperOffenderDrugTypeTransformer",
            "moose.MooseKeeperOffenderDuplicateTransformer",
            "moose.MooseKeeperOffenderMutuallyExclusiveTransformer",
            "moose.MooseKeeperOffenderPipeline",
            "moose.MooseKeeperOffenderTranche",
            "moose.MooseLineOfBusinessOneColumnTransformer",
            "moose.MooseListOfTupleLengthTransformer",
            "moose.MooseMemberGapLevelPipeline",
            "moose.MooseMemberGapTallChannelTransformer",
            "moose.MooseMemberGapTallProbabilityTransformer",
            "moose.MooseMemberGapTallTransformer",
            "moose.MooseMemberLevelPipeline",
            "moose.MooseOpenCareGapImpactListFastTransformer",
            "moose.MooseOpenCareGapImpactListTransformer",
            "moose.MooseROIReportOutput",
            "moose.MooseShapCostColumnTransformer",
            "moose.MooseShapImpactOutput",
            "moose.moose",
            "otter",
            "otter.OtterA1cImputation",
            "otter.OtterCareConsiderationComAggregatePipeline",
            "otter.OtterCareConsiderationMedAggregatePipeline",
            "otter.OtterCareConsiderationPipeline",
            "otter.OtterCareConsiderationTransformer",
            "otter.OtterCareGapAllOptionColTransformer",
            "otter.OtterCareGapColumnConsolidater",
            "otter.OtterCareGapComComorbidityAggregatePipeline",
            "otter.OtterCareGapComComorbidityPipeline",
            "otter.OtterCareGapComComorbidityTransformer",
            "otter.OtterCareGapComDeviceSMBG5AggregatePipeline",
            "otter.OtterCareGapComDeviceSMBG5Pipeline",
            "otter.OtterCareGapComDeviceSMBG5Transformer",
            "otter.OtterCareGapComDeviceSMBG7AggregatePipeline",
            "otter.OtterCareGapComDeviceSMBG7Pipeline",
            "otter.OtterCareGapComDeviceSMBG7Transformer",
            "otter.OtterCareGapComMedAdherenceAggregatePipeline",
            "otter.OtterCareGapComMedAdherencePipeline",
            "otter.OtterCareGapComMedAdherenceTransformer",
            "otter.OtterCareGapComMedOpt4thLineAggregatePipeline",
            "otter.OtterCareGapComMedOpt4thLinePipeline",
            "otter.OtterCareGapComMedOpt4thLineTransformer",
            "otter.OtterCareGapComMedOptAggregatePipeline",
            "otter.OtterCareGapComMedOptPipeline",
            "otter.OtterCareGapComMedOptTransformer",
            "otter.OtterCareGapComMoniterLipidAggregatePipeline",
            "otter.OtterCareGapComMoniterLipidPipeline",
            "otter.OtterCareGapComMoniterLipidTransformer",
            "otter.OtterCareGapComMoniterPcpAggregatePipeline",
            "otter.OtterCareGapComMoniterPcpPipeline",
            "otter.OtterCareGapComMoniterPcpTransformer",
            "otter.OtterCareGapComorbidityAggregatePipeline",
            "otter.OtterCareGapComorbidityPipeline",
            "otter.OtterCareGapComorbidityTransformer",
            "otter.OtterCareGapDeviceAggregatePipeline",
            "otter.OtterCareGapDevicePipeline",
            "otter.OtterCareGapDevicePipeline2",
            "otter.OtterCareGapDeviceTransformer",
            "otter.OtterCareGapDeviceTransformer2",
            "otter.OtterCareGapLivongoTransformer",
            "otter.OtterCareGapMedAdherenceAggregatePipeline",
            "otter.OtterCareGapMedAdherencePipeline",
            "otter.OtterCareGapMedAdherenceTransformer",
            "otter.OtterCareGapMedComorbidityAggregatePipeline",
            "otter.OtterCareGapMedComorbidityPipeline",
            "otter.OtterCareGapMedComorbidityTransformer",
            "otter.OtterCareGapMedDeviceSMBG5AggregatePipeline",
            "otter.OtterCareGapMedDeviceSMBG5Pipeline",
            "otter.OtterCareGapMedDeviceSMBG5Transformer",
            "otter.OtterCareGapMedDeviceSMBG7AggregatePipeline",
            "otter.OtterCareGapMedDeviceSMBG7Pipeline",
            "otter.OtterCareGapMedDeviceSMBG7Transformer",
            "otter.OtterCareGapMedMedAdherenceAggregatePipeline",
            "otter.OtterCareGapMedMedAdherencePipeline",
            "otter.OtterCareGapMedMedAdherenceTransformer",
            "otter.OtterCareGapMedMedOpt4thLineAggregatePipeline",
            "otter.OtterCareGapMedMedOpt4thLinePipeline",
            "otter.OtterCareGapMedMedOpt4thLineTransformer",
            "otter.OtterCareGapMedMedOptAggregatePipeline",
            "otter.OtterCareGapMedMedOptPipeline",
            "otter.OtterCareGapMedMedOptTransformer",
            "otter.OtterCareGapMedMoniterAggregatePipeline",
            "otter.OtterCareGapMedMoniterLipidAggregatePipeline",
            "otter.OtterCareGapMedMoniterLipidPipeline",
            "otter.OtterCareGapMedMoniterLipidTransformer",
            "otter.OtterCareGapMedMoniterPcpAggregatePipeline",
            "otter.OtterCareGapMedMoniterPcpPipeline",
            "otter.OtterCareGapMedMoniterPcpTransformer",
            "otter.OtterCareGapMedOptAggregatePipeline",
            "otter.OtterCareGapMedOptPipeline",
            "otter.OtterCareGapMedOptTransformer",
            "otter.OtterCareGapMoniterAggregatePipeline",
            "otter.OtterCareGapMoniterPipeline",
            "otter.OtterCareGapMoniterPipeline2",
            "otter.OtterCareGapMoniterTransformer",
            "otter.OtterCareGapMoniterTransformer2",
            "otter.OtterCareGapOnlyTransformer",
            "otter.OtterColUnderpinningCareGapRemovalTransformer",
            "otter.OtterComMedTransformer",
            "otter.OtterDenseMatrixMasker",
            "otter.OtterDensePipeline",
            "otter.OtterFeatureSelector",
            "otter.OtterRealRequiredThresholdSelector",
            "otter.otter",
            "otter.otterCom",
            "otter.otterMed",
            "otter.otter_rw",
            "raven",
            "raven.RavenTableCheckOutput",
            "raven.raven",
            "rhino",
            "rhino.RhinoAttachCallToAction",
            "rhino.RhinoChannelPermission",
            "rhino.RhinoChannelSelectionPipeline",
            "rhino.RhinoChannelSuppression",
            "rhino.RhinoDispositionSuppression",
            "rhino.RhinoHighMediumLowClassfier",
            "rhino.RhinoJourneyCost",
            "rhino.RhinoPreCPLPipeline",
            "rhino.RhinoProactiveChannelSelector",
            "rhino.RhinoROIChannelSelector",
            "rhino.RhinoRankAndWeight",
            "rhino.RhinoSelectCallToActionAndCampaign",
            "rhino.rhino",
            "util",
            "util.UtilPlotAPI",
            "util.util",
            "whale",
            "whale.WhaleRhinoPipeline",
            "whale.WhaleRhinoTestCallToActionTransformer",
            "whale.WhaleRhinoTestCampaignSelectionTransformer",
            "whale.WhaleRhinoTestChannelPermissionTransformer",
            "whale.WhaleRhinoTestChannelSuppressionTransformer",
            "whale.WhaleRhinoTestHMLClassTransformer",
            "whale.WhaleRhinoTestProactiveChannelSelectorTransformer",
            "whale.WhaleRhinoTestROIThresholdTransformer",
            "whale.WhaleRhinoTestRankAndWeightTransformer",
            "whale.test_OtterCareConsiderationTransformer",
            "whale.test_OtterCareGapComorbidityTransformer",
            "whale.test_OtterCareGapMedAdherenceTransformer",
            "whale.test_OtterCareGapMedOptTransformer",
            "whale.test_OtterCareGapMoniterTransformer",
            "whale.test_OtterCareGapMoniterTransformer2"
        ],
        "version": "1.0.0"
    },
    "hippo2client": {
        "cmdline": [],
        "modules": [
            "hippo2client",
            "hippo2client.hippo2client"
        ],
        "version": "1.6"
    },
    "hippocket": {
        "cmdline": [],
        "modules": [
            "hip_pocket",
            "hip_pocket.constants",
            "hip_pocket.pocket",
            "hip_pocket.tasks",
            "hip_pocket.tests",
            "hip_pocket.tests.mapper",
            "hip_pocket.tests.test_apps",
            "hip_pocket.tests.test_apps.mapper"
        ],
        "version": "0.1.2a"
    },
    "hippocrates": {
        "cmdline": [],
        "modules": [
            "hippocrates",
            "hippocrates.command_line",
            "hippocrates.data",
            "hippocrates.data.fetcher",
            "hippocrates.graphing",
            "hippocrates.graphing.generator",
            "hippocrates.questionnaires",
            "hippocrates.questionnaires.base",
            "hippocrates.questionnaires.beck_depression_index",
            "hippocrates.questionnaires.beck_depression_index.assessment",
            "hippocrates.questionnaires.gad2",
            "hippocrates.questionnaires.gad2.assessment",
            "hippocrates.questionnaires.gad7",
            "hippocrates.questionnaires.gad7.assessment",
            "hippocrates.questionnaires.models",
            "hippocrates.questionnaires.mood_tracker",
            "hippocrates.questionnaires.mood_tracker.assessment",
            "hippocrates.questionnaires.phq2",
            "hippocrates.questionnaires.phq2.assessment",
            "hippocrates.questionnaires.phq9",
            "hippocrates.questionnaires.phq9.assessment",
            "hippocrates.questionnaires.rosenberg_self_esteem",
            "hippocrates.questionnaires.rosenberg_self_esteem.assessment",
            "hippocrates.results",
            "hippocrates.utils",
            "hippocrates.utils.generate_results"
        ],
        "version": "0.4.0"
    },
    "hippodamia": {
        "cmdline": [],
        "modules": [
            "hippodamia",
            "hippodamia.agentshadow",
            "hippodamia.agentshadow.agentshadow",
            "hippodamia.agentshadow.agentshadowfactory",
            "hippodamia.agentshadow.logarchive",
            "hippodamia.agentshadow.messagearchive",
            "hippodamia.agentshadow.properties",
            "hippodamia.agentshadow.states",
            "hippodamia.agentshadow.states.active",
            "hippodamia.agentshadow.states.amonitoringstate",
            "hippodamia.agentshadow.states.archivecandidate",
            "hippodamia.agentshadow.states.archived",
            "hippodamia.agentshadow.states.event_ids",
            "hippodamia.agentshadow.states.inactive",
            "hippodamia.agentshadow.states.lost",
            "hippodamia.agentshadow.states.machinelogger",
            "hippodamia.agentshadow.states.onboarded",
            "hippodamia.agentshadow.states.onboarding",
            "hippodamia.agentshadow.states.predefined",
            "hippodamia.agentshadow.states.state_ids",
            "hippodamia.agentshadow.states.state_machine",
            "hippodamia.agentshadow.states.stopped",
            "hippodamia.commands",
            "hippodamia.email",
            "hippodamia.email.ainfo",
            "hippodamia.email.anotifier",
            "hippodamia.email.digest",
            "hippodamia.email.emailnotification",
            "hippodamia.email.minimal",
            "hippodamia.email.sendemail",
            "hippodamia.email.spontaneous",
            "hippodamia.enums",
            "hippodamia.flask",
            "hippodamia.flask.server",
            "hippodamia.flask.serverthread",
            "hippodamia.getch",
            "hippodamia.heartbeat",
            "hippodamia.hierarchivalview",
            "hippodamia.hierarchivalview.hierarchicalview",
            "hippodamia.hierarchivalview.treebranch",
            "hippodamia.hierarchivalview.treeentry",
            "hippodamia.hierarchivalview.treeleaf",
            "hippodamia.hierarchivalview.treeroot",
            "hippodamia.monitoringservice",
            "hippodamia.mymongoclient",
            "hippodamia.onboarding",
            "hippodamia.schema",
            "hippodamia.schema.agent_timings",
            "hippodamia.schema.email",
            "hippodamia.schema.expected_services",
            "hippodamia.schema.mongodb",
            "hippodamia.schema.monitoringservice",
            "hippodamia.schema.service_timings",
            "hippodamia.schema.topics",
            "hippodamia.schema.webserver",
            "hippodamia.ui",
            "tests_unit",
            "tests_unit.test_validateconfig"
        ],
        "version": "0.4.2"
    },
    "hippodamiaagent": {
        "cmdline": [],
        "modules": [
            "hippodamia_agent",
            "hippodamia_agent.get_schema",
            "hippodamia_agent.monitoringagent",
            "hippodamia_agent.mqtthandler",
            "hippodamia_agent.states",
            "hippodamia_agent.states.aagentstate",
            "hippodamia_agent.states.active",
            "hippodamia_agent.states.event_ids",
            "hippodamia_agent.states.history_type",
            "hippodamia_agent.states.initialized",
            "hippodamia_agent.states.machinelogger",
            "hippodamia_agent.states.onboarded",
            "hippodamia_agent.states.onboarding",
            "hippodamia_agent.states.state_ids",
            "hippodamia_agent.states.state_machine",
            "hippodamia_agent.states.terminiating",
            "hippodamia_agent.states.uninitialized",
            "tests_unit",
            "tests_unit.test_validateconfig"
        ],
        "version": "0.1.12"
    },
    "hippodamiaservice": {
        "cmdline": [],
        "modules": [
            "hippodamia_agent",
            "hippodamia_agent.monitoringagent",
            "hippodamia_agent.test_cpu_percentage",
            "hippodamia_agent.testservice",
            "hippodamia_service",
            "hippodamia_service.Monitoringservice",
            "tests_unit"
        ],
        "version": "0.1a1"
    },
    "hippodclient": {
        "cmdline": [],
        "modules": [
            "hippodclient",
            "hippodclient.hippodclient"
        ],
        "version": "1.3"
    },
    "hippodraw": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hipponetworkunit": {
        "cmdline": [],
        "modules": [
            "HippoNetworkUnit",
            "HippoNetworkUnit.capabilities",
            "HippoNetworkUnit.capabilities.cap_Provides_CA1_laminar_distribution_synapses_info",
            "HippoNetworkUnit.scores",
            "HippoNetworkUnit.scores.score_FreemanTukey1",
            "HippoNetworkUnit.scores.score_FreemanTukey2",
            "HippoNetworkUnit.scores.score_KullbackLeibler",
            "HippoNetworkUnit.scores.score_LogLikelihoodRatio",
            "HippoNetworkUnit.scores.score_Neyman",
            "HippoNetworkUnit.scores.score_Pearson_ChiSquared",
            "HippoNetworkUnit.tests",
            "HippoNetworkUnit.tests.test_CA1_laminar_distribution_synapses_FreemanTukey1",
            "HippoNetworkUnit.tests.test_CA1_laminar_distribution_synapses_FreemanTukey2",
            "HippoNetworkUnit.tests.test_CA1_laminar_distribution_synapses_KullbackLeibler",
            "HippoNetworkUnit.tests.test_CA1_laminar_distribution_synapses_Log_LikelihoodRatio",
            "HippoNetworkUnit.tests.test_CA1_laminar_distribution_synapses_Neyman",
            "HippoNetworkUnit.tests.test_CA1_laminar_distribution_synapses_Pearson",
            "HippoNetworkUnit.utils"
        ],
        "version": "0.1.dev0"
    },
    "hipposhic": {
        "cmdline": [
            "exampleScript"
        ],
        "modules": [
            "hipposhic",
            "hipposhic.file1",
            "hipposhic.file2"
        ],
        "version": "0.1.3"
    },
    "hippounit": {
        "cmdline": [],
        "modules": [
            "hippounit",
            "hippounit.capabilities",
            "hippounit.capabilities.cap_ProvidesGoodObliques",
            "hippounit.capabilities.cap_ProvidesRandomDendriticLocations",
            "hippounit.capabilities.cap_ProvidesRecordingLocationsOnTrunk",
            "hippounit.capabilities.cap_ReceivesCurrentStimuli_ProvidesResponse",
            "hippounit.capabilities.cap_ReceivesCurrentStimuli_ProvidesResponse_MultipleLocations",
            "hippounit.capabilities.cap_ReceivesEPSCstim",
            "hippounit.capabilities.cap_ReceivesMultipleSynapses",
            "hippounit.capabilities.cap_ReceivesSynapse",
            "hippounit.classify_apical_sections",
            "hippounit.plottools",
            "hippounit.scores",
            "hippounit.scores.score_P_Value_ObliqueIntegration",
            "hippounit.scores.score_ZScore_ObliqueIntegration",
            "hippounit.scores.score_ZScore_PSPAttenuation",
            "hippounit.scores.score_ZScore_backpropagatingAP",
            "hippounit.scores.score_ZScore_depolblock",
            "hippounit.scores.score_ZScore_somaticSpiking",
            "hippounit.tests",
            "hippounit.tests.test_BackpropagatingAPTest",
            "hippounit.tests.test_DepolarizationBlockTest",
            "hippounit.tests.test_ObliqueIntegrationTest",
            "hippounit.tests.test_PSPAttenuationTest",
            "hippounit.tests.test_SomaticFeaturesTest",
            "hippounit.utils"
        ],
        "version": "1.3.5"
    },
    "hipppy": {
        "cmdline": [],
        "modules": [
            "hippy",
            "hippy.operations",
            "hippy.readers",
            "hippy.writers"
        ],
        "version": "0.1.0"
    },
    "hippu": {
        "cmdline": [],
        "modules": [
            "hippu",
            "hippu._meta",
            "hippu.errors",
            "hippu.filter",
            "hippu.filters",
            "hippu.filters.cors",
            "hippu.filters.gzipfilter",
            "hippu.http",
            "hippu.request",
            "hippu.response",
            "hippu.server",
            "hippu.service",
            "hippu.stream",
            "hippu.utils"
        ],
        "version": "0.8.1"
    },
    "hippy": {
        "cmdline": [],
        "modules": [
            "hippy",
            "hippy.compiler",
            "hippy.error",
            "hippy.lexer",
            "hippy.parser"
        ],
        "version": "0.0.0"
    },
    "hippy-chat": {
        "cmdline": [],
        "modules": [
            "hippy_chat",
            "hippy_chat.exec",
            "hippy_chat.exec.demo",
            "hippy_chat.handler",
            "tests",
            "tests.test_handler"
        ],
        "version": "0.3.0"
    },
    "hippybase": {
        "cmdline": [],
        "modules": [
            "hippybase",
            "hippybase.client",
            "hippybase.connection",
            "hippybase.schema_pb2",
            "hippybase.table"
        ],
        "version": "0.1.2"
    },
    "hippybot": {
        "cmdline": [],
        "modules": [
            "hippybot",
            "hippybot.bot",
            "hippybot.daemon",
            "hippybot.daemon.daemon",
            "hippybot.decorators",
            "hippybot.hipchat",
            "hippybot.plugins",
            "hippybot.plugins.hype",
            "hippybot.plugins.lockbot",
            "hippybot.plugins.plusplusbot",
            "hippybot.plugins.rot13",
            "hippybot.plugins.threaded_example",
            "hippybot.plugins.udefine",
            "hippybot.plugins.uptime",
            "hippybot.plugins.wave"
        ],
        "version": "1.2.7"
    },
    "hippylib": {
        "cmdline": [],
        "modules": [
            "hippylib",
            "hippylib.algorithms",
            "hippylib.algorithms.NewtonCG",
            "hippylib.algorithms.bfgs",
            "hippylib.algorithms.cgsampler",
            "hippylib.algorithms.cgsolverSteihaug",
            "hippylib.algorithms.linSolvers",
            "hippylib.algorithms.linalg",
            "hippylib.algorithms.lowRankOperator",
            "hippylib.algorithms.multivector",
            "hippylib.algorithms.randomizedEigensolver",
            "hippylib.algorithms.randomizedSVD",
            "hippylib.algorithms.steepestDescent",
            "hippylib.algorithms.traceEstimator",
            "hippylib.forward_uq",
            "hippylib.forward_uq.parameter2QoiMap",
            "hippylib.forward_uq.qoi",
            "hippylib.forward_uq.taylorApproximationQoi",
            "hippylib.forward_uq.varianceReductionMC",
            "hippylib.forward_uq.variationalQoi",
            "hippylib.mcmc",
            "hippylib.mcmc.chain",
            "hippylib.mcmc.diagnostics",
            "hippylib.mcmc.kernels",
            "hippylib.mcmc.tracers",
            "hippylib.modeling",
            "hippylib.modeling.PDEProblem",
            "hippylib.modeling.expression",
            "hippylib.modeling.misfit",
            "hippylib.modeling.model",
            "hippylib.modeling.modelVerify",
            "hippylib.modeling.pointwiseObservation",
            "hippylib.modeling.posterior",
            "hippylib.modeling.prior",
            "hippylib.modeling.reducedHessian",
            "hippylib.modeling.timeDependentVector",
            "hippylib.modeling.variables",
            "hippylib.scheduling",
            "hippylib.scheduling.collective",
            "hippylib.test",
            "hippylib.test.ptest_collectives",
            "hippylib.test.ptest_multivector",
            "hippylib.test.ptest_pointwise_observation",
            "hippylib.test.ptest_qoi",
            "hippylib.test.ptest_randomizedEigensolver",
            "hippylib.test.ptest_randomizedSVD",
            "hippylib.test.test_deprecation_warnings",
            "hippylib.test.test_experimental_warnings",
            "hippylib.test.test_gaussian_real_prior",
            "hippylib.utils",
            "hippylib.utils.checkDolfinVersion",
            "hippylib.utils.deprecate",
            "hippylib.utils.experimental",
            "hippylib.utils.nb",
            "hippylib.utils.parameterList",
            "hippylib.utils.random",
            "hippylib.utils.vector2function",
            "hippylib.utils.warnings",
            "hippylib.version"
        ],
        "version": "3.0.0"
    },
    "hips": {
        "cmdline": [],
        "modules": [
            "astropy_helpers",
            "astropy_helpers.commands",
            "astropy_helpers.commands._dummy",
            "astropy_helpers.commands._test_compat",
            "astropy_helpers.commands.build_ext",
            "astropy_helpers.commands.build_py",
            "astropy_helpers.commands.build_sphinx",
            "astropy_helpers.commands.install",
            "astropy_helpers.commands.install_lib",
            "astropy_helpers.commands.register",
            "astropy_helpers.commands.setup_package",
            "astropy_helpers.commands.test",
            "astropy_helpers.compat",
            "astropy_helpers.distutils_helpers",
            "astropy_helpers.extern",
            "astropy_helpers.extern.automodapi",
            "astropy_helpers.extern.automodapi.autodoc_enhancements",
            "astropy_helpers.extern.automodapi.automodapi",
            "astropy_helpers.extern.automodapi.automodsumm",
            "astropy_helpers.extern.automodapi.smart_resolver",
            "astropy_helpers.extern.automodapi.utils",
            "astropy_helpers.extern.numpydoc",
            "astropy_helpers.extern.numpydoc.docscrape",
            "astropy_helpers.extern.numpydoc.docscrape_sphinx",
            "astropy_helpers.extern.numpydoc.numpydoc",
            "astropy_helpers.extern.setup_package",
            "astropy_helpers.git_helpers",
            "astropy_helpers.openmp_helpers",
            "astropy_helpers.setup_helpers",
            "astropy_helpers.sphinx",
            "astropy_helpers.sphinx.conf",
            "astropy_helpers.sphinx.ext",
            "astropy_helpers.sphinx.ext.changelog_links",
            "astropy_helpers.sphinx.ext.doctest",
            "astropy_helpers.sphinx.ext.edit_on_github",
            "astropy_helpers.sphinx.ext.tests",
            "astropy_helpers.sphinx.ext.tocdepthfix",
            "astropy_helpers.sphinx.setup_package",
            "astropy_helpers.test_helpers",
            "astropy_helpers.utils",
            "astropy_helpers.version",
            "astropy_helpers.version_helpers",
            "hips",
            "hips._astropy_init",
            "hips.conftest",
            "hips.draw",
            "hips.draw.paint",
            "hips.draw.tests",
            "hips.draw.tests.test_paint",
            "hips.draw.tests.test_ui",
            "hips.draw.ui",
            "hips.tests",
            "hips.tests.setup_package",
            "hips.tiles",
            "hips.tiles.allsky",
            "hips.tiles.fetch",
            "hips.tiles.io",
            "hips.tiles.survey",
            "hips.tiles.tests",
            "hips.tiles.tests.setup_package",
            "hips.tiles.tests.test_allsky",
            "hips.tiles.tests.test_fetch",
            "hips.tiles.tests.test_io",
            "hips.tiles.tests.test_survey",
            "hips.tiles.tests.test_tile",
            "hips.tiles.tile",
            "hips.utils",
            "hips.utils.healpix",
            "hips.utils.testing",
            "hips.utils.tests",
            "hips.utils.tests.test_healpix",
            "hips.utils.tests.test_wcs",
            "hips.utils.wcs",
            "hips.version"
        ],
        "version": "0.2"
    },
    "hipsaint": {
        "cmdline": [],
        "modules": [
            "hipsaint",
            "hipsaint.bin",
            "hipsaint.bin.commands",
            "hipsaint.messages",
            "hipsaint.options",
            "hipsaint.templates"
        ],
        "version": "0.7"
    },
    "hipshot": {
        "cmdline": [
            "hipshot"
        ],
        "modules": [
            "hipshot",
            "hipshot.hipshot"
        ],
        "version": "1.0"
    },
    "hipster": {
        "cmdline": [],
        "modules": [
            "hipster",
            "hipster.error",
            "hipster.heap",
            "hipster.max_heap",
            "hipster.min_heap"
        ],
        "version": "3.0.5"
    },
    "hipsterplot": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hipy": {
        "cmdline": [
            "hipy"
        ],
        "modules": [
            "hipy",
            "hipy.parser"
        ],
        "version": "0.12"
    },
    "hipyschool": {
        "cmdline": [],
        "modules": [
            "hipyschool"
        ],
        "version": "1.0.7"
    },
    "hiq": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hiq-circuit": {
        "cmdline": [],
        "modules": [
            "hiq",
            "hiq.libs",
            "hiq.libs._get_expectation_value",
            "hiq.mitigation",
            "hiq.mitigation._extrapolation",
            "hiq.noise",
            "hiq.noise._kraus_error",
            "hiq.noise._noise_model",
            "hiq.noise._quantum_errors_zoo",
            "projectq",
            "projectq.backends",
            "projectq.backends._hiqsim",
            "projectq.backends._hiqsim._simulator_mpi",
            "projectq.backends._hiqsim._stabilizer_simulator",
            "projectq.backends._resource_counter_mod",
            "projectq.cengines",
            "projectq.cengines._dummybackend",
            "projectq.cengines._greedyscheduler",
            "projectq.cengines._hiq_main_engine",
            "projectq.cengines._merger_engine",
            "projectq.cengines._noisegenerator",
            "projectq.ops",
            "projectq.ops._hiq_gates",
            "pybind11",
            "pybind11._version"
        ],
        "version": "0.0.2.post4"
    },
    "hiq-projectq": {
        "cmdline": [],
        "modules": [
            "projectq",
            "projectq._version",
            "projectq.backends",
            "projectq.backends._aqt",
            "projectq.backends._aqt._aqt",
            "projectq.backends._aqt._aqt_http_client",
            "projectq.backends._circuits",
            "projectq.backends._circuits._drawer",
            "projectq.backends._circuits._drawer_matplotlib",
            "projectq.backends._circuits._plot",
            "projectq.backends._circuits._to_latex",
            "projectq.backends._ibm",
            "projectq.backends._ibm._ibm",
            "projectq.backends._ibm._ibm_http_client",
            "projectq.backends._json_converter",
            "projectq.backends._parametric_backend",
            "projectq.backends._printer",
            "projectq.backends._resource",
            "projectq.backends._sim",
            "projectq.backends._sim._classical_simulator",
            "projectq.backends._sim._pysim",
            "projectq.backends._sim._simulator",
            "projectq.cengines",
            "projectq.cengines._core",
            "projectq.cengines._core._basicmapper",
            "projectq.cengines._core._basics",
            "projectq.cengines._core._cmdmodifier",
            "projectq.cengines._core._main",
            "projectq.cengines._core._swap_utils",
            "projectq.cengines._ibm5qubitmapper",
            "projectq.cengines._linearmapper",
            "projectq.cengines._manualmapper",
            "projectq.cengines._optimize",
            "projectq.cengines._replacer",
            "projectq.cengines._replacer._decomposition_rule",
            "projectq.cengines._replacer._decomposition_rule_set",
            "projectq.cengines._replacer._replacer",
            "projectq.cengines._swapandcnotflipper",
            "projectq.cengines._tagremover",
            "projectq.cengines._testengine",
            "projectq.cengines._twodmapper",
            "projectq.libs",
            "projectq.libs.hist",
            "projectq.libs.hist._histogram",
            "projectq.libs.math",
            "projectq.libs.math._constantmath",
            "projectq.libs.math._default_rules",
            "projectq.libs.math._gates",
            "projectq.libs.revkit",
            "projectq.libs.revkit._control_function",
            "projectq.libs.revkit._permutation",
            "projectq.libs.revkit._phase",
            "projectq.libs.revkit._utils",
            "projectq.meta",
            "projectq.meta._compute",
            "projectq.meta._control",
            "projectq.meta._dagger",
            "projectq.meta._dirtyqubit",
            "projectq.meta._logicalqubit",
            "projectq.meta._loop",
            "projectq.meta._util",
            "projectq.ops",
            "projectq.ops._basics",
            "projectq.ops._command",
            "projectq.ops._gates",
            "projectq.ops._metagates",
            "projectq.ops._parametric_base",
            "projectq.ops._qaagate",
            "projectq.ops._qftgate",
            "projectq.ops._qpegate",
            "projectq.ops._qubit_operator",
            "projectq.ops._shortcuts",
            "projectq.ops._state_prep",
            "projectq.ops._time_evolution",
            "projectq.ops._uniformly_controlled_rotation",
            "projectq.ops._unitary_gates",
            "projectq.setups",
            "projectq.setups.aqt",
            "projectq.setups.decompositions",
            "projectq.setups.decompositions.amplitudeamplification",
            "projectq.setups.decompositions.arb1qubit2rzandry",
            "projectq.setups.decompositions.barrier",
            "projectq.setups.decompositions.carb1qubit2cnotrzandry",
            "projectq.setups.decompositions.cnot2cz",
            "projectq.setups.decompositions.cnot2rxx",
            "projectq.setups.decompositions.cnu2toffoliandcu",
            "projectq.setups.decompositions.crz2cxandrz",
            "projectq.setups.decompositions.cunitary2rzry",
            "projectq.setups.decompositions.entangle",
            "projectq.setups.decompositions.globalphase",
            "projectq.setups.decompositions.h2rx",
            "projectq.setups.decompositions.ph2r",
            "projectq.setups.decompositions.phaseestimation",
            "projectq.setups.decompositions.qft2crandhadamard",
            "projectq.setups.decompositions.qubitop2onequbit",
            "projectq.setups.decompositions.r2rzandph",
            "projectq.setups.decompositions.rx2rz",
            "projectq.setups.decompositions.ry2rz",
            "projectq.setups.decompositions.rz2rx",
            "projectq.setups.decompositions.sqrtswap2cnot",
            "projectq.setups.decompositions.stateprep2cnot",
            "projectq.setups.decompositions.swap2cnot",
            "projectq.setups.decompositions.time_evolution",
            "projectq.setups.decompositions.toffoli2cnotandtgate",
            "projectq.setups.decompositions.uniformlycontrolledr2cnot",
            "projectq.setups.decompositions.unitary2rzry",
            "projectq.setups.default",
            "projectq.setups.grid",
            "projectq.setups.ibm",
            "projectq.setups.linear",
            "projectq.setups.restrictedgateset",
            "projectq.setups.trapped_ion_decomposer",
            "projectq.tests",
            "projectq.types",
            "projectq.types._qubit"
        ],
        "version": "0.6.4.post2"
    },
    "hirakan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiredis": {
        "cmdline": [],
        "modules": [
            "hiredis",
            "hiredis.version"
        ],
        "version": "1.1.0"
    },
    "hirefire": {
        "cmdline": [],
        "modules": [
            "hirefire",
            "hirefire.contrib",
            "hirefire.contrib.django",
            "hirefire.contrib.django.middleware",
            "hirefire.contrib.flask",
            "hirefire.contrib.flask.blueprint",
            "hirefire.contrib.tornado",
            "hirefire.contrib.tornado.handlers",
            "hirefire.procs",
            "hirefire.procs.celery",
            "hirefire.procs.hotqueue",
            "hirefire.procs.huey",
            "hirefire.procs.queues",
            "hirefire.procs.rq",
            "hirefire.utils",
            "tests",
            "tests.contrib",
            "tests.contrib.django",
            "tests.contrib.django.test_middleware",
            "tests.contrib.django.test_rq_proc",
            "tests.contrib.django.testapp",
            "tests.contrib.django.testapp.procs",
            "tests.contrib.django.testapp.rq_test_procs",
            "tests.contrib.django.testapp.settings",
            "tests.contrib.django.testapp.urls"
        ],
        "version": "1.0"
    },
    "hires": {
        "cmdline": [],
        "modules": [
            "hires",
            "hires.adduct_grouping",
            "hires.algorithms",
            "hires.feature_detector",
            "hires.feature_regrouper",
            "hires.shoulder_peak_remover"
        ],
        "version": "0.0.14"
    },
    "hiresprv": {
        "cmdline": [],
        "modules": [
            "hiresprv",
            "hiresprv.archive",
            "hiresprv.auth",
            "hiresprv.database",
            "hiresprv.download",
            "hiresprv.idldriver",
            "hiresprv.status",
            "sphinx",
            "sphinx.conf"
        ],
        "version": "2.0.1"
    },
    "hirez-py": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0.dev0"
    },
    "hirezpy": {
        "cmdline": [],
        "modules": [
            "hirezpy",
            "hirezpy.client",
            "hirezpy.endpoint",
            "hirezpy.language",
            "hirezpy.objects",
            "hirezpy.request"
        ],
        "version": "0.1.3"
    },
    "hiringpond": {
        "cmdline": [],
        "modules": [
            "hiringpond",
            "hiringpond.config",
            "hiringpond.config.app_cfg",
            "hiringpond.config.environment",
            "hiringpond.config.middleware",
            "hiringpond.controllers",
            "hiringpond.controllers.error",
            "hiringpond.controllers.root",
            "hiringpond.controllers.secure",
            "hiringpond.controllers.template",
            "hiringpond.lib",
            "hiringpond.lib.app_globals",
            "hiringpond.lib.base",
            "hiringpond.lib.helpers",
            "hiringpond.model",
            "hiringpond.model.auth",
            "hiringpond.templates",
            "hiringpond.tests",
            "hiringpond.tests.functional",
            "hiringpond.tests.functional.test_authentication",
            "hiringpond.tests.functional.test_root",
            "hiringpond.tests.models",
            "hiringpond.tests.models.test_auth",
            "hiringpond.websetup",
            "hiringpond.websetup.bootstrap",
            "hiringpond.websetup.schema",
            "migration",
            "migration.versions"
        ],
        "version": "0.1dev"
    },
    "hirise-tools": {
        "cmdline": [],
        "modules": [
            "pyrise",
            "pyrise.cli",
            "pyrise.data",
            "pyrise.downloads",
            "pyrise.indexfiles",
            "pyrise.labels",
            "pyrise.products"
        ],
        "version": "0.7.3"
    },
    "hirlite": {
        "cmdline": [],
        "modules": [
            "hirlite",
            "hirlite.patch_conn",
            "hirlite.version"
        ],
        "version": "0.3.1"
    },
    "hirmeos-clients": {
        "cmdline": [],
        "modules": [
            "hirmeos_clients",
            "hirmeos_clients.altmetrics",
            "hirmeos_clients.tokens_api",
            "hirmeos_clients.translator",
            "hirmeos_clients.variables"
        ],
        "version": "0.0.18"
    },
    "hirmeos-crossref-citedby-driver": {
        "cmdline": [],
        "modules": [
            "crossref_citedby_driver",
            "crossref_citedby_driver.functions"
        ],
        "version": "0.0.1"
    },
    "hirmeos-google-analytics-driver": {
        "cmdline": [],
        "modules": [
            "google_analytics_driver",
            "google_analytics_driver.clients",
            "google_analytics_driver.logic",
            "google_analytics_driver.resolve",
            "google_analytics_driver.retrieve",
            "google_analytics_driver.service"
        ],
        "version": "0.1.0"
    },
    "hiro": {
        "cmdline": [],
        "modules": [
            "hiro",
            "hiro.core",
            "hiro.errors",
            "hiro.patches",
            "hiro.utils",
            "hiro.version"
        ],
        "version": "0.5.1"
    },
    "hironsancorpus": {
        "cmdline": [],
        "modules": [
            "hironsan",
            "hironsan.corpus",
            "tests"
        ],
        "version": "0.1.2"
    },
    "hirosql": {
        "cmdline": [],
        "modules": [
            "hirosql",
            "hirosql.main"
        ],
        "version": "0.2"
    },
    "hirschman": {
        "cmdline": [],
        "modules": [
            "hirschman",
            "hirschman.hirschman"
        ],
        "version": "1.0.4"
    },
    "his": {
        "cmdline": [],
        "modules": [
            "his",
            "his.tory"
        ],
        "version": "0.0.1"
    },
    "his-almanac": {
        "cmdline": [],
        "modules": [
            "almanac",
            "almanac.exceptions",
            "almanac.registry",
            "tests",
            "tests.test_registry"
        ],
        "version": "0.0.1"
    },
    "his2h5": {
        "cmdline": [],
        "modules": [
            "his2h5",
            "his2h5.fftfuncs",
            "his2h5.mandel",
            "his2h5.mockNDarray",
            "his2h5.readerHIS",
            "his2h5.tool"
        ],
        "version": "0.1dev"
    },
    "hisak-idtools": {
        "cmdline": [],
        "modules": [
            "hisak.idtools",
            "hisak.idtools.base32",
            "hisak.idtools.base58",
            "hisak.idtools.uuid58",
            "hisak.idtools.xid"
        ],
        "version": "0.1.1"
    },
    "hisarcspiwars2019": {
        "cmdline": [],
        "modules": [
            "HisarCSPiWars2019",
            "HisarCSPiWars2019.Controller",
            "HisarCSPiWars2019.MotorControl",
            "HisarCSPiWars2019.OptimizedPiCam",
            "HisarCSPiWars2019.ServoControl",
            "HisarCSPiWars2019.UltrasonicSensor"
        ],
        "version": "0.9.5"
    },
    "hiscore": {
        "cmdline": [],
        "modules": [
            "hiscore",
            "hiscore.engine",
            "hiscore.errors"
        ],
        "version": "1.6.0"
    },
    "hisensetv": {
        "cmdline": [],
        "modules": [
            "hisensetv"
        ],
        "version": "0.1.4"
    },
    "hishiryo": {
        "cmdline": [],
        "modules": [
            "hishiryo",
            "hishiryo.Hishiryo"
        ],
        "version": "0.0.1"
    },
    "hisia": {
        "cmdline": [],
        "modules": [
            "hisia",
            "hisia.hisia",
            "hisia.models",
            "hisia.models.helpers",
            "hisia.models.train_model"
        ],
        "version": "0.1.3"
    },
    "hisp": {
        "cmdline": [],
        "modules": [
            "hisp",
            "hisp.doctypes",
            "hisp.exceptions",
            "hisp.libraries",
            "hisp.libraries.core",
            "hisp.libraries.django",
            "hisp.loaders",
            "hisp.loaders.compiled",
            "hisp.loaders.convert",
            "hisp.macros",
            "hisp.management",
            "hisp.management.commands",
            "hisp.management.commands.hisp_clean",
            "hisp.management.commands.hisp_convert",
            "hisp.nodes",
            "hisp.parse",
            "hisp.tables",
            "hisp.tables.lextab",
            "hisp.tables.parsetab",
            "hisp.tokenize"
        ],
        "version": "0.1.0"
    },
    "hispadocs": {
        "cmdline": [
            "hispadocs"
        ],
        "modules": [
            "hispadocs",
            "hispadocs.config",
            "hispadocs.management",
            "hispadocs.odt",
            "hispadocs.parser",
            "hispadocs.template"
        ],
        "version": "0.1.1"
    },
    "hisparc-sapphire": {
        "cmdline": [],
        "modules": [
            "sapphire",
            "sapphire.analysis",
            "sapphire.analysis.calibration",
            "sapphire.analysis.coincidence_queries",
            "sapphire.analysis.coincidences",
            "sapphire.analysis.core_reconstruction",
            "sapphire.analysis.direction_reconstruction",
            "sapphire.analysis.event_utils",
            "sapphire.analysis.find_mpv",
            "sapphire.analysis.landau",
            "sapphire.analysis.process_events",
            "sapphire.analysis.process_traces",
            "sapphire.analysis.reconstructions",
            "sapphire.analysis.time_deltas",
            "sapphire.api",
            "sapphire.clusters",
            "sapphire.corsika",
            "sapphire.corsika.blocks",
            "sapphire.corsika.corsika_queries",
            "sapphire.corsika.generate_corsika_overview",
            "sapphire.corsika.mergesort",
            "sapphire.corsika.particles",
            "sapphire.corsika.qsub_corsika",
            "sapphire.corsika.qsub_store_corsika_data",
            "sapphire.corsika.reader",
            "sapphire.corsika.store_corsika_data",
            "sapphire.corsika.units",
            "sapphire.data",
            "sapphire.data.extend_local_data",
            "sapphire.data.update_local_data",
            "sapphire.esd",
            "sapphire.kascade",
            "sapphire.publicdb",
            "sapphire.qsub",
            "sapphire.simulations",
            "sapphire.simulations.base",
            "sapphire.simulations.detector",
            "sapphire.simulations.gammas",
            "sapphire.simulations.groundparticles",
            "sapphire.simulations.ldf",
            "sapphire.simulations.showerfront",
            "sapphire.storage",
            "sapphire.tests",
            "sapphire.tests.analysis",
            "sapphire.tests.analysis.test_calibration",
            "sapphire.tests.analysis.test_coincidence_queries",
            "sapphire.tests.analysis.test_coincidences",
            "sapphire.tests.analysis.test_core_reconstruction",
            "sapphire.tests.analysis.test_direction_reconstruction",
            "sapphire.tests.analysis.test_event_utils",
            "sapphire.tests.analysis.test_find_mpv",
            "sapphire.tests.analysis.test_landau",
            "sapphire.tests.analysis.test_process_events",
            "sapphire.tests.analysis.test_process_traces",
            "sapphire.tests.analysis.test_reconstructions",
            "sapphire.tests.analysis.test_time_deltas",
            "sapphire.tests.corsika",
            "sapphire.tests.corsika.test_blocks",
            "sapphire.tests.corsika.test_corsika",
            "sapphire.tests.corsika.test_corsika_queries",
            "sapphire.tests.corsika.test_generate_corsika_overview",
            "sapphire.tests.corsika.test_particles",
            "sapphire.tests.corsika.test_qsub_corsika",
            "sapphire.tests.corsika.test_qsub_store_corsika_data",
            "sapphire.tests.corsika.test_store_corsika_data",
            "sapphire.tests.corsika.test_units",
            "sapphire.tests.esd_load_data",
            "sapphire.tests.simulations",
            "sapphire.tests.simulations.perform_simulation",
            "sapphire.tests.simulations.test_base_simulation",
            "sapphire.tests.simulations.test_detectors",
            "sapphire.tests.simulations.test_gammas",
            "sapphire.tests.simulations.test_groundparticles",
            "sapphire.tests.simulations.test_ldf",
            "sapphire.tests.simulations.test_simulation_acceptance",
            "sapphire.tests.test_api",
            "sapphire.tests.test_clusters",
            "sapphire.tests.test_clusters_acceptance",
            "sapphire.tests.test_esd",
            "sapphire.tests.test_kascade",
            "sapphire.tests.test_publicdb",
            "sapphire.tests.test_qsub",
            "sapphire.tests.test_time_util",
            "sapphire.tests.test_utils",
            "sapphire.tests.transformations",
            "sapphire.tests.transformations.test_angles",
            "sapphire.tests.transformations.test_axes",
            "sapphire.tests.transformations.test_base",
            "sapphire.tests.transformations.test_celestial",
            "sapphire.tests.transformations.test_clock",
            "sapphire.tests.transformations.test_geographic",
            "sapphire.tests.validate_results",
            "sapphire.time_util",
            "sapphire.transformations",
            "sapphire.transformations.angles",
            "sapphire.transformations.axes",
            "sapphire.transformations.base",
            "sapphire.transformations.celestial",
            "sapphire.transformations.clock",
            "sapphire.transformations.geographic",
            "sapphire.utils",
            "sapphire.version"
        ],
        "version": "1.7.1"
    },
    "hispectralmodel": {
        "cmdline": [],
        "modules": [
            "hispectrum",
            "hispectrum.hi_profile",
            "hispectrum.test",
            "hispectrum.test.test_location",
            "hispectrum.test.test_utils"
        ],
        "version": "0.1.0"
    },
    "hiss": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiss-cli": {
        "cmdline": [],
        "modules": [
            "hiss",
            "hiss.config",
            "hiss.hiss_cli",
            "hiss.parser",
            "hiss.parsers",
            "hiss.parsers.init",
            "hiss.utils",
            "hiss.utils.exceptions",
            "hiss.utils.tools"
        ],
        "version": "0.0.6"
    },
    "hiss-repl": {
        "cmdline": [],
        "modules": [
            "hiss",
            "hiss.cli",
            "hiss.cli.config",
            "hiss.cli.magic",
            "hiss.cli.virtualenv"
        ],
        "version": "3.2.0"
    },
    "hiss-themes": {
        "cmdline": [],
        "modules": [
            "hiss",
            "hiss.themes",
            "hiss.themes.tomorrow"
        ],
        "version": "0.0.2"
    },
    "hisser": {
        "cmdline": [],
        "modules": [
            "hisser",
            "hisser.agg",
            "hisser.blocks",
            "hisser.buffer",
            "hisser.cli",
            "hisser.config",
            "hisser.db",
            "hisser.defaults",
            "hisser.graphite",
            "hisser.metrics",
            "hisser.server",
            "hisser.utils"
        ],
        "version": "0.10.1"
    },
    "hissp": {
        "cmdline": [],
        "modules": [
            "hissp",
            "hissp.basic",
            "hissp.compiler",
            "hissp.munger",
            "hissp.reader",
            "hissp.repl"
        ],
        "version": "0.1.0"
    },
    "hissw": {
        "cmdline": [],
        "modules": [
            "hissw",
            "hissw.environment",
            "hissw.read_config",
            "hissw.util"
        ],
        "version": "1.1"
    },
    "hist": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.1"
    },
    "hist-census-gis": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0a5"
    },
    "histacom-docs-theme": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "histastro": {
        "cmdline": [],
        "modules": [
            "histastro",
            "histastro.constants",
            "histastro.coordinates",
            "histastro.datetime",
            "histastro.moon",
            "histastro.planets",
            "histastro.plot"
        ],
        "version": "0.0.3"
    },
    "histbook": {
        "cmdline": [],
        "modules": [
            "histbook",
            "histbook.axis",
            "histbook.book",
            "histbook.calc",
            "histbook.calc.spark",
            "histbook.export",
            "histbook.expr",
            "histbook.fill",
            "histbook.hist",
            "histbook.instr",
            "histbook.proj",
            "histbook.util",
            "histbook.util.astunparse",
            "histbook.vega",
            "histbook.version"
        ],
        "version": "1.2.5"
    },
    "histcensusgis": {
        "cmdline": [],
        "modules": [
            "histcensusgis",
            "histcensusgis.Clean",
            "histcensusgis.EDblocks",
            "histcensusgis.Geocode",
            "histcensusgis.RunClean",
            "histcensusgis.lines",
            "histcensusgis.lines.DirectionRetrieval",
            "histcensusgis.lines.GetStInMicroNotGrid",
            "histcensusgis.lines.hn",
            "histcensusgis.lines.street",
            "histcensusgis.microdata",
            "histcensusgis.microdata.AddStudentCleaning",
            "histcensusgis.microdata.HarmonizeMicroMap",
            "histcensusgis.microdata.block",
            "histcensusgis.microdata.error_fix",
            "histcensusgis.microdata.hn",
            "histcensusgis.microdata.misc",
            "histcensusgis.microdata.street",
            "histcensusgis.points",
            "histcensusgis.points.geocode",
            "histcensusgis.polygons",
            "histcensusgis.polygons.BuildED_BlockMap",
            "histcensusgis.polygons.EDs_from_blockmap",
            "histcensusgis.polygons.block",
            "histcensusgis.polygons.create_block_ED_maps",
            "histcensusgis.polygons.ed",
            "histcensusgis.s4utils",
            "histcensusgis.s4utils.AmoryUtils",
            "histcensusgis.s4utils.ArcUtils",
            "histcensusgis.s4utils.IOutils",
            "histcensusgis.text",
            "histcensusgis.text.download_sm_crosswalk",
            "histcensusgis.text.standardize",
            "histcensusgis.text.stevemorse"
        ],
        "version": "1.0.0a139"
    },
    "histdata": {
        "cmdline": [],
        "modules": [
            "histdata",
            "histdata.api"
        ],
        "version": "1.0"
    },
    "histdata-downloader": {
        "cmdline": [],
        "modules": [
            "histdata_downloader",
            "histdata_downloader.cli",
            "histdata_downloader.histdata_downloader",
            "histdata_downloader.logger",
            "histdata_downloader.tui"
        ],
        "version": "0.5.1"
    },
    "histimator": {
        "cmdline": [],
        "modules": [
            "histimator",
            "histimator.backend",
            "histimator.estimator",
            "histimator.interpolation",
            "histimator.models",
            "histimator.optimiser",
            "histimator.pdfs",
            "histimator.util"
        ],
        "version": "0.2.1"
    },
    "histlite": {
        "cmdline": [],
        "modules": [
            "histlite",
            "histlite.heal",
            "histlite.termplot"
        ],
        "version": "0.9.5"
    },
    "histmp": {
        "cmdline": [],
        "modules": [
            "histmp"
        ],
        "version": "0.0.5"
    },
    "histo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "histoday": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "histog": {
        "cmdline": [],
        "modules": [
            "histog"
        ],
        "version": "0.1.0"
    },
    "histogram": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "histogram-plus": {
        "cmdline": [],
        "modules": [
            "histogram_plus",
            "histogram_plus.bayesian_blocks_hep",
            "histogram_plus.fill_between_steps",
            "histogram_plus.hist_funcs"
        ],
        "version": "0.2.1"
    },
    "histogram-with-additives-john-njeri": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "histogrammar": {
        "cmdline": [],
        "modules": [
            "histogrammar",
            "histogrammar.defs",
            "histogrammar.hgawk_grammar",
            "histogrammar.hgawk_grammar_table",
            "histogrammar.parsing",
            "histogrammar.plot",
            "histogrammar.plot.bokeh",
            "histogrammar.plot.matplotlib",
            "histogrammar.plot.root",
            "histogrammar.plot.vega",
            "histogrammar.plot.vega.jsontrans",
            "histogrammar.plot.vega.nodejs",
            "histogrammar.primitives",
            "histogrammar.primitives.average",
            "histogrammar.primitives.bag",
            "histogrammar.primitives.bin",
            "histogrammar.primitives.categorize",
            "histogrammar.primitives.centrallybin",
            "histogrammar.primitives.collection",
            "histogrammar.primitives.count",
            "histogrammar.primitives.deviate",
            "histogrammar.primitives.fraction",
            "histogrammar.primitives.irregularlybin",
            "histogrammar.primitives.minmax",
            "histogrammar.primitives.select",
            "histogrammar.primitives.sparselybin",
            "histogrammar.primitives.stack",
            "histogrammar.primitives.sum",
            "histogrammar.pycparser",
            "histogrammar.pycparser._ast_gen",
            "histogrammar.pycparser._build_tables",
            "histogrammar.pycparser.ast_transforms",
            "histogrammar.pycparser.c_ast",
            "histogrammar.pycparser.c_generator",
            "histogrammar.pycparser.c_lexer",
            "histogrammar.pycparser.c_parser",
            "histogrammar.pycparser.lextab",
            "histogrammar.pycparser.ply",
            "histogrammar.pycparser.ply.cpp",
            "histogrammar.pycparser.ply.ctokens",
            "histogrammar.pycparser.ply.lex",
            "histogrammar.pycparser.ply.yacc",
            "histogrammar.pycparser.ply.ygen",
            "histogrammar.pycparser.plyparser",
            "histogrammar.pycparser.yacctab",
            "histogrammar.python23_lex",
            "histogrammar.sparksql",
            "histogrammar.specialized",
            "histogrammar.tutorial",
            "histogrammar.tutorial.cmsdata",
            "histogrammar.util",
            "histogrammar.version",
            "tests",
            "tests.testbasic",
            "tests.testgpu",
            "tests.testnumpy",
            "tests.testrootcling",
            "tests.testspec"
        ],
        "version": "1.0.12"
    },
    "histogramming": {
        "cmdline": [],
        "modules": [
            "histogramming",
            "histogramming.histogram",
            "histogramming.test_histogram"
        ],
        "version": "0.1.1"
    },
    "histograms": {
        "cmdline": [],
        "modules": [
            "histograms",
            "histograms.__version__",
            "histograms.histogram",
            "histograms.histograms",
            "histograms.utils"
        ],
        "version": "1.0.0"
    },
    "histograms-cottephi": {
        "cmdline": [],
        "modules": [
            "MyHist",
            "MyHist2D",
            "toolbox"
        ],
        "version": "0.0.5.26"
    },
    "histogramy": {
        "cmdline": [],
        "modules": [
            "histogramy",
            "histogramy.demo",
            "histogramy.describer",
            "histogramy.loader",
            "histogramy.main",
            "histogramy.modulator",
            "histogramy.options",
            "histogramy.plotter",
            "histogramy.prefix",
            "histogramy.simulator",
            "histogramy.utils"
        ],
        "version": "0.1.5"
    },
    "histographer-analysis": {
        "cmdline": [],
        "modules": [
            "histographer.analysis.image",
            "histographer.analysis.image.align",
            "histographer.analysis.image.analysis",
            "histographer.analysis.image.color",
            "histographer.analysis.image.fetch",
            "histographer.analysis.image.high_level",
            "histographer.analysis.image.segment",
            "histographer.analysis.image.tissue_detect",
            "histographer.analysis.ranking",
            "histographer.analysis.ranking.algorithms",
            "histographer.analysis.ranking.error",
            "histographer.analysis.ranking.format",
            "histographer.analysis.ranking.high_level",
            "histographer.analysis.ranking.mock",
            "histographer.analysis.ranking.testing"
        ],
        "version": "1.0.1"
    },
    "histolab": {
        "cmdline": [],
        "modules": [
            "histolab",
            "histolab.data",
            "histolab.data._registry",
            "histolab.exceptions",
            "histolab.filters",
            "histolab.filters.compositions",
            "histolab.filters.image_filters",
            "histolab.filters.image_filters_functional",
            "histolab.filters.morphological_filters",
            "histolab.filters.morphological_filters_functional",
            "histolab.filters.util",
            "histolab.scorer",
            "histolab.slide",
            "histolab.tile",
            "histolab.tiler",
            "histolab.types",
            "histolab.util"
        ],
        "version": "0.1.0"
    },
    "histomicstk": {
        "cmdline": [],
        "modules": [
            "histomicstk",
            "histomicstk.annotations_and_masks",
            "histomicstk.annotations_and_masks.annotation_and_mask_utils",
            "histomicstk.annotations_and_masks.annotation_database_parser",
            "histomicstk.annotations_and_masks.annotations_to_masks_handler",
            "histomicstk.annotations_and_masks.annotations_to_object_mask_handler",
            "histomicstk.annotations_and_masks.masks_to_annotations_handler",
            "histomicstk.annotations_and_masks.polygon_merger",
            "histomicstk.annotations_and_masks.polygon_merger_v2",
            "histomicstk.annotations_and_masks.pyrtree",
            "histomicstk.annotations_and_masks.pyrtree.rect",
            "histomicstk.annotations_and_masks.pyrtree.rtree",
            "histomicstk.annotations_and_masks.review_gallery",
            "histomicstk.cli",
            "histomicstk.cli.BackgroundIntensity",
            "histomicstk.cli.BackgroundIntensity.BackgroundIntensity",
            "histomicstk.cli.ColorDeconvolution",
            "histomicstk.cli.ColorDeconvolution.ColorDeconvolution",
            "histomicstk.cli.ComputeNucleiFeatures",
            "histomicstk.cli.ComputeNucleiFeatures.ComputeNucleiFeatures",
            "histomicstk.cli.NucleiClassification",
            "histomicstk.cli.NucleiClassification.NucleiClassification",
            "histomicstk.cli.NucleiDetection",
            "histomicstk.cli.NucleiDetection.NucleiDetection",
            "histomicstk.cli.PositivePixelCount",
            "histomicstk.cli.PositivePixelCount.PositivePixelCount",
            "histomicstk.cli.SeparateStainsMacenkoPCA",
            "histomicstk.cli.SeparateStainsMacenkoPCA.SeparateStainsMacenkoPCA",
            "histomicstk.cli.SeparateStainsXuSnmf",
            "histomicstk.cli.SeparateStainsXuSnmf.SeparateStainsXuSnmf",
            "histomicstk.cli.utils",
            "histomicstk.features",
            "histomicstk.features.compute_fsd_features",
            "histomicstk.features.compute_global_cell_graph_features",
            "histomicstk.features.compute_gradient_features",
            "histomicstk.features.compute_haralick_features",
            "histomicstk.features.compute_intensity_features",
            "histomicstk.features.compute_morphometry_features",
            "histomicstk.features.compute_nuclei_features",
            "histomicstk.features.graycomatrixext",
            "histomicstk.filters",
            "histomicstk.filters.edge",
            "histomicstk.filters.edge.gaussian_grad",
            "histomicstk.filters.shape",
            "histomicstk.filters.shape.cdog",
            "histomicstk.filters.shape.clog",
            "histomicstk.filters.shape.glog",
            "histomicstk.filters.shape.vesselness",
            "histomicstk.preprocessing",
            "histomicstk.preprocessing.augmentation",
            "histomicstk.preprocessing.augmentation.color_augmentation",
            "histomicstk.preprocessing.color_conversion",
            "histomicstk.preprocessing.color_conversion.lab_mean_std",
            "histomicstk.preprocessing.color_conversion.lab_to_rgb",
            "histomicstk.preprocessing.color_conversion.od_to_rgb",
            "histomicstk.preprocessing.color_conversion.rgb_to_hsi",
            "histomicstk.preprocessing.color_conversion.rgb_to_lab",
            "histomicstk.preprocessing.color_conversion.rgb_to_od",
            "histomicstk.preprocessing.color_conversion.rgb_to_sda",
            "histomicstk.preprocessing.color_conversion.sda_to_rgb",
            "histomicstk.preprocessing.color_deconvolution",
            "histomicstk.preprocessing.color_deconvolution._linalg",
            "histomicstk.preprocessing.color_deconvolution.color_convolution",
            "histomicstk.preprocessing.color_deconvolution.color_deconvolution",
            "histomicstk.preprocessing.color_deconvolution.complement_stain_matrix",
            "histomicstk.preprocessing.color_deconvolution.find_stain_index",
            "histomicstk.preprocessing.color_deconvolution.rgb_separate_stains_macenko_pca",
            "histomicstk.preprocessing.color_deconvolution.rgb_separate_stains_xu_snmf",
            "histomicstk.preprocessing.color_deconvolution.separate_stains_macenko_pca",
            "histomicstk.preprocessing.color_deconvolution.separate_stains_xu_snmf",
            "histomicstk.preprocessing.color_deconvolution.stain_color_map",
            "histomicstk.preprocessing.color_normalization",
            "histomicstk.preprocessing.color_normalization.background_intensity",
            "histomicstk.preprocessing.color_normalization.deconvolution_based_normalization",
            "histomicstk.preprocessing.color_normalization.reinhard",
            "histomicstk.preprocessing.color_normalization.reinhard_stats",
            "histomicstk.saliency",
            "histomicstk.saliency.cellularity_detection_superpixels",
            "histomicstk.saliency.cellularity_detection_thresholding",
            "histomicstk.saliency.tissue_detection",
            "histomicstk.segmentation",
            "histomicstk.segmentation.embed_boundaries",
            "histomicstk.segmentation.label",
            "histomicstk.segmentation.label.area_open",
            "histomicstk.segmentation.label.compact",
            "histomicstk.segmentation.label.condense",
            "histomicstk.segmentation.label.delete",
            "histomicstk.segmentation.label.delete_border",
            "histomicstk.segmentation.label.dilate_xor",
            "histomicstk.segmentation.label.perimeter",
            "histomicstk.segmentation.label.shuffle",
            "histomicstk.segmentation.label.split",
            "histomicstk.segmentation.label.trace_object_boundaries",
            "histomicstk.segmentation.label.width_open",
            "histomicstk.segmentation.level_set",
            "histomicstk.segmentation.level_set.chan_vese",
            "histomicstk.segmentation.level_set.reg_edge",
            "histomicstk.segmentation.nuclear",
            "histomicstk.segmentation.nuclear.detect_nuclei_kofahi",
            "histomicstk.segmentation.nuclear.gaussian_voting",
            "histomicstk.segmentation.nuclear.gvf_tracking",
            "histomicstk.segmentation.nuclear.max_clustering",
            "histomicstk.segmentation.nuclear.min_model",
            "histomicstk.segmentation.positive_pixel_count",
            "histomicstk.segmentation.rag",
            "histomicstk.segmentation.rag_add_layer",
            "histomicstk.segmentation.rag_color",
            "histomicstk.utils",
            "histomicstk.utils.compute_tile_foreground_fraction",
            "histomicstk.utils.convert_image_to_matrix",
            "histomicstk.utils.convert_matrix_to_image",
            "histomicstk.utils.del2",
            "histomicstk.utils.eigen",
            "histomicstk.utils.exclude_nonfinite",
            "histomicstk.utils.fit_poisson_mixture",
            "histomicstk.utils.general_utils",
            "histomicstk.utils.girder_convenience_utils",
            "histomicstk.utils.gradient_diffusion",
            "histomicstk.utils.hessian",
            "histomicstk.utils.merge_colinear",
            "histomicstk.utils.sample_pixels",
            "histomicstk.utils.simple_mask",
            "histomicstk.workflows",
            "histomicstk.workflows.specific_workflows",
            "histomicstk.workflows.workflow_runner"
        ],
        "version": "1.0.6"
    },
    "histomicsui": {
        "cmdline": [],
        "modules": [
            "histomicsui",
            "histomicsui.constants",
            "histomicsui.handlers",
            "histomicsui.models",
            "histomicsui.models.aperio",
            "histomicsui.models.case",
            "histomicsui.models.cohort",
            "histomicsui.models.image",
            "histomicsui.models.meta",
            "histomicsui.models.pathology",
            "histomicsui.models.slide",
            "histomicsui.rest",
            "histomicsui.rest.aperio",
            "histomicsui.rest.hui_resource",
            "histomicsui.rest.image_browse_resource",
            "histomicsui.rest.system",
            "histomicsui.rest.tcga",
            "tests",
            "tests.girder_utilities",
            "tests.test_hui_rest",
            "tests.test_image_browse_endpoints",
            "tests.test_load",
            "tests.test_tcga",
            "tests.test_web_client"
        ],
        "version": "1.0.0.dev84"
    },
    "histoprint": {
        "cmdline": [],
        "modules": [
            "histoprint",
            "histoprint.cli",
            "histoprint.formatter"
        ],
        "version": "1.5.1"
    },
    "histopy": {
        "cmdline": [],
        "modules": [
            "histopy",
            "histopy.hp"
        ],
        "version": "0.6.2"
    },
    "histore": {
        "cmdline": [],
        "modules": [
            "histore",
            "histore.archive",
            "histore.archive.base",
            "histore.archive.manager",
            "histore.archive.manager.base",
            "histore.archive.manager.db",
            "histore.archive.manager.db.base",
            "histore.archive.manager.db.database",
            "histore.archive.manager.db.model",
            "histore.archive.manager.descriptor",
            "histore.archive.manager.fs",
            "histore.archive.manager.mem",
            "histore.archive.manager.persist",
            "histore.archive.merge",
            "histore.archive.provenance",
            "histore.archive.provenance.archive",
            "histore.archive.provenance.base",
            "histore.archive.provenance.column",
            "histore.archive.provenance.describe",
            "histore.archive.provenance.row",
            "histore.archive.provenance.value",
            "histore.archive.reader",
            "histore.archive.row",
            "histore.archive.schema",
            "histore.archive.serialize",
            "histore.archive.serialize.base",
            "histore.archive.serialize.default",
            "histore.archive.snapshot",
            "histore.archive.store",
            "histore.archive.store.base",
            "histore.archive.store.fs",
            "histore.archive.store.fs.base",
            "histore.archive.store.fs.reader",
            "histore.archive.store.fs.writer",
            "histore.archive.store.mem",
            "histore.archive.store.mem.base",
            "histore.archive.store.mem.reader",
            "histore.archive.store.mem.writer",
            "histore.archive.timestamp",
            "histore.archive.value",
            "histore.archive.writer",
            "histore.cli",
            "histore.cli.archive",
            "histore.cli.base",
            "histore.cli.snapshot",
            "histore.config",
            "histore.document",
            "histore.document.base",
            "histore.document.csv",
            "histore.document.csv.base",
            "histore.document.csv.simple",
            "histore.document.csv.sort",
            "histore.document.mem",
            "histore.document.mem.base",
            "histore.document.mem.dataframe",
            "histore.document.mem.json",
            "histore.document.mem.reader",
            "histore.document.reader",
            "histore.document.row",
            "histore.document.schema",
            "histore.key",
            "histore.key.annotate",
            "histore.key.base",
            "histore.tests",
            "histore.tests.base",
            "histore.tests.encode",
            "histore.util",
            "histore.version"
        ],
        "version": "0.1.4"
    },
    "historia": {
        "cmdline": [],
        "modules": [
            "historia",
            "historia.connect",
            "historia.connection.connection",
            "historia.intercept",
            "historia.intercept.create",
            "historia.intercept.delete",
            "historia.intercept.insert",
            "historia.intercept.query_handler",
            "historia.intercept.select",
            "historia.intercept.select_handler",
            "historia.intercept.update",
            "historia.query_execution",
            "historia.query_execution.create",
            "historia.query_execution.delete",
            "historia.query_execution.insert",
            "historia.query_execution.select",
            "historia.query_execution.update",
            "historia.tests.test_connect"
        ],
        "version": "19.2.1"
    },
    "historian": {
        "cmdline": [
            "read-history"
        ],
        "modules": [
            "historian_reader",
            "historian_reader.main",
            "historian_reader.shell"
        ],
        "version": "0.0.3"
    },
    "historic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "historic-crypto": {
        "cmdline": [],
        "modules": [
            "Historic_Crypto",
            "Historic_Crypto.historical_crypto"
        ],
        "version": "0.0.1"
    },
    "historical": {
        "cmdline": [],
        "modules": [
            "historical",
            "historical.attributes",
            "historical.cli",
            "historical.common",
            "historical.common.accounts",
            "historical.common.cloudwatch",
            "historical.common.dynamodb",
            "historical.common.exceptions",
            "historical.common.extensions",
            "historical.common.proxy",
            "historical.common.sqs",
            "historical.common.util",
            "historical.constants",
            "historical.mapping",
            "historical.models",
            "historical.s3",
            "historical.s3.collector",
            "historical.s3.differ",
            "historical.s3.models",
            "historical.s3.poller",
            "historical.security_group",
            "historical.security_group.collector",
            "historical.security_group.differ",
            "historical.security_group.models",
            "historical.security_group.poller",
            "historical.tests",
            "historical.tests.conftest",
            "historical.tests.factories",
            "historical.tests.pynamodb_settings",
            "historical.tests.test_cloudwatch",
            "historical.tests.test_commons",
            "historical.tests.test_proxy",
            "historical.tests.test_s3",
            "historical.tests.test_security_group",
            "historical.tests.test_vpc",
            "historical.vpc",
            "historical.vpc.collector",
            "historical.vpc.differ",
            "historical.vpc.models",
            "historical.vpc.poller"
        ],
        "version": "0.4.10"
    },
    "historical-ciphers": {
        "cmdline": [],
        "modules": [
            "historical_ciphers",
            "historical_ciphers.historical_ciphers",
            "historical_ciphers.tests"
        ],
        "version": "0.1"
    },
    "historical-collection": {
        "cmdline": [],
        "modules": [
            "historical_collection",
            "historical_collection.historical"
        ],
        "version": "0.1.0"
    },
    "historical-data": {
        "cmdline": [],
        "modules": [
            "OHLCdata",
            "OHLCdata.getData",
            "OHLCdata.makeCSV"
        ],
        "version": "0.1.0"
    },
    "historical-reports": {
        "cmdline": [],
        "modules": [
            "historical_reports",
            "historical_reports.__about__",
            "historical_reports.s3",
            "historical_reports.s3.cli",
            "historical_reports.s3.config",
            "historical_reports.s3.entrypoints",
            "historical_reports.s3.generate",
            "historical_reports.s3.models",
            "historical_reports.s3.tests",
            "historical_reports.s3.tests.conftest",
            "historical_reports.s3.tests.factories",
            "historical_reports.s3.tests.test_everything",
            "historical_reports.s3.update",
            "historical_reports.s3.util"
        ],
        "version": "0.2.0"
    },
    "historical-reports-s3": {
        "cmdline": [],
        "modules": [
            "s3",
            "s3.__about__",
            "s3.cli",
            "s3.config",
            "s3.entrypoints",
            "s3.generate",
            "s3.models",
            "s3.tests",
            "s3.tests.conftest",
            "s3.tests.factories",
            "s3.tests.test_everything",
            "s3.update",
            "s3.util"
        ],
        "version": "0.1.1"
    },
    "historical-robots-txt-parser": {
        "cmdline": [],
        "modules": [
            "historical_robots",
            "historical_robots.parser",
            "historical_robots.scraper"
        ],
        "version": "0.1.2"
    },
    "historicity": {
        "cmdline": [],
        "modules": [
            "historicity"
        ],
        "version": "0.1.0"
    },
    "historio": {
        "cmdline": [],
        "modules": [
            "historio",
            "historio.client",
            "historio.core",
            "historio.core.connector",
            "historio.core.models",
            "historio.core.services",
            "historio.definition",
            "historio.definition.api_pb2",
            "historio.definition.api_pb2_grpc",
            "historio.definition.http_pb2",
            "historio.definition.http_pb2_grpc",
            "historio.utils"
        ],
        "version": "0.2"
    },
    "historist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "history": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "history-exploiter": {
        "cmdline": [],
        "modules": [],
        "version": "1.20"
    },
    "history-object": {
        "cmdline": [],
        "modules": [
            "__init__",
            "history_object"
        ],
        "version": "0.2.2"
    },
    "history-set": {
        "cmdline": [],
        "modules": [
            "__init__",
            "history_set"
        ],
        "version": "0.1.5"
    },
    "historybash": {
        "cmdline": [],
        "modules": [
            "historybash"
        ],
        "version": "82"
    },
    "historydb": {
        "cmdline": [],
        "modules": [
            "historydb",
            "historydb.base_client",
            "historydb.gevent_client",
            "historydb.provider",
            "historydb.threading_client",
            "tests",
            "tests.base",
            "tests.base_async_test",
            "tests.server_runner",
            "tests.test_failures",
            "tests.test_gevent_support",
            "tests.test_historydb",
            "tests.test_threading_support"
        ],
        "version": "0.4.1"
    },
    "historydict": {
        "cmdline": [],
        "modules": [
            "historydict"
        ],
        "version": "1.2.3"
    },
    "historylink": {
        "cmdline": [],
        "modules": [
            "historylink",
            "historylink.management",
            "historylink.management.commands",
            "historylink.management.commands.historylink_sync",
            "historylink.manager",
            "historylink.middleware",
            "historylink.models"
        ],
        "version": "0.0.1"
    },
    "histstat": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.5"
    },
    "histutils": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "histview": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "histwithadditives": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "histwithadditives2": {
        "cmdline": [],
        "modules": [
            "HistWithAdditives2",
            "HistWithAdditives2.Prettyhist"
        ],
        "version": "0.0.1"
    },
    "histy": {
        "cmdline": [],
        "modules": [
            "histy",
            "histy.histy"
        ],
        "version": "1.0.0"
    },
    "hit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hit-acs": {
        "cmdline": [],
        "modules": [],
        "version": "20.1.0"
    },
    "hit-csys": {
        "cmdline": [],
        "modules": [
            "hit_csys",
            "hit_csys.beamoptikdll",
            "hit_csys.dvm_parameters",
            "hit_csys.gui_qt",
            "hit_csys.gui_win32",
            "hit_csys.gui_wx",
            "hit_csys.offsets",
            "hit_csys.plugin",
            "hit_csys.stub",
            "hit_csys.util"
        ],
        "version": "18.10.0"
    },
    "hit-the-road-jack": {
        "cmdline": [],
        "modules": [
            "hit_the_road_jack"
        ],
        "version": "0.3"
    },
    "hitac": {
        "cmdline": [
            "hitac.py"
        ],
        "modules": [
            "hitac_pkg"
        ],
        "version": "1.1"
    },
    "hitanshadd": {
        "cmdline": [],
        "modules": [
            "hitanshadd",
            "hitanshadd.add2num",
            "hitanshadd.add3num"
        ],
        "version": "1.1"
    },
    "hitanshmultiply": {
        "cmdline": [],
        "modules": [
            "hitanshmultiply",
            "hitanshmultiply.mult2num",
            "hitanshmultiply.mult3num"
        ],
        "version": "1.0"
    },
    "hitanshsumsquare3": {
        "cmdline": [],
        "modules": [
            "hitanshsumsq3",
            "hitanshsumsq3.sumsquare3"
        ],
        "version": "1.0"
    },
    "hitboxy": {
        "cmdline": [],
        "modules": [
            "hitboxy",
            "hitboxy.ChatClient",
            "hitboxy.MultiChannelChatClient"
        ],
        "version": "0.1.23"
    },
    "hitbtc": {
        "cmdline": [],
        "modules": [
            "hitbtc",
            "hitbtc.client",
            "hitbtc.connector",
            "hitbtc.utils",
            "hitbtc.wss"
        ],
        "version": "1.0.4"
    },
    "hitbtc-wss": {
        "cmdline": [],
        "modules": [
            "hitbtc_wss",
            "hitbtc_wss.client",
            "hitbtc_wss.connector",
            "hitbtc_wss.utils",
            "hitbtc_wss.wss"
        ],
        "version": "1.0.6"
    },
    "hitbtcapi": {
        "cmdline": [],
        "modules": [
            "hitbtcapi",
            "hitbtcapi.client",
            "hitbtcapi.compat",
            "hitbtcapi.errors",
            "hitbtcapi.utils"
        ],
        "version": "1.1.1"
    },
    "hitbtcmonster": {
        "cmdline": [],
        "modules": [
            "HitBTCMonster",
            "HitBTCMonster.api",
            "HitBTCMonster.api.core",
            "HitBTCMonster.api.market",
            "HitBTCMonster.api.trading",
            "HitBTCMonster.wss",
            "HitBTCMonster.wss.core",
            "HitBTCMonster.wss.market",
            "HitBTCMonster.wss.trading"
        ],
        "version": "0.0.3"
    },
    "hitch": {
        "cmdline": [],
        "modules": [
            "hitch",
            "hitch.click",
            "hitch.click._bashcomplete",
            "hitch.click._compat",
            "hitch.click._termui_impl",
            "hitch.click._textwrap",
            "hitch.click.core",
            "hitch.click.decorators",
            "hitch.click.exceptions",
            "hitch.click.formatting",
            "hitch.click.globals",
            "hitch.click.parser",
            "hitch.click.termui",
            "hitch.click.testing",
            "hitch.click.types",
            "hitch.click.utils",
            "hitch.commandline",
            "hitch.hitchdir",
            "hitch.languagestrings"
        ],
        "version": "0.5.7"
    },
    "hitch-pip-tools": {
        "cmdline": [],
        "modules": [
            "piptools",
            "piptools._compat",
            "piptools._compat.contextlib",
            "piptools._compat.tempfile",
            "piptools.cache",
            "piptools.click",
            "piptools.exceptions",
            "piptools.io",
            "piptools.locations",
            "piptools.logging",
            "piptools.repositories",
            "piptools.repositories.base",
            "piptools.repositories.local",
            "piptools.repositories.pypi",
            "piptools.resolver",
            "piptools.scripts",
            "piptools.scripts.compile",
            "piptools.scripts.sync",
            "piptools.sync",
            "piptools.utils",
            "piptools.writer"
        ],
        "version": "1.8.3"
    },
    "hitchat": {
        "cmdline": [],
        "modules": [
            "itchat",
            "itchat.components",
            "itchat.components.contact",
            "itchat.components.hotreload",
            "itchat.components.login",
            "itchat.components.messages",
            "itchat.components.register",
            "itchat.config",
            "itchat.content",
            "itchat.core",
            "itchat.log",
            "itchat.returnvalues",
            "itchat.storage",
            "itchat.storage.messagequeue",
            "itchat.storage.templates",
            "itchat.utils"
        ],
        "version": "1.1.1"
    },
    "hitchbuild": {
        "cmdline": [],
        "modules": [
            "hitchbuild",
            "hitchbuild.build",
            "hitchbuild.utils"
        ],
        "version": "0.6.1"
    },
    "hitchbuildpg": {
        "cmdline": [],
        "modules": [
            "hitchbuildpg",
            "hitchbuildpg.app",
            "hitchbuildpg.databuild",
            "hitchbuildpg.datafiles",
            "hitchbuildpg.server",
            "hitchbuildpg.utils"
        ],
        "version": "0.4.1"
    },
    "hitchbuildpy": {
        "cmdline": [],
        "modules": [
            "hitchbuildpy",
            "hitchbuildpy.pyenv",
            "hitchbuildpy.virtualenv"
        ],
        "version": "0.5.4"
    },
    "hitchbuildvagrant": {
        "cmdline": [],
        "modules": [
            "hitchbuildvagrant",
            "hitchbuildvagrant.box",
            "hitchbuildvagrant.snapshot",
            "hitchbuildvagrant.utils"
        ],
        "version": "0.2.0"
    },
    "hitchcelery": {
        "cmdline": [],
        "modules": [
            "hitchcelery",
            "hitchcelery.celery_service"
        ],
        "version": "0.2.1"
    },
    "hitchchrome": {
        "cmdline": [],
        "modules": [
            "hitchchrome",
            "hitchchrome.chromebuild",
            "hitchchrome.exceptions",
            "hitchchrome.utils"
        ],
        "version": "85.0"
    },
    "hitchcli": {
        "cmdline": [],
        "modules": [
            "hitchcli",
            "hitchcli.command_line_steps"
        ],
        "version": "0.2.6"
    },
    "hitchcron": {
        "cmdline": [],
        "modules": [
            "hitchcron",
            "hitchcron.cron",
            "hitchcron.cron_service"
        ],
        "version": "0.2"
    },
    "hitchdjango": {
        "cmdline": [],
        "modules": [
            "hitchdjango",
            "hitchdjango.django_service"
        ],
        "version": "0.2"
    },
    "hitchdoc": {
        "cmdline": [],
        "modules": [
            "hitchdoc",
            "hitchdoc.database",
            "hitchdoc.documentation",
            "hitchdoc.exceptions",
            "hitchdoc.hitchstory",
            "hitchdoc.recorder"
        ],
        "version": "0.1.1"
    },
    "hitchelasticsearch": {
        "cmdline": [],
        "modules": [
            "hitchelasticsearch",
            "hitchelasticsearch.elastic_package",
            "hitchelasticsearch.elastic_service"
        ],
        "version": "0.2.4"
    },
    "hitchenvironment": {
        "cmdline": [],
        "modules": [
            "hitchenvironment",
            "hitchenvironment.environment"
        ],
        "version": "0.2"
    },
    "hitchexamplefiles": {
        "cmdline": [],
        "modules": [
            "hitchexamplefiles"
        ],
        "version": "0.2.0"
    },
    "hitchhiker": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hitchhttp": {
        "cmdline": [],
        "modules": [
            "hitchhttp",
            "hitchhttp.commandline",
            "hitchhttp.config",
            "hitchhttp.http_request",
            "hitchhttp.http_server_service",
            "hitchhttp.main_request_handler",
            "hitchhttp.mock_rest_uri",
            "hitchhttp.monitor",
            "hitchhttp.status_codes",
            "hitchhttp.utils"
        ],
        "version": "0.4.2"
    },
    "hitchjson": {
        "cmdline": [],
        "modules": [
            "hitchjson",
            "hitchjson.utils"
        ],
        "version": "0.2.0"
    },
    "hitchkey": {
        "cmdline": [],
        "modules": [
            "hitchkey",
            "hitchkey.commandline",
            "hitchkey.languagestrings",
            "hitchkey.utils"
        ],
        "version": "0.6.1"
    },
    "hitchmemcache": {
        "cmdline": [],
        "modules": [
            "hitchmemcache",
            "hitchmemcache.memcache_package",
            "hitchmemcache.memcache_service"
        ],
        "version": "0.2.2"
    },
    "hitchmysql": {
        "cmdline": [],
        "modules": [
            "hitchmysql",
            "hitchmysql.mysql_package",
            "hitchmysql.mysql_service"
        ],
        "version": "0.2.6"
    },
    "hitchnode": {
        "cmdline": [],
        "modules": [
            "hitchnode",
            "hitchnode.node_package",
            "hitchnode.node_service",
            "hitchnode.static_serve"
        ],
        "version": "0.3.2"
    },
    "hitchpostgres": {
        "cmdline": [],
        "modules": [
            "hitchpostgres",
            "hitchpostgres.postgres_package",
            "hitchpostgres.postgres_service"
        ],
        "version": "0.7.0"
    },
    "hitchpylibrarytoolkit": {
        "cmdline": [],
        "modules": [
            "hitchpylibrarytoolkit",
            "hitchpylibrarytoolkit.build",
            "hitchpylibrarytoolkit.deploy",
            "hitchpylibrarytoolkit.docgen",
            "hitchpylibrarytoolkit.engine",
            "hitchpylibrarytoolkit.formatter",
            "hitchpylibrarytoolkit.toolkit"
        ],
        "version": "0.4.0"
    },
    "hitchpython": {
        "cmdline": [],
        "modules": [
            "hitchpython",
            "hitchpython.celery_service",
            "hitchpython.django_service",
            "hitchpython.ipython_kernel_service",
            "hitchpython.ipython_step_library",
            "hitchpython.python_package",
            "hitchpython.python_service"
        ],
        "version": "0.5.3"
    },
    "hitchqs": {
        "cmdline": [],
        "modules": [
            "hitchqs",
            "hitchqs.commandline"
        ],
        "version": "0.4.1"
    },
    "hitchquickstart": {
        "cmdline": [],
        "modules": [
            "hitchquickstart",
            "hitchquickstart.commandline",
            "hitchquickstart.utils"
        ],
        "version": "0.1.4"
    },
    "hitchrabbit": {
        "cmdline": [],
        "modules": [
            "hitchrabbit",
            "hitchrabbit.rabbit_package",
            "hitchrabbit.rabbit_service"
        ],
        "version": "0.2.4"
    },
    "hitchredis": {
        "cmdline": [],
        "modules": [
            "hitchredis",
            "hitchredis.redis_package",
            "hitchredis.redis_service"
        ],
        "version": "0.4.6"
    },
    "hitchrun": {
        "cmdline": [],
        "modules": [
            "hitchrun",
            "hitchrun.commandline",
            "hitchrun.decorators",
            "hitchrun.key_file",
            "hitchrun.maintenance",
            "hitchrun.packages"
        ],
        "version": "0.3.4"
    },
    "hitchrunpy": {
        "cmdline": [],
        "modules": [
            "hitchrunpy",
            "hitchrunpy.example_python_code",
            "hitchrunpy.exceptions"
        ],
        "version": "0.10.0"
    },
    "hitchs3": {
        "cmdline": [],
        "modules": [
            "hitchs3",
            "hitchs3.s3server",
            "hitchs3.service"
        ],
        "version": "0.1"
    },
    "hitchselenium": {
        "cmdline": [],
        "modules": [
            "hitchselenium",
            "hitchselenium.director",
            "hitchselenium.exceptions",
            "hitchselenium.firefox_package",
            "hitchselenium.firefox_service",
            "hitchselenium.profile",
            "hitchselenium.selector",
            "hitchselenium.selenium_service",
            "hitchselenium.server",
            "hitchselenium.step_library",
            "hitchselenium.utils"
        ],
        "version": "0.6.7"
    },
    "hitchserve": {
        "cmdline": [],
        "modules": [
            "hitchserve",
            "hitchserve.hitch_dir",
            "hitchserve.hitch_exception",
            "hitchserve.hitch_service",
            "hitchserve.service_bundle",
            "hitchserve.service_engine",
            "hitchserve.service_handle",
            "hitchserve.service_logs",
            "hitchserve.test_engine",
            "hitchserve.utils"
        ],
        "version": "0.5.1"
    },
    "hitchsmtp": {
        "cmdline": [],
        "modules": [
            "hitchsmtp",
            "hitchsmtp.service",
            "hitchsmtp.smtp",
            "hitchsmtp.smtperrors"
        ],
        "version": "0.2.1"
    },
    "hitchstory": {
        "cmdline": [],
        "modules": [
            "hitchstory",
            "hitchstory.arguments",
            "hitchstory.engine",
            "hitchstory.exceptions",
            "hitchstory.given",
            "hitchstory.result",
            "hitchstory.step_method",
            "hitchstory.story",
            "hitchstory.story_collection",
            "hitchstory.story_file",
            "hitchstory.story_list",
            "hitchstory.story_step",
            "hitchstory.utils"
        ],
        "version": "0.12.1"
    },
    "hitchsystem": {
        "cmdline": [],
        "modules": [
            "hitchsystem",
            "hitchsystem.commandline",
            "hitchsystem.utils"
        ],
        "version": "0.1.5"
    },
    "hitchtest": {
        "cmdline": [],
        "modules": [
            "hitchtest",
            "hitchtest.arguments",
            "hitchtest.commandline",
            "hitchtest.environment",
            "hitchtest.environment.checks",
            "hitchtest.environment.utils",
            "hitchtest.environment.verifier",
            "hitchtest.executionengine",
            "hitchtest.hitch_stacktrace",
            "hitchtest.modified",
            "hitchtest.module",
            "hitchtest.package",
            "hitchtest.result",
            "hitchtest.results",
            "hitchtest.scenario",
            "hitchtest.settings",
            "hitchtest.signal_manager",
            "hitchtest.snapdir",
            "hitchtest.step",
            "hitchtest.suite",
            "hitchtest.test",
            "hitchtest.utils"
        ],
        "version": "0.9.12"
    },
    "hitchtrigger": {
        "cmdline": [],
        "modules": [
            "hitchtrigger",
            "hitchtrigger.block",
            "hitchtrigger.condition",
            "hitchtrigger.exceptions",
            "hitchtrigger.monitor",
            "hitchtrigger.trigger"
        ],
        "version": "0.2"
    },
    "hitchvagrant": {
        "cmdline": [],
        "modules": [
            "hitchvagrant",
            "hitchvagrant.vagrant",
            "hitchvagrant.vagrant_service"
        ],
        "version": "0.1"
    },
    "hitchvm": {
        "cmdline": [],
        "modules": [
            "hitchvm",
            "hitchvm.boxes",
            "hitchvm.recipes",
            "hitchvm.utils",
            "hitchvm.vagrant"
        ],
        "version": "0.2.6"
    },
    "hitcpy": {
        "cmdline": [],
        "modules": [
            "hitcpy",
            "hitcpy.hitcpy",
            "hitcpy.version"
        ],
        "version": "0.1.1"
    },
    "hither": {
        "cmdline": [
            "hither-compute-resource"
        ],
        "modules": [
            "hither",
            "hither._Config",
            "hither._basejobhandler",
            "hither._consolecapture",
            "hither._containermanager",
            "hither._enums",
            "hither._exceptions",
            "hither._execute_job",
            "hither._filelock",
            "hither._generate_source_code_for_function",
            "hither._identity",
            "hither._identity._identity",
            "hither._jobmanager",
            "hither._preventkeyboardinterrupt",
            "hither._run_serialized_job_in_container",
            "hither._serialize_job",
            "hither._shellscript",
            "hither._temporarydirectory",
            "hither._util",
            "hither._workerprocess",
            "hither.computeresource",
            "hither.computeresource._compute_resource_enums",
            "hither.computeresource._computeresourcejobmanager",
            "hither.computeresource._computeresourceworker",
            "hither.computeresource._jobhandlerconnection",
            "hither.computeresource._jobhandlerconnectionworker",
            "hither.computeresource._result_small_enough_to_store_directly",
            "hither.computeresource.computeresource",
            "hither.core",
            "hither.defaultjobhandler",
            "hither.job",
            "hither.jobcache",
            "hither.noop",
            "hither.noop.noop",
            "hither.paralleljobhandler",
            "hither.remotejobhandler",
            "hither.slurmjobhandler",
            "hither.tests",
            "hither.tests.conftest",
            "hither.tests.doubly_defined",
            "hither.tests.doubly_defined.doubly_defined_1",
            "hither.tests.doubly_defined.doubly_defined_2",
            "hither.tests.fixtures",
            "hither.tests.fixtures._common",
            "hither.tests.fixtures._compute_resource",
            "hither.tests.fixtures._general",
            "hither.tests.fixtures._kachery_p2p_daemon",
            "hither.tests.fixtures._util",
            "hither.tests.functions",
            "hither.tests.functions.add",
            "hither.tests.functions.additional_file",
            "hither.tests.functions.arraysum",
            "hither.tests.functions.bad_container",
            "hither.tests.functions.do_nothing",
            "hither.tests.functions.identity",
            "hither.tests.functions.intentional_error",
            "hither.tests.functions.local_module",
            "hither.tests.functions.mult",
            "hither.tests.functions.ones",
            "hither.tests.functions.write_text_file",
            "hither.tests.functions.zeros",
            "hither.tests.load_kachery_text",
            "hither.tests.test_functions",
            "hither.tests.test_misc",
            "hither.tests.test_pipeline",
            "hither.tests.test_remote",
            "hither.tests.test_shellscript"
        ],
        "version": "0.4.1"
    },
    "hither2": {
        "cmdline": [
            "hither2-compute-resource"
        ],
        "modules": [
            "hither2",
            "hither2._consolecapture",
            "hither2._etconf",
            "hither2._filelock",
            "hither2._generate_source_code_for_function",
            "hither2._load_config",
            "hither2._preventkeyboardinterrupt",
            "hither2._run_serialized_job_in_container",
            "hither2._shellscript",
            "hither2._temporarydirectory",
            "hither2._util",
            "hither2.computeresource",
            "hither2.core",
            "hither2.database",
            "hither2.file",
            "hither2.jobcache",
            "hither2.paralleljobhandler",
            "hither2.remotejobhandler",
            "hither2.slurmjobhandler",
            "tests",
            "tests.misc_functions",
            "tests.test_1",
            "tests.test_shellscript"
        ],
        "version": "0.1.2"
    },
    "hithere": {
        "cmdline": [],
        "modules": [
            "hithere"
        ],
        "version": "0.0.1"
    },
    "hithere-vsathyan": {
        "cmdline": [],
        "modules": [
            "HiThere",
            "HiThere.HiThere"
        ],
        "version": "0.0.2"
    },
    "hitherecli": {
        "cmdline": [],
        "modules": [
            "hitherecli",
            "hitherecli.hitherecli"
        ],
        "version": "0.1"
    },
    "hitk": {
        "cmdline": [],
        "modules": [
            "hitk",
            "hitk.basic",
            "hitk.cli",
            "hitk.cli.glob2re",
            "hitk.cli.localdb",
            "hitk.cli.localfiles",
            "hitk.cli.maildir",
            "hitk.cli.mbox",
            "hitk.cli.memo",
            "hitk.cli.term01",
            "hitk.cli.utf7",
            "hitk.common",
            "hitk.constants",
            "hitk.dialogs",
            "hitk.dnd01",
            "hitk.dnd02",
            "hitk.hello",
            "hitk.icon01",
            "hitk.icon02",
            "hitk.launcher"
        ],
        "version": "0.1.2"
    },
    "hitman": {
        "cmdline": [
            "hitman.py"
        ],
        "modules": [
            "urlgrabber",
            "urlgrabber.byterange",
            "urlgrabber.grabber",
            "urlgrabber.mirror",
            "urlgrabber.progress"
        ],
        "version": "1.1"
    },
    "hitnrun": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "hitomi": {
        "cmdline": [],
        "modules": [
            "hitomi",
            "hitomi.commands",
            "hitomi.commands.accounts",
            "hitomi.console",
            "hitomi.main",
            "hitomi.network",
            "hitomi.network.web3",
            "hitomi.version"
        ],
        "version": "0.1.6"
    },
    "hitools": {
        "cmdline": [],
        "modules": [
            "hitools",
            "hitools.functools",
            "hitools.logging"
        ],
        "version": "0.0.3"
    },
    "hitotsu": {
        "cmdline": [],
        "modules": [
            "hitotsu",
            "hitotsu.print_f"
        ],
        "version": "0.1.0"
    },
    "hitran-api": {
        "cmdline": [],
        "modules": [
            "hapi",
            "hapi.hapi"
        ],
        "version": "1.1.1.0"
    },
    "hits": {
        "cmdline": [],
        "modules": [
            "hits",
            "hits.adapters",
            "hits.annotation",
            "hits.bus",
            "hits.external_sort",
            "hits.fasta",
            "hits.fastq",
            "hits.genetic_code",
            "hits.genomes",
            "hits.gff",
            "hits.intensities_illumina",
            "hits.interval",
            "hits.ipython",
            "hits.mapping_tools",
            "hits.paired_end",
            "hits.sam",
            "hits.sw",
            "hits.utilities",
            "hits.variants",
            "hits.visualize_structure",
            "hits/visualize",
            "hits/visualize.define_igv_colors",
            "hits/visualize.fastq",
            "hits/visualize.gels",
            "hits/visualize/interactive",
            "hits/visualize/interactive.external_coffeescript",
            "hits/visualize/interactive.pc"
        ],
        "version": "0.1"
    },
    "hitsquad": {
        "cmdline": [],
        "modules": [
            "hitsquad",
            "hitsquad.hitsquad"
        ],
        "version": "0.2.1"
    },
    "hiv-aapcnt": {
        "cmdline": [],
        "modules": [
            "hivaapcnt",
            "hivaapcnt.hivaapcnt",
            "hivaapcnt/data"
        ],
        "version": "2019.4"
    },
    "hivae": {
        "cmdline": [],
        "modules": [
            "hivae",
            "hivae.VAE_functions",
            "hivae.graph_new",
            "hivae.hivae",
            "hivae.loglik_models_missing_normalize",
            "hivae.model_HIVAE_factorized",
            "hivae.model_HIVAE_inputDropout",
            "hivae.parser_arguments",
            "hivae.read_functions",
            "hivae.utils"
        ],
        "version": "0.17"
    },
    "hivclustering": {
        "cmdline": [
            "TNS",
            "hivnetworkannotate",
            "hivnetworkcsv"
        ],
        "modules": [
            "hivclustering",
            "hivclustering.ll",
            "hivclustering.mtnetwork",
            "hivclustering.networkbuild"
        ],
        "version": "1.6.3"
    },
    "hive": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hive-bt": {
        "cmdline": [],
        "modules": [
            "hive_bt",
            "hive_bt.cli",
            "hive_bt.commands",
            "hive_bt.data",
            "hive_bt.util",
            "hive_bt.vcs",
            "hive_bt.web",
            "hive_bt.web.routes"
        ],
        "version": "0.0.4"
    },
    "hive-builder": {
        "cmdline": [],
        "modules": [],
        "version": "2.1.2"
    },
    "hive-email-job": {
        "cmdline": [],
        "modules": [
            "hiveemailjob",
            "hiveemailjob.main",
            "hiveemailjob.settings"
        ],
        "version": "2.1.1"
    },
    "hive-executor-py": {
        "cmdline": [],
        "modules": [
            "hive",
            "hive.exceptions",
            "hive.executor"
        ],
        "version": "1.0.9.dev1"
    },
    "hive-executor-wasabi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hive-kernel": {
        "cmdline": [],
        "modules": [
            "hive_kernel",
            "hive_kernel.install",
            "hive_kernel.kernel"
        ],
        "version": "0.3.1"
    },
    "hive-networkx": {
        "cmdline": [],
        "modules": [
            "hive_networkx",
            "hive_networkx.hive_networkx"
        ],
        "version": "2020.8.3"
    },
    "hive-progress-bar": {
        "cmdline": [],
        "modules": [
            "hive_progress_bar"
        ],
        "version": "0.0.4"
    },
    "hive-tagbot": {
        "cmdline": [],
        "modules": [
            "tagbot.bot",
            "tagbot.utils"
        ],
        "version": "0.1.1"
    },
    "hive-thrift-py": {
        "cmdline": [],
        "modules": [
            "fb303",
            "fb303.FacebookBase",
            "fb303.FacebookService",
            "fb303.constants",
            "fb303.ttypes",
            "fb303_scripts",
            "fb303_scripts.fb303_simple_mgmt",
            "hive_metastore",
            "hive_metastore.ThriftHiveMetastore",
            "hive_metastore.constants",
            "hive_metastore.ttypes",
            "hive_serde",
            "hive_serde.constants",
            "hive_serde.ttypes",
            "hive_service",
            "hive_service.ThriftHive",
            "hive_service.constants",
            "hive_service.ttypes",
            "queryplan",
            "queryplan.constants",
            "queryplan.ttypes",
            "thrift",
            "thrift.TSCons",
            "thrift.Thrift",
            "thrift.protocol",
            "thrift.protocol.TBinaryProtocol",
            "thrift.protocol.TProtocol",
            "thrift.reflection",
            "thrift.reflection.limited",
            "thrift.reflection.limited.constants",
            "thrift.reflection.limited.ttypes",
            "thrift.server",
            "thrift.server.THttpServer",
            "thrift.server.TNonblockingServer",
            "thrift.server.TServer",
            "thrift.transport",
            "thrift.transport.THttpClient",
            "thrift.transport.TSocket",
            "thrift.transport.TTransport",
            "thrift.transport.TTwisted"
        ],
        "version": "0.0.1"
    },
    "hive-utils": {
        "cmdline": [],
        "modules": [
            "hive_utils",
            "hive_utils.hive_client"
        ],
        "version": "0.0.1"
    },
    "hiveary-agent": {
        "cmdline": [],
        "modules": [
            "hiveary",
            "hiveary.controller",
            "hiveary.daemon",
            "hiveary.info",
            "hiveary.info.dmesg",
            "hiveary.info.logs",
            "hiveary.info.system",
            "hiveary.info.wincom",
            "hiveary.monitors",
            "hiveary.network",
            "hiveary.oauth_client",
            "hiveary.paths"
        ],
        "version": "1.4.0"
    },
    "hivectl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hived": {
        "cmdline": [],
        "modules": [
            "hived",
            "hived.conf",
            "hived.log",
            "hived.process",
            "hived.queue",
            "hived.run_module",
            "hived.trail",
            "hived.worker"
        ],
        "version": "0.9.0"
    },
    "hivedesktop": {
        "cmdline": [],
        "modules": [
            "hivedesktop",
            "hivedesktop.dialogs",
            "hivedesktop.dialogs.about",
            "hivedesktop.dialogs.helpers",
            "hivedesktop.dialogs.options",
            "hivedesktop.dialogs.ui_options",
            "hivedesktop.fix_qt_import_error",
            "hivedesktop.helpers",
            "hivedesktop.hivedesktop_rc",
            "hivedesktop.main",
            "hivedesktop.mdrenderer",
            "hivedesktop.mdx_url",
            "hivedesktop.mdx_video",
            "hivedesktop.store_account_history",
            "hivedesktop.threads",
            "hivedesktop.threads.markdown",
            "hivedesktop.threads.thread",
            "hivedesktop.ui_mainwindow",
            "hivedesktop.widgets",
            "hivedesktop.widgets.webview"
        ],
        "version": "0.3.3"
    },
    "hivedic": {
        "cmdline": [],
        "modules": [
            "hiVedic",
            "hiVedic.hello"
        ],
        "version": "0.2"
    },
    "hiveengine": {
        "cmdline": [],
        "modules": [
            "hiveengine",
            "hiveengine.api",
            "hiveengine.cli",
            "hiveengine.collection",
            "hiveengine.exceptions",
            "hiveengine.market",
            "hiveengine.nft",
            "hiveengine.nftmarket",
            "hiveengine.nfts",
            "hiveengine.rpc",
            "hiveengine.tokenobject",
            "hiveengine.tokens",
            "hiveengine.version",
            "hiveengine.wallet"
        ],
        "version": "0.2.2"
    },
    "hivefdw": {
        "cmdline": [],
        "modules": [
            "hivefdw"
        ],
        "version": "0.0.2"
    },
    "hivehoney": {
        "cmdline": [],
        "modules": [
            "hivehoney",
            "hivehoney.hh"
        ],
        "version": "1.0.4"
    },
    "hivemind": {
        "cmdline": [],
        "modules": [
            "hivemind",
            "hivemind.client",
            "hivemind.client.expert",
            "hivemind.client.moe",
            "hivemind.dht",
            "hivemind.dht.node",
            "hivemind.dht.protocol",
            "hivemind.dht.routing",
            "hivemind.dht.traverse",
            "hivemind.server",
            "hivemind.server.checkpoint_saver",
            "hivemind.server.connection_handler",
            "hivemind.server.dht_handler",
            "hivemind.server.expert_backend",
            "hivemind.server.layers",
            "hivemind.server.layers.dropout",
            "hivemind.server.runtime",
            "hivemind.server.task_pool",
            "hivemind.utils",
            "hivemind.utils.custom_layers",
            "hivemind.utils.grpc",
            "hivemind.utils.logging",
            "hivemind.utils.mpfuture",
            "hivemind.utils.nested",
            "hivemind.utils.networking",
            "hivemind.utils.serializer",
            "hivemind.utils.tensor_descr",
            "hivemind.utils.threading"
        ],
        "version": "0.8.2"
    },
    "hivemind-chatroom": {
        "cmdline": [],
        "modules": [
            "hivemind_chatroom"
        ],
        "version": "0.0.1"
    },
    "hivemind-cli": {
        "cmdline": [],
        "modules": [
            "cli_satellite"
        ],
        "version": "0.4.1"
    },
    "hivemind-plus": {
        "cmdline": [],
        "modules": [
            "hivemindplus",
            "hivemindplus.api",
            "hivemindplus.consts",
            "hivemindplus.exceptions",
            "hivemindplus.helpers",
            "hivemindplus.instance",
            "hivemindplus.instance_processor",
            "hivemindplus.result",
            "hivemindplus.result_processor",
            "hivemindplus.submission_processor",
            "hivemindplus.validation",
            "hivemindplus.workflow"
        ],
        "version": "0.4.4"
    },
    "hivemind-util": {
        "cmdline": [],
        "modules": [
            "hivemindutil",
            "hivemindutil.boundingbox",
            "hivemindutil.exceptions",
            "hivemindutil.hm"
        ],
        "version": "0.1b33"
    },
    "hivemind-voice-sat": {
        "cmdline": [],
        "modules": [
            "mycroft_voice_satellite",
            "mycroft_voice_satellite.configuration",
            "mycroft_voice_satellite.speech",
            "mycroft_voice_satellite.speech.hotword_factory",
            "mycroft_voice_satellite.speech.listener",
            "mycroft_voice_satellite.speech.mic",
            "mycroft_voice_satellite.speech.signal"
        ],
        "version": "1.0.2"
    },
    "hivenetlib": {
        "cmdline": [],
        "modules": [
            "HiveNetLib",
            "HiveNetLib.base_tools",
            "HiveNetLib.base_tools.call_chain_tool",
            "HiveNetLib.base_tools.debug_tool",
            "HiveNetLib.base_tools.exception_tool",
            "HiveNetLib.base_tools.file_tool",
            "HiveNetLib.base_tools.import_tool",
            "HiveNetLib.base_tools.myzipfile",
            "HiveNetLib.base_tools.net_tool",
            "HiveNetLib.base_tools.run_tool",
            "HiveNetLib.base_tools.string_tool",
            "HiveNetLib.base_tools.test_tool",
            "HiveNetLib.base_tools.validate_tool",
            "HiveNetLib.base_tools.value_tool",
            "HiveNetLib.base_tools.wget",
            "HiveNetLib.connection_pool",
            "HiveNetLib.connection_pool.pool_fw",
            "HiveNetLib.formula",
            "HiveNetLib.generic",
            "HiveNetLib.hivenet_error_code",
            "HiveNetLib.interface_tool",
            "HiveNetLib.interface_tool.intf_msg_fw",
            "HiveNetLib.interface_tool.msg_fw",
            "HiveNetLib.interface_tool.msg_json",
            "HiveNetLib.interface_tool.msg_xml",
            "HiveNetLib.interface_tool.protocol_msg_http",
            "HiveNetLib.net_service",
            "HiveNetLib.net_service.http_service",
            "HiveNetLib.net_service.net_service_fw",
            "HiveNetLib.net_service.tcpip_service",
            "HiveNetLib.prompt_plus",
            "HiveNetLib.redirect_stdout",
            "HiveNetLib.simple_cache",
            "HiveNetLib.simple_console",
            "HiveNetLib.simple_console.base_cmd",
            "HiveNetLib.simple_console.conf",
            "HiveNetLib.simple_console.i18n",
            "HiveNetLib.simple_console.server",
            "HiveNetLib.simple_grpc",
            "HiveNetLib.simple_grpc.grpc_client",
            "HiveNetLib.simple_grpc.grpc_server",
            "HiveNetLib.simple_grpc.grpc_tool",
            "HiveNetLib.simple_grpc.msg_pb2",
            "HiveNetLib.simple_grpc.msg_pb2_grpc",
            "HiveNetLib.simple_i18n",
            "HiveNetLib.simple_id",
            "HiveNetLib.simple_log",
            "HiveNetLib.simple_parallel",
            "HiveNetLib.simple_queue",
            "HiveNetLib.simple_server_fw",
            "HiveNetLib.simple_stream",
            "HiveNetLib.simple_xml"
        ],
        "version": "0.8.3"
    },
    "hivenpy": {
        "cmdline": [],
        "modules": [],
        "version": "1.25.0"
    },
    "hiveoffice": {
        "cmdline": [],
        "modules": [
            "hiveoffice",
            "hiveoffice.compute",
            "hiveoffice.compute.adjacency",
            "hiveoffice.compute.least_square_adjustment",
            "hiveoffice.firebase",
            "hiveoffice.firebase.admin_client",
            "hiveoffice.firebase.client"
        ],
        "version": "0.1.0"
    },
    "hiveone-py": {
        "cmdline": [],
        "modules": [
            "hiveone_py",
            "hiveone_py.hive"
        ],
        "version": "0.0.1"
    },
    "hiveplot": {
        "cmdline": [],
        "modules": [
            "hiveplot",
            "hiveplot.hiveplot",
            "hiveplot.test_hiveplot"
        ],
        "version": "2017.10.17.21.7"
    },
    "hiveplotlib": {
        "cmdline": [],
        "modules": [
            "hiveplotlib",
            "hiveplotlib.utils",
            "hiveplotlib.viz"
        ],
        "version": "0.14"
    },
    "hivepy": {
        "cmdline": [],
        "modules": [
            "hive",
            "hive.account",
            "hive.aes",
            "hive.amount",
            "hive.block",
            "hive.blockchain",
            "hive.blog",
            "hive.cli",
            "hive.commit",
            "hive.converter",
            "hive.dex",
            "hive.hive",
            "hive.hived",
            "hive.instance",
            "hive.post",
            "hive.profile",
            "hive.transactionbuilder",
            "hive.utils",
            "hive.wallet",
            "hive.witness",
            "hivebase",
            "hivebase.account",
            "hivebase.base58",
            "hivebase.bip38",
            "hivebase.chains",
            "hivebase.dictionary",
            "hivebase.exceptions",
            "hivebase.http_client",
            "hivebase.memo",
            "hivebase.operationids",
            "hivebase.operations",
            "hivebase.storage",
            "hivebase.transactions",
            "hivebase.types"
        ],
        "version": "0.9.10001"
    },
    "hiveqlkernel": {
        "cmdline": [],
        "modules": [
            "hiveql",
            "hiveql.constants",
            "hiveql.install",
            "hiveql.kernel",
            "hiveql.main",
            "hiveql.tool_sql"
        ],
        "version": "1.0.20"
    },
    "hiver": {
        "cmdline": [],
        "modules": [
            "hiver",
            "hiver.fb303",
            "hiver.fb303.FacebookBase",
            "hiver.fb303.FacebookService",
            "hiver.fb303.constants",
            "hiver.fb303.ttypes",
            "hiver.fb303_scripts",
            "hiver.fb303_scripts.fb303_simple_mgmt",
            "hiver.hive_metastore",
            "hiver.hive_metastore.ThriftHiveMetastore",
            "hiver.hive_metastore.constants",
            "hiver.hive_metastore.ttypes",
            "hiver.hive_serde",
            "hiver.hive_serde.constants",
            "hiver.hive_serde.ttypes",
            "hiver.hive_service",
            "hiver.hive_service.ThriftHive",
            "hiver.hive_service.constants",
            "hiver.hive_service.ttypes",
            "hiver.queryplan",
            "hiver.queryplan.constants",
            "hiver.queryplan.ttypes"
        ],
        "version": "0.2.1"
    },
    "hiverunner": {
        "cmdline": [],
        "modules": [
            "hiverunner"
        ],
        "version": "1.0.1"
    },
    "hivesigner": {
        "cmdline": [],
        "modules": [
            "hivesigner",
            "hivesigner.client",
            "hivesigner.defaults",
            "hivesigner.mixins",
            "hivesigner.operations",
            "hivesigner.utils"
        ],
        "version": "0.1.0"
    },
    "hivethriftpy": {
        "cmdline": [],
        "modules": [
            "hivethriftpy",
            "hivethriftpy.cli"
        ],
        "version": "0.1.1"
    },
    "hivetoolkit": {
        "cmdline": [],
        "modules": [
            "hivetoolkit",
            "hivetoolkit.crawlers",
            "hivetoolkit.crawlers.crawlers",
            "hivetoolkit.crawlers.crawlers.basecrawler",
            "hivetoolkit.crawlers.crawlers.commentcrawler",
            "hivetoolkit.crawlers.crawlers.votecrawler",
            "hivetoolkit.crawlers.criterias",
            "hivetoolkit.crawlers.criterias.basecriteria",
            "hivetoolkit.crawlers.criterias.commentcriteria",
            "hivetoolkit.utils",
            "hivetoolkit.utils.arguments",
            "hivetoolkit.utils.beem_type_handling",
            "hivetoolkit.utils.beem_type_handling.amount",
            "hivetoolkit.utils.beem_type_handling.comment",
            "hivetoolkit.utils.blockchains",
            "hivetoolkit.utils.utils"
        ],
        "version": "0.0.2"
    },
    "hivfacts": {
        "cmdline": [],
        "modules": [
            "hivfacts",
            "hivfacts.hivaapcnt",
            "hivfacts.hivapobec",
            "hivfacts.hivcodonpcnt",
            "hivfacts/data"
        ],
        "version": "2019.8"
    },
    "hivmmer": {
        "cmdline": [
            "hivmmer"
        ],
        "modules": [
            "hivmmer",
            "hivmmer.codons",
            "hivmmer.consensus",
            "hivmmer.drms",
            "hivmmer.filter",
            "hivmmer.report",
            "hivmmer.table",
            "hivmmer.translate"
        ],
        "version": "0.2.1"
    },
    "hivtrace": {
        "cmdline": [],
        "modules": [
            "hivtrace",
            "hivtrace.hivtrace",
            "hivtrace.hivtraceviz",
            "hivtrace.strip_drams"
        ],
        "version": "0.6.2"
    },
    "hivy": {
        "cmdline": [],
        "modules": [
            "hivy",
            "hivy.auth",
            "hivy.conf",
            "hivy.core",
            "hivy.logger",
            "hivy.node",
            "hivy.node.factory",
            "hivy.node.foundation",
            "hivy.reactor",
            "hivy.reactor.handler",
            "hivy.reactor.hooks",
            "hivy.reactor.hooks.utils",
            "hivy.reactor.reactor",
            "hivy.resources",
            "hivy.resources.node",
            "hivy.resources.system",
            "hivy.settings",
            "hivy.test",
            "hivy.utils"
        ],
        "version": "0.0.6"
    },
    "hiwenet": {
        "cmdline": [],
        "modules": [
            "hiwenet",
            "hiwenet._version",
            "hiwenet.analyze_distance_behaviour",
            "hiwenet.more_metrics",
            "hiwenet.non_pairwise",
            "hiwenet.pairwise_dist",
            "hiwenet.test_hiwenet",
            "hiwenet.test_medpy",
            "hiwenet.utils"
        ],
        "version": "0.4.4.post1"
    },
    "hiwi": {
        "cmdline": [],
        "modules": [
            "hiwi",
            "hiwi.hiwi",
            "hiwi.hiwierrors",
            "hiwi.main"
        ],
        "version": "0.1"
    },
    "hiwi-test-joker": {
        "cmdline": [],
        "modules": [
            "hiwi_test_joker",
            "hiwi_test_joker.joke"
        ],
        "version": "0.1.dev0"
    },
    "hiword": {
        "cmdline": [],
        "modules": [
            "hiword",
            "hiword.dataloader",
            "hiword.extractor",
            "hiword.inspect",
            "hiword.zh_hans"
        ],
        "version": "0.2.6"
    },
    "hiworker": {
        "cmdline": [],
        "modules": [
            "sample",
            "sample.greeting"
        ],
        "version": "0.0.2"
    },
    "hiworkflow": {
        "cmdline": [],
        "modules": [
            "workflowapp",
            "workflowapp.admin",
            "workflowapp.apps",
            "workflowapp.createflow",
            "workflowapp.migrations",
            "workflowapp.migrations.0001_initial",
            "workflowapp.migrations.0002_trigger",
            "workflowapp.migrations.0003_auto_20160308_0709",
            "workflowapp.migrations.0004_auto_20160308_0952",
            "workflowapp.migrations.0005_auto_20160308_1403",
            "workflowapp.migrations.0006_assignee_assigned_by",
            "workflowapp.migrations.0007_auto_20160309_1223",
            "workflowapp.migrations.0008_auto_20160309_1228",
            "workflowapp.migrations.0009_auto_20160310_1331",
            "workflowapp.migrations.0010_state_is_automated",
            "workflowapp.models",
            "workflowapp.tests",
            "workflowapp.views"
        ],
        "version": "3.0"
    },
    "hiworld": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hix": {
        "cmdline": [],
        "modules": [
            "hix",
            "hix.hi"
        ],
        "version": "1.0.1"
    },
    "hiya": {
        "cmdline": [],
        "modules": [
            "hiya"
        ],
        "version": "0.1"
    },
    "hiyapyco": {
        "cmdline": [],
        "modules": [
            "hiyapyco",
            "hiyapyco.odyldo",
            "hiyapyco.version"
        ],
        "version": "0.4.16"
    },
    "hiyori": {
        "cmdline": [],
        "modules": [
            "hiyori",
            "hiyori._version",
            "hiyori.bodies",
            "hiyori.connection",
            "hiyori.constants",
            "hiyori.exceptions",
            "hiyori.http_client",
            "hiyori.messages",
            "hiyori.multipart"
        ],
        "version": "0.1.3"
    },
    "hizashi-utils": {
        "cmdline": [],
        "modules": [
            "hizashi_utils",
            "hizashi_utils.modules",
            "hizashi_utils.utils"
        ],
        "version": "0.4.1"
    },
    "hizzard": {
        "cmdline": [],
        "modules": [
            "hizzard",
            "hizzard._version",
            "hizzard.core"
        ],
        "version": "0.0.9"
    },
    "hj1357pdf": {
        "cmdline": [],
        "modules": [
            "hJ1357pdf",
            "hJ1357pdf.pdf2image",
            "hJ1357pdf.pdf2text"
        ],
        "version": "1.0"
    },
    "hjc-recursion": {
        "cmdline": [],
        "modules": [
            "recursion"
        ],
        "version": "1.0.0"
    },
    "hjexcel": {
        "cmdline": [],
        "modules": [
            "hjexcel",
            "hjexcel.todict",
            "hjexcel.tosqlite"
        ],
        "version": "1.1.2"
    },
    "hjjpcj": {
        "cmdline": [],
        "modules": [
            "hjjp",
            "hjjp.hjjp",
            "hjjp.hjjp_jiu",
            "hjjp.hjjp_no-cookie",
            "hjjp.hjjp_no_function",
            "hjjp.hjjp_noselector",
            "hjjp.xpath_test"
        ],
        "version": "0.9.8.7"
    },
    "hjn": {
        "cmdline": [],
        "modules": [
            "hjn",
            "hjn.H8mess",
            "hjn.examMeso",
            "hjn.hjnDAA",
            "hjn.hjnFTP",
            "hjn.hjnGIS",
            "hjn.hjnIDW",
            "hjn.hjnKDTree",
            "hjn.hjnLAPSTransform",
            "hjn.hjnProj",
            "hjn.matplotlibMess",
            "hjn.mkNCHJN",
            "hjn.newTypeRadar",
            "hjn.test"
        ],
        "version": "0.1.77"
    },
    "hjoin": {
        "cmdline": [],
        "modules": [
            "hjoin",
            "hjoin.core"
        ],
        "version": "0.2.0"
    },
    "hjs": {
        "cmdline": [],
        "modules": [
            "hjs",
            "hjs.version"
        ],
        "version": "1.1.7"
    },
    "hjson": {
        "cmdline": [
            "hjson",
            "hjson.cmd"
        ],
        "modules": [
            "hjson",
            "hjson.compat",
            "hjson.decoder",
            "hjson.encoder",
            "hjson.encoderH",
            "hjson.ordered_dict",
            "hjson.scanner",
            "hjson.tests",
            "hjson.tests.test_bigint_as_string",
            "hjson.tests.test_bitsize_int_as_string",
            "hjson.tests.test_check_circular",
            "hjson.tests.test_decimal",
            "hjson.tests.test_decode",
            "hjson.tests.test_default",
            "hjson.tests.test_dump",
            "hjson.tests.test_encode_basestring_ascii",
            "hjson.tests.test_errors",
            "hjson.tests.test_fail",
            "hjson.tests.test_float",
            "hjson.tests.test_for_json",
            "hjson.tests.test_hjson",
            "hjson.tests.test_indent",
            "hjson.tests.test_item_sort_key",
            "hjson.tests.test_namedtuple",
            "hjson.tests.test_pass1",
            "hjson.tests.test_pass2",
            "hjson.tests.test_pass3",
            "hjson.tests.test_recursion",
            "hjson.tests.test_scanstring",
            "hjson.tests.test_separators",
            "hjson.tests.test_tool",
            "hjson.tests.test_tuple",
            "hjson.tests.test_unicode",
            "hjson.tool"
        ],
        "version": "3.0.2"
    },
    "hjtestlib": {
        "cmdline": [],
        "modules": [
            "hjtestlib",
            "hjtestlib.hjtest"
        ],
        "version": "1.0.0"
    },
    "hjun": {
        "cmdline": [],
        "modules": [
            "HJUN",
            "HJUN.hj",
            "HJUN.test_pack"
        ],
        "version": "0.2.2"
    },
    "hjun2": {
        "cmdline": [],
        "modules": [
            "Hjun2",
            "Hjun2.hj",
            "Hjun2.test_pack"
        ],
        "version": "0.1.0"
    },
    "hjutils": {
        "cmdline": [],
        "modules": [
            "hjutils",
            "hjutils.hjutils",
            "hjutils.image_storage"
        ],
        "version": "0.4.1"
    },
    "hjw-distributions": {
        "cmdline": [],
        "modules": [
            "hjw-distributions",
            "hjw-distributions.Binomialdistribution",
            "hjw-distributions.Gaussiandistribution",
            "hjw-distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hjy-abc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hk-distributions": {
        "cmdline": [],
        "modules": [
            "hk-distributions",
            "hk-distributions.Binomialdistribution",
            "hk-distributions.Gaussiandistribution",
            "hk-distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hk-first-pypi-upload": {
        "cmdline": [
            "dokr"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hk-homepage": {
        "cmdline": [],
        "modules": [
            "hk_homepage",
            "hk_homepage.router",
            "test"
        ],
        "version": "0.1.0"
    },
    "hk80": {
        "cmdline": [],
        "modules": [
            "hk80",
            "hk80.coordinates",
            "hk80.hk80"
        ],
        "version": "1.0.1"
    },
    "hkavr": {
        "cmdline": [],
        "modules": [
            "hkavr",
            "hkavr.hkavr"
        ],
        "version": "0.0.5"
    },
    "hkb-diamondsquare": {
        "cmdline": [],
        "modules": [
            "hkb_diamondsquare",
            "hkb_diamondsquare.DiamondSquare"
        ],
        "version": "1.0.2"
    },
    "hkdf": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hkdm": {
        "cmdline": [],
        "modules": [
            "hkdm",
            "hkdm.backends",
            "hkdm.cache",
            "hkdm.cli",
            "hkdm.commands",
            "hkdm.configuration",
            "hkdm.interactive",
            "hkdm.legacy_backends",
            "hkdm.maid",
            "hkdm.storage",
            "hkdm.tests",
            "hkdm.utils"
        ],
        "version": "1.9.0"
    },
    "hkibg-qcloud-cos-keeper": {
        "cmdline": [],
        "modules": [
            "hkibg_qcloud_cos_keeper",
            "hkibg_qcloud_cos_keeper.args_util",
            "hkibg_qcloud_cos_keeper.config_util",
            "hkibg_qcloud_cos_keeper.cos_util",
            "hkibg_qcloud_cos_keeper.date_util",
            "hkibg_qcloud_cos_keeper.decorator",
            "hkibg_qcloud_cos_keeper.generic_util"
        ],
        "version": "0.0.3"
    },
    "hkj": {
        "cmdline": [],
        "modules": [
            "hkj",
            "hkj.sample"
        ],
        "version": "1.0.0"
    },
    "hkjournalist": {
        "cmdline": [],
        "modules": [
            "hkjournalist",
            "hkjournalist.journalist"
        ],
        "version": "0.0.6"
    },
    "hklab": {
        "cmdline": [],
        "modules": [
            "hklab",
            "hklab.cFunction"
        ],
        "version": "0.5.0"
    },
    "hklab2": {
        "cmdline": [],
        "modules": [
            "hklab2",
            "hklab2.cFunction"
        ],
        "version": "0.25"
    },
    "hklab3": {
        "cmdline": [],
        "modules": [
            "hklab2",
            "hklab2.cFunction2"
        ],
        "version": "0.0.4"
    },
    "hklpy": {
        "cmdline": [],
        "modules": [
            "hkl",
            "hkl._version",
            "hkl.calc",
            "hkl.context",
            "hkl.diffract",
            "hkl.engine",
            "hkl.sample",
            "hkl.util",
            "tests",
            "tests.config",
            "tests.test_tardis"
        ],
        "version": "0.3.14"
    },
    "hko-weather": {
        "cmdline": [
            "hko_weather"
        ],
        "modules": [
            "hko_weather",
            "hko_weather.models"
        ],
        "version": "0.1.1"
    },
    "hkobservatory": {
        "cmdline": [],
        "modules": [
            "hkobservatory"
        ],
        "version": "1.0.6"
    },
    "hkp4py": {
        "cmdline": [],
        "modules": [
            "hkp4py",
            "hkp4py.client",
            "hkp4py.utils"
        ],
        "version": "0.2.3.1"
    },
    "hksolvemaze": {
        "cmdline": [],
        "modules": [
            "hksolvemaze"
        ],
        "version": "0.1"
    },
    "hksync": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "hktestpack": {
        "cmdline": [],
        "modules": [
            "hktestpack",
            "hktestpack.hktest",
            "hktestpack.hktest.__version__",
            "hktestpack.hktest.hktest",
            "hktestpack.hktest.utils",
            "hktestpack.hktest1",
            "hktestpack.hktest1.hktest1"
        ],
        "version": "1.0.2"
    },
    "hktools": {
        "cmdline": [],
        "modules": [
            "hktools",
            "hktools.test"
        ],
        "version": "0.1.0"
    },
    "hktvtrack": {
        "cmdline": [],
        "modules": [
            "hktvtrack",
            "hktvtrack.track"
        ],
        "version": "0.0.2"
    },
    "hku-diabetes": {
        "cmdline": [],
        "modules": [
            "hku_diabetes",
            "hku_diabetes.analytics",
            "hku_diabetes.config",
            "hku_diabetes.importer",
            "hku_diabetes.plot",
            "tests",
            "tests.test_analytics",
            "tests.test_importer"
        ],
        "version": "0.0.2"
    },
    "hkube-debbuging-python-api": {
        "cmdline": [],
        "modules": [
            "hkube_debbuging_python_api",
            "hkube_debbuging_python_api.__version__",
            "hkube_debbuging_python_api.algorithm",
            "hkube_debbuging_python_api.builder",
            "hkube_debbuging_python_api.flow_input",
            "hkube_debbuging_python_api.pipeline",
            "hkube_debbuging_python_api.singleton",
            "hkube_debbuging_python_api.wcClient"
        ],
        "version": "0.0.4"
    },
    "hkube-python-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hkube-python-wrapper": {
        "cmdline": [],
        "modules": [
            "hkube_python_wrapper",
            "hkube_python_wrapper.__version__",
            "hkube_python_wrapper.cache",
            "hkube_python_wrapper.cache.caching",
            "hkube_python_wrapper.codeApi",
            "hkube_python_wrapper.codeApi.execution",
            "hkube_python_wrapper.codeApi.hkube_api",
            "hkube_python_wrapper.codeApi.waitFor",
            "hkube_python_wrapper.communication",
            "hkube_python_wrapper.communication.DataRequest",
            "hkube_python_wrapper.communication.DataServer",
            "hkube_python_wrapper.communication.zmq",
            "hkube_python_wrapper.communication.zmq.BaseServer",
            "hkube_python_wrapper.communication.zmq.ZMQPingServer",
            "hkube_python_wrapper.communication.zmq.ZMQRequest",
            "hkube_python_wrapper.communication.zmq.ZMQServer",
            "hkube_python_wrapper.communication.zmq.ZMQServers",
            "hkube_python_wrapper.communication.zmq.consts",
            "hkube_python_wrapper.config",
            "hkube_python_wrapper.config.config",
            "hkube_python_wrapper.storage",
            "hkube_python_wrapper.storage.base_storage_manager",
            "hkube_python_wrapper.storage.fs_adapter",
            "hkube_python_wrapper.storage.s3_adapter",
            "hkube_python_wrapper.storage.storage_manager",
            "hkube_python_wrapper.storage.task_output_manager",
            "hkube_python_wrapper.tracing",
            "hkube_python_wrapper.tracing.tracer",
            "hkube_python_wrapper.util",
            "hkube_python_wrapper.util.decorators",
            "hkube_python_wrapper.util.encoding",
            "hkube_python_wrapper.util.object_path",
            "hkube_python_wrapper.util.percentile",
            "hkube_python_wrapper.util.queueImpl",
            "hkube_python_wrapper.util.timerImpl",
            "hkube_python_wrapper.util.type_check",
            "hkube_python_wrapper.wrapper",
            "hkube_python_wrapper.wrapper.algorunner",
            "hkube_python_wrapper.wrapper.data_adapter",
            "hkube_python_wrapper.wrapper.messages",
            "hkube_python_wrapper.wrapper.methods",
            "hkube_python_wrapper.wrapper.wc",
            "tests",
            "tests.configs",
            "tests.configs.config",
            "tests.conftest",
            "tests.mock_ws_server",
            "tests.mocks",
            "tests.mocks.mockdata",
            "tests.test_alg",
            "tests.test_alg.main",
            "tests.test_cache",
            "tests.test_communication",
            "tests.test_data_adapter",
            "tests.test_encoding",
            "tests.test_hkube_api",
            "tests.test_storage_manager_fs",
            "tests.test_storage_manager_s3",
            "tests.test_tracer",
            "tests.test_utils_getpath",
            "tests.test_wrapper",
            "tests.xtest_communication",
            "tests.xtest_encoding"
        ],
        "version": "2.0.28"
    },
    "hkube-websocket-client": {
        "cmdline": [
            "wsdump.py"
        ],
        "modules": [
            "websocket",
            "websocket._abnf",
            "websocket._app",
            "websocket._cookiejar",
            "websocket._core",
            "websocket._exceptions",
            "websocket._handshake",
            "websocket._http",
            "websocket._logging",
            "websocket._socket",
            "websocket._ssl_compat",
            "websocket._url",
            "websocket._utils",
            "websocket.tests",
            "websocket.tests.test_cookiejar",
            "websocket.tests.test_websocket"
        ],
        "version": "0.56.1"
    },
    "hkv4delfland": {
        "cmdline": [],
        "modules": [
            "hkv4delfland",
            "hkv4delfland.core",
            "hkv4delfland.core.plausibility",
            "hkv4delfland.core.waterlevelstat",
            "hkv4delfland.io",
            "hkv4delfland.io.bui",
            "hkv4delfland.io.his"
        ],
        "version": "1.1.3"
    },
    "hkvfewspy": {
        "cmdline": [],
        "modules": [
            "hkvfewspy",
            "hkvfewspy.io",
            "hkvfewspy.io.rest_fewspi",
            "hkvfewspy.io.soap_fewspi",
            "hkvfewspy.schemas",
            "hkvfewspy.schemas.timeseries",
            "hkvfewspy.utils",
            "hkvfewspy.utils.pi_helper",
            "hkvfewspy.utils.query_helper",
            "hkvfewspy.utils.simplenamespace",
            "hkvfewspy.utils.untangle"
        ],
        "version": "0.8"
    },
    "hkvportal": {
        "cmdline": [],
        "modules": [
            "hkvportal",
            "hkvportal.services",
            "hkvportal.untangle"
        ],
        "version": "0.4"
    },
    "hkvsobekpy": {
        "cmdline": [],
        "modules": [
            "hkvsobekpy",
            "hkvsobekpy.core",
            "hkvsobekpy.core.plausibility",
            "hkvsobekpy.core.utils",
            "hkvsobekpy.core.waterlevelstat",
            "hkvsobekpy.io",
            "hkvsobekpy.io.bui",
            "hkvsobekpy.io.his"
        ],
        "version": "1.5"
    },
    "hkvwaporpy": {
        "cmdline": [],
        "modules": [
            "hkvwaporpy",
            "hkvwaporpy.fao_wapor_api"
        ],
        "version": "0.7.2"
    },
    "hkw": {
        "cmdline": [],
        "modules": [
            "hkw"
        ],
        "version": "1.1"
    },
    "hl": {
        "cmdline": [],
        "modules": [
            "hl",
            "hl.db",
            "hl.hl_cli",
            "hl.hlist",
            "hl.repo",
            "hl.search",
            "hl.tests",
            "hl.tests.test_search"
        ],
        "version": "0.2.0"
    },
    "hl-colours": {
        "cmdline": [],
        "modules": [
            "hl",
            "hl.colours"
        ],
        "version": "0.1.4"
    },
    "hl-pas-samlplugin": {
        "cmdline": [],
        "modules": [
            "hl",
            "hl.pas",
            "hl.pas.samlplugin",
            "hl.pas.samlplugin.browser",
            "hl.pas.samlplugin.browser.views",
            "hl.pas.samlplugin.client",
            "hl.pas.samlplugin.install",
            "hl.pas.samlplugin.interfaces",
            "hl.pas.samlplugin.plugin",
            "hl.pas.samlplugin.saml2",
            "hl.pas.samlplugin.saml2.assertion",
            "hl.pas.samlplugin.saml2.attribute_converter",
            "hl.pas.samlplugin.saml2.attribute_resolver",
            "hl.pas.samlplugin.saml2.attributemaps",
            "hl.pas.samlplugin.saml2.attributemaps.basic",
            "hl.pas.samlplugin.saml2.attributemaps.saml_uri",
            "hl.pas.samlplugin.saml2.attributemaps.shibboleth_uri",
            "hl.pas.samlplugin.saml2.authn",
            "hl.pas.samlplugin.saml2.authn_context",
            "hl.pas.samlplugin.saml2.authn_context.ippword",
            "hl.pas.samlplugin.saml2.authn_context.mobiletwofactor",
            "hl.pas.samlplugin.saml2.authn_context.ppt",
            "hl.pas.samlplugin.saml2.authn_context.pword",
            "hl.pas.samlplugin.saml2.authn_context.sslcert",
            "hl.pas.samlplugin.saml2.authn_context.timesync",
            "hl.pas.samlplugin.saml2.authn_context.types",
            "hl.pas.samlplugin.saml2.cache",
            "hl.pas.samlplugin.saml2.cipher",
            "hl.pas.samlplugin.saml2.client",
            "hl.pas.samlplugin.saml2.client_base",
            "hl.pas.samlplugin.saml2.config",
            "hl.pas.samlplugin.saml2.discovery",
            "hl.pas.samlplugin.saml2.ecp",
            "hl.pas.samlplugin.saml2.ecp_client",
            "hl.pas.samlplugin.saml2.entity",
            "hl.pas.samlplugin.saml2.entity_category",
            "hl.pas.samlplugin.saml2.entity_category.edugain",
            "hl.pas.samlplugin.saml2.entity_category.swamid",
            "hl.pas.samlplugin.saml2.eptid",
            "hl.pas.samlplugin.saml2.extension",
            "hl.pas.samlplugin.saml2.extension.dri",
            "hl.pas.samlplugin.saml2.extension.idpdisc",
            "hl.pas.samlplugin.saml2.extension.mdattr",
            "hl.pas.samlplugin.saml2.extension.mdrpi",
            "hl.pas.samlplugin.saml2.extension.mdui",
            "hl.pas.samlplugin.saml2.extension.shibmd",
            "hl.pas.samlplugin.saml2.extension.ui",
            "hl.pas.samlplugin.saml2.httpbase",
            "hl.pas.samlplugin.saml2.httputil",
            "hl.pas.samlplugin.saml2.ident",
            "hl.pas.samlplugin.saml2.mcache",
            "hl.pas.samlplugin.saml2.md",
            "hl.pas.samlplugin.saml2.mdbcache",
            "hl.pas.samlplugin.saml2.mdie",
            "hl.pas.samlplugin.saml2.mdstore",
            "hl.pas.samlplugin.saml2.metadata",
            "hl.pas.samlplugin.saml2.mongo_store",
            "hl.pas.samlplugin.saml2.pack",
            "hl.pas.samlplugin.saml2.population",
            "hl.pas.samlplugin.saml2.profile",
            "hl.pas.samlplugin.saml2.profile.ecp",
            "hl.pas.samlplugin.saml2.profile.paos",
            "hl.pas.samlplugin.saml2.request",
            "hl.pas.samlplugin.saml2.response",
            "hl.pas.samlplugin.saml2.s_utils",
            "hl.pas.samlplugin.saml2.saml",
            "hl.pas.samlplugin.saml2.samlp",
            "hl.pas.samlplugin.saml2.schema",
            "hl.pas.samlplugin.saml2.schema.soap",
            "hl.pas.samlplugin.saml2.schema.soapenv",
            "hl.pas.samlplugin.saml2.schema.wsdl",
            "hl.pas.samlplugin.saml2.sdb",
            "hl.pas.samlplugin.saml2.server",
            "hl.pas.samlplugin.saml2.sigver",
            "hl.pas.samlplugin.saml2.soap",
            "hl.pas.samlplugin.saml2.time_util",
            "hl.pas.samlplugin.saml2.validate",
            "hl.pas.samlplugin.saml2.virtual_org",
            "hl.pas.samlplugin.saml2.xmldsig",
            "hl.pas.samlplugin.saml2.xmlenc",
            "hl.pas.samlplugin.tests",
            "hl.pas.samlplugin.tests.base",
            "hl.pas.samlplugin.tests.mocks",
            "hl.pas.samlplugin.tests.test_properties",
            "hl.pas.samlplugin.tests.test_saml2",
            "hl.pas.samlplugin.util"
        ],
        "version": "1.3"
    },
    "hl-plone-boardnotifications": {
        "cmdline": [],
        "modules": [
            "hl",
            "hl.plone",
            "hl.plone.boardnotifications",
            "hl.plone.boardnotifications.browser",
            "hl.plone.boardnotifications.browser.mailin",
            "hl.plone.boardnotifications.browser.views",
            "hl.plone.boardnotifications.eventhandlers",
            "hl.plone.boardnotifications.interfaces",
            "hl.plone.boardnotifications.notify",
            "hl.plone.boardnotifications.subscribe",
            "hl.plone.boardnotifications.tests",
            "hl.plone.boardnotifications.tests.mocks",
            "hl.plone.boardnotifications.tests.test_notifier",
            "hl.plone.boardnotifications.tests.test_subscription",
            "hl.plone.boardnotifications.upgrades"
        ],
        "version": "1.1"
    },
    "hl-tables": {
        "cmdline": [],
        "modules": [
            "hl_tables",
            "hl_tables.ast_utils",
            "hl_tables.atlas",
            "hl_tables.atlas.vectors",
            "hl_tables.awkward",
            "hl_tables.awkward.awkward_runner",
            "hl_tables.local",
            "hl_tables.plot",
            "hl_tables.runner",
            "hl_tables.sequences",
            "hl_tables.servicex",
            "hl_tables.servicex.xaod_runner"
        ],
        "version": "1.0.0"
    },
    "hl-vt100": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hl7": {
        "cmdline": [],
        "modules": [
            "hl7",
            "hl7.accessor",
            "hl7.client",
            "hl7.containers",
            "hl7.datatypes",
            "hl7.mllp",
            "hl7.mllp.exceptions",
            "hl7.mllp.streams",
            "hl7.parser",
            "hl7.util",
            "hl7.version"
        ],
        "version": "0.4.1"
    },
    "hl7-transform": {
        "cmdline": [],
        "modules": [
            "hl7_transform",
            "hl7_transform.cli",
            "hl7_transform.core",
            "hl7_transform.field",
            "hl7_transform.mapping",
            "hl7_transform.message",
            "hl7_transform.operations",
            "hl7_transform.test",
            "hl7_transform.test.test_cli",
            "hl7_transform.test.test_mapping",
            "hl7_transform.test.test_message",
            "hl7_transform.test.test_transform",
            "hl7_transform.transform"
        ],
        "version": "0.1.5"
    },
    "hl7-utils": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hl7apy": {
        "cmdline": [
            "hl7apy_profile_parser"
        ],
        "modules": [
            "hl7apy",
            "hl7apy.base_datatypes",
            "hl7apy.consts",
            "hl7apy.core",
            "hl7apy.exceptions",
            "hl7apy.factories",
            "hl7apy.mllp",
            "hl7apy.parser",
            "hl7apy.utils",
            "hl7apy.v2_1",
            "hl7apy.v2_1.base_datatypes",
            "hl7apy.v2_1.datatypes",
            "hl7apy.v2_1.fields",
            "hl7apy.v2_1.groups",
            "hl7apy.v2_1.messages",
            "hl7apy.v2_1.segments",
            "hl7apy.v2_2",
            "hl7apy.v2_2.datatypes",
            "hl7apy.v2_2.fields",
            "hl7apy.v2_2.groups",
            "hl7apy.v2_2.messages",
            "hl7apy.v2_2.segments",
            "hl7apy.v2_3",
            "hl7apy.v2_3.datatypes",
            "hl7apy.v2_3.fields",
            "hl7apy.v2_3.groups",
            "hl7apy.v2_3.messages",
            "hl7apy.v2_3.segments",
            "hl7apy.v2_3_1",
            "hl7apy.v2_3_1.datatypes",
            "hl7apy.v2_3_1.fields",
            "hl7apy.v2_3_1.groups",
            "hl7apy.v2_3_1.messages",
            "hl7apy.v2_3_1.segments",
            "hl7apy.v2_3_1.tables",
            "hl7apy.v2_4",
            "hl7apy.v2_4.datatypes",
            "hl7apy.v2_4.fields",
            "hl7apy.v2_4.groups",
            "hl7apy.v2_4.messages",
            "hl7apy.v2_4.segments",
            "hl7apy.v2_4.tables",
            "hl7apy.v2_5",
            "hl7apy.v2_5.datatypes",
            "hl7apy.v2_5.fields",
            "hl7apy.v2_5.groups",
            "hl7apy.v2_5.messages",
            "hl7apy.v2_5.segments",
            "hl7apy.v2_5.tables",
            "hl7apy.v2_5_1",
            "hl7apy.v2_5_1.datatypes",
            "hl7apy.v2_5_1.fields",
            "hl7apy.v2_5_1.groups",
            "hl7apy.v2_5_1.messages",
            "hl7apy.v2_5_1.segments",
            "hl7apy.v2_5_1.tables",
            "hl7apy.v2_6",
            "hl7apy.v2_6.base_datatypes",
            "hl7apy.v2_6.datatypes",
            "hl7apy.v2_6.fields",
            "hl7apy.v2_6.groups",
            "hl7apy.v2_6.messages",
            "hl7apy.v2_6.segments",
            "hl7apy.v2_6.tables",
            "hl7apy.v2_7",
            "hl7apy.v2_7.base_datatypes",
            "hl7apy.v2_7.datatypes",
            "hl7apy.v2_7.fields",
            "hl7apy.v2_7.groups",
            "hl7apy.v2_7.messages",
            "hl7apy.v2_7.segments",
            "hl7apy.v2_7.tables",
            "hl7apy.v2_8",
            "hl7apy.v2_8.datatypes",
            "hl7apy.v2_8.fields",
            "hl7apy.v2_8.groups",
            "hl7apy.v2_8.messages",
            "hl7apy.v2_8.segments",
            "hl7apy.v2_8.tables",
            "hl7apy.v2_8_1",
            "hl7apy.v2_8_1.datatypes",
            "hl7apy.v2_8_1.fields",
            "hl7apy.v2_8_1.groups",
            "hl7apy.v2_8_1.messages",
            "hl7apy.v2_8_1.segments",
            "hl7apy.v2_8_1.tables",
            "hl7apy.v2_8_2",
            "hl7apy.v2_8_2.datatypes",
            "hl7apy.v2_8_2.fields",
            "hl7apy.v2_8_2.groups",
            "hl7apy.v2_8_2.messages",
            "hl7apy.v2_8_2.segments",
            "hl7apy.v2_8_2.tables",
            "hl7apy.validation"
        ],
        "version": "1.3.3"
    },
    "hl7parser": {
        "cmdline": [],
        "modules": [
            "hl7parser",
            "hl7parser.hl7",
            "hl7parser.hl7_data_types",
            "hl7parser.hl7_segments",
            "tests",
            "tests.data_types",
            "tests.test_hl7",
            "tests.test_parse"
        ],
        "version": "0.7.2"
    },
    "hl7py": {
        "cmdline": [],
        "modules": [
            "HL7py",
            "HL7py.constants",
            "HL7py.hl7_test",
            "HL7py.hl7fields",
            "HL7py.parser",
            "HL7py.test_messages"
        ],
        "version": "1.01"
    },
    "hl7tersely": {
        "cmdline": [],
        "modules": [
            "hl7tersely",
            "hl7tersely.hl7dict",
            "hl7tersely.hl7parser"
        ],
        "version": "1.2"
    },
    "hl7tojson": {
        "cmdline": [],
        "modules": [
            "hl7tojson",
            "hl7tojson.data",
            "hl7tojson.data.27",
            "hl7tojson.parser",
            "tests",
            "tests.samples",
            "tests.test_parser"
        ],
        "version": "0.0.2"
    },
    "hla-genotyper": {
        "cmdline": [],
        "modules": [
            "hla",
            "hla.genotyper",
            "hla.genotyper.bkk",
            "hla.genotyper.test",
            "hla.version"
        ],
        "version": "0.4.2b1"
    },
    "hladny-matfyzak": {
        "cmdline": [],
        "modules": [
            "hladnymatfyzak"
        ],
        "version": "0.0.7.0"
    },
    "hlaquant": {
        "cmdline": [],
        "modules": [
            "HLAQuant",
            "HLAQuant.HLAQuant",
            "HLAQuant.mhc_G_domain"
        ],
        "version": "0.0.2"
    },
    "hlautopep8": {
        "cmdline": [],
        "modules": [],
        "version": "1.5a1"
    },
    "hlbox": {
        "cmdline": [],
        "modules": [
            "hlbox",
            "hlbox.config",
            "hlbox.exceptions",
            "hlbox.sandboxes",
            "hlbox.utils"
        ],
        "version": "1.0.3"
    },
    "hlc": {
        "cmdline": [],
        "modules": [
            "hlc",
            "hlc._meta",
            "hlc.cli",
            "hlc.helpers",
            "hlc.hostlist"
        ],
        "version": "0.3.0"
    },
    "hlda": {
        "cmdline": [],
        "modules": [
            "hlda",
            "hlda.sampler"
        ],
        "version": "0.2"
    },
    "hldb": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.2"
    },
    "hledger-networth": {
        "cmdline": [],
        "modules": [
            "hledger-networth"
        ],
        "version": "0.1"
    },
    "hlfbt-serial-console": {
        "cmdline": [],
        "modules": [
            "hlfbt.serial_console",
            "hlfbt.serial_console._argparse",
            "hlfbt.serial_console._argparse.formatter",
            "hlfbt.serial_console.cli",
            "hlfbt.serial_console.console",
            "hlfbt.serial_console.console.console",
            "hlfbt.serial_console.console.io",
            "hlfbt.serial_console.console.matching"
        ],
        "version": "0.0.5"
    },
    "hlib": {
        "cmdline": [],
        "modules": [
            "hlib",
            "hlib.graph",
            "hlib.graph.graph",
            "hlib.graph_algorithms",
            "hlib.graph_algorithms.search",
            "hlib.tests",
            "hlib.tests.test_graph",
            "hlib.tests.test_graph.test_graph",
            "hlib.tests.test_graph_algorithms",
            "hlib.tests.test_graph_algorithms.test_graph_search"
        ],
        "version": "0.1.0"
    },
    "hlint": {
        "cmdline": [],
        "modules": [
            "hlint",
            "hlint.lint"
        ],
        "version": "0.0.1"
    },
    "hljp": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hlk-dio16": {
        "cmdline": [],
        "modules": [
            "hlk_dio16",
            "hlk_dio16.const",
            "hlk_dio16.protocol",
            "hlk_dio16.tools.info",
            "hlk_dio16.util"
        ],
        "version": "0.0.1"
    },
    "hlk-sw16": {
        "cmdline": [],
        "modules": [
            "hlk_sw16",
            "hlk_sw16.protocol"
        ],
        "version": "0.0.9"
    },
    "hlklogparser": {
        "cmdline": [],
        "modules": [
            "XMLtoCSV.XMLtoCSVConvert"
        ],
        "version": "2.0.0"
    },
    "hll": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.1"
    },
    "hlm": {
        "cmdline": [],
        "modules": [
            "hlm"
        ],
        "version": "0.0.1"
    },
    "hlmm": {
        "cmdline": [],
        "modules": [
            "hlmm",
            "hlmm.hetlm",
            "hlmm.hetlmm"
        ],
        "version": "1.3.0a1"
    },
    "hlog": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "hlp": {
        "cmdline": [],
        "modules": [
            "hlp",
            "hlp.cli",
            "hlp.compat",
            "hlp.typing",
            "hlp.util"
        ],
        "version": "0.2.1"
    },
    "hlpdf": {
        "cmdline": [],
        "modules": [
            "hlpdf",
            "hlpdf.pdf2image",
            "hlpdf.pdf2text"
        ],
        "version": "1.0"
    },
    "hlre": {
        "cmdline": [],
        "modules": [
            "hlre",
            "hlre.hlre",
            "hlre.test_hlre"
        ],
        "version": "0.1.0"
    },
    "hls-edit-file": {
        "cmdline": [],
        "modules": [
            "hls_editor",
            "hls_editor.exception",
            "hls_editor.hls_editor",
            "hls_editor.hls_helper"
        ],
        "version": "0.0.1"
    },
    "hls-ingestion": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hls-playlist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hls2dash": {
        "cmdline": [],
        "modules": [
            "hls2dash",
            "hls2dash.debug",
            "hls2dash.lib",
            "hls2dash.lib.MPD",
            "hls2dash.lib.MPDAdaptationSet",
            "hls2dash.lib.MPDRepresentation",
            "hls2dash.lib.TS",
            "hls2dash.lib.TSRemux",
            "hls2dash.lib.util",
            "hls2dash.tsremux"
        ],
        "version": "0.2.1"
    },
    "hls4ml": {
        "cmdline": [
            "hls4ml"
        ],
        "modules": [
            "hls4ml",
            "hls4ml.converters",
            "hls4ml.converters.keras",
            "hls4ml.converters.keras.convolution",
            "hls4ml.converters.keras.core",
            "hls4ml.converters.keras.merge",
            "hls4ml.converters.keras.pooling",
            "hls4ml.converters.keras.qkeras",
            "hls4ml.converters.keras.qkeras_layers",
            "hls4ml.converters.keras_to_hls",
            "hls4ml.converters.onnx_to_hls",
            "hls4ml.converters.pytorch_to_hls",
            "hls4ml.converters.tf_to_hls",
            "hls4ml.model",
            "hls4ml.model.hls_layers",
            "hls4ml.model.hls_model",
            "hls4ml.model.optimizer",
            "hls4ml.model.optimizer.optimizer",
            "hls4ml.model.optimizer.passes",
            "hls4ml.model.optimizer.passes.bn_quant",
            "hls4ml.model.optimizer.passes.dense_bn_fuse",
            "hls4ml.model.optimizer.passes.fuse_biasadd",
            "hls4ml.model.optimizer.passes.nop",
            "hls4ml.model.optimizer.passes.qkeras",
            "hls4ml.model.profiling",
            "hls4ml.report",
            "hls4ml.report.vivado_report",
            "hls4ml.templates",
            "hls4ml.templates.templates",
            "hls4ml.templates.vivado_template",
            "hls4ml.utils",
            "hls4ml.utils.config",
            "hls4ml.utils.example_models",
            "hls4ml.utils.plot",
            "hls4ml.writer",
            "hls4ml.writer.vivado_writer",
            "hls4ml.writer.writers"
        ],
        "version": "0.3.0"
    },
    "hlsclient": {
        "cmdline": [],
        "modules": [
            "hlsclient",
            "hlsclient.atomic",
            "hlsclient.balancer",
            "hlsclient.cleaner",
            "hlsclient.combine",
            "hlsclient.consumer",
            "hlsclient.crypto",
            "hlsclient.discover",
            "hlsclient.helpers",
            "hlsclient.lock",
            "hlsclient.pkcs7",
            "hlsclient.transcode",
            "hlsclient.workers",
            "hlsclient.workers.master",
            "hlsclient.workers.playlist"
        ],
        "version": "0.5.3"
    },
    "hlsclt": {
        "cmdline": [],
        "modules": [
            "hlsclt",
            "hlsclt._version",
            "hlsclt.build_commands",
            "hlsclt.build_commands.build_commands",
            "hlsclt.classes",
            "hlsclt.clean_commands",
            "hlsclt.clean_commands.clean_commands",
            "hlsclt.helper_funcs",
            "hlsclt.hlsclt",
            "hlsclt.report_commands",
            "hlsclt.report_commands.report_commands"
        ],
        "version": "1.0.0a6"
    },
    "hlsdownload": {
        "cmdline": [],
        "modules": [
            "hlsdownload",
            "hlsdownload.debug",
            "hlsdownload.downloader"
        ],
        "version": "0.0.16"
    },
    "hlso": {
        "cmdline": [],
        "modules": [
            "hlso",
            "hlso._version",
            "hlso.blast",
            "hlso.cli",
            "hlso.common",
            "hlso.conversion",
            "hlso.convert",
            "hlso.export",
            "hlso.haplotyping",
            "hlso.paste",
            "hlso.phylo",
            "hlso.ref_blast",
            "hlso.ref_consensus",
            "hlso.ref_download",
            "hlso.workflow"
        ],
        "version": "0.4.4"
    },
    "hlsorigin": {
        "cmdline": [],
        "modules": [
            "hlsorigin",
            "hlsorigin.capture",
            "hlsorigin.debug",
            "hlsorigin.startover",
            "hlsorigin.util"
        ],
        "version": "0.0.16"
    },
    "hlsrelay": {
        "cmdline": [],
        "modules": [
            "hlsrelay"
        ],
        "version": "0.0.1"
    },
    "hlsvdpro": {
        "cmdline": [],
        "modules": [
            "hlsvdpro",
            "hlsvdpro.hlsvd",
            "hlsvdpro.propack",
            "hlsvdpro.simple_test"
        ],
        "version": "2.0.0"
    },
    "hlsvdpropy": {
        "cmdline": [],
        "modules": [
            "hlsvdpropy",
            "hlsvdpropy.hlsvd",
            "hlsvdpropy.simple_test"
        ],
        "version": "2.0.1"
    },
    "hlt-client": {
        "cmdline": [],
        "modules": [
            "hlt_client",
            "hlt_client.client",
            "hlt_client.compare_bots",
            "hlt_client.download_game",
            "hlt_client.upload_bot"
        ],
        "version": "1.0.4"
    },
    "hltc-preprocess": {
        "cmdline": [],
        "modules": [
            "hltc_preprocess.glove",
            "hltc_preprocess.tweets",
            "hltc_preprocess.vocabulary"
        ],
        "version": "1.1"
    },
    "hltex": {
        "cmdline": [],
        "modules": [
            "hltex",
            "hltex.cli",
            "hltex.context",
            "hltex.control",
            "hltex.control.control",
            "hltex.control.eq",
            "hltex.control.pysplice",
            "hltex.errors",
            "hltex.indentation",
            "hltex.pybox",
            "hltex.state",
            "hltex.translator"
        ],
        "version": "0.0.5"
    },
    "hltv": {
        "cmdline": [],
        "modules": [
            "HLTV"
        ],
        "version": "0.2.0"
    },
    "hltv-api-jclge": {
        "cmdline": [],
        "modules": [
            "HLTV",
            "HLTV.HLTV"
        ],
        "version": "0.1.0"
    },
    "hltv-csgo-results": {
        "cmdline": [],
        "modules": [],
        "version": "1"
    },
    "hlupik": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.4"
    },
    "hlvox": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.9"
    },
    "hlwy-lsh": {
        "cmdline": [],
        "modules": [
            "lsh",
            "lsh.cache",
            "lsh.minhash"
        ],
        "version": "0.3.6"
    },
    "hlymode": {
        "cmdline": [],
        "modules": [
            "SuperMath",
            "SuperMath.demo1",
            "SuperMath.demo2"
        ],
        "version": "1.0"
    },
    "hm-auth": {
        "cmdline": [],
        "modules": [
            "hm_auth",
            "hm_auth.config",
            "hm_auth.config.header",
            "hm_auth.config.url",
            "hm_auth.do_auth",
            "hm_auth.run"
        ],
        "version": "1.21"
    },
    "hm-distributions": {
        "cmdline": [],
        "modules": [
            "hm_distributions",
            "hm_distributions.Binomialdistribution",
            "hm_distributions.Gaussiandistribution",
            "hm_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hm-message": {
        "cmdline": [],
        "modules": [
            "hm_message",
            "hm_message.receive_message",
            "hm_message.send_message"
        ],
        "version": "1.0"
    },
    "hm-probability": {
        "cmdline": [],
        "modules": [
            "hm_probability",
            "hm_probability.Binomialdistribution",
            "hm_probability.Gaussiandistribution",
            "hm_probability.Generaldistribution"
        ],
        "version": "1.0"
    },
    "hm-render-landez": {
        "cmdline": [],
        "modules": [
            "hm_render_landez",
            "hm_render_landez.hm_render_landez"
        ],
        "version": "0.0.2"
    },
    "hm-render-mapnik": {
        "cmdline": [],
        "modules": [
            "hm_render_mapnik",
            "hm_render_mapnik.hm_render_mapnik"
        ],
        "version": "0.0.2"
    },
    "hm-test1": {
        "cmdline": [],
        "modules": [
            "hm_test1"
        ],
        "version": "1.1.0"
    },
    "hm-wrapper": {
        "cmdline": [],
        "modules": [
            "hm_wrapper",
            "hm_wrapper._utils",
            "hm_wrapper.radarr",
            "hm_wrapper.sonarr",
            "hm_wrapper.tests",
            "hm_wrapper.tests.test__utils"
        ],
        "version": "0.12.3"
    },
    "hma17": {
        "cmdline": [],
        "modules": [
            "hma17"
        ],
        "version": "0.0.2"
    },
    "hmac": {
        "cmdline": [],
        "modules": [],
        "version": "20101005"
    },
    "hmac-authentication": {
        "cmdline": [],
        "modules": [
            "hmac_authentication",
            "hmac_authentication.hmacauth"
        ],
        "version": "1.0.0"
    },
    "hmac-cli": {
        "cmdline": [],
        "modules": [
            "hmac_cli"
        ],
        "version": "0.0.0"
    },
    "hmac-multisig": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "hmac-signature": {
        "cmdline": [],
        "modules": [
            "hmac_signature",
            "hmac_signature.singature"
        ],
        "version": "0.2"
    },
    "hmacchanger": {
        "cmdline": [
            "hmacchanger"
        ],
        "modules": [
            "pytransform"
        ],
        "version": "1.4"
    },
    "hmako": {
        "cmdline": [],
        "modules": [
            "builder",
            "builder.builders",
            "builder.util",
            "hmako",
            "hmako._ast_util",
            "hmako.ast",
            "hmako.cache",
            "hmako.codegen",
            "hmako.compat",
            "hmako.exceptions",
            "hmako.ext",
            "hmako.ext.autohandler",
            "hmako.ext.babelplugin",
            "hmako.ext.beaker_cache",
            "hmako.ext.preprocessors",
            "hmako.ext.pygmentplugin",
            "hmako.ext.turbogears",
            "hmako.filters",
            "hmako.lexer",
            "hmako.lookup",
            "hmako.parsetree",
            "hmako.pygen",
            "hmako.pyparser",
            "hmako.runtime",
            "hmako.template",
            "hmako.util",
            "templatetags",
            "templatetags.bench",
            "test",
            "test.foo",
            "test.foo.test_ns",
            "test.sample_module_namespace",
            "test.test_ast",
            "test.test_babelplugin",
            "test.test_block",
            "test.test_cache",
            "test.test_call",
            "test.test_decorators",
            "test.test_def",
            "test.test_exceptions",
            "test.test_filters",
            "test.test_inheritance",
            "test.test_lexer",
            "test.test_lookup",
            "test.test_loop",
            "test.test_lru",
            "test.test_namespace",
            "test.test_pygen",
            "test.test_template",
            "test.test_tgplugin",
            "test.test_util",
            "test.util"
        ],
        "version": "1.16"
    },
    "hmatch": {
        "cmdline": [],
        "modules": [
            "hmatch"
        ],
        "version": "1.0.2"
    },
    "hmc": {
        "cmdline": [],
        "modules": [
            "hmc",
            "hmc.datasets",
            "hmc.exceptions",
            "hmc.hmc",
            "hmc.metrics"
        ],
        "version": "0.3"
    },
    "hmc-loss": {
        "cmdline": [],
        "modules": [
            "hmc_loss",
            "hmc_loss.hmc_loss"
        ],
        "version": "1.0.0"
    },
    "hmc-theme": {
        "cmdline": [],
        "modules": [
            "hmc",
            "hmc.theme",
            "hmc.theme.tests"
        ],
        "version": "0.1.1"
    },
    "hmcc-sorting": {
        "cmdline": [],
        "modules": [
            "hmcc_sorting",
            "hmcc_sorting.bubble_sort",
            "hmcc_sorting.insertion_sort",
            "hmcc_sorting.quick_sort",
            "hmcc_sorting.selection_sort"
        ],
        "version": "0.1"
    },
    "hmcli": {
        "cmdline": [],
        "modules": [
            "hmcli",
            "hmcli.crypto",
            "hmcli.handlers",
            "hmcli.hashing",
            "hmcli.scanners",
            "hmcli.utils"
        ],
        "version": "0.10.18"
    },
    "hmcrestclient": {
        "cmdline": [],
        "modules": [
            "_xmlk2",
            "src",
            "src.cluster",
            "src.cluster.CreateCluster",
            "src.cluster.CreateLogicalUnit",
            "src.cluster.DeleteCluster",
            "src.cluster.DeleteLogicalUnit",
            "src.cluster.LULinkedClone",
            "src.cluster.ListCluster",
            "src.cluster.ModifyCluster",
            "src.common",
            "src.common.JobStatus",
            "src.common.ListModule",
            "src.common.PrintModule",
            "src.common.SelectManagedSystem",
            "src.generated_src",
            "src.generated_src.ManagedSystemPcmPreferences",
            "src.generated_src.UOM",
            "src.logical_partition",
            "src.logical_partition.DeleteLogicalPartition",
            "src.logical_partition.ListLogicalPartition",
            "src.logical_partition.client_network_adapter",
            "src.logical_partition.client_network_adapter.CreateClientNetworkAdapter",
            "src.logical_partition.client_network_adapter.ListClientNetworkAdapter",
            "src.logical_partition.sriov_logical_port",
            "src.logical_partition.sriov_logical_port.ClearSRIOVLogicalPortStatistics",
            "src.logical_partition.sriov_logical_port.CreateSRIOVLogicalPort",
            "src.logical_partition.sriov_logical_port.ListSRIOVLogicalPort",
            "src.logical_partition.sriov_logical_port.ModifySRIOVEthernetLogicalPort",
            "src.logical_partition.virtual_fibrechannel_client_adapter",
            "src.logical_partition.virtual_fibrechannel_client_adapter.CreateVirtualFibreChannelClientAdapter",
            "src.logical_partition.virtual_fibrechannel_client_adapter.ListVirtualFibreChannelClientAdapter",
            "src.logical_partition.vscsi_client_adapter",
            "src.logical_partition.vscsi_client_adapter.CreateVirtualSCSIClientAdapter",
            "src.logical_partition.vscsi_client_adapter.ListVirtualSCSIClientAdapter",
            "src.logical_partition_profile",
            "src.logical_partition_profile.CreateLogicalPartitionProfile",
            "src.logical_partition_profile.ListLogicalPartitionProfile",
            "src.logical_partition_profile.ModifyLogicalPartitionProfile",
            "src.login_credentials",
            "src.login_credentials.LogoffModule",
            "src.login_credentials.LogonRequest",
            "src.main",
            "src.main.Cluster",
            "src.main.HmcRestClient",
            "src.main.LogicalPartition",
            "src.main.Main",
            "src.main.ManagedSystem",
            "src.main.PerformanceCapacityMonitor",
            "src.main.VirtualIOServer",
            "src.managed_system",
            "src.managed_system.ListManagedSystem",
            "src.managed_system.ManagedSystemRemoveConnection",
            "src.managed_system.PowerOffManagedSystem",
            "src.managed_system.PowerOnManagedSystem",
            "src.managed_system.network_bridge",
            "src.managed_system.network_bridge.CreateNetworkBridge",
            "src.managed_system.network_bridge.ListNetworkBridge",
            "src.managed_system.network_bridge.ModifyNetworkBridge",
            "src.managed_system.sriov_physical_port",
            "src.managed_system.sriov_physical_port.ChangeAdapterMode",
            "src.managed_system.sriov_physical_port.ListSRIOVPhysicalPort",
            "src.managed_system.virtual_network",
            "src.managed_system.virtual_network.CreateVirtualNetwork",
            "src.managed_system.virtual_network.ListVirtualNetwork",
            "src.managed_system.virtual_network.ModifyVirtualNetwork",
            "src.managed_system.virtual_switch",
            "src.managed_system.virtual_switch.CreateVirtualSwitch",
            "src.managed_system.virtual_switch.ListVirtualSwitch",
            "src.managed_system.virtual_switch.ModifyVirtualSwitch",
            "src.management_console",
            "src.management_console.ListManagementConsole",
            "src.partition_operation_util",
            "src.partition_operation_util.CreatePartition",
            "src.partition_operation_util.ModifyPartition",
            "src.partition_operation_util.PowerOffPartition",
            "src.partition_operation_util.PowerOnPartition",
            "src.performance_capacity_monitor",
            "src.performance_capacity_monitor.CreateFromDocument",
            "src.performance_capacity_monitor.JsonFilesDownload",
            "src.performance_capacity_monitor.LongTermMonitor",
            "src.performance_capacity_monitor.ManagedSystemPcm",
            "src.performance_capacity_monitor.ProcessedMetrics",
            "src.performance_capacity_monitor.ShortTermMonitor",
            "src.performance_capacity_monitor.ToXml",
            "src.shared_storage_pool",
            "src.shared_storage_pool.ListSharedStoragePool",
            "src.shared_storage_pool.ModifySharedStoragePool",
            "src.utility",
            "src.utility.HMCClientLogger",
            "src.utility.HTTPClient",
            "src.utility.HmcHeaders",
            "src.virtual_io_server",
            "src.virtual_io_server.ListVirtualIOServer",
            "src.virtual_io_server.VirtualFibreChannelMapping",
            "src.virtual_io_server.VirtualSCSIMapping",
            "src.virtual_io_server.volume_group",
            "src.virtual_io_server.volume_group.CreateVolumeGroup",
            "src.virtual_io_server.volume_group.ListVolumeGroup",
            "src.virtual_io_server.volume_group.ModifyVolumeGroup"
        ],
        "version": "1.0"
    },
    "hmd": {
        "cmdline": [],
        "modules": [
            "hmd",
            "hmd.hmd"
        ],
        "version": "0.7"
    },
    "hmda-tools": {
        "cmdline": [
            "hmda_create_schemas",
            "hmda_extract_geo_data",
            "hmda_load_cbsa",
            "hmda_load_code_sheet",
            "hmda_load_geo"
        ],
        "modules": [
            "hmda_tools",
            "hmda_tools.data",
            "hmda_tools.data.cbsa",
            "hmda_tools.data.geo",
            "hmda_tools.data.schemas",
            "hmda_tools.unicode_csv"
        ],
        "version": "0.1.4"
    },
    "hmdata": {
        "cmdline": [],
        "modules": [
            "hmdata",
            "hmdata.totalcapture",
            "hmdata.utils"
        ],
        "version": "0.2.3"
    },
    "hmeasure": {
        "cmdline": [],
        "modules": [
            "hmeasure",
            "hmeasure._version",
            "hmeasure.hsource"
        ],
        "version": "0.1.4"
    },
    "hmeta": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hmf": {
        "cmdline": [],
        "modules": [],
        "version": "3.2.1"
    },
    "hmfcalc": {
        "cmdline": [],
        "modules": [
            "HMFcalc",
            "HMFcalc.forms",
            "HMFcalc.tasks",
            "HMFcalc.templatetags",
            "HMFcalc.templatetags.hmf_version",
            "HMFcalc.tests",
            "HMFcalc.utils",
            "HMFcalc.views"
        ],
        "version": "1.0.5"
    },
    "hmftools": {
        "cmdline": [],
        "modules": [
            "hmf",
            "hmf.__about__",
            "hmf._cli",
            "hmf._cli.common",
            "hmf._cli.compress",
            "hmf._cli.convert",
            "hmf._cli.info",
            "hmf._cli.uncompress",
            "hmf._main"
        ],
        "version": "0.0.3"
    },
    "hmgeneric": {
        "cmdline": [],
        "modules": [
            "HMGeneric",
            "HMGeneric.array",
            "HMGeneric.ethernet",
            "HMGeneric.file",
            "HMGeneric.internetProtocol",
            "HMGeneric.menu",
            "HMGeneric.module",
            "HMGeneric.parse",
            "HMGeneric.registry",
            "HMGeneric.service",
            "HMGeneric.terminal",
            "HMGeneric.wmi"
        ],
        "version": "1.0.13"
    },
    "hmip": {
        "cmdline": [],
        "modules": [
            "hmip",
            "hmip.hopfield",
            "hmip.other_solvers",
            "hmip.utils"
        ],
        "version": "0.0.6"
    },
    "hmkamene": {
        "cmdline": [],
        "modules": [
            "HMKamene",
            "HMKamene.arp",
            "HMKamene.sniff"
        ],
        "version": "1.0.5"
    },
    "hml-equation-parser": {
        "cmdline": [],
        "modules": [
            "hml_equation_parser",
            "hml_equation_parser.hmlParser",
            "hml_equation_parser.hulkEqParser",
            "hml_equation_parser.hulkReplaceMethod"
        ],
        "version": "1.0.12"
    },
    "hmlstm": {
        "cmdline": [],
        "modules": [
            "hmlstm",
            "hmlstm.hmlstm_cell",
            "hmlstm.hmlstm_network",
            "hmlstm.multi_hmlstm_cell"
        ],
        "version": "0.0.1"
    },
    "hmm": {
        "cmdline": [],
        "modules": [
            "hmm",
            "hmm.hmm"
        ],
        "version": "0.0.1"
    },
    "hmm-classifier": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hmm-filter": {
        "cmdline": [],
        "modules": [
            "hmm_filter",
            "hmm_filter.hmm_filter",
            "hmm_filter.version"
        ],
        "version": "0.0.14"
    },
    "hmm-kit": {
        "cmdline": [
            "simple_hmm.py"
        ],
        "modules": [
            "hmm_kit",
            "hmm_kit.HMMModel",
            "hmm_kit.bwiter",
            "hmm_kit.multivariatenormal",
            "hmm_kit.viterbi"
        ],
        "version": "0.3.0"
    },
    "hmm-profile": {
        "cmdline": [],
        "modules": [
            "hmm_profile",
            "hmm_profile.models",
            "hmm_profile.reader",
            "hmm_profile.writer"
        ],
        "version": "0.0.11"
    },
    "hmm001": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hmmconf": {
        "cmdline": [],
        "modules": [
            "hmmconf",
            "hmmconf.analysis",
            "hmmconf.base",
            "hmmconf.base_utils",
            "hmmconf.conform",
            "hmmconf.example_data",
            "hmmconf.hmmconf_setup",
            "hmmconf.metric",
            "hmmconf.model",
            "hmmconf.numba_utils",
            "hmmconf.pm_extra",
            "hmmconf.preprocess",
            "hmmconf.tracker",
            "hmmconf.utils",
            "hmmconf.visualize",
            "hospital-billing",
            "hospital-billing.experiment",
            "tests",
            "tests.conftest",
            "tests.test_base",
            "tests.test_conform",
            "tests.test_hmmconf_setup",
            "tests.test_numba_utils",
            "tests.test_preprocess",
            "tests.test_utils",
            "tests.utils"
        ],
        "version": "2.0.0"
    },
    "hmmer": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.8"
    },
    "hmmer-reader": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.9"
    },
    "hmmerclust": {
        "cmdline": [],
        "modules": [
            "demo",
            "demo.settings",
            "example",
            "example.settings",
            "hmmerclust",
            "hmmerclust.hmmerclust"
        ],
        "version": "0.0.1.dev5"
    },
    "hmmkay": {
        "cmdline": [],
        "modules": [
            "hmmkay",
            "hmmkay._utils",
            "hmmkay.hmm",
            "hmmkay.utils"
        ],
        "version": "0.0.1"
    },
    "hmmlearn": {
        "cmdline": [],
        "modules": [
            "hmmlearn",
            "hmmlearn._utils",
            "hmmlearn._version",
            "hmmlearn.base",
            "hmmlearn.hmm",
            "hmmlearn.stats",
            "hmmlearn.tests",
            "hmmlearn.tests.conftest",
            "hmmlearn.tests.test_base",
            "hmmlearn.tests.test_gaussian_hmm",
            "hmmlearn.tests.test_gmm_hmm",
            "hmmlearn.tests.test_gmm_hmm_new",
            "hmmlearn.tests.test_multinomial_hmm",
            "hmmlearn.tests.test_utils",
            "hmmlearn.utils"
        ],
        "version": "0.2.4"
    },
    "hmmlogo": {
        "cmdline": [],
        "modules": [
            "hmmlogo",
            "hmmlogo.api",
            "hmmlogo.hmm",
            "hmmlogo.plot"
        ],
        "version": "0.0.4"
    },
    "hmmpy": {
        "cmdline": [],
        "modules": [
            "hmmpy",
            "hmmpy.hmm"
        ],
        "version": "0.1.0"
    },
    "hmms": {
        "cmdline": [],
        "modules": [
            "hmms",
            "hmms.art",
            "hmms.train"
        ],
        "version": "0.1"
    },
    "hmmus": {
        "cmdline": [
            "hmm-backward",
            "hmm-demo",
            "hmm-forward",
            "hmm-fwdbwd-alldisk",
            "hmm-fwdbwd-somedisk",
            "hmm-od",
            "hmm-posterior",
            "hmm-regression-test"
        ],
        "modules": [
            "hmmus",
            "hmmus.demo",
            "hmmus.estimation",
            "hmmus.hmm",
            "hmmus.hmmhelper",
            "hmmus.progress"
        ],
        "version": "0.3.1"
    },
    "hmmviz": {
        "cmdline": [],
        "modules": [
            "hmmviz",
            "hmmviz.base"
        ],
        "version": "0.0.7"
    },
    "hmni": {
        "cmdline": [],
        "modules": [
            "hmni",
            "hmni.input_helpers",
            "hmni.matcher",
            "hmni.preprocess",
            "hmni.siamese_network",
            "hmni.syllable_tokenizer"
        ],
        "version": "0.1.8"
    },
    "hmongo": {
        "cmdline": [],
        "modules": [
            "HMongo",
            "HMongo.MongoDB"
        ],
        "version": "0.1"
    },
    "hmpnester": {
        "cmdline": [],
        "modules": [
            "hmpnester"
        ],
        "version": "1.3.0"
    },
    "hmpty": {
        "cmdline": [],
        "modules": [
            "HMpTy",
            "HMpTy.__version__",
            "HMpTy.cl_utils",
            "HMpTy.commonutils",
            "HMpTy.commonutils.getpackagepath",
            "HMpTy.htm",
            "HMpTy.htm._htmcCode",
            "HMpTy.htm.htm",
            "HMpTy.htm.sets",
            "HMpTy.htm.tests",
            "HMpTy.htm.tests.test_htm",
            "HMpTy.htm.tests.test_sets",
            "HMpTy.mysql",
            "HMpTy.mysql.add_htm_ids_to_mysql_database_table",
            "HMpTy.mysql.conesearch",
            "HMpTy.mysql.tests",
            "HMpTy.mysql.tests.test_add_htm_ids_to_mysql_database_table",
            "HMpTy.mysql.tests.test_conesearch",
            "HMpTy.utKit"
        ],
        "version": "1.5.3"
    },
    "hmpy": {
        "cmdline": [],
        "modules": [
            "hmpy",
            "hmpy.interface",
            "hmpy.layout",
            "hmpy.util",
            "hmpy.util.color",
            "hmpy.util.timer",
            "hmpy.views",
            "hmpy.views.button",
            "hmpy.views.chart",
            "hmpy.views.dial",
            "hmpy.views.gauge",
            "hmpy.views.lcd",
            "hmpy.views.led",
            "hmpy.views.progress_bar",
            "hmpy.views.slider",
            "hmpy.views.switch",
            "hmpy.views.view",
            "hmpy.window"
        ],
        "version": "0.2.0"
    },
    "hmrb": {
        "cmdline": [],
        "modules": [
            "hmrb",
            "hmrb.core",
            "hmrb.lang",
            "hmrb.node",
            "hmrb.protobuffer",
            "hmrb.response_pb2"
        ],
        "version": "1.0.0"
    },
    "hmrc": {
        "cmdline": [],
        "modules": [
            "hmrc",
            "hmrc.api",
            "hmrc.api.client",
            "hmrc.api.data",
            "hmrc.api.hello",
            "hmrc.api.testuser",
            "hmrc.api.vat",
            "test",
            "test.test_doc"
        ],
        "version": "0.0.1"
    },
    "hmrsplanner": {
        "cmdline": [],
        "modules": [
            "gmrs",
            "gmrs.graph",
            "gmrs.graph.edge",
            "gmrs.graph.node",
            "gmrs.model",
            "gmrs.model.capability",
            "gmrs.model.goal",
            "gmrs.model.mission",
            "gmrs.model.operator",
            "gmrs.model.property",
            "gmrs.model.scenario",
            "gmrs.model.task",
            "gmrs.model.unit",
            "gmrs.objective",
            "gmrs.objective.objective",
            "gmrs.objective.probability",
            "gmrs.objective.property_base",
            "gmrs.objective.time",
            "gmrs.objective.utils",
            "gmrs.planner",
            "gmrs.planner.build_variability_model",
            "gmrs.planner.container",
            "gmrs.planner.container.containers",
            "gmrs.planner.context",
            "gmrs.planner.estimator",
            "gmrs.planner.evaluation",
            "gmrs.planner.functions",
            "gmrs.planner.manager",
            "gmrs.planner.operators",
            "gmrs.planner.operators.ievaluator",
            "gmrs.planner.operators.operator",
            "gmrs.planner.operators.sequential",
            "gmrs.planner.outcome",
            "gmrs.planner.pareto_front_reducer",
            "gmrs.planner.skill_base",
            "gmrs.planner.submodel",
            "gmrs.planner.task_context",
            "gmrs.planner.utils",
            "gmrs.util",
            "gmrs.util.factory",
            "gmrs.util.mission_specification",
            "gmrs.util.model",
            "gmrs.util.physics",
            "gmrs.util.planning",
            "tests",
            "tests.planner",
            "tests.planner.test_multiple_configurations",
            "tests.planner.test_pareto_front_reducer",
            "tests.planner.test_scalability",
            "tests.planner.test_sequential",
            "tests.planner.test_utils",
            "tests.planner.utils",
            "tests.scenario",
            "tests.scenario.fixture",
            "tests.scenario.fixture.minimal_hospital_world_clean_room"
        ],
        "version": "0.0.7"
    },
    "hms-abcc40": {
        "cmdline": [],
        "modules": [
            "hms",
            "hms.abcc40"
        ],
        "version": "0.0.1"
    },
    "hms-base": {
        "cmdline": [],
        "modules": [
            "hms_base",
            "hms_base.client",
            "hms_base.decorators",
            "hms_base.tests",
            "hms_base.tests.test_client",
            "hms_base.tests.test_decorators"
        ],
        "version": "2.0"
    },
    "hms0729": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hmsclient": {
        "cmdline": [],
        "modules": [
            "hmsclient",
            "hmsclient.genthrift",
            "hmsclient.genthrift.fb303",
            "hmsclient.genthrift.fb303.FacebookService",
            "hmsclient.genthrift.fb303.constants",
            "hmsclient.genthrift.fb303.ttypes",
            "hmsclient.genthrift.hive_metastore",
            "hmsclient.genthrift.hive_metastore.ThriftHiveMetastore",
            "hmsclient.genthrift.hive_metastore.constants",
            "hmsclient.genthrift.hive_metastore.ttypes",
            "hmsclient.hmsclient"
        ],
        "version": "0.1.1"
    },
    "hmsclient-hive-3": {
        "cmdline": [],
        "modules": [
            "hmsclient",
            "hmsclient.genthrift",
            "hmsclient.genthrift.fb303",
            "hmsclient.genthrift.fb303.FacebookService",
            "hmsclient.genthrift.fb303.constants",
            "hmsclient.genthrift.fb303.ttypes",
            "hmsclient.genthrift.hive_metastore",
            "hmsclient.genthrift.hive_metastore.ThriftHiveMetastore",
            "hmsclient.genthrift.hive_metastore.constants",
            "hmsclient.genthrift.hive_metastore.ttypes",
            "hmsclient.hmsclient"
        ],
        "version": "0.1.1"
    },
    "hmsdbmitc-stack": {
        "cmdline": [],
        "modules": [
            "stack",
            "stack.app",
            "stack.browser",
            "stack.cli",
            "stack.commands",
            "stack.commands.base",
            "stack.commands.build",
            "stack.commands.check",
            "stack.commands.checkout",
            "stack.commands.clone",
            "stack.commands.down",
            "stack.commands.init",
            "stack.commands.logs",
            "stack.commands.packages",
            "stack.commands.pull",
            "stack.commands.push",
            "stack.commands.reup",
            "stack.commands.secrets",
            "stack.commands.shell",
            "stack.commands.status",
            "stack.commands.test",
            "stack.commands.up",
            "stack.commands.update"
        ],
        "version": "0.5.0"
    },
    "hmslearn": {
        "cmdline": [],
        "modules": [
            "hmslearn",
            "hmslearn.Pubsub",
            "hmslearn.edge",
            "hmslearn.factor_graph",
            "hmslearn.hello_world",
            "hmslearn.hmm_factor_functions",
            "hmslearn.main",
            "hmslearn.max_product",
            "hmslearn.node",
            "hmslearn.node_update_functions",
            "hmslearn.page_rank",
            "hmslearn.reader",
            "hmslearn.redis_broker",
            "hmslearn.redis_callback_class",
            "hmslearn.state",
            "hmslearn.stop_node",
            "hmslearn.sum_product",
            "hmslearn.testing",
            "hmslearn.user_input_functions"
        ],
        "version": "0.0.4.1"
    },
    "hmstos": {
        "cmdline": [],
        "modules": [
            "HMStoS"
        ],
        "version": "1.0.6"
    },
    "hmsysteme": {
        "cmdline": [],
        "modules": [
            "hmsysteme",
            "hmsysteme.functions"
        ],
        "version": "0.5"
    },
    "hmt": {
        "cmdline": [],
        "modules": [
            "hmt",
            "hmt.build",
            "hmt.build.builder",
            "hmt.build.json_schema",
            "hmt.build.media_types",
            "hmt.build.operation",
            "hmt.build.param",
            "hmt.build.paths",
            "hmt.build.result",
            "hmt.build.schemadiff",
            "hmt.build.servers",
            "hmt.build.update_mode",
            "hmt.build.writer",
            "hmt.config",
            "hmt.hmt_types",
            "hmt.logger",
            "hmt.prepare",
            "hmt.serve",
            "hmt.serve.admin",
            "hmt.serve.admin.runner",
            "hmt.serve.admin.views",
            "hmt.serve.commands",
            "hmt.serve.mock",
            "hmt.serve.mock.callbacks",
            "hmt.serve.mock.faker",
            "hmt.serve.mock.faker.faker_base",
            "hmt.serve.mock.faker.faker_exception",
            "hmt.serve.mock.faker.stateful_faker",
            "hmt.serve.mock.faker.stateless_faker",
            "hmt.serve.mock.log",
            "hmt.serve.mock.matcher",
            "hmt.serve.mock.refs",
            "hmt.serve.mock.request_processor",
            "hmt.serve.mock.request_validation",
            "hmt.serve.mock.rest",
            "hmt.serve.mock.scope",
            "hmt.serve.mock.security",
            "hmt.serve.mock.server",
            "hmt.serve.mock.specs",
            "hmt.serve.mock.storage",
            "hmt.serve.mock.storage.entity",
            "hmt.serve.mock.storage.mock_data",
            "hmt.serve.mock.storage.mock_data_store",
            "hmt.serve.mock.views",
            "hmt.serve.record",
            "hmt.serve.record.channel",
            "hmt.serve.record.proxy",
            "hmt.serve.record.proxy_callback",
            "hmt.serve.utils",
            "hmt.serve.utils.data_callback",
            "hmt.serve.utils.http_utils",
            "hmt.serve.utils.opanapi_ext",
            "hmt.serve.utils.routing",
            "hmt.serve.utils.timers",
            "hmt.sinks",
            "hmt.sinks.abstract",
            "hmt.sinks.file",
            "hmt.sources",
            "hmt.sources.abstract",
            "hmt.sources.file",
            "hmt.sources.kafka",
            "hmt.tutorial"
        ],
        "version": "0.3.2"
    },
    "hmt-basemodels": {
        "cmdline": [],
        "modules": [
            "basemodels",
            "basemodels.manifest",
            "basemodels.manifest.data",
            "basemodels.manifest.data.groundtruth",
            "basemodels.manifest.data.taskdata",
            "basemodels.manifest.manifest",
            "basemodels.pydantic",
            "basemodels.pydantic.manifest",
            "basemodels.pydantic.manifest.data",
            "basemodels.pydantic.manifest.data.groundtruth",
            "basemodels.pydantic.manifest.data.taskdata",
            "basemodels.pydantic.manifest.manifest",
            "basemodels.pydantic.via",
            "basemodels.via"
        ],
        "version": "0.1.0"
    },
    "hmt-escrow": {
        "cmdline": [],
        "modules": [
            "hmt_escrow",
            "hmt_escrow.eth_bridge",
            "hmt_escrow.job",
            "hmt_escrow.kvstore_abi",
            "hmt_escrow.storage",
            "hmt_escrow.test_manifest"
        ],
        "version": "0.8.9"
    },
    "hmtest": {
        "cmdline": [],
        "modules": [
            "hmtest",
            "hmtest.console",
            "hmtest.wikipedia"
        ],
        "version": "0.1.0"
    },
    "hmtnote": {
        "cmdline": [],
        "modules": [
            "hmtnote",
            "hmtnote.classes",
            "hmtnote.cli",
            "hmtnote.hmtnote"
        ],
        "version": "0.7.2"
    },
    "hmtredishelp": {
        "cmdline": [],
        "modules": [
            "hmtredishelp",
            "hmtredishelp.redis_dump_utils"
        ],
        "version": "0.1.19"
    },
    "hmtvltk2-django-thumbor": {
        "cmdline": [],
        "modules": [
            "django_thumbor",
            "django_thumbor.conf",
            "django_thumbor.templatetags",
            "django_thumbor.templatetags.thumbor_tags"
        ],
        "version": "1.0.0"
    },
    "hmvpack-ng": {
        "cmdline": [],
        "modules": [
            "hmvlib",
            "hmvlib.hmvcli",
            "hmvlib.models"
        ],
        "version": "0.0.3"
    },
    "hmx-helpers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hn": {
        "cmdline": [],
        "modules": [
            "yc",
            "yc.cli",
            "yc.core",
            "yc.thriftdb",
            "yc.times"
        ],
        "version": "0.2.2"
    },
    "hn-cli": {
        "cmdline": [],
        "modules": [
            "hn",
            "hn.cli"
        ],
        "version": "1.0.0"
    },
    "hn-pwa-api": {
        "cmdline": [],
        "modules": [
            "hn_pwa_api",
            "hn_pwa_api.api",
            "hn_pwa_api.entry",
            "hn_pwa_api.feed",
            "hn_pwa_api.post"
        ],
        "version": "0.1.1"
    },
    "hn-sum": {
        "cmdline": [],
        "modules": [
            "hn_sum"
        ],
        "version": "0.0.1"
    },
    "hn-test-num": {
        "cmdline": [],
        "modules": [
            "hn_test_sum",
            "hn_test_sum.sum_num"
        ],
        "version": "0.1"
    },
    "hn-test-sum": {
        "cmdline": [],
        "modules": [
            "hn_test_sum",
            "hn_test_sum.sum_num"
        ],
        "version": "0.0.1"
    },
    "hn-tops-topics": {
        "cmdline": [
            "hn-tops-topics"
        ],
        "modules": [],
        "version": "0.1.1"
    },
    "hn2016-falwa": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "hnbex": {
        "cmdline": [],
        "modules": [
            "hnbex"
        ],
        "version": "0.0.1"
    },
    "hnbex-cli": {
        "cmdline": [],
        "modules": [
            "hnbex",
            "hnbex.api",
            "hnbex.charts",
            "hnbex.commands",
            "hnbex.console",
            "hnbex.output"
        ],
        "version": "0.5.1"
    },
    "hnc": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.50dev"
    },
    "hnc-forms-ext": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.04"
    },
    "hncapiclient": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.7dev"
    },
    "hnccorr": {
        "cmdline": [],
        "modules": [
            "hnccorr",
            "hnccorr.base",
            "hnccorr.example",
            "hnccorr.graph",
            "hnccorr.movie",
            "hnccorr.postprocessor",
            "hnccorr.seeds",
            "hnccorr.segmentation",
            "hnccorr.utils"
        ],
        "version": "2020.5.1"
    },
    "hncforms": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6dev"
    },
    "hncli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hncomments": {
        "cmdline": [
            "commentfromurl.py"
        ],
        "modules": [
            "hncomments",
            "hncomments.test",
            "hncomments.utils"
        ],
        "version": "0.1.1"
    },
    "hnctools": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6dev"
    },
    "hne-downloader-dergenlee": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hnefatafl": {
        "cmdline": [],
        "modules": [
            "hnefatafl",
            "hnefatafl.tafl_board"
        ],
        "version": "0.1.1"
    },
    "hnet": {
        "cmdline": [],
        "modules": [
            "hnet",
            "hnet.data",
            "hnet.examples",
            "hnet.gui",
            "hnet.gui.hnet_gui",
            "hnet.hnet",
            "hnet.utils",
            "hnet.utils.adjmat_vec",
            "hnet.utils.hnstats",
            "hnet.utils.network",
            "hnet.utils.savefig"
        ],
        "version": "1.1.5"
    },
    "hnews": {
        "cmdline": [],
        "modules": [
            "hnews",
            "hnews.ask",
            "hnews.explore",
            "hnews.globals",
            "hnews.jobs",
            "hnews.news",
            "hnews.test"
        ],
        "version": "0.0.1"
    },
    "hnfb": {
        "cmdline": [],
        "modules": [
            "hnfb",
            "hnfb.main",
            "hnfb.utils"
        ],
        "version": "0.2"
    },
    "hng": {
        "cmdline": [
            "hng"
        ],
        "modules": [
            "hng",
            "hng.import_data",
            "hng.tf_ae"
        ],
        "version": "0.3"
    },
    "hngoption": {
        "cmdline": [],
        "modules": [
            "hngoption",
            "hngoption.hngoption"
        ],
        "version": "1.6"
    },
    "hngtv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hnlp": {
        "cmdline": [],
        "modules": [
            "hnlp",
            "hnlp.dataprocessor",
            "hnlp.dataprocessor.corpus",
            "hnlp.dataprocessor.dataloader",
            "hnlp.dataprocessor.preprocessor",
            "hnlp.dataprocessor.sampler",
            "hnlp.dataprocessor.tokenizer",
            "hnlp.model",
            "hnlp.model.trainer",
            "hnlp.model.transformer",
            "hnlp.pretrained",
            "hnlp.pretrained.model",
            "hnlp.pretrained.postprocessor",
            "hnlp.task",
            "hnlp.task.sequence_tagger",
            "hnlp.task.sequence_tagger.model",
            "tests"
        ],
        "version": "0.1"
    },
    "hnmp": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.1"
    },
    "hnpy": {
        "cmdline": [],
        "modules": [
            "hnpy",
            "hnpy.api",
            "hnpy.const",
            "hnpy.models"
        ],
        "version": "0.2.1"
    },
    "hnqis-cli": {
        "cmdline": [],
        "modules": [
            "src",
            "src.__version__",
            "src.attribute_setter",
            "src.indicator_healtharea_updater",
            "src.program_orgunit_assigner",
            "src.scan_event_mismatches",
            "src.user_message",
            "src.utils"
        ],
        "version": "0.2.1"
    },
    "hnr-download-manager": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hnr-downloader": {
        "cmdline": [],
        "modules": [
            "hnr_downloader",
            "hnr_downloader.add",
            "hnr_downloader.config",
            "hnr_downloader.downloader",
            "hnr_downloader.helper",
            "hnr_downloader.i18n",
            "hnr_downloader.i18n.i18n",
            "hnr_downloader.main",
            "hnr_downloader.scripts",
            "hnr_downloader.scripts.copytext",
            "hnr_downloader.scripts.msgfmt",
            "hnr_downloader.scripts.pygettext"
        ],
        "version": "1.0.0.1"
    },
    "hnr-downloader-dergenlee": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hns-chargebee-api": {
        "cmdline": [],
        "modules": [
            "hns_chargebee_api"
        ],
        "version": "20.3.1"
    },
    "hns-console-logging": {
        "cmdline": [],
        "modules": [
            "hns_console_logging"
        ],
        "version": "20.5"
    },
    "hns-notification": {
        "cmdline": [],
        "modules": [
            "hns_notification",
            "hns_notification.opsgenie"
        ],
        "version": "20.3"
    },
    "hns-sunshine-api": {
        "cmdline": [],
        "modules": [
            "hns_sunshine_api",
            "hns_sunshine_api.main",
            "hns_sunshine_api.sunshine",
            "hns_sunshine_api.sunshine.base",
            "hns_sunshine_api.sunshine.object_records",
            "hns_sunshine_api.sunshine.relationship_records"
        ],
        "version": "0.3.2"
    },
    "hns-utils": {
        "cmdline": [],
        "modules": [
            "hns_utils"
        ],
        "version": "20.4.1"
    },
    "hnswlib": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0"
    },
    "hntool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hntop": {
        "cmdline": [],
        "modules": [
            "hnapi",
            "hnapi.hnapi",
            "hnapi.hnitem"
        ],
        "version": "0.0.10"
    },
    "hnu-gadget": {
        "cmdline": [],
        "modules": [
            "hnu_gadget",
            "hnu_gadget.application",
            "hnu_gadget.hackernews"
        ],
        "version": "0.5.0"
    },
    "hnv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ho-hello": {
        "cmdline": [],
        "modules": [
            "ho",
            "ho.hello"
        ],
        "version": "0.0.1"
    },
    "hoa-utils": {
        "cmdline": [],
        "modules": [
            "hoa",
            "hoa.__version__",
            "hoa.ast",
            "hoa.ast.acceptance",
            "hoa.ast.boolean_expression",
            "hoa.ast.label",
            "hoa.core",
            "hoa.dumpers",
            "hoa.helpers",
            "hoa.helpers.base",
            "hoa.parsers",
            "hoa.printers",
            "hoa.tools",
            "hoa.tools.pyhoafparser",
            "hoa.types"
        ],
        "version": "0.1.0"
    },
    "hoard": {
        "cmdline": [],
        "modules": [
            "hoard",
            "hoard.api",
            "hoard.frontend",
            "hoard.main"
        ],
        "version": "1.1.1"
    },
    "hoarder": {
        "cmdline": [],
        "modules": [
            "hoarder",
            "hoarder.backends",
            "hoarder.ga",
            "hoarder.middleware",
            "hoarder.models",
            "hoarder.mongo",
            "hoarder.tasks",
            "hoarder.templatetags",
            "hoarder.templatetags.hoarder_tags",
            "hoarder.tests",
            "hoarder.views"
        ],
        "version": "0.0.6"
    },
    "hob": {
        "cmdline": [],
        "modules": [
            "hob",
            "hob._js",
            "hob._rst",
            "hob._xmlgen",
            "hob.cmd",
            "hob.extension",
            "hob.parser",
            "hob.proto",
            "hob.script",
            "hob.template",
            "hob.ui",
            "hob.utils"
        ],
        "version": "0.3.3"
    },
    "hoba": {
        "cmdline": [],
        "modules": [
            "hoba",
            "hoba.cli",
            "hoba.gen",
            "hoba.sync"
        ],
        "version": "0.1.2"
    },
    "hobart": {
        "cmdline": [],
        "modules": [
            "hobart",
            "hobart.cli",
            "hobart.core",
            "hobart.geometry",
            "hobart.mesh",
            "hobart.svg",
            "hobart.test_core"
        ],
        "version": "0.2.1"
    },
    "hobart-svg": {
        "cmdline": [],
        "modules": [
            "hobart_svg",
            "hobart_svg.cli",
            "hobart_svg.core",
            "hobart_svg.geometry",
            "hobart_svg.mesh",
            "hobart_svg.svg",
            "hobart_svg.test_core"
        ],
        "version": "0.3.0"
    },
    "hobbit": {
        "cmdline": [],
        "modules": [
            "hobbit",
            "hobbit.actions",
            "hobbit.actions.path_actions",
            "hobbit.actions.result_actions",
            "hobbit.path",
            "hobbit.robber",
            "hobbit.rucksack",
            "hobbit.utils"
        ],
        "version": "0.0.1a0"
    },
    "hobbit-core": {
        "cmdline": [],
        "modules": [
            "hobbit",
            "hobbit.bootstrap",
            "hobbit.devtools",
            "hobbit.handlers",
            "hobbit.handlers.bootstrap",
            "hobbit.handlers.devtools",
            "hobbit_core",
            "hobbit_core.db",
            "hobbit_core.err_handler",
            "hobbit_core.pagination",
            "hobbit_core.response",
            "hobbit_core.schemas",
            "hobbit_core.utils",
            "hobbit_core.webargs"
        ],
        "version": "1.4.4"
    },
    "hobo": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hoboken": {
        "cmdline": [],
        "modules": [
            "hoboken",
            "hoboken._version",
            "hoboken.application",
            "hoboken.conditions",
            "hoboken.exceptions",
            "hoboken.ext",
            "hoboken.helpers",
            "hoboken.matchers",
            "hoboken.objects",
            "hoboken.six",
            "hoboken.tests",
            "hoboken.tests.helpers",
            "hoboken.tests.test_HobokenApplication",
            "hoboken.tests.test_beforeafter",
            "hoboken.tests.test_conditions",
            "hoboken.tests.test_ext",
            "hoboken.tests.test_helpers",
            "hoboken.tests.test_matchers",
            "hoboken.tests.test_request_response",
            "hoboken.tests.test_routing"
        ],
        "version": "0.5.1"
    },
    "hobonickels": {
        "cmdline": [],
        "modules": [
            "hobonickels",
            "hobonickels.hobonickels_api",
            "hobonickels.hobonickels_utils"
        ],
        "version": "1.0.2"
    },
    "hoboreader": {
        "cmdline": [],
        "modules": [
            "hoboreader",
            "hoboreader.hoboreader"
        ],
        "version": "0.0.2"
    },
    "hobson": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hoc-sequence": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hoc2swc": {
        "cmdline": [],
        "modules": [
            "hoc2swc",
            "tests",
            "tests.test_all"
        ],
        "version": "0.1.2"
    },
    "hocapontas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hochiminh": {
        "cmdline": [],
        "modules": [
            "hochiminh",
            "hochiminh.dev",
            "hochiminh.dev.cell_detector_simple",
            "hochiminh.dev.font_to_image",
            "hochiminh.dev.keras_filtering",
            "hochiminh.dev.keras_test",
            "hochiminh.dev.main.so",
            "hochiminh.dev.to_csv",
            "hochiminh.image_processing",
            "hochiminh.image_processing.connected_components",
            "hochiminh.image_processing.cross_detector",
            "hochiminh.image_processing.geometry",
            "hochiminh.image_processing.hochiminh",
            "hochiminh.image_processing.lines_detector",
            "hochiminh.image_processing.ocr",
            "hochiminh.io",
            "hochiminh.io.pdfconverter",
            "hochiminh.io.reader",
            "hochiminh.pdf_parser"
        ],
        "version": "1.0.0"
    },
    "hockepy": {
        "cmdline": [],
        "modules": [
            "hocke",
            "hockepy",
            "hockepy.commands",
            "hockepy.commands.base_command",
            "hockepy.commands.schedule",
            "hockepy.commands.today",
            "hockepy.config",
            "hockepy.game",
            "hockepy.log",
            "hockepy.nhl",
            "hockepy.utils"
        ],
        "version": "0.1.1"
    },
    "hockey": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "hockey-scraper": {
        "cmdline": [],
        "modules": [
            "hockey_scraper",
            "hockey_scraper.nhl",
            "hockey_scraper.nhl.game_scraper",
            "hockey_scraper.nhl.json_schedule",
            "hockey_scraper.nhl.live_scrape",
            "hockey_scraper.nhl.pbp",
            "hockey_scraper.nhl.pbp.espn_pbp",
            "hockey_scraper.nhl.pbp.html_pbp",
            "hockey_scraper.nhl.pbp.json_pbp",
            "hockey_scraper.nhl.playing_roster",
            "hockey_scraper.nhl.scrape_functions",
            "hockey_scraper.nhl.shifts",
            "hockey_scraper.nhl.shifts.html_shifts",
            "hockey_scraper.nhl.shifts.json_shifts",
            "hockey_scraper.nwhl",
            "hockey_scraper.nwhl.game_pbp",
            "hockey_scraper.nwhl.scrape_functions",
            "hockey_scraper.nwhl.scrape_schedule",
            "hockey_scraper.utils",
            "hockey_scraper.utils.merge_pbp_shifts",
            "hockey_scraper.utils.save_pages",
            "hockey_scraper.utils.shared",
            "tests",
            "tests.test_espn_pbp",
            "tests.test_game_scraper",
            "tests.test_html_pbp",
            "tests.test_html_shifts",
            "tests.test_json_pbp",
            "tests.test_json_schedule",
            "tests.test_json_shifts",
            "tests.test_nwhl",
            "tests.test_playing_roster",
            "tests.test_scrape_functions",
            "tests.test_shared"
        ],
        "version": "1.37.2"
    },
    "hockeyapp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hockeyapp-utils": {
        "cmdline": [],
        "modules": [
            "hockeyapp-utils.build_utils",
            "hockeyapp-utils.ci-assemble-and-publish",
            "hockeyapp-utils.general_utils",
            "hockeyapp-utils.git_utils",
            "hockeyapp-utils.hockeyapp_utils",
            "hockeyapp-utils.logger",
            "hockeyapp-utils.sync-branch"
        ],
        "version": "1.0.0"
    },
    "hockeydata": {
        "cmdline": [],
        "modules": [
            "hockeydata",
            "hockeydata.api",
            "hockeydata.cli",
            "hockeydata.cli.utils",
            "hockeydata.constants",
            "hockeydata.output",
            "hockeydata.output.csv",
            "hockeydata.output.json",
            "hockeydata.output.pretty",
            "hockeydata.output.text",
            "hockeydata.scrape",
            "hockeydata.scrape.common",
            "hockeydata.scrape.html_pbp",
            "hockeydata.scrape.html_roster",
            "hockeydata.scrape.json_boxscore",
            "hockeydata.scrape.json_pbp",
            "hockeydata.scrape.json_schedule",
            "hockeydata.scrape.json_shifts",
            "hockeydata.scrape.players",
            "hockeydata.scrape.scrape"
        ],
        "version": "0.0.3"
    },
    "hockeyjockey": {
        "cmdline": [],
        "modules": [
            "hockeyjockey",
            "hockeyjockey.api",
            "hockeyjockey.api.statsapi",
            "hockeyjockey.automation",
            "hockeyjockey.automation.capture",
            "hockeyjockey.config",
            "hockeyjockey.exceptions",
            "hockeyjockey.exceptions.exceptions",
            "hockeyjockey.jockey",
            "hockeyjockey.models",
            "hockeyjockey.models.game",
            "hockeyjockey.models.team",
            "hockeyjockey.models.team_stats",
            "hockeyjockey.utilities",
            "hockeyjockey.utilities.date",
            "hockeyjockey.utilities.db",
            "hockeyjockey.utilities.file",
            "hockeyjockey.utilities.stats"
        ],
        "version": "1.2"
    },
    "hockeylib": {
        "cmdline": [],
        "modules": [
            "hockeylib",
            "hockeylib.api",
            "hockeylib.app",
            "hockeylib.crash",
            "hockeylib.version"
        ],
        "version": "1.0.0"
    },
    "hockeystreams": {
        "cmdline": [],
        "modules": [
            "hockeystreams",
            "hockeystreams.api",
            "hockeystreams.hsutil",
            "hockeystreams.models"
        ],
        "version": "0.2.4"
    },
    "hocon": {
        "cmdline": [],
        "modules": [
            "hocon",
            "hocon.decoder",
            "hocon.encoder"
        ],
        "version": "0.3.0"
    },
    "hocon-validator": {
        "cmdline": [],
        "modules": [
            "hocon_validator",
            "hocon_validator.hocon_validator"
        ],
        "version": "0.1.1"
    },
    "hocoto": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.3"
    },
    "hocr": {
        "cmdline": [],
        "modules": [
            "hocr",
            "hocr.commands",
            "hocr.meta",
            "hocr.overlay",
            "hocr.page",
            "hocr.parser"
        ],
        "version": "0.2.11"
    },
    "hocr-parser": {
        "cmdline": [],
        "modules": [
            "hocr_parser",
            "hocr_parser.parser",
            "test",
            "test.parsingHocrToJson"
        ],
        "version": "0.0.5"
    },
    "hocr-spec": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "hocr-tools": {
        "cmdline": [
            "hocr-check",
            "hocr-combine",
            "hocr-eval",
            "hocr-eval-geom",
            "hocr-eval-lines",
            "hocr-extract-g1000",
            "hocr-extract-images",
            "hocr-lines",
            "hocr-merge-dc",
            "hocr-pdf",
            "hocr-split",
            "hocr-wordfreq"
        ],
        "modules": [],
        "version": "1.2.0"
    },
    "hocron": {
        "cmdline": [],
        "modules": [
            "hocron",
            "hocron.line_pattern"
        ],
        "version": "0.5.0"
    },
    "hocus-pocus": {
        "cmdline": [],
        "modules": [
            "hocus_pocus",
            "hocus_pocus.py",
            "hocus_pocus.tex",
            "hocus_pocus.util"
        ],
        "version": "0.1.0"
    },
    "hoddb": {
        "cmdline": [],
        "modules": [
            "hoddb",
            "hoddb.client",
            "hoddb.test",
            "hoddb.x"
        ],
        "version": "0.0.2"
    },
    "hodge": {
        "cmdline": [],
        "modules": [
            "hodge",
            "hodge.utils"
        ],
        "version": "0.1"
    },
    "hodgelaplacians": {
        "cmdline": [],
        "modules": [
            "hodgelaplacians",
            "hodgelaplacians.hodgelaplacians"
        ],
        "version": "0.1"
    },
    "hodgepodge": {
        "cmdline": [],
        "modules": [
            "hodgepodge"
        ],
        "version": "0.0.0"
    },
    "hodl": {
        "cmdline": [],
        "modules": [
            "hodl"
        ],
        "version": "1.2.0"
    },
    "hodor": {
        "cmdline": [],
        "modules": [],
        "version": "1!0"
    },
    "hodorlive": {
        "cmdline": [],
        "modules": [
            "hodor"
        ],
        "version": "1.2.7"
    },
    "hoedown": {
        "cmdline": [
            "hoedownpy"
        ],
        "modules": [],
        "version": "0.3.0"
    },
    "hoehoe": {
        "cmdline": [],
        "modules": [
            "hoehoe",
            "hoehoe.advert",
            "hoehoe.exceptions",
            "hoehoe.page",
            "hoehoe.utils"
        ],
        "version": "0.0.9"
    },
    "hoep": {
        "cmdline": [],
        "modules": [
            "test",
            "test.custom_renderer",
            "test.extensions",
            "test.markdown",
            "test.render_flags",
            "test.smartypants",
            "test.test_hoep",
            "test.unicode"
        ],
        "version": "1.0.2"
    },
    "hoerapi": {
        "cmdline": [],
        "modules": [
            "hoerapi",
            "hoerapi.errors",
            "hoerapi.get_deleted",
            "hoerapi.get_podcast_data",
            "hoerapi.get_podcast_episodes",
            "hoerapi.get_podcast_live",
            "hoerapi.get_podcasts",
            "hoerapi.lowlevel",
            "hoerapi.parser",
            "hoerapi.util"
        ],
        "version": "2.0"
    },
    "hoft": {
        "cmdline": [],
        "modules": [
            "hoft",
            "hoft.core",
            "hoft.core.decorators",
            "hoft.core.parsers_in",
            "hoft.core.parsers_sig",
            "hoft.core.sigs",
            "hoft.core.utils"
        ],
        "version": "0.4.1"
    },
    "hog": {
        "cmdline": [],
        "modules": [
            "hog",
            "hog.hog"
        ],
        "version": "0.1.7"
    },
    "hogabi-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hoggle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hoggorm": {
        "cmdline": [],
        "modules": [],
        "version": "0.13.3"
    },
    "hoggormplot": {
        "cmdline": [],
        "modules": [],
        "version": "0.13.2"
    },
    "hogpi-install": {
        "cmdline": [],
        "modules": [
            "installers",
            "installers.ffmpeg",
            "main"
        ],
        "version": "0.1.3"
    },
    "hogprop": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hogwarts": {
        "cmdline": [],
        "modules": [
            "hogwarts",
            "hogwarts.version"
        ],
        "version": "0.0.4"
    },
    "hogwatch": {
        "cmdline": [
            "hogwatch"
        ],
        "modules": [
            "hogwatch",
            "hogwatch.server",
            "hogwatch.server.watchdogs",
            "hogwatch.server.watchdogs.nethogs",
            "hogwatch.server.web_service"
        ],
        "version": "0.1.9"
    },
    "hoho": {
        "cmdline": [],
        "modules": [
            "hoho"
        ],
        "version": "1.0.0"
    },
    "hohoho": {
        "cmdline": [],
        "modules": [
            "hohoho",
            "hohoho.hohoho",
            "hohoho.translator"
        ],
        "version": "0.2"
    },
    "hohoxiaoke": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "hoiio": {
        "cmdline": [],
        "modules": [
            "hoiio",
            "hoiio.exceptions",
            "hoiio.service",
            "hoiio.service.account",
            "hoiio.service.fax",
            "hoiio.service.ivr",
            "hoiio.service.number",
            "hoiio.service.sms",
            "hoiio.service.voice",
            "hoiio.utils"
        ],
        "version": "0.1.5"
    },
    "hoist": {
        "cmdline": [],
        "modules": [
            "hoist",
            "hoist.util"
        ],
        "version": "0.1.2"
    },
    "hoist-prop-types": {
        "cmdline": [],
        "modules": [
            "hoist_prop_types",
            "hoist_prop_types.hoist_prop_types"
        ],
        "version": "0.1.1"
    },
    "hokage": {
        "cmdline": [],
        "modules": [
            "hokage",
            "hokage.database",
            "hokage.s3",
            "hokage.secrets_manager",
            "hokage.ses",
            "hokage.slack",
            "hokage.sqs",
            "hokage.utils",
            "hokage.utils.email_validator",
            "hokage.utils.ssh_validator",
            "hokage.webhook",
            "hokage.zendesk",
            "tests",
            "tests.hokage_test"
        ],
        "version": "0.0.5"
    },
    "hoki": {
        "cmdline": [],
        "modules": [],
        "version": "1.5.1"
    },
    "hokohoko": {
        "cmdline": [],
        "modules": [
            "entities",
            "entities._Account",
            "entities._Assessor",
            "entities._Bar",
            "entities._Config",
            "entities._Data",
            "entities._Direction",
            "entities._Order",
            "entities._Position",
            "entities._Predictor",
            "entities._Status",
            "standard",
            "standard._DoNothing",
            "standard._Logger",
            "standard._Npz"
        ],
        "version": "0.1.0a1602446538"
    },
    "hokusai": {
        "cmdline": [
            "hokusai"
        ],
        "modules": [
            "hokusai",
            "hokusai.version"
        ],
        "version": "0.5.11"
    },
    "hokuyolx": {
        "cmdline": [],
        "modules": [
            "hokuyolx",
            "hokuyolx.exceptions",
            "hokuyolx.hokuyo",
            "hokuyolx.statuses"
        ],
        "version": "0.9.0"
    },
    "hola": {
        "cmdline": [],
        "modules": [
            "greetings",
            "greetings.hello",
            "greetings.world"
        ],
        "version": "1.1.54"
    },
    "hola-mundo": {
        "cmdline": [],
        "modules": [
            "hola_mundo",
            "hola_mundo.el_grito",
            "hola_mundo.el_mundo",
            "hola_mundo.main",
            "hola_mundo/util",
            "hola_mundo/util.config_loader"
        ],
        "version": "0.0.3"
    },
    "holaz": {
        "cmdline": [],
        "modules": [
            "holaz"
        ],
        "version": "1.0.0"
    },
    "holcrawl": {
        "cmdline": [],
        "modules": [
            "holcrawl",
            "holcrawl._version",
            "holcrawl.compound_cmd",
            "holcrawl.dataset",
            "holcrawl.imdb_crawl",
            "holcrawl.metacritic_crawl",
            "holcrawl.shared",
            "holcrawl.wiki_crawl",
            "scripts",
            "scripts.dataset_cli",
            "scripts.holcrawl_cli",
            "scripts.imdb_cli",
            "scripts.meta_cli",
            "scripts.shared_options",
            "scripts.wiki_cli"
        ],
        "version": "1.0.1"
    },
    "hold-up": {
        "cmdline": [],
        "modules": [],
        "version": "0.0"
    },
    "holdem": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "holdem-calc": {
        "cmdline": [],
        "modules": [
            "holdem_calc",
            "holdem_calc.holdem_argparser",
            "holdem_calc.holdem_calc",
            "holdem_calc.holdem_functions",
            "holdem_calc.parallel_holdem_calc"
        ],
        "version": "1.0.0"
    },
    "holder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "holdmybeer": {
        "cmdline": [],
        "modules": [
            "holdmybeer",
            "holdmybeer.complex",
            "holdmybeer.core",
            "holdmybeer.exceptions",
            "holdmybeer.operations",
            "holdmybeer.util"
        ],
        "version": "0.0.2"
    },
    "holdmykeys": {
        "cmdline": [],
        "modules": [
            "holdmykeys",
            "holdmykeys.cli",
            "holdmykeys.holdmykeys"
        ],
        "version": "0.1.0"
    },
    "holdouts-generator": {
        "cmdline": [],
        "modules": [
            "holdouts_generator",
            "holdouts_generator.__version__",
            "holdouts_generator.balanced_random_holdouts",
            "holdouts_generator.chromosomal_holdout",
            "holdouts_generator.holdouts_generator",
            "holdouts_generator.random_holdout",
            "holdouts_generator.store_results",
            "holdouts_generator.utils",
            "holdouts_generator.utils.cache",
            "holdouts_generator.utils.hash",
            "holdouts_generator.utils.holdouts_description",
            "holdouts_generator.utils.json",
            "holdouts_generator.utils.metrics",
            "holdouts_generator.utils.paths",
            "holdouts_generator.utils.various",
            "holdouts_generator.work_in_progress"
        ],
        "version": "0.0.52"
    },
    "holdup": {
        "cmdline": [],
        "modules": [
            "holdup",
            "holdup.cli"
        ],
        "version": "1.8.0"
    },
    "hole": {
        "cmdline": [],
        "modules": [
            "hole",
            "hole.exceptions"
        ],
        "version": "0.5.1"
    },
    "holecardhandicapper": {
        "cmdline": [],
        "modules": [
            "holecardhandicapper",
            "holecardhandicapper.model",
            "holecardhandicapper.model.const",
            "holecardhandicapper.model.model_builder",
            "holecardhandicapper.model.neuralnet",
            "holecardhandicapper.model.utils"
        ],
        "version": "1.2.1"
    },
    "holehe": {
        "cmdline": [],
        "modules": [
            "holehe",
            "holehe.core",
            "holehe.localuseragent"
        ],
        "version": "1.54.1"
    },
    "holepunch": {
        "cmdline": [],
        "modules": [
            "holepunch",
            "holepunch.version"
        ],
        "version": "0.8.0"
    },
    "holes": {
        "cmdline": [],
        "modules": [
            "holes",
            "holes._version",
            "holes.ret",
            "holes.tests",
            "holes.tests.conftest",
            "holes.tests.test_examples"
        ],
        "version": "0.1.0"
    },
    "holey": {
        "cmdline": [],
        "modules": [
            "holey",
            "holey.draw",
            "holey.loop",
            "holey.point",
            "holey.rasterize"
        ],
        "version": "2018.11"
    },
    "holger-utils": {
        "cmdline": [],
        "modules": [
            "holger",
            "holger.authentication",
            "holger.authentication.admin",
            "holger.authentication.admin.phone_user_admin",
            "holger.authentication.admin.user_admin",
            "holger.authentication.apps",
            "holger.authentication.backends",
            "holger.authentication.backends.magic_link",
            "holger.authentication.decorators",
            "holger.authentication.decorators.ajax",
            "holger.authentication.decorators.anonymous",
            "holger.authentication.decorators.group",
            "holger.authentication.decorators.jwt",
            "holger.authentication.decorators.superuser",
            "holger.authentication.decorators.timer",
            "holger.authentication.decorators.verify",
            "holger.authentication.forms",
            "holger.authentication.forms.phone_number_user_forms",
            "holger.authentication.forms.user_forms",
            "holger.authentication.managers",
            "holger.authentication.managers.phone_user_managers",
            "holger.authentication.managers.user_managers",
            "holger.authentication.middleware",
            "holger.authentication.middleware.jwt",
            "holger.authentication.middleware.magic",
            "holger.authentication.middleware.mixin",
            "holger.authentication.migrations",
            "holger.authentication.migrations.0001_initial",
            "holger.authentication.models",
            "holger.authentication.models.abstract_user",
            "holger.authentication.models.date_mixin",
            "holger.authentication.models.email_user",
            "holger.authentication.models.finance_mixin",
            "holger.authentication.models.permission_mixin",
            "holger.authentication.models.phone_number_user",
            "holger.authentication.models.profile",
            "holger.authentication.models.profile_mixin",
            "holger.authentication.models.recieiver",
            "holger.authentication.models.recieiver.last_login",
            "holger.authentication.tests",
            "holger.authentication.tokens",
            "holger.authentication.tokens.magic_token_generator",
            "holger.authentication.tokens.verify_email_token_generator",
            "holger.authentication.utils",
            "holger.authentication.utils.functions",
            "holger.authentication.utils.functions.user_pk_generator",
            "holger.command",
            "holger.command.apps",
            "holger.command.command",
            "holger.command.tests",
            "holger.connections",
            "holger.connections.apps",
            "holger.connections.client",
            "holger.connections.functions",
            "holger.connections.functions.error",
            "holger.connections.functions.metadata",
            "holger.connections.migrations",
            "holger.connections.tests",
            "holger.cryptography",
            "holger.cryptography.rsa",
            "holger.database",
            "holger.database.apps",
            "holger.database.middleware",
            "holger.database.middleware.mixin",
            "holger.database.middleware.pinning_router_middleware",
            "holger.database.router",
            "holger.database.router.pinning_replica_router",
            "holger.database.router.replica_router",
            "holger.database.router.utils",
            "holger.database.test",
            "holger.database.test.multi_database_test",
            "holger.database.tests",
            "holger.elasticsearch",
            "holger.elasticsearch.apps",
            "holger.elasticsearch.client",
            "holger.elasticsearch.commands",
            "holger.elasticsearch.config",
            "holger.elasticsearch.tests",
            "holger.elasticsearch.utils",
            "holger.elasticsearch.utils.functions",
            "holger.elasticsearch.utils.functions.validate_status",
            "holger.firebase",
            "holger.firebase.apps",
            "holger.firebase.client",
            "holger.firebase.client.firestore",
            "holger.firebase.client.messaging",
            "holger.firebase.tests",
            "holger.logs",
            "holger.logs.apps",
            "holger.logs.decorators",
            "holger.logs.decorators.log",
            "holger.logs.functions",
            "holger.logs.functions.log",
            "holger.logs.tests",
            "holger.logs.todo",
            "holger.mock",
            "holger.mock.decorator",
            "holger.mock.decorator.mock",
            "holger.multiprocessing",
            "holger.multiprocessing.apps",
            "holger.multiprocessing.pool",
            "holger.multiprocessing.tests",
            "holger.multiprocessing.todo",
            "holger.rest",
            "holger.rest.authorization",
            "holger.rest.authorization.authentication_backend",
            "holger.rest.authorization.has_permission",
            "holger.rest.authorization.is_authenticated",
            "holger.rest.authorization.is_member",
            "holger.rest.authorization.is_staff",
            "holger.rest.authorization.permission",
            "holger.rest.authorization.token",
            "holger.rest.pagination",
            "holger.rest.router",
            "holger.rest.viewset",
            "holger.rest.viewset.model_viewset",
            "holger.rest.viewset.read_only_model_viewset",
            "holger.sentry",
            "holger.sentry.apps",
            "holger.sentry.commands",
            "holger.sentry.config",
            "holger.sentry.tests",
            "holger.sentry.utils",
            "holger.sentry.utils.functions",
            "holger.sentry.utils.functions.config_scope",
            "holger.sentry.utils.functions.validate_status",
            "holger.status"
        ],
        "version": "0.7.9"
    },
    "holi-distributions": {
        "cmdline": [],
        "modules": [
            "holi-distributions",
            "holi-distributions.Binomialdistribution",
            "holi-distributions.Gaussiandistribution",
            "holi-distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "holiday": {
        "cmdline": [],
        "modules": [
            "holiday",
            "holiday._compat",
            "holiday.core",
            "holiday.exceptions",
            "tests",
            "tests.test_holiday"
        ],
        "version": "1.0.0"
    },
    "holiday-calendar": {
        "cmdline": [],
        "modules": [
            "holiday_calendar",
            "holiday_calendar.get_data"
        ],
        "version": "0.1.3"
    },
    "holiday-jp": {
        "cmdline": [],
        "modules": [
            "holiday_jp",
            "holiday_jp.holiday_jp",
            "holiday_jp.holidays",
            "holiday_jp.test"
        ],
        "version": "19.10.14"
    },
    "holiday-oracle": {
        "cmdline": [],
        "modules": [
            "offchain",
            "offchain.api"
        ],
        "version": "0.1.2"
    },
    "holidayman-paginator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "holidayrules": {
        "cmdline": [],
        "modules": [
            "holidayrules",
            "holidayrules.version"
        ],
        "version": "0.0.1"
    },
    "holidays": {
        "cmdline": [],
        "modules": [
            "holidays",
            "holidays.constants",
            "holidays.holiday_base",
            "holidays.utils",
            "holidays/countries",
            "holidays/countries.argentina",
            "holidays/countries.aruba",
            "holidays/countries.australia",
            "holidays/countries.austria",
            "holidays/countries.belarus",
            "holidays/countries.belgium",
            "holidays/countries.brazil",
            "holidays/countries.bulgaria",
            "holidays/countries.burundi",
            "holidays/countries.canada",
            "holidays/countries.chile",
            "holidays/countries.colombia",
            "holidays/countries.croatia",
            "holidays/countries.czechia",
            "holidays/countries.denmark",
            "holidays/countries.dominican_republic",
            "holidays/countries.egypt",
            "holidays/countries.estonia",
            "holidays/countries.european_central_bank",
            "holidays/countries.finland",
            "holidays/countries.france",
            "holidays/countries.germany",
            "holidays/countries.greece",
            "holidays/countries.honduras",
            "holidays/countries.hongkong",
            "holidays/countries.hungary",
            "holidays/countries.iceland",
            "holidays/countries.india",
            "holidays/countries.ireland",
            "holidays/countries.israel",
            "holidays/countries.italy",
            "holidays/countries.japan",
            "holidays/countries.kenya",
            "holidays/countries.korea",
            "holidays/countries.latvia",
            "holidays/countries.lithuania",
            "holidays/countries.luxembourg",
            "holidays/countries.mexico",
            "holidays/countries.morocco",
            "holidays/countries.netherlands",
            "holidays/countries.new_zealand",
            "holidays/countries.nicaragua",
            "holidays/countries.nigeria",
            "holidays/countries.norway",
            "holidays/countries.paraguay",
            "holidays/countries.peru",
            "holidays/countries.poland",
            "holidays/countries.portugal",
            "holidays/countries.romania",
            "holidays/countries.russia",
            "holidays/countries.serbia",
            "holidays/countries.singapore",
            "holidays/countries.slovakia",
            "holidays/countries.slovenia",
            "holidays/countries.south_africa",
            "holidays/countries.spain",
            "holidays/countries.sweden",
            "holidays/countries.switzerland",
            "holidays/countries.turkey",
            "holidays/countries.ukraine",
            "holidays/countries.united_kingdom",
            "holidays/countries.united_states",
            "holidays/countries.vietnam"
        ],
        "version": "0.10.3"
    },
    "holidays-co": {
        "cmdline": [],
        "modules": [
            "holidays_co"
        ],
        "version": "1.0.0"
    },
    "holidays-es": {
        "cmdline": [],
        "modules": [
            "holidays_es",
            "holidays_es.holidays",
            "tests",
            "tests.test_holidays"
        ],
        "version": "1.0.1"
    },
    "holidays-jp": {
        "cmdline": [],
        "modules": [
            "holidays_jp",
            "holidays_jp.countries",
            "holidays_jp.countries.jp",
            "holidays_jp.countries.us",
            "holidays_jp.tests"
        ],
        "version": "1.0.2"
    },
    "holidays-plus": {
        "cmdline": [],
        "modules": [
            "holidays_plus"
        ],
        "version": "0.0.2"
    },
    "holidays-plus-samtregar": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "holiness": {
        "cmdline": [],
        "modules": [
            "holiness"
        ],
        "version": "0.2"
    },
    "holistics": {
        "cmdline": [],
        "modules": [
            "holistics",
            "holistics.holistics",
            "tests",
            "tests.test_holistics"
        ],
        "version": "0.0a11"
    },
    "hollamundo": {
        "cmdline": [],
        "modules": [
            "hollamundo"
        ],
        "version": "0.0.1"
    },
    "holland": {
        "cmdline": [],
        "modules": [
            "holland",
            "holland.evolution",
            "holland.evolution.breeding",
            "holland.evolution.crossover",
            "holland.evolution.evaluation",
            "holland.evolution.evolution",
            "holland.evolution.mutation",
            "holland.evolution.selection",
            "holland.library",
            "holland.library.crossover_functions",
            "holland.library.fitness_weighting_functions",
            "holland.library.mutation_functions",
            "holland.storage",
            "holland.storage.fitness",
            "holland.storage.genomes_and_fitnesses",
            "holland.storage.storage_manager",
            "holland.storage.utils",
            "holland.utils",
            "holland.utils.utils",
            "tests",
            "tests.evolution",
            "tests.evolution.test_breeding",
            "tests.evolution.test_crossover",
            "tests.evolution.test_evaluation",
            "tests.evolution.test_evolution",
            "tests.evolution.test_mutation",
            "tests.evolution.test_selection",
            "tests.library",
            "tests.library.test_crossover_functions",
            "tests.library.test_fitness_weighting_functions",
            "tests.library.test_mutation_functions",
            "tests.storage",
            "tests.storage.test_fitness",
            "tests.storage.test_genomes_and_fitnesses",
            "tests.storage.test_storage_manager",
            "tests.storage.test_utils",
            "tests.utils",
            "tests.utils.test_utils"
        ],
        "version": "0.0.2"
    },
    "hollandamerica": {
        "cmdline": [],
        "modules": [
            "holam",
            "holam.blah",
            "holam.exscrape",
            "holam.portscrape",
            "holam.scrapeports"
        ],
        "version": "0.147dev"
    },
    "hollowpoint": {
        "cmdline": [],
        "modules": [
            "hollowpoint"
        ],
        "version": "0.1"
    },
    "holly": {
        "cmdline": [],
        "modules": [
            "holly"
        ],
        "version": "0.2.1"
    },
    "holman": {
        "cmdline": [],
        "modules": [
            "holman",
            "holman.holman",
            "holmanctl"
        ],
        "version": "0.1.0"
    },
    "holmes": {
        "cmdline": [],
        "modules": [
            "holmes",
            "holmes.cache",
            "holmes.cli",
            "holmes.config",
            "holmes.error_handlers",
            "holmes.error_handlers.sentry",
            "holmes.event_bus",
            "holmes.facters",
            "holmes.facters.body",
            "holmes.facters.css",
            "holmes.facters.google_analytics",
            "holmes.facters.head",
            "holmes.facters.heading_hierarchy",
            "holmes.facters.images",
            "holmes.facters.js",
            "holmes.facters.last_modified",
            "holmes.facters.links",
            "holmes.facters.meta_tags",
            "holmes.facters.robots",
            "holmes.facters.sitemap",
            "holmes.facters.title",
            "holmes.handlers",
            "holmes.handlers.auth",
            "holmes.handlers.bus",
            "holmes.handlers.domains",
            "holmes.handlers.domains_violations_prefs",
            "holmes.handlers.limiter",
            "holmes.handlers.page",
            "holmes.handlers.request",
            "holmes.handlers.review",
            "holmes.handlers.search",
            "holmes.handlers.users",
            "holmes.handlers.users_violations_prefs",
            "holmes.handlers.violation",
            "holmes.material",
            "holmes.models",
            "holmes.models.domain",
            "holmes.models.domains_violations_prefs",
            "holmes.models.fact",
            "holmes.models.keys",
            "holmes.models.keys_category",
            "holmes.models.limiter",
            "holmes.models.page",
            "holmes.models.request",
            "holmes.models.review",
            "holmes.models.user",
            "holmes.models.users_violations_prefs",
            "holmes.models.violation",
            "holmes.reviewer",
            "holmes.search",
            "holmes.search_providers",
            "holmes.search_providers.authnz_elastic",
            "holmes.search_providers.elastic",
            "holmes.search_providers.noexternal",
            "holmes.server",
            "holmes.utils",
            "holmes.validators",
            "holmes.validators.anchor_without_any_text",
            "holmes.validators.base",
            "holmes.validators.blacklist",
            "holmes.validators.body",
            "holmes.validators.css_requests",
            "holmes.validators.domain_canonicalization",
            "holmes.validators.google_analytics",
            "holmes.validators.heading_hierarchy",
            "holmes.validators.image_alt",
            "holmes.validators.img_requests",
            "holmes.validators.js_requests",
            "holmes.validators.last_modified",
            "holmes.validators.link_crawler",
            "holmes.validators.link_with_redirect",
            "holmes.validators.link_with_rel_canonical",
            "holmes.validators.links_with_rel_nofollow",
            "holmes.validators.meta_robots",
            "holmes.validators.meta_tags",
            "holmes.validators.open_graph",
            "holmes.validators.required_meta_tags",
            "holmes.validators.robots",
            "holmes.validators.schema_org_item_type",
            "holmes.validators.sitemap",
            "holmes.validators.title",
            "holmes.validators.total_requests",
            "holmes.validators.url_with_underscore",
            "holmes.worker"
        ],
        "version": "0.15.16"
    },
    "holmes-extractor": {
        "cmdline": [],
        "modules": [
            "holmes_extractor",
            "holmes_extractor.consoles",
            "holmes_extractor.errors",
            "holmes_extractor.extensive_matching",
            "holmes_extractor.manager",
            "holmes_extractor.ontology",
            "holmes_extractor.semantics",
            "holmes_extractor.structural_matching"
        ],
        "version": "2.2.1"
    },
    "holmes-ml": {
        "cmdline": [],
        "modules": [
            "holmes",
            "holmes.dataloader",
            "holmes.features",
            "holmes.test_run"
        ],
        "version": "0.0.1"
    },
    "holmesalf": {
        "cmdline": [],
        "modules": [
            "holmesalf",
            "holmesalf.version",
            "holmesalf.wrapper",
            "tests",
            "tests.base",
            "tests.test_version",
            "tests.test_wrapper"
        ],
        "version": "0.1.3"
    },
    "holmium-core": {
        "cmdline": [],
        "modules": [
            "holmium",
            "holmium.core",
            "holmium.core._version",
            "holmium.core.conditions",
            "holmium.core.config",
            "holmium.core.cucumber",
            "holmium.core.deprecated",
            "holmium.core.enhancers",
            "holmium.core.env",
            "holmium.core.facets",
            "holmium.core.logger",
            "holmium.core.noseplugin",
            "holmium.core.pageobject",
            "holmium.core.testcase",
            "holmium.core.version"
        ],
        "version": "0.8.5"
    },
    "holmos-camera-server": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "holo": {
        "cmdline": [],
        "modules": [
            "holo",
            "holo.holo"
        ],
        "version": "0.1.3"
    },
    "holoaverage": {
        "cmdline": [],
        "modules": [
            "holoaverage",
            "holoaverage.average",
            "holoaverage.camera",
            "holoaverage.defocus",
            "holoaverage.dm3",
            "holoaverage.fft",
            "holoaverage.filter",
            "holoaverage.grid",
            "holoaverage.hdf5",
            "holoaverage.json_utils",
            "holoaverage.main",
            "holoaverage.rawalign",
            "holoaverage.reconstruction",
            "holoaverage.series",
            "holoaverage.version"
        ],
        "version": "1.1.7"
    },
    "holobook": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "holoclean": {
        "cmdline": [],
        "modules": [
            "holoclean",
            "holoclean.DCFormatException",
            "holoclean.dataengine",
            "holoclean.dataset",
            "holoclean.global_variables",
            "holoclean.holoclean"
        ],
        "version": "0.1.2"
    },
    "holocron": {
        "cmdline": [],
        "modules": [
            "holocron",
            "holocron.app",
            "holocron.content",
            "holocron.ext",
            "holocron.ext.abc",
            "holocron.ext.commands",
            "holocron.ext.commands.build",
            "holocron.ext.commands.init",
            "holocron.ext.commands.serve",
            "holocron.ext.feed",
            "holocron.ext.index",
            "holocron.ext.markdown",
            "holocron.ext.restructuredtext",
            "holocron.ext.sitemap",
            "holocron.ext.tags",
            "holocron.ext.user_theme",
            "holocron.main",
            "holocron.utils",
            "tests",
            "tests.ext",
            "tests.ext.commands",
            "tests.ext.commands.test_build",
            "tests.ext.commands.test_init",
            "tests.ext.commands.test_serve",
            "tests.ext.test_feed",
            "tests.ext.test_index",
            "tests.ext.test_markdown",
            "tests.ext.test_restructuredtext",
            "tests.ext.test_sitemap",
            "tests.ext.test_tags",
            "tests.test_app",
            "tests.test_content",
            "tests.test_main",
            "tests.test_utils"
        ],
        "version": "0.3.0"
    },
    "holocron-clear-theme": {
        "cmdline": [],
        "modules": [
            "holocron_clear_theme"
        ],
        "version": "1.0.0"
    },
    "holocron-creole": {
        "cmdline": [],
        "modules": [
            "holocron_creole",
            "holocron_creole.converter",
            "tests",
            "tests.test_creole",
            "tests.test_holocron"
        ],
        "version": "1.0.0"
    },
    "holodeck": {
        "cmdline": [],
        "modules": [
            "holodeck",
            "holodeck.agents",
            "holodeck.command",
            "holodeck.environments",
            "holodeck.exceptions",
            "holodeck.holodeck",
            "holodeck.holodeckclient",
            "holodeck.joint_constraints",
            "holodeck.packagemanager",
            "holodeck.sensors",
            "holodeck.shmem",
            "holodeck.spaces",
            "holodeck.util",
            "holodeck.weather"
        ],
        "version": "0.3.1"
    },
    "holoext": {
        "cmdline": [],
        "modules": [
            "holoext",
            "holoext.utils",
            "holoext.xbokeh"
        ],
        "version": "1.0.4"
    },
    "hologger": {
        "cmdline": [],
        "modules": [
            "hologger",
            "hologger.apps",
            "hologger.handlers",
            "hologger.middleware",
            "hologger.models",
            "hologger.router",
            "hologger.serializers",
            "hologger.settings",
            "hologger.signal",
            "hologger.urls",
            "hologger.wsgi"
        ],
        "version": "0.0.5"
    },
    "hologram": {
        "cmdline": [],
        "modules": [
            "hologram",
            "hologram.helpers"
        ],
        "version": "0.0.11"
    },
    "hologram-python": {
        "cmdline": [
            "hologram"
        ],
        "modules": [
            "Exceptions",
            "Exceptions.HologramError",
            "Hologram",
            "Hologram.Api",
            "Hologram.Api.Api",
            "Hologram.Authentication",
            "Hologram.Authentication.Authentication",
            "Hologram.Authentication.CSRPSKAuthentication",
            "Hologram.Authentication.HologramAuthentication",
            "Hologram.Cloud",
            "Hologram.CustomCloud",
            "Hologram.Event",
            "Hologram.Event.Event",
            "Hologram.HologramCloud",
            "Hologram.Network",
            "Hologram.Network.BLE",
            "Hologram.Network.Cellular",
            "Hologram.Network.Ethernet",
            "Hologram.Network.Modem",
            "Hologram.Network.Modem.DriverLoader",
            "Hologram.Network.Modem.E303",
            "Hologram.Network.Modem.IModem",
            "Hologram.Network.Modem.MS2131",
            "Hologram.Network.Modem.MockModem",
            "Hologram.Network.Modem.Modem",
            "Hologram.Network.Modem.ModemMode",
            "Hologram.Network.Modem.ModemMode.IPPP",
            "Hologram.Network.Modem.ModemMode.MockPPP",
            "Hologram.Network.Modem.ModemMode.ModemMode",
            "Hologram.Network.Modem.ModemMode.PPP",
            "Hologram.Network.Modem.ModemMode.pppd",
            "Hologram.Network.Modem.Nova",
            "Hologram.Network.Modem.NovaM",
            "Hologram.Network.Modem.Nova_U201",
            "Hologram.Network.Modem.chatscripts",
            "Hologram.Network.Network",
            "Hologram.Network.NetworkManager",
            "Hologram.Network.Route",
            "Hologram.Network.Wifi",
            "UtilClasses",
            "UtilClasses.UtilClasses",
            "scripts",
            "scripts.hologram_activate",
            "scripts.hologram_heartbeat",
            "scripts.hologram_modem",
            "scripts.hologram_network",
            "scripts.hologram_receive",
            "scripts.hologram_send",
            "scripts.hologram_spacebridge",
            "scripts.hologram_util"
        ],
        "version": "0.9.0"
    },
    "holotools": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.10"
    },
    "holoviews": {
        "cmdline": [],
        "modules": [
            "holoviews",
            "holoviews.annotators",
            "holoviews.core",
            "holoviews.core.accessors",
            "holoviews.core.boundingregion",
            "holoviews.core.data",
            "holoviews.core.data.array",
            "holoviews.core.data.cudf",
            "holoviews.core.data.dask",
            "holoviews.core.data.dictionary",
            "holoviews.core.data.grid",
            "holoviews.core.data.image",
            "holoviews.core.data.interface",
            "holoviews.core.data.multipath",
            "holoviews.core.data.pandas",
            "holoviews.core.data.spatialpandas",
            "holoviews.core.data.xarray",
            "holoviews.core.decollate",
            "holoviews.core.dimension",
            "holoviews.core.element",
            "holoviews.core.io",
            "holoviews.core.layout",
            "holoviews.core.ndmapping",
            "holoviews.core.operation",
            "holoviews.core.options",
            "holoviews.core.overlay",
            "holoviews.core.pprint",
            "holoviews.core.sheetcoords",
            "holoviews.core.spaces",
            "holoviews.core.traversal",
            "holoviews.core.tree",
            "holoviews.core.util",
            "holoviews.element",
            "holoviews.element.annotation",
            "holoviews.element.chart",
            "holoviews.element.chart3d",
            "holoviews.element.comparison",
            "holoviews.element.geom",
            "holoviews.element.graphs",
            "holoviews.element.path",
            "holoviews.element.raster",
            "holoviews.element.sankey",
            "holoviews.element.selection",
            "holoviews.element.stats",
            "holoviews.element.tabular",
            "holoviews.element.tiles",
            "holoviews.element.util",
            "holoviews.ipython",
            "holoviews.ipython.archive",
            "holoviews.ipython.display_hooks",
            "holoviews.ipython.magics",
            "holoviews.ipython.preprocessors",
            "holoviews.ipython.widgets",
            "holoviews.operation",
            "holoviews.operation.datashader",
            "holoviews.operation.element",
            "holoviews.operation.normalization",
            "holoviews.operation.stats",
            "holoviews.operation.timeseries",
            "holoviews.plotting",
            "holoviews.plotting.bokeh",
            "holoviews.plotting.bokeh.annotation",
            "holoviews.plotting.bokeh.callbacks",
            "holoviews.plotting.bokeh.chart",
            "holoviews.plotting.bokeh.element",
            "holoviews.plotting.bokeh.geometry",
            "holoviews.plotting.bokeh.graphs",
            "holoviews.plotting.bokeh.heatmap",
            "holoviews.plotting.bokeh.hex_tiles",
            "holoviews.plotting.bokeh.path",
            "holoviews.plotting.bokeh.plot",
            "holoviews.plotting.bokeh.raster",
            "holoviews.plotting.bokeh.renderer",
            "holoviews.plotting.bokeh.sankey",
            "holoviews.plotting.bokeh.selection",
            "holoviews.plotting.bokeh.stats",
            "holoviews.plotting.bokeh.styles",
            "holoviews.plotting.bokeh.tabular",
            "holoviews.plotting.bokeh.tiles",
            "holoviews.plotting.bokeh.util",
            "holoviews.plotting.links",
            "holoviews.plotting.mixins",
            "holoviews.plotting.mpl",
            "holoviews.plotting.mpl.annotation",
            "holoviews.plotting.mpl.chart",
            "holoviews.plotting.mpl.chart3d",
            "holoviews.plotting.mpl.element",
            "holoviews.plotting.mpl.geometry",
            "holoviews.plotting.mpl.graphs",
            "holoviews.plotting.mpl.heatmap",
            "holoviews.plotting.mpl.hex_tiles",
            "holoviews.plotting.mpl.path",
            "holoviews.plotting.mpl.plot",
            "holoviews.plotting.mpl.raster",
            "holoviews.plotting.mpl.renderer",
            "holoviews.plotting.mpl.sankey",
            "holoviews.plotting.mpl.stats",
            "holoviews.plotting.mpl.tabular",
            "holoviews.plotting.mpl.util",
            "holoviews.plotting.plot",
            "holoviews.plotting.plotly",
            "holoviews.plotting.plotly.annotation",
            "holoviews.plotting.plotly.callbacks",
            "holoviews.plotting.plotly.chart",
            "holoviews.plotting.plotly.chart3d",
            "holoviews.plotting.plotly.element",
            "holoviews.plotting.plotly.images",
            "holoviews.plotting.plotly.plot",
            "holoviews.plotting.plotly.raster",
            "holoviews.plotting.plotly.renderer",
            "holoviews.plotting.plotly.selection",
            "holoviews.plotting.plotly.shapes",
            "holoviews.plotting.plotly.stats",
            "holoviews.plotting.plotly.tabular",
            "holoviews.plotting.plotly.util",
            "holoviews.plotting.renderer",
            "holoviews.plotting.util",
            "holoviews.selection",
            "holoviews.streams",
            "holoviews.tests",
            "holoviews.tests.core",
            "holoviews.tests.core.data",
            "holoviews.tests.core.data.base",
            "holoviews.tests.core.data.testarrayinterface",
            "holoviews.tests.core.data.testbinneddatasets",
            "holoviews.tests.core.data.testcudfinterface",
            "holoviews.tests.core.data.testdaskinterface",
            "holoviews.tests.core.data.testdictinterface",
            "holoviews.tests.core.data.testgridinterface",
            "holoviews.tests.core.data.testimageinterface",
            "holoviews.tests.core.data.testmultiinterface",
            "holoviews.tests.core.data.testpandasinterface",
            "holoviews.tests.core.data.testspatialpandas",
            "holoviews.tests.core.data.testxarrayinterface",
            "holoviews.tests.core.testapply",
            "holoviews.tests.core.testarchives",
            "holoviews.tests.core.testboundingregion",
            "holoviews.tests.core.testcallable",
            "holoviews.tests.core.testcollation",
            "holoviews.tests.core.testcomposites",
            "holoviews.tests.core.testdatasetproperty",
            "holoviews.tests.core.testdecollation",
            "holoviews.tests.core.testdimensioned",
            "holoviews.tests.core.testdimensions",
            "holoviews.tests.core.testdynamic",
            "holoviews.tests.core.testelement",
            "holoviews.tests.core.testimportexport",
            "holoviews.tests.core.testlayers",
            "holoviews.tests.core.testlayouts",
            "holoviews.tests.core.testndmapping",
            "holoviews.tests.core.testoperation",
            "holoviews.tests.core.testoptions",
            "holoviews.tests.core.testprettyprint",
            "holoviews.tests.core.teststoreoptions",
            "holoviews.tests.core.testtraversal",
            "holoviews.tests.core.testtree",
            "holoviews.tests.core.testutils",
            "holoviews.tests.element",
            "holoviews.tests.element.test_selection",
            "holoviews.tests.element.testannotations",
            "holoviews.tests.element.testapiconsistency",
            "holoviews.tests.element.testcomparisonchart",
            "holoviews.tests.element.testcomparisoncomposite",
            "holoviews.tests.element.testcomparisondimension",
            "holoviews.tests.element.testcomparisonpath",
            "holoviews.tests.element.testcomparisonraster",
            "holoviews.tests.element.testcomparisonsimple",
            "holoviews.tests.element.testelementconstructors",
            "holoviews.tests.element.testelementranges",
            "holoviews.tests.element.testelementselect",
            "holoviews.tests.element.testellipsis",
            "holoviews.tests.element.testgraphelement",
            "holoviews.tests.element.testimage",
            "holoviews.tests.element.testpaths",
            "holoviews.tests.element.testraster",
            "holoviews.tests.element.teststatselements",
            "holoviews.tests.ipython",
            "holoviews.tests.ipython.testdisplayhooks",
            "holoviews.tests.ipython.testmagics",
            "holoviews.tests.ipython.testnotebooks",
            "holoviews.tests.ipython.testoptscompleter",
            "holoviews.tests.ipython.testparsers",
            "holoviews.tests.operation",
            "holoviews.tests.operation.testdatashader",
            "holoviews.tests.operation.testoperation",
            "holoviews.tests.operation.teststatsoperations",
            "holoviews.tests.operation.testtimeseriesoperations",
            "holoviews.tests.plotting",
            "holoviews.tests.plotting.bokeh",
            "holoviews.tests.plotting.bokeh.testannotationplot",
            "holoviews.tests.plotting.bokeh.testareaplot",
            "holoviews.tests.plotting.bokeh.testbarplot",
            "holoviews.tests.plotting.bokeh.testboxwhiskerplot",
            "holoviews.tests.plotting.bokeh.testcallbacks",
            "holoviews.tests.plotting.bokeh.testcurveplot",
            "holoviews.tests.plotting.bokeh.testdivplot",
            "holoviews.tests.plotting.bokeh.testelementplot",
            "holoviews.tests.plotting.bokeh.testerrorbarplot",
            "holoviews.tests.plotting.bokeh.testgeomplot",
            "holoviews.tests.plotting.bokeh.testgraphplot",
            "holoviews.tests.plotting.bokeh.testgridplot",
            "holoviews.tests.plotting.bokeh.testheatmapplot",
            "holoviews.tests.plotting.bokeh.testhextilesplot",
            "holoviews.tests.plotting.bokeh.testhistogramplot",
            "holoviews.tests.plotting.bokeh.testlabels",
            "holoviews.tests.plotting.bokeh.testlayoutplot",
            "holoviews.tests.plotting.bokeh.testlinks",
            "holoviews.tests.plotting.bokeh.testoverlayplot",
            "holoviews.tests.plotting.bokeh.testpathplot",
            "holoviews.tests.plotting.bokeh.testplot",
            "holoviews.tests.plotting.bokeh.testpointplot",
            "holoviews.tests.plotting.bokeh.testquadmeshplot",
            "holoviews.tests.plotting.bokeh.testradialheatmap",
            "holoviews.tests.plotting.bokeh.testrasterplot",
            "holoviews.tests.plotting.bokeh.testrenderer",
            "holoviews.tests.plotting.bokeh.testsankey",
            "holoviews.tests.plotting.bokeh.testserver",
            "holoviews.tests.plotting.bokeh.testspikesplot",
            "holoviews.tests.plotting.bokeh.testspreadplot",
            "holoviews.tests.plotting.bokeh.teststreaming",
            "holoviews.tests.plotting.bokeh.testtabular",
            "holoviews.tests.plotting.bokeh.testutils",
            "holoviews.tests.plotting.bokeh.testvectorfieldplot",
            "holoviews.tests.plotting.bokeh.testviolinplot",
            "holoviews.tests.plotting.matplotlib",
            "holoviews.tests.plotting.matplotlib.testareaplot",
            "holoviews.tests.plotting.matplotlib.testboxwhisker",
            "holoviews.tests.plotting.matplotlib.testcallbacks",
            "holoviews.tests.plotting.matplotlib.testcurveplot",
            "holoviews.tests.plotting.matplotlib.testelementplot",
            "holoviews.tests.plotting.matplotlib.testerrorbarplot",
            "holoviews.tests.plotting.matplotlib.testgraphplot",
            "holoviews.tests.plotting.matplotlib.testheatmapplot",
            "holoviews.tests.plotting.matplotlib.testhextilesplot",
            "holoviews.tests.plotting.matplotlib.testhistogramplot",
            "holoviews.tests.plotting.matplotlib.testlabels",
            "holoviews.tests.plotting.matplotlib.testlayoutplot",
            "holoviews.tests.plotting.matplotlib.testoverlayplot",
            "holoviews.tests.plotting.matplotlib.testpathplot",
            "holoviews.tests.plotting.matplotlib.testplot",
            "holoviews.tests.plotting.matplotlib.testpointplot",
            "holoviews.tests.plotting.matplotlib.testquadmeshplot",
            "holoviews.tests.plotting.matplotlib.testradialheatmap",
            "holoviews.tests.plotting.matplotlib.testrasterplot",
            "holoviews.tests.plotting.matplotlib.testrenderer",
            "holoviews.tests.plotting.matplotlib.testsankey",
            "holoviews.tests.plotting.matplotlib.testscatter3d",
            "holoviews.tests.plotting.matplotlib.testspikeplot",
            "holoviews.tests.plotting.matplotlib.testutils",
            "holoviews.tests.plotting.matplotlib.testvectorfieldplot",
            "holoviews.tests.plotting.matplotlib.testviolinplot",
            "holoviews.tests.plotting.plotly",
            "holoviews.tests.plotting.plotly.testareaplot",
            "holoviews.tests.plotting.plotly.testbarplot",
            "holoviews.tests.plotting.plotly.testbivariateplot",
            "holoviews.tests.plotting.plotly.testboxwhiskerplot",
            "holoviews.tests.plotting.plotly.testcallbacks",
            "holoviews.tests.plotting.plotly.testcurveplot",
            "holoviews.tests.plotting.plotly.testdistributionplot",
            "holoviews.tests.plotting.plotly.testdynamic",
            "holoviews.tests.plotting.plotly.testelementplot",
            "holoviews.tests.plotting.plotly.testerrorbarplot",
            "holoviews.tests.plotting.plotly.testgridplot",
            "holoviews.tests.plotting.plotly.testhistogram",
            "holoviews.tests.plotting.plotly.testimageplot",
            "holoviews.tests.plotting.plotly.testlabelplot",
            "holoviews.tests.plotting.plotly.testlayoutplot",
            "holoviews.tests.plotting.plotly.testpath3d",
            "holoviews.tests.plotting.plotly.testplot",
            "holoviews.tests.plotting.plotly.testquadmeshplot",
            "holoviews.tests.plotting.plotly.testrenderer",
            "holoviews.tests.plotting.plotly.testrgb",
            "holoviews.tests.plotting.plotly.testscatter3dplot",
            "holoviews.tests.plotting.plotly.testscatterplot",
            "holoviews.tests.plotting.plotly.testshapeplots",
            "holoviews.tests.plotting.plotly.testspreadplot",
            "holoviews.tests.plotting.plotly.testsurfaceplot",
            "holoviews.tests.plotting.plotly.testtableplot",
            "holoviews.tests.plotting.plotly.testviolinplot",
            "holoviews.tests.plotting.testcomms",
            "holoviews.tests.plotting.testplotutils",
            "holoviews.tests.plotting.testrenderclass",
            "holoviews.tests.plotting.utils",
            "holoviews.tests.test_annotators",
            "holoviews.tests.testselection",
            "holoviews.tests.teststreams",
            "holoviews.tests.util",
            "holoviews.tests.util.testtransform",
            "holoviews.tests.util.testutils",
            "holoviews.tests.utils",
            "holoviews.util",
            "holoviews.util.command",
            "holoviews.util.parser",
            "holoviews.util.settings",
            "holoviews.util.transform"
        ],
        "version": "1.13.4"
    },
    "holoviz": {
        "cmdline": [],
        "modules": [],
        "version": "0.11.6"
    },
    "holster": {
        "cmdline": [],
        "modules": [
            "holster",
            "holster.emitter",
            "holster.enum",
            "holster.errors",
            "holster.filters",
            "holster.flask_ext",
            "holster.interface",
            "holster.log",
            "holster.responses",
            "holster.scheduler",
            "holster.session",
            "holster.tasks",
            "holster.threadlocal",
            "holster.tokens",
            "holster.util"
        ],
        "version": "2.0.0"
    },
    "holteandtalley": {
        "cmdline": [],
        "modules": [
            "holteandtalley",
            "holteandtalley.densityProfile",
            "holteandtalley.handt",
            "holteandtalley.profile",
            "holteandtalley.salinityProfile",
            "holteandtalley.tempProfile"
        ],
        "version": "0.0.3"
    },
    "holtwinters": {
        "cmdline": [],
        "modules": [
            "holtwinters",
            "holtwinters.ad_hw"
        ],
        "version": "1.0"
    },
    "holviapi": {
        "cmdline": [],
        "modules": [
            "holviapi",
            "holviapi.categories",
            "holviapi.checkout",
            "holviapi.connection",
            "holviapi.contacts",
            "holviapi.errors",
            "holviapi.invoicing",
            "holviapi.products",
            "holviapi.tests",
            "holviapi.tests.fixtures",
            "holviapi.tests.test_api_dangerous",
            "holviapi.tests.test_api_idempotent",
            "holviapi.tests.test_barcode",
            "holviapi.tests.test_refnos",
            "holviapi.utils"
        ],
        "version": "0.6.20190131"
    },
    "holvirc": {
        "cmdline": [],
        "modules": [
            "holvirc",
            "holvirc.categories",
            "holvirc.chromedriver",
            "holvirc.connection",
            "holvirc.helpers",
            "holvirc.tests",
            "holvirc.tests.fixtures",
            "holvirc.tests.test_holviapi_dangerous",
            "holvirc.tests.test_holviapi_idempotent",
            "holvirc.tests.test_slow_things"
        ],
        "version": "0.3.20190209"
    },
    "holy": {
        "cmdline": [
            "holy"
        ],
        "modules": [
            "holy",
            "holy.Holy",
            "holy.test",
            "holy.test.test_ruby"
        ],
        "version": "0.0.2"
    },
    "holy-crypt": {
        "cmdline": [],
        "modules": [
            "holy_crypt",
            "holy_crypt.holy_crypt"
        ],
        "version": "1.1"
    },
    "holygrail": {
        "cmdline": [],
        "modules": [
            "holygrail",
            "holygrail.holygrail",
            "holygrail.holygrail_exceptions",
            "holygrail.test_holygrail"
        ],
        "version": "0.2.1.Perceval"
    },
    "holyhandgrenade": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "holytftp": {
        "cmdline": [],
        "modules": [
            "src",
            "src.Ui_window",
            "src.config",
            "src.globals",
            "src.log",
            "src.main",
            "src.tftp",
            "src.tftp.packet",
            "src.tftp.server"
        ],
        "version": "0.1.2"
    },
    "holytransaction": {
        "cmdline": [],
        "modules": [
            "holytransaction",
            "holytransaction.config",
            "holytransaction.tests"
        ],
        "version": "0.1"
    },
    "holyview": {
        "cmdline": [
            "holyview"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hom4pspy": {
        "cmdline": [],
        "modules": [
            "hom4pspy"
        ],
        "version": "1.0"
    },
    "homarkov": {
        "cmdline": [],
        "modules": [
            "HOMarkov",
            "HOMarkov.markov",
            "test",
            "test.test_HOM"
        ],
        "version": "0.5.0"
    },
    "hombre-tools": {
        "cmdline": [],
        "modules": [
            "hombre_tools",
            "hombre_tools.Password",
            "hombre_tools.db",
            "hombre_tools.db.db",
            "hombre_tools.db.db_jde",
            "hombre_tools.pswd",
            "hombre_tools.tools",
            "hombre_tools.tools.catalog",
            "hombre_tools.tools.catalog.catalog",
            "hombre_tools.tools.data_profiling",
            "hombre_tools.tools.jde_sql_decorate",
            "hombre_tools.tools.metadata",
            "hombre_tools.utils",
            "hombre_tools.utils.utils"
        ],
        "version": "0.1.19"
    },
    "homcv": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "home": {
        "cmdline": [],
        "modules": [
            "home",
            "home.collect",
            "home.collect.handlers",
            "home.collect.loop",
            "home.config",
            "home.dash",
            "home.dash.admin",
            "home.dash.api",
            "home.dash.models",
            "home.dash.web",
            "home.exceptions",
            "home.ts",
            "home.ts.graph",
            "home.ts.models",
            "home.ts.redis",
            "home.util",
            "home.webcam",
            "home.webcam.loop",
            "home.webcam.models"
        ],
        "version": "0.3.4"
    },
    "home-assistant-frontend": {
        "cmdline": [],
        "modules": [
            "hass_frontend"
        ],
        "version": "20201001.2"
    },
    "home-bank-converter": {
        "cmdline": [],
        "modules": [
            "home_bank_converter",
            "home_bank_converter.converter",
            "home_bank_converter.csv_dialects",
            "home_bank_converter.csv_file_format",
            "home_bank_converter.home_bank_fields"
        ],
        "version": "0.1.1"
    },
    "home-connect-sdk": {
        "cmdline": [],
        "modules": [
            "home_connect_sdk",
            "home_connect_sdk.api",
            "home_connect_sdk.api.commands_api",
            "home_connect_sdk.api.default_api",
            "home_connect_sdk.api.images_api",
            "home_connect_sdk.api.programs_api",
            "home_connect_sdk.api.settings_api",
            "home_connect_sdk.api.status_events_api",
            "home_connect_sdk.api_client",
            "home_connect_sdk.configuration",
            "home_connect_sdk.exceptions",
            "home_connect_sdk.models",
            "home_connect_sdk.models.active_program_not_set_error",
            "home_connect_sdk.models.array_of_available_programs",
            "home_connect_sdk.models.array_of_available_programs_data",
            "home_connect_sdk.models.array_of_available_programs_data_constraints",
            "home_connect_sdk.models.array_of_available_programs_data_programs",
            "home_connect_sdk.models.array_of_events",
            "home_connect_sdk.models.array_of_events_items",
            "home_connect_sdk.models.array_of_home_appliances",
            "home_connect_sdk.models.array_of_home_appliances_data",
            "home_connect_sdk.models.array_of_home_appliances_data_homeappliances",
            "home_connect_sdk.models.array_of_images",
            "home_connect_sdk.models.array_of_images_data",
            "home_connect_sdk.models.array_of_images_data_images",
            "home_connect_sdk.models.array_of_options",
            "home_connect_sdk.models.array_of_options_data",
            "home_connect_sdk.models.array_of_programs",
            "home_connect_sdk.models.array_of_programs_data",
            "home_connect_sdk.models.array_of_programs_data_constraints",
            "home_connect_sdk.models.array_of_programs_data_programs",
            "home_connect_sdk.models.array_of_settings",
            "home_connect_sdk.models.array_of_settings_data",
            "home_connect_sdk.models.array_of_settings_data_settings",
            "home_connect_sdk.models.array_of_status",
            "home_connect_sdk.models.array_of_status_data",
            "home_connect_sdk.models.command",
            "home_connect_sdk.models.command_data",
            "home_connect_sdk.models.command_definition",
            "home_connect_sdk.models.command_definition_data",
            "home_connect_sdk.models.conflict",
            "home_connect_sdk.models.conflict_error",
            "home_connect_sdk.models.forbidden_error",
            "home_connect_sdk.models.get_setting",
            "home_connect_sdk.models.get_setting_data",
            "home_connect_sdk.models.get_setting_data_constraints",
            "home_connect_sdk.models.home_appliance",
            "home_connect_sdk.models.home_appliance_data",
            "home_connect_sdk.models.interal_server_error",
            "home_connect_sdk.models.no_program_active_error",
            "home_connect_sdk.models.no_program_selected_error",
            "home_connect_sdk.models.not_acceptable_error",
            "home_connect_sdk.models.not_found_error",
            "home_connect_sdk.models.option",
            "home_connect_sdk.models.option_data",
            "home_connect_sdk.models.program",
            "home_connect_sdk.models.program_data",
            "home_connect_sdk.models.program_data_options",
            "home_connect_sdk.models.program_definition",
            "home_connect_sdk.models.program_definition_data",
            "home_connect_sdk.models.program_definition_data_constraints",
            "home_connect_sdk.models.program_definition_data_options",
            "home_connect_sdk.models.program_not_available_error",
            "home_connect_sdk.models.put_setting",
            "home_connect_sdk.models.put_setting_data",
            "home_connect_sdk.models.put_setting_data_constraints",
            "home_connect_sdk.models.request_timeout_error",
            "home_connect_sdk.models.selected_program_not_set_error",
            "home_connect_sdk.models.status",
            "home_connect_sdk.models.status_data",
            "home_connect_sdk.models.too_many_requests_error",
            "home_connect_sdk.models.unauthorized_error",
            "home_connect_sdk.models.unauthorized_error_error",
            "home_connect_sdk.models.unsupported_media_type_error",
            "home_connect_sdk.models.wrong_operation_state_error",
            "home_connect_sdk.rest"
        ],
        "version": "1.0.0"
    },
    "home-electric-usage-recommendation-modules": {
        "cmdline": [],
        "modules": [
            "home_electric_usage_recommendation_modules",
            "home_electric_usage_recommendation_modules.modules",
            "home_electric_usage_recommendation_modules.utils",
            "tests",
            "tests.run_modules",
            "tests.test_modules"
        ],
        "version": "0.0.3"
    },
    "home-invasion": {
        "cmdline": [],
        "modules": [
            "homeinvasion",
            "homeinvasion.blurt",
            "homeinvasion.cli",
            "homeinvasion.gassist",
            "homeinvasion.ghome",
            "homeinvasion.log",
            "homeinvasion.server",
            "homeinvasion.tts",
            "homeinvasion.utils"
        ],
        "version": "0.1.1"
    },
    "home-run": {
        "cmdline": [],
        "modules": [
            "home_run",
            "home_run.base",
            "home_run.keras",
            "home_run.python",
            "home_run.pytorch",
            "home_run.sklearn",
            "home_run.tensorflow",
            "home_run.version"
        ],
        "version": "0.4.0"
    },
    "home-sensu-checks": {
        "cmdline": [],
        "modules": [
            "home_sensu_checks",
            "home_sensu_checks.fritz"
        ],
        "version": "0.0.3"
    },
    "home-service": {
        "cmdline": [
            "home-service"
        ],
        "modules": [
            "home_service",
            "home_service.app",
            "home_service.config",
            "home_service.core",
            "home_service.endpoints",
            "home_service.endpoints.sensor_blueprint",
            "home_service.models",
            "home_service.models.base",
            "home_service.models.devices",
            "home_service.models.room_humidity",
            "home_service.models.room_temp",
            "home_service.models.server_temp"
        ],
        "version": "0.2.2"
    },
    "homeapi": {
        "cmdline": [],
        "modules": [
            "homeapi"
        ],
        "version": "0.1.0"
    },
    "homeassistant": {
        "cmdline": [],
        "modules": [
            "homeassistant",
            "homeassistant.auth",
            "homeassistant.auth.auth_store",
            "homeassistant.auth.const",
            "homeassistant.auth.mfa_modules",
            "homeassistant.auth.mfa_modules.insecure_example",
            "homeassistant.auth.mfa_modules.notify",
            "homeassistant.auth.mfa_modules.totp",
            "homeassistant.auth.models",
            "homeassistant.auth.permissions",
            "homeassistant.auth.permissions.const",
            "homeassistant.auth.permissions.entities",
            "homeassistant.auth.permissions.merge",
            "homeassistant.auth.permissions.models",
            "homeassistant.auth.permissions.system_policies",
            "homeassistant.auth.permissions.types",
            "homeassistant.auth.permissions.util",
            "homeassistant.auth.providers",
            "homeassistant.auth.providers.command_line",
            "homeassistant.auth.providers.homeassistant",
            "homeassistant.auth.providers.insecure_example",
            "homeassistant.auth.providers.legacy_api_password",
            "homeassistant.auth.providers.trusted_networks",
            "homeassistant.block_async_io",
            "homeassistant.bootstrap",
            "homeassistant.components",
            "homeassistant.components.abode",
            "homeassistant.components.abode.alarm_control_panel",
            "homeassistant.components.abode.binary_sensor",
            "homeassistant.components.abode.camera",
            "homeassistant.components.abode.config_flow",
            "homeassistant.components.abode.const",
            "homeassistant.components.abode.cover",
            "homeassistant.components.abode.light",
            "homeassistant.components.abode.lock",
            "homeassistant.components.abode.sensor",
            "homeassistant.components.abode.switch",
            "homeassistant.components.accuweather",
            "homeassistant.components.accuweather.config_flow",
            "homeassistant.components.accuweather.const",
            "homeassistant.components.accuweather.sensor",
            "homeassistant.components.accuweather.weather",
            "homeassistant.components.acer_projector",
            "homeassistant.components.acer_projector.switch",
            "homeassistant.components.acmeda",
            "homeassistant.components.acmeda.base",
            "homeassistant.components.acmeda.config_flow",
            "homeassistant.components.acmeda.const",
            "homeassistant.components.acmeda.cover",
            "homeassistant.components.acmeda.errors",
            "homeassistant.components.acmeda.helpers",
            "homeassistant.components.acmeda.hub",
            "homeassistant.components.acmeda.sensor",
            "homeassistant.components.actiontec",
            "homeassistant.components.actiontec.device_tracker",
            "homeassistant.components.adguard",
            "homeassistant.components.adguard.config_flow",
            "homeassistant.components.adguard.const",
            "homeassistant.components.adguard.sensor",
            "homeassistant.components.adguard.switch",
            "homeassistant.components.ads",
            "homeassistant.components.ads.binary_sensor",
            "homeassistant.components.ads.cover",
            "homeassistant.components.ads.light",
            "homeassistant.components.ads.sensor",
            "homeassistant.components.ads.switch",
            "homeassistant.components.aftership",
            "homeassistant.components.aftership.const",
            "homeassistant.components.aftership.sensor",
            "homeassistant.components.agent_dvr",
            "homeassistant.components.agent_dvr.alarm_control_panel",
            "homeassistant.components.agent_dvr.camera",
            "homeassistant.components.agent_dvr.config_flow",
            "homeassistant.components.agent_dvr.const",
            "homeassistant.components.agent_dvr.helpers",
            "homeassistant.components.air_quality",
            "homeassistant.components.air_quality.group",
            "homeassistant.components.airly",
            "homeassistant.components.airly.air_quality",
            "homeassistant.components.airly.config_flow",
            "homeassistant.components.airly.const",
            "homeassistant.components.airly.sensor",
            "homeassistant.components.airvisual",
            "homeassistant.components.airvisual.air_quality",
            "homeassistant.components.airvisual.config_flow",
            "homeassistant.components.airvisual.const",
            "homeassistant.components.airvisual.sensor",
            "homeassistant.components.aladdin_connect",
            "homeassistant.components.aladdin_connect.cover",
            "homeassistant.components.alarm_control_panel",
            "homeassistant.components.alarm_control_panel.const",
            "homeassistant.components.alarm_control_panel.device_action",
            "homeassistant.components.alarm_control_panel.device_condition",
            "homeassistant.components.alarm_control_panel.device_trigger",
            "homeassistant.components.alarm_control_panel.group",
            "homeassistant.components.alarm_control_panel.reproduce_state",
            "homeassistant.components.alarmdecoder",
            "homeassistant.components.alarmdecoder.alarm_control_panel",
            "homeassistant.components.alarmdecoder.binary_sensor",
            "homeassistant.components.alarmdecoder.config_flow",
            "homeassistant.components.alarmdecoder.const",
            "homeassistant.components.alarmdecoder.sensor",
            "homeassistant.components.alert",
            "homeassistant.components.alert.reproduce_state",
            "homeassistant.components.alexa",
            "homeassistant.components.alexa.auth",
            "homeassistant.components.alexa.capabilities",
            "homeassistant.components.alexa.config",
            "homeassistant.components.alexa.const",
            "homeassistant.components.alexa.entities",
            "homeassistant.components.alexa.errors",
            "homeassistant.components.alexa.flash_briefings",
            "homeassistant.components.alexa.handlers",
            "homeassistant.components.alexa.intent",
            "homeassistant.components.alexa.logbook",
            "homeassistant.components.alexa.messages",
            "homeassistant.components.alexa.resources",
            "homeassistant.components.alexa.smart_home",
            "homeassistant.components.alexa.smart_home_http",
            "homeassistant.components.alexa.state_report",
            "homeassistant.components.almond",
            "homeassistant.components.almond.config_flow",
            "homeassistant.components.almond.const",
            "homeassistant.components.alpha_vantage",
            "homeassistant.components.alpha_vantage.sensor",
            "homeassistant.components.amazon_polly",
            "homeassistant.components.amazon_polly.tts",
            "homeassistant.components.ambiclimate",
            "homeassistant.components.ambiclimate.climate",
            "homeassistant.components.ambiclimate.config_flow",
            "homeassistant.components.ambiclimate.const",
            "homeassistant.components.ambient_station",
            "homeassistant.components.ambient_station.binary_sensor",
            "homeassistant.components.ambient_station.config_flow",
            "homeassistant.components.ambient_station.const",
            "homeassistant.components.ambient_station.sensor",
            "homeassistant.components.amcrest",
            "homeassistant.components.amcrest.binary_sensor",
            "homeassistant.components.amcrest.camera",
            "homeassistant.components.amcrest.const",
            "homeassistant.components.amcrest.helpers",
            "homeassistant.components.amcrest.sensor",
            "homeassistant.components.ampio",
            "homeassistant.components.ampio.air_quality",
            "homeassistant.components.android_ip_webcam",
            "homeassistant.components.android_ip_webcam.binary_sensor",
            "homeassistant.components.android_ip_webcam.sensor",
            "homeassistant.components.android_ip_webcam.switch",
            "homeassistant.components.androidtv",
            "homeassistant.components.androidtv.media_player",
            "homeassistant.components.anel_pwrctrl",
            "homeassistant.components.anel_pwrctrl.switch",
            "homeassistant.components.anthemav",
            "homeassistant.components.anthemav.media_player",
            "homeassistant.components.apache_kafka",
            "homeassistant.components.apcupsd",
            "homeassistant.components.apcupsd.binary_sensor",
            "homeassistant.components.apcupsd.sensor",
            "homeassistant.components.api",
            "homeassistant.components.apns",
            "homeassistant.components.apns.const",
            "homeassistant.components.apns.notify",
            "homeassistant.components.apple_tv",
            "homeassistant.components.apple_tv.media_player",
            "homeassistant.components.apple_tv.remote",
            "homeassistant.components.apprise",
            "homeassistant.components.apprise.notify",
            "homeassistant.components.aprs",
            "homeassistant.components.aprs.device_tracker",
            "homeassistant.components.aqualogic",
            "homeassistant.components.aqualogic.sensor",
            "homeassistant.components.aqualogic.switch",
            "homeassistant.components.aquostv",
            "homeassistant.components.aquostv.media_player",
            "homeassistant.components.arcam_fmj",
            "homeassistant.components.arcam_fmj.config_flow",
            "homeassistant.components.arcam_fmj.const",
            "homeassistant.components.arcam_fmj.device_trigger",
            "homeassistant.components.arcam_fmj.media_player",
            "homeassistant.components.arduino",
            "homeassistant.components.arduino.sensor",
            "homeassistant.components.arduino.switch",
            "homeassistant.components.arest",
            "homeassistant.components.arest.binary_sensor",
            "homeassistant.components.arest.sensor",
            "homeassistant.components.arest.switch",
            "homeassistant.components.arlo",
            "homeassistant.components.arlo.alarm_control_panel",
            "homeassistant.components.arlo.camera",
            "homeassistant.components.arlo.sensor",
            "homeassistant.components.arris_tg2492lg",
            "homeassistant.components.arris_tg2492lg.device_tracker",
            "homeassistant.components.aruba",
            "homeassistant.components.aruba.device_tracker",
            "homeassistant.components.arwn",
            "homeassistant.components.arwn.sensor",
            "homeassistant.components.asterisk_cdr",
            "homeassistant.components.asterisk_cdr.mailbox",
            "homeassistant.components.asterisk_mbox",
            "homeassistant.components.asterisk_mbox.mailbox",
            "homeassistant.components.asuswrt",
            "homeassistant.components.asuswrt.device_tracker",
            "homeassistant.components.asuswrt.sensor",
            "homeassistant.components.atag",
            "homeassistant.components.atag.climate",
            "homeassistant.components.atag.config_flow",
            "homeassistant.components.atag.sensor",
            "homeassistant.components.atag.water_heater",
            "homeassistant.components.aten_pe",
            "homeassistant.components.aten_pe.switch",
            "homeassistant.components.atome",
            "homeassistant.components.atome.sensor",
            "homeassistant.components.august",
            "homeassistant.components.august.activity",
            "homeassistant.components.august.binary_sensor",
            "homeassistant.components.august.camera",
            "homeassistant.components.august.config_flow",
            "homeassistant.components.august.const",
            "homeassistant.components.august.entity",
            "homeassistant.components.august.exceptions",
            "homeassistant.components.august.gateway",
            "homeassistant.components.august.lock",
            "homeassistant.components.august.sensor",
            "homeassistant.components.august.subscriber",
            "homeassistant.components.aurora",
            "homeassistant.components.aurora.binary_sensor",
            "homeassistant.components.aurora_abb_powerone",
            "homeassistant.components.aurora_abb_powerone.sensor",
            "homeassistant.components.auth",
            "homeassistant.components.auth.indieauth",
            "homeassistant.components.auth.login_flow",
            "homeassistant.components.auth.mfa_setup_flow",
            "homeassistant.components.automation",
            "homeassistant.components.automation.config",
            "homeassistant.components.automation.logbook",
            "homeassistant.components.automation.reproduce_state",
            "homeassistant.components.avea",
            "homeassistant.components.avea.light",
            "homeassistant.components.avion",
            "homeassistant.components.avion.light",
            "homeassistant.components.avri",
            "homeassistant.components.avri.config_flow",
            "homeassistant.components.avri.const",
            "homeassistant.components.avri.sensor",
            "homeassistant.components.awair",
            "homeassistant.components.awair.config_flow",
            "homeassistant.components.awair.const",
            "homeassistant.components.awair.sensor",
            "homeassistant.components.aws",
            "homeassistant.components.aws.config_flow",
            "homeassistant.components.aws.const",
            "homeassistant.components.aws.notify",
            "homeassistant.components.axis",
            "homeassistant.components.axis.axis_base",
            "homeassistant.components.axis.binary_sensor",
            "homeassistant.components.axis.camera",
            "homeassistant.components.axis.config_flow",
            "homeassistant.components.axis.const",
            "homeassistant.components.axis.device",
            "homeassistant.components.axis.errors",
            "homeassistant.components.axis.light",
            "homeassistant.components.axis.switch",
            "homeassistant.components.azure_devops",
            "homeassistant.components.azure_devops.config_flow",
            "homeassistant.components.azure_devops.const",
            "homeassistant.components.azure_devops.sensor",
            "homeassistant.components.azure_event_hub",
            "homeassistant.components.azure_event_hub.const",
            "homeassistant.components.azure_service_bus",
            "homeassistant.components.azure_service_bus.notify",
            "homeassistant.components.baidu",
            "homeassistant.components.baidu.tts",
            "homeassistant.components.bayesian",
            "homeassistant.components.bayesian.binary_sensor",
            "homeassistant.components.bbb_gpio",
            "homeassistant.components.bbb_gpio.binary_sensor",
            "homeassistant.components.bbb_gpio.switch",
            "homeassistant.components.bbox",
            "homeassistant.components.bbox.device_tracker",
            "homeassistant.components.bbox.sensor",
            "homeassistant.components.beewi_smartclim",
            "homeassistant.components.beewi_smartclim.sensor",
            "homeassistant.components.bh1750",
            "homeassistant.components.bh1750.sensor",
            "homeassistant.components.binary_sensor",
            "homeassistant.components.binary_sensor.device_condition",
            "homeassistant.components.binary_sensor.device_trigger",
            "homeassistant.components.binary_sensor.group",
            "homeassistant.components.bitcoin",
            "homeassistant.components.bitcoin.sensor",
            "homeassistant.components.bizkaibus",
            "homeassistant.components.bizkaibus.sensor",
            "homeassistant.components.blackbird",
            "homeassistant.components.blackbird.const",
            "homeassistant.components.blackbird.media_player",
            "homeassistant.components.blebox",
            "homeassistant.components.blebox.air_quality",
            "homeassistant.components.blebox.climate",
            "homeassistant.components.blebox.config_flow",
            "homeassistant.components.blebox.const",
            "homeassistant.components.blebox.cover",
            "homeassistant.components.blebox.light",
            "homeassistant.components.blebox.sensor",
            "homeassistant.components.blebox.switch",
            "homeassistant.components.blink",
            "homeassistant.components.blink.alarm_control_panel",
            "homeassistant.components.blink.binary_sensor",
            "homeassistant.components.blink.camera",
            "homeassistant.components.blink.config_flow",
            "homeassistant.components.blink.const",
            "homeassistant.components.blink.sensor",
            "homeassistant.components.blinksticklight",
            "homeassistant.components.blinksticklight.light",
            "homeassistant.components.blinkt",
            "homeassistant.components.blinkt.light",
            "homeassistant.components.blockchain",
            "homeassistant.components.blockchain.sensor",
            "homeassistant.components.bloomsky",
            "homeassistant.components.bloomsky.binary_sensor",
            "homeassistant.components.bloomsky.camera",
            "homeassistant.components.bloomsky.sensor",
            "homeassistant.components.bluesound",
            "homeassistant.components.bluesound.const",
            "homeassistant.components.bluesound.media_player",
            "homeassistant.components.bluetooth_le_tracker",
            "homeassistant.components.bluetooth_le_tracker.device_tracker",
            "homeassistant.components.bluetooth_tracker",
            "homeassistant.components.bluetooth_tracker.const",
            "homeassistant.components.bluetooth_tracker.device_tracker",
            "homeassistant.components.bme280",
            "homeassistant.components.bme280.sensor",
            "homeassistant.components.bme680",
            "homeassistant.components.bme680.sensor",
            "homeassistant.components.bmp280",
            "homeassistant.components.bmp280.sensor",
            "homeassistant.components.bmw_connected_drive",
            "homeassistant.components.bmw_connected_drive.binary_sensor",
            "homeassistant.components.bmw_connected_drive.const",
            "homeassistant.components.bmw_connected_drive.device_tracker",
            "homeassistant.components.bmw_connected_drive.lock",
            "homeassistant.components.bmw_connected_drive.notify",
            "homeassistant.components.bmw_connected_drive.sensor",
            "homeassistant.components.bom",
            "homeassistant.components.bom.camera",
            "homeassistant.components.bom.sensor",
            "homeassistant.components.bom.weather",
            "homeassistant.components.bond",
            "homeassistant.components.bond.config_flow",
            "homeassistant.components.bond.const",
            "homeassistant.components.bond.cover",
            "homeassistant.components.bond.entity",
            "homeassistant.components.bond.fan",
            "homeassistant.components.bond.light",
            "homeassistant.components.bond.switch",
            "homeassistant.components.bond.utils",
            "homeassistant.components.braviatv",
            "homeassistant.components.braviatv.config_flow",
            "homeassistant.components.braviatv.const",
            "homeassistant.components.braviatv.media_player",
            "homeassistant.components.broadlink",
            "homeassistant.components.broadlink.config_flow",
            "homeassistant.components.broadlink.const",
            "homeassistant.components.broadlink.device",
            "homeassistant.components.broadlink.helpers",
            "homeassistant.components.broadlink.remote",
            "homeassistant.components.broadlink.sensor",
            "homeassistant.components.broadlink.switch",
            "homeassistant.components.broadlink.updater",
            "homeassistant.components.brother",
            "homeassistant.components.brother.config_flow",
            "homeassistant.components.brother.const",
            "homeassistant.components.brother.sensor",
            "homeassistant.components.brottsplatskartan",
            "homeassistant.components.brottsplatskartan.sensor",
            "homeassistant.components.browser",
            "homeassistant.components.brunt",
            "homeassistant.components.brunt.cover",
            "homeassistant.components.bsblan",
            "homeassistant.components.bsblan.climate",
            "homeassistant.components.bsblan.config_flow",
            "homeassistant.components.bsblan.const",
            "homeassistant.components.bt_home_hub_5",
            "homeassistant.components.bt_home_hub_5.device_tracker",
            "homeassistant.components.bt_smarthub",
            "homeassistant.components.bt_smarthub.device_tracker",
            "homeassistant.components.buienradar",
            "homeassistant.components.buienradar.camera",
            "homeassistant.components.buienradar.const",
            "homeassistant.components.buienradar.sensor",
            "homeassistant.components.buienradar.util",
            "homeassistant.components.buienradar.weather",
            "homeassistant.components.caldav",
            "homeassistant.components.caldav.calendar",
            "homeassistant.components.calendar",
            "homeassistant.components.camera",
            "homeassistant.components.camera.const",
            "homeassistant.components.camera.prefs",
            "homeassistant.components.canary",
            "homeassistant.components.canary.alarm_control_panel",
            "homeassistant.components.canary.camera",
            "homeassistant.components.canary.config_flow",
            "homeassistant.components.canary.const",
            "homeassistant.components.canary.sensor",
            "homeassistant.components.cast",
            "homeassistant.components.cast.config_flow",
            "homeassistant.components.cast.const",
            "homeassistant.components.cast.discovery",
            "homeassistant.components.cast.helpers",
            "homeassistant.components.cast.home_assistant_cast",
            "homeassistant.components.cast.media_player",
            "homeassistant.components.cert_expiry",
            "homeassistant.components.cert_expiry.config_flow",
            "homeassistant.components.cert_expiry.const",
            "homeassistant.components.cert_expiry.errors",
            "homeassistant.components.cert_expiry.helper",
            "homeassistant.components.cert_expiry.sensor",
            "homeassistant.components.channels",
            "homeassistant.components.channels.const",
            "homeassistant.components.channels.media_player",
            "homeassistant.components.circuit",
            "homeassistant.components.circuit.notify",
            "homeassistant.components.cisco_ios",
            "homeassistant.components.cisco_ios.device_tracker",
            "homeassistant.components.cisco_mobility_express",
            "homeassistant.components.cisco_mobility_express.device_tracker",
            "homeassistant.components.cisco_webex_teams",
            "homeassistant.components.cisco_webex_teams.notify",
            "homeassistant.components.citybikes",
            "homeassistant.components.citybikes.sensor",
            "homeassistant.components.clementine",
            "homeassistant.components.clementine.media_player",
            "homeassistant.components.clickatell",
            "homeassistant.components.clickatell.notify",
            "homeassistant.components.clicksend",
            "homeassistant.components.clicksend.notify",
            "homeassistant.components.clicksend_tts",
            "homeassistant.components.clicksend_tts.notify",
            "homeassistant.components.climate",
            "homeassistant.components.climate.const",
            "homeassistant.components.climate.device_action",
            "homeassistant.components.climate.device_condition",
            "homeassistant.components.climate.device_trigger",
            "homeassistant.components.climate.group",
            "homeassistant.components.climate.reproduce_state",
            "homeassistant.components.cloud",
            "homeassistant.components.cloud.account_link",
            "homeassistant.components.cloud.alexa_config",
            "homeassistant.components.cloud.binary_sensor",
            "homeassistant.components.cloud.client",
            "homeassistant.components.cloud.const",
            "homeassistant.components.cloud.google_config",
            "homeassistant.components.cloud.http_api",
            "homeassistant.components.cloud.prefs",
            "homeassistant.components.cloud.stt",
            "homeassistant.components.cloud.tts",
            "homeassistant.components.cloud.utils",
            "homeassistant.components.cloudflare",
            "homeassistant.components.cmus",
            "homeassistant.components.cmus.media_player",
            "homeassistant.components.co2signal",
            "homeassistant.components.co2signal.sensor",
            "homeassistant.components.coinbase",
            "homeassistant.components.coinbase.sensor",
            "homeassistant.components.coinmarketcap",
            "homeassistant.components.coinmarketcap.sensor",
            "homeassistant.components.comed_hourly_pricing",
            "homeassistant.components.comed_hourly_pricing.sensor",
            "homeassistant.components.comfoconnect",
            "homeassistant.components.comfoconnect.fan",
            "homeassistant.components.comfoconnect.sensor",
            "homeassistant.components.command_line",
            "homeassistant.components.command_line.binary_sensor",
            "homeassistant.components.command_line.const",
            "homeassistant.components.command_line.cover",
            "homeassistant.components.command_line.notify",
            "homeassistant.components.command_line.sensor",
            "homeassistant.components.command_line.switch",
            "homeassistant.components.concord232",
            "homeassistant.components.concord232.alarm_control_panel",
            "homeassistant.components.concord232.binary_sensor",
            "homeassistant.components.config",
            "homeassistant.components.config.area_registry",
            "homeassistant.components.config.auth",
            "homeassistant.components.config.auth_provider_homeassistant",
            "homeassistant.components.config.automation",
            "homeassistant.components.config.config_entries",
            "homeassistant.components.config.core",
            "homeassistant.components.config.customize",
            "homeassistant.components.config.device_registry",
            "homeassistant.components.config.entity_registry",
            "homeassistant.components.config.group",
            "homeassistant.components.config.scene",
            "homeassistant.components.config.script",
            "homeassistant.components.config.zwave",
            "homeassistant.components.configurator",
            "homeassistant.components.control4",
            "homeassistant.components.control4.config_flow",
            "homeassistant.components.control4.const",
            "homeassistant.components.control4.director_utils",
            "homeassistant.components.control4.light",
            "homeassistant.components.conversation",
            "homeassistant.components.conversation.agent",
            "homeassistant.components.conversation.const",
            "homeassistant.components.conversation.default_agent",
            "homeassistant.components.conversation.util",
            "homeassistant.components.coolmaster",
            "homeassistant.components.coolmaster.climate",
            "homeassistant.components.coolmaster.config_flow",
            "homeassistant.components.coolmaster.const",
            "homeassistant.components.coronavirus",
            "homeassistant.components.coronavirus.config_flow",
            "homeassistant.components.coronavirus.const",
            "homeassistant.components.coronavirus.sensor",
            "homeassistant.components.counter",
            "homeassistant.components.counter.reproduce_state",
            "homeassistant.components.cover",
            "homeassistant.components.cover.device_action",
            "homeassistant.components.cover.device_condition",
            "homeassistant.components.cover.device_trigger",
            "homeassistant.components.cover.group",
            "homeassistant.components.cover.intent",
            "homeassistant.components.cover.reproduce_state",
            "homeassistant.components.cppm_tracker",
            "homeassistant.components.cppm_tracker.device_tracker",
            "homeassistant.components.cpuspeed",
            "homeassistant.components.cpuspeed.sensor",
            "homeassistant.components.crimereports",
            "homeassistant.components.crimereports.sensor",
            "homeassistant.components.cups",
            "homeassistant.components.cups.sensor",
            "homeassistant.components.currencylayer",
            "homeassistant.components.currencylayer.sensor",
            "homeassistant.components.daikin",
            "homeassistant.components.daikin.climate",
            "homeassistant.components.daikin.config_flow",
            "homeassistant.components.daikin.const",
            "homeassistant.components.daikin.sensor",
            "homeassistant.components.daikin.switch",
            "homeassistant.components.danfoss_air",
            "homeassistant.components.danfoss_air.binary_sensor",
            "homeassistant.components.danfoss_air.sensor",
            "homeassistant.components.danfoss_air.switch",
            "homeassistant.components.darksky",
            "homeassistant.components.darksky.sensor",
            "homeassistant.components.darksky.weather",
            "homeassistant.components.datadog",
            "homeassistant.components.ddwrt",
            "homeassistant.components.ddwrt.device_tracker",
            "homeassistant.components.debugpy",
            "homeassistant.components.deconz",
            "homeassistant.components.deconz.binary_sensor",
            "homeassistant.components.deconz.climate",
            "homeassistant.components.deconz.config_flow",
            "homeassistant.components.deconz.const",
            "homeassistant.components.deconz.cover",
            "homeassistant.components.deconz.deconz_device",
            "homeassistant.components.deconz.deconz_event",
            "homeassistant.components.deconz.device_trigger",
            "homeassistant.components.deconz.errors",
            "homeassistant.components.deconz.gateway",
            "homeassistant.components.deconz.light",
            "homeassistant.components.deconz.scene",
            "homeassistant.components.deconz.sensor",
            "homeassistant.components.deconz.services",
            "homeassistant.components.deconz.switch",
            "homeassistant.components.decora",
            "homeassistant.components.decora.light",
            "homeassistant.components.decora_wifi",
            "homeassistant.components.decora_wifi.light",
            "homeassistant.components.default_config",
            "homeassistant.components.delijn",
            "homeassistant.components.delijn.sensor",
            "homeassistant.components.deluge",
            "homeassistant.components.deluge.sensor",
            "homeassistant.components.deluge.switch",
            "homeassistant.components.demo",
            "homeassistant.components.demo.air_quality",
            "homeassistant.components.demo.alarm_control_panel",
            "homeassistant.components.demo.binary_sensor",
            "homeassistant.components.demo.calendar",
            "homeassistant.components.demo.camera",
            "homeassistant.components.demo.climate",
            "homeassistant.components.demo.config_flow",
            "homeassistant.components.demo.const",
            "homeassistant.components.demo.cover",
            "homeassistant.components.demo.device_tracker",
            "homeassistant.components.demo.fan",
            "homeassistant.components.demo.geo_location",
            "homeassistant.components.demo.humidifier",
            "homeassistant.components.demo.image_processing",
            "homeassistant.components.demo.light",
            "homeassistant.components.demo.lock",
            "homeassistant.components.demo.mailbox",
            "homeassistant.components.demo.media_player",
            "homeassistant.components.demo.notify",
            "homeassistant.components.demo.remote",
            "homeassistant.components.demo.sensor",
            "homeassistant.components.demo.stt",
            "homeassistant.components.demo.switch",
            "homeassistant.components.demo.tts",
            "homeassistant.components.demo.vacuum",
            "homeassistant.components.demo.water_heater",
            "homeassistant.components.demo.weather",
            "homeassistant.components.denon",
            "homeassistant.components.denon.media_player",
            "homeassistant.components.denonavr",
            "homeassistant.components.denonavr.config_flow",
            "homeassistant.components.denonavr.media_player",
            "homeassistant.components.denonavr.receiver",
            "homeassistant.components.derivative",
            "homeassistant.components.derivative.sensor",
            "homeassistant.components.deutsche_bahn",
            "homeassistant.components.deutsche_bahn.sensor",
            "homeassistant.components.device_automation",
            "homeassistant.components.device_automation.const",
            "homeassistant.components.device_automation.exceptions",
            "homeassistant.components.device_automation.toggle_entity",
            "homeassistant.components.device_automation.trigger",
            "homeassistant.components.device_sun_light_trigger",
            "homeassistant.components.device_tracker",
            "homeassistant.components.device_tracker.config_entry",
            "homeassistant.components.device_tracker.const",
            "homeassistant.components.device_tracker.device_condition",
            "homeassistant.components.device_tracker.group",
            "homeassistant.components.device_tracker.legacy",
            "homeassistant.components.device_tracker.setup",
            "homeassistant.components.devolo_home_control",
            "homeassistant.components.devolo_home_control.binary_sensor",
            "homeassistant.components.devolo_home_control.climate",
            "homeassistant.components.devolo_home_control.config_flow",
            "homeassistant.components.devolo_home_control.const",
            "homeassistant.components.devolo_home_control.cover",
            "homeassistant.components.devolo_home_control.devolo_device",
            "homeassistant.components.devolo_home_control.devolo_multi_level_switch",
            "homeassistant.components.devolo_home_control.light",
            "homeassistant.components.devolo_home_control.sensor",
            "homeassistant.components.devolo_home_control.subscriber",
            "homeassistant.components.devolo_home_control.switch",
            "homeassistant.components.dexcom",
            "homeassistant.components.dexcom.config_flow",
            "homeassistant.components.dexcom.const",
            "homeassistant.components.dexcom.sensor",
            "homeassistant.components.dht",
            "homeassistant.components.dht.sensor",
            "homeassistant.components.dialogflow",
            "homeassistant.components.dialogflow.config_flow",
            "homeassistant.components.dialogflow.const",
            "homeassistant.components.digital_ocean",
            "homeassistant.components.digital_ocean.binary_sensor",
            "homeassistant.components.digital_ocean.switch",
            "homeassistant.components.digitalloggers",
            "homeassistant.components.digitalloggers.switch",
            "homeassistant.components.directv",
            "homeassistant.components.directv.config_flow",
            "homeassistant.components.directv.const",
            "homeassistant.components.directv.media_player",
            "homeassistant.components.directv.remote",
            "homeassistant.components.discogs",
            "homeassistant.components.discogs.sensor",
            "homeassistant.components.discord",
            "homeassistant.components.discord.notify",
            "homeassistant.components.discovery",
            "homeassistant.components.dlib_face_detect",
            "homeassistant.components.dlib_face_detect.image_processing",
            "homeassistant.components.dlib_face_identify",
            "homeassistant.components.dlib_face_identify.image_processing",
            "homeassistant.components.dlink",
            "homeassistant.components.dlink.switch",
            "homeassistant.components.dlna_dmr",
            "homeassistant.components.dlna_dmr.media_player",
            "homeassistant.components.dnsip",
            "homeassistant.components.dnsip.sensor",
            "homeassistant.components.dominos",
            "homeassistant.components.doods",
            "homeassistant.components.doods.image_processing",
            "homeassistant.components.doorbird",
            "homeassistant.components.doorbird.camera",
            "homeassistant.components.doorbird.config_flow",
            "homeassistant.components.doorbird.const",
            "homeassistant.components.doorbird.entity",
            "homeassistant.components.doorbird.logbook",
            "homeassistant.components.doorbird.switch",
            "homeassistant.components.doorbird.util",
            "homeassistant.components.dovado",
            "homeassistant.components.dovado.notify",
            "homeassistant.components.dovado.sensor",
            "homeassistant.components.downloader",
            "homeassistant.components.dsmr",
            "homeassistant.components.dsmr.config_flow",
            "homeassistant.components.dsmr.const",
            "homeassistant.components.dsmr.sensor",
            "homeassistant.components.dsmr_reader",
            "homeassistant.components.dsmr_reader.definitions",
            "homeassistant.components.dsmr_reader.sensor",
            "homeassistant.components.dte_energy_bridge",
            "homeassistant.components.dte_energy_bridge.sensor",
            "homeassistant.components.dublin_bus_transport",
            "homeassistant.components.dublin_bus_transport.sensor",
            "homeassistant.components.duckdns",
            "homeassistant.components.dunehd",
            "homeassistant.components.dunehd.config_flow",
            "homeassistant.components.dunehd.const",
            "homeassistant.components.dunehd.media_player",
            "homeassistant.components.dwd_weather_warnings",
            "homeassistant.components.dwd_weather_warnings.sensor",
            "homeassistant.components.dweet",
            "homeassistant.components.dweet.sensor",
            "homeassistant.components.dynalite",
            "homeassistant.components.dynalite.bridge",
            "homeassistant.components.dynalite.config_flow",
            "homeassistant.components.dynalite.const",
            "homeassistant.components.dynalite.convert_config",
            "homeassistant.components.dynalite.cover",
            "homeassistant.components.dynalite.dynalitebase",
            "homeassistant.components.dynalite.light",
            "homeassistant.components.dynalite.switch",
            "homeassistant.components.dyson",
            "homeassistant.components.dyson.air_quality",
            "homeassistant.components.dyson.climate",
            "homeassistant.components.dyson.fan",
            "homeassistant.components.dyson.sensor",
            "homeassistant.components.dyson.vacuum",
            "homeassistant.components.eafm",
            "homeassistant.components.eafm.config_flow",
            "homeassistant.components.eafm.const",
            "homeassistant.components.eafm.sensor",
            "homeassistant.components.ebox",
            "homeassistant.components.ebox.sensor",
            "homeassistant.components.ebusd",
            "homeassistant.components.ebusd.const",
            "homeassistant.components.ebusd.sensor",
            "homeassistant.components.ecoal_boiler",
            "homeassistant.components.ecoal_boiler.sensor",
            "homeassistant.components.ecoal_boiler.switch",
            "homeassistant.components.ecobee",
            "homeassistant.components.ecobee.binary_sensor",
            "homeassistant.components.ecobee.climate",
            "homeassistant.components.ecobee.config_flow",
            "homeassistant.components.ecobee.const",
            "homeassistant.components.ecobee.notify",
            "homeassistant.components.ecobee.sensor",
            "homeassistant.components.ecobee.util",
            "homeassistant.components.ecobee.weather",
            "homeassistant.components.econet",
            "homeassistant.components.econet.const",
            "homeassistant.components.econet.water_heater",
            "homeassistant.components.ecovacs",
            "homeassistant.components.ecovacs.vacuum",
            "homeassistant.components.eddystone_temperature",
            "homeassistant.components.eddystone_temperature.sensor",
            "homeassistant.components.edimax",
            "homeassistant.components.edimax.switch",
            "homeassistant.components.edl21",
            "homeassistant.components.edl21.sensor",
            "homeassistant.components.ee_brightbox",
            "homeassistant.components.ee_brightbox.device_tracker",
            "homeassistant.components.efergy",
            "homeassistant.components.efergy.sensor",
            "homeassistant.components.egardia",
            "homeassistant.components.egardia.alarm_control_panel",
            "homeassistant.components.egardia.binary_sensor",
            "homeassistant.components.eight_sleep",
            "homeassistant.components.eight_sleep.binary_sensor",
            "homeassistant.components.eight_sleep.sensor",
            "homeassistant.components.elgato",
            "homeassistant.components.elgato.config_flow",
            "homeassistant.components.elgato.const",
            "homeassistant.components.elgato.light",
            "homeassistant.components.eliqonline",
            "homeassistant.components.eliqonline.sensor",
            "homeassistant.components.elkm1",
            "homeassistant.components.elkm1.alarm_control_panel",
            "homeassistant.components.elkm1.climate",
            "homeassistant.components.elkm1.config_flow",
            "homeassistant.components.elkm1.const",
            "homeassistant.components.elkm1.light",
            "homeassistant.components.elkm1.scene",
            "homeassistant.components.elkm1.sensor",
            "homeassistant.components.elkm1.switch",
            "homeassistant.components.elv",
            "homeassistant.components.elv.switch",
            "homeassistant.components.emby",
            "homeassistant.components.emby.media_player",
            "homeassistant.components.emoncms",
            "homeassistant.components.emoncms.sensor",
            "homeassistant.components.emoncms_history",
            "homeassistant.components.emulated_hue",
            "homeassistant.components.emulated_hue.const",
            "homeassistant.components.emulated_hue.hue_api",
            "homeassistant.components.emulated_hue.upnp",
            "homeassistant.components.emulated_kasa",
            "homeassistant.components.emulated_kasa.const",
            "homeassistant.components.emulated_roku",
            "homeassistant.components.emulated_roku.binding",
            "homeassistant.components.emulated_roku.config_flow",
            "homeassistant.components.emulated_roku.const",
            "homeassistant.components.enigma2",
            "homeassistant.components.enigma2.media_player",
            "homeassistant.components.enocean",
            "homeassistant.components.enocean.binary_sensor",
            "homeassistant.components.enocean.config_flow",
            "homeassistant.components.enocean.const",
            "homeassistant.components.enocean.device",
            "homeassistant.components.enocean.dongle",
            "homeassistant.components.enocean.light",
            "homeassistant.components.enocean.sensor",
            "homeassistant.components.enocean.switch",
            "homeassistant.components.enphase_envoy",
            "homeassistant.components.enphase_envoy.sensor",
            "homeassistant.components.entur_public_transport",
            "homeassistant.components.entur_public_transport.sensor",
            "homeassistant.components.environment_canada",
            "homeassistant.components.environment_canada.camera",
            "homeassistant.components.environment_canada.sensor",
            "homeassistant.components.environment_canada.weather",
            "homeassistant.components.envirophat",
            "homeassistant.components.envirophat.sensor",
            "homeassistant.components.envisalink",
            "homeassistant.components.envisalink.alarm_control_panel",
            "homeassistant.components.envisalink.binary_sensor",
            "homeassistant.components.envisalink.sensor",
            "homeassistant.components.ephember",
            "homeassistant.components.ephember.climate",
            "homeassistant.components.epson",
            "homeassistant.components.epson.const",
            "homeassistant.components.epson.media_player",
            "homeassistant.components.epsonworkforce",
            "homeassistant.components.epsonworkforce.sensor",
            "homeassistant.components.eq3btsmart",
            "homeassistant.components.eq3btsmart.climate",
            "homeassistant.components.esphome",
            "homeassistant.components.esphome.binary_sensor",
            "homeassistant.components.esphome.camera",
            "homeassistant.components.esphome.climate",
            "homeassistant.components.esphome.config_flow",
            "homeassistant.components.esphome.cover",
            "homeassistant.components.esphome.entry_data",
            "homeassistant.components.esphome.fan",
            "homeassistant.components.esphome.light",
            "homeassistant.components.esphome.sensor",
            "homeassistant.components.esphome.switch",
            "homeassistant.components.essent",
            "homeassistant.components.essent.sensor",
            "homeassistant.components.etherscan",
            "homeassistant.components.etherscan.sensor",
            "homeassistant.components.eufy",
            "homeassistant.components.eufy.light",
            "homeassistant.components.eufy.switch",
            "homeassistant.components.everlights",
            "homeassistant.components.everlights.light",
            "homeassistant.components.evohome",
            "homeassistant.components.evohome.climate",
            "homeassistant.components.evohome.const",
            "homeassistant.components.evohome.water_heater",
            "homeassistant.components.ezviz",
            "homeassistant.components.ezviz.camera",
            "homeassistant.components.facebook",
            "homeassistant.components.facebook.notify",
            "homeassistant.components.facebox",
            "homeassistant.components.facebox.const",
            "homeassistant.components.facebox.image_processing",
            "homeassistant.components.fail2ban",
            "homeassistant.components.fail2ban.sensor",
            "homeassistant.components.familyhub",
            "homeassistant.components.familyhub.camera",
            "homeassistant.components.fan",
            "homeassistant.components.fan.device_action",
            "homeassistant.components.fan.device_condition",
            "homeassistant.components.fan.device_trigger",
            "homeassistant.components.fan.group",
            "homeassistant.components.fan.reproduce_state",
            "homeassistant.components.fastdotcom",
            "homeassistant.components.fastdotcom.sensor",
            "homeassistant.components.feedreader",
            "homeassistant.components.ffmpeg",
            "homeassistant.components.ffmpeg.camera",
            "homeassistant.components.ffmpeg_motion",
            "homeassistant.components.ffmpeg_motion.binary_sensor",
            "homeassistant.components.ffmpeg_noise",
            "homeassistant.components.ffmpeg_noise.binary_sensor",
            "homeassistant.components.fibaro",
            "homeassistant.components.fibaro.binary_sensor",
            "homeassistant.components.fibaro.climate",
            "homeassistant.components.fibaro.cover",
            "homeassistant.components.fibaro.light",
            "homeassistant.components.fibaro.lock",
            "homeassistant.components.fibaro.scene",
            "homeassistant.components.fibaro.sensor",
            "homeassistant.components.fibaro.switch",
            "homeassistant.components.fido",
            "homeassistant.components.fido.sensor",
            "homeassistant.components.file",
            "homeassistant.components.file.notify",
            "homeassistant.components.file.sensor",
            "homeassistant.components.filesize",
            "homeassistant.components.filesize.sensor",
            "homeassistant.components.filter",
            "homeassistant.components.filter.sensor",
            "homeassistant.components.fints",
            "homeassistant.components.fints.sensor",
            "homeassistant.components.firmata",
            "homeassistant.components.firmata.binary_sensor",
            "homeassistant.components.firmata.board",
            "homeassistant.components.firmata.config_flow",
            "homeassistant.components.firmata.const",
            "homeassistant.components.firmata.entity",
            "homeassistant.components.firmata.light",
            "homeassistant.components.firmata.pin",
            "homeassistant.components.firmata.sensor",
            "homeassistant.components.firmata.switch",
            "homeassistant.components.fitbit",
            "homeassistant.components.fitbit.sensor",
            "homeassistant.components.fixer",
            "homeassistant.components.fixer.sensor",
            "homeassistant.components.fleetgo",
            "homeassistant.components.fleetgo.device_tracker",
            "homeassistant.components.flexit",
            "homeassistant.components.flexit.climate",
            "homeassistant.components.flic",
            "homeassistant.components.flic.binary_sensor",
            "homeassistant.components.flick_electric",
            "homeassistant.components.flick_electric.config_flow",
            "homeassistant.components.flick_electric.const",
            "homeassistant.components.flick_electric.sensor",
            "homeassistant.components.flo",
            "homeassistant.components.flo.binary_sensor",
            "homeassistant.components.flo.config_flow",
            "homeassistant.components.flo.const",
            "homeassistant.components.flo.device",
            "homeassistant.components.flo.entity",
            "homeassistant.components.flo.sensor",
            "homeassistant.components.flo.switch",
            "homeassistant.components.flock",
            "homeassistant.components.flock.notify",
            "homeassistant.components.flume",
            "homeassistant.components.flume.config_flow",
            "homeassistant.components.flume.const",
            "homeassistant.components.flume.sensor",
            "homeassistant.components.flunearyou",
            "homeassistant.components.flunearyou.config_flow",
            "homeassistant.components.flunearyou.const",
            "homeassistant.components.flunearyou.sensor",
            "homeassistant.components.flux",
            "homeassistant.components.flux.switch",
            "homeassistant.components.flux_led",
            "homeassistant.components.flux_led.light",
            "homeassistant.components.folder",
            "homeassistant.components.folder.sensor",
            "homeassistant.components.folder_watcher",
            "homeassistant.components.foobot",
            "homeassistant.components.foobot.sensor",
            "homeassistant.components.forked_daapd",
            "homeassistant.components.forked_daapd.config_flow",
            "homeassistant.components.forked_daapd.const",
            "homeassistant.components.forked_daapd.media_player",
            "homeassistant.components.fortios",
            "homeassistant.components.fortios.device_tracker",
            "homeassistant.components.foscam",
            "homeassistant.components.foscam.camera",
            "homeassistant.components.foscam.const",
            "homeassistant.components.foursquare",
            "homeassistant.components.free_mobile",
            "homeassistant.components.free_mobile.notify",
            "homeassistant.components.freebox",
            "homeassistant.components.freebox.config_flow",
            "homeassistant.components.freebox.const",
            "homeassistant.components.freebox.device_tracker",
            "homeassistant.components.freebox.router",
            "homeassistant.components.freebox.sensor",
            "homeassistant.components.freebox.switch",
            "homeassistant.components.freedns",
            "homeassistant.components.fritz",
            "homeassistant.components.fritz.device_tracker",
            "homeassistant.components.fritzbox",
            "homeassistant.components.fritzbox.binary_sensor",
            "homeassistant.components.fritzbox.climate",
            "homeassistant.components.fritzbox.config_flow",
            "homeassistant.components.fritzbox.const",
            "homeassistant.components.fritzbox.sensor",
            "homeassistant.components.fritzbox.switch",
            "homeassistant.components.fritzbox_callmonitor",
            "homeassistant.components.fritzbox_callmonitor.sensor",
            "homeassistant.components.fritzbox_netmonitor",
            "homeassistant.components.fritzbox_netmonitor.sensor",
            "homeassistant.components.fronius",
            "homeassistant.components.fronius.sensor",
            "homeassistant.components.frontend",
            "homeassistant.components.frontend.storage",
            "homeassistant.components.frontier_silicon",
            "homeassistant.components.frontier_silicon.media_player",
            "homeassistant.components.futurenow",
            "homeassistant.components.futurenow.light",
            "homeassistant.components.garadget",
            "homeassistant.components.garadget.cover",
            "homeassistant.components.garmin_connect",
            "homeassistant.components.garmin_connect.config_flow",
            "homeassistant.components.garmin_connect.const",
            "homeassistant.components.garmin_connect.sensor",
            "homeassistant.components.gc100",
            "homeassistant.components.gc100.binary_sensor",
            "homeassistant.components.gc100.switch",
            "homeassistant.components.gdacs",
            "homeassistant.components.gdacs.config_flow",
            "homeassistant.components.gdacs.const",
            "homeassistant.components.gdacs.geo_location",
            "homeassistant.components.gdacs.sensor",
            "homeassistant.components.geizhals",
            "homeassistant.components.geizhals.sensor",
            "homeassistant.components.generic",
            "homeassistant.components.generic.camera",
            "homeassistant.components.generic_thermostat",
            "homeassistant.components.generic_thermostat.climate",
            "homeassistant.components.geniushub",
            "homeassistant.components.geniushub.binary_sensor",
            "homeassistant.components.geniushub.climate",
            "homeassistant.components.geniushub.sensor",
            "homeassistant.components.geniushub.switch",
            "homeassistant.components.geniushub.water_heater",
            "homeassistant.components.geo_json_events",
            "homeassistant.components.geo_json_events.geo_location",
            "homeassistant.components.geo_location",
            "homeassistant.components.geo_location.trigger",
            "homeassistant.components.geo_rss_events",
            "homeassistant.components.geo_rss_events.sensor",
            "homeassistant.components.geofency",
            "homeassistant.components.geofency.config_flow",
            "homeassistant.components.geofency.const",
            "homeassistant.components.geofency.device_tracker",
            "homeassistant.components.geonetnz_quakes",
            "homeassistant.components.geonetnz_quakes.config_flow",
            "homeassistant.components.geonetnz_quakes.const",
            "homeassistant.components.geonetnz_quakes.geo_location",
            "homeassistant.components.geonetnz_quakes.sensor",
            "homeassistant.components.geonetnz_volcano",
            "homeassistant.components.geonetnz_volcano.config_flow",
            "homeassistant.components.geonetnz_volcano.const",
            "homeassistant.components.geonetnz_volcano.sensor",
            "homeassistant.components.gios",
            "homeassistant.components.gios.air_quality",
            "homeassistant.components.gios.config_flow",
            "homeassistant.components.gios.const",
            "homeassistant.components.github",
            "homeassistant.components.github.sensor",
            "homeassistant.components.gitlab_ci",
            "homeassistant.components.gitlab_ci.sensor",
            "homeassistant.components.gitter",
            "homeassistant.components.gitter.sensor",
            "homeassistant.components.glances",
            "homeassistant.components.glances.config_flow",
            "homeassistant.components.glances.const",
            "homeassistant.components.glances.sensor",
            "homeassistant.components.gntp",
            "homeassistant.components.gntp.notify",
            "homeassistant.components.goalfeed",
            "homeassistant.components.goalzero",
            "homeassistant.components.goalzero.binary_sensor",
            "homeassistant.components.goalzero.config_flow",
            "homeassistant.components.goalzero.const",
            "homeassistant.components.gogogate2",
            "homeassistant.components.gogogate2.common",
            "homeassistant.components.gogogate2.config_flow",
            "homeassistant.components.gogogate2.const",
            "homeassistant.components.gogogate2.cover",
            "homeassistant.components.google",
            "homeassistant.components.google.calendar",
            "homeassistant.components.google_assistant",
            "homeassistant.components.google_assistant.const",
            "homeassistant.components.google_assistant.error",
            "homeassistant.components.google_assistant.helpers",
            "homeassistant.components.google_assistant.http",
            "homeassistant.components.google_assistant.report_state",
            "homeassistant.components.google_assistant.smart_home",
            "homeassistant.components.google_assistant.trait",
            "homeassistant.components.google_cloud",
            "homeassistant.components.google_cloud.tts",
            "homeassistant.components.google_domains",
            "homeassistant.components.google_maps",
            "homeassistant.components.google_maps.device_tracker",
            "homeassistant.components.google_pubsub",
            "homeassistant.components.google_translate",
            "homeassistant.components.google_translate.tts",
            "homeassistant.components.google_travel_time",
            "homeassistant.components.google_travel_time.sensor",
            "homeassistant.components.google_wifi",
            "homeassistant.components.google_wifi.sensor",
            "homeassistant.components.gpmdp",
            "homeassistant.components.gpmdp.media_player",
            "homeassistant.components.gpsd",
            "homeassistant.components.gpsd.sensor",
            "homeassistant.components.gpslogger",
            "homeassistant.components.gpslogger.config_flow",
            "homeassistant.components.gpslogger.const",
            "homeassistant.components.gpslogger.device_tracker",
            "homeassistant.components.graphite",
            "homeassistant.components.greeneye_monitor",
            "homeassistant.components.greeneye_monitor.sensor",
            "homeassistant.components.greenwave",
            "homeassistant.components.greenwave.light",
            "homeassistant.components.griddy",
            "homeassistant.components.griddy.config_flow",
            "homeassistant.components.griddy.const",
            "homeassistant.components.griddy.sensor",
            "homeassistant.components.group",
            "homeassistant.components.group.cover",
            "homeassistant.components.group.light",
            "homeassistant.components.group.notify",
            "homeassistant.components.group.reproduce_state",
            "homeassistant.components.growatt_server",
            "homeassistant.components.growatt_server.sensor",
            "homeassistant.components.gstreamer",
            "homeassistant.components.gstreamer.media_player",
            "homeassistant.components.gtfs",
            "homeassistant.components.gtfs.sensor",
            "homeassistant.components.guardian",
            "homeassistant.components.guardian.binary_sensor",
            "homeassistant.components.guardian.config_flow",
            "homeassistant.components.guardian.const",
            "homeassistant.components.guardian.sensor",
            "homeassistant.components.guardian.switch",
            "homeassistant.components.guardian.util",
            "homeassistant.components.habitica",
            "homeassistant.components.habitica.sensor",
            "homeassistant.components.hangouts",
            "homeassistant.components.hangouts.config_flow",
            "homeassistant.components.hangouts.const",
            "homeassistant.components.hangouts.hangouts_bot",
            "homeassistant.components.hangouts.hangups_utils",
            "homeassistant.components.hangouts.intents",
            "homeassistant.components.hangouts.notify",
            "homeassistant.components.harman_kardon_avr",
            "homeassistant.components.harman_kardon_avr.media_player",
            "homeassistant.components.harmony",
            "homeassistant.components.harmony.config_flow",
            "homeassistant.components.harmony.const",
            "homeassistant.components.harmony.remote",
            "homeassistant.components.harmony.util",
            "homeassistant.components.hassio",
            "homeassistant.components.hassio.addon_panel",
            "homeassistant.components.hassio.auth",
            "homeassistant.components.hassio.const",
            "homeassistant.components.hassio.discovery",
            "homeassistant.components.hassio.handler",
            "homeassistant.components.hassio.http",
            "homeassistant.components.hassio.ingress",
            "homeassistant.components.haveibeenpwned",
            "homeassistant.components.haveibeenpwned.sensor",
            "homeassistant.components.hddtemp",
            "homeassistant.components.hddtemp.sensor",
            "homeassistant.components.hdmi_cec",
            "homeassistant.components.hdmi_cec.media_player",
            "homeassistant.components.hdmi_cec.switch",
            "homeassistant.components.heatmiser",
            "homeassistant.components.heatmiser.climate",
            "homeassistant.components.heos",
            "homeassistant.components.heos.config_flow",
            "homeassistant.components.heos.const",
            "homeassistant.components.heos.media_player",
            "homeassistant.components.heos.services",
            "homeassistant.components.here_travel_time",
            "homeassistant.components.here_travel_time.sensor",
            "homeassistant.components.hikvision",
            "homeassistant.components.hikvision.binary_sensor",
            "homeassistant.components.hikvisioncam",
            "homeassistant.components.hikvisioncam.switch",
            "homeassistant.components.hisense_aehw4a1",
            "homeassistant.components.hisense_aehw4a1.climate",
            "homeassistant.components.hisense_aehw4a1.config_flow",
            "homeassistant.components.hisense_aehw4a1.const",
            "homeassistant.components.history",
            "homeassistant.components.history_stats",
            "homeassistant.components.history_stats.sensor",
            "homeassistant.components.hitron_coda",
            "homeassistant.components.hitron_coda.device_tracker",
            "homeassistant.components.hive",
            "homeassistant.components.hive.binary_sensor",
            "homeassistant.components.hive.climate",
            "homeassistant.components.hive.light",
            "homeassistant.components.hive.sensor",
            "homeassistant.components.hive.switch",
            "homeassistant.components.hive.water_heater",
            "homeassistant.components.hlk_sw16",
            "homeassistant.components.hlk_sw16.config_flow",
            "homeassistant.components.hlk_sw16.const",
            "homeassistant.components.hlk_sw16.errors",
            "homeassistant.components.hlk_sw16.switch",
            "homeassistant.components.home_connect",
            "homeassistant.components.home_connect.api",
            "homeassistant.components.home_connect.binary_sensor",
            "homeassistant.components.home_connect.config_flow",
            "homeassistant.components.home_connect.const",
            "homeassistant.components.home_connect.entity",
            "homeassistant.components.home_connect.sensor",
            "homeassistant.components.home_connect.switch",
            "homeassistant.components.homeassistant",
            "homeassistant.components.homeassistant.scene",
            "homeassistant.components.homeassistant.trigger",
            "homeassistant.components.homeassistant.triggers",
            "homeassistant.components.homeassistant.triggers.event",
            "homeassistant.components.homeassistant.triggers.homeassistant",
            "homeassistant.components.homeassistant.triggers.numeric_state",
            "homeassistant.components.homeassistant.triggers.state",
            "homeassistant.components.homeassistant.triggers.time",
            "homeassistant.components.homeassistant.triggers.time_pattern",
            "homeassistant.components.homekit",
            "homeassistant.components.homekit.accessories",
            "homeassistant.components.homekit.aidmanager",
            "homeassistant.components.homekit.config_flow",
            "homeassistant.components.homekit.const",
            "homeassistant.components.homekit.img_util",
            "homeassistant.components.homekit.logbook",
            "homeassistant.components.homekit.type_cameras",
            "homeassistant.components.homekit.type_covers",
            "homeassistant.components.homekit.type_fans",
            "homeassistant.components.homekit.type_humidifiers",
            "homeassistant.components.homekit.type_lights",
            "homeassistant.components.homekit.type_locks",
            "homeassistant.components.homekit.type_media_players",
            "homeassistant.components.homekit.type_security_systems",
            "homeassistant.components.homekit.type_sensors",
            "homeassistant.components.homekit.type_switches",
            "homeassistant.components.homekit.type_thermostats",
            "homeassistant.components.homekit.util",
            "homeassistant.components.homekit_controller",
            "homeassistant.components.homekit_controller.air_quality",
            "homeassistant.components.homekit_controller.alarm_control_panel",
            "homeassistant.components.homekit_controller.binary_sensor",
            "homeassistant.components.homekit_controller.climate",
            "homeassistant.components.homekit_controller.config_flow",
            "homeassistant.components.homekit_controller.connection",
            "homeassistant.components.homekit_controller.const",
            "homeassistant.components.homekit_controller.cover",
            "homeassistant.components.homekit_controller.device_trigger",
            "homeassistant.components.homekit_controller.fan",
            "homeassistant.components.homekit_controller.light",
            "homeassistant.components.homekit_controller.lock",
            "homeassistant.components.homekit_controller.media_player",
            "homeassistant.components.homekit_controller.sensor",
            "homeassistant.components.homekit_controller.storage",
            "homeassistant.components.homekit_controller.switch",
            "homeassistant.components.homematic",
            "homeassistant.components.homematic.binary_sensor",
            "homeassistant.components.homematic.climate",
            "homeassistant.components.homematic.const",
            "homeassistant.components.homematic.cover",
            "homeassistant.components.homematic.entity",
            "homeassistant.components.homematic.light",
            "homeassistant.components.homematic.lock",
            "homeassistant.components.homematic.notify",
            "homeassistant.components.homematic.sensor",
            "homeassistant.components.homematic.switch",
            "homeassistant.components.homematicip_cloud",
            "homeassistant.components.homematicip_cloud.alarm_control_panel",
            "homeassistant.components.homematicip_cloud.binary_sensor",
            "homeassistant.components.homematicip_cloud.climate",
            "homeassistant.components.homematicip_cloud.config_flow",
            "homeassistant.components.homematicip_cloud.const",
            "homeassistant.components.homematicip_cloud.cover",
            "homeassistant.components.homematicip_cloud.errors",
            "homeassistant.components.homematicip_cloud.generic_entity",
            "homeassistant.components.homematicip_cloud.hap",
            "homeassistant.components.homematicip_cloud.light",
            "homeassistant.components.homematicip_cloud.sensor",
            "homeassistant.components.homematicip_cloud.services",
            "homeassistant.components.homematicip_cloud.switch",
            "homeassistant.components.homematicip_cloud.weather",
            "homeassistant.components.homeworks",
            "homeassistant.components.homeworks.light",
            "homeassistant.components.honeywell",
            "homeassistant.components.honeywell.climate",
            "homeassistant.components.horizon",
            "homeassistant.components.horizon.media_player",
            "homeassistant.components.hp_ilo",
            "homeassistant.components.hp_ilo.sensor",
            "homeassistant.components.html5",
            "homeassistant.components.html5.const",
            "homeassistant.components.html5.notify",
            "homeassistant.components.http",
            "homeassistant.components.http.auth",
            "homeassistant.components.http.ban",
            "homeassistant.components.http.const",
            "homeassistant.components.http.cors",
            "homeassistant.components.http.data_validator",
            "homeassistant.components.http.forwarded",
            "homeassistant.components.http.request_context",
            "homeassistant.components.http.static",
            "homeassistant.components.http.view",
            "homeassistant.components.http.web_runner",
            "homeassistant.components.htu21d",
            "homeassistant.components.htu21d.sensor",
            "homeassistant.components.huawei_lte",
            "homeassistant.components.huawei_lte.binary_sensor",
            "homeassistant.components.huawei_lte.config_flow",
            "homeassistant.components.huawei_lte.const",
            "homeassistant.components.huawei_lte.device_tracker",
            "homeassistant.components.huawei_lte.notify",
            "homeassistant.components.huawei_lte.sensor",
            "homeassistant.components.huawei_lte.switch",
            "homeassistant.components.huawei_router",
            "homeassistant.components.huawei_router.device_tracker",
            "homeassistant.components.hue",
            "homeassistant.components.hue.binary_sensor",
            "homeassistant.components.hue.bridge",
            "homeassistant.components.hue.config_flow",
            "homeassistant.components.hue.const",
            "homeassistant.components.hue.device_trigger",
            "homeassistant.components.hue.errors",
            "homeassistant.components.hue.helpers",
            "homeassistant.components.hue.hue_event",
            "homeassistant.components.hue.light",
            "homeassistant.components.hue.sensor",
            "homeassistant.components.hue.sensor_base",
            "homeassistant.components.hue.sensor_device",
            "homeassistant.components.humidifier",
            "homeassistant.components.humidifier.const",
            "homeassistant.components.humidifier.device_action",
            "homeassistant.components.humidifier.device_condition",
            "homeassistant.components.humidifier.device_trigger",
            "homeassistant.components.humidifier.group",
            "homeassistant.components.humidifier.intent",
            "homeassistant.components.humidifier.reproduce_state",
            "homeassistant.components.hunterdouglas_powerview",
            "homeassistant.components.hunterdouglas_powerview.config_flow",
            "homeassistant.components.hunterdouglas_powerview.const",
            "homeassistant.components.hunterdouglas_powerview.cover",
            "homeassistant.components.hunterdouglas_powerview.entity",
            "homeassistant.components.hunterdouglas_powerview.scene",
            "homeassistant.components.hunterdouglas_powerview.sensor",
            "homeassistant.components.hvv_departures",
            "homeassistant.components.hvv_departures.binary_sensor",
            "homeassistant.components.hvv_departures.config_flow",
            "homeassistant.components.hvv_departures.const",
            "homeassistant.components.hvv_departures.hub",
            "homeassistant.components.hvv_departures.sensor",
            "homeassistant.components.hydrawise",
            "homeassistant.components.hydrawise.binary_sensor",
            "homeassistant.components.hydrawise.sensor",
            "homeassistant.components.hydrawise.switch",
            "homeassistant.components.hyperion",
            "homeassistant.components.hyperion.light",
            "homeassistant.components.ialarm",
            "homeassistant.components.ialarm.alarm_control_panel",
            "homeassistant.components.iammeter",
            "homeassistant.components.iammeter.sensor",
            "homeassistant.components.iaqualink",
            "homeassistant.components.iaqualink.binary_sensor",
            "homeassistant.components.iaqualink.climate",
            "homeassistant.components.iaqualink.config_flow",
            "homeassistant.components.iaqualink.const",
            "homeassistant.components.iaqualink.light",
            "homeassistant.components.iaqualink.sensor",
            "homeassistant.components.iaqualink.switch",
            "homeassistant.components.icloud",
            "homeassistant.components.icloud.account",
            "homeassistant.components.icloud.config_flow",
            "homeassistant.components.icloud.const",
            "homeassistant.components.icloud.device_tracker",
            "homeassistant.components.icloud.sensor",
            "homeassistant.components.idteck_prox",
            "homeassistant.components.ifttt",
            "homeassistant.components.ifttt.alarm_control_panel",
            "homeassistant.components.ifttt.config_flow",
            "homeassistant.components.ifttt.const",
            "homeassistant.components.iglo",
            "homeassistant.components.iglo.light",
            "homeassistant.components.ign_sismologia",
            "homeassistant.components.ign_sismologia.geo_location",
            "homeassistant.components.ihc",
            "homeassistant.components.ihc.binary_sensor",
            "homeassistant.components.ihc.const",
            "homeassistant.components.ihc.ihcdevice",
            "homeassistant.components.ihc.light",
            "homeassistant.components.ihc.sensor",
            "homeassistant.components.ihc.switch",
            "homeassistant.components.ihc.util",
            "homeassistant.components.image",
            "homeassistant.components.image.const",
            "homeassistant.components.image_processing",
            "homeassistant.components.imap",
            "homeassistant.components.imap.sensor",
            "homeassistant.components.imap_email_content",
            "homeassistant.components.imap_email_content.sensor",
            "homeassistant.components.incomfort",
            "homeassistant.components.incomfort.binary_sensor",
            "homeassistant.components.incomfort.climate",
            "homeassistant.components.incomfort.sensor",
            "homeassistant.components.incomfort.water_heater",
            "homeassistant.components.influxdb",
            "homeassistant.components.influxdb.const",
            "homeassistant.components.influxdb.sensor",
            "homeassistant.components.input_boolean",
            "homeassistant.components.input_boolean.reproduce_state",
            "homeassistant.components.input_datetime",
            "homeassistant.components.input_datetime.reproduce_state",
            "homeassistant.components.input_number",
            "homeassistant.components.input_number.reproduce_state",
            "homeassistant.components.input_select",
            "homeassistant.components.input_select.reproduce_state",
            "homeassistant.components.input_text",
            "homeassistant.components.input_text.reproduce_state",
            "homeassistant.components.insteon",
            "homeassistant.components.insteon.binary_sensor",
            "homeassistant.components.insteon.climate",
            "homeassistant.components.insteon.config_flow",
            "homeassistant.components.insteon.const",
            "homeassistant.components.insteon.cover",
            "homeassistant.components.insteon.fan",
            "homeassistant.components.insteon.insteon_entity",
            "homeassistant.components.insteon.ipdb",
            "homeassistant.components.insteon.light",
            "homeassistant.components.insteon.schemas",
            "homeassistant.components.insteon.switch",
            "homeassistant.components.insteon.utils",
            "homeassistant.components.integration",
            "homeassistant.components.integration.sensor",
            "homeassistant.components.intent",
            "homeassistant.components.intent.const",
            "homeassistant.components.intent_script",
            "homeassistant.components.intesishome",
            "homeassistant.components.intesishome.climate",
            "homeassistant.components.ios",
            "homeassistant.components.ios.config_flow",
            "homeassistant.components.ios.const",
            "homeassistant.components.ios.notify",
            "homeassistant.components.ios.sensor",
            "homeassistant.components.iota",
            "homeassistant.components.iota.sensor",
            "homeassistant.components.iperf3",
            "homeassistant.components.iperf3.sensor",
            "homeassistant.components.ipma",
            "homeassistant.components.ipma.config_flow",
            "homeassistant.components.ipma.const",
            "homeassistant.components.ipma.weather",
            "homeassistant.components.ipp",
            "homeassistant.components.ipp.config_flow",
            "homeassistant.components.ipp.const",
            "homeassistant.components.ipp.sensor",
            "homeassistant.components.iqvia",
            "homeassistant.components.iqvia.config_flow",
            "homeassistant.components.iqvia.const",
            "homeassistant.components.iqvia.sensor",
            "homeassistant.components.irish_rail_transport",
            "homeassistant.components.irish_rail_transport.sensor",
            "homeassistant.components.islamic_prayer_times",
            "homeassistant.components.islamic_prayer_times.config_flow",
            "homeassistant.components.islamic_prayer_times.const",
            "homeassistant.components.islamic_prayer_times.sensor",
            "homeassistant.components.iss",
            "homeassistant.components.iss.binary_sensor",
            "homeassistant.components.isy994",
            "homeassistant.components.isy994.binary_sensor",
            "homeassistant.components.isy994.climate",
            "homeassistant.components.isy994.config_flow",
            "homeassistant.components.isy994.const",
            "homeassistant.components.isy994.cover",
            "homeassistant.components.isy994.entity",
            "homeassistant.components.isy994.fan",
            "homeassistant.components.isy994.helpers",
            "homeassistant.components.isy994.light",
            "homeassistant.components.isy994.lock",
            "homeassistant.components.isy994.sensor",
            "homeassistant.components.isy994.services",
            "homeassistant.components.isy994.switch",
            "homeassistant.components.itach",
            "homeassistant.components.itach.remote",
            "homeassistant.components.itunes",
            "homeassistant.components.itunes.media_player",
            "homeassistant.components.izone",
            "homeassistant.components.izone.climate",
            "homeassistant.components.izone.config_flow",
            "homeassistant.components.izone.const",
            "homeassistant.components.izone.discovery",
            "homeassistant.components.jewish_calendar",
            "homeassistant.components.jewish_calendar.binary_sensor",
            "homeassistant.components.jewish_calendar.sensor",
            "homeassistant.components.joaoapps_join",
            "homeassistant.components.joaoapps_join.notify",
            "homeassistant.components.juicenet",
            "homeassistant.components.juicenet.config_flow",
            "homeassistant.components.juicenet.const",
            "homeassistant.components.juicenet.device",
            "homeassistant.components.juicenet.entity",
            "homeassistant.components.juicenet.sensor",
            "homeassistant.components.juicenet.switch",
            "homeassistant.components.kaiterra",
            "homeassistant.components.kaiterra.air_quality",
            "homeassistant.components.kaiterra.api_data",
            "homeassistant.components.kaiterra.const",
            "homeassistant.components.kaiterra.sensor",
            "homeassistant.components.kankun",
            "homeassistant.components.kankun.switch",
            "homeassistant.components.keba",
            "homeassistant.components.keba.binary_sensor",
            "homeassistant.components.keba.lock",
            "homeassistant.components.keba.notify",
            "homeassistant.components.keba.sensor",
            "homeassistant.components.keenetic_ndms2",
            "homeassistant.components.keenetic_ndms2.device_tracker",
            "homeassistant.components.kef",
            "homeassistant.components.kef.media_player",
            "homeassistant.components.keyboard",
            "homeassistant.components.keyboard_remote",
            "homeassistant.components.kira",
            "homeassistant.components.kira.remote",
            "homeassistant.components.kira.sensor",
            "homeassistant.components.kiwi",
            "homeassistant.components.kiwi.lock",
            "homeassistant.components.knx",
            "homeassistant.components.knx.binary_sensor",
            "homeassistant.components.knx.climate",
            "homeassistant.components.knx.const",
            "homeassistant.components.knx.cover",
            "homeassistant.components.knx.factory",
            "homeassistant.components.knx.knx_entity",
            "homeassistant.components.knx.light",
            "homeassistant.components.knx.notify",
            "homeassistant.components.knx.scene",
            "homeassistant.components.knx.schema",
            "homeassistant.components.knx.sensor",
            "homeassistant.components.knx.switch",
            "homeassistant.components.knx.weather",
            "homeassistant.components.kodi",
            "homeassistant.components.kodi.browse_media",
            "homeassistant.components.kodi.config_flow",
            "homeassistant.components.kodi.const",
            "homeassistant.components.kodi.device_trigger",
            "homeassistant.components.kodi.media_player",
            "homeassistant.components.kodi.notify",
            "homeassistant.components.konnected",
            "homeassistant.components.konnected.binary_sensor",
            "homeassistant.components.konnected.config_flow",
            "homeassistant.components.konnected.const",
            "homeassistant.components.konnected.errors",
            "homeassistant.components.konnected.handlers",
            "homeassistant.components.konnected.panel",
            "homeassistant.components.konnected.sensor",
            "homeassistant.components.konnected.switch",
            "homeassistant.components.kwb",
            "homeassistant.components.kwb.sensor",
            "homeassistant.components.lacrosse",
            "homeassistant.components.lacrosse.sensor",
            "homeassistant.components.lametric",
            "homeassistant.components.lametric.notify",
            "homeassistant.components.lannouncer",
            "homeassistant.components.lannouncer.notify",
            "homeassistant.components.lastfm",
            "homeassistant.components.lastfm.sensor",
            "homeassistant.components.launch_library",
            "homeassistant.components.launch_library.sensor",
            "homeassistant.components.lcn",
            "homeassistant.components.lcn.binary_sensor",
            "homeassistant.components.lcn.climate",
            "homeassistant.components.lcn.const",
            "homeassistant.components.lcn.cover",
            "homeassistant.components.lcn.helpers",
            "homeassistant.components.lcn.light",
            "homeassistant.components.lcn.scene",
            "homeassistant.components.lcn.sensor",
            "homeassistant.components.lcn.services",
            "homeassistant.components.lcn.switch",
            "homeassistant.components.lg_netcast",
            "homeassistant.components.lg_netcast.media_player",
            "homeassistant.components.lg_soundbar",
            "homeassistant.components.lg_soundbar.media_player",
            "homeassistant.components.life360",
            "homeassistant.components.life360.config_flow",
            "homeassistant.components.life360.const",
            "homeassistant.components.life360.device_tracker",
            "homeassistant.components.life360.helpers",
            "homeassistant.components.lifx",
            "homeassistant.components.lifx.config_flow",
            "homeassistant.components.lifx.const",
            "homeassistant.components.lifx.light",
            "homeassistant.components.lifx_cloud",
            "homeassistant.components.lifx_cloud.scene",
            "homeassistant.components.lifx_legacy",
            "homeassistant.components.lifx_legacy.light",
            "homeassistant.components.light",
            "homeassistant.components.light.device_action",
            "homeassistant.components.light.device_condition",
            "homeassistant.components.light.device_trigger",
            "homeassistant.components.light.group",
            "homeassistant.components.light.intent",
            "homeassistant.components.light.reproduce_state",
            "homeassistant.components.lightwave",
            "homeassistant.components.lightwave.climate",
            "homeassistant.components.lightwave.light",
            "homeassistant.components.lightwave.sensor",
            "homeassistant.components.lightwave.switch",
            "homeassistant.components.limitlessled",
            "homeassistant.components.limitlessled.light",
            "homeassistant.components.linksys_smart",
            "homeassistant.components.linksys_smart.device_tracker",
            "homeassistant.components.linode",
            "homeassistant.components.linode.binary_sensor",
            "homeassistant.components.linode.switch",
            "homeassistant.components.linux_battery",
            "homeassistant.components.linux_battery.sensor",
            "homeassistant.components.lirc",
            "homeassistant.components.litejet",
            "homeassistant.components.litejet.light",
            "homeassistant.components.litejet.scene",
            "homeassistant.components.litejet.switch",
            "homeassistant.components.litejet.trigger",
            "homeassistant.components.llamalab_automate",
            "homeassistant.components.llamalab_automate.notify",
            "homeassistant.components.local_file",
            "homeassistant.components.local_file.camera",
            "homeassistant.components.local_file.const",
            "homeassistant.components.local_ip",
            "homeassistant.components.local_ip.config_flow",
            "homeassistant.components.local_ip.const",
            "homeassistant.components.local_ip.sensor",
            "homeassistant.components.locative",
            "homeassistant.components.locative.config_flow",
            "homeassistant.components.locative.const",
            "homeassistant.components.locative.device_tracker",
            "homeassistant.components.lock",
            "homeassistant.components.lock.device_action",
            "homeassistant.components.lock.device_condition",
            "homeassistant.components.lock.device_trigger",
            "homeassistant.components.lock.group",
            "homeassistant.components.lock.reproduce_state",
            "homeassistant.components.logbook",
            "homeassistant.components.logentries",
            "homeassistant.components.logger",
            "homeassistant.components.logi_circle",
            "homeassistant.components.logi_circle.camera",
            "homeassistant.components.logi_circle.config_flow",
            "homeassistant.components.logi_circle.const",
            "homeassistant.components.logi_circle.sensor",
            "homeassistant.components.london_air",
            "homeassistant.components.london_air.sensor",
            "homeassistant.components.london_underground",
            "homeassistant.components.london_underground.sensor",
            "homeassistant.components.loopenergy",
            "homeassistant.components.loopenergy.sensor",
            "homeassistant.components.lovelace",
            "homeassistant.components.lovelace.const",
            "homeassistant.components.lovelace.dashboard",
            "homeassistant.components.lovelace.resources",
            "homeassistant.components.lovelace.websocket",
            "homeassistant.components.luci",
            "homeassistant.components.luci.device_tracker",
            "homeassistant.components.luftdaten",
            "homeassistant.components.luftdaten.config_flow",
            "homeassistant.components.luftdaten.const",
            "homeassistant.components.luftdaten.sensor",
            "homeassistant.components.lupusec",
            "homeassistant.components.lupusec.alarm_control_panel",
            "homeassistant.components.lupusec.binary_sensor",
            "homeassistant.components.lupusec.switch",
            "homeassistant.components.lutron",
            "homeassistant.components.lutron.binary_sensor",
            "homeassistant.components.lutron.cover",
            "homeassistant.components.lutron.light",
            "homeassistant.components.lutron.scene",
            "homeassistant.components.lutron.switch",
            "homeassistant.components.lutron_caseta",
            "homeassistant.components.lutron_caseta.binary_sensor",
            "homeassistant.components.lutron_caseta.config_flow",
            "homeassistant.components.lutron_caseta.const",
            "homeassistant.components.lutron_caseta.cover",
            "homeassistant.components.lutron_caseta.fan",
            "homeassistant.components.lutron_caseta.light",
            "homeassistant.components.lutron_caseta.scene",
            "homeassistant.components.lutron_caseta.switch",
            "homeassistant.components.lw12wifi",
            "homeassistant.components.lw12wifi.light",
            "homeassistant.components.lyft",
            "homeassistant.components.lyft.sensor",
            "homeassistant.components.magicseaweed",
            "homeassistant.components.magicseaweed.sensor",
            "homeassistant.components.mailbox",
            "homeassistant.components.mailgun",
            "homeassistant.components.mailgun.config_flow",
            "homeassistant.components.mailgun.const",
            "homeassistant.components.mailgun.notify",
            "homeassistant.components.manual",
            "homeassistant.components.manual.alarm_control_panel",
            "homeassistant.components.manual_mqtt",
            "homeassistant.components.manual_mqtt.alarm_control_panel",
            "homeassistant.components.map",
            "homeassistant.components.marytts",
            "homeassistant.components.marytts.tts",
            "homeassistant.components.mastodon",
            "homeassistant.components.mastodon.notify",
            "homeassistant.components.matrix",
            "homeassistant.components.matrix.const",
            "homeassistant.components.matrix.notify",
            "homeassistant.components.maxcube",
            "homeassistant.components.maxcube.binary_sensor",
            "homeassistant.components.maxcube.climate",
            "homeassistant.components.mcp23017",
            "homeassistant.components.mcp23017.binary_sensor",
            "homeassistant.components.mcp23017.switch",
            "homeassistant.components.media_extractor",
            "homeassistant.components.media_player",
            "homeassistant.components.media_player.const",
            "homeassistant.components.media_player.device_condition",
            "homeassistant.components.media_player.errors",
            "homeassistant.components.media_player.group",
            "homeassistant.components.media_player.reproduce_state",
            "homeassistant.components.media_source",
            "homeassistant.components.media_source.const",
            "homeassistant.components.media_source.error",
            "homeassistant.components.media_source.local_source",
            "homeassistant.components.media_source.models",
            "homeassistant.components.mediaroom",
            "homeassistant.components.mediaroom.media_player",
            "homeassistant.components.melcloud",
            "homeassistant.components.melcloud.climate",
            "homeassistant.components.melcloud.config_flow",
            "homeassistant.components.melcloud.const",
            "homeassistant.components.melcloud.sensor",
            "homeassistant.components.melcloud.water_heater",
            "homeassistant.components.melissa",
            "homeassistant.components.melissa.climate",
            "homeassistant.components.meraki",
            "homeassistant.components.meraki.device_tracker",
            "homeassistant.components.message_bird",
            "homeassistant.components.message_bird.notify",
            "homeassistant.components.met",
            "homeassistant.components.met.config_flow",
            "homeassistant.components.met.const",
            "homeassistant.components.met.weather",
            "homeassistant.components.meteo_france",
            "homeassistant.components.meteo_france.config_flow",
            "homeassistant.components.meteo_france.const",
            "homeassistant.components.meteo_france.sensor",
            "homeassistant.components.meteo_france.weather",
            "homeassistant.components.meteoalarm",
            "homeassistant.components.meteoalarm.binary_sensor",
            "homeassistant.components.metoffice",
            "homeassistant.components.metoffice.config_flow",
            "homeassistant.components.metoffice.const",
            "homeassistant.components.metoffice.data",
            "homeassistant.components.metoffice.sensor",
            "homeassistant.components.metoffice.weather",
            "homeassistant.components.mfi",
            "homeassistant.components.mfi.sensor",
            "homeassistant.components.mfi.switch",
            "homeassistant.components.mhz19",
            "homeassistant.components.mhz19.sensor",
            "homeassistant.components.microsoft",
            "homeassistant.components.microsoft.tts",
            "homeassistant.components.microsoft_face",
            "homeassistant.components.microsoft_face_detect",
            "homeassistant.components.microsoft_face_detect.image_processing",
            "homeassistant.components.microsoft_face_identify",
            "homeassistant.components.microsoft_face_identify.image_processing",
            "homeassistant.components.miflora",
            "homeassistant.components.miflora.sensor",
            "homeassistant.components.mikrotik",
            "homeassistant.components.mikrotik.config_flow",
            "homeassistant.components.mikrotik.const",
            "homeassistant.components.mikrotik.device_tracker",
            "homeassistant.components.mikrotik.errors",
            "homeassistant.components.mikrotik.hub",
            "homeassistant.components.mill",
            "homeassistant.components.mill.climate",
            "homeassistant.components.mill.config_flow",
            "homeassistant.components.mill.const",
            "homeassistant.components.min_max",
            "homeassistant.components.min_max.sensor",
            "homeassistant.components.minecraft_server",
            "homeassistant.components.minecraft_server.binary_sensor",
            "homeassistant.components.minecraft_server.config_flow",
            "homeassistant.components.minecraft_server.const",
            "homeassistant.components.minecraft_server.helpers",
            "homeassistant.components.minecraft_server.sensor",
            "homeassistant.components.minio",
            "homeassistant.components.minio.minio_helper",
            "homeassistant.components.mitemp_bt",
            "homeassistant.components.mitemp_bt.sensor",
            "homeassistant.components.mjpeg",
            "homeassistant.components.mjpeg.camera",
            "homeassistant.components.mobile_app",
            "homeassistant.components.mobile_app.binary_sensor",
            "homeassistant.components.mobile_app.config_flow",
            "homeassistant.components.mobile_app.const",
            "homeassistant.components.mobile_app.device_tracker",
            "homeassistant.components.mobile_app.entity",
            "homeassistant.components.mobile_app.helpers",
            "homeassistant.components.mobile_app.http_api",
            "homeassistant.components.mobile_app.notify",
            "homeassistant.components.mobile_app.sensor",
            "homeassistant.components.mobile_app.webhook",
            "homeassistant.components.mochad",
            "homeassistant.components.mochad.light",
            "homeassistant.components.mochad.switch",
            "homeassistant.components.modbus",
            "homeassistant.components.modbus.binary_sensor",
            "homeassistant.components.modbus.climate",
            "homeassistant.components.modbus.const",
            "homeassistant.components.modbus.cover",
            "homeassistant.components.modbus.sensor",
            "homeassistant.components.modbus.switch",
            "homeassistant.components.modem_callerid",
            "homeassistant.components.modem_callerid.sensor",
            "homeassistant.components.mold_indicator",
            "homeassistant.components.mold_indicator.sensor",
            "homeassistant.components.monoprice",
            "homeassistant.components.monoprice.config_flow",
            "homeassistant.components.monoprice.const",
            "homeassistant.components.monoprice.media_player",
            "homeassistant.components.moon",
            "homeassistant.components.moon.sensor",
            "homeassistant.components.mpchc",
            "homeassistant.components.mpchc.media_player",
            "homeassistant.components.mpd",
            "homeassistant.components.mpd.media_player",
            "homeassistant.components.mqtt",
            "homeassistant.components.mqtt.abbreviations",
            "homeassistant.components.mqtt.alarm_control_panel",
            "homeassistant.components.mqtt.binary_sensor",
            "homeassistant.components.mqtt.camera",
            "homeassistant.components.mqtt.climate",
            "homeassistant.components.mqtt.config_flow",
            "homeassistant.components.mqtt.const",
            "homeassistant.components.mqtt.cover",
            "homeassistant.components.mqtt.debug_info",
            "homeassistant.components.mqtt.device_automation",
            "homeassistant.components.mqtt.device_tracker",
            "homeassistant.components.mqtt.device_trigger",
            "homeassistant.components.mqtt.discovery",
            "homeassistant.components.mqtt.fan",
            "homeassistant.components.mqtt.light",
            "homeassistant.components.mqtt.light.schema",
            "homeassistant.components.mqtt.light.schema_basic",
            "homeassistant.components.mqtt.light.schema_json",
            "homeassistant.components.mqtt.light.schema_template",
            "homeassistant.components.mqtt.lock",
            "homeassistant.components.mqtt.models",
            "homeassistant.components.mqtt.sensor",
            "homeassistant.components.mqtt.subscription",
            "homeassistant.components.mqtt.switch",
            "homeassistant.components.mqtt.tag",
            "homeassistant.components.mqtt.trigger",
            "homeassistant.components.mqtt.util",
            "homeassistant.components.mqtt.vacuum",
            "homeassistant.components.mqtt.vacuum.schema",
            "homeassistant.components.mqtt.vacuum.schema_legacy",
            "homeassistant.components.mqtt.vacuum.schema_state",
            "homeassistant.components.mqtt_eventstream",
            "homeassistant.components.mqtt_json",
            "homeassistant.components.mqtt_json.device_tracker",
            "homeassistant.components.mqtt_room",
            "homeassistant.components.mqtt_room.sensor",
            "homeassistant.components.mqtt_statestream",
            "homeassistant.components.msteams",
            "homeassistant.components.msteams.notify",
            "homeassistant.components.mvglive",
            "homeassistant.components.mvglive.sensor",
            "homeassistant.components.mychevy",
            "homeassistant.components.mychevy.binary_sensor",
            "homeassistant.components.mychevy.sensor",
            "homeassistant.components.mycroft",
            "homeassistant.components.mycroft.notify",
            "homeassistant.components.myq",
            "homeassistant.components.myq.binary_sensor",
            "homeassistant.components.myq.config_flow",
            "homeassistant.components.myq.const",
            "homeassistant.components.myq.cover",
            "homeassistant.components.mysensors",
            "homeassistant.components.mysensors.binary_sensor",
            "homeassistant.components.mysensors.climate",
            "homeassistant.components.mysensors.const",
            "homeassistant.components.mysensors.cover",
            "homeassistant.components.mysensors.device",
            "homeassistant.components.mysensors.device_tracker",
            "homeassistant.components.mysensors.gateway",
            "homeassistant.components.mysensors.handler",
            "homeassistant.components.mysensors.helpers",
            "homeassistant.components.mysensors.light",
            "homeassistant.components.mysensors.notify",
            "homeassistant.components.mysensors.sensor",
            "homeassistant.components.mysensors.switch",
            "homeassistant.components.mystrom",
            "homeassistant.components.mystrom.binary_sensor",
            "homeassistant.components.mystrom.const",
            "homeassistant.components.mystrom.light",
            "homeassistant.components.mystrom.switch",
            "homeassistant.components.mythicbeastsdns",
            "homeassistant.components.n26",
            "homeassistant.components.n26.const",
            "homeassistant.components.n26.sensor",
            "homeassistant.components.n26.switch",
            "homeassistant.components.nad",
            "homeassistant.components.nad.media_player",
            "homeassistant.components.namecheapdns",
            "homeassistant.components.nanoleaf",
            "homeassistant.components.nanoleaf.light",
            "homeassistant.components.neato",
            "homeassistant.components.neato.camera",
            "homeassistant.components.neato.config_flow",
            "homeassistant.components.neato.const",
            "homeassistant.components.neato.sensor",
            "homeassistant.components.neato.switch",
            "homeassistant.components.neato.vacuum",
            "homeassistant.components.nederlandse_spoorwegen",
            "homeassistant.components.nederlandse_spoorwegen.sensor",
            "homeassistant.components.nello",
            "homeassistant.components.nello.lock",
            "homeassistant.components.ness_alarm",
            "homeassistant.components.ness_alarm.alarm_control_panel",
            "homeassistant.components.ness_alarm.binary_sensor",
            "homeassistant.components.nest",
            "homeassistant.components.nest.binary_sensor",
            "homeassistant.components.nest.camera",
            "homeassistant.components.nest.climate",
            "homeassistant.components.nest.config_flow",
            "homeassistant.components.nest.const",
            "homeassistant.components.nest.local_auth",
            "homeassistant.components.nest.sensor",
            "homeassistant.components.netatmo",
            "homeassistant.components.netatmo.api",
            "homeassistant.components.netatmo.camera",
            "homeassistant.components.netatmo.climate",
            "homeassistant.components.netatmo.config_flow",
            "homeassistant.components.netatmo.const",
            "homeassistant.components.netatmo.data_handler",
            "homeassistant.components.netatmo.helper",
            "homeassistant.components.netatmo.light",
            "homeassistant.components.netatmo.media_source",
            "homeassistant.components.netatmo.netatmo_entity_base",
            "homeassistant.components.netatmo.sensor",
            "homeassistant.components.netatmo.webhook",
            "homeassistant.components.netdata",
            "homeassistant.components.netdata.sensor",
            "homeassistant.components.netgear",
            "homeassistant.components.netgear.device_tracker",
            "homeassistant.components.netgear_lte",
            "homeassistant.components.netgear_lte.binary_sensor",
            "homeassistant.components.netgear_lte.notify",
            "homeassistant.components.netgear_lte.sensor",
            "homeassistant.components.netgear_lte.sensor_types",
            "homeassistant.components.netio",
            "homeassistant.components.netio.switch",
            "homeassistant.components.neurio_energy",
            "homeassistant.components.neurio_energy.sensor",
            "homeassistant.components.nexia",
            "homeassistant.components.nexia.binary_sensor",
            "homeassistant.components.nexia.climate",
            "homeassistant.components.nexia.config_flow",
            "homeassistant.components.nexia.const",
            "homeassistant.components.nexia.entity",
            "homeassistant.components.nexia.scene",
            "homeassistant.components.nexia.sensor",
            "homeassistant.components.nexia.util",
            "homeassistant.components.nextbus",
            "homeassistant.components.nextbus.sensor",
            "homeassistant.components.nextcloud",
            "homeassistant.components.nextcloud.binary_sensor",
            "homeassistant.components.nextcloud.sensor",
            "homeassistant.components.nfandroidtv",
            "homeassistant.components.nfandroidtv.notify",
            "homeassistant.components.nightscout",
            "homeassistant.components.nightscout.config_flow",
            "homeassistant.components.nightscout.const",
            "homeassistant.components.nightscout.sensor",
            "homeassistant.components.nightscout.utils",
            "homeassistant.components.niko_home_control",
            "homeassistant.components.niko_home_control.light",
            "homeassistant.components.nilu",
            "homeassistant.components.nilu.air_quality",
            "homeassistant.components.nissan_leaf",
            "homeassistant.components.nissan_leaf.binary_sensor",
            "homeassistant.components.nissan_leaf.sensor",
            "homeassistant.components.nissan_leaf.switch",
            "homeassistant.components.nmap_tracker",
            "homeassistant.components.nmap_tracker.device_tracker",
            "homeassistant.components.nmbs",
            "homeassistant.components.nmbs.sensor",
            "homeassistant.components.no_ip",
            "homeassistant.components.noaa_tides",
            "homeassistant.components.noaa_tides.sensor",
            "homeassistant.components.norway_air",
            "homeassistant.components.norway_air.air_quality",
            "homeassistant.components.notify",
            "homeassistant.components.notify_events",
            "homeassistant.components.notify_events.const",
            "homeassistant.components.notify_events.notify",
            "homeassistant.components.notion",
            "homeassistant.components.notion.binary_sensor",
            "homeassistant.components.notion.config_flow",
            "homeassistant.components.notion.const",
            "homeassistant.components.notion.sensor",
            "homeassistant.components.nsw_fuel_station",
            "homeassistant.components.nsw_fuel_station.sensor",
            "homeassistant.components.nsw_rural_fire_service_feed",
            "homeassistant.components.nsw_rural_fire_service_feed.geo_location",
            "homeassistant.components.nuheat",
            "homeassistant.components.nuheat.climate",
            "homeassistant.components.nuheat.config_flow",
            "homeassistant.components.nuheat.const",
            "homeassistant.components.nuimo_controller",
            "homeassistant.components.nuki",
            "homeassistant.components.nuki.lock",
            "homeassistant.components.numato",
            "homeassistant.components.numato.binary_sensor",
            "homeassistant.components.numato.sensor",
            "homeassistant.components.numato.switch",
            "homeassistant.components.nut",
            "homeassistant.components.nut.config_flow",
            "homeassistant.components.nut.const",
            "homeassistant.components.nut.sensor",
            "homeassistant.components.nws",
            "homeassistant.components.nws.config_flow",
            "homeassistant.components.nws.const",
            "homeassistant.components.nws.weather",
            "homeassistant.components.nx584",
            "homeassistant.components.nx584.alarm_control_panel",
            "homeassistant.components.nx584.binary_sensor",
            "homeassistant.components.nzbget",
            "homeassistant.components.nzbget.config_flow",
            "homeassistant.components.nzbget.const",
            "homeassistant.components.nzbget.coordinator",
            "homeassistant.components.nzbget.sensor",
            "homeassistant.components.nzbget.switch",
            "homeassistant.components.oasa_telematics",
            "homeassistant.components.oasa_telematics.sensor",
            "homeassistant.components.obihai",
            "homeassistant.components.obihai.sensor",
            "homeassistant.components.octoprint",
            "homeassistant.components.octoprint.binary_sensor",
            "homeassistant.components.octoprint.sensor",
            "homeassistant.components.oem",
            "homeassistant.components.oem.climate",
            "homeassistant.components.ohmconnect",
            "homeassistant.components.ohmconnect.sensor",
            "homeassistant.components.ombi",
            "homeassistant.components.ombi.const",
            "homeassistant.components.ombi.sensor",
            "homeassistant.components.omnilogic",
            "homeassistant.components.omnilogic.common",
            "homeassistant.components.omnilogic.config_flow",
            "homeassistant.components.omnilogic.const",
            "homeassistant.components.omnilogic.sensor",
            "homeassistant.components.onboarding",
            "homeassistant.components.onboarding.const",
            "homeassistant.components.onboarding.views",
            "homeassistant.components.onewire",
            "homeassistant.components.onewire.const",
            "homeassistant.components.onewire.sensor",
            "homeassistant.components.onkyo",
            "homeassistant.components.onkyo.media_player",
            "homeassistant.components.onvif",
            "homeassistant.components.onvif.base",
            "homeassistant.components.onvif.binary_sensor",
            "homeassistant.components.onvif.camera",
            "homeassistant.components.onvif.config_flow",
            "homeassistant.components.onvif.const",
            "homeassistant.components.onvif.device",
            "homeassistant.components.onvif.event",
            "homeassistant.components.onvif.models",
            "homeassistant.components.onvif.parsers",
            "homeassistant.components.onvif.sensor",
            "homeassistant.components.openalpr_cloud",
            "homeassistant.components.openalpr_cloud.image_processing",
            "homeassistant.components.openalpr_local",
            "homeassistant.components.openalpr_local.image_processing",
            "homeassistant.components.opencv",
            "homeassistant.components.opencv.image_processing",
            "homeassistant.components.openerz",
            "homeassistant.components.openerz.sensor",
            "homeassistant.components.openevse",
            "homeassistant.components.openevse.sensor",
            "homeassistant.components.openexchangerates",
            "homeassistant.components.openexchangerates.sensor",
            "homeassistant.components.opengarage",
            "homeassistant.components.opengarage.cover",
            "homeassistant.components.openhardwaremonitor",
            "homeassistant.components.openhardwaremonitor.sensor",
            "homeassistant.components.openhome",
            "homeassistant.components.openhome.const",
            "homeassistant.components.openhome.media_player",
            "homeassistant.components.opensensemap",
            "homeassistant.components.opensensemap.air_quality",
            "homeassistant.components.opensky",
            "homeassistant.components.opensky.sensor",
            "homeassistant.components.opentherm_gw",
            "homeassistant.components.opentherm_gw.binary_sensor",
            "homeassistant.components.opentherm_gw.climate",
            "homeassistant.components.opentherm_gw.config_flow",
            "homeassistant.components.opentherm_gw.const",
            "homeassistant.components.opentherm_gw.sensor",
            "homeassistant.components.openuv",
            "homeassistant.components.openuv.binary_sensor",
            "homeassistant.components.openuv.config_flow",
            "homeassistant.components.openuv.const",
            "homeassistant.components.openuv.sensor",
            "homeassistant.components.openweathermap",
            "homeassistant.components.openweathermap.abstract_owm_sensor",
            "homeassistant.components.openweathermap.config_flow",
            "homeassistant.components.openweathermap.const",
            "homeassistant.components.openweathermap.forecast_update_coordinator",
            "homeassistant.components.openweathermap.sensor",
            "homeassistant.components.openweathermap.weather",
            "homeassistant.components.openweathermap.weather_update_coordinator",
            "homeassistant.components.opnsense",
            "homeassistant.components.opnsense.device_tracker",
            "homeassistant.components.opple",
            "homeassistant.components.opple.light",
            "homeassistant.components.orangepi_gpio",
            "homeassistant.components.orangepi_gpio.binary_sensor",
            "homeassistant.components.orangepi_gpio.const",
            "homeassistant.components.oru",
            "homeassistant.components.oru.sensor",
            "homeassistant.components.orvibo",
            "homeassistant.components.orvibo.switch",
            "homeassistant.components.osramlightify",
            "homeassistant.components.osramlightify.light",
            "homeassistant.components.otp",
            "homeassistant.components.otp.sensor",
            "homeassistant.components.ovo_energy",
            "homeassistant.components.ovo_energy.config_flow",
            "homeassistant.components.ovo_energy.const",
            "homeassistant.components.ovo_energy.sensor",
            "homeassistant.components.owntracks",
            "homeassistant.components.owntracks.config_flow",
            "homeassistant.components.owntracks.const",
            "homeassistant.components.owntracks.device_tracker",
            "homeassistant.components.owntracks.helper",
            "homeassistant.components.owntracks.messages",
            "homeassistant.components.ozw",
            "homeassistant.components.ozw.binary_sensor",
            "homeassistant.components.ozw.climate",
            "homeassistant.components.ozw.config_flow",
            "homeassistant.components.ozw.const",
            "homeassistant.components.ozw.cover",
            "homeassistant.components.ozw.discovery",
            "homeassistant.components.ozw.entity",
            "homeassistant.components.ozw.fan",
            "homeassistant.components.ozw.light",
            "homeassistant.components.ozw.lock",
            "homeassistant.components.ozw.sensor",
            "homeassistant.components.ozw.services",
            "homeassistant.components.ozw.switch",
            "homeassistant.components.ozw.websocket_api",
            "homeassistant.components.panasonic_bluray",
            "homeassistant.components.panasonic_bluray.media_player",
            "homeassistant.components.panasonic_viera",
            "homeassistant.components.panasonic_viera.config_flow",
            "homeassistant.components.panasonic_viera.const",
            "homeassistant.components.panasonic_viera.media_player",
            "homeassistant.components.pandora",
            "homeassistant.components.pandora.media_player",
            "homeassistant.components.panel_custom",
            "homeassistant.components.panel_iframe",
            "homeassistant.components.pcal9535a",
            "homeassistant.components.pcal9535a.binary_sensor",
            "homeassistant.components.pcal9535a.switch",
            "homeassistant.components.pencom",
            "homeassistant.components.pencom.switch",
            "homeassistant.components.persistent_notification",
            "homeassistant.components.person",
            "homeassistant.components.person.group",
            "homeassistant.components.philips_js",
            "homeassistant.components.philips_js.media_player",
            "homeassistant.components.pi4ioe5v9xxxx",
            "homeassistant.components.pi4ioe5v9xxxx.binary_sensor",
            "homeassistant.components.pi4ioe5v9xxxx.switch",
            "homeassistant.components.pi_hole",
            "homeassistant.components.pi_hole.binary_sensor",
            "homeassistant.components.pi_hole.config_flow",
            "homeassistant.components.pi_hole.const",
            "homeassistant.components.pi_hole.sensor",
            "homeassistant.components.pi_hole.switch",
            "homeassistant.components.picotts",
            "homeassistant.components.picotts.tts",
            "homeassistant.components.piglow",
            "homeassistant.components.piglow.light",
            "homeassistant.components.pilight",
            "homeassistant.components.pilight.base_class",
            "homeassistant.components.pilight.binary_sensor",
            "homeassistant.components.pilight.const",
            "homeassistant.components.pilight.light",
            "homeassistant.components.pilight.sensor",
            "homeassistant.components.pilight.switch",
            "homeassistant.components.ping",
            "homeassistant.components.ping.binary_sensor",
            "homeassistant.components.ping.const",
            "homeassistant.components.ping.device_tracker",
            "homeassistant.components.pioneer",
            "homeassistant.components.pioneer.media_player",
            "homeassistant.components.pjlink",
            "homeassistant.components.pjlink.media_player",
            "homeassistant.components.plaato",
            "homeassistant.components.plaato.config_flow",
            "homeassistant.components.plaato.const",
            "homeassistant.components.plaato.sensor",
            "homeassistant.components.plant",
            "homeassistant.components.plant.group",
            "homeassistant.components.plex",
            "homeassistant.components.plex.config_flow",
            "homeassistant.components.plex.const",
            "homeassistant.components.plex.errors",
            "homeassistant.components.plex.media_browser",
            "homeassistant.components.plex.media_player",
            "homeassistant.components.plex.media_search",
            "homeassistant.components.plex.sensor",
            "homeassistant.components.plex.server",
            "homeassistant.components.plex.services",
            "homeassistant.components.plugwise",
            "homeassistant.components.plugwise.binary_sensor",
            "homeassistant.components.plugwise.climate",
            "homeassistant.components.plugwise.config_flow",
            "homeassistant.components.plugwise.const",
            "homeassistant.components.plugwise.sensor",
            "homeassistant.components.plugwise.switch",
            "homeassistant.components.plum_lightpad",
            "homeassistant.components.plum_lightpad.config_flow",
            "homeassistant.components.plum_lightpad.const",
            "homeassistant.components.plum_lightpad.light",
            "homeassistant.components.plum_lightpad.utils",
            "homeassistant.components.pocketcasts",
            "homeassistant.components.pocketcasts.sensor",
            "homeassistant.components.point",
            "homeassistant.components.point.alarm_control_panel",
            "homeassistant.components.point.binary_sensor",
            "homeassistant.components.point.config_flow",
            "homeassistant.components.point.const",
            "homeassistant.components.point.sensor",
            "homeassistant.components.poolsense",
            "homeassistant.components.poolsense.binary_sensor",
            "homeassistant.components.poolsense.config_flow",
            "homeassistant.components.poolsense.const",
            "homeassistant.components.poolsense.sensor",
            "homeassistant.components.powerwall",
            "homeassistant.components.powerwall.binary_sensor",
            "homeassistant.components.powerwall.config_flow",
            "homeassistant.components.powerwall.const",
            "homeassistant.components.powerwall.entity",
            "homeassistant.components.powerwall.sensor",
            "homeassistant.components.progettihwsw",
            "homeassistant.components.progettihwsw.binary_sensor",
            "homeassistant.components.progettihwsw.config_flow",
            "homeassistant.components.progettihwsw.const",
            "homeassistant.components.progettihwsw.switch",
            "homeassistant.components.proliphix",
            "homeassistant.components.proliphix.climate",
            "homeassistant.components.prometheus",
            "homeassistant.components.prowl",
            "homeassistant.components.prowl.notify",
            "homeassistant.components.proximity",
            "homeassistant.components.proxmoxve",
            "homeassistant.components.proxmoxve.binary_sensor",
            "homeassistant.components.proxy",
            "homeassistant.components.proxy.camera",
            "homeassistant.components.ps4",
            "homeassistant.components.ps4.config_flow",
            "homeassistant.components.ps4.const",
            "homeassistant.components.ps4.media_player",
            "homeassistant.components.ptvsd",
            "homeassistant.components.pulseaudio_loopback",
            "homeassistant.components.pulseaudio_loopback.switch",
            "homeassistant.components.push",
            "homeassistant.components.push.camera",
            "homeassistant.components.pushbullet",
            "homeassistant.components.pushbullet.notify",
            "homeassistant.components.pushbullet.sensor",
            "homeassistant.components.pushover",
            "homeassistant.components.pushover.notify",
            "homeassistant.components.pushsafer",
            "homeassistant.components.pushsafer.notify",
            "homeassistant.components.pvoutput",
            "homeassistant.components.pvoutput.sensor",
            "homeassistant.components.pvpc_hourly_pricing",
            "homeassistant.components.pvpc_hourly_pricing.config_flow",
            "homeassistant.components.pvpc_hourly_pricing.const",
            "homeassistant.components.pvpc_hourly_pricing.sensor",
            "homeassistant.components.pyload",
            "homeassistant.components.pyload.sensor",
            "homeassistant.components.python_script",
            "homeassistant.components.qbittorrent",
            "homeassistant.components.qbittorrent.sensor",
            "homeassistant.components.qld_bushfire",
            "homeassistant.components.qld_bushfire.geo_location",
            "homeassistant.components.qnap",
            "homeassistant.components.qnap.sensor",
            "homeassistant.components.qrcode",
            "homeassistant.components.qrcode.image_processing",
            "homeassistant.components.quantum_gateway",
            "homeassistant.components.quantum_gateway.device_tracker",
            "homeassistant.components.qvr_pro",
            "homeassistant.components.qvr_pro.camera",
            "homeassistant.components.qvr_pro.const",
            "homeassistant.components.qwikswitch",
            "homeassistant.components.qwikswitch.binary_sensor",
            "homeassistant.components.qwikswitch.light",
            "homeassistant.components.qwikswitch.sensor",
            "homeassistant.components.qwikswitch.switch",
            "homeassistant.components.rachio",
            "homeassistant.components.rachio.binary_sensor",
            "homeassistant.components.rachio.config_flow",
            "homeassistant.components.rachio.const",
            "homeassistant.components.rachio.device",
            "homeassistant.components.rachio.entity",
            "homeassistant.components.rachio.switch",
            "homeassistant.components.rachio.webhooks",
            "homeassistant.components.radarr",
            "homeassistant.components.radarr.sensor",
            "homeassistant.components.radiotherm",
            "homeassistant.components.radiotherm.climate",
            "homeassistant.components.rainbird",
            "homeassistant.components.rainbird.binary_sensor",
            "homeassistant.components.rainbird.sensor",
            "homeassistant.components.rainbird.switch",
            "homeassistant.components.raincloud",
            "homeassistant.components.raincloud.binary_sensor",
            "homeassistant.components.raincloud.sensor",
            "homeassistant.components.raincloud.switch",
            "homeassistant.components.rainforest_eagle",
            "homeassistant.components.rainforest_eagle.sensor",
            "homeassistant.components.rainmachine",
            "homeassistant.components.rainmachine.binary_sensor",
            "homeassistant.components.rainmachine.config_flow",
            "homeassistant.components.rainmachine.const",
            "homeassistant.components.rainmachine.sensor",
            "homeassistant.components.rainmachine.switch",
            "homeassistant.components.random",
            "homeassistant.components.random.binary_sensor",
            "homeassistant.components.random.sensor",
            "homeassistant.components.raspihats",
            "homeassistant.components.raspihats.binary_sensor",
            "homeassistant.components.raspihats.switch",
            "homeassistant.components.raspyrfm",
            "homeassistant.components.raspyrfm.switch",
            "homeassistant.components.recollect_waste",
            "homeassistant.components.recollect_waste.sensor",
            "homeassistant.components.recorder",
            "homeassistant.components.recorder.const",
            "homeassistant.components.recorder.migration",
            "homeassistant.components.recorder.models",
            "homeassistant.components.recorder.purge",
            "homeassistant.components.recorder.util",
            "homeassistant.components.recswitch",
            "homeassistant.components.recswitch.switch",
            "homeassistant.components.reddit",
            "homeassistant.components.reddit.sensor",
            "homeassistant.components.rejseplanen",
            "homeassistant.components.rejseplanen.sensor",
            "homeassistant.components.remember_the_milk",
            "homeassistant.components.remote",
            "homeassistant.components.remote.device_action",
            "homeassistant.components.remote.device_condition",
            "homeassistant.components.remote.device_trigger",
            "homeassistant.components.remote.group",
            "homeassistant.components.remote.reproduce_state",
            "homeassistant.components.remote_rpi_gpio",
            "homeassistant.components.remote_rpi_gpio.binary_sensor",
            "homeassistant.components.remote_rpi_gpio.switch",
            "homeassistant.components.repetier",
            "homeassistant.components.repetier.sensor",
            "homeassistant.components.rest",
            "homeassistant.components.rest.binary_sensor",
            "homeassistant.components.rest.notify",
            "homeassistant.components.rest.sensor",
            "homeassistant.components.rest.switch",
            "homeassistant.components.rest_command",
            "homeassistant.components.rflink",
            "homeassistant.components.rflink.binary_sensor",
            "homeassistant.components.rflink.cover",
            "homeassistant.components.rflink.light",
            "homeassistant.components.rflink.sensor",
            "homeassistant.components.rflink.switch",
            "homeassistant.components.rfxtrx",
            "homeassistant.components.rfxtrx.binary_sensor",
            "homeassistant.components.rfxtrx.config_flow",
            "homeassistant.components.rfxtrx.const",
            "homeassistant.components.rfxtrx.cover",
            "homeassistant.components.rfxtrx.light",
            "homeassistant.components.rfxtrx.sensor",
            "homeassistant.components.rfxtrx.switch",
            "homeassistant.components.ring",
            "homeassistant.components.ring.binary_sensor",
            "homeassistant.components.ring.camera",
            "homeassistant.components.ring.config_flow",
            "homeassistant.components.ring.entity",
            "homeassistant.components.ring.light",
            "homeassistant.components.ring.sensor",
            "homeassistant.components.ring.switch",
            "homeassistant.components.ripple",
            "homeassistant.components.ripple.sensor",
            "homeassistant.components.risco",
            "homeassistant.components.risco.alarm_control_panel",
            "homeassistant.components.risco.binary_sensor",
            "homeassistant.components.risco.config_flow",
            "homeassistant.components.risco.const",
            "homeassistant.components.risco.entity",
            "homeassistant.components.risco.sensor",
            "homeassistant.components.rmvtransport",
            "homeassistant.components.rmvtransport.sensor",
            "homeassistant.components.rocketchat",
            "homeassistant.components.rocketchat.notify",
            "homeassistant.components.roku",
            "homeassistant.components.roku.browse_media",
            "homeassistant.components.roku.config_flow",
            "homeassistant.components.roku.const",
            "homeassistant.components.roku.media_player",
            "homeassistant.components.roku.remote",
            "homeassistant.components.roomba",
            "homeassistant.components.roomba.binary_sensor",
            "homeassistant.components.roomba.braava",
            "homeassistant.components.roomba.config_flow",
            "homeassistant.components.roomba.const",
            "homeassistant.components.roomba.irobot_base",
            "homeassistant.components.roomba.roomba",
            "homeassistant.components.roomba.sensor",
            "homeassistant.components.roomba.vacuum",
            "homeassistant.components.roon",
            "homeassistant.components.roon.config_flow",
            "homeassistant.components.roon.const",
            "homeassistant.components.roon.media_player",
            "homeassistant.components.roon.server",
            "homeassistant.components.route53",
            "homeassistant.components.rova",
            "homeassistant.components.rova.sensor",
            "homeassistant.components.rpi_camera",
            "homeassistant.components.rpi_camera.camera",
            "homeassistant.components.rpi_camera.const",
            "homeassistant.components.rpi_gpio",
            "homeassistant.components.rpi_gpio.binary_sensor",
            "homeassistant.components.rpi_gpio.cover",
            "homeassistant.components.rpi_gpio.switch",
            "homeassistant.components.rpi_gpio_pwm",
            "homeassistant.components.rpi_gpio_pwm.light",
            "homeassistant.components.rpi_pfio",
            "homeassistant.components.rpi_pfio.binary_sensor",
            "homeassistant.components.rpi_pfio.switch",
            "homeassistant.components.rpi_power",
            "homeassistant.components.rpi_power.binary_sensor",
            "homeassistant.components.rpi_power.config_flow",
            "homeassistant.components.rpi_power.const",
            "homeassistant.components.rpi_rf",
            "homeassistant.components.rpi_rf.switch",
            "homeassistant.components.rss_feed_template",
            "homeassistant.components.rtorrent",
            "homeassistant.components.rtorrent.sensor",
            "homeassistant.components.russound_rio",
            "homeassistant.components.russound_rio.media_player",
            "homeassistant.components.russound_rnet",
            "homeassistant.components.russound_rnet.media_player",
            "homeassistant.components.sabnzbd",
            "homeassistant.components.sabnzbd.sensor",
            "homeassistant.components.safe_mode",
            "homeassistant.components.saj",
            "homeassistant.components.saj.sensor",
            "homeassistant.components.salt",
            "homeassistant.components.salt.device_tracker",
            "homeassistant.components.samsungtv",
            "homeassistant.components.samsungtv.bridge",
            "homeassistant.components.samsungtv.config_flow",
            "homeassistant.components.samsungtv.const",
            "homeassistant.components.samsungtv.media_player",
            "homeassistant.components.satel_integra",
            "homeassistant.components.satel_integra.alarm_control_panel",
            "homeassistant.components.satel_integra.binary_sensor",
            "homeassistant.components.satel_integra.switch",
            "homeassistant.components.scene",
            "homeassistant.components.schluter",
            "homeassistant.components.schluter.climate",
            "homeassistant.components.schluter.const",
            "homeassistant.components.scrape",
            "homeassistant.components.scrape.sensor",
            "homeassistant.components.script",
            "homeassistant.components.script.config",
            "homeassistant.components.script.logbook",
            "homeassistant.components.scsgate",
            "homeassistant.components.scsgate.cover",
            "homeassistant.components.scsgate.light",
            "homeassistant.components.scsgate.switch",
            "homeassistant.components.search",
            "homeassistant.components.season",
            "homeassistant.components.season.sensor",
            "homeassistant.components.sendgrid",
            "homeassistant.components.sendgrid.notify",
            "homeassistant.components.sense",
            "homeassistant.components.sense.binary_sensor",
            "homeassistant.components.sense.config_flow",
            "homeassistant.components.sense.const",
            "homeassistant.components.sense.sensor",
            "homeassistant.components.sensehat",
            "homeassistant.components.sensehat.light",
            "homeassistant.components.sensehat.sensor",
            "homeassistant.components.sensibo",
            "homeassistant.components.sensibo.climate",
            "homeassistant.components.sensibo.const",
            "homeassistant.components.sensor",
            "homeassistant.components.sensor.device_condition",
            "homeassistant.components.sensor.device_trigger",
            "homeassistant.components.sensor.group",
            "homeassistant.components.sentry",
            "homeassistant.components.sentry.config_flow",
            "homeassistant.components.sentry.const",
            "homeassistant.components.serial",
            "homeassistant.components.serial.sensor",
            "homeassistant.components.serial_pm",
            "homeassistant.components.serial_pm.sensor",
            "homeassistant.components.sesame",
            "homeassistant.components.sesame.lock",
            "homeassistant.components.seven_segments",
            "homeassistant.components.seven_segments.image_processing",
            "homeassistant.components.seventeentrack",
            "homeassistant.components.seventeentrack.sensor",
            "homeassistant.components.sharkiq",
            "homeassistant.components.sharkiq.config_flow",
            "homeassistant.components.sharkiq.const",
            "homeassistant.components.sharkiq.update_coordinator",
            "homeassistant.components.sharkiq.vacuum",
            "homeassistant.components.shell_command",
            "homeassistant.components.shelly",
            "homeassistant.components.shelly.binary_sensor",
            "homeassistant.components.shelly.config_flow",
            "homeassistant.components.shelly.const",
            "homeassistant.components.shelly.cover",
            "homeassistant.components.shelly.entity",
            "homeassistant.components.shelly.light",
            "homeassistant.components.shelly.sensor",
            "homeassistant.components.shelly.switch",
            "homeassistant.components.shiftr",
            "homeassistant.components.shodan",
            "homeassistant.components.shodan.sensor",
            "homeassistant.components.shopping_list",
            "homeassistant.components.shopping_list.config_flow",
            "homeassistant.components.shopping_list.const",
            "homeassistant.components.shopping_list.intent",
            "homeassistant.components.sht31",
            "homeassistant.components.sht31.sensor",
            "homeassistant.components.sigfox",
            "homeassistant.components.sigfox.sensor",
            "homeassistant.components.sighthound",
            "homeassistant.components.sighthound.image_processing",
            "homeassistant.components.signal_messenger",
            "homeassistant.components.signal_messenger.notify",
            "homeassistant.components.simplepush",
            "homeassistant.components.simplepush.notify",
            "homeassistant.components.simplisafe",
            "homeassistant.components.simplisafe.alarm_control_panel",
            "homeassistant.components.simplisafe.config_flow",
            "homeassistant.components.simplisafe.const",
            "homeassistant.components.simplisafe.lock",
            "homeassistant.components.simulated",
            "homeassistant.components.simulated.sensor",
            "homeassistant.components.sinch",
            "homeassistant.components.sinch.notify",
            "homeassistant.components.sisyphus",
            "homeassistant.components.sisyphus.light",
            "homeassistant.components.sisyphus.media_player",
            "homeassistant.components.sky_hub",
            "homeassistant.components.sky_hub.device_tracker",
            "homeassistant.components.skybeacon",
            "homeassistant.components.skybeacon.sensor",
            "homeassistant.components.skybell",
            "homeassistant.components.skybell.binary_sensor",
            "homeassistant.components.skybell.camera",
            "homeassistant.components.skybell.light",
            "homeassistant.components.skybell.sensor",
            "homeassistant.components.skybell.switch",
            "homeassistant.components.slack",
            "homeassistant.components.slack.notify",
            "homeassistant.components.sleepiq",
            "homeassistant.components.sleepiq.binary_sensor",
            "homeassistant.components.sleepiq.const",
            "homeassistant.components.sleepiq.sensor",
            "homeassistant.components.slide",
            "homeassistant.components.slide.const",
            "homeassistant.components.slide.cover",
            "homeassistant.components.sma",
            "homeassistant.components.sma.sensor",
            "homeassistant.components.smappee",
            "homeassistant.components.smappee.api",
            "homeassistant.components.smappee.binary_sensor",
            "homeassistant.components.smappee.config_flow",
            "homeassistant.components.smappee.const",
            "homeassistant.components.smappee.sensor",
            "homeassistant.components.smappee.switch",
            "homeassistant.components.smart_meter_texas",
            "homeassistant.components.smart_meter_texas.config_flow",
            "homeassistant.components.smart_meter_texas.const",
            "homeassistant.components.smart_meter_texas.sensor",
            "homeassistant.components.smarthab",
            "homeassistant.components.smarthab.config_flow",
            "homeassistant.components.smarthab.cover",
            "homeassistant.components.smarthab.light",
            "homeassistant.components.smartthings",
            "homeassistant.components.smartthings.binary_sensor",
            "homeassistant.components.smartthings.climate",
            "homeassistant.components.smartthings.config_flow",
            "homeassistant.components.smartthings.const",
            "homeassistant.components.smartthings.cover",
            "homeassistant.components.smartthings.fan",
            "homeassistant.components.smartthings.light",
            "homeassistant.components.smartthings.lock",
            "homeassistant.components.smartthings.scene",
            "homeassistant.components.smartthings.sensor",
            "homeassistant.components.smartthings.smartapp",
            "homeassistant.components.smartthings.switch",
            "homeassistant.components.smarty",
            "homeassistant.components.smarty.binary_sensor",
            "homeassistant.components.smarty.fan",
            "homeassistant.components.smarty.sensor",
            "homeassistant.components.smhi",
            "homeassistant.components.smhi.config_flow",
            "homeassistant.components.smhi.const",
            "homeassistant.components.smhi.weather",
            "homeassistant.components.sms",
            "homeassistant.components.sms.config_flow",
            "homeassistant.components.sms.const",
            "homeassistant.components.sms.gateway",
            "homeassistant.components.sms.notify",
            "homeassistant.components.sms.sensor",
            "homeassistant.components.smtp",
            "homeassistant.components.smtp.notify",
            "homeassistant.components.snapcast",
            "homeassistant.components.snapcast.const",
            "homeassistant.components.snapcast.media_player",
            "homeassistant.components.snips",
            "homeassistant.components.snmp",
            "homeassistant.components.snmp.const",
            "homeassistant.components.snmp.device_tracker",
            "homeassistant.components.snmp.sensor",
            "homeassistant.components.snmp.switch",
            "homeassistant.components.sochain",
            "homeassistant.components.sochain.sensor",
            "homeassistant.components.socialblade",
            "homeassistant.components.socialblade.sensor",
            "homeassistant.components.solaredge",
            "homeassistant.components.solaredge.config_flow",
            "homeassistant.components.solaredge.const",
            "homeassistant.components.solaredge.sensor",
            "homeassistant.components.solaredge_local",
            "homeassistant.components.solaredge_local.sensor",
            "homeassistant.components.solarlog",
            "homeassistant.components.solarlog.config_flow",
            "homeassistant.components.solarlog.const",
            "homeassistant.components.solarlog.sensor",
            "homeassistant.components.solax",
            "homeassistant.components.solax.sensor",
            "homeassistant.components.soma",
            "homeassistant.components.soma.config_flow",
            "homeassistant.components.soma.const",
            "homeassistant.components.soma.cover",
            "homeassistant.components.somfy",
            "homeassistant.components.somfy.api",
            "homeassistant.components.somfy.config_flow",
            "homeassistant.components.somfy.const",
            "homeassistant.components.somfy.cover",
            "homeassistant.components.somfy.switch",
            "homeassistant.components.somfy_mylink",
            "homeassistant.components.somfy_mylink.cover",
            "homeassistant.components.sonarr",
            "homeassistant.components.sonarr.config_flow",
            "homeassistant.components.sonarr.const",
            "homeassistant.components.sonarr.sensor",
            "homeassistant.components.songpal",
            "homeassistant.components.songpal.config_flow",
            "homeassistant.components.songpal.const",
            "homeassistant.components.songpal.media_player",
            "homeassistant.components.sonos",
            "homeassistant.components.sonos.config_flow",
            "homeassistant.components.sonos.const",
            "homeassistant.components.sonos.media_player",
            "homeassistant.components.sony_projector",
            "homeassistant.components.sony_projector.switch",
            "homeassistant.components.soundtouch",
            "homeassistant.components.soundtouch.const",
            "homeassistant.components.soundtouch.media_player",
            "homeassistant.components.spaceapi",
            "homeassistant.components.spc",
            "homeassistant.components.spc.alarm_control_panel",
            "homeassistant.components.spc.binary_sensor",
            "homeassistant.components.speedtestdotnet",
            "homeassistant.components.speedtestdotnet.config_flow",
            "homeassistant.components.speedtestdotnet.const",
            "homeassistant.components.speedtestdotnet.sensor",
            "homeassistant.components.spider",
            "homeassistant.components.spider.climate",
            "homeassistant.components.spider.config_flow",
            "homeassistant.components.spider.const",
            "homeassistant.components.spider.switch",
            "homeassistant.components.splunk",
            "homeassistant.components.spotcrime",
            "homeassistant.components.spotcrime.sensor",
            "homeassistant.components.spotify",
            "homeassistant.components.spotify.config_flow",
            "homeassistant.components.spotify.const",
            "homeassistant.components.spotify.media_player",
            "homeassistant.components.sql",
            "homeassistant.components.sql.sensor",
            "homeassistant.components.squeezebox",
            "homeassistant.components.squeezebox.config_flow",
            "homeassistant.components.squeezebox.const",
            "homeassistant.components.squeezebox.media_player",
            "homeassistant.components.ssdp",
            "homeassistant.components.starline",
            "homeassistant.components.starline.account",
            "homeassistant.components.starline.binary_sensor",
            "homeassistant.components.starline.config_flow",
            "homeassistant.components.starline.const",
            "homeassistant.components.starline.device_tracker",
            "homeassistant.components.starline.entity",
            "homeassistant.components.starline.lock",
            "homeassistant.components.starline.sensor",
            "homeassistant.components.starline.switch",
            "homeassistant.components.starlingbank",
            "homeassistant.components.starlingbank.sensor",
            "homeassistant.components.startca",
            "homeassistant.components.startca.sensor",
            "homeassistant.components.statistics",
            "homeassistant.components.statistics.sensor",
            "homeassistant.components.statsd",
            "homeassistant.components.steam_online",
            "homeassistant.components.steam_online.sensor",
            "homeassistant.components.stiebel_eltron",
            "homeassistant.components.stiebel_eltron.climate",
            "homeassistant.components.stookalert",
            "homeassistant.components.stookalert.binary_sensor",
            "homeassistant.components.stream",
            "homeassistant.components.stream.const",
            "homeassistant.components.stream.core",
            "homeassistant.components.stream.fmp4utils",
            "homeassistant.components.stream.hls",
            "homeassistant.components.stream.recorder",
            "homeassistant.components.stream.worker",
            "homeassistant.components.streamlabswater",
            "homeassistant.components.streamlabswater.binary_sensor",
            "homeassistant.components.streamlabswater.sensor",
            "homeassistant.components.stt",
            "homeassistant.components.stt.const",
            "homeassistant.components.suez_water",
            "homeassistant.components.suez_water.sensor",
            "homeassistant.components.sun",
            "homeassistant.components.sun.trigger",
            "homeassistant.components.supervisord",
            "homeassistant.components.supervisord.sensor",
            "homeassistant.components.supla",
            "homeassistant.components.supla.cover",
            "homeassistant.components.supla.switch",
            "homeassistant.components.surepetcare",
            "homeassistant.components.surepetcare.binary_sensor",
            "homeassistant.components.surepetcare.const",
            "homeassistant.components.surepetcare.sensor",
            "homeassistant.components.swiss_hydrological_data",
            "homeassistant.components.swiss_hydrological_data.sensor",
            "homeassistant.components.swiss_public_transport",
            "homeassistant.components.swiss_public_transport.sensor",
            "homeassistant.components.swisscom",
            "homeassistant.components.swisscom.device_tracker",
            "homeassistant.components.switch",
            "homeassistant.components.switch.device_action",
            "homeassistant.components.switch.device_condition",
            "homeassistant.components.switch.device_trigger",
            "homeassistant.components.switch.group",
            "homeassistant.components.switch.light",
            "homeassistant.components.switch.reproduce_state",
            "homeassistant.components.switchbot",
            "homeassistant.components.switchbot.switch",
            "homeassistant.components.switcher_kis",
            "homeassistant.components.switcher_kis.switch",
            "homeassistant.components.switchmate",
            "homeassistant.components.switchmate.switch",
            "homeassistant.components.syncthru",
            "homeassistant.components.syncthru.config_flow",
            "homeassistant.components.syncthru.const",
            "homeassistant.components.syncthru.sensor",
            "homeassistant.components.synology",
            "homeassistant.components.synology.camera",
            "homeassistant.components.synology_chat",
            "homeassistant.components.synology_chat.notify",
            "homeassistant.components.synology_dsm",
            "homeassistant.components.synology_dsm.binary_sensor",
            "homeassistant.components.synology_dsm.camera",
            "homeassistant.components.synology_dsm.config_flow",
            "homeassistant.components.synology_dsm.const",
            "homeassistant.components.synology_dsm.sensor",
            "homeassistant.components.synology_dsm.switch",
            "homeassistant.components.synology_srm",
            "homeassistant.components.synology_srm.device_tracker",
            "homeassistant.components.syslog",
            "homeassistant.components.syslog.notify",
            "homeassistant.components.system_health",
            "homeassistant.components.system_log",
            "homeassistant.components.systemmonitor",
            "homeassistant.components.systemmonitor.sensor",
            "homeassistant.components.tado",
            "homeassistant.components.tado.climate",
            "homeassistant.components.tado.config_flow",
            "homeassistant.components.tado.const",
            "homeassistant.components.tado.device_tracker",
            "homeassistant.components.tado.entity",
            "homeassistant.components.tado.sensor",
            "homeassistant.components.tado.water_heater",
            "homeassistant.components.tag",
            "homeassistant.components.tag.const",
            "homeassistant.components.tag.trigger",
            "homeassistant.components.tahoma",
            "homeassistant.components.tahoma.binary_sensor",
            "homeassistant.components.tahoma.cover",
            "homeassistant.components.tahoma.lock",
            "homeassistant.components.tahoma.scene",
            "homeassistant.components.tahoma.sensor",
            "homeassistant.components.tahoma.switch",
            "homeassistant.components.tank_utility",
            "homeassistant.components.tank_utility.sensor",
            "homeassistant.components.tankerkoenig",
            "homeassistant.components.tankerkoenig.const",
            "homeassistant.components.tankerkoenig.sensor",
            "homeassistant.components.tapsaff",
            "homeassistant.components.tapsaff.binary_sensor",
            "homeassistant.components.tautulli",
            "homeassistant.components.tautulli.sensor",
            "homeassistant.components.tcp",
            "homeassistant.components.tcp.binary_sensor",
            "homeassistant.components.tcp.sensor",
            "homeassistant.components.ted5000",
            "homeassistant.components.ted5000.sensor",
            "homeassistant.components.telegram",
            "homeassistant.components.telegram.notify",
            "homeassistant.components.telegram_bot",
            "homeassistant.components.telegram_bot.broadcast",
            "homeassistant.components.telegram_bot.polling",
            "homeassistant.components.telegram_bot.webhooks",
            "homeassistant.components.tellduslive",
            "homeassistant.components.tellduslive.binary_sensor",
            "homeassistant.components.tellduslive.config_flow",
            "homeassistant.components.tellduslive.const",
            "homeassistant.components.tellduslive.cover",
            "homeassistant.components.tellduslive.entry",
            "homeassistant.components.tellduslive.light",
            "homeassistant.components.tellduslive.sensor",
            "homeassistant.components.tellduslive.switch",
            "homeassistant.components.tellstick",
            "homeassistant.components.tellstick.cover",
            "homeassistant.components.tellstick.light",
            "homeassistant.components.tellstick.sensor",
            "homeassistant.components.tellstick.switch",
            "homeassistant.components.telnet",
            "homeassistant.components.telnet.switch",
            "homeassistant.components.temper",
            "homeassistant.components.temper.sensor",
            "homeassistant.components.template",
            "homeassistant.components.template.alarm_control_panel",
            "homeassistant.components.template.binary_sensor",
            "homeassistant.components.template.const",
            "homeassistant.components.template.cover",
            "homeassistant.components.template.fan",
            "homeassistant.components.template.light",
            "homeassistant.components.template.lock",
            "homeassistant.components.template.sensor",
            "homeassistant.components.template.switch",
            "homeassistant.components.template.template_entity",
            "homeassistant.components.template.trigger",
            "homeassistant.components.template.vacuum",
            "homeassistant.components.tensorflow",
            "homeassistant.components.tensorflow.image_processing",
            "homeassistant.components.tesla",
            "homeassistant.components.tesla.binary_sensor",
            "homeassistant.components.tesla.climate",
            "homeassistant.components.tesla.config_flow",
            "homeassistant.components.tesla.const",
            "homeassistant.components.tesla.device_tracker",
            "homeassistant.components.tesla.lock",
            "homeassistant.components.tesla.sensor",
            "homeassistant.components.tesla.switch",
            "homeassistant.components.tfiac",
            "homeassistant.components.tfiac.climate",
            "homeassistant.components.thermoworks_smoke",
            "homeassistant.components.thermoworks_smoke.sensor",
            "homeassistant.components.thethingsnetwork",
            "homeassistant.components.thethingsnetwork.sensor",
            "homeassistant.components.thingspeak",
            "homeassistant.components.thinkingcleaner",
            "homeassistant.components.thinkingcleaner.sensor",
            "homeassistant.components.thinkingcleaner.switch",
            "homeassistant.components.thomson",
            "homeassistant.components.thomson.device_tracker",
            "homeassistant.components.threshold",
            "homeassistant.components.threshold.binary_sensor",
            "homeassistant.components.tibber",
            "homeassistant.components.tibber.config_flow",
            "homeassistant.components.tibber.const",
            "homeassistant.components.tibber.notify",
            "homeassistant.components.tibber.sensor",
            "homeassistant.components.tikteck",
            "homeassistant.components.tikteck.light",
            "homeassistant.components.tile",
            "homeassistant.components.tile.config_flow",
            "homeassistant.components.tile.const",
            "homeassistant.components.tile.device_tracker",
            "homeassistant.components.time_date",
            "homeassistant.components.time_date.sensor",
            "homeassistant.components.timer",
            "homeassistant.components.timer.reproduce_state",
            "homeassistant.components.tmb",
            "homeassistant.components.tmb.sensor",
            "homeassistant.components.tod",
            "homeassistant.components.tod.binary_sensor",
            "homeassistant.components.todoist",
            "homeassistant.components.todoist.calendar",
            "homeassistant.components.todoist.const",
            "homeassistant.components.tof",
            "homeassistant.components.tof.sensor",
            "homeassistant.components.tomato",
            "homeassistant.components.tomato.device_tracker",
            "homeassistant.components.toon",
            "homeassistant.components.toon.binary_sensor",
            "homeassistant.components.toon.climate",
            "homeassistant.components.toon.config_flow",
            "homeassistant.components.toon.const",
            "homeassistant.components.toon.coordinator",
            "homeassistant.components.toon.helpers",
            "homeassistant.components.toon.models",
            "homeassistant.components.toon.oauth2",
            "homeassistant.components.toon.sensor",
            "homeassistant.components.toon.switch",
            "homeassistant.components.torque",
            "homeassistant.components.torque.sensor",
            "homeassistant.components.totalconnect",
            "homeassistant.components.totalconnect.alarm_control_panel",
            "homeassistant.components.totalconnect.binary_sensor",
            "homeassistant.components.totalconnect.config_flow",
            "homeassistant.components.totalconnect.const",
            "homeassistant.components.touchline",
            "homeassistant.components.touchline.climate",
            "homeassistant.components.tplink",
            "homeassistant.components.tplink.common",
            "homeassistant.components.tplink.config_flow",
            "homeassistant.components.tplink.const",
            "homeassistant.components.tplink.light",
            "homeassistant.components.tplink.switch",
            "homeassistant.components.tplink_lte",
            "homeassistant.components.tplink_lte.notify",
            "homeassistant.components.traccar",
            "homeassistant.components.traccar.config_flow",
            "homeassistant.components.traccar.const",
            "homeassistant.components.traccar.device_tracker",
            "homeassistant.components.trackr",
            "homeassistant.components.trackr.device_tracker",
            "homeassistant.components.tradfri",
            "homeassistant.components.tradfri.base_class",
            "homeassistant.components.tradfri.config_flow",
            "homeassistant.components.tradfri.const",
            "homeassistant.components.tradfri.cover",
            "homeassistant.components.tradfri.light",
            "homeassistant.components.tradfri.sensor",
            "homeassistant.components.tradfri.switch",
            "homeassistant.components.trafikverket_train",
            "homeassistant.components.trafikverket_train.sensor",
            "homeassistant.components.trafikverket_weatherstation",
            "homeassistant.components.trafikverket_weatherstation.sensor",
            "homeassistant.components.transmission",
            "homeassistant.components.transmission.config_flow",
            "homeassistant.components.transmission.const",
            "homeassistant.components.transmission.errors",
            "homeassistant.components.transmission.sensor",
            "homeassistant.components.transmission.switch",
            "homeassistant.components.transport_nsw",
            "homeassistant.components.transport_nsw.sensor",
            "homeassistant.components.travisci",
            "homeassistant.components.travisci.sensor",
            "homeassistant.components.trend",
            "homeassistant.components.trend.binary_sensor",
            "homeassistant.components.tts",
            "homeassistant.components.tuya",
            "homeassistant.components.tuya.climate",
            "homeassistant.components.tuya.config_flow",
            "homeassistant.components.tuya.const",
            "homeassistant.components.tuya.cover",
            "homeassistant.components.tuya.fan",
            "homeassistant.components.tuya.light",
            "homeassistant.components.tuya.scene",
            "homeassistant.components.tuya.switch",
            "homeassistant.components.twentemilieu",
            "homeassistant.components.twentemilieu.config_flow",
            "homeassistant.components.twentemilieu.const",
            "homeassistant.components.twentemilieu.sensor",
            "homeassistant.components.twilio",
            "homeassistant.components.twilio.config_flow",
            "homeassistant.components.twilio.const",
            "homeassistant.components.twilio_call",
            "homeassistant.components.twilio_call.notify",
            "homeassistant.components.twilio_sms",
            "homeassistant.components.twilio_sms.notify",
            "homeassistant.components.twitch",
            "homeassistant.components.twitch.sensor",
            "homeassistant.components.twitter",
            "homeassistant.components.twitter.notify",
            "homeassistant.components.ubee",
            "homeassistant.components.ubee.device_tracker",
            "homeassistant.components.ubus",
            "homeassistant.components.ubus.device_tracker",
            "homeassistant.components.ue_smart_radio",
            "homeassistant.components.ue_smart_radio.media_player",
            "homeassistant.components.uk_transport",
            "homeassistant.components.uk_transport.sensor",
            "homeassistant.components.unifi",
            "homeassistant.components.unifi.config_flow",
            "homeassistant.components.unifi.const",
            "homeassistant.components.unifi.controller",
            "homeassistant.components.unifi.device_tracker",
            "homeassistant.components.unifi.errors",
            "homeassistant.components.unifi.sensor",
            "homeassistant.components.unifi.switch",
            "homeassistant.components.unifi.unifi_client",
            "homeassistant.components.unifi.unifi_entity_base",
            "homeassistant.components.unifi_direct",
            "homeassistant.components.unifi_direct.device_tracker",
            "homeassistant.components.unifiled",
            "homeassistant.components.unifiled.light",
            "homeassistant.components.universal",
            "homeassistant.components.universal.media_player",
            "homeassistant.components.upb",
            "homeassistant.components.upb.config_flow",
            "homeassistant.components.upb.const",
            "homeassistant.components.upb.light",
            "homeassistant.components.upb.scene",
            "homeassistant.components.upc_connect",
            "homeassistant.components.upc_connect.device_tracker",
            "homeassistant.components.upcloud",
            "homeassistant.components.upcloud.binary_sensor",
            "homeassistant.components.upcloud.switch",
            "homeassistant.components.updater",
            "homeassistant.components.updater.binary_sensor",
            "homeassistant.components.upnp",
            "homeassistant.components.upnp.config_flow",
            "homeassistant.components.upnp.const",
            "homeassistant.components.upnp.device",
            "homeassistant.components.upnp.sensor",
            "homeassistant.components.uptime",
            "homeassistant.components.uptime.sensor",
            "homeassistant.components.uptimerobot",
            "homeassistant.components.uptimerobot.binary_sensor",
            "homeassistant.components.uscis",
            "homeassistant.components.uscis.sensor",
            "homeassistant.components.usgs_earthquakes_feed",
            "homeassistant.components.usgs_earthquakes_feed.geo_location",
            "homeassistant.components.utility_meter",
            "homeassistant.components.utility_meter.const",
            "homeassistant.components.utility_meter.sensor",
            "homeassistant.components.uvc",
            "homeassistant.components.uvc.camera",
            "homeassistant.components.vacuum",
            "homeassistant.components.vacuum.device_action",
            "homeassistant.components.vacuum.device_condition",
            "homeassistant.components.vacuum.device_trigger",
            "homeassistant.components.vacuum.group",
            "homeassistant.components.vacuum.reproduce_state",
            "homeassistant.components.vallox",
            "homeassistant.components.vallox.fan",
            "homeassistant.components.vallox.sensor",
            "homeassistant.components.vasttrafik",
            "homeassistant.components.vasttrafik.sensor",
            "homeassistant.components.velbus",
            "homeassistant.components.velbus.binary_sensor",
            "homeassistant.components.velbus.climate",
            "homeassistant.components.velbus.config_flow",
            "homeassistant.components.velbus.const",
            "homeassistant.components.velbus.cover",
            "homeassistant.components.velbus.light",
            "homeassistant.components.velbus.sensor",
            "homeassistant.components.velbus.switch",
            "homeassistant.components.velux",
            "homeassistant.components.velux.cover",
            "homeassistant.components.velux.scene",
            "homeassistant.components.venstar",
            "homeassistant.components.venstar.climate",
            "homeassistant.components.vera",
            "homeassistant.components.vera.binary_sensor",
            "homeassistant.components.vera.climate",
            "homeassistant.components.vera.common",
            "homeassistant.components.vera.config_flow",
            "homeassistant.components.vera.const",
            "homeassistant.components.vera.cover",
            "homeassistant.components.vera.light",
            "homeassistant.components.vera.lock",
            "homeassistant.components.vera.scene",
            "homeassistant.components.vera.sensor",
            "homeassistant.components.vera.switch",
            "homeassistant.components.verisure",
            "homeassistant.components.verisure.alarm_control_panel",
            "homeassistant.components.verisure.binary_sensor",
            "homeassistant.components.verisure.camera",
            "homeassistant.components.verisure.lock",
            "homeassistant.components.verisure.sensor",
            "homeassistant.components.verisure.switch",
            "homeassistant.components.versasense",
            "homeassistant.components.versasense.const",
            "homeassistant.components.versasense.sensor",
            "homeassistant.components.versasense.switch",
            "homeassistant.components.version",
            "homeassistant.components.version.sensor",
            "homeassistant.components.vesync",
            "homeassistant.components.vesync.common",
            "homeassistant.components.vesync.config_flow",
            "homeassistant.components.vesync.const",
            "homeassistant.components.vesync.fan",
            "homeassistant.components.vesync.switch",
            "homeassistant.components.viaggiatreno",
            "homeassistant.components.viaggiatreno.sensor",
            "homeassistant.components.vicare",
            "homeassistant.components.vicare.binary_sensor",
            "homeassistant.components.vicare.climate",
            "homeassistant.components.vicare.sensor",
            "homeassistant.components.vicare.water_heater",
            "homeassistant.components.vilfo",
            "homeassistant.components.vilfo.config_flow",
            "homeassistant.components.vilfo.const",
            "homeassistant.components.vilfo.sensor",
            "homeassistant.components.vivotek",
            "homeassistant.components.vivotek.camera",
            "homeassistant.components.vizio",
            "homeassistant.components.vizio.config_flow",
            "homeassistant.components.vizio.const",
            "homeassistant.components.vizio.media_player",
            "homeassistant.components.vlc",
            "homeassistant.components.vlc.media_player",
            "homeassistant.components.vlc_telnet",
            "homeassistant.components.vlc_telnet.media_player",
            "homeassistant.components.voicerss",
            "homeassistant.components.voicerss.tts",
            "homeassistant.components.volkszaehler",
            "homeassistant.components.volkszaehler.sensor",
            "homeassistant.components.volumio",
            "homeassistant.components.volumio.config_flow",
            "homeassistant.components.volumio.const",
            "homeassistant.components.volumio.media_player",
            "homeassistant.components.volvooncall",
            "homeassistant.components.volvooncall.binary_sensor",
            "homeassistant.components.volvooncall.device_tracker",
            "homeassistant.components.volvooncall.lock",
            "homeassistant.components.volvooncall.sensor",
            "homeassistant.components.volvooncall.switch",
            "homeassistant.components.vultr",
            "homeassistant.components.vultr.binary_sensor",
            "homeassistant.components.vultr.sensor",
            "homeassistant.components.vultr.switch",
            "homeassistant.components.w800rf32",
            "homeassistant.components.w800rf32.binary_sensor",
            "homeassistant.components.wake_on_lan",
            "homeassistant.components.wake_on_lan.switch",
            "homeassistant.components.waqi",
            "homeassistant.components.waqi.sensor",
            "homeassistant.components.water_heater",
            "homeassistant.components.water_heater.group",
            "homeassistant.components.water_heater.reproduce_state",
            "homeassistant.components.waterfurnace",
            "homeassistant.components.waterfurnace.sensor",
            "homeassistant.components.watson_iot",
            "homeassistant.components.watson_tts",
            "homeassistant.components.watson_tts.tts",
            "homeassistant.components.waze_travel_time",
            "homeassistant.components.waze_travel_time.sensor",
            "homeassistant.components.weather",
            "homeassistant.components.weather.group",
            "homeassistant.components.webhook",
            "homeassistant.components.webhook.trigger",
            "homeassistant.components.webostv",
            "homeassistant.components.webostv.const",
            "homeassistant.components.webostv.media_player",
            "homeassistant.components.webostv.notify",
            "homeassistant.components.websocket_api",
            "homeassistant.components.websocket_api.auth",
            "homeassistant.components.websocket_api.commands",
            "homeassistant.components.websocket_api.connection",
            "homeassistant.components.websocket_api.const",
            "homeassistant.components.websocket_api.decorators",
            "homeassistant.components.websocket_api.error",
            "homeassistant.components.websocket_api.http",
            "homeassistant.components.websocket_api.messages",
            "homeassistant.components.websocket_api.permissions",
            "homeassistant.components.websocket_api.sensor",
            "homeassistant.components.wemo",
            "homeassistant.components.wemo.binary_sensor",
            "homeassistant.components.wemo.config_flow",
            "homeassistant.components.wemo.const",
            "homeassistant.components.wemo.fan",
            "homeassistant.components.wemo.light",
            "homeassistant.components.wemo.switch",
            "homeassistant.components.whois",
            "homeassistant.components.whois.sensor",
            "homeassistant.components.wiffi",
            "homeassistant.components.wiffi.binary_sensor",
            "homeassistant.components.wiffi.config_flow",
            "homeassistant.components.wiffi.const",
            "homeassistant.components.wiffi.sensor",
            "homeassistant.components.wiffi.wiffi_strings",
            "homeassistant.components.wilight",
            "homeassistant.components.wilight.config_flow",
            "homeassistant.components.wilight.const",
            "homeassistant.components.wilight.light",
            "homeassistant.components.wilight.parent_device",
            "homeassistant.components.wink",
            "homeassistant.components.wink.alarm_control_panel",
            "homeassistant.components.wink.binary_sensor",
            "homeassistant.components.wink.climate",
            "homeassistant.components.wink.cover",
            "homeassistant.components.wink.fan",
            "homeassistant.components.wink.light",
            "homeassistant.components.wink.lock",
            "homeassistant.components.wink.scene",
            "homeassistant.components.wink.sensor",
            "homeassistant.components.wink.switch",
            "homeassistant.components.wink.water_heater",
            "homeassistant.components.wirelesstag",
            "homeassistant.components.wirelesstag.binary_sensor",
            "homeassistant.components.wirelesstag.sensor",
            "homeassistant.components.wirelesstag.switch",
            "homeassistant.components.withings",
            "homeassistant.components.withings.binary_sensor",
            "homeassistant.components.withings.common",
            "homeassistant.components.withings.config_flow",
            "homeassistant.components.withings.const",
            "homeassistant.components.withings.sensor",
            "homeassistant.components.wled",
            "homeassistant.components.wled.config_flow",
            "homeassistant.components.wled.const",
            "homeassistant.components.wled.light",
            "homeassistant.components.wled.sensor",
            "homeassistant.components.wled.switch",
            "homeassistant.components.wolflink",
            "homeassistant.components.wolflink.config_flow",
            "homeassistant.components.wolflink.const",
            "homeassistant.components.wolflink.sensor",
            "homeassistant.components.workday",
            "homeassistant.components.workday.binary_sensor",
            "homeassistant.components.worldclock",
            "homeassistant.components.worldclock.sensor",
            "homeassistant.components.worldtidesinfo",
            "homeassistant.components.worldtidesinfo.sensor",
            "homeassistant.components.worxlandroid",
            "homeassistant.components.worxlandroid.sensor",
            "homeassistant.components.wsdot",
            "homeassistant.components.wsdot.sensor",
            "homeassistant.components.wunderground",
            "homeassistant.components.wunderground.sensor",
            "homeassistant.components.x10",
            "homeassistant.components.x10.light",
            "homeassistant.components.xbee",
            "homeassistant.components.xbee.binary_sensor",
            "homeassistant.components.xbee.light",
            "homeassistant.components.xbee.sensor",
            "homeassistant.components.xbee.switch",
            "homeassistant.components.xbox_live",
            "homeassistant.components.xbox_live.sensor",
            "homeassistant.components.xeoma",
            "homeassistant.components.xeoma.camera",
            "homeassistant.components.xfinity",
            "homeassistant.components.xfinity.device_tracker",
            "homeassistant.components.xiaomi",
            "homeassistant.components.xiaomi.camera",
            "homeassistant.components.xiaomi.device_tracker",
            "homeassistant.components.xiaomi_aqara",
            "homeassistant.components.xiaomi_aqara.binary_sensor",
            "homeassistant.components.xiaomi_aqara.config_flow",
            "homeassistant.components.xiaomi_aqara.const",
            "homeassistant.components.xiaomi_aqara.cover",
            "homeassistant.components.xiaomi_aqara.light",
            "homeassistant.components.xiaomi_aqara.lock",
            "homeassistant.components.xiaomi_aqara.sensor",
            "homeassistant.components.xiaomi_aqara.switch",
            "homeassistant.components.xiaomi_miio",
            "homeassistant.components.xiaomi_miio.air_quality",
            "homeassistant.components.xiaomi_miio.alarm_control_panel",
            "homeassistant.components.xiaomi_miio.config_flow",
            "homeassistant.components.xiaomi_miio.const",
            "homeassistant.components.xiaomi_miio.device_tracker",
            "homeassistant.components.xiaomi_miio.fan",
            "homeassistant.components.xiaomi_miio.gateway",
            "homeassistant.components.xiaomi_miio.light",
            "homeassistant.components.xiaomi_miio.remote",
            "homeassistant.components.xiaomi_miio.sensor",
            "homeassistant.components.xiaomi_miio.switch",
            "homeassistant.components.xiaomi_miio.vacuum",
            "homeassistant.components.xiaomi_tv",
            "homeassistant.components.xiaomi_tv.media_player",
            "homeassistant.components.xmpp",
            "homeassistant.components.xmpp.notify",
            "homeassistant.components.xs1",
            "homeassistant.components.xs1.climate",
            "homeassistant.components.xs1.sensor",
            "homeassistant.components.xs1.switch",
            "homeassistant.components.yale_smart_alarm",
            "homeassistant.components.yale_smart_alarm.alarm_control_panel",
            "homeassistant.components.yamaha",
            "homeassistant.components.yamaha.const",
            "homeassistant.components.yamaha.media_player",
            "homeassistant.components.yamaha_musiccast",
            "homeassistant.components.yamaha_musiccast.media_player",
            "homeassistant.components.yandex_transport",
            "homeassistant.components.yandex_transport.sensor",
            "homeassistant.components.yandextts",
            "homeassistant.components.yandextts.tts",
            "homeassistant.components.yeelight",
            "homeassistant.components.yeelight.binary_sensor",
            "homeassistant.components.yeelight.config_flow",
            "homeassistant.components.yeelight.light",
            "homeassistant.components.yeelightsunflower",
            "homeassistant.components.yeelightsunflower.light",
            "homeassistant.components.yessssms",
            "homeassistant.components.yessssms.const",
            "homeassistant.components.yessssms.notify",
            "homeassistant.components.yi",
            "homeassistant.components.yi.camera",
            "homeassistant.components.zabbix",
            "homeassistant.components.zabbix.sensor",
            "homeassistant.components.zamg",
            "homeassistant.components.zamg.sensor",
            "homeassistant.components.zamg.weather",
            "homeassistant.components.zengge",
            "homeassistant.components.zengge.light",
            "homeassistant.components.zeroconf",
            "homeassistant.components.zeroconf.usage",
            "homeassistant.components.zerproc",
            "homeassistant.components.zerproc.config_flow",
            "homeassistant.components.zerproc.const",
            "homeassistant.components.zerproc.light",
            "homeassistant.components.zestimate",
            "homeassistant.components.zestimate.sensor",
            "homeassistant.components.zha",
            "homeassistant.components.zha.api",
            "homeassistant.components.zha.binary_sensor",
            "homeassistant.components.zha.climate",
            "homeassistant.components.zha.config_flow",
            "homeassistant.components.zha.core",
            "homeassistant.components.zha.core.channels",
            "homeassistant.components.zha.core.channels.base",
            "homeassistant.components.zha.core.channels.closures",
            "homeassistant.components.zha.core.channels.general",
            "homeassistant.components.zha.core.channels.homeautomation",
            "homeassistant.components.zha.core.channels.hvac",
            "homeassistant.components.zha.core.channels.lighting",
            "homeassistant.components.zha.core.channels.lightlink",
            "homeassistant.components.zha.core.channels.manufacturerspecific",
            "homeassistant.components.zha.core.channels.measurement",
            "homeassistant.components.zha.core.channels.protocol",
            "homeassistant.components.zha.core.channels.security",
            "homeassistant.components.zha.core.channels.smartenergy",
            "homeassistant.components.zha.core.const",
            "homeassistant.components.zha.core.decorators",
            "homeassistant.components.zha.core.device",
            "homeassistant.components.zha.core.discovery",
            "homeassistant.components.zha.core.gateway",
            "homeassistant.components.zha.core.group",
            "homeassistant.components.zha.core.helpers",
            "homeassistant.components.zha.core.patches",
            "homeassistant.components.zha.core.registries",
            "homeassistant.components.zha.core.store",
            "homeassistant.components.zha.core.typing",
            "homeassistant.components.zha.cover",
            "homeassistant.components.zha.device_action",
            "homeassistant.components.zha.device_tracker",
            "homeassistant.components.zha.device_trigger",
            "homeassistant.components.zha.entity",
            "homeassistant.components.zha.fan",
            "homeassistant.components.zha.light",
            "homeassistant.components.zha.lock",
            "homeassistant.components.zha.sensor",
            "homeassistant.components.zha.switch",
            "homeassistant.components.zhong_hong",
            "homeassistant.components.zhong_hong.climate",
            "homeassistant.components.ziggo_mediabox_xl",
            "homeassistant.components.ziggo_mediabox_xl.media_player",
            "homeassistant.components.zodiac",
            "homeassistant.components.zodiac.const",
            "homeassistant.components.zodiac.sensor",
            "homeassistant.components.zone",
            "homeassistant.components.zone.config_flow",
            "homeassistant.components.zone.const",
            "homeassistant.components.zone.trigger",
            "homeassistant.components.zoneminder",
            "homeassistant.components.zoneminder.binary_sensor",
            "homeassistant.components.zoneminder.camera",
            "homeassistant.components.zoneminder.sensor",
            "homeassistant.components.zoneminder.switch",
            "homeassistant.components.zwave",
            "homeassistant.components.zwave.binary_sensor",
            "homeassistant.components.zwave.climate",
            "homeassistant.components.zwave.config_flow",
            "homeassistant.components.zwave.const",
            "homeassistant.components.zwave.cover",
            "homeassistant.components.zwave.discovery_schemas",
            "homeassistant.components.zwave.fan",
            "homeassistant.components.zwave.light",
            "homeassistant.components.zwave.lock",
            "homeassistant.components.zwave.node_entity",
            "homeassistant.components.zwave.sensor",
            "homeassistant.components.zwave.switch",
            "homeassistant.components.zwave.util",
            "homeassistant.components.zwave.websocket_api",
            "homeassistant.components.zwave.workaround",
            "homeassistant.config",
            "homeassistant.config_entries",
            "homeassistant.const",
            "homeassistant.core",
            "homeassistant.data_entry_flow",
            "homeassistant.exceptions",
            "homeassistant.helpers",
            "homeassistant.helpers.aiohttp_client",
            "homeassistant.helpers.area_registry",
            "homeassistant.helpers.check_config",
            "homeassistant.helpers.collection",
            "homeassistant.helpers.condition",
            "homeassistant.helpers.config_entry_flow",
            "homeassistant.helpers.config_entry_oauth2_flow",
            "homeassistant.helpers.config_validation",
            "homeassistant.helpers.data_entry_flow",
            "homeassistant.helpers.debounce",
            "homeassistant.helpers.deprecation",
            "homeassistant.helpers.device_registry",
            "homeassistant.helpers.discovery",
            "homeassistant.helpers.dispatcher",
            "homeassistant.helpers.entity",
            "homeassistant.helpers.entity_component",
            "homeassistant.helpers.entity_platform",
            "homeassistant.helpers.entity_registry",
            "homeassistant.helpers.entity_values",
            "homeassistant.helpers.entityfilter",
            "homeassistant.helpers.event",
            "homeassistant.helpers.frame",
            "homeassistant.helpers.icon",
            "homeassistant.helpers.instance_id",
            "homeassistant.helpers.integration_platform",
            "homeassistant.helpers.intent",
            "homeassistant.helpers.json",
            "homeassistant.helpers.location",
            "homeassistant.helpers.logging",
            "homeassistant.helpers.network",
            "homeassistant.helpers.ratelimit",
            "homeassistant.helpers.reload",
            "homeassistant.helpers.restore_state",
            "homeassistant.helpers.script",
            "homeassistant.helpers.script_variables",
            "homeassistant.helpers.service",
            "homeassistant.helpers.signal",
            "homeassistant.helpers.singleton",
            "homeassistant.helpers.state",
            "homeassistant.helpers.storage",
            "homeassistant.helpers.sun",
            "homeassistant.helpers.system_info",
            "homeassistant.helpers.temperature",
            "homeassistant.helpers.template",
            "homeassistant.helpers.translation",
            "homeassistant.helpers.trigger",
            "homeassistant.helpers.typing",
            "homeassistant.helpers.update_coordinator",
            "homeassistant.loader",
            "homeassistant.requirements",
            "homeassistant.runner",
            "homeassistant.scripts",
            "homeassistant.scripts.auth",
            "homeassistant.scripts.benchmark",
            "homeassistant.scripts.check_config",
            "homeassistant.scripts.credstash",
            "homeassistant.scripts.ensure_config",
            "homeassistant.scripts.keyring",
            "homeassistant.scripts.macos",
            "homeassistant.setup",
            "homeassistant.util",
            "homeassistant.util.aiohttp",
            "homeassistant.util.async_",
            "homeassistant.util.color",
            "homeassistant.util.decorator",
            "homeassistant.util.distance",
            "homeassistant.util.dt",
            "homeassistant.util.json",
            "homeassistant.util.location",
            "homeassistant.util.logging",
            "homeassistant.util.network",
            "homeassistant.util.package",
            "homeassistant.util.pil",
            "homeassistant.util.pressure",
            "homeassistant.util.process",
            "homeassistant.util.ruamel_yaml",
            "homeassistant.util.ssl",
            "homeassistant.util.temperature",
            "homeassistant.util.thread",
            "homeassistant.util.timeout",
            "homeassistant.util.unit_system",
            "homeassistant.util.uuid",
            "homeassistant.util.volume",
            "homeassistant.util.yaml",
            "homeassistant.util.yaml.const",
            "homeassistant.util.yaml.dumper",
            "homeassistant.util.yaml.loader",
            "homeassistant.util.yaml.objects",
            "script",
            "script.gen_requirements_all",
            "script.hassfest",
            "script.hassfest.codeowners",
            "script.hassfest.config_flow",
            "script.hassfest.coverage",
            "script.hassfest.dependencies",
            "script.hassfest.json",
            "script.hassfest.manifest",
            "script.hassfest.manifest_helper",
            "script.hassfest.model",
            "script.hassfest.requirements",
            "script.hassfest.services",
            "script.hassfest.ssdp",
            "script.hassfest.translations",
            "script.hassfest.zeroconf",
            "script.inspect_schemas",
            "script.lazytox",
            "script.scaffold",
            "script.scaffold.const",
            "script.scaffold.docs",
            "script.scaffold.error",
            "script.scaffold.gather_info",
            "script.scaffold.generate",
            "script.scaffold.model",
            "script.translations",
            "script.translations.clean",
            "script.translations.const",
            "script.translations.develop",
            "script.translations.download",
            "script.translations.error",
            "script.translations.frontend",
            "script.translations.lokalise",
            "script.translations.migrate",
            "script.translations.upload",
            "script.translations.util",
            "script.version_bump"
        ],
        "version": "0.116.2"
    },
    "homeassistant-braviarc": {
        "cmdline": [],
        "modules": [
            "braviarc",
            "braviarc.braviarc"
        ],
        "version": "0.3.8.dev0"
    },
    "homeassistant-cli": {
        "cmdline": [],
        "modules": [
            "homeassistant_cli",
            "homeassistant_cli.autocompletion",
            "homeassistant_cli.cli",
            "homeassistant_cli.config",
            "homeassistant_cli.const",
            "homeassistant_cli.exceptions",
            "homeassistant_cli.hassconst",
            "homeassistant_cli.helper",
            "homeassistant_cli.remote",
            "homeassistant_cli.yaml"
        ],
        "version": "0.9.1"
    },
    "homeassistant-magiwand": {
        "cmdline": [
            "ha_wand_service.py"
        ],
        "modules": [
            "ha_magiwand"
        ],
        "version": "0.1.1"
    },
    "homeassistant-pyozw": {
        "cmdline": [],
        "modules": [
            "openzwave",
            "openzwave.command",
            "openzwave.controller",
            "openzwave.group",
            "openzwave.network",
            "openzwave.node",
            "openzwave.object",
            "openzwave.option",
            "openzwave.scene",
            "openzwave.singleton",
            "openzwave.value",
            "pyozwman",
            "pyozwman.ozwsh_main",
            "pyozwman.ozwsh_widgets",
            "python_openzwave",
            "python_openzwave.ozw_config",
            "python_openzwave.scripts",
            "python_openzwave.scripts.pyozw_check",
            "python_openzwave.scripts.pyozw_shell"
        ],
        "version": "0.1.10"
    },
    "homeassistantfrontend": {
        "cmdline": [],
        "modules": [
            "homeassistantfrontend",
            "homeassistantfrontend.cli"
        ],
        "version": "0.1.1"
    },
    "homeassistantpyozw": {
        "cmdline": [],
        "modules": [
            "homeassistantpyozw",
            "homeassistantpyozw.cli"
        ],
        "version": "0.1.1"
    },
    "homeautomationcli": {
        "cmdline": [
            "commandline.py"
        ],
        "modules": [
            "homeautomationcli",
            "homeautomationcli.command_line",
            "homeautomationcli.commandline",
            "homeautomationcli.definations",
            "homeautomationcli.encryption",
            "homeautomationcli.utils"
        ],
        "version": "0.0.2"
    },
    "homebase": {
        "cmdline": [],
        "modules": [
            "homebase",
            "homebase.homebase",
            "test",
            "test.test_homebase"
        ],
        "version": "1.0.1"
    },
    "homebrew": {
        "cmdline": [],
        "modules": [
            "homebrew",
            "homebrew.cache",
            "homebrew.command_line",
            "homebrew.homebrew",
            "homebrew.printer"
        ],
        "version": "0.2.0"
    },
    "homebrew-npm-noob": {
        "cmdline": [],
        "modules": [
            "noob",
            "noob.package",
            "noob.util",
            "noob.version"
        ],
        "version": "0.2"
    },
    "homebrew-pypi-poet": {
        "cmdline": [],
        "modules": [
            "poet",
            "poet.lint",
            "poet.poet",
            "poet.templates",
            "poet.util",
            "poet.version"
        ],
        "version": "0.10.0"
    },
    "homecon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homeconnect": {
        "cmdline": [],
        "modules": [
            "homeconnect",
            "homeconnect.api",
            "homeconnect.sseclient"
        ],
        "version": "0.6.3"
    },
    "homectl": {
        "cmdline": [],
        "modules": [
            "homectl",
            "homectl.cli",
            "homectl.config",
            "homectl.config_ifttt",
            "homectl.homectl",
            "tests",
            "tests.sanity_test"
        ],
        "version": "0.1.1"
    },
    "homedir": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "homefiles": {
        "cmdline": [],
        "modules": [
            "homefiles",
            "homefiles.git",
            "homefiles.main",
            "homefiles.utils",
            "homefiles.version",
            "tests",
            "tests.unit",
            "tests.unit.test_utils"
        ],
        "version": "2.0.6"
    },
    "homegate": {
        "cmdline": [],
        "modules": [
            "homegate",
            "homegate.homegate"
        ],
        "version": "0.0.2"
    },
    "homegear": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.14"
    },
    "homekeeper": {
        "cmdline": [],
        "modules": [
            "homekeeper",
            "homekeeper.cli",
            "homekeeper.cli_cleanup_test",
            "homekeeper.cli_keep_test",
            "homekeeper.cli_unkeep_test",
            "homekeeper.cli_version_test",
            "homekeeper.config",
            "homekeeper.config_test",
            "homekeeper.exceptions",
            "homekeeper.homekeeper_test",
            "homekeeper.lib",
            "homekeeper.lib_test",
            "homekeeper.symlink",
            "homekeeper.symlink_cleanup_test",
            "homekeeper.symlink_create_test",
            "homekeeper.symlink_restore_test",
            "homekeeper.testing"
        ],
        "version": "5.1.0"
    },
    "homekeeper-game": {
        "cmdline": [],
        "modules": [
            "homekeeper",
            "homekeeper.levels",
            "homekeeper.sound"
        ],
        "version": "1.0.2"
    },
    "homekit": {
        "cmdline": [],
        "modules": [
            "homekit",
            "homekit.accessoryserver",
            "homekit.add_additional_pairing",
            "homekit.controller",
            "homekit.controller.additional_pairing",
            "homekit.controller.ble_impl",
            "homekit.controller.ble_impl.additional_parameter_types",
            "homekit.controller.ble_impl.device",
            "homekit.controller.ble_impl.discovery",
            "homekit.controller.ble_impl.gatt",
            "homekit.controller.ble_impl.manufacturer_data",
            "homekit.controller.ble_impl.tools",
            "homekit.controller.controller",
            "homekit.controller.ip_implementation",
            "homekit.controller.tools",
            "homekit.crypto",
            "homekit.crypto.chacha20poly1305",
            "homekit.crypto.srp",
            "homekit.debug_proxy",
            "homekit.discover",
            "homekit.discover_ble",
            "homekit.exceptions",
            "homekit.finish_add_remote_pairing",
            "homekit.get_accessories",
            "homekit.get_camera_information",
            "homekit.get_characteristic",
            "homekit.get_events",
            "homekit.http_impl",
            "homekit.http_impl.contentTypes",
            "homekit.http_impl.http_client",
            "homekit.http_impl.response",
            "homekit.http_impl.secure_http",
            "homekit.identify",
            "homekit.init_controller_storage",
            "homekit.list_pairings",
            "homekit.log_support",
            "homekit.model",
            "homekit.model.categories",
            "homekit.model.characteristics",
            "homekit.model.characteristics.abstract_characteristic",
            "homekit.model.characteristics.administrator_only_access",
            "homekit.model.characteristics.audio_feedback",
            "homekit.model.characteristics.battery_level",
            "homekit.model.characteristics.brightness",
            "homekit.model.characteristics.characteristic_formats",
            "homekit.model.characteristics.characteristic_permissions",
            "homekit.model.characteristics.characteristic_types",
            "homekit.model.characteristics.characteristic_units",
            "homekit.model.characteristics.current_heating_cooling_state",
            "homekit.model.characteristics.current_temperature",
            "homekit.model.characteristics.firmware_revision",
            "homekit.model.characteristics.hardware_revision",
            "homekit.model.characteristics.hue",
            "homekit.model.characteristics.identify",
            "homekit.model.characteristics.manufacturer",
            "homekit.model.characteristics.model",
            "homekit.model.characteristics.name",
            "homekit.model.characteristics.on",
            "homekit.model.characteristics.outlet_in_use",
            "homekit.model.characteristics.saturation",
            "homekit.model.characteristics.selected_rtp_stream_configuration",
            "homekit.model.characteristics.serialnumber",
            "homekit.model.characteristics.setup_endpoints",
            "homekit.model.characteristics.streaming_status",
            "homekit.model.characteristics.supported_audio_configuration",
            "homekit.model.characteristics.supported_rtp_configuration",
            "homekit.model.characteristics.supported_video_stream_configuration",
            "homekit.model.characteristics.target_heating_cooling_state",
            "homekit.model.characteristics.target_temperature",
            "homekit.model.characteristics.temperature_display_unit",
            "homekit.model.characteristics.volume",
            "homekit.model.feature_flags",
            "homekit.model.mixin",
            "homekit.model.services",
            "homekit.model.services.abstract_service",
            "homekit.model.services.accessoryinformation_service",
            "homekit.model.services.bhslightbulb_service",
            "homekit.model.services.fan_service",
            "homekit.model.services.lightbulb_service",
            "homekit.model.services.outlet_service",
            "homekit.model.services.service_types",
            "homekit.model.services.thermostat_service",
            "homekit.model.status_flags",
            "homekit.pair",
            "homekit.pair_ble",
            "homekit.prepare_add_remote_pairing",
            "homekit.protocol",
            "homekit.protocol.errors",
            "homekit.protocol.methods",
            "homekit.protocol.opcodes",
            "homekit.protocol.states",
            "homekit.protocol.statuscodes",
            "homekit.protocol.tlv_types",
            "homekit.put_characteristic",
            "homekit.remove_pairing",
            "homekit.tools",
            "homekit.zeroconf_impl"
        ],
        "version": "0.18.0"
    },
    "homekit-display-switch": {
        "cmdline": [],
        "modules": [
            "display_switch",
            "display_switch.display_switch",
            "display_switch.load_service"
        ],
        "version": "1.0.1"
    },
    "homekit-mqtt": {
        "cmdline": [],
        "modules": [
            "homekit_mqtt",
            "homekit_mqtt.adapters",
            "homekit_mqtt.cfg_loader",
            "homekit_mqtt.cli",
            "homekit_mqtt.mqtt_bridge",
            "homekit_mqtt.tasmota"
        ],
        "version": "0.1.10"
    },
    "homelab": {
        "cmdline": [
            "homelab"
        ],
        "modules": [
            "homelab",
            "homelab.analysis.devicelibrary",
            "homelab.analysis.ipthreatdatabase",
            "homelab.analysis.networkscanner",
            "homelab.analysis.nmap",
            "homelab.analysis.trafficanalyzer",
            "homelab.control.config",
            "homelab.control.jobscheduler",
            "homelab.control.utils",
            "homelab.static",
            "homelab.test.testwebsocket",
            "homelab.webserver",
            "homelab.webserver.webserver",
            "homelab.websocket",
            "homelab.websocket.websocketserver"
        ],
        "version": "0.1.36"
    },
    "homely": {
        "cmdline": [],
        "modules": [
            "homely",
            "homely._asyncioutils",
            "homely._cli",
            "homely._engine2",
            "homely._errors",
            "homely._test",
            "homely._test.system",
            "homely._ui",
            "homely._utils",
            "homely._vcs",
            "homely._vcs.git",
            "homely._vcs.testhandler",
            "homely.files",
            "homely.general",
            "homely.install",
            "homely.pipinstall",
            "homely.powerline",
            "homely.system",
            "homely.ui"
        ],
        "version": "0.16.0"
    },
    "homemade-steganog": {
        "cmdline": [],
        "modules": [
            "homemade_steganog",
            "homemade_steganog.example",
            "homemade_steganog.main",
            "homemade_steganog.test"
        ],
        "version": "0.3.0"
    },
    "homemate-bridge": {
        "cmdline": [],
        "modules": [
            "homemate_bridge",
            "homemate_bridge.cli",
            "homemate_bridge.seed_keyfile"
        ],
        "version": "0.1.1"
    },
    "homematicip": {
        "cmdline": [
            "hmip_cli.py",
            "hmip_generate_auth_token.py"
        ],
        "modules": [
            "homematicip",
            "homematicip.EventHook",
            "homematicip.HomeMaticIPObject",
            "homematicip._version",
            "homematicip.aio",
            "homematicip.aio.auth",
            "homematicip.aio.class_maps",
            "homematicip.aio.connection",
            "homematicip.aio.device",
            "homematicip.aio.group",
            "homematicip.aio.home",
            "homematicip.aio.securityEvent",
            "homematicip.auth",
            "homematicip.base",
            "homematicip.base.HomeMaticIPObject",
            "homematicip.base.base_connection",
            "homematicip.base.constants",
            "homematicip.base.enums",
            "homematicip.base.functionalChannels",
            "homematicip.base.helpers",
            "homematicip.class_maps",
            "homematicip.connection",
            "homematicip.device",
            "homematicip.functionalHomes",
            "homematicip.group",
            "homematicip.home",
            "homematicip.rule",
            "homematicip.securityEvent",
            "homematicip_demo",
            "homematicip_demo.fake_cloud_server",
            "homematicip_demo.helper"
        ],
        "version": "0.11.0"
    },
    "homepage": {
        "cmdline": [],
        "modules": [
            "homepage",
            "homepage.homepage",
            "homepage.install_packages"
        ],
        "version": "0.4.2"
    },
    "homepanelapi": {
        "cmdline": [],
        "modules": [
            "homepanelapi",
            "homepanelapi.api",
            "homepanelapi.cli"
        ],
        "version": "1.0.5"
    },
    "homepdu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homer": {
        "cmdline": [],
        "modules": [
            "homer",
            "homer.cli",
            "homer.config",
            "homer.devices",
            "homer.exceptions",
            "homer.netbox",
            "homer.templates",
            "homer.transports",
            "homer.transports.junos"
        ],
        "version": "0.2.5"
    },
    "homer-text": {
        "cmdline": [],
        "modules": [
            "homer",
            "homer.analyzer",
            "homer.cmdline_printer",
            "homer.constants",
            "homer.homer_cmd",
            "homer.throwaway",
            "homer.utils"
        ],
        "version": "0.4.1"
    },
    "homescan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homeslice": {
        "cmdline": [],
        "modules": [
            "homeslice",
            "homeslice.__version__",
            "homeslice.cli",
            "homeslice.commands",
            "homeslice.commands.cmd_clone",
            "homeslice.commands.cmd_config",
            "homeslice.commands.cmd_link",
            "homeslice.commands.cmd_list",
            "homeslice.commands.cmd_pull",
            "homeslice.commands.cmd_remove",
            "homeslice.commands.cmd_unlink",
            "homeslice.dircontext",
            "homeslice.environments",
            "homeslice.git",
            "homeslice.pep508checker",
            "homeslice.symlink",
            "homeslice.utils"
        ],
        "version": "0.2.0"
    },
    "hometrainer": {
        "cmdline": [],
        "modules": [
            "hometrainer",
            "hometrainer.agents",
            "hometrainer.config",
            "hometrainer.core",
            "hometrainer.distribution",
            "hometrainer.executors",
            "hometrainer.neural_network",
            "hometrainer.util"
        ],
        "version": "0.1.2"
    },
    "homevee": {
        "cmdline": [],
        "modules": [
            "Homevee",
            "Homevee.AIAgents",
            "Homevee.AIAgents.ImageClassifier",
            "Homevee.AIAgents.ImageClassifier.ARControlClassifier",
            "Homevee.AIAgents.ImageClassifier.PeopleClassifier",
            "Homevee.AIAgents.ImageClassifierRetrainer",
            "Homevee.AIAgents.ImageClassifierRetrainer.ARControlRetrainer",
            "Homevee.AIAgents.ImageClassifierRetrainer.PeopleClassifierRetrainer",
            "Homevee.API",
            "Homevee.APIModule",
            "Homevee.APIModule.APIKeyAPIModule",
            "Homevee.APIModule.AutomationAPIModule",
            "Homevee.APIModule.BlindsAPIModule",
            "Homevee.APIModule.CalendarAPIModule",
            "Homevee.APIModule.ChatAPIModule",
            "Homevee.APIModule.CustomVoiceCommandAPIModule",
            "Homevee.APIModule.DashboardAPIModule",
            "Homevee.APIModule.DeviceAPIModule",
            "Homevee.APIModule.DimmerAPIModule",
            "Homevee.APIModule.EnergyDataAPIModule",
            "Homevee.APIModule.EventAPIModule",
            "Homevee.APIModule.GPSDataAPIModule",
            "Homevee.APIModule.GatewayAPIModule",
            "Homevee.APIModule.GraphDataAPIModule",
            "Homevee.APIModule.HeatingSchemeAPIModule",
            "Homevee.APIModule.HomeBudgetAPIModule",
            "Homevee.APIModule.ImageClassifierAPIModule",
            "Homevee.APIModule.ImageClassifierAPIModule.ARControlAPIModule",
            "Homevee.APIModule.ImageClassifierAPIModule.PeopleClassifierAPIModule",
            "Homevee.APIModule.LoginAPIModule",
            "Homevee.APIModule.MQTTConnectorAPIModule",
            "Homevee.APIModule.MediaCenterAPIModule",
            "Homevee.APIModule.NutritionDataAPIModule",
            "Homevee.APIModule.PersonAPIModule",
            "Homevee.APIModule.PlaceAPIModule",
            "Homevee.APIModule.RBGLightAPIModule",
            "Homevee.APIModule.RFIDTagAPIModule",
            "Homevee.APIModule.RemoteControlAPIModule",
            "Homevee.APIModule.RoomAPIModule",
            "Homevee.APIModule.RoomDataAPIModule",
            "Homevee.APIModule.SceneAPIModule",
            "Homevee.APIModule.SensorDataAPIModule",
            "Homevee.APIModule.ShoppingListAPIModule",
            "Homevee.APIModule.SmartSpeakerAPIModule",
            "Homevee.APIModule.SystemInfoAPIModule",
            "Homevee.APIModule.TVPlanAPIModule",
            "Homevee.APIModule.ThermostatAPIModule",
            "Homevee.APIModule.UpdaterAPIModule",
            "Homevee.APIModule.UserAPIModule",
            "Homevee.APIModule.VoiceAPIModule",
            "Homevee.APIModule.WakeOnLanAPIModule",
            "Homevee.APIModule.WeatherAPIModule",
            "Homevee.CloudConnection",
            "Homevee.CommandLine",
            "Homevee.Cronjob",
            "Homevee.Cronjob.CalendarReminderCronjob",
            "Homevee.Cronjob.CheckUpdateCronjob",
            "Homevee.Cronjob.HeatingSchemeCronjob",
            "Homevee.Cronjob.OverviewNotificationCronjob",
            "Homevee.Cronjob.PhilipsHueValueLoaderCronjob",
            "Homevee.Cronjob.SaveEnergyDataCronjob",
            "Homevee.Cronjob.SaveSensorDataCronjob",
            "Homevee.Cronjob.TimedAutomationsCronjob",
            "Homevee.Cronjob.UserPingCronjob",
            "Homevee.Cronjob.VideoSurveillanceCronjob",
            "Homevee.Cronjob.WeatherUpdaterCronjob",
            "Homevee.Cronjob.ZWaveValueLoaderCronjob",
            "Homevee.DBMigration",
            "Homevee.DeviceAPI",
            "Homevee.DeviceAPI.XBOXOneAPI",
            "Homevee.DeviceAPI.get_modes",
            "Homevee.DeviceAPI.kodi_api",
            "Homevee.DeviceAPI.max_cube",
            "Homevee.DeviceAPI.max_cube_control",
            "Homevee.DeviceAPI.miyo_cube",
            "Homevee.DeviceAPI.mqtt_api",
            "Homevee.DeviceAPI.mqtt_sensor",
            "Homevee.DeviceAPI.philips_hue",
            "Homevee.DeviceAPI.rademacher_homepilot",
            "Homevee.DeviceAPI.rademacher_homepilot.blinds_control",
            "Homevee.DeviceAPI.rademacher_homepilot.set_modes",
            "Homevee.DeviceAPI.set_modes",
            "Homevee.DeviceAPI.zwave",
            "Homevee.DeviceAPI.zwave.device_control",
            "Homevee.DeviceAPI.zwave.get_devices",
            "Homevee.DeviceAPI.zwave.get_rooms",
            "Homevee.DeviceAPI.zwave.utils",
            "Homevee.Exception",
            "Homevee.Functions",
            "Homevee.Functions.Automations",
            "Homevee.Functions.ar_control",
            "Homevee.Functions.chefkoch_api",
            "Homevee.Functions.news_api",
            "Homevee.Functions.people_classifier",
            "Homevee.Functions.summary",
            "Homevee.Functions.tensorflow_functions",
            "Homevee.Functions.tensorflow_functions.ar_control_predict",
            "Homevee.Functions.tensorflow_functions.ar_control_retrain",
            "Homevee.Functions.tensorflow_functions.people_predict",
            "Homevee.Functions.tensorflow_functions.people_retrain",
            "Homevee.Helper",
            "Homevee.Helper.CompressionHandler",
            "Homevee.Helper.DeviceLoader",
            "Homevee.Helper.HTTPRequest",
            "Homevee.Helper.HomeveeAPI",
            "Homevee.Helper.HomeveeCloud",
            "Homevee.Helper.HomeveeCloud.CloudAPI",
            "Homevee.Helper.HomeveeCloud.Exception",
            "Homevee.Helper.Logger",
            "Homevee.Helper.Response",
            "Homevee.Helper.helper_functions",
            "Homevee.Helper.rsa_crypto",
            "Homevee.Helper.smarthome_functions",
            "Homevee.Helper.translations",
            "Homevee.Helper.translations.german",
            "Homevee.Item",
            "Homevee.Item.APIKey",
            "Homevee.Item.CalendarEntry",
            "Homevee.Item.ChatMessage",
            "Homevee.Item.DashboardItem",
            "Homevee.Item.Device",
            "Homevee.Item.Device.Button",
            "Homevee.Item.Device.Button.WakeOnLan",
            "Homevee.Item.Device.Button.WakeOnLan.XboxWakeOnLan",
            "Homevee.Item.Device.RGBLight",
            "Homevee.Item.Device.Sensor",
            "Homevee.Item.Device.Sensor.MQTTSensor",
            "Homevee.Item.Device.Sensor.ZWaveSensor",
            "Homevee.Item.Device.Switch",
            "Homevee.Item.Device.Switch.Funksteckdose",
            "Homevee.Item.Device.Switch.PhilipsHueLight",
            "Homevee.Item.Device.Switch.URLSwitch",
            "Homevee.Item.Device.Thermostat",
            "Homevee.Item.Device.Thermostat.MaxThermostat",
            "Homevee.Item.Device.Thermostat.RademacherThermostat",
            "Homevee.Item.Device.Thermostat.ZWaveThermostat",
            "Homevee.Item.Device.Toggle",
            "Homevee.Item.Event",
            "Homevee.Item.Gateway",
            "Homevee.Item.Gateway.MaxCube",
            "Homevee.Item.HeatingSchemeItem",
            "Homevee.Item.HomeBudgetItem",
            "Homevee.Item.Logic",
            "Homevee.Item.Logic.Action",
            "Homevee.Item.Logic.Action.ControlDeviceAction",
            "Homevee.Item.Logic.Action.PushNotificationAction",
            "Homevee.Item.Logic.Action.RunSceneAction",
            "Homevee.Item.Logic.Condition",
            "Homevee.Item.Person",
            "Homevee.Item.Room",
            "Homevee.Item.Scene",
            "Homevee.Item.ShoppingListItem",
            "Homevee.Item.Status",
            "Homevee.Item.SystemInfoItem",
            "Homevee.Item.User",
            "Homevee.Item.User.Permission",
            "Homevee.Manager",
            "Homevee.Manager.APIKeyManager",
            "Homevee.Manager.AutomationManager",
            "Homevee.Manager.CalendarManager",
            "Homevee.Manager.ChatManager",
            "Homevee.Manager.ControlManager",
            "Homevee.Manager.ControlManager.ActionManager",
            "Homevee.Manager.ControlManager.BlindsManager",
            "Homevee.Manager.ControlManager.ConditionManager",
            "Homevee.Manager.ControlManager.DimmerManager",
            "Homevee.Manager.ControlManager.EnergyDataManager",
            "Homevee.Manager.ControlManager.ImageClassifierManager",
            "Homevee.Manager.ControlManager.ImageClassifierManager.ARControlManager",
            "Homevee.Manager.ControlManager.ImageClassifierManager.PeopleClassifierManager",
            "Homevee.Manager.ControlManager.RFIDTagManager",
            "Homevee.Manager.ControlManager.RGBLightManager",
            "Homevee.Manager.ControlManager.ThermostatManager",
            "Homevee.Manager.ControlManager.ToggleManager",
            "Homevee.Manager.ControlManager.WakeOnLanManager",
            "Homevee.Manager.CustomVoiceCommandManager",
            "Homevee.Manager.DashboardManager",
            "Homevee.Manager.DeviceManager",
            "Homevee.Manager.EventManager",
            "Homevee.Manager.GPSDataManager",
            "Homevee.Manager.GatewayManager",
            "Homevee.Manager.GraphDataManager",
            "Homevee.Manager.HeatingSchemeManager",
            "Homevee.Manager.HomeBudgetManager",
            "Homevee.Manager.MQTTConnectorManager",
            "Homevee.Manager.MediaCenterManager",
            "Homevee.Manager.NutritionDataManager",
            "Homevee.Manager.PersonManager",
            "Homevee.Manager.PlaceManager",
            "Homevee.Manager.RemoteControlManager",
            "Homevee.Manager.RoomDataManager",
            "Homevee.Manager.RoomManager",
            "Homevee.Manager.SceneManager",
            "Homevee.Manager.SensorDataManager",
            "Homevee.Manager.ShoppingListManager",
            "Homevee.Manager.SmartSpeakerManager",
            "Homevee.Manager.SystemInfoManager",
            "Homevee.Manager.TVPlanManager",
            "Homevee.Manager.TriggerManager",
            "Homevee.Manager.UserManager",
            "Homevee.Manager.WeatherManager",
            "Homevee.RestAPI",
            "Homevee.RestAPI.ProcessDataAPI",
            "Homevee.SmartSpeakerConnection",
            "Homevee.TestDataGenerator",
            "Homevee.TestDataGenerator.Generator",
            "Homevee.TestDataGenerator.Generator.EventGenerator",
            "Homevee.TestDataGenerator.Generator.PersonManager",
            "Homevee.TestDataGenerator.Generator.RoomGenerator",
            "Homevee.TestDataGenerator.Generator.ServerDataGenerator",
            "Homevee.TestDataGenerator.Generator.ShoppingListGenerator",
            "Homevee.Updater",
            "Homevee.Utils",
            "Homevee.Utils.AESCipher",
            "Homevee.Utils.Colors",
            "Homevee.Utils.Constants",
            "Homevee.Utils.Database",
            "Homevee.Utils.DeviceTypes",
            "Homevee.Utils.FileUtils",
            "Homevee.Utils.NotificationManager",
            "Homevee.VoiceAssistant",
            "Homevee.VoiceAssistant.Helper",
            "Homevee.VoiceAssistant.Modules",
            "Homevee.VoiceAssistant.Modules.AddNutritionDataModule",
            "Homevee.VoiceAssistant.Modules.CalculatorModule",
            "Homevee.VoiceAssistant.Modules.CalendarModule",
            "Homevee.VoiceAssistant.Modules.CalendarModule.AddCalendarModule",
            "Homevee.VoiceAssistant.Modules.CalendarModule.GetCalendarModule",
            "Homevee.VoiceAssistant.Modules.ConversationModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule.GetSensorDataModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule.RGBControlModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule.SetModesModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule.WOLModule",
            "Homevee.VoiceAssistant.Modules.GetActivitiesModule",
            "Homevee.VoiceAssistant.Modules.GetJokesModule",
            "Homevee.VoiceAssistant.Modules.GetNutritionDiaryModule",
            "Homevee.VoiceAssistant.Modules.GetNutritionInfoModule",
            "Homevee.VoiceAssistant.Modules.GetRecipesModule",
            "Homevee.VoiceAssistant.Modules.GetSummaryModule",
            "Homevee.VoiceAssistant.Modules.GetTVScheduleModule",
            "Homevee.VoiceAssistant.Modules.GetTVTippsModule",
            "Homevee.VoiceAssistant.Modules.GetWeatherModule",
            "Homevee.VoiceAssistant.Modules.GetWeekdayModule",
            "Homevee.VoiceAssistant.Modules.MovieApiModule",
            "Homevee.VoiceAssistant.Modules.PlacesApiModule",
            "Homevee.VoiceAssistant.Modules.RouteModule",
            "Homevee.VoiceAssistant.Modules.ShoppingListModule",
            "Homevee.VoiceAssistant.Modules.ShoppingListModule.AddToShoppingListModule",
            "Homevee.VoiceAssistant.Modules.ShoppingListModule.GetShoppingListModule",
            "Homevee.VoiceAssistant.Modules.WikipediaDefinitionModule",
            "Homevee.VoiceAssistant.VoiceModules",
            "Homevee.VoiceAssistant.VoiceReplaceManager",
            "Tests"
        ],
        "version": "0.1.1.36"
    },
    "homevee-cloud": {
        "cmdline": [],
        "modules": [
            "HomeveeCloud",
            "HomeveeCloud.command_line",
            "HomeveeCloud.firebase_utils",
            "HomeveeCloud.socket_utils",
            "HomeveeCloudLegacy",
            "HomeveeCloudLegacy.firebase_utils",
            "HomeveeCloudLegacy.https_server",
            "HomeveeCloudLegacy.oauth-test",
            "HomeveeCloudLegacy.socket_utils"
        ],
        "version": "0.0.0.15"
    },
    "homevee-dev": {
        "cmdline": [],
        "modules": [
            "Homevee",
            "Homevee.AIAgents",
            "Homevee.AIAgents.ImageClassifier",
            "Homevee.AIAgents.ImageClassifier.ARControl",
            "Homevee.AIAgents.ImageClassifier.PeopleClassifier",
            "Homevee.API",
            "Homevee.CloudConnection",
            "Homevee.CloudConnection_NEW",
            "Homevee.CommandLine",
            "Homevee.Cronjob",
            "Homevee.Cronjob.CalendarReminderCronjob",
            "Homevee.Cronjob.CheckUpdateCronjob",
            "Homevee.Cronjob.HeatingSchemeCronjob",
            "Homevee.Cronjob.OverviewNotificationCronjob",
            "Homevee.Cronjob.PhilipsHueValueLoaderCronjob",
            "Homevee.Cronjob.SaveEnergyDataCronjob",
            "Homevee.Cronjob.SaveSensorDataCronjob",
            "Homevee.Cronjob.UserPingCronjob",
            "Homevee.Cronjob.WeatherUpdaterCronjob",
            "Homevee.Cronjob.ZWaveValueLoaderCronjob",
            "Homevee.Cronjob.run_automations",
            "Homevee.Cronjob.video_surveillance",
            "Homevee.DeviceAPI",
            "Homevee.DeviceAPI.blind_control",
            "Homevee.DeviceAPI.dimmer",
            "Homevee.DeviceAPI.energy_data",
            "Homevee.DeviceAPI.get_modes",
            "Homevee.DeviceAPI.heating",
            "Homevee.DeviceAPI.kodi_api",
            "Homevee.DeviceAPI.max_cube",
            "Homevee.DeviceAPI.max_cube_control",
            "Homevee.DeviceAPI.miyo_cube",
            "Homevee.DeviceAPI.mqtt_api",
            "Homevee.DeviceAPI.mqtt_sensor",
            "Homevee.DeviceAPI.philips_hue",
            "Homevee.DeviceAPI.rademacher_homepilot",
            "Homevee.DeviceAPI.rademacher_homepilot.blinds_control",
            "Homevee.DeviceAPI.rademacher_homepilot.set_modes",
            "Homevee.DeviceAPI.rfid_control",
            "Homevee.DeviceAPI.rgb_control",
            "Homevee.DeviceAPI.set_modes",
            "Homevee.DeviceAPI.toggle_devices",
            "Homevee.DeviceAPI.wake_on_lan",
            "Homevee.DeviceAPI.xbox_wol",
            "Homevee.DeviceAPI.zwave",
            "Homevee.DeviceAPI.zwave.device_control",
            "Homevee.DeviceAPI.zwave.get_devices",
            "Homevee.DeviceAPI.zwave.get_rooms",
            "Homevee.DeviceAPI.zwave.utils",
            "Homevee.Exception",
            "Homevee.Functions",
            "Homevee.Functions.Automations",
            "Homevee.Functions.ar_control",
            "Homevee.Functions.calendar",
            "Homevee.Functions.chat",
            "Homevee.Functions.chefkoch_api",
            "Homevee.Functions.condition_actions",
            "Homevee.Functions.condition_actions.actions",
            "Homevee.Functions.condition_actions.conditions",
            "Homevee.Functions.events",
            "Homevee.Functions.gps_data",
            "Homevee.Functions.graph_data",
            "Homevee.Functions.home_budget",
            "Homevee.Functions.media_center",
            "Homevee.Functions.news_api",
            "Homevee.Functions.nutrition_data",
            "Homevee.Functions.people_classifier",
            "Homevee.Functions.places_api",
            "Homevee.Functions.room_data",
            "Homevee.Functions.sensor_data",
            "Homevee.Functions.shopping_list",
            "Homevee.Functions.summary",
            "Homevee.Functions.system_info",
            "Homevee.Functions.tensorflow_functions",
            "Homevee.Functions.tensorflow_functions.ar_control_predict",
            "Homevee.Functions.tensorflow_functions.ar_control_retrain",
            "Homevee.Functions.tensorflow_functions.people_predict",
            "Homevee.Functions.tensorflow_functions.people_retrain",
            "Homevee.Functions.triggers",
            "Homevee.Functions.tv_data",
            "Homevee.Functions.weather",
            "Homevee.Helper",
            "Homevee.Helper.DeviceLoader",
            "Homevee.Helper.HTTPRequest",
            "Homevee.Helper.HomeveeCloud",
            "Homevee.Helper.HomeveeCloud.CloudAPI",
            "Homevee.Helper.HomeveeCloud.Exception",
            "Homevee.Helper.HomeveeCloud.Response",
            "Homevee.Helper.Logger",
            "Homevee.Helper.compression",
            "Homevee.Helper.helper_functions",
            "Homevee.Helper.rsa_crypto",
            "Homevee.Helper.smarthome_functions",
            "Homevee.Helper.translations",
            "Homevee.Helper.translations.german",
            "Homevee.Item",
            "Homevee.Item.CalendarEntry",
            "Homevee.Item.ChatMessage",
            "Homevee.Item.DashboardItem",
            "Homevee.Item.Device",
            "Homevee.Item.Device.Button",
            "Homevee.Item.Device.Button.WakeOnLan",
            "Homevee.Item.Device.Button.WakeOnLan.XboxWakeOnLan",
            "Homevee.Item.Device.RGBLight",
            "Homevee.Item.Device.Sensor",
            "Homevee.Item.Device.Sensor.MQTTSensor",
            "Homevee.Item.Device.Sensor.ZWaveSensor",
            "Homevee.Item.Device.Switch",
            "Homevee.Item.Device.Switch.Funksteckdose",
            "Homevee.Item.Device.Switch.PhilipsHueLight",
            "Homevee.Item.Device.Switch.URLSwitch",
            "Homevee.Item.Device.Thermostat",
            "Homevee.Item.Device.Thermostat.MaxThermostat",
            "Homevee.Item.Device.Thermostat.RademacherThermostat",
            "Homevee.Item.Device.Thermostat.ZWaveThermostat",
            "Homevee.Item.Device.Toggle",
            "Homevee.Item.Event",
            "Homevee.Item.Gateway",
            "Homevee.Item.Gateway.MaxCube",
            "Homevee.Item.HeatingSchemeItem",
            "Homevee.Item.HomeBudgetItem",
            "Homevee.Item.Logic",
            "Homevee.Item.Logic.Action",
            "Homevee.Item.Logic.Action.ControlDeviceAction",
            "Homevee.Item.Logic.Action.PushNotificationAction",
            "Homevee.Item.Logic.Action.RunSceneAction",
            "Homevee.Item.Logic.Condition",
            "Homevee.Item.Person",
            "Homevee.Item.Room",
            "Homevee.Item.Scene",
            "Homevee.Item.ShoppingListItem",
            "Homevee.Item.Status",
            "Homevee.Item.SystemInfoItem",
            "Homevee.Item.User",
            "Homevee.Item.User.Permission",
            "Homevee.Manager",
            "Homevee.Manager.api_key",
            "Homevee.Manager.automation",
            "Homevee.Manager.custom_voice_commands",
            "Homevee.Manager.dashboard",
            "Homevee.Manager.device",
            "Homevee.Manager.gateway",
            "Homevee.Manager.heating_scheme",
            "Homevee.Manager.mqtt_connector",
            "Homevee.Manager.persons",
            "Homevee.Manager.places",
            "Homevee.Manager.room",
            "Homevee.Manager.scenes",
            "Homevee.Manager.smart_speaker",
            "Homevee.Manager.user",
            "Homevee.SmartSpeakerConnection",
            "Homevee.Updater",
            "Homevee.Utils",
            "Homevee.Utils.AESCipher",
            "Homevee.Utils.Colors",
            "Homevee.Utils.Constants",
            "Homevee.Utils.Database",
            "Homevee.Utils.Database_NEW",
            "Homevee.Utils.DeviceTypes",
            "Homevee.Utils.FileUtils",
            "Homevee.Utils.NotificationManager",
            "Homevee.VoiceAssistant",
            "Homevee.VoiceAssistant.Helper",
            "Homevee.VoiceAssistant.Modules",
            "Homevee.VoiceAssistant.Modules.AddNutritionDataModule",
            "Homevee.VoiceAssistant.Modules.CalculatorModule",
            "Homevee.VoiceAssistant.Modules.CalendarModule",
            "Homevee.VoiceAssistant.Modules.CalendarModule.AddCalendarModule",
            "Homevee.VoiceAssistant.Modules.CalendarModule.GetCalendarModule",
            "Homevee.VoiceAssistant.Modules.ConversationModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule.GetSensorDataModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule.RGBControlModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule.SetModesModule",
            "Homevee.VoiceAssistant.Modules.DeviceControlModule.WOLModule",
            "Homevee.VoiceAssistant.Modules.GetActivitiesModule",
            "Homevee.VoiceAssistant.Modules.GetJokesModule",
            "Homevee.VoiceAssistant.Modules.GetNutritionDiaryModule",
            "Homevee.VoiceAssistant.Modules.GetNutritionInfoModule",
            "Homevee.VoiceAssistant.Modules.GetRecipesModule",
            "Homevee.VoiceAssistant.Modules.GetSummaryModule",
            "Homevee.VoiceAssistant.Modules.GetTVScheduleModule",
            "Homevee.VoiceAssistant.Modules.GetTVTippsModule",
            "Homevee.VoiceAssistant.Modules.GetWeatherModule",
            "Homevee.VoiceAssistant.Modules.GetWeekdayModule",
            "Homevee.VoiceAssistant.Modules.MovieApiModule",
            "Homevee.VoiceAssistant.Modules.PlacesApiModule",
            "Homevee.VoiceAssistant.Modules.RouteModule",
            "Homevee.VoiceAssistant.Modules.ShoppingListModule",
            "Homevee.VoiceAssistant.Modules.ShoppingListModule.AddToShoppingListModule",
            "Homevee.VoiceAssistant.Modules.ShoppingListModule.GetShoppingListModule",
            "Homevee.VoiceAssistant.Modules.WikipediaDefinitionModule",
            "Homevee.VoiceAssistant.VoiceModules",
            "Homevee.VoiceAssistant.VoiceReplaceManager",
            "Homevee.testing",
            "Homevee.testing.benchmark",
            "Homevee.testing.test_voice_assistant",
            "Homevee.webinterface"
        ],
        "version": "0.0.0.0"
    },
    "homevent": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homevision-netio-controller": {
        "cmdline": [],
        "modules": [
            "homevision_netio_controller",
            "homevision_netio_controller.controller"
        ],
        "version": "0.1.1"
    },
    "homevisit": {
        "cmdline": [],
        "modules": [
            "homevisit",
            "homevisit.admin",
            "homevisit.apps",
            "homevisit.forms",
            "homevisit.migrations",
            "homevisit.migrations.0001_initial",
            "homevisit.migrations.0002_feedback",
            "homevisit.migrations.0003_faq",
            "homevisit.models",
            "homevisit.test_forms",
            "homevisit.test_models",
            "homevisit.test_views",
            "homevisit.urls",
            "homevisit.views",
            "homevisit_project",
            "homevisit_project.settings",
            "homevisit_project.urls",
            "homevisit_project.wsgi"
        ],
        "version": "0.0.1"
    },
    "homewatcher": {
        "cmdline": [
            "hwconf.py",
            "hwdaemon.py",
            "hwresolve.py",
            "hwversion.py"
        ],
        "modules": [
            "homewatcher",
            "homewatcher.alarm",
            "homewatcher.configuration",
            "homewatcher.configurator",
            "homewatcher.contexthandlers",
            "homewatcher.ensurepyknx",
            "homewatcher.linknxuserfile",
            "homewatcher.plugin",
            "homewatcher.plugins",
            "homewatcher.plugins.coreplugin",
            "homewatcher.sensor",
            "homewatcher.timer"
        ],
        "version": "1.3.2"
    },
    "homework": {
        "cmdline": [],
        "modules": [
            "homework",
            "homework.cli",
            "homework.homework"
        ],
        "version": "0.0.4"
    },
    "homework-cli": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.action",
            "cli.action.Action",
            "cli.config",
            "cli.driver",
            "cli.utils"
        ],
        "version": "0.1"
    },
    "homework-pkg": {
        "cmdline": [],
        "modules": [],
        "version": "1.3"
    },
    "homework-qingcloud-cli": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.action",
            "cli.action.Action",
            "cli.config",
            "cli.driver",
            "cli.utils"
        ],
        "version": "1.1"
    },
    "homi": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.8"
    },
    "homie": {
        "cmdline": [],
        "modules": [
            "homie",
            "homie.helpers",
            "homie.main",
            "homie.mqtt",
            "homie.networkinformation",
            "homie.node",
            "homie.timer"
        ],
        "version": "0.4.1"
    },
    "homie-power-supply-node": {
        "cmdline": [],
        "modules": [
            "homie_power_supply_node"
        ],
        "version": "0.1.2"
    },
    "homie-spec": {
        "cmdline": [],
        "modules": [
            "homie_spec",
            "homie_spec.devices",
            "homie_spec.messages",
            "homie_spec.nodes",
            "homie_spec.properties"
        ],
        "version": "0.4.1"
    },
    "homie3": {
        "cmdline": [],
        "modules": [
            "homie",
            "homie.device_base",
            "homie.device_boatlift",
            "homie.device_contact",
            "homie.device_dimmer",
            "homie.device_integer",
            "homie.device_speed",
            "homie.device_state",
            "homie.device_status",
            "homie.device_switch",
            "homie.device_temperature",
            "homie.device_temperature_humidity",
            "homie.device_temperature_humidity_battery",
            "homie.device_temphum",
            "homie.device_thermostat",
            "homie.mqtt",
            "homie.mqtt.homie_mqtt_client",
            "homie.mqtt.mqtt_base",
            "homie.mqtt.paho_mqtt_client",
            "homie.node",
            "homie.node.node_base",
            "homie.node.node_contact",
            "homie.node.node_dimmer",
            "homie.node.node_integer",
            "homie.node.node_state",
            "homie.node.node_switch",
            "homie.node.property",
            "homie.node.property.property_base",
            "homie.node.property.property_battery",
            "homie.node.property.property_boolean",
            "homie.node.property.property_color",
            "homie.node.property.property_contact",
            "homie.node.property.property_datetime",
            "homie.node.property.property_dimmer",
            "homie.node.property.property_enum",
            "homie.node.property.property_float",
            "homie.node.property.property_humidity",
            "homie.node.property.property_integer",
            "homie.node.property.property_setpoint",
            "homie.node.property.property_speed",
            "homie.node.property.property_string",
            "homie.node.property.property_switch",
            "homie.node.property.property_temperature",
            "homie.support",
            "homie.support.helpers",
            "homie.support.mqtt_client",
            "homie.support.network_information",
            "homie.support.repeating_timer",
            "homie.support.test_mqtt"
        ],
        "version": "0.3.0"
    },
    "homie4": {
        "cmdline": [],
        "modules": [
            "homie",
            "homie.device_base",
            "homie.device_boolean",
            "homie.device_button",
            "homie.device_contact",
            "homie.device_dimmer",
            "homie.device_integer",
            "homie.device_speed",
            "homie.device_state",
            "homie.device_status",
            "homie.device_switch",
            "homie.device_temperature",
            "homie.device_temperature_humidity",
            "homie.device_temperature_humidity_battery",
            "homie.device_thermostat",
            "homie.mqtt",
            "homie.mqtt.gmqtt_client",
            "homie.mqtt.homie_mqtt_client",
            "homie.mqtt.mqtt_base",
            "homie.mqtt.paho_mqtt_client",
            "homie.node",
            "homie.node.node_base",
            "homie.node.node_boolean",
            "homie.node.node_contact",
            "homie.node.node_dimmer",
            "homie.node.node_integer",
            "homie.node.node_state",
            "homie.node.node_switch",
            "homie.node.property",
            "homie.node.property.property_base",
            "homie.node.property.property_battery",
            "homie.node.property.property_boolean",
            "homie.node.property.property_button",
            "homie.node.property.property_color",
            "homie.node.property.property_contact",
            "homie.node.property.property_datetime",
            "homie.node.property.property_dimmer",
            "homie.node.property.property_enum",
            "homie.node.property.property_float",
            "homie.node.property.property_humidity",
            "homie.node.property.property_integer",
            "homie.node.property.property_setpoint",
            "homie.node.property.property_speed",
            "homie.node.property.property_string",
            "homie.node.property.property_switch",
            "homie.node.property.property_temperature",
            "homie.support",
            "homie.support.helpers",
            "homie.support.network_information",
            "homie.support.repeating_timer"
        ],
        "version": "0.3.6"
    },
    "homingpigeon": {
        "cmdline": [],
        "modules": [
            "homingpigeon",
            "homingpigeon.senddata"
        ],
        "version": "1.0"
    },
    "homoeditdistance": {
        "cmdline": [],
        "modules": [
            "homoeditdistance",
            "homoeditdistance.algorithm",
            "homoeditdistance.demonstration",
            "homoeditdistance.tests",
            "homoeditdistance.tests.test"
        ],
        "version": "0.0.1"
    },
    "homog": {
        "cmdline": [],
        "modules": [
            "homog",
            "homog.homog",
            "homog.quat",
            "homog.sym",
            "homog.util"
        ],
        "version": "0.1.14"
    },
    "homogenize": {
        "cmdline": [],
        "modules": [
            "homogenize",
            "homogenize.fast",
            "homogenize.model",
            "homogenize.running",
            "homogenize.slow"
        ],
        "version": "0.0.1"
    },
    "homogenpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homoglyphs": {
        "cmdline": [],
        "modules": [
            "homoglyphs",
            "homoglyphs.core"
        ],
        "version": "2.0.3"
    },
    "homograph": {
        "cmdline": [],
        "modules": [
            "homograph",
            "homograph.homograph"
        ],
        "version": "1.2"
    },
    "homography": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6"
    },
    "homophone": {
        "cmdline": [],
        "modules": [
            "homophone",
            "homophone.artist",
            "homophone.auth",
            "homophone.formatter",
            "homophone.service"
        ],
        "version": "1.1.3"
    },
    "homophones": {
        "cmdline": [],
        "modules": [
            "homophones",
            "homophones.homophones",
            "homophones.test_homophones"
        ],
        "version": "1.0.0"
    },
    "homophony": {
        "cmdline": [],
        "modules": [
            "homophony"
        ],
        "version": "0.1.7.1"
    },
    "homotopy": {
        "cmdline": [],
        "modules": [
            "homotopy",
            "homotopy.code_generator",
            "homotopy.homotopy",
            "homotopy.parser",
            "homotopy.preprocessor",
            "homotopy.snippet_provider",
            "homotopy.syntax_tree",
            "homotopy.util"
        ],
        "version": "0.2.a1"
    },
    "homu": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "homura": {
        "cmdline": [],
        "modules": [
            "homura"
        ],
        "version": "0.1.5"
    },
    "honcho": {
        "cmdline": [],
        "modules": [
            "honcho",
            "honcho.colour",
            "honcho.command",
            "honcho.compat",
            "honcho.environ",
            "honcho.export",
            "honcho.export.base",
            "honcho.export.runit",
            "honcho.export.supervisord",
            "honcho.export.upstart",
            "honcho.manager",
            "honcho.printer",
            "honcho.process"
        ],
        "version": "1.0.1"
    },
    "honcho-export-systemd": {
        "cmdline": [],
        "modules": [
            "honcho_export_systemd",
            "honcho_export_systemd.export_systemd"
        ],
        "version": "1.0.0"
    },
    "hone": {
        "cmdline": [],
        "modules": [
            "hone",
            "hone.hone",
            "hone.test",
            "hone.test.test_csv_utils",
            "hone.test.test_hone",
            "hone.utils",
            "hone.utils.csv_utils",
            "hone.utils.json_utils",
            "hone.utils.test_utils"
        ],
        "version": "0.2.1"
    },
    "honesty": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "honestybox-measurement": {
        "cmdline": [],
        "modules": [
            "measurement",
            "measurement.measurements",
            "measurement.plugins",
            "measurement.plugins.download_speed",
            "measurement.plugins.download_speed.measurements",
            "measurement.plugins.download_speed.results",
            "measurement.plugins.download_speed.results_py3",
            "measurement.plugins.download_speed.tests",
            "measurement.plugins.download_speed.tests.test_measurements",
            "measurement.plugins.ip_route.measurements",
            "measurement.plugins.ip_route.results",
            "measurement.plugins.ip_route.results_py3",
            "measurement.plugins.ip_route.tests",
            "measurement.plugins.ip_route.tests.test_measurements",
            "measurement.plugins.latency",
            "measurement.plugins.latency.measurements",
            "measurement.plugins.latency.results",
            "measurement.plugins.latency.results_py3",
            "measurement.plugins.latency.tests",
            "measurement.plugins.latency.tests.test_measurements",
            "measurement.plugins.netflix_fast",
            "measurement.plugins.netflix_fast.measurements",
            "measurement.plugins.netflix_fast.results",
            "measurement.plugins.netflix_fast.results_py3",
            "measurement.plugins.netflix_fast.tests",
            "measurement.plugins.netflix_fast.tests.test_measurements",
            "measurement.plugins.speedtestdotnet",
            "measurement.plugins.speedtestdotnet.measurements",
            "measurement.plugins.speedtestdotnet.results",
            "measurement.plugins.speedtestdotnet.results_py3",
            "measurement.plugins.speedtestdotnet.tests",
            "measurement.plugins.speedtestdotnet.tests.test_measurements",
            "measurement.plugins.youtube",
            "measurement.plugins.youtube.measurements",
            "measurement.plugins.youtube.results",
            "measurement.plugins.youtube.results_py3",
            "measurement.plugins.youtube.tests",
            "measurement.plugins.youtube.tests.test_measurements",
            "measurement.results",
            "measurement.results_py3",
            "measurement.units"
        ],
        "version": "1.1.0"
    },
    "honey": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "honey-base": {
        "cmdline": [],
        "modules": [
            "honey",
            "honey.base",
            "honey.base.cmn",
            "honey.base.cmn.__env",
            "honey.base.gui",
            "honey.base.gui.__media",
            "honey.base.gui.__plot",
            "honey.base.io",
            "honey.base.io.__cmd",
            "honey.base.io.__file",
            "honey.base.log",
            "honey.base.log.__log",
            "honey.base.math",
            "honey.base.net",
            "honey.base.net.__http",
            "honey.base.opencv",
            "honey.base.plot",
            "honey.base.secure",
            "honey.base.secure.__bcode",
            "honey.base.secure.__hash",
            "honey.base.thread",
            "honey.base.thread.__thread",
            "honey.base.thread.__timer",
            "honey.base.util",
            "honey.base.util.__arrays",
            "honey.base.util.__colls",
            "honey.base.util.__csv",
            "honey.base.util.__date",
            "honey.base.util.__email",
            "honey.base.util.__string",
            "honey.base.util.__zk"
        ],
        "version": "0.0.3"
    },
    "honeybadger": {
        "cmdline": [],
        "modules": [
            "honeybadger",
            "honeybadger.config",
            "honeybadger.connection",
            "honeybadger.contrib",
            "honeybadger.contrib.django",
            "honeybadger.contrib.flask",
            "honeybadger.core",
            "honeybadger.fake_connection",
            "honeybadger.middleware",
            "honeybadger.payload",
            "honeybadger.plugins",
            "honeybadger.utils",
            "honeybadger.version"
        ],
        "version": "0.4.0"
    },
    "honeybadger-extensions": {
        "cmdline": [],
        "modules": [
            "honeybadger_extensions",
            "honeybadger_extensions._helpers",
            "honeybadger_extensions.base",
            "honeybadger_extensions.celery",
            "honeybadger_extensions.flask"
        ],
        "version": "0.1.2"
    },
    "honeybadgerbft": {
        "cmdline": [],
        "modules": [
            "honeybadgerbft"
        ],
        "version": "0.0.0"
    },
    "honeybadgermpc": {
        "cmdline": [],
        "modules": [
            "honeybadgermpc"
        ],
        "version": "0.0.0.dev0"
    },
    "honeybee": {
        "cmdline": [],
        "modules": [
            "honeybee",
            "honeybee._version",
            "honeybee.honeybee"
        ],
        "version": "0.1.0a4"
    },
    "honeybee-core": {
        "cmdline": [],
        "modules": [
            "honeybee",
            "honeybee._base",
            "honeybee._basewithshade",
            "honeybee._lockable",
            "honeybee.altnumber",
            "honeybee.aperture",
            "honeybee.boundarycondition",
            "honeybee.checkdup",
            "honeybee.cli",
            "honeybee.cli.validate",
            "honeybee.colorobj",
            "honeybee.config",
            "honeybee.dictutil",
            "honeybee.door",
            "honeybee.extensionutil",
            "honeybee.face",
            "honeybee.facetype",
            "honeybee.logutil",
            "honeybee.model",
            "honeybee.orientation",
            "honeybee.properties",
            "honeybee.room",
            "honeybee.search",
            "honeybee.shade",
            "honeybee.typing",
            "honeybee.writer",
            "honeybee.writer.aperture",
            "honeybee.writer.door",
            "honeybee.writer.face",
            "honeybee.writer.model",
            "honeybee.writer.room",
            "honeybee.writer.shade"
        ],
        "version": "1.37.1"
    },
    "honeybee-energy": {
        "cmdline": [],
        "modules": [
            "honeybee_energy",
            "honeybee_energy._extend_honeybee",
            "honeybee_energy.altnumber",
            "honeybee_energy.boundarycondition",
            "honeybee_energy.cli",
            "honeybee_energy.cli.baseline",
            "honeybee_energy.cli.data",
            "honeybee_energy.cli.lib",
            "honeybee_energy.cli.result",
            "honeybee_energy.cli.settings",
            "honeybee_energy.cli.simulate",
            "honeybee_energy.cli.translate",
            "honeybee_energy.config",
            "honeybee_energy.construction",
            "honeybee_energy.construction._base",
            "honeybee_energy.construction.air",
            "honeybee_energy.construction.dictutil",
            "honeybee_energy.construction.opaque",
            "honeybee_energy.construction.shade",
            "honeybee_energy.construction.window",
            "honeybee_energy.construction.windowshade",
            "honeybee_energy.constructionset",
            "honeybee_energy.dictutil",
            "honeybee_energy.hvac",
            "honeybee_energy.hvac._base",
            "honeybee_energy.hvac._template",
            "honeybee_energy.hvac.allair",
            "honeybee_energy.hvac.allair._base",
            "honeybee_energy.hvac.allair.furnace",
            "honeybee_energy.hvac.allair.psz",
            "honeybee_energy.hvac.allair.ptac",
            "honeybee_energy.hvac.allair.pvav",
            "honeybee_energy.hvac.allair.vav",
            "honeybee_energy.hvac.doas",
            "honeybee_energy.hvac.doas._base",
            "honeybee_energy.hvac.doas.fcu",
            "honeybee_energy.hvac.doas.vrf",
            "honeybee_energy.hvac.doas.wshp",
            "honeybee_energy.hvac.heatcool",
            "honeybee_energy.hvac.heatcool._base",
            "honeybee_energy.hvac.heatcool.baseboard",
            "honeybee_energy.hvac.heatcool.evapcool",
            "honeybee_energy.hvac.heatcool.fcu",
            "honeybee_energy.hvac.heatcool.gasunit",
            "honeybee_energy.hvac.heatcool.residential",
            "honeybee_energy.hvac.heatcool.vrf",
            "honeybee_energy.hvac.heatcool.windowac",
            "honeybee_energy.hvac.heatcool.wshp",
            "honeybee_energy.hvac.idealair",
            "honeybee_energy.lib",
            "honeybee_energy.lib._loadconstructions",
            "honeybee_energy.lib._loadconstructionsets",
            "honeybee_energy.lib._loadmaterials",
            "honeybee_energy.lib._loadprogramtypes",
            "honeybee_energy.lib._loadschedules",
            "honeybee_energy.lib._loadtypelimits",
            "honeybee_energy.lib.constructions",
            "honeybee_energy.lib.constructionsets",
            "honeybee_energy.lib.materials",
            "honeybee_energy.lib.programtypes",
            "honeybee_energy.lib.schedules",
            "honeybee_energy.lib.scheduletypelimits",
            "honeybee_energy.load",
            "honeybee_energy.load._base",
            "honeybee_energy.load.dictutil",
            "honeybee_energy.load.equipment",
            "honeybee_energy.load.infiltration",
            "honeybee_energy.load.lighting",
            "honeybee_energy.load.people",
            "honeybee_energy.load.setpoint",
            "honeybee_energy.load.ventilation",
            "honeybee_energy.material",
            "honeybee_energy.material._base",
            "honeybee_energy.material.dictutil",
            "honeybee_energy.material.gas",
            "honeybee_energy.material.glazing",
            "honeybee_energy.material.opaque",
            "honeybee_energy.material.shade",
            "honeybee_energy.measure",
            "honeybee_energy.programtype",
            "honeybee_energy.properties",
            "honeybee_energy.properties.aperture",
            "honeybee_energy.properties.door",
            "honeybee_energy.properties.face",
            "honeybee_energy.properties.model",
            "honeybee_energy.properties.room",
            "honeybee_energy.properties.shade",
            "honeybee_energy.reader",
            "honeybee_energy.result",
            "honeybee_energy.result.colorobj",
            "honeybee_energy.result.err",
            "honeybee_energy.result.loadbalance",
            "honeybee_energy.result.match",
            "honeybee_energy.result.rdd",
            "honeybee_energy.result.sql",
            "honeybee_energy.result.zsz",
            "honeybee_energy.run",
            "honeybee_energy.schedule",
            "honeybee_energy.schedule.day",
            "honeybee_energy.schedule.dictutil",
            "honeybee_energy.schedule.fixedinterval",
            "honeybee_energy.schedule.rule",
            "honeybee_energy.schedule.ruleset",
            "honeybee_energy.schedule.typelimit",
            "honeybee_energy.simulation",
            "honeybee_energy.simulation.control",
            "honeybee_energy.simulation.daylightsaving",
            "honeybee_energy.simulation.dictutil",
            "honeybee_energy.simulation.output",
            "honeybee_energy.simulation.parameter",
            "honeybee_energy.simulation.runperiod",
            "honeybee_energy.simulation.shadowcalculation",
            "honeybee_energy.simulation.sizing",
            "honeybee_energy.ventcool",
            "honeybee_energy.ventcool._crack_data",
            "honeybee_energy.ventcool.afn",
            "honeybee_energy.ventcool.control",
            "honeybee_energy.ventcool.crack",
            "honeybee_energy.ventcool.opening",
            "honeybee_energy.ventcool.simulation",
            "honeybee_energy.writer"
        ],
        "version": "1.58.7"
    },
    "honeybee-energy-standards": {
        "cmdline": [],
        "modules": [
            "honeybee_energy_standards"
        ],
        "version": "2.0.3"
    },
    "honeybee-grasshopper-core": {
        "cmdline": [],
        "modules": [
            "honeybee_grasshopper_core",
            "honeybee_grasshopper_core.src",
            "honeybee_grasshopper_core.src.HB Add Prefix",
            "honeybee_grasshopper_core.src.HB Add Shade",
            "honeybee_grasshopper_core.src.HB Add Subface",
            "honeybee_grasshopper_core.src.HB Aperture",
            "honeybee_grasshopper_core.src.HB Apertures by Ratio",
            "honeybee_grasshopper_core.src.HB Check Versions",
            "honeybee_grasshopper_core.src.HB Color Face Attributes",
            "honeybee_grasshopper_core.src.HB Color Room Attributes",
            "honeybee_grasshopper_core.src.HB Config",
            "honeybee_grasshopper_core.src.HB Deconstruct Model",
            "honeybee_grasshopper_core.src.HB Deconstruct Object",
            "honeybee_grasshopper_core.src.HB Door",
            "honeybee_grasshopper_core.src.HB Dump Objects",
            "honeybee_grasshopper_core.src.HB Extruded Border Shades",
            "honeybee_grasshopper_core.src.HB Facade Parameters",
            "honeybee_grasshopper_core.src.HB Face",
            "honeybee_grasshopper_core.src.HB Faces by Attribute",
            "honeybee_grasshopper_core.src.HB Faces by BC",
            "honeybee_grasshopper_core.src.HB Faces by Type",
            "honeybee_grasshopper_core.src.HB Intersect Solids",
            "honeybee_grasshopper_core.src.HB Label Faces",
            "honeybee_grasshopper_core.src.HB Label Rooms",
            "honeybee_grasshopper_core.src.HB Load Objects",
            "honeybee_grasshopper_core.src.HB Louver Shades",
            "honeybee_grasshopper_core.src.HB Mirror",
            "honeybee_grasshopper_core.src.HB Model",
            "honeybee_grasshopper_core.src.HB Move",
            "honeybee_grasshopper_core.src.HB Object to String",
            "honeybee_grasshopper_core.src.HB Planarize Brep",
            "honeybee_grasshopper_core.src.HB Room",
            "honeybee_grasshopper_core.src.HB Room from Solid",
            "honeybee_grasshopper_core.src.HB Rooms by Attribute",
            "honeybee_grasshopper_core.src.HB Rooms by Floor Height",
            "honeybee_grasshopper_core.src.HB Rooms by Orientation",
            "honeybee_grasshopper_core.src.HB Rotate",
            "honeybee_grasshopper_core.src.HB Run Recipe",
            "honeybee_grasshopper_core.src.HB Scale",
            "honeybee_grasshopper_core.src.HB Set Identifier",
            "honeybee_grasshopper_core.src.HB Set Multiplier",
            "honeybee_grasshopper_core.src.HB Set Story",
            "honeybee_grasshopper_core.src.HB Shade",
            "honeybee_grasshopper_core.src.HB Skylights by Ratio",
            "honeybee_grasshopper_core.src.HB Solve Adjacency",
            "honeybee_grasshopper_core.src.HB String to Object",
            "honeybee_grasshopper_core.src.HB Visualize by Type",
            "honeybee_grasshopper_core.src.HB Vizualize All",
            "honeybee_grasshopper_core.src.HB Vizualize Normals",
            "honeybee_grasshopper_core.src.HB Vizualize Quick",
            "honeybee_grasshopper_core.src.HB Vizualize Wireframe",
            "honeybee_grasshopper_core.src.HB Vizualize by BC",
            "honeybee_grasshopper_core.user_objects"
        ],
        "version": "1.16.3"
    },
    "honeybee-grasshopper-energy": {
        "cmdline": [],
        "modules": [
            "honeybee_grasshopper_energy",
            "honeybee_grasshopper_energy.src",
            "honeybee_grasshopper_energy.src.HB Adiabatic by Type",
            "honeybee_grasshopper_energy.src.HB Airflow Newtwork",
            "honeybee_grasshopper_energy.src.HB All-Air HVAC",
            "honeybee_grasshopper_energy.src.HB Annual Loads",
            "honeybee_grasshopper_energy.src.HB Apply ConstructionSet",
            "honeybee_grasshopper_energy.src.HB Apply Load Values",
            "honeybee_grasshopper_energy.src.HB Apply Opaque Construction",
            "honeybee_grasshopper_energy.src.HB Apply ProgramType",
            "honeybee_grasshopper_energy.src.HB Apply Room Schedules",
            "honeybee_grasshopper_energy.src.HB Apply Setpoint Values",
            "honeybee_grasshopper_energy.src.HB Apply Shade Construction",
            "honeybee_grasshopper_energy.src.HB Apply Shade Schedule",
            "honeybee_grasshopper_energy.src.HB Apply Window Construction",
            "honeybee_grasshopper_energy.src.HB Balance Temperature",
            "honeybee_grasshopper_energy.src.HB Blend ProgramTypes",
            "honeybee_grasshopper_energy.src.HB Blind Material",
            "honeybee_grasshopper_energy.src.HB Color Faces",
            "honeybee_grasshopper_energy.src.HB Color Rooms",
            "honeybee_grasshopper_energy.src.HB Constant Schedule",
            "honeybee_grasshopper_energy.src.HB Construction Set by Climate",
            "honeybee_grasshopper_energy.src.HB ConstructionSet",
            "honeybee_grasshopper_energy.src.HB Custom Simulation Output",
            "honeybee_grasshopper_energy.src.HB Custom Window Gap Material",
            "honeybee_grasshopper_energy.src.HB DOAS HVAC",
            "honeybee_grasshopper_energy.src.HB Deconstruct Construction",
            "honeybee_grasshopper_energy.src.HB Deconstruct ConstructionSet",
            "honeybee_grasshopper_energy.src.HB Deconstruct ConstructionSet Interior",
            "honeybee_grasshopper_energy.src.HB Deconstruct Equipment",
            "honeybee_grasshopper_energy.src.HB Deconstruct Infiltration",
            "honeybee_grasshopper_energy.src.HB Deconstruct Lighting",
            "honeybee_grasshopper_energy.src.HB Deconstruct Material",
            "honeybee_grasshopper_energy.src.HB Deconstruct People",
            "honeybee_grasshopper_energy.src.HB Deconstruct ProgramType",
            "honeybee_grasshopper_energy.src.HB Deconstruct Schedule",
            "honeybee_grasshopper_energy.src.HB Deconstruct Setpoint",
            "honeybee_grasshopper_energy.src.HB Deconstruct Ventilation",
            "honeybee_grasshopper_energy.src.HB Equipment",
            "honeybee_grasshopper_energy.src.HB Exterior Construction Subset",
            "honeybee_grasshopper_energy.src.HB Fixed Interval Schedule",
            "honeybee_grasshopper_energy.src.HB Gene Pool to Day Schedule",
            "honeybee_grasshopper_energy.src.HB Glass Material",
            "honeybee_grasshopper_energy.src.HB Ground Construction Subset",
            "honeybee_grasshopper_energy.src.HB HeatCool HVAC",
            "honeybee_grasshopper_energy.src.HB IdealAir",
            "honeybee_grasshopper_energy.src.HB Infiltration",
            "honeybee_grasshopper_energy.src.HB Interior Construction Subset",
            "honeybee_grasshopper_energy.src.HB Lighting",
            "honeybee_grasshopper_energy.src.HB Load Measure",
            "honeybee_grasshopper_energy.src.HB Model to OSM",
            "honeybee_grasshopper_energy.src.HB Normalize by Floor Area",
            "honeybee_grasshopper_energy.src.HB Opaque Construction",
            "honeybee_grasshopper_energy.src.HB Opaque Material",
            "honeybee_grasshopper_energy.src.HB Opaque Material No Mass",
            "honeybee_grasshopper_energy.src.HB People",
            "honeybee_grasshopper_energy.src.HB Plenum",
            "honeybee_grasshopper_energy.src.HB ProgramType",
            "honeybee_grasshopper_energy.src.HB Read Custom Result",
            "honeybee_grasshopper_energy.src.HB Read Face Result",
            "honeybee_grasshopper_energy.src.HB Read HVAC Sizing",
            "honeybee_grasshopper_energy.src.HB Read Result Dictionary",
            "honeybee_grasshopper_energy.src.HB Read Room Comfort Result",
            "honeybee_grasshopper_energy.src.HB Read Room Energy Result",
            "honeybee_grasshopper_energy.src.HB Read Tabular Data",
            "honeybee_grasshopper_energy.src.HB Read Zone Sizing",
            "honeybee_grasshopper_energy.src.HB Run IDF",
            "honeybee_grasshopper_energy.src.HB Run OSM",
            "honeybee_grasshopper_energy.src.HB Run OSW",
            "honeybee_grasshopper_energy.src.HB Schedule to Data",
            "honeybee_grasshopper_energy.src.HB Search Construction Sets",
            "honeybee_grasshopper_energy.src.HB Search Constructions",
            "honeybee_grasshopper_energy.src.HB Search Materials",
            "honeybee_grasshopper_energy.src.HB Search Programs",
            "honeybee_grasshopper_energy.src.HB Search Schedules",
            "honeybee_grasshopper_energy.src.HB Seasonal Schedule",
            "honeybee_grasshopper_energy.src.HB Setpoint",
            "honeybee_grasshopper_energy.src.HB Shade Construction",
            "honeybee_grasshopper_energy.src.HB Shade Material",
            "honeybee_grasshopper_energy.src.HB Shadow Calculation",
            "honeybee_grasshopper_energy.src.HB Simulation Control",
            "honeybee_grasshopper_energy.src.HB Simulation Output",
            "honeybee_grasshopper_energy.src.HB Simulation Parameter",
            "honeybee_grasshopper_energy.src.HB Sizing Parameter",
            "honeybee_grasshopper_energy.src.HB Subface Subset",
            "honeybee_grasshopper_energy.src.HB Thermal Load Balance",
            "honeybee_grasshopper_energy.src.HB Type Limit",
            "honeybee_grasshopper_energy.src.HB Ventilation",
            "honeybee_grasshopper_energy.src.HB Ventilation Control",
            "honeybee_grasshopper_energy.src.HB Weekly Schedule",
            "honeybee_grasshopper_energy.src.HB Window Construction",
            "honeybee_grasshopper_energy.src.HB Window Construction Shade",
            "honeybee_grasshopper_energy.src.HB Window Gap Material",
            "honeybee_grasshopper_energy.src.HB Window Material",
            "honeybee_grasshopper_energy.src.HB Window Opening",
            "honeybee_grasshopper_energy.user_objects"
        ],
        "version": "1.18.1"
    },
    "honeybee-grasshopper-radiance": {
        "cmdline": [],
        "modules": [
            "honeybee_grasshopper_radiance",
            "honeybee_grasshopper_radiance.src",
            "honeybee_grasshopper_radiance.src.HB Annual Daylight",
            "honeybee_grasshopper_radiance.src.HB Annual Daylight Metrics",
            "honeybee_grasshopper_radiance.src.HB Apply Face Modifier",
            "honeybee_grasshopper_radiance.src.HB Apply ModifierSet",
            "honeybee_grasshopper_radiance.src.HB Apply Shade Modifier",
            "honeybee_grasshopper_radiance.src.HB Apply Window Modifier",
            "honeybee_grasshopper_radiance.src.HB Assign Grids and Views",
            "honeybee_grasshopper_radiance.src.HB BSDF Modifier",
            "honeybee_grasshopper_radiance.src.HB CIE Standard Sky",
            "honeybee_grasshopper_radiance.src.HB Certain Illuminance",
            "honeybee_grasshopper_radiance.src.HB ClearSky",
            "honeybee_grasshopper_radiance.src.HB Climatebased Sky",
            "honeybee_grasshopper_radiance.src.HB Custom Sky",
            "honeybee_grasshopper_radiance.src.HB Daylight Factor",
            "honeybee_grasshopper_radiance.src.HB Deconstruct Modifier",
            "honeybee_grasshopper_radiance.src.HB Deconstruct ModifierSet",
            "honeybee_grasshopper_radiance.src.HB Deconstruct ModifierSet Interior",
            "honeybee_grasshopper_radiance.src.HB Deconstruct Wea",
            "honeybee_grasshopper_radiance.src.HB Dynamic Aperture Group",
            "honeybee_grasshopper_radiance.src.HB Dynamic Shade Group",
            "honeybee_grasshopper_radiance.src.HB Dynamic State",
            "honeybee_grasshopper_radiance.src.HB Dynamic State Geometry",
            "honeybee_grasshopper_radiance.src.HB Exterior Modifier Subset",
            "honeybee_grasshopper_radiance.src.HB Glass Modifier",
            "honeybee_grasshopper_radiance.src.HB Glass Modifier 3",
            "honeybee_grasshopper_radiance.src.HB Interior Modifier Subset",
            "honeybee_grasshopper_radiance.src.HB Metal Modifier",
            "honeybee_grasshopper_radiance.src.HB Metal Modifier 3",
            "honeybee_grasshopper_radiance.src.HB Mirror Modifier",
            "honeybee_grasshopper_radiance.src.HB Mirror Modifier 3",
            "honeybee_grasshopper_radiance.src.HB Model to Rad Folder",
            "honeybee_grasshopper_radiance.src.HB ModifierSet",
            "honeybee_grasshopper_radiance.src.HB Opaque Modifier",
            "honeybee_grasshopper_radiance.src.HB Opaque Modifier 3",
            "honeybee_grasshopper_radiance.src.HB Search Mofidier Sets",
            "honeybee_grasshopper_radiance.src.HB Search Mofidiers",
            "honeybee_grasshopper_radiance.src.HB Sensor Grid",
            "honeybee_grasshopper_radiance.src.HB Sensor Grid from Rooms",
            "honeybee_grasshopper_radiance.src.HB Shade Modifier Subset",
            "honeybee_grasshopper_radiance.src.HB Sky Matrix",
            "honeybee_grasshopper_radiance.src.HB Subface Modifier Subset",
            "honeybee_grasshopper_radiance.src.HB Sun Matrix",
            "honeybee_grasshopper_radiance.src.HB Tau Clear Sky from STAT",
            "honeybee_grasshopper_radiance.src.HB Translucent Modifier",
            "honeybee_grasshopper_radiance.src.HB Translucent Modifier 3",
            "honeybee_grasshopper_radiance.src.HB View",
            "honeybee_grasshopper_radiance.src.HB View from Viewport",
            "honeybee_grasshopper_radiance.src.HB Wea From EPW",
            "honeybee_grasshopper_radiance.src.HB Wea from Zhang-Huang",
            "honeybee_grasshopper_radiance.user_objects"
        ],
        "version": "1.4.0"
    },
    "honeybee-radiance": {
        "cmdline": [],
        "modules": [
            "honeybee_radiance",
            "honeybee_radiance._extend_honeybee",
            "honeybee_radiance.cli",
            "honeybee_radiance.cli.dc",
            "honeybee_radiance.cli.grid",
            "honeybee_radiance.cli.lib",
            "honeybee_radiance.cli.octree",
            "honeybee_radiance.cli.raytrace",
            "honeybee_radiance.cli.sky",
            "honeybee_radiance.cli.sunpath",
            "honeybee_radiance.cli.translate",
            "honeybee_radiance.cli.util",
            "honeybee_radiance.config",
            "honeybee_radiance.dictutil",
            "honeybee_radiance.dynamic",
            "honeybee_radiance.dynamic.group",
            "honeybee_radiance.dynamic.state",
            "honeybee_radiance.dynamic.stategeo",
            "honeybee_radiance.geometry",
            "honeybee_radiance.geometry.bubble",
            "honeybee_radiance.geometry.cone",
            "honeybee_radiance.geometry.cup",
            "honeybee_radiance.geometry.cylinder",
            "honeybee_radiance.geometry.geometrybase",
            "honeybee_radiance.geometry.instance",
            "honeybee_radiance.geometry.mesh",
            "honeybee_radiance.geometry.polygon",
            "honeybee_radiance.geometry.ring",
            "honeybee_radiance.geometry.source",
            "honeybee_radiance.geometry.sphere",
            "honeybee_radiance.geometry.tube",
            "honeybee_radiance.lib",
            "honeybee_radiance.lib._loadmodifiers",
            "honeybee_radiance.lib._loadmodifiersets",
            "honeybee_radiance.lib.modifiers",
            "honeybee_radiance.lib.modifiersets",
            "honeybee_radiance.lightpath",
            "honeybee_radiance.lightsource",
            "honeybee_radiance.lightsource._gendaylit",
            "honeybee_radiance.lightsource.dictutil",
            "honeybee_radiance.lightsource.ground",
            "honeybee_radiance.lightsource.sky",
            "honeybee_radiance.lightsource.sky._skybase",
            "honeybee_radiance.lightsource.sky.certainirradiance",
            "honeybee_radiance.lightsource.sky.cie",
            "honeybee_radiance.lightsource.sky.climatebased",
            "honeybee_radiance.lightsource.sky.hemisphere",
            "honeybee_radiance.lightsource.sky.skydome",
            "honeybee_radiance.lightsource.sky.skymatrix",
            "honeybee_radiance.lightsource.sky.sunmatrix",
            "honeybee_radiance.lightsource.sunpath",
            "honeybee_radiance.modifier",
            "honeybee_radiance.modifier.material",
            "honeybee_radiance.modifier.material.antimatter",
            "honeybee_radiance.modifier.material.ashik2",
            "honeybee_radiance.modifier.material.brtdfunc",
            "honeybee_radiance.modifier.material.bsdf",
            "honeybee_radiance.modifier.material.dielectric",
            "honeybee_radiance.modifier.material.glass",
            "honeybee_radiance.modifier.material.glow",
            "honeybee_radiance.modifier.material.illum",
            "honeybee_radiance.modifier.material.interface",
            "honeybee_radiance.modifier.material.light",
            "honeybee_radiance.modifier.material.materialbase",
            "honeybee_radiance.modifier.material.metal",
            "honeybee_radiance.modifier.material.metal2",
            "honeybee_radiance.modifier.material.metdata",
            "honeybee_radiance.modifier.material.metfunc",
            "honeybee_radiance.modifier.material.mirror",
            "honeybee_radiance.modifier.material.mist",
            "honeybee_radiance.modifier.material.plasdata",
            "honeybee_radiance.modifier.material.plasfunc",
            "honeybee_radiance.modifier.material.plastic",
            "honeybee_radiance.modifier.material.plastic2",
            "honeybee_radiance.modifier.material.prism1",
            "honeybee_radiance.modifier.material.prism2",
            "honeybee_radiance.modifier.material.spotlight",
            "honeybee_radiance.modifier.material.trans",
            "honeybee_radiance.modifier.material.trans2",
            "honeybee_radiance.modifier.material.transdata",
            "honeybee_radiance.modifier.material.transfunc",
            "honeybee_radiance.modifier.mixture",
            "honeybee_radiance.modifier.mixture.mixdata",
            "honeybee_radiance.modifier.mixture.mixfunc",
            "honeybee_radiance.modifier.mixture.mixpict",
            "honeybee_radiance.modifier.mixture.mixtext",
            "honeybee_radiance.modifier.mixture.mixturebase",
            "honeybee_radiance.modifier.modifierbase",
            "honeybee_radiance.modifier.pattern",
            "honeybee_radiance.modifier.pattern.brightdata",
            "honeybee_radiance.modifier.pattern.brightfunc",
            "honeybee_radiance.modifier.pattern.brighttext",
            "honeybee_radiance.modifier.pattern.colordata",
            "honeybee_radiance.modifier.pattern.colorfunc",
            "honeybee_radiance.modifier.pattern.colorpict",
            "honeybee_radiance.modifier.pattern.colortext",
            "honeybee_radiance.modifier.pattern.patternbase",
            "honeybee_radiance.modifier.texture",
            "honeybee_radiance.modifier.texture.texdata",
            "honeybee_radiance.modifier.texture.texfunc",
            "honeybee_radiance.modifier.texture.texturebase",
            "honeybee_radiance.modifierset",
            "honeybee_radiance.mutil",
            "honeybee_radiance.primitive",
            "honeybee_radiance.properties",
            "honeybee_radiance.properties._base",
            "honeybee_radiance.properties.aperture",
            "honeybee_radiance.properties.door",
            "honeybee_radiance.properties.face",
            "honeybee_radiance.properties.model",
            "honeybee_radiance.properties.room",
            "honeybee_radiance.properties.shade",
            "honeybee_radiance.putil",
            "honeybee_radiance.reader",
            "honeybee_radiance.sensor",
            "honeybee_radiance.sensorgrid",
            "honeybee_radiance.view",
            "honeybee_radiance.writer"
        ],
        "version": "1.27.18"
    },
    "honeybee-radiance-command": {
        "cmdline": [],
        "modules": [
            "honeybee_radiance_command",
            "honeybee_radiance_command._command",
            "honeybee_radiance_command._command_util",
            "honeybee_radiance_command._exception",
            "honeybee_radiance_command._typing",
            "honeybee_radiance_command.cutil",
            "honeybee_radiance_command.oconv",
            "honeybee_radiance_command.options",
            "honeybee_radiance_command.options._optutil",
            "honeybee_radiance_command.options.oconv",
            "honeybee_radiance_command.options.optionbase",
            "honeybee_radiance_command.options.rcalc",
            "honeybee_radiance_command.options.rcontrib",
            "honeybee_radiance_command.options.rfluxmtx",
            "honeybee_radiance_command.options.rtrace",
            "honeybee_radiance_command.rcalc",
            "honeybee_radiance_command.rcontrib",
            "honeybee_radiance_command.rtrace"
        ],
        "version": "1.1.6"
    },
    "honeybee-radiance-folder": {
        "cmdline": [],
        "modules": [
            "honeybee_radiance_folder",
            "honeybee_radiance_folder.config",
            "honeybee_radiance_folder.folder",
            "honeybee_radiance_folder.folderutil"
        ],
        "version": "2.3.1"
    },
    "honeybee-radiance-recipe": {
        "cmdline": [],
        "modules": [
            "honeybee_radiance_recipe"
        ],
        "version": "0.3.1"
    },
    "honeybee-schema": {
        "cmdline": [],
        "modules": [
            "honeybee_schema",
            "honeybee_schema._base",
            "honeybee_schema._openapi",
            "honeybee_schema.altnumber",
            "honeybee_schema.boundarycondition",
            "honeybee_schema.energy",
            "honeybee_schema.energy._base",
            "honeybee_schema.energy.construction",
            "honeybee_schema.energy.constructionset",
            "honeybee_schema.energy.designday",
            "honeybee_schema.energy.hvac",
            "honeybee_schema.energy.hvac._template",
            "honeybee_schema.energy.hvac.allair",
            "honeybee_schema.energy.hvac.doas",
            "honeybee_schema.energy.hvac.heatcool",
            "honeybee_schema.energy.hvac.idealair",
            "honeybee_schema.energy.load",
            "honeybee_schema.energy.material",
            "honeybee_schema.energy.programtype",
            "honeybee_schema.energy.properties",
            "honeybee_schema.energy.schedule",
            "honeybee_schema.energy.simulation",
            "honeybee_schema.energy.ventcool",
            "honeybee_schema.geometry",
            "honeybee_schema.model",
            "honeybee_schema.radiance",
            "honeybee_schema.radiance._base",
            "honeybee_schema.radiance.asset",
            "honeybee_schema.radiance.lightsource",
            "honeybee_schema.radiance.modifier",
            "honeybee_schema.radiance.modifierset",
            "honeybee_schema.radiance.properties",
            "honeybee_schema.radiance.state",
            "honeybee_schema.radiance.wea"
        ],
        "version": "1.39.0"
    },
    "honeybee-standards": {
        "cmdline": [],
        "modules": [
            "honeybee_standards"
        ],
        "version": "2.0.0"
    },
    "honeybeecore": {
        "cmdline": [],
        "modules": [
            "honeybeecore",
            "honeybeecore.cli"
        ],
        "version": "0.1.1"
    },
    "honeyboard": {
        "cmdline": [],
        "modules": [
            "honey_board",
            "honey_board.models",
            "honey_board.models.hello_world",
            "honey_board.models.hello_world.hello_world",
            "honey_board.models.settings",
            "honey_board.models.settings.config",
            "honey_board.modules",
            "honey_board.modules.logging",
            "honey_board.modules.logging.logging",
            "honey_board.modules.net_state_modules",
            "honey_board.modules.net_state_modules.net_state_module",
            "honey_board.modules.operation_timing_modules",
            "honey_board.modules.operation_timing_modules.operation_timing",
            "honey_board.modules.serializator",
            "honey_board.modules.serializator.serializator",
            "honey_board.modules.shell_starter_modules",
            "honey_board.modules.shell_starter_modules.shell_starter_general_module",
            "honey_board.modules.shell_starter_modules.shell_starter_module",
            "honey_board.modules.shell_starter_modules.shell_starter_net_state_module"
        ],
        "version": "0.0.6"
    },
    "honeycomb": {
        "cmdline": [],
        "modules": [
            "honeycomb",
            "honeycomb.base",
            "honeycomb.cache",
            "honeycomb.hashs",
            "honeycomb.lists",
            "honeycomb.sets",
            "honeycomb.sortedset"
        ],
        "version": "0.2.3"
    },
    "honeycomb-beeline": {
        "cmdline": [],
        "modules": [
            "beeline",
            "beeline.aiotrace",
            "beeline.internal",
            "beeline.middleware",
            "beeline.middleware.awslambda",
            "beeline.middleware.awslambda.test_awslambda",
            "beeline.middleware.bottle",
            "beeline.middleware.bottle.test_bottle",
            "beeline.middleware.django",
            "beeline.middleware.django.test_django",
            "beeline.middleware.flask",
            "beeline.middleware.flask.test_flask",
            "beeline.middleware.werkzeug",
            "beeline.middleware.werkzeug.test_werkzeug",
            "beeline.middleware.wsgi",
            "beeline.patch",
            "beeline.patch.jinja2",
            "beeline.patch.requests",
            "beeline.patch.test_jinja2",
            "beeline.patch.test_requests",
            "beeline.patch.test_urllib",
            "beeline.patch.tornado",
            "beeline.patch.urllib",
            "beeline.propagation",
            "beeline.propagation.honeycomb",
            "beeline.propagation.test_honeycomb",
            "beeline.propagation.test_propagation",
            "beeline.propagation.test_w3c",
            "beeline.propagation.w3c",
            "beeline.test_async",
            "beeline.test_beeline",
            "beeline.test_internal",
            "beeline.test_suite",
            "beeline.test_trace",
            "beeline.trace",
            "beeline.version"
        ],
        "version": "2.13.1"
    },
    "honeycomb-framework": {
        "cmdline": [],
        "modules": [
            "honeycomb",
            "honeycomb.cli",
            "honeycomb.commands",
            "honeycomb.commands.integration",
            "honeycomb.commands.integration.configure",
            "honeycomb.commands.integration.install",
            "honeycomb.commands.integration.list",
            "honeycomb.commands.integration.show",
            "honeycomb.commands.integration.test",
            "honeycomb.commands.integration.uninstall",
            "honeycomb.commands.service",
            "honeycomb.commands.service.install",
            "honeycomb.commands.service.list",
            "honeycomb.commands.service.logs",
            "honeycomb.commands.service.run",
            "honeycomb.commands.service.show",
            "honeycomb.commands.service.status",
            "honeycomb.commands.service.stop",
            "honeycomb.commands.service.test",
            "honeycomb.commands.service.uninstall",
            "honeycomb.decoymanager",
            "honeycomb.decoymanager.models",
            "honeycomb.defs",
            "honeycomb.error_messages",
            "honeycomb.exceptions",
            "honeycomb.integrationmanager",
            "honeycomb.integrationmanager.defs",
            "honeycomb.integrationmanager.error_messages",
            "honeycomb.integrationmanager.exceptions",
            "honeycomb.integrationmanager.integration_utils",
            "honeycomb.integrationmanager.models",
            "honeycomb.integrationmanager.registration",
            "honeycomb.integrationmanager.tasks",
            "honeycomb.servicemanager",
            "honeycomb.servicemanager.base_service",
            "honeycomb.servicemanager.defs",
            "honeycomb.servicemanager.error_messages",
            "honeycomb.servicemanager.exceptions",
            "honeycomb.servicemanager.models",
            "honeycomb.servicemanager.registration",
            "honeycomb.utils",
            "honeycomb.utils.config_utils",
            "honeycomb.utils.daemon",
            "honeycomb.utils.plugin_utils",
            "honeycomb.utils.tailer",
            "honeycomb.utils.wait"
        ],
        "version": "0.1.1"
    },
    "honeycombbeeline": {
        "cmdline": [],
        "modules": [
            "honeycombbeeline",
            "honeycombbeeline.cli"
        ],
        "version": "0.1.1"
    },
    "honeydb": {
        "cmdline": [],
        "modules": [
            "honeydb",
            "honeydb.api",
            "honeydb.api.client"
        ],
        "version": "1.3.0"
    },
    "honeymilk": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "honeypi": {
        "cmdline": [],
        "modules": [
            "HoneyPi",
            "HoneyPi.core"
        ],
        "version": "0.0.1"
    },
    "honeywell-hpma115s0": {
        "cmdline": [],
        "modules": [
            "honeywell_hpma115s0",
            "honeywell_hpma115s0.honeywell_hpma115s0"
        ],
        "version": "0.0.3"
    },
    "honeywell-thermostat": {
        "cmdline": [],
        "modules": [
            "honeywell_thermostat",
            "honeywell_thermostat.main",
            "honeywell_thermostat.thermostat"
        ],
        "version": "1.5"
    },
    "hong": {
        "cmdline": [],
        "modules": [
            "stocks",
            "stocks.stocks"
        ],
        "version": "0.1.0"
    },
    "honganh-tets": {
        "cmdline": [],
        "modules": [
            "honganh_tets",
            "honganh_tets.cli",
            "honganh_tets.honganh_tets"
        ],
        "version": "0.0.1"
    },
    "hongzhen-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "honk": {
        "cmdline": [],
        "modules": [],
        "version": "0.5"
    },
    "honor": {
        "cmdline": [],
        "modules": [
            "car",
            "car.code1",
            "car.code2"
        ],
        "version": "7.7.7"
    },
    "hoodex": {
        "cmdline": [],
        "modules": [
            "hoodex",
            "hoodex.cli",
            "hoodex.main",
            "hoodex.plex"
        ],
        "version": "0.1.2"
    },
    "hoodlogger": {
        "cmdline": [],
        "modules": [
            "hoodlogger",
            "hoodlogger.decorators",
            "hoodlogger.hoodlogger",
            "hoodlogger.hoodthreadlogger"
        ],
        "version": "0.0.4"
    },
    "hoodwink": {
        "cmdline": [],
        "modules": [
            "hoodwink",
            "hoodwink.hoodwink"
        ],
        "version": "0.4.5"
    },
    "hoof": {
        "cmdline": [],
        "modules": [
            "hoof",
            "hoof_examples.Expr.ExprLexer",
            "hoof_examples.Expr.ExprListener",
            "hoof_examples.Expr.ExprParser",
            "hoof_examples.Expr.ExprVisitor",
            "hoof_examples.Tiny.TinyLexer",
            "hoof_examples.Tiny.TinyListener",
            "hoof_examples.Tiny.TinyParser",
            "hoof_examples.Tiny.TinyVisitor",
            "tests.test_basic"
        ],
        "version": "0.0.2"
    },
    "hook": {
        "cmdline": [],
        "modules": [
            "hook",
            "hook.model",
            "hook.parser",
            "hook.receiver"
        ],
        "version": "0.0.2"
    },
    "hook-plug": {
        "cmdline": [],
        "modules": [
            "hook_plug",
            "hook_plug.hook_plug"
        ],
        "version": "0.1.0"
    },
    "hook-run": {
        "cmdline": [],
        "modules": [
            "hookrun"
        ],
        "version": "1.0.0"
    },
    "hookbox": {
        "cmdline": [],
        "modules": [
            "hookbox",
            "hookbox.admin",
            "hookbox.admin.admin",
            "hookbox.channel",
            "hookbox.config",
            "hookbox.errors",
            "hookbox.log",
            "hookbox.output_wrapper",
            "hookbox.protocol",
            "hookbox.rest",
            "hookbox.server",
            "hookbox.start",
            "hookbox.tests",
            "hookbox.tests.test_hookbox_config",
            "hookbox.user",
            "hookbox.version"
        ],
        "version": "0.3.3"
    },
    "hookbox-dax": {
        "cmdline": [],
        "modules": [
            "hookbox",
            "hookbox.admin",
            "hookbox.admin.admin",
            "hookbox.api",
            "hookbox.api.client",
            "hookbox.api.internal",
            "hookbox.api.web",
            "hookbox.channel",
            "hookbox.config",
            "hookbox.errors",
            "hookbox.log",
            "hookbox.output_wrapper",
            "hookbox.protocol",
            "hookbox.server",
            "hookbox.start",
            "hookbox.tests",
            "hookbox.tests.test_hookbox_config",
            "hookbox.user"
        ],
        "version": "0.3.4a1"
    },
    "hookcheck": {
        "cmdline": [],
        "modules": [
            "hookcheck"
        ],
        "version": "1.0.0"
    },
    "hookd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hookdns": {
        "cmdline": [],
        "modules": [
            "hookdns",
            "hookdns.getaddrinfo",
            "hookdns.gethostbyname",
            "hookdns.gethostbyname_ex",
            "hookdns.hosts"
        ],
        "version": "1.0.0"
    },
    "hooke": {
        "cmdline": [
            "hk.py"
        ],
        "modules": [
            "hooke",
            "hooke.command",
            "hooke.command_stack",
            "hooke.compat",
            "hooke.compat.odict",
            "hooke.config",
            "hooke.curve",
            "hooke.driver",
            "hooke.driver.csvdriver",
            "hooke.driver.hdf5",
            "hooke.driver.hemingway",
            "hooke.driver.jpk",
            "hooke.driver.mcs",
            "hooke.driver.mfp1d",
            "hooke.driver.mfp1dexport",
            "hooke.driver.mfp3d",
            "hooke.driver.picoforce",
            "hooke.driver.tutorial",
            "hooke.driver.wtk",
            "hooke.engine",
            "hooke.hooke",
            "hooke.interaction",
            "hooke.license",
            "hooke.playlist",
            "hooke.plugin",
            "hooke.plugin.autopeak",
            "hooke.plugin.command_stack",
            "hooke.plugin.config",
            "hooke.plugin.convfilt",
            "hooke.plugin.curve",
            "hooke.plugin.cut",
            "hooke.plugin.debug",
            "hooke.plugin.engine",
            "hooke.plugin.fclamp",
            "hooke.plugin.flatfilt",
            "hooke.plugin.jumpstat",
            "hooke.plugin.license",
            "hooke.plugin.massanalysis",
            "hooke.plugin.multidistance",
            "hooke.plugin.multifit",
            "hooke.plugin.note",
            "hooke.plugin.pcluster",
            "hooke.plugin.playlist",
            "hooke.plugin.playlists",
            "hooke.plugin.plotmanip",
            "hooke.plugin.polymer_fit",
            "hooke.plugin.review",
            "hooke.plugin.showconvoluted",
            "hooke.plugin.superimpose",
            "hooke.plugin.system",
            "hooke.plugin.tccd",
            "hooke.plugin.tutorial",
            "hooke.plugin.vclamp",
            "hooke.ui",
            "hooke.ui.commandline",
            "hooke.ui.gui",
            "hooke.ui.gui.dialog",
            "hooke.ui.gui.dialog.points",
            "hooke.ui.gui.dialog.save_file",
            "hooke.ui.gui.dialog.selection",
            "hooke.ui.gui.dialog.string",
            "hooke.ui.gui.dialog.text",
            "hooke.ui.gui.handler",
            "hooke.ui.gui.handler.boolean",
            "hooke.ui.gui.handler.float",
            "hooke.ui.gui.handler.selection",
            "hooke.ui.gui.handler.string",
            "hooke.ui.gui.interface",
            "hooke.ui.gui.menu",
            "hooke.ui.gui.navbar",
            "hooke.ui.gui.panel",
            "hooke.ui.gui.panel.commands",
            "hooke.ui.gui.panel.note",
            "hooke.ui.gui.panel.notebook",
            "hooke.ui.gui.panel.output",
            "hooke.ui.gui.panel.playlist",
            "hooke.ui.gui.panel.plot",
            "hooke.ui.gui.panel.propertyeditor",
            "hooke.ui.gui.panel.propertyeditor-propgrid",
            "hooke.ui.gui.panel.selection",
            "hooke.ui.gui.panel.welcome",
            "hooke.ui.gui.statusbar",
            "hooke.util",
            "hooke.util.calculus",
            "hooke.util.callback",
            "hooke.util.caller",
            "hooke.util.convert",
            "hooke.util.encoding",
            "hooke.util.fft",
            "hooke.util.fit",
            "hooke.util.graph",
            "hooke.util.igorbinarywave",
            "hooke.util.itertools",
            "hooke.util.peak",
            "hooke.util.pluggable",
            "hooke.util.quickhull",
            "hooke.util.si",
            "hooke.util.singleton",
            "hooke.util.util",
            "hooke.util.yaml"
        ],
        "version": "1.0.0.alpha (Ninken)"
    },
    "hooked": {
        "cmdline": [],
        "modules": [
            "hooked",
            "hooked.server"
        ],
        "version": "0.3"
    },
    "hookee": {
        "cmdline": [],
        "modules": [
            "hookee",
            "hookee.cli",
            "hookee.conf",
            "hookee.exception",
            "hookee.hookeemanager",
            "hookee.pluginmanager",
            "hookee.plugins",
            "hookee.plugins.blueprint_default",
            "hookee.plugins.request_body",
            "hookee.plugins.request_files",
            "hookee.plugins.request_headers",
            "hookee.plugins.request_query_params",
            "hookee.plugins.request_url_info",
            "hookee.plugins.response_echo",
            "hookee.plugins.response_info",
            "hookee.server",
            "hookee.tunnel",
            "hookee.util"
        ],
        "version": "1.2.4"
    },
    "hooker": {
        "cmdline": [],
        "modules": [
            "hooker",
            "hooker.api",
            "hooker.event_list",
            "hooker.hook_list",
            "hooker.logger"
        ],
        "version": "0.4.9"
    },
    "hookery": {
        "cmdline": [],
        "modules": [
            "hookery",
            "hookery.base"
        ],
        "version": "5.0.1"
    },
    "hookit": {
        "cmdline": [],
        "modules": [
            "hookit",
            "hookit.server"
        ],
        "version": "0.9.3"
    },
    "hookit-python": {
        "cmdline": [],
        "modules": [
            "hookit",
            "hookit.config",
            "hookit.exc",
            "hookit.hookit",
            "hookit.http",
            "hookit.log"
        ],
        "version": "1.0.0"
    },
    "hooklib": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "hookman": {
        "cmdline": [],
        "modules": [
            "hookman",
            "hookman.hookman",
            "hookman.hookman.args_manage",
            "hookman.hookman.settings",
            "hookman.hookman.webs",
            "hookman.hookman.webs.event_tasks",
            "hookman.hookman.webs.weblistener",
            "hookman.manage",
            "running_tests",
            "running_tests.test_config_setting",
            "running_tests.test_envents",
            "running_tests.test_run",
            "running_tests.test_run_and_stop",
            "web_tests",
            "web_tests.test_weblistener_basic",
            "web_tests.test_weblistener_events"
        ],
        "version": "0.1.2"
    },
    "hookmeup": {
        "cmdline": [],
        "modules": [
            "hookmeup",
            "hookmeup.hookmeup"
        ],
        "version": "1.0.5"
    },
    "hooks": {
        "cmdline": [],
        "modules": [
            "hooks",
            "hooks.commands",
            "hooks.githooks",
            "hooks.main"
        ],
        "version": "0.1.1"
    },
    "hooks-framework": {
        "cmdline": [],
        "modules": [
            "hooks",
            "hooks.server",
            "test",
            "test.unit",
            "test.unit.test_hooks"
        ],
        "version": "1.3.1"
    },
    "hooks4git": {
        "cmdline": [],
        "modules": [
            "hooks4git",
            "hooks4git.app",
            "hooks4git.console",
            "hooks4git.h4g",
            "hooks4git.hook",
            "hooks4git.tools"
        ],
        "version": "0.4.289"
    },
    "hookshot": {
        "cmdline": [],
        "modules": [
            "hookshot",
            "hookshot.hookshot"
        ],
        "version": "0.0.1"
    },
    "hookswitch": {
        "cmdline": [
            "hookswitch-example-controller",
            "hookswitch-nfq",
            "hookswitch-of13"
        ],
        "modules": [
            "hookswitch",
            "hookswitch.cli",
            "hookswitch.cli.example_controller",
            "hookswitch.cli.nfq",
            "hookswitch.cli.of13",
            "hookswitch.internal",
            "hookswitch.internal.common",
            "hookswitch.internal.nfq",
            "hookswitch.internal.zmqclient",
            "hookswitch.nfq",
            "hookswitch.openflow"
        ],
        "version": "0.0.2"
    },
    "hookt": {
        "cmdline": [],
        "modules": [
            "hookt"
        ],
        "version": "0.1.5"
    },
    "hooktest": {
        "cmdline": [],
        "modules": [
            "HookTest",
            "HookTest.build",
            "HookTest.capitains_units",
            "HookTest.capitains_units.cts",
            "HookTest.cmd",
            "HookTest.test",
            "HookTest.units",
            "tests",
            "tests.test_build",
            "tests.test_cts",
            "tests.test_cts.mocks",
            "tests.test_cts.mocks.xmllang_data",
            "tests.test_cts.test_single_text_methods",
            "tests.test_finder",
            "tests.test_run",
            "tests.test_test",
            "tests.test_units"
        ],
        "version": "1.3.1"
    },
    "hooktools": {
        "cmdline": [],
        "modules": [
            "hooktools",
            "hooktools.version"
        ],
        "version": "0.1"
    },
    "hooktrigger": {
        "cmdline": [],
        "modules": [
            "hooktrigger",
            "hooktrigger.hooktrigger"
        ],
        "version": "0.1.3"
    },
    "hooku": {
        "cmdline": [],
        "modules": [
            "hooku",
            "hooku.hooku"
        ],
        "version": "1.1.0"
    },
    "hookworker": {
        "cmdline": [],
        "modules": [
            "HookWorker",
            "HookWorker.api",
            "HookWorker.cmd",
            "HookWorker.worker"
        ],
        "version": "0.0.6"
    },
    "hooky": {
        "cmdline": [],
        "modules": [
            "hooky"
        ],
        "version": "0.5.0"
    },
    "hooly-logger-kit": {
        "cmdline": [],
        "modules": [
            "hooly_logger_kit",
            "hooly_logger_kit.HoolyLogger"
        ],
        "version": "0.0.3"
    },
    "hooly-utils-kit": {
        "cmdline": [],
        "modules": [
            "hooly_utils_kit",
            "hooly_utils_kit.Formatters",
            "hooly_utils_kit.Validators",
            "tests",
            "tests.test_formatters",
            "tests.test_validators"
        ],
        "version": "0.0.3"
    },
    "hooman": {
        "cmdline": [],
        "modules": [
            "hooman",
            "hooman.charts",
            "hooman.formula",
            "hooman.hooman",
            "hooman.shapes",
            "hooman.time",
            "hooman.ui"
        ],
        "version": "0.3.6"
    },
    "hoomd-flowws": {
        "cmdline": [],
        "modules": [
            "hoomd_flowws",
            "hoomd_flowws.DEMInteraction",
            "hoomd_flowws.Damasceno2017Interaction",
            "hoomd_flowws.Init",
            "hoomd_flowws.Interaction",
            "hoomd_flowws.Run",
            "hoomd_flowws.RunHPMC",
            "hoomd_flowws.ShapeDefinition",
            "hoomd_flowws.internal",
            "hoomd_flowws.version"
        ],
        "version": "0.1"
    },
    "hoon-language-server": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hoonds": {
        "cmdline": [],
        "modules": [
            "hoonds",
            "hoonds.errors",
            "hoonds.logging",
            "hoonds.patterns",
            "hoonds.patterns.observer",
            "hoonds.patterns.singleton"
        ],
        "version": "0.0.11"
    },
    "hooover": {
        "cmdline": [],
        "modules": [
            "hooover",
            "hooover.exceptions",
            "hooover.handlers",
            "hooover.hooover_sample",
            "hooover.input",
            "hooover.session",
            "hooover.utils"
        ],
        "version": "0.0.1"
    },
    "hoops": {
        "cmdline": [],
        "modules": [
            "hoops",
            "hoops.cli"
        ],
        "version": "0.1.0"
    },
    "hooqu": {
        "cmdline": [],
        "modules": [
            "hooqu",
            "hooqu._typing",
            "hooqu._typing.protocols",
            "hooqu._typing.protocols.frame",
            "hooqu._typing.protocols.series",
            "hooqu.analyzers",
            "hooqu.analyzers.analyzer",
            "hooqu.analyzers.completeness",
            "hooqu.analyzers.compliance",
            "hooqu.analyzers.grouping_analyzers",
            "hooqu.analyzers.maximum",
            "hooqu.analyzers.mean",
            "hooqu.analyzers.minimum",
            "hooqu.analyzers.preconditions",
            "hooqu.analyzers.quantile",
            "hooqu.analyzers.runners",
            "hooqu.analyzers.runners.analysis_runner",
            "hooqu.analyzers.size",
            "hooqu.analyzers.standard_deviation",
            "hooqu.analyzers.sum",
            "hooqu.analyzers.uniqueness",
            "hooqu.checks",
            "hooqu.constraints",
            "hooqu.constraints.analysis_based_constraint",
            "hooqu.constraints.constraint",
            "hooqu.constraints.constraints",
            "hooqu.dataframe",
            "hooqu.metrics",
            "hooqu.tests",
            "hooqu.tests.conftest",
            "hooqu.tests.fixtures",
            "hooqu.tests.test_analysis_runner",
            "hooqu.tests.test_analyzers",
            "hooqu.tests.test_check",
            "hooqu.tests.test_constraint",
            "hooqu.tests.test_grouping_analyzers",
            "hooqu.tests.test_metrics",
            "hooqu.tests.test_sample",
            "hooqu.tests.test_uniqueness",
            "hooqu.tests.test_verification_suite",
            "hooqu.verification_suite"
        ],
        "version": "0.1.0"
    },
    "hootiepy": {
        "cmdline": [],
        "modules": [
            "hootiepy"
        ],
        "version": "0.0.1"
    },
    "hootsweet": {
        "cmdline": [],
        "modules": [
            "hootsweet",
            "hootsweet.api",
            "hootsweet.constants",
            "hootsweet.exceptions",
            "hootsweet.locale"
        ],
        "version": "0.7.1"
    },
    "hoottit": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.dev0"
    },
    "hoover": {
        "cmdline": [],
        "modules": [
            "hoover",
            "hoover.exceptions",
            "hoover.handlers",
            "hoover.input",
            "hoover.session",
            "hoover.utils",
            "hoover.version"
        ],
        "version": "0.6.0"
    },
    "hoox": {
        "cmdline": [],
        "modules": [
            "hoox",
            "hoox.hoox",
            "hoox.resources",
            "hoox.resources.hoox"
        ],
        "version": "0.0.5"
    },
    "hooyunboom": {
        "cmdline": [],
        "modules": [
            "hooyunboom"
        ],
        "version": "1.3.1"
    },
    "hop": {
        "cmdline": [],
        "modules": [
            "hop",
            "hop.builder",
            "hop.constants",
            "hop.helper",
            "hop.tags",
            "hop.tags.basic",
            "hop.tags.form",
            "hop.tags.table",
            "hop.utils"
        ],
        "version": "1.5.2"
    },
    "hop-client": {
        "cmdline": [],
        "modules": [
            "hop",
            "hop._version",
            "hop.auth",
            "hop.cli",
            "hop.configure",
            "hop.io",
            "hop.models",
            "hop.plugins",
            "hop.publish",
            "hop.subscribe",
            "hop.utils",
            "hop.utils.cli",
            "hop.version"
        ],
        "version": "0.2"
    },
    "hopak": {
        "cmdline": [],
        "modules": [
            "hopak",
            "hopak.controllers",
            "hopak.ds",
            "hopak.ds.base",
            "hopak.ds.mongo",
            "hopak.exceptions",
            "hopak.fields",
            "hopak.forms",
            "hopak.loader",
            "hopak.models",
            "hopak.registry",
            "hopak.utils",
            "hopak.widgets"
        ],
        "version": "0.5.1"
    },
    "hopcroftkarp": {
        "cmdline": [],
        "modules": [
            "hopcroftkarp",
            "test",
            "test.test_hopcroftkarp"
        ],
        "version": "1.2.5"
    },
    "hope": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.hope_arrays",
            "examples.hope_calls",
            "examples.hope_class",
            "examples.hope_conditions",
            "examples.hope_datatypes",
            "examples.hope_loops",
            "examples.hope_numpy",
            "examples.hope_operators",
            "examples.hope_optimize",
            "hope",
            "hope._ast",
            "hope._cache",
            "hope._const",
            "hope._dump",
            "hope._generator",
            "hope._library",
            "hope._optimizer",
            "hope._tosource",
            "hope._transformer",
            "hope._wrapper",
            "hope.config",
            "hope.exceptions",
            "hope.exp",
            "hope.jit",
            "hope.options",
            "hope.serialization",
            "tests",
            "tests.conftest",
            "tests.test_Parser",
            "tests.test_blocks",
            "tests.test_call",
            "tests.test_cast",
            "tests.test_comparison",
            "tests.test_control_structures",
            "tests.test_dump",
            "tests.test_functions",
            "tests.test_jit",
            "tests.test_object",
            "tests.test_op_binary",
            "tests.test_op_bool",
            "tests.test_op_div",
            "tests.test_op_minus",
            "tests.test_op_mult",
            "tests.test_op_plus",
            "tests.test_op_pow",
            "tests.test_operators",
            "tests.test_optimize",
            "tests.test_options",
            "tests.test_pycosmo",
            "tests.test_rangecheck",
            "tests.test_return",
            "tests.test_serialization",
            "tests.test_slice",
            "tests.test_slice_negative",
            "tests.test_tosource",
            "tests.test_ufig",
            "tests.test_wrapper",
            "tests.utilities"
        ],
        "version": "0.7.3"
    },
    "hope-of-ropes": {
        "cmdline": [],
        "modules": [
            "hope_of_ropes",
            "hope_of_ropes.elastic",
            "hope_of_ropes.enemy",
            "hope_of_ropes.light",
            "hope_of_ropes.light_simul",
            "hope_of_ropes.main_menu",
            "hope_of_ropes.music",
            "hope_of_ropes.number",
            "hope_of_ropes.platforms",
            "hope_of_ropes.player",
            "hope_of_ropes.rope",
            "hope_of_ropes.signals",
            "hope_of_ropes.tests",
            "hope_of_ropes.tests.test_documentation",
            "hope_of_ropes.tests.test_hope_of_ropes"
        ],
        "version": "0.2.8"
    },
    "hoper": {
        "cmdline": [],
        "modules": [
            "hoper",
            "hoper._args",
            "hoper._print",
            "hoper.hoper",
            "hoper.meta",
            "hoper.util",
            "hoper.util.header_redirect_util",
            "hoper.util.history_util",
            "hoper.util.hooks",
            "hoper.util.js_redirect_util",
            "hoper.util.proxy_parser",
            "hoper.util.store",
            "hoper.util.types",
            "hoper.util.utils"
        ],
        "version": "2.6.1"
    },
    "hopfield": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hopfieldnetwork": {
        "cmdline": [],
        "modules": [
            "hopfieldnetwork",
            "hopfieldnetwork.gui",
            "hopfieldnetwork.libary",
            "hopfieldnetwork.tk_utils",
            "hopfieldnetwork.utils"
        ],
        "version": "1.0.1"
    },
    "hopic": {
        "cmdline": [],
        "modules": [
            "hopic",
            "hopic.binary_normalize",
            "hopic.cli",
            "hopic.cli.autocomplete",
            "hopic.cli.extensions",
            "hopic.cli.main",
            "hopic.cli.utils",
            "hopic.config_reader",
            "hopic.credentials",
            "hopic.execution",
            "hopic.git_time",
            "hopic.versioning"
        ],
        "version": "1.22.0"
    },
    "hopla": {
        "cmdline": [],
        "modules": [
            "hopla",
            "hopla.converter",
            "hopla.info",
            "hopla.scheduler",
            "hopla.signals",
            "hopla.workers"
        ],
        "version": "1.0.5"
    },
    "hoplite": {
        "cmdline": [],
        "modules": [
            "hoplite",
            "hoplite.api",
            "hoplite.api.helpers",
            "hoplite.api.job_plugins",
            "hoplite.api.jobs",
            "hoplite.api.root",
            "hoplite.auto_start",
            "hoplite.builtin_plugins",
            "hoplite.builtin_plugins.constants",
            "hoplite.builtin_plugins.download_folder_from_ftp_job",
            "hoplite.builtin_plugins.download_network_folder_job",
            "hoplite.builtin_plugins.install_python_package_job",
            "hoplite.builtin_plugins.remote_enabler_job",
            "hoplite.builtin_plugins.remote_enabler_module_job",
            "hoplite.builtin_plugins.sync_perforce_path_job",
            "hoplite.builtin_plugins.upload_to_network_folder_job",
            "hoplite.builtin_plugins.utils",
            "hoplite.builtin_plugins.utils.network_file_operations",
            "hoplite.client",
            "hoplite.client.helpers",
            "hoplite.client.pip",
            "hoplite.client.remote_job",
            "hoplite.client.remote_job_manager",
            "hoplite.client.status_updater",
            "hoplite.exceptions",
            "hoplite.globals",
            "hoplite.main",
            "hoplite.plugin_manager",
            "hoplite.public_api",
            "hoplite.remote_enabler",
            "hoplite.serializer",
            "hoplite.server",
            "hoplite.server.jobs",
            "hoplite.server.jobs.job",
            "hoplite.server.jobs.job_manager",
            "hoplite.server.jobs.job_wrapper",
            "hoplite.utils",
            "hoplite.utils.server_logging",
            "tests",
            "tests.api",
            "tests.api.test_job_plugins",
            "tests.api.test_jobs",
            "tests.api.test_root",
            "tests.builtin_plugins",
            "tests.builtin_plugins.test_download_folder_from_ftp_job",
            "tests.builtin_plugins.test_install_python_package_job",
            "tests.builtin_plugins.test_sync_perforce_path_job",
            "tests.client",
            "tests.client.test_client_mixin",
            "tests.client.test_remote_job",
            "tests.client.test_remote_job_manager",
            "tests.paths",
            "tests.remotable_test_resources",
            "tests.remotable_test_resources.dummy_class",
            "tests.remotable_test_resources.exceptions",
            "tests.remotable_test_resources.remotable_class",
            "tests.remotable_test_resources.remotable_module",
            "tests.server",
            "tests.server.jobs",
            "tests.server.jobs.test_job",
            "tests.server.jobs.test_job_wrapper",
            "tests.server.jobs.test_status_updater",
            "tests.server.test_manager",
            "tests.test_multiple_hoplite_instances",
            "tests.test_plugin_manager",
            "tests.test_remote_enabler",
            "tests.utils"
        ],
        "version": "15.0.0.dev21"
    },
    "hoplite2": {
        "cmdline": [],
        "modules": [
            "hoplite2",
            "hoplite2.hoplite",
            "hoplite2.layer_sparsity",
            "hoplite2.spartan"
        ],
        "version": "0.3.0"
    },
    "hopper-api": {
        "cmdline": [],
        "modules": [
            "hopper_api",
            "hopper_api.app",
            "hopper_api.crypto",
            "hopper_api.hopper_api",
            "hopper_api.notification"
        ],
        "version": "0.3.3"
    },
    "hoppmcmc": {
        "cmdline": [],
        "modules": [
            "hoppMCMC",
            "hoppMCMC/__init__"
        ],
        "version": "1.1"
    },
    "hoppy": {
        "cmdline": [],
        "modules": [
            "hoppy",
            "hoppy.general",
            "hoppy.general.hello",
            "hoppy.nicer",
            "hoppy.swift"
        ],
        "version": "0.0.1"
    },
    "hops": {
        "cmdline": [],
        "modules": [
            "hops",
            "hops.beam",
            "hops.constants",
            "hops.dataset",
            "hops.devices",
            "hops.elasticsearch",
            "hops.exceptions",
            "hops.experiment",
            "hops.experiment_impl",
            "hops.experiment_impl.distribute",
            "hops.experiment_impl.distribute.mirrored",
            "hops.experiment_impl.distribute.mirrored_reservation",
            "hops.experiment_impl.distribute.mirrored_reservation_client",
            "hops.experiment_impl.distribute.parameter_server",
            "hops.experiment_impl.distribute.parameter_server_client",
            "hops.experiment_impl.distribute.parameter_server_reservation",
            "hops.experiment_impl.launcher",
            "hops.experiment_impl.parallel",
            "hops.experiment_impl.parallel.differential_evolution",
            "hops.experiment_impl.parallel.grid_search",
            "hops.experiment_impl.parallel.random_search",
            "hops.experiment_impl.util",
            "hops.experiment_impl.util.experiment_utils",
            "hops.featurestore",
            "hops.featurestore_impl",
            "hops.featurestore_impl.core",
            "hops.featurestore_impl.dao",
            "hops.featurestore_impl.dao.common",
            "hops.featurestore_impl.dao.common.featurestore_entity",
            "hops.featurestore_impl.dao.common.featurestore_metadata",
            "hops.featurestore_impl.dao.datasets",
            "hops.featurestore_impl.dao.datasets.training_dataset",
            "hops.featurestore_impl.dao.featuregroups",
            "hops.featurestore_impl.dao.featuregroups.cached_featuregroup",
            "hops.featurestore_impl.dao.featuregroups.featuregroup",
            "hops.featurestore_impl.dao.featuregroups.on_demand_featuregroup",
            "hops.featurestore_impl.dao.featuregroups.online_featuregroup",
            "hops.featurestore_impl.dao.features",
            "hops.featurestore_impl.dao.features.feature",
            "hops.featurestore_impl.dao.featurestore",
            "hops.featurestore_impl.dao.featurestore.featurestore",
            "hops.featurestore_impl.dao.settings",
            "hops.featurestore_impl.dao.settings.featurestore_settings",
            "hops.featurestore_impl.dao.stats",
            "hops.featurestore_impl.dao.stats.cluster",
            "hops.featurestore_impl.dao.stats.cluster_analysis",
            "hops.featurestore_impl.dao.stats.correlation_matrix",
            "hops.featurestore_impl.dao.stats.correlation_value",
            "hops.featurestore_impl.dao.stats.datapoint",
            "hops.featurestore_impl.dao.stats.descriptive_stats",
            "hops.featurestore_impl.dao.stats.descriptive_stats_metric_value",
            "hops.featurestore_impl.dao.stats.descriptive_stats_metric_values",
            "hops.featurestore_impl.dao.stats.feature_correlation",
            "hops.featurestore_impl.dao.stats.feature_histogram",
            "hops.featurestore_impl.dao.stats.feature_histograms",
            "hops.featurestore_impl.dao.stats.histogram_bin",
            "hops.featurestore_impl.dao.stats.statistics",
            "hops.featurestore_impl.dao.storageconnectors",
            "hops.featurestore_impl.dao.storageconnectors.hopsfs_connector",
            "hops.featurestore_impl.dao.storageconnectors.jdbc_connector",
            "hops.featurestore_impl.dao.storageconnectors.s3_connector",
            "hops.featurestore_impl.exceptions",
            "hops.featurestore_impl.exceptions.exceptions",
            "hops.featurestore_impl.featureframes",
            "hops.featurestore_impl.featureframes.FeatureFrame",
            "hops.featurestore_impl.online_featurestore",
            "hops.featurestore_impl.online_featurestore.online_featurestore",
            "hops.featurestore_impl.query_planner",
            "hops.featurestore_impl.query_planner.f_query",
            "hops.featurestore_impl.query_planner.fg_query",
            "hops.featurestore_impl.query_planner.fs_query",
            "hops.featurestore_impl.query_planner.logical_query_plan",
            "hops.featurestore_impl.query_planner.query_planner",
            "hops.featurestore_impl.rest",
            "hops.featurestore_impl.rest.rest_rpc",
            "hops.featurestore_impl.util",
            "hops.featurestore_impl.util.fs_utils",
            "hops.featurestore_impl.visualizations",
            "hops.featurestore_impl.visualizations.statistics_plots",
            "hops.hdfs",
            "hops.hive",
            "hops.jobs",
            "hops.kafka",
            "hops.model",
            "hops.numpy_helper",
            "hops.pandas_helper",
            "hops.project",
            "hops.service_discovery",
            "hops.serving",
            "hops.tensorboard",
            "hops.tls",
            "hops.user",
            "hops.util",
            "hops.version",
            "hops.xattr"
        ],
        "version": "1.4.0.1"
    },
    "hops-apache-beam": {
        "cmdline": [],
        "modules": [
            "apache_beam",
            "apache_beam.coders",
            "apache_beam.coders.avro_record",
            "apache_beam.coders.coder_impl",
            "apache_beam.coders.coders",
            "apache_beam.coders.coders_test",
            "apache_beam.coders.coders_test_common",
            "apache_beam.coders.fast_coders_test",
            "apache_beam.coders.observable",
            "apache_beam.coders.observable_test",
            "apache_beam.coders.proto2_coder_test_messages_pb2",
            "apache_beam.coders.row_coder",
            "apache_beam.coders.row_coder_test",
            "apache_beam.coders.slow_coders_test",
            "apache_beam.coders.slow_stream",
            "apache_beam.coders.standard_coders_test",
            "apache_beam.coders.stream_test",
            "apache_beam.coders.typecoders",
            "apache_beam.coders.typecoders_test",
            "apache_beam.dataframe",
            "apache_beam.dataframe.convert",
            "apache_beam.dataframe.convert_test",
            "apache_beam.dataframe.doctests",
            "apache_beam.dataframe.doctests_test",
            "apache_beam.dataframe.expressions",
            "apache_beam.dataframe.expressions_test",
            "apache_beam.dataframe.frame_base",
            "apache_beam.dataframe.frame_base_test",
            "apache_beam.dataframe.frames",
            "apache_beam.dataframe.frames_test",
            "apache_beam.dataframe.pandas_doctests_test",
            "apache_beam.dataframe.partitionings",
            "apache_beam.dataframe.partitionings_test",
            "apache_beam.dataframe.transforms",
            "apache_beam.dataframe.transforms_test",
            "apache_beam.error",
            "apache_beam.examples",
            "apache_beam.examples.avro_bitcoin",
            "apache_beam.examples.complete",
            "apache_beam.examples.complete.autocomplete",
            "apache_beam.examples.complete.autocomplete_test",
            "apache_beam.examples.complete.distribopt",
            "apache_beam.examples.complete.distribopt_test",
            "apache_beam.examples.complete.estimate_pi",
            "apache_beam.examples.complete.estimate_pi_test",
            "apache_beam.examples.complete.game",
            "apache_beam.examples.complete.game.game_stats",
            "apache_beam.examples.complete.game.game_stats_it_test",
            "apache_beam.examples.complete.game.game_stats_test",
            "apache_beam.examples.complete.game.hourly_team_score",
            "apache_beam.examples.complete.game.hourly_team_score_it_test",
            "apache_beam.examples.complete.game.hourly_team_score_test",
            "apache_beam.examples.complete.game.leader_board",
            "apache_beam.examples.complete.game.leader_board_it_test",
            "apache_beam.examples.complete.game.leader_board_test",
            "apache_beam.examples.complete.game.user_score",
            "apache_beam.examples.complete.game.user_score_it_test",
            "apache_beam.examples.complete.game.user_score_test",
            "apache_beam.examples.complete.juliaset",
            "apache_beam.examples.complete.juliaset.juliaset",
            "apache_beam.examples.complete.juliaset.juliaset.juliaset",
            "apache_beam.examples.complete.juliaset.juliaset.juliaset_test",
            "apache_beam.examples.complete.juliaset.juliaset_main",
            "apache_beam.examples.complete.juliaset.setup",
            "apache_beam.examples.complete.tfidf",
            "apache_beam.examples.complete.tfidf_test",
            "apache_beam.examples.complete.top_wikipedia_sessions",
            "apache_beam.examples.complete.top_wikipedia_sessions_test",
            "apache_beam.examples.cookbook",
            "apache_beam.examples.cookbook.bigquery_schema",
            "apache_beam.examples.cookbook.bigquery_side_input",
            "apache_beam.examples.cookbook.bigquery_side_input_test",
            "apache_beam.examples.cookbook.bigquery_tornadoes",
            "apache_beam.examples.cookbook.bigquery_tornadoes_it_test",
            "apache_beam.examples.cookbook.bigquery_tornadoes_test",
            "apache_beam.examples.cookbook.bigtableio_it_test",
            "apache_beam.examples.cookbook.coders",
            "apache_beam.examples.cookbook.coders_test",
            "apache_beam.examples.cookbook.combiners_test",
            "apache_beam.examples.cookbook.custom_ptransform",
            "apache_beam.examples.cookbook.custom_ptransform_test",
            "apache_beam.examples.cookbook.datastore_wordcount",
            "apache_beam.examples.cookbook.datastore_wordcount_it_test",
            "apache_beam.examples.cookbook.filters",
            "apache_beam.examples.cookbook.filters_test",
            "apache_beam.examples.cookbook.group_with_coder",
            "apache_beam.examples.cookbook.group_with_coder_test",
            "apache_beam.examples.cookbook.mergecontacts",
            "apache_beam.examples.cookbook.mergecontacts_test",
            "apache_beam.examples.cookbook.multiple_output_pardo",
            "apache_beam.examples.cookbook.multiple_output_pardo_test",
            "apache_beam.examples.fastavro_it_test",
            "apache_beam.examples.flink",
            "apache_beam.examples.flink.flink_streaming_impulse",
            "apache_beam.examples.kafkataxi",
            "apache_beam.examples.kafkataxi.kafka_taxi",
            "apache_beam.examples.snippets",
            "apache_beam.examples.snippets.snippets",
            "apache_beam.examples.snippets.snippets_test",
            "apache_beam.examples.snippets.snippets_test_py3",
            "apache_beam.examples.snippets.transforms",
            "apache_beam.examples.snippets.transforms.aggregation",
            "apache_beam.examples.snippets.transforms.aggregation.cogroupbykey",
            "apache_beam.examples.snippets.transforms.aggregation.cogroupbykey_test",
            "apache_beam.examples.snippets.transforms.aggregation.combineglobally",
            "apache_beam.examples.snippets.transforms.aggregation.combineglobally_test",
            "apache_beam.examples.snippets.transforms.aggregation.combineperkey",
            "apache_beam.examples.snippets.transforms.aggregation.combineperkey_test",
            "apache_beam.examples.snippets.transforms.aggregation.combinevalues",
            "apache_beam.examples.snippets.transforms.aggregation.combinevalues_test",
            "apache_beam.examples.snippets.transforms.aggregation.count",
            "apache_beam.examples.snippets.transforms.aggregation.count_test",
            "apache_beam.examples.snippets.transforms.aggregation.distinct",
            "apache_beam.examples.snippets.transforms.aggregation.distinct_test",
            "apache_beam.examples.snippets.transforms.aggregation.groupbykey",
            "apache_beam.examples.snippets.transforms.aggregation.groupbykey_test",
            "apache_beam.examples.snippets.transforms.aggregation.groupintobatches",
            "apache_beam.examples.snippets.transforms.aggregation.groupintobatches_test",
            "apache_beam.examples.snippets.transforms.aggregation.latest",
            "apache_beam.examples.snippets.transforms.aggregation.latest_test",
            "apache_beam.examples.snippets.transforms.aggregation.max",
            "apache_beam.examples.snippets.transforms.aggregation.max_test",
            "apache_beam.examples.snippets.transforms.aggregation.mean",
            "apache_beam.examples.snippets.transforms.aggregation.mean_test",
            "apache_beam.examples.snippets.transforms.aggregation.min",
            "apache_beam.examples.snippets.transforms.aggregation.min_test",
            "apache_beam.examples.snippets.transforms.aggregation.sample",
            "apache_beam.examples.snippets.transforms.aggregation.sample_test",
            "apache_beam.examples.snippets.transforms.aggregation.sum",
            "apache_beam.examples.snippets.transforms.aggregation.sum_test",
            "apache_beam.examples.snippets.transforms.aggregation.top",
            "apache_beam.examples.snippets.transforms.aggregation.top_test",
            "apache_beam.examples.snippets.transforms.elementwise",
            "apache_beam.examples.snippets.transforms.elementwise.filter",
            "apache_beam.examples.snippets.transforms.elementwise.filter_test",
            "apache_beam.examples.snippets.transforms.elementwise.flatmap",
            "apache_beam.examples.snippets.transforms.elementwise.flatmap_test",
            "apache_beam.examples.snippets.transforms.elementwise.keys",
            "apache_beam.examples.snippets.transforms.elementwise.keys_test",
            "apache_beam.examples.snippets.transforms.elementwise.kvswap",
            "apache_beam.examples.snippets.transforms.elementwise.kvswap_test",
            "apache_beam.examples.snippets.transforms.elementwise.map",
            "apache_beam.examples.snippets.transforms.elementwise.map_test",
            "apache_beam.examples.snippets.transforms.elementwise.pardo",
            "apache_beam.examples.snippets.transforms.elementwise.pardo_test",
            "apache_beam.examples.snippets.transforms.elementwise.partition",
            "apache_beam.examples.snippets.transforms.elementwise.partition_test",
            "apache_beam.examples.snippets.transforms.elementwise.regex",
            "apache_beam.examples.snippets.transforms.elementwise.regex_test",
            "apache_beam.examples.snippets.transforms.elementwise.tostring",
            "apache_beam.examples.snippets.transforms.elementwise.tostring_test",
            "apache_beam.examples.snippets.transforms.elementwise.values",
            "apache_beam.examples.snippets.transforms.elementwise.values_test",
            "apache_beam.examples.snippets.transforms.elementwise.withtimestamps",
            "apache_beam.examples.snippets.transforms.elementwise.withtimestamps_test",
            "apache_beam.examples.snippets.util",
            "apache_beam.examples.snippets.util_test",
            "apache_beam.examples.sql_taxi",
            "apache_beam.examples.streaming_wordcount",
            "apache_beam.examples.streaming_wordcount_debugging",
            "apache_beam.examples.streaming_wordcount_debugging_it_test",
            "apache_beam.examples.streaming_wordcount_debugging_test",
            "apache_beam.examples.streaming_wordcount_it_test",
            "apache_beam.examples.windowed_wordcount",
            "apache_beam.examples.wordcount",
            "apache_beam.examples.wordcount_debugging",
            "apache_beam.examples.wordcount_debugging_test",
            "apache_beam.examples.wordcount_it_test",
            "apache_beam.examples.wordcount_minimal",
            "apache_beam.examples.wordcount_minimal_test",
            "apache_beam.examples.wordcount_test",
            "apache_beam.examples.wordcount_with_metrics",
            "apache_beam.examples.wordcount_xlang",
            "apache_beam.examples.wordcount_xlang_sql",
            "apache_beam.internal",
            "apache_beam.internal.gcp",
            "apache_beam.internal.gcp.auth",
            "apache_beam.internal.gcp.json_value",
            "apache_beam.internal.gcp.json_value_test",
            "apache_beam.internal.http_client",
            "apache_beam.internal.http_client_test",
            "apache_beam.internal.module_test",
            "apache_beam.internal.pickler",
            "apache_beam.internal.pickler_test",
            "apache_beam.internal.util",
            "apache_beam.internal.util_test",
            "apache_beam.io",
            "apache_beam.io.avroio",
            "apache_beam.io.avroio_test",
            "apache_beam.io.aws",
            "apache_beam.io.aws.clients",
            "apache_beam.io.aws.clients.s3",
            "apache_beam.io.aws.clients.s3.boto3_client",
            "apache_beam.io.aws.clients.s3.client_test",
            "apache_beam.io.aws.clients.s3.fake_client",
            "apache_beam.io.aws.clients.s3.messages",
            "apache_beam.io.aws.s3filesystem",
            "apache_beam.io.aws.s3filesystem_test",
            "apache_beam.io.aws.s3io",
            "apache_beam.io.aws.s3io_test",
            "apache_beam.io.concat_source",
            "apache_beam.io.concat_source_test",
            "apache_beam.io.external",
            "apache_beam.io.external.gcp",
            "apache_beam.io.external.gcp.pubsub",
            "apache_beam.io.external.generate_sequence",
            "apache_beam.io.external.generate_sequence_test",
            "apache_beam.io.external.kafka",
            "apache_beam.io.external.snowflake",
            "apache_beam.io.external.xlang_jdbcio_it_test",
            "apache_beam.io.external.xlang_kafkaio_it_test",
            "apache_beam.io.external.xlang_parquetio_test",
            "apache_beam.io.filebasedsink",
            "apache_beam.io.filebasedsink_test",
            "apache_beam.io.filebasedsource",
            "apache_beam.io.filebasedsource_test",
            "apache_beam.io.fileio",
            "apache_beam.io.fileio_test",
            "apache_beam.io.filesystem",
            "apache_beam.io.filesystem_test",
            "apache_beam.io.filesystemio",
            "apache_beam.io.filesystemio_test",
            "apache_beam.io.filesystems",
            "apache_beam.io.filesystems_test",
            "apache_beam.io.flink",
            "apache_beam.io.flink.flink_streaming_impulse_source",
            "apache_beam.io.flink.flink_streaming_impulse_source_test",
            "apache_beam.io.gcp",
            "apache_beam.io.gcp.big_query_query_to_table_it_test",
            "apache_beam.io.gcp.big_query_query_to_table_pipeline",
            "apache_beam.io.gcp.bigquery",
            "apache_beam.io.gcp.bigquery_avro_tools",
            "apache_beam.io.gcp.bigquery_avro_tools_test",
            "apache_beam.io.gcp.bigquery_file_loads",
            "apache_beam.io.gcp.bigquery_file_loads_test",
            "apache_beam.io.gcp.bigquery_io_metadata",
            "apache_beam.io.gcp.bigquery_io_metadata_test",
            "apache_beam.io.gcp.bigquery_io_read_it_test",
            "apache_beam.io.gcp.bigquery_io_read_pipeline",
            "apache_beam.io.gcp.bigquery_read_it_test",
            "apache_beam.io.gcp.bigquery_read_perf_test",
            "apache_beam.io.gcp.bigquery_test",
            "apache_beam.io.gcp.bigquery_tools",
            "apache_beam.io.gcp.bigquery_tools_test",
            "apache_beam.io.gcp.bigquery_write_it_test",
            "apache_beam.io.gcp.bigquery_write_perf_test",
            "apache_beam.io.gcp.bigtableio",
            "apache_beam.io.gcp.datastore",
            "apache_beam.io.gcp.datastore.v1new",
            "apache_beam.io.gcp.datastore.v1new.adaptive_throttler",
            "apache_beam.io.gcp.datastore.v1new.adaptive_throttler_test",
            "apache_beam.io.gcp.datastore.v1new.datastore_write_it_pipeline",
            "apache_beam.io.gcp.datastore.v1new.datastore_write_it_test",
            "apache_beam.io.gcp.datastore.v1new.datastoreio",
            "apache_beam.io.gcp.datastore.v1new.datastoreio_test",
            "apache_beam.io.gcp.datastore.v1new.helper",
            "apache_beam.io.gcp.datastore.v1new.query_splitter",
            "apache_beam.io.gcp.datastore.v1new.query_splitter_test",
            "apache_beam.io.gcp.datastore.v1new.types",
            "apache_beam.io.gcp.datastore.v1new.types_test",
            "apache_beam.io.gcp.datastore.v1new.util",
            "apache_beam.io.gcp.datastore.v1new.util_test",
            "apache_beam.io.gcp.dicomclient",
            "apache_beam.io.gcp.dicomio",
            "apache_beam.io.gcp.dicomio_integration_test",
            "apache_beam.io.gcp.dicomio_test",
            "apache_beam.io.gcp.experimental",
            "apache_beam.io.gcp.experimental.spannerio",
            "apache_beam.io.gcp.experimental.spannerio_read_it_test",
            "apache_beam.io.gcp.experimental.spannerio_test",
            "apache_beam.io.gcp.experimental.spannerio_write_it_test",
            "apache_beam.io.gcp.gce_metadata_util",
            "apache_beam.io.gcp.gcsfilesystem",
            "apache_beam.io.gcp.gcsfilesystem_test",
            "apache_beam.io.gcp.gcsio",
            "apache_beam.io.gcp.gcsio_integration_test",
            "apache_beam.io.gcp.gcsio_overrides",
            "apache_beam.io.gcp.gcsio_test",
            "apache_beam.io.gcp.internal",
            "apache_beam.io.gcp.internal.clients",
            "apache_beam.io.gcp.internal.clients.bigquery",
            "apache_beam.io.gcp.internal.clients.bigquery.bigquery_v2_client",
            "apache_beam.io.gcp.internal.clients.bigquery.bigquery_v2_messages",
            "apache_beam.io.gcp.internal.clients.storage",
            "apache_beam.io.gcp.internal.clients.storage.storage_v1_client",
            "apache_beam.io.gcp.internal.clients.storage.storage_v1_messages",
            "apache_beam.io.gcp.pubsub",
            "apache_beam.io.gcp.pubsub_integration_test",
            "apache_beam.io.gcp.pubsub_io_perf_test",
            "apache_beam.io.gcp.pubsub_it_pipeline",
            "apache_beam.io.gcp.pubsub_test",
            "apache_beam.io.gcp.tests",
            "apache_beam.io.gcp.tests.bigquery_matcher",
            "apache_beam.io.gcp.tests.bigquery_matcher_test",
            "apache_beam.io.gcp.tests.pubsub_matcher",
            "apache_beam.io.gcp.tests.pubsub_matcher_test",
            "apache_beam.io.gcp.tests.utils",
            "apache_beam.io.gcp.tests.utils_test",
            "apache_beam.io.hadoopfilesystem",
            "apache_beam.io.hadoopfilesystem_test",
            "apache_beam.io.iobase",
            "apache_beam.io.iobase_test",
            "apache_beam.io.jdbc",
            "apache_beam.io.kafka",
            "apache_beam.io.localfilesystem",
            "apache_beam.io.localfilesystem_test",
            "apache_beam.io.mongodbio",
            "apache_beam.io.mongodbio_it_test",
            "apache_beam.io.mongodbio_test",
            "apache_beam.io.parquetio",
            "apache_beam.io.parquetio_it_test",
            "apache_beam.io.parquetio_test",
            "apache_beam.io.range_trackers",
            "apache_beam.io.range_trackers_test",
            "apache_beam.io.restriction_trackers",
            "apache_beam.io.restriction_trackers_test",
            "apache_beam.io.source_test_utils",
            "apache_beam.io.source_test_utils_test",
            "apache_beam.io.sources_test",
            "apache_beam.io.textio",
            "apache_beam.io.textio_test",
            "apache_beam.io.tfrecordio",
            "apache_beam.io.tfrecordio_test",
            "apache_beam.io.utils",
            "apache_beam.io.utils_test",
            "apache_beam.io.vcfio",
            "apache_beam.io.vcfio_test",
            "apache_beam.io.watermark_estimators",
            "apache_beam.io.watermark_estimators_test",
            "apache_beam.metrics",
            "apache_beam.metrics.cells",
            "apache_beam.metrics.cells_test",
            "apache_beam.metrics.execution",
            "apache_beam.metrics.execution_test",
            "apache_beam.metrics.metric",
            "apache_beam.metrics.metric_test",
            "apache_beam.metrics.metricbase",
            "apache_beam.metrics.monitoring_infos",
            "apache_beam.metrics.monitoring_infos_test",
            "apache_beam.ml",
            "apache_beam.ml.gcp",
            "apache_beam.ml.gcp.cloud_dlp",
            "apache_beam.ml.gcp.cloud_dlp_it_test",
            "apache_beam.ml.gcp.cloud_dlp_test",
            "apache_beam.ml.gcp.naturallanguageml",
            "apache_beam.ml.gcp.naturallanguageml_test",
            "apache_beam.ml.gcp.naturallanguageml_test_it",
            "apache_beam.ml.gcp.videointelligenceml",
            "apache_beam.ml.gcp.videointelligenceml_test",
            "apache_beam.ml.gcp.videointelligenceml_test_it",
            "apache_beam.ml.gcp.visionml",
            "apache_beam.ml.gcp.visionml_test",
            "apache_beam.ml.gcp.visionml_test_it",
            "apache_beam.options",
            "apache_beam.options.pipeline_options",
            "apache_beam.options.pipeline_options_test",
            "apache_beam.options.pipeline_options_validator",
            "apache_beam.options.pipeline_options_validator_test",
            "apache_beam.options.value_provider",
            "apache_beam.options.value_provider_test",
            "apache_beam.pipeline",
            "apache_beam.pipeline_test",
            "apache_beam.portability",
            "apache_beam.portability.api",
            "apache_beam.portability.api.beam_artifact_api_pb2",
            "apache_beam.portability.api.beam_artifact_api_pb2_grpc",
            "apache_beam.portability.api.beam_artifact_api_pb2_urns",
            "apache_beam.portability.api.beam_expansion_api_pb2",
            "apache_beam.portability.api.beam_expansion_api_pb2_grpc",
            "apache_beam.portability.api.beam_fn_api_pb2",
            "apache_beam.portability.api.beam_fn_api_pb2_grpc",
            "apache_beam.portability.api.beam_fn_api_pb2_urns",
            "apache_beam.portability.api.beam_interactive_api_pb2",
            "apache_beam.portability.api.beam_interactive_api_pb2_grpc",
            "apache_beam.portability.api.beam_job_api_pb2",
            "apache_beam.portability.api.beam_job_api_pb2_grpc",
            "apache_beam.portability.api.beam_job_api_pb2_urns",
            "apache_beam.portability.api.beam_provision_api_pb2",
            "apache_beam.portability.api.beam_provision_api_pb2_grpc",
            "apache_beam.portability.api.beam_runner_api_pb2",
            "apache_beam.portability.api.beam_runner_api_pb2_grpc",
            "apache_beam.portability.api.beam_runner_api_pb2_urns",
            "apache_beam.portability.api.endpoints_pb2",
            "apache_beam.portability.api.endpoints_pb2_grpc",
            "apache_beam.portability.api.external_transforms_pb2",
            "apache_beam.portability.api.external_transforms_pb2_grpc",
            "apache_beam.portability.api.metrics_pb2",
            "apache_beam.portability.api.metrics_pb2_grpc",
            "apache_beam.portability.api.metrics_pb2_urns",
            "apache_beam.portability.api.schema_pb2",
            "apache_beam.portability.api.schema_pb2_grpc",
            "apache_beam.portability.api.standard_window_fns_pb2",
            "apache_beam.portability.api.standard_window_fns_pb2_grpc",
            "apache_beam.portability.api.standard_window_fns_pb2_urns",
            "apache_beam.portability.common_urns",
            "apache_beam.portability.python_urns",
            "apache_beam.portability.utils",
            "apache_beam.pvalue",
            "apache_beam.pvalue_test",
            "apache_beam.runners",
            "apache_beam.runners.common",
            "apache_beam.runners.common_test",
            "apache_beam.runners.dataflow",
            "apache_beam.runners.dataflow.dataflow_exercise_metrics_pipeline",
            "apache_beam.runners.dataflow.dataflow_exercise_metrics_pipeline_test",
            "apache_beam.runners.dataflow.dataflow_exercise_streaming_metrics_pipeline",
            "apache_beam.runners.dataflow.dataflow_exercise_streaming_metrics_pipeline_test",
            "apache_beam.runners.dataflow.dataflow_metrics",
            "apache_beam.runners.dataflow.dataflow_metrics_test",
            "apache_beam.runners.dataflow.dataflow_runner",
            "apache_beam.runners.dataflow.dataflow_runner_test",
            "apache_beam.runners.dataflow.internal",
            "apache_beam.runners.dataflow.internal.apiclient",
            "apache_beam.runners.dataflow.internal.apiclient_test",
            "apache_beam.runners.dataflow.internal.clients",
            "apache_beam.runners.dataflow.internal.clients.dataflow",
            "apache_beam.runners.dataflow.internal.clients.dataflow.dataflow_v1b3_client",
            "apache_beam.runners.dataflow.internal.clients.dataflow.dataflow_v1b3_messages",
            "apache_beam.runners.dataflow.internal.clients.dataflow.message_matchers",
            "apache_beam.runners.dataflow.internal.clients.dataflow.message_matchers_test",
            "apache_beam.runners.dataflow.internal.names",
            "apache_beam.runners.dataflow.native_io",
            "apache_beam.runners.dataflow.native_io.iobase",
            "apache_beam.runners.dataflow.native_io.iobase_test",
            "apache_beam.runners.dataflow.ptransform_overrides",
            "apache_beam.runners.dataflow.template_runner_test",
            "apache_beam.runners.dataflow.test_dataflow_runner",
            "apache_beam.runners.direct",
            "apache_beam.runners.direct.bundle_factory",
            "apache_beam.runners.direct.clock",
            "apache_beam.runners.direct.consumer_tracking_pipeline_visitor",
            "apache_beam.runners.direct.consumer_tracking_pipeline_visitor_test",
            "apache_beam.runners.direct.direct_metrics",
            "apache_beam.runners.direct.direct_metrics_test",
            "apache_beam.runners.direct.direct_runner",
            "apache_beam.runners.direct.direct_runner_test",
            "apache_beam.runners.direct.direct_userstate",
            "apache_beam.runners.direct.evaluation_context",
            "apache_beam.runners.direct.executor",
            "apache_beam.runners.direct.helper_transforms",
            "apache_beam.runners.direct.sdf_direct_runner",
            "apache_beam.runners.direct.sdf_direct_runner_test",
            "apache_beam.runners.direct.test_direct_runner",
            "apache_beam.runners.direct.test_stream_impl",
            "apache_beam.runners.direct.transform_evaluator",
            "apache_beam.runners.direct.util",
            "apache_beam.runners.direct.watermark_manager",
            "apache_beam.runners.interactive",
            "apache_beam.runners.interactive.background_caching_job",
            "apache_beam.runners.interactive.background_caching_job_test",
            "apache_beam.runners.interactive.cache_manager",
            "apache_beam.runners.interactive.cache_manager_test",
            "apache_beam.runners.interactive.caching",
            "apache_beam.runners.interactive.caching.streaming_cache",
            "apache_beam.runners.interactive.caching.streaming_cache_test",
            "apache_beam.runners.interactive.display",
            "apache_beam.runners.interactive.display.display_manager",
            "apache_beam.runners.interactive.display.interactive_pipeline_graph",
            "apache_beam.runners.interactive.display.pcoll_visualization",
            "apache_beam.runners.interactive.display.pcoll_visualization_test",
            "apache_beam.runners.interactive.display.pipeline_graph",
            "apache_beam.runners.interactive.display.pipeline_graph_renderer",
            "apache_beam.runners.interactive.display.pipeline_graph_test",
            "apache_beam.runners.interactive.interactive_beam",
            "apache_beam.runners.interactive.interactive_beam_test",
            "apache_beam.runners.interactive.interactive_environment",
            "apache_beam.runners.interactive.interactive_environment_test",
            "apache_beam.runners.interactive.interactive_runner",
            "apache_beam.runners.interactive.interactive_runner_test",
            "apache_beam.runners.interactive.messaging",
            "apache_beam.runners.interactive.messaging.interactive_environment_inspector",
            "apache_beam.runners.interactive.messaging.interactive_environment_inspector_test",
            "apache_beam.runners.interactive.options",
            "apache_beam.runners.interactive.options.capture_control",
            "apache_beam.runners.interactive.options.capture_control_test",
            "apache_beam.runners.interactive.options.capture_limiters",
            "apache_beam.runners.interactive.options.capture_limiters_test",
            "apache_beam.runners.interactive.options.interactive_options",
            "apache_beam.runners.interactive.pipeline_analyzer",
            "apache_beam.runners.interactive.pipeline_analyzer_test",
            "apache_beam.runners.interactive.pipeline_fragment",
            "apache_beam.runners.interactive.pipeline_fragment_test",
            "apache_beam.runners.interactive.pipeline_instrument",
            "apache_beam.runners.interactive.pipeline_instrument_test",
            "apache_beam.runners.interactive.testing",
            "apache_beam.runners.interactive.testing.integration",
            "apache_beam.runners.interactive.testing.integration.notebook_executor",
            "apache_beam.runners.interactive.testing.integration.screen_diff",
            "apache_beam.runners.interactive.testing.mock_ipython",
            "apache_beam.runners.interactive.testing.pipeline_assertion",
            "apache_beam.runners.interactive.testing.test_cache_manager",
            "apache_beam.runners.interactive.utils",
            "apache_beam.runners.interactive.utils_test",
            "apache_beam.runners.internal",
            "apache_beam.runners.internal.names",
            "apache_beam.runners.job",
            "apache_beam.runners.job.manager",
            "apache_beam.runners.job.utils",
            "apache_beam.runners.pipeline_context",
            "apache_beam.runners.pipeline_context_test",
            "apache_beam.runners.portability",
            "apache_beam.runners.portability.abstract_job_service",
            "apache_beam.runners.portability.artifact_service",
            "apache_beam.runners.portability.artifact_service_test",
            "apache_beam.runners.portability.expansion_service",
            "apache_beam.runners.portability.expansion_service_test",
            "apache_beam.runners.portability.flink_runner",
            "apache_beam.runners.portability.flink_runner_test",
            "apache_beam.runners.portability.flink_uber_jar_job_server",
            "apache_beam.runners.portability.flink_uber_jar_job_server_test",
            "apache_beam.runners.portability.fn_api_runner",
            "apache_beam.runners.portability.fn_api_runner.execution",
            "apache_beam.runners.portability.fn_api_runner.fn_runner",
            "apache_beam.runners.portability.fn_api_runner.fn_runner_test",
            "apache_beam.runners.portability.fn_api_runner.translations",
            "apache_beam.runners.portability.fn_api_runner.worker_handlers",
            "apache_beam.runners.portability.job_server",
            "apache_beam.runners.portability.local_job_service",
            "apache_beam.runners.portability.local_job_service_main",
            "apache_beam.runners.portability.local_job_service_test",
            "apache_beam.runners.portability.portable_metrics",
            "apache_beam.runners.portability.portable_runner",
            "apache_beam.runners.portability.portable_runner_test",
            "apache_beam.runners.portability.spark_runner",
            "apache_beam.runners.portability.spark_runner_test",
            "apache_beam.runners.portability.spark_uber_jar_job_server",
            "apache_beam.runners.portability.spark_uber_jar_job_server_test",
            "apache_beam.runners.portability.stager",
            "apache_beam.runners.portability.stager_test",
            "apache_beam.runners.runner",
            "apache_beam.runners.runner_test",
            "apache_beam.runners.sdf_utils",
            "apache_beam.runners.sdf_utils_test",
            "apache_beam.runners.test",
            "apache_beam.runners.worker",
            "apache_beam.runners.worker.bundle_processor",
            "apache_beam.runners.worker.bundle_processor_test",
            "apache_beam.runners.worker.channel_factory",
            "apache_beam.runners.worker.data_plane",
            "apache_beam.runners.worker.data_plane_test",
            "apache_beam.runners.worker.log_handler",
            "apache_beam.runners.worker.log_handler_test",
            "apache_beam.runners.worker.logger",
            "apache_beam.runners.worker.logger_test",
            "apache_beam.runners.worker.opcounters",
            "apache_beam.runners.worker.opcounters_test",
            "apache_beam.runners.worker.operation_specs",
            "apache_beam.runners.worker.operations",
            "apache_beam.runners.worker.sdk_worker",
            "apache_beam.runners.worker.sdk_worker_main",
            "apache_beam.runners.worker.sdk_worker_main_test",
            "apache_beam.runners.worker.sdk_worker_test",
            "apache_beam.runners.worker.sideinputs",
            "apache_beam.runners.worker.sideinputs_test",
            "apache_beam.runners.worker.statecache",
            "apache_beam.runners.worker.statecache_test",
            "apache_beam.runners.worker.statesampler",
            "apache_beam.runners.worker.statesampler_slow",
            "apache_beam.runners.worker.statesampler_test",
            "apache_beam.runners.worker.worker_id_interceptor",
            "apache_beam.runners.worker.worker_id_interceptor_test",
            "apache_beam.runners.worker.worker_pool_main",
            "apache_beam.runners.worker.worker_status",
            "apache_beam.runners.worker.worker_status_test",
            "apache_beam.testing",
            "apache_beam.testing.benchmarks",
            "apache_beam.testing.benchmarks.chicago_taxi",
            "apache_beam.testing.benchmarks.chicago_taxi.preprocess",
            "apache_beam.testing.benchmarks.chicago_taxi.process_tfma",
            "apache_beam.testing.benchmarks.chicago_taxi.setup",
            "apache_beam.testing.benchmarks.chicago_taxi.tfdv_analyze_and_validate",
            "apache_beam.testing.benchmarks.chicago_taxi.trainer",
            "apache_beam.testing.benchmarks.chicago_taxi.trainer.model",
            "apache_beam.testing.benchmarks.chicago_taxi.trainer.task",
            "apache_beam.testing.benchmarks.chicago_taxi.trainer.taxi",
            "apache_beam.testing.benchmarks.nexmark",
            "apache_beam.testing.benchmarks.nexmark.models",
            "apache_beam.testing.benchmarks.nexmark.models.nexmark_model",
            "apache_beam.testing.benchmarks.nexmark.nexmark_launcher",
            "apache_beam.testing.benchmarks.nexmark.nexmark_util",
            "apache_beam.testing.benchmarks.nexmark.queries",
            "apache_beam.testing.benchmarks.nexmark.queries.query0",
            "apache_beam.testing.benchmarks.nexmark.queries.query1",
            "apache_beam.testing.benchmarks.nexmark.queries.query2",
            "apache_beam.testing.datatype_inference",
            "apache_beam.testing.datatype_inference_test",
            "apache_beam.testing.extra_assertions",
            "apache_beam.testing.extra_assertions_test",
            "apache_beam.testing.load_tests",
            "apache_beam.testing.load_tests.co_group_by_key_test",
            "apache_beam.testing.load_tests.combine_test",
            "apache_beam.testing.load_tests.group_by_key_test",
            "apache_beam.testing.load_tests.load_test",
            "apache_beam.testing.load_tests.load_test_metrics_utils",
            "apache_beam.testing.load_tests.pardo_test",
            "apache_beam.testing.load_tests.sideinput_test",
            "apache_beam.testing.load_tests.streaming",
            "apache_beam.testing.load_tests.streaming.group_by_key_streaming_pipeline",
            "apache_beam.testing.load_tests.streaming.group_by_key_streaming_test",
            "apache_beam.testing.metric_result_matchers",
            "apache_beam.testing.metric_result_matchers_test",
            "apache_beam.testing.pipeline_verifiers",
            "apache_beam.testing.pipeline_verifiers_test",
            "apache_beam.testing.synthetic_pipeline",
            "apache_beam.testing.synthetic_pipeline_test",
            "apache_beam.testing.test_pipeline",
            "apache_beam.testing.test_pipeline_test",
            "apache_beam.testing.test_stream",
            "apache_beam.testing.test_stream_it_test",
            "apache_beam.testing.test_stream_service",
            "apache_beam.testing.test_stream_service_test",
            "apache_beam.testing.test_stream_test",
            "apache_beam.testing.test_utils",
            "apache_beam.testing.test_utils_test",
            "apache_beam.testing.util",
            "apache_beam.testing.util_test",
            "apache_beam.tools",
            "apache_beam.tools.coders_microbenchmark",
            "apache_beam.tools.distribution_counter_microbenchmark",
            "apache_beam.tools.fn_api_runner_microbenchmark",
            "apache_beam.tools.map_fn_microbenchmark",
            "apache_beam.tools.microbenchmarks_test",
            "apache_beam.tools.sideinput_microbenchmark",
            "apache_beam.tools.utils",
            "apache_beam.transforms",
            "apache_beam.transforms.combiners",
            "apache_beam.transforms.combiners_test",
            "apache_beam.transforms.core",
            "apache_beam.transforms.create_source",
            "apache_beam.transforms.create_test",
            "apache_beam.transforms.cy_combiners",
            "apache_beam.transforms.dataflow_distribution_counter_test",
            "apache_beam.transforms.deduplicate",
            "apache_beam.transforms.deduplicate_test",
            "apache_beam.transforms.display",
            "apache_beam.transforms.display_test",
            "apache_beam.transforms.dofn_lifecycle_test",
            "apache_beam.transforms.environments",
            "apache_beam.transforms.environments_test",
            "apache_beam.transforms.external",
            "apache_beam.transforms.external_it_test",
            "apache_beam.transforms.external_java",
            "apache_beam.transforms.external_test",
            "apache_beam.transforms.external_test_py3",
            "apache_beam.transforms.external_test_py37",
            "apache_beam.transforms.periodicsequence",
            "apache_beam.transforms.periodicsequence_test",
            "apache_beam.transforms.ptransform",
            "apache_beam.transforms.ptransform_test",
            "apache_beam.transforms.py_dataflow_distribution_counter",
            "apache_beam.transforms.sideinputs",
            "apache_beam.transforms.sideinputs_test",
            "apache_beam.transforms.sql",
            "apache_beam.transforms.sql_test",
            "apache_beam.transforms.stats",
            "apache_beam.transforms.stats_test",
            "apache_beam.transforms.timeutil",
            "apache_beam.transforms.transforms_keyword_only_args_test_py3",
            "apache_beam.transforms.trigger",
            "apache_beam.transforms.trigger_test",
            "apache_beam.transforms.userstate",
            "apache_beam.transforms.userstate_test",
            "apache_beam.transforms.util",
            "apache_beam.transforms.util_test",
            "apache_beam.transforms.validate_runner_xlang_test",
            "apache_beam.transforms.window",
            "apache_beam.transforms.window_test",
            "apache_beam.transforms.write_ptransform_test",
            "apache_beam.typehints",
            "apache_beam.typehints.decorators",
            "apache_beam.typehints.decorators_test",
            "apache_beam.typehints.decorators_test_py3",
            "apache_beam.typehints.native_type_compatibility",
            "apache_beam.typehints.native_type_compatibility_test",
            "apache_beam.typehints.opcodes",
            "apache_beam.typehints.row_type",
            "apache_beam.typehints.schemas",
            "apache_beam.typehints.schemas_test",
            "apache_beam.typehints.trivial_inference",
            "apache_beam.typehints.trivial_inference_test",
            "apache_beam.typehints.trivial_inference_test_py3",
            "apache_beam.typehints.typecheck",
            "apache_beam.typehints.typecheck_test_py3",
            "apache_beam.typehints.typed_pipeline_test",
            "apache_beam.typehints.typed_pipeline_test_py3",
            "apache_beam.typehints.typehints",
            "apache_beam.typehints.typehints_test",
            "apache_beam.typehints.typehints_test_py3",
            "apache_beam.utils",
            "apache_beam.utils.annotations",
            "apache_beam.utils.annotations_test",
            "apache_beam.utils.counters",
            "apache_beam.utils.counters_test",
            "apache_beam.utils.interactive_utils",
            "apache_beam.utils.plugin",
            "apache_beam.utils.processes",
            "apache_beam.utils.processes_test",
            "apache_beam.utils.profiler",
            "apache_beam.utils.proto_utils",
            "apache_beam.utils.retry",
            "apache_beam.utils.retry_test",
            "apache_beam.utils.shared",
            "apache_beam.utils.shared_test",
            "apache_beam.utils.subprocess_server",
            "apache_beam.utils.subprocess_server_test",
            "apache_beam.utils.thread_pool_executor",
            "apache_beam.utils.thread_pool_executor_test",
            "apache_beam.utils.timestamp",
            "apache_beam.utils.timestamp_test",
            "apache_beam.utils.urns",
            "apache_beam.utils.windowed_value",
            "apache_beam.utils.windowed_value_test",
            "apache_beam.version"
        ],
        "version": "2.24.0.2"
    },
    "hops-ipython-sql": {
        "cmdline": [],
        "modules": [
            "sql",
            "sql.column_guesser",
            "sql.connection",
            "sql.magic",
            "sql.parse",
            "sql.run"
        ],
        "version": "0.3.9"
    },
    "hops-petastorm": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.hello_world",
            "examples.hello_world.external_dataset",
            "examples.hello_world.external_dataset.generate_external_dataset",
            "examples.hello_world.external_dataset.python_hello_world",
            "examples.hello_world.external_dataset.pytorch_hello_world",
            "examples.hello_world.external_dataset.tensorflow_hello_world",
            "examples.hello_world.petastorm_dataset",
            "examples.hello_world.petastorm_dataset.generate_petastorm_dataset",
            "examples.hello_world.petastorm_dataset.pyspark_hello_world",
            "examples.hello_world.petastorm_dataset.python_hello_world",
            "examples.hello_world.petastorm_dataset.pytorch_hello_world",
            "examples.hello_world.petastorm_dataset.tensorflow_hello_world",
            "examples.imagenet",
            "examples.imagenet.generate_petastorm_imagenet",
            "examples.imagenet.schema",
            "examples.mnist",
            "examples.mnist.generate_petastorm_mnist",
            "examples.mnist.pytorch_example",
            "examples.mnist.schema",
            "examples.mnist.tests",
            "examples.mnist.tests.conftest",
            "examples.mnist.tests.test_pytorch_mnist",
            "examples.mnist.tests.test_tf_mnist",
            "examples.mnist.tf_example",
            "examples.spark_dataset_converter",
            "examples.spark_dataset_converter.pytorch_converter_example",
            "examples.spark_dataset_converter.tensorflow_converter_example",
            "examples.spark_dataset_converter.utils",
            "petastorm",
            "petastorm.arrow_reader_worker",
            "petastorm.benchmark",
            "petastorm.benchmark.cli",
            "petastorm.benchmark.dummy_reader",
            "petastorm.benchmark.throughput",
            "petastorm.cache",
            "petastorm.codecs",
            "petastorm.compat",
            "petastorm.errors",
            "petastorm.etl",
            "petastorm.etl.dataset_metadata",
            "petastorm.etl.legacy",
            "petastorm.etl.metadata_util",
            "petastorm.etl.petastorm_generate_metadata",
            "petastorm.etl.rowgroup_indexers",
            "petastorm.etl.rowgroup_indexing",
            "petastorm.fs_utils",
            "petastorm.gcsfs_helpers",
            "petastorm.gcsfs_helpers.gcsfs_wrapper",
            "petastorm.generator",
            "petastorm.hdfs",
            "petastorm.hdfs.namenode",
            "petastorm.hdfs.tests",
            "petastorm.hdfs.tests.test_hdfs_namenode",
            "petastorm.local_disk_arrow_table_cache",
            "petastorm.local_disk_cache",
            "petastorm.namedtuple_gt_255_fields",
            "petastorm.ngram",
            "petastorm.predicates",
            "petastorm.py_dict_reader_worker",
            "petastorm.pyarrow_helpers",
            "petastorm.pyarrow_helpers.batching_table_queue",
            "petastorm.pytorch",
            "petastorm.reader",
            "petastorm.reader_impl",
            "petastorm.reader_impl.arrow_table_serializer",
            "petastorm.reader_impl.pickle_serializer",
            "petastorm.reader_impl.pyarrow_serializer",
            "petastorm.reader_impl.pytorch_shuffling_buffer",
            "petastorm.reader_impl.shuffling_buffer",
            "petastorm.selectors",
            "petastorm.spark",
            "petastorm.spark.spark_dataset_converter",
            "petastorm.spark_utils",
            "petastorm.test_util",
            "petastorm.test_util.reader_mock",
            "petastorm.test_util.shuffling_analysis",
            "petastorm.tests",
            "petastorm.tests.bootstrap_test_schema_data",
            "petastorm.tests.conftest",
            "petastorm.tests.generate_dataset_for_legacy_tests",
            "petastorm.tests.tempdir",
            "petastorm.tests.test_arrow_table_serializer",
            "petastorm.tests.test_benchmark",
            "petastorm.tests.test_cache",
            "petastorm.tests.test_codec_compressed_image",
            "petastorm.tests.test_codec_ndarray",
            "petastorm.tests.test_codec_scalar",
            "petastorm.tests.test_common",
            "petastorm.tests.test_copy_dataset",
            "petastorm.tests.test_dataset_metadata",
            "petastorm.tests.test_decode_row",
            "petastorm.tests.test_disk_cache",
            "petastorm.tests.test_end_to_end",
            "petastorm.tests.test_end_to_end_predicates_impl",
            "petastorm.tests.test_fs_utils",
            "petastorm.tests.test_generate_metadata",
            "petastorm.tests.test_metadata_read",
            "petastorm.tests.test_ngram",
            "petastorm.tests.test_ngram_end_to_end",
            "petastorm.tests.test_parquet_reader",
            "petastorm.tests.test_pickle_serializer",
            "petastorm.tests.test_predicates",
            "petastorm.tests.test_pyarrow_serializer",
            "petastorm.tests.test_pytorch_dataloader",
            "petastorm.tests.test_pytorch_utils",
            "petastorm.tests.test_reader",
            "petastorm.tests.test_reader_mock",
            "petastorm.tests.test_reading_legacy_datasets",
            "petastorm.tests.test_run_in_subprocess",
            "petastorm.tests.test_shuffling_buffer",
            "petastorm.tests.test_spark_dataset_converter",
            "petastorm.tests.test_spark_session_cli",
            "petastorm.tests.test_spark_utils",
            "petastorm.tests.test_tf_autograph",
            "petastorm.tests.test_tf_dataset",
            "petastorm.tests.test_tf_utils",
            "petastorm.tests.test_transform",
            "petastorm.tests.test_unischema",
            "petastorm.tests.test_weighted_sampling_reader",
            "petastorm.tf_utils",
            "petastorm.tools",
            "petastorm.tools.copy_dataset",
            "petastorm.tools.spark_session_cli",
            "petastorm.transform",
            "petastorm.unischema",
            "petastorm.utils",
            "petastorm.weighted_sampling_reader",
            "petastorm.workers_pool",
            "petastorm.workers_pool.dummy_pool",
            "petastorm.workers_pool.exec_in_new_process",
            "petastorm.workers_pool.process_pool",
            "petastorm.workers_pool.tests",
            "petastorm.workers_pool.tests.stub_workers",
            "petastorm.workers_pool.tests.test_ventilator",
            "petastorm.workers_pool.tests.test_workers_pool",
            "petastorm.workers_pool.thread_pool",
            "petastorm.workers_pool.ventilator",
            "petastorm.workers_pool.worker_base"
        ],
        "version": "0.9.4"
    },
    "hopsfacets": {
        "cmdline": [],
        "modules": [
            "hopsfacets.version"
        ],
        "version": "0.0.4"
    },
    "hopstools": {
        "cmdline": [],
        "modules": [
            "hopstools",
            "hopstools.tfutils"
        ],
        "version": "0.0.8"
    },
    "hopsworks-cloud-sdk": {
        "cmdline": [],
        "modules": [
            "hops",
            "hops.constants",
            "hops.exceptions",
            "hops.featurestore",
            "hops.featurestore_impl",
            "hops.featurestore_impl.core",
            "hops.featurestore_impl.dao",
            "hops.featurestore_impl.dao.common",
            "hops.featurestore_impl.dao.common.featurestore_entity",
            "hops.featurestore_impl.dao.common.featurestore_metadata",
            "hops.featurestore_impl.dao.datasets",
            "hops.featurestore_impl.dao.datasets.training_dataset",
            "hops.featurestore_impl.dao.featuregroups",
            "hops.featurestore_impl.dao.featuregroups.cached_featuregroup",
            "hops.featurestore_impl.dao.featuregroups.featuregroup",
            "hops.featurestore_impl.dao.featuregroups.on_demand_featuregroup",
            "hops.featurestore_impl.dao.featuregroups.online_featuregroup",
            "hops.featurestore_impl.dao.features",
            "hops.featurestore_impl.dao.features.feature",
            "hops.featurestore_impl.dao.featurestore",
            "hops.featurestore_impl.dao.featurestore.featurestore",
            "hops.featurestore_impl.dao.settings",
            "hops.featurestore_impl.dao.settings.featurestore_settings",
            "hops.featurestore_impl.dao.stats",
            "hops.featurestore_impl.dao.stats.cluster",
            "hops.featurestore_impl.dao.stats.cluster_analysis",
            "hops.featurestore_impl.dao.stats.correlation_matrix",
            "hops.featurestore_impl.dao.stats.correlation_value",
            "hops.featurestore_impl.dao.stats.datapoint",
            "hops.featurestore_impl.dao.stats.descriptive_stats",
            "hops.featurestore_impl.dao.stats.descriptive_stats_metric_value",
            "hops.featurestore_impl.dao.stats.descriptive_stats_metric_values",
            "hops.featurestore_impl.dao.stats.feature_correlation",
            "hops.featurestore_impl.dao.stats.feature_histogram",
            "hops.featurestore_impl.dao.stats.feature_histograms",
            "hops.featurestore_impl.dao.stats.histogram_bin",
            "hops.featurestore_impl.dao.stats.statistics",
            "hops.featurestore_impl.dao.storageconnectors",
            "hops.featurestore_impl.dao.storageconnectors.hopsfs_connector",
            "hops.featurestore_impl.dao.storageconnectors.jdbc_connector",
            "hops.featurestore_impl.dao.storageconnectors.s3_connector",
            "hops.featurestore_impl.exceptions",
            "hops.featurestore_impl.exceptions.exceptions",
            "hops.featurestore_impl.online_featurestore",
            "hops.featurestore_impl.query_planner",
            "hops.featurestore_impl.query_planner.f_query",
            "hops.featurestore_impl.query_planner.fg_query",
            "hops.featurestore_impl.query_planner.fs_query",
            "hops.featurestore_impl.query_planner.logical_query_plan",
            "hops.featurestore_impl.query_planner.query_planner",
            "hops.featurestore_impl.rest",
            "hops.featurestore_impl.rest.rest_rpc",
            "hops.featurestore_impl.util",
            "hops.featurestore_impl.util.fs_utils",
            "hops.featurestore_impl.visualizations",
            "hops.featurestore_impl.visualizations.statistics_plots",
            "hops.job",
            "hops.tests",
            "hops.tests.test_featurestore",
            "hops.util",
            "hops.version"
        ],
        "version": "1.3.0.1"
    },
    "hopt": {
        "cmdline": [],
        "modules": [
            "hopt",
            "hopt.hopt",
            "hopt.keras",
            "hopt.randoms",
            "hopt.utils"
        ],
        "version": "0.2.1"
    },
    "hopy": {
        "cmdline": [],
        "modules": [
            "hopy",
            "hopy.const",
            "hopy.evaluator",
            "hopy.lexer",
            "hopy.parser"
        ],
        "version": "0.0.2"
    },
    "hor2vec": {
        "cmdline": [],
        "modules": [
            "hor2vec"
        ],
        "version": "2.2.1"
    },
    "horace": {
        "cmdline": [],
        "modules": [
            "horace",
            "horace.horace"
        ],
        "version": "0.1.0"
    },
    "horae-app": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.app",
            "horae.app.app",
            "horae.app.tests",
            "horae.app.tests.test_horae",
            "horae.app.tests.tests"
        ],
        "version": "1.0a1"
    },
    "horae-attachments": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.attachments",
            "horae.attachments.attachments",
            "horae.attachments.extenders",
            "horae.attachments.interfaces",
            "horae.attachments.views"
        ],
        "version": "1.0a1"
    },
    "horae-auth": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.auth",
            "horae.auth.auth",
            "horae.auth.events",
            "horae.auth.interfaces",
            "horae.auth.permissions",
            "horae.auth.roles",
            "horae.auth.securitypolicy",
            "horae.auth.utils",
            "horae.auth.viewlets",
            "horae.auth.views",
            "horae.auth.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae-autocomplete": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.autocomplete",
            "horae.autocomplete.fields",
            "horae.autocomplete.interfaces",
            "horae.autocomplete.providers",
            "horae.autocomplete.resource",
            "horae.autocomplete.widgets"
        ],
        "version": "1.0a1"
    },
    "horae-cache": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.cache",
            "horae.cache.cache",
            "horae.cache.interfaces",
            "horae.cache.request",
            "horae.cache.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae-calendar": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.calendar",
            "horae.calendar.interfaces",
            "horae.calendar.resource",
            "horae.calendar.views"
        ],
        "version": "1.0a1"
    },
    "horae-core": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.core",
            "horae.core.configuration",
            "horae.core.container",
            "horae.core.currency",
            "horae.core.deferred",
            "horae.core.idmanager",
            "horae.core.interfaces",
            "horae.core.location",
            "horae.core.service",
            "horae.core.size",
            "horae.core.upgrade",
            "horae.core.utils",
            "horae.core.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae-dashboard": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.dashboard",
            "horae.dashboard.dashboard",
            "horae.dashboard.interfaces",
            "horae.dashboard.latest",
            "horae.dashboard.notification",
            "horae.dashboard.reports",
            "horae.dashboard.resource",
            "horae.dashboard.resources",
            "horae.dashboard.ticketing",
            "horae.dashboard.traversal",
            "horae.dashboard.viewlets",
            "horae.dashboard.views"
        ],
        "version": "1.0a1"
    },
    "horae-datetime": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.datetime",
            "horae.datetime.resource",
            "horae.datetime.widget"
        ],
        "version": "1.0a1"
    },
    "horae-groupselect": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.groupselect",
            "horae.groupselect.field",
            "horae.groupselect.interfaces",
            "horae.groupselect.widgets"
        ],
        "version": "1.0a1"
    },
    "horae-js-jqplot": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.js",
            "horae.js.jqplot",
            "horae.js.jqplot.resource"
        ],
        "version": "1.0.0b2"
    },
    "horae-layout": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.layout",
            "horae.layout.interfaces",
            "horae.layout.layout",
            "horae.layout.navigation",
            "horae.layout.objects",
            "horae.layout.resource",
            "horae.layout.soupselect",
            "horae.layout.table",
            "horae.layout.viewlets",
            "horae.layout.views",
            "horae.layout.widgets"
        ],
        "version": "1.0a1"
    },
    "horae-lifecycle": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.lifecycle",
            "horae.lifecycle.interfaces",
            "horae.lifecycle.latest",
            "horae.lifecycle.lifecycle",
            "horae.lifecycle.viewlets"
        ],
        "version": "1.0a1"
    },
    "horae-notification": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.notification",
            "horae.notification.interfaces",
            "horae.notification.notification",
            "horae.notification.resource",
            "horae.notification.subscription",
            "horae.notification.viewlets",
            "horae.notification.views"
        ],
        "version": "1.0a1"
    },
    "horae-planning": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.planning",
            "horae.planning.calculation",
            "horae.planning.calendaring",
            "horae.planning.catalog",
            "horae.planning.events",
            "horae.planning.execution",
            "horae.planning.extenders",
            "horae.planning.interfaces",
            "horae.planning.notification",
            "horae.planning.permissions",
            "horae.planning.planning",
            "horae.planning.properties",
            "horae.planning.resource",
            "horae.planning.upgrade",
            "horae.planning.viewlets",
            "horae.planning.views"
        ],
        "version": "1.0a1"
    },
    "horae-properties": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.properties",
            "horae.properties.configuration",
            "horae.properties.interfaces",
            "horae.properties.propertied",
            "horae.properties.properties",
            "horae.properties.views",
            "horae.properties.vocabulary",
            "horae.properties.widgets"
        ],
        "version": "1.0a1"
    },
    "horae-reports": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.reports",
            "horae.reports.interfaces",
            "horae.reports.reports",
            "horae.reports.traversal",
            "horae.reports.viewlets",
            "horae.reports.views",
            "horae.reports.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae-resources": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.resources",
            "horae.resources.extenders",
            "horae.resources.interfaces",
            "horae.resources.properties",
            "horae.resources.resources",
            "horae.resources.utils",
            "horae.resources.views",
            "horae.resources.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae-search": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.search",
            "horae.search.catalog",
            "horae.search.interfaces",
            "horae.search.properties",
            "horae.search.search",
            "horae.search.traversal",
            "horae.search.upgrade",
            "horae.search.utils",
            "horae.search.viewlets",
            "horae.search.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae-sphinx-grok": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.sphinx",
            "horae.sphinx.grok"
        ],
        "version": "1.0a1"
    },
    "horae-subscription": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.subscription",
            "horae.subscription.interfaces",
            "horae.subscription.permissions",
            "horae.subscription.subscription",
            "horae.subscription.viewlets"
        ],
        "version": "1.0a1"
    },
    "horae-ticketing": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.ticketing",
            "horae.ticketing.configuration",
            "horae.ticketing.events",
            "horae.ticketing.extenders",
            "horae.ticketing.interfaces",
            "horae.ticketing.properties",
            "horae.ticketing.ticketing",
            "horae.ticketing.user",
            "horae.ticketing.utils",
            "horae.ticketing.viewlets",
            "horae.ticketing.views",
            "horae.ticketing.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae-timeaware": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.timeaware",
            "horae.timeaware.interfaces",
            "horae.timeaware.tests",
            "horae.timeaware.timeaware",
            "horae.timeaware.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae-usersandgroups": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.usersandgroups",
            "horae.usersandgroups.group",
            "horae.usersandgroups.interfaces",
            "horae.usersandgroups.providers",
            "horae.usersandgroups.user",
            "horae.usersandgroups.views"
        ],
        "version": "1.0a1"
    },
    "horae-workflow": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.workflow",
            "horae.workflow.interfaces",
            "horae.workflow.properties",
            "horae.workflow.utils",
            "horae.workflow.views",
            "horae.workflow.vocabulary",
            "horae.workflow.workflow"
        ],
        "version": "1.0a1"
    },
    "horas": {
        "cmdline": [],
        "modules": [
            "horas",
            "horas.horas"
        ],
        "version": "0.0.1a5"
    },
    "horascli": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "horast": {
        "cmdline": [],
        "modules": [
            "horast",
            "horast._logging",
            "horast._version",
            "horast.ast_comments",
            "horast.ast_dosctrings",
            "horast.ast_tools",
            "horast.ast_validator",
            "horast.nodes",
            "horast.parser",
            "horast.token_tools",
            "horast.unparser",
            "test",
            "test.examples",
            "test.test_ast_comments",
            "test.test_ast_tools",
            "test.test_integration",
            "test.test_nodes",
            "test.test_parser_unparser",
            "test.test_setup",
            "test.test_token_tools"
        ],
        "version": "0.4.0"
    },
    "horast-rereleased": {
        "cmdline": [],
        "modules": [
            "horast",
            "horast._logging",
            "horast._version",
            "horast.ast_comments",
            "horast.ast_dosctrings",
            "horast.ast_tools",
            "horast.ast_validator",
            "horast.nodes",
            "horast.parser",
            "horast.token_tools",
            "horast.unparser"
        ],
        "version": "0.4.1"
    },
    "horble-reports": {
        "cmdline": [],
        "modules": [
            "horble_reports",
            "horble_reports.horble_report"
        ],
        "version": "1.0.2"
    },
    "horcruxes": {
        "cmdline": [],
        "modules": [
            "horcruxes",
            "horcruxes.crux",
            "horcruxes.cruxcreator",
            "horcruxes.cruxio",
            "horcruxes.cruxreverser",
            "horcruxes.shamir"
        ],
        "version": "2.7.post2"
    },
    "horde": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horetu": {
        "cmdline": [],
        "modules": [
            "funmap",
            "horetu",
            "horetu._content_type",
            "horetu.annotations",
            "horetu.config",
            "horetu.exceptions",
            "horetu.function",
            "horetu.interfaces",
            "horetu.interfaces._bind",
            "horetu.interfaces._util",
            "horetu.interfaces.cli",
            "horetu.interfaces.config",
            "horetu.interfaces.django",
            "horetu.interfaces.gtk",
            "horetu.interfaces.irc",
            "horetu.interfaces.text",
            "horetu.interfaces.wsgi",
            "horetu.interfaces.wsgi.template_form",
            "horetu.interfaces.wsgi.template_plain",
            "horetu.program",
            "triedict",
            "triedict.test_"
        ],
        "version": "0.4.4"
    },
    "horimote": {
        "cmdline": [],
        "modules": [
            "horimote",
            "horimote.client",
            "horimote.exceptions",
            "horimote.keys"
        ],
        "version": "0.4.1"
    },
    "horizon": {
        "cmdline": [],
        "modules": [],
        "version": "18.6.1"
    },
    "horizon-api-mask": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1.post2"
    },
    "horizon-benchmark-dashboard": {
        "cmdline": [],
        "modules": [
            "benchmark_dashboard",
            "benchmark_dashboard.api",
            "benchmark_dashboard.api.db",
            "benchmark_dashboard.api.db.base",
            "benchmark_dashboard.api.db.deployments",
            "benchmark_dashboard.api.db.tasks",
            "benchmark_dashboard.api.loader",
            "benchmark_dashboard.dashboard",
            "benchmark_dashboard.deployments",
            "benchmark_dashboard.deployments.forms",
            "benchmark_dashboard.deployments.panel",
            "benchmark_dashboard.deployments.tables",
            "benchmark_dashboard.deployments.urls",
            "benchmark_dashboard.deployments.views",
            "benchmark_dashboard.models",
            "benchmark_dashboard.tasks",
            "benchmark_dashboard.tasks.forms",
            "benchmark_dashboard.tasks.panel",
            "benchmark_dashboard.tasks.tables",
            "benchmark_dashboard.tasks.urls",
            "benchmark_dashboard.tasks.utils",
            "benchmark_dashboard.tasks.views",
            "benchmark_dashboard.utils",
            "benchmark_dashboard.utils.async",
            "benchmark_dashboard.utils.rally",
            "benchmark_dashboard.utils.widgets"
        ],
        "version": "1.0.0"
    },
    "horizon-billing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horizon-bsn": {
        "cmdline": [],
        "modules": [],
        "version": "20153.37.4"
    },
    "horizon-cisco-ui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horizon-contrib": {
        "cmdline": [],
        "modules": [],
        "version": "2017.10.0"
    },
    "horizon-hpe-storage-ui": {
        "cmdline": [],
        "modules": [
            "horizon_hpe_storage",
            "horizon_hpe_storage.api",
            "horizon_hpe_storage.api.barbican_api",
            "horizon_hpe_storage.api.cinderClient",
            "horizon_hpe_storage.api.cinderClient.client",
            "horizon_hpe_storage.api.cinderClient.http",
            "horizon_hpe_storage.api.cinder_api",
            "horizon_hpe_storage.api.common",
            "horizon_hpe_storage.api.common.exceptions",
            "horizon_hpe_storage.api.common.http",
            "horizon_hpe_storage.api.hpSSMCclient",
            "horizon_hpe_storage.api.hpSSMCclient.client",
            "horizon_hpe_storage.api.hpSSMCclient.http",
            "horizon_hpe_storage.api.hp_ssmc_api",
            "horizon_hpe_storage.api.keystoneClient",
            "horizon_hpe_storage.api.keystoneClient.client",
            "horizon_hpe_storage.api.keystoneClient.http",
            "horizon_hpe_storage.api.keystone_api",
            "horizon_hpe_storage.overrides",
            "horizon_hpe_storage.storage_panel",
            "horizon_hpe_storage.storage_panel.config",
            "horizon_hpe_storage.storage_panel.config.forms",
            "horizon_hpe_storage.storage_panel.config.software_tests",
            "horizon_hpe_storage.storage_panel.config.software_tests.forms",
            "horizon_hpe_storage.storage_panel.config.software_tests.tables",
            "horizon_hpe_storage.storage_panel.config.software_tests.urls",
            "horizon_hpe_storage.storage_panel.config.software_tests.views",
            "horizon_hpe_storage.storage_panel.config.tables",
            "horizon_hpe_storage.storage_panel.config.urls",
            "horizon_hpe_storage.storage_panel.config.views",
            "horizon_hpe_storage.storage_panel.diags",
            "horizon_hpe_storage.storage_panel.diags.forms",
            "horizon_hpe_storage.storage_panel.diags.tables",
            "horizon_hpe_storage.storage_panel.diags.tabs",
            "horizon_hpe_storage.storage_panel.diags.test_results_tables",
            "horizon_hpe_storage.storage_panel.diags.urls",
            "horizon_hpe_storage.storage_panel.diags.views",
            "horizon_hpe_storage.storage_panel.lun_tool",
            "horizon_hpe_storage.storage_panel.lun_tool.diff_tables",
            "horizon_hpe_storage.storage_panel.lun_tool.forms",
            "horizon_hpe_storage.storage_panel.lun_tool.tables",
            "horizon_hpe_storage.storage_panel.lun_tool.tabs",
            "horizon_hpe_storage.storage_panel.lun_tool.urls",
            "horizon_hpe_storage.storage_panel.lun_tool.views",
            "horizon_hpe_storage.storage_panel.lun_tool.volume_path_tables",
            "horizon_hpe_storage.storage_panel.overview",
            "horizon_hpe_storage.storage_panel.overview.panel",
            "horizon_hpe_storage.storage_panel.overview.tables",
            "horizon_hpe_storage.storage_panel.overview.urls",
            "horizon_hpe_storage.storage_panel.overview.views",
            "horizon_hpe_storage.storage_panel.panel",
            "horizon_hpe_storage.storage_panel.storage_arrays",
            "horizon_hpe_storage.storage_panel.storage_arrays.capability_tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.license_tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.openstack_features_tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.sched_stat_tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.tabs",
            "horizon_hpe_storage.storage_panel.storage_arrays.urls",
            "horizon_hpe_storage.storage_panel.storage_arrays.views",
            "horizon_hpe_storage.storage_panel.tabs",
            "horizon_hpe_storage.storage_panel.urls",
            "horizon_hpe_storage.storage_panel.version",
            "horizon_hpe_storage.storage_panel.views",
            "horizon_hpe_storage.test_engine",
            "horizon_hpe_storage.test_engine.node_test"
        ],
        "version": "2.4.2"
    },
    "horizon-openfoam": {
        "cmdline": [],
        "modules": [
            "horizon_openfoam",
            "horizon_openfoam.dashboard",
            "horizon_openfoam.instances",
            "horizon_openfoam.instances.panel",
            "horizon_openfoam.instances.tables",
            "horizon_openfoam.instances.tabs",
            "horizon_openfoam.instances.urls",
            "horizon_openfoam.instances.utils",
            "horizon_openfoam.instances.views",
            "horizon_openfoam.models",
            "horizon_openfoam.simulations",
            "horizon_openfoam.simulations.panel",
            "horizon_openfoam.simulations.tables",
            "horizon_openfoam.simulations.tests",
            "horizon_openfoam.simulations.urls",
            "horizon_openfoam.simulations.utils",
            "horizon_openfoam.simulations.views",
            "horizon_openfoam.simulations.workflows"
        ],
        "version": "1.0"
    },
    "horizon-overrides-plugin": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "horizon-py": {
        "cmdline": [],
        "modules": [
            "horizon_py",
            "horizon_py.api",
            "horizon_py.deep_horizon",
            "horizon_py.helpers"
        ],
        "version": "0.1.1"
    },
    "horizon-sensu-dashboard": {
        "cmdline": [],
        "modules": [
            "horizon_monitoring",
            "horizon_monitoring.aggregates",
            "horizon_monitoring.aggregates.panel",
            "horizon_monitoring.aggregates.tables",
            "horizon_monitoring.aggregates.urls",
            "horizon_monitoring.aggregates.views",
            "horizon_monitoring.api",
            "horizon_monitoring.api.base",
            "horizon_monitoring.api.kedb",
            "horizon_monitoring.api.sensu",
            "horizon_monitoring.checks",
            "horizon_monitoring.checks.forms",
            "horizon_monitoring.checks.panel",
            "horizon_monitoring.checks.tables",
            "horizon_monitoring.checks.urls",
            "horizon_monitoring.checks.views",
            "horizon_monitoring.clients",
            "horizon_monitoring.clients.panel",
            "horizon_monitoring.clients.tables",
            "horizon_monitoring.clients.urls",
            "horizon_monitoring.clients.views",
            "horizon_monitoring.dashboard",
            "horizon_monitoring.errors",
            "horizon_monitoring.errors.const",
            "horizon_monitoring.errors.forms",
            "horizon_monitoring.errors.panel",
            "horizon_monitoring.errors.tables",
            "horizon_monitoring.errors.urls",
            "horizon_monitoring.errors.views",
            "horizon_monitoring.events",
            "horizon_monitoring.events.forms",
            "horizon_monitoring.events.panel",
            "horizon_monitoring.events.tables",
            "horizon_monitoring.events.tabs",
            "horizon_monitoring.events.urls",
            "horizon_monitoring.events.views",
            "horizon_monitoring.info",
            "horizon_monitoring.info.panel",
            "horizon_monitoring.info.tables",
            "horizon_monitoring.info.urls",
            "horizon_monitoring.info.views",
            "horizon_monitoring.models",
            "horizon_monitoring.stashes",
            "horizon_monitoring.stashes.panel",
            "horizon_monitoring.stashes.tables",
            "horizon_monitoring.stashes.urls",
            "horizon_monitoring.stashes.views",
            "horizon_monitoring.templatetags",
            "horizon_monitoring.templatetags.math",
            "horizon_monitoring.templatetags.tables",
            "horizon_monitoring.templatetags.unit",
            "horizon_monitoring.utils",
            "horizon_monitoring.utils.actions",
            "horizon_monitoring.utils.settings",
            "horizon_monitoring.views",
            "horizon_monitoring.workarounds",
            "horizon_monitoring.workarounds.forms",
            "horizon_monitoring.workarounds.panel",
            "horizon_monitoring.workarounds.tables",
            "horizon_monitoring.workarounds.urls",
            "horizon_monitoring.workarounds.views"
        ],
        "version": "0.0.6"
    },
    "horizonground": {
        "cmdline": [],
        "modules": [
            "horizonground",
            "horizonground.clustering_modification",
            "horizonground.conftest",
            "horizonground.lumfunc_likelihood",
            "horizonground.lumfunc_modeller",
            "horizonground.tests",
            "horizonground.tests.test_clustering_modification",
            "horizonground.tests.test_lumfunc_likelihood",
            "horizonground.tests.test_lumfunc_modeller",
            "horizonground.utils"
        ],
        "version": "0.1.1"
    },
    "horizonjpl": {
        "cmdline": [],
        "modules": [
            "horizon",
            "horizon.config",
            "horizon.interface",
            "horizon.request_handler",
            "horizon.test",
            "horizon.test.test_horizon"
        ],
        "version": "0.1.7"
    },
    "horizonplot": {
        "cmdline": [],
        "modules": [
            "horizonplot"
        ],
        "version": "1.0.7"
    },
    "horizons": {
        "cmdline": [],
        "modules": [
            "horizons",
            "horizons.core",
            "horizons.parse_table"
        ],
        "version": "0.2.2"
    },
    "horizont": {
        "cmdline": [],
        "modules": [
            "horizont",
            "horizont.lda",
            "horizont.metrics",
            "horizont.random",
            "horizont.tests",
            "horizont.tests.base",
            "horizont.tests.test_lda_ap",
            "horizont.tests.test_lda_strips",
            "horizont.tests.test_logistic_normal",
            "horizont.tests.test_metrics",
            "horizont.tests.test_polya_gamma",
            "horizont.tests.test_utils",
            "horizont.utils"
        ],
        "version": "0.0.5"
    },
    "horizontal-compressing": {
        "cmdline": [],
        "modules": [
            "compressing",
            "compressing.compress",
            "compressing.compressing",
            "compressing.compression",
            "compressing.compression.compression",
            "compressing.compression.horizontal_compression",
            "compressing.dot_files",
            "compressing.dot_files.save_dot",
            "compressing.experiments",
            "compressing.experiments.hc_experiments",
            "compressing.graph",
            "compressing.graph.graph",
            "compressing.graph.graph_adapter",
            "compressing.graph.proof_graph",
            "compressing.horizontal_compression",
            "compressing.tests",
            "compressing.tests.test_graph",
            "compressing.tests.test_graph.test_graph",
            "compressing.tests.test_graph.test_graph_adapter",
            "compressing.tests.test_graph.test_proof_graph",
            "compressing.tests.test_visualize",
            "compressing.tests.test_visualize.test_visual_graph",
            "compressing.tests.test_visualize.test_visual_graph_adapter",
            "compressing.tests.test_visualize.test_visual_proof_graph",
            "compressing.util",
            "compressing.util.constants",
            "compressing.util.convert",
            "compressing.visualize",
            "compressing.visualize.visual_graph",
            "compressing.visualize.visual_graph_adapter",
            "compressing.visualize.visual_proof_graph"
        ],
        "version": "0.0.11"
    },
    "horn": {
        "cmdline": [],
        "modules": [
            "horn"
        ],
        "version": "0.01"
    },
    "horn-py": {
        "cmdline": [],
        "modules": [
            "[[ app ]]",
            "[[ app ]].cmds",
            "[[ app ]].config",
            "[[ app ]].config.production",
            "horn",
            "horn.cli",
            "horn.cli.api",
            "horn.cli.model",
            "horn.cli.new",
            "horn.cli.repo",
            "horn.cli.schema",
            "horn.path",
            "horn.tpl",
            "tests",
            "tests.test_swagger",
            "tests.views",
            "tests.views.test_home",
            "tests.views.test_session",
            "tests.views.test_user"
        ],
        "version": "0.6.3"
    },
    "hornbill4p": {
        "cmdline": [],
        "modules": [
            "hornbill4p",
            "hornbill4p.__version__",
            "hornbill4p.client",
            "hornbill4p.hornbill_pb2",
            "hornbill4p.hornbill_pb2_grpc"
        ],
        "version": "0.1.1"
    },
    "hornet": {
        "cmdline": [],
        "modules": [
            "hornet",
            "hornet.hornet",
            "hornet.nest",
            "hornet.tests",
            "hornet.tests.test_hornet"
        ],
        "version": "0.1.1"
    },
    "horno": {
        "cmdline": [],
        "modules": [
            "horno",
            "horno.datos",
            "horno.datos.Colecciones",
            "horno.datos.Configuraciones",
            "horno.datos.Encoding",
            "horno.datos.Encriptacion",
            "horno.datos.Fechas",
            "horno.datos.Frames",
            "horno.datos.Registro",
            "horno.datos.TiposDeDatos",
            "horno.datos.bd",
            "horno.datos.bd.ConexionBases",
            "horno.datos.bd.ConexionBasesExternas",
            "horno.datos.bd.dbfonpy",
            "horno.ui",
            "horno.ui.UIControles",
            "horno.ui.Vistas",
            "horno.utiles",
            "horno.utiles.CSV",
            "horno.utiles.IO",
            "horno.utiles.Logger",
            "horno.utiles.Memoria",
            "horno.utiles.Metricas",
            "horno.utiles.Procesos",
            "horno.utiles.Singleton",
            "horno.web",
            "horno.web.Http",
            "horno.web.Json"
        ],
        "version": "1.0.2.35"
    },
    "hornstone": {
        "cmdline": [],
        "modules": [
            "hornstone",
            "hornstone.alchemy",
            "hornstone.archivefiles",
            "hornstone.base",
            "hornstone.config",
            "hornstone.gitfunc",
            "hornstone.github",
            "hornstone.github.githubdb",
            "hornstone.github.populate",
            "hornstone.github.repoman",
            "hornstone.models",
            "hornstone.models.base",
            "hornstone.models.blog",
            "hornstone.models.celery",
            "hornstone.models.commix",
            "hornstone.models.documents",
            "hornstone.models.rssdata",
            "hornstone.models.usergroup",
            "hornstone.path",
            "hornstone.scrapers",
            "hornstone.scrapers.base",
            "hornstone.scripts",
            "hornstone.scummvm",
            "hornstone.scummvm.compatdevxml",
            "hornstone.scummvm.runproc",
            "hornstone.scummvm.scummvmdb",
            "hornstone.tests",
            "hornstone.tmbnex",
            "hornstone.urlrepo",
            "hornstone.util"
        ],
        "version": "0.1.21"
    },
    "horntell": {
        "cmdline": [],
        "modules": [
            "horntell",
            "horntell.app",
            "horntell.campaign",
            "horntell.card",
            "horntell.errors",
            "horntell.event",
            "horntell.horn",
            "horntell.http",
            "horntell.http.client",
            "horntell.http.request",
            "horntell.http.response",
            "horntell.profile"
        ],
        "version": "0.3.0"
    },
    "hornwitser-factorio-tools": {
        "cmdline": [],
        "modules": [
            "hornwitser.factorio_tools",
            "hornwitser.factorio_tools.desync",
            "hornwitser.factorio_tools.disown",
            "hornwitser.factorio_tools.multi",
            "hornwitser.factorio_tools.parse"
        ],
        "version": "0.0.3"
    },
    "horofns": {
        "cmdline": [],
        "modules": [
            "horofns.utils"
        ],
        "version": "0.1"
    },
    "horology": {
        "cmdline": [],
        "modules": [
            "horology",
            "horology.tformatter",
            "horology.timed_context",
            "horology.timed_decorator",
            "horology.timed_iterable"
        ],
        "version": "1.1.0"
    },
    "horoscoop": {
        "cmdline": [],
        "modules": [
            "horoscoop",
            "horoscoop.main"
        ],
        "version": "0.0.3"
    },
    "horoscope": {
        "cmdline": [],
        "modules": [
            "horoscope",
            "horoscope.pyhoroscope",
            "horoscope.test"
        ],
        "version": "1.0.6"
    },
    "horoscopegenerator": {
        "cmdline": [],
        "modules": [
            "horoscope_generator",
            "horoscope_generator.HoroscopeGenerator"
        ],
        "version": "0.1.8"
    },
    "horoscopy": {
        "cmdline": [],
        "modules": [
            "horoscopy",
            "horoscopy.freqt",
            "horoscopy.math",
            "horoscopy.mcep",
            "horoscopy.utils",
            "horoscopy.version",
            "horoscopy.window"
        ],
        "version": "0.1.0"
    },
    "horovod": {
        "cmdline": [],
        "modules": [
            "horovod",
            "horovod._keras",
            "horovod._keras.callbacks",
            "horovod._keras.elastic",
            "horovod.common",
            "horovod.common.basics",
            "horovod.common.elastic",
            "horovod.common.exceptions",
            "horovod.common.util",
            "horovod.keras",
            "horovod.keras.callbacks",
            "horovod.keras.elastic",
            "horovod.mxnet",
            "horovod.mxnet.functions",
            "horovod.mxnet.mpi_ops",
            "horovod.ray",
            "horovod.ray.driver_service",
            "horovod.ray.elastic",
            "horovod.ray.runner",
            "horovod.runner",
            "horovod.runner.common",
            "horovod.runner.common.service",
            "horovod.runner.common.service.driver_service",
            "horovod.runner.common.service.task_service",
            "horovod.runner.common.util",
            "horovod.runner.common.util.codec",
            "horovod.runner.common.util.config_parser",
            "horovod.runner.common.util.env",
            "horovod.runner.common.util.host_hash",
            "horovod.runner.common.util.hosts",
            "horovod.runner.common.util.network",
            "horovod.runner.common.util.safe_shell_exec",
            "horovod.runner.common.util.secret",
            "horovod.runner.common.util.settings",
            "horovod.runner.common.util.timeout",
            "horovod.runner.common.util.tiny_shell_exec",
            "horovod.runner.driver",
            "horovod.runner.driver.driver_service",
            "horovod.runner.elastic",
            "horovod.runner.elastic.constants",
            "horovod.runner.elastic.discovery",
            "horovod.runner.elastic.driver",
            "horovod.runner.elastic.registration",
            "horovod.runner.elastic.rendezvous",
            "horovod.runner.elastic.settings",
            "horovod.runner.elastic.worker",
            "horovod.runner.gloo_run",
            "horovod.runner.http",
            "horovod.runner.http.http_client",
            "horovod.runner.http.http_server",
            "horovod.runner.js_run",
            "horovod.runner.launch",
            "horovod.runner.mpi_run",
            "horovod.runner.run_task",
            "horovod.runner.task",
            "horovod.runner.task.task_service",
            "horovod.runner.task_fn",
            "horovod.runner.util",
            "horovod.runner.util.cache",
            "horovod.runner.util.lsf",
            "horovod.runner.util.network",
            "horovod.runner.util.remote",
            "horovod.runner.util.threads",
            "horovod.spark",
            "horovod.spark.common",
            "horovod.spark.common._namedtuple_fix",
            "horovod.spark.common.backend",
            "horovod.spark.common.cache",
            "horovod.spark.common.constants",
            "horovod.spark.common.estimator",
            "horovod.spark.common.params",
            "horovod.spark.common.serialization",
            "horovod.spark.common.store",
            "horovod.spark.common.util",
            "horovod.spark.conf",
            "horovod.spark.driver",
            "horovod.spark.driver.driver_service",
            "horovod.spark.driver.host_discovery",
            "horovod.spark.driver.job_id",
            "horovod.spark.driver.mpirun_rsh",
            "horovod.spark.driver.rendezvous",
            "horovod.spark.driver.rsh",
            "horovod.spark.gloo_run",
            "horovod.spark.keras",
            "horovod.spark.keras.bare",
            "horovod.spark.keras.estimator",
            "horovod.spark.keras.optimizer",
            "horovod.spark.keras.remote",
            "horovod.spark.keras.tensorflow",
            "horovod.spark.keras.util",
            "horovod.spark.mpi_run",
            "horovod.spark.runner",
            "horovod.spark.task",
            "horovod.spark.task.gloo_exec_fn",
            "horovod.spark.task.mpirun_exec_fn",
            "horovod.spark.task.task_info",
            "horovod.spark.task.task_service",
            "horovod.spark.torch",
            "horovod.spark.torch.estimator",
            "horovod.spark.torch.remote",
            "horovod.spark.torch.util",
            "horovod.tensorflow",
            "horovod.tensorflow.compression",
            "horovod.tensorflow.elastic",
            "horovod.tensorflow.functions",
            "horovod.tensorflow.keras",
            "horovod.tensorflow.keras.callbacks",
            "horovod.tensorflow.keras.elastic",
            "horovod.tensorflow.mpi_ops",
            "horovod.tensorflow.sync_batch_norm",
            "horovod.tensorflow.util",
            "horovod.torch",
            "horovod.torch.compression",
            "horovod.torch.elastic",
            "horovod.torch.elastic.sampler",
            "horovod.torch.elastic.state",
            "horovod.torch.functions",
            "horovod.torch.mpi_lib",
            "horovod.torch.mpi_lib_impl",
            "horovod.torch.mpi_ops",
            "horovod.torch.optimizer",
            "horovod.torch.sync_batch_norm"
        ],
        "version": "0.20.3"
    },
    "horovod-adasum": {
        "cmdline": [
            "horovodrun"
        ],
        "modules": [
            "horovod",
            "horovod._keras",
            "horovod._keras.callbacks",
            "horovod.common",
            "horovod.common.basics",
            "horovod.common.util",
            "horovod.keras",
            "horovod.keras.callbacks",
            "horovod.mxnet",
            "horovod.mxnet.mpi_ops",
            "horovod.run",
            "horovod.run.common",
            "horovod.run.common.service",
            "horovod.run.common.service.driver_service",
            "horovod.run.common.service.task_service",
            "horovod.run.common.util",
            "horovod.run.common.util.codec",
            "horovod.run.common.util.config_parser",
            "horovod.run.common.util.env",
            "horovod.run.common.util.host_hash",
            "horovod.run.common.util.network",
            "horovod.run.common.util.safe_shell_exec",
            "horovod.run.common.util.secret",
            "horovod.run.common.util.settings",
            "horovod.run.common.util.timeout",
            "horovod.run.driver",
            "horovod.run.driver.driver_service",
            "horovod.run.gloo_run",
            "horovod.run.http",
            "horovod.run.http.http_client",
            "horovod.run.http.http_server",
            "horovod.run.mpi_run",
            "horovod.run.run",
            "horovod.run.run_task",
            "horovod.run.task",
            "horovod.run.task.task_service",
            "horovod.run.task_fn",
            "horovod.run.util",
            "horovod.run.util.cache",
            "horovod.run.util.network",
            "horovod.run.util.threads",
            "horovod.spark",
            "horovod.spark.driver",
            "horovod.spark.driver.driver_service",
            "horovod.spark.driver.job_id",
            "horovod.spark.driver.mpirun_rsh",
            "horovod.spark.task",
            "horovod.spark.task.mpirun_exec_fn",
            "horovod.spark.task.task_service",
            "horovod.tensorflow",
            "horovod.tensorflow.compression",
            "horovod.tensorflow.keras",
            "horovod.tensorflow.keras.callbacks",
            "horovod.tensorflow.mpi_ops",
            "horovod.tensorflow.util",
            "horovod.torch",
            "horovod.torch.compression",
            "horovod.torch.mpi_lib",
            "horovod.torch.mpi_lib_impl",
            "horovod.torch.mpi_ops"
        ],
        "version": "0.18.2"
    },
    "horrible-downloader": {
        "cmdline": [],
        "modules": [
            "HorribleDownloader",
            "HorribleDownloader.cmd",
            "HorribleDownloader.config_manager",
            "HorribleDownloader.parser"
        ],
        "version": "1.1.4"
    },
    "horriblesubs-batch-downloader": {
        "cmdline": [],
        "modules": [
            "horriblesubs_batch_downloader",
            "horriblesubs_batch_downloader.base_scraper",
            "horriblesubs_batch_downloader.episodes_scraper",
            "horriblesubs_batch_downloader.exception",
            "horriblesubs_batch_downloader.setup_logger",
            "horriblesubs_batch_downloader.show_selector",
            "horriblesubs_batch_downloader.shows_scraper",
            "test",
            "test.test_all",
            "test.test_shows_scraper"
        ],
        "version": "0.4.0"
    },
    "horriblesubs-downloader": {
        "cmdline": [],
        "modules": [
            "horriblesubs_downloader",
            "horriblesubs_downloader.downloader",
            "horriblesubs_downloader.error",
            "horriblesubs_downloader.scraper"
        ],
        "version": "1.0.1"
    },
    "horrorshow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horse": {
        "cmdline": [],
        "modules": [
            "horse",
            "horse.bridles",
            "horse.bridles.base",
            "horse.bridles.core",
            "horse.bridles.core.channels",
            "horse.bridles.core.help",
            "horse.bridles.core.uptime",
            "horse.bridles.examples",
            "horse.bridles.examples.persistence",
            "horse.bridles.examples.simple_command",
            "horse.bridles.examples.simple_event",
            "horse.bridles.examples.simple_listener",
            "horse.bridles.examples.simple_webhook",
            "horse.config",
            "horse.database",
            "horse.ext",
            "horse.jockey",
            "horse.models",
            "horse.servers",
            "horse.servers.http",
            "horse.servers.socket",
            "horse.slack",
            "horse.utils",
            "horse.utils.google",
            "horse.utils.google.url",
            "horse.utils.images2gif",
            "horse.utils.imgur"
        ],
        "version": "0.2.17"
    },
    "horse-forecastio": {
        "cmdline": [],
        "modules": [
            "horse_forecastio",
            "horse_forecastio.graphs"
        ],
        "version": "0.1.0"
    },
    "horse-google": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horse-lastfm": {
        "cmdline": [],
        "modules": [
            "horse_lastfm",
            "horse_lastfm.bridles",
            "horse_lastfm.models"
        ],
        "version": "0.1.3"
    },
    "horse-nonsense": {
        "cmdline": [],
        "modules": [
            "horse_nonsense",
            "horse_nonsense.flashy",
            "horse_nonsense.gifs",
            "horse_nonsense.hodor"
        ],
        "version": "0.1.4"
    },
    "horsebot": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "horsejax": {
        "cmdline": [],
        "modules": [
            "horsejax",
            "horsejax.api"
        ],
        "version": "0.1.2"
    },
    "horsemeat": {
        "cmdline": [],
        "modules": [
            "horsemeat",
            "horsemeat.configwrapper",
            "horsemeat.model",
            "horsemeat.model.newsmessage",
            "horsemeat.model.session",
            "horsemeat.model.user",
            "horsemeat.pg",
            "horsemeat.tests",
            "horsemeat.tests.test_configwrapper",
            "horsemeat.version",
            "horsemeat.webapp",
            "horsemeat.webapp.bogusrequest",
            "horsemeat.webapp.dispatcher",
            "horsemeat.webapp.framework_templates",
            "horsemeat.webapp.frameworkhandlers",
            "horsemeat.webapp.handler",
            "horsemeat.webapp.request",
            "horsemeat.webapp.response",
            "horsemeat.webapp.scrubber"
        ],
        "version": "2.21.6"
    },
    "horsephrase": {
        "cmdline": [],
        "modules": [
            "horsephrase",
            "horsephrase._guess_guess",
            "horsephrase._implementation",
            "horsephrase._regen_words"
        ],
        "version": "0.6.0"
    },
    "horseshit": {
        "cmdline": [],
        "modules": [
            "horseshit",
            "horseshit.main",
            "horseshit.version"
        ],
        "version": "0.0.5"
    },
    "horstpdf": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "horton": {
        "cmdline": [],
        "modules": [
            "horton",
            "horton.conway",
            "horton.grid",
            "horton.render",
            "horton.render.pg"
        ],
        "version": "0.1.1"
    },
    "horus": {
        "cmdline": [],
        "modules": [
            "horus",
            "horus.events",
            "horus.exceptions",
            "horus.forms",
            "horus.horus_demo",
            "horus.httpexceptions",
            "horus.interfaces",
            "horus.lib",
            "horus.models",
            "horus.resources",
            "horus.routes",
            "horus.schemas",
            "horus.scripts",
            "horus.scripts.scaffold",
            "horus.strings",
            "horus.tests",
            "horus.tests.models",
            "horus.tests.schemas",
            "horus.tests.test_init",
            "horus.tests.test_integration",
            "horus.tests.test_interfaces",
            "horus.tests.test_models",
            "horus.tests.test_resources",
            "horus.tests.test_schemas",
            "horus.tests.test_views",
            "horus.views",
            "horus.views.admin"
        ],
        "version": "0.9.15"
    },
    "horus-media-client": {
        "cmdline": [],
        "modules": [
            "horus_db",
            "horus_gis",
            "horus_media",
            "horus_media_examples",
            "horus_media_examples.example_strategy"
        ],
        "version": "0.3.3"
    },
    "horusdemodlib": {
        "cmdline": [],
        "modules": [
            "horusdemodlib",
            "horusdemodlib.checksums",
            "horusdemodlib.decoder",
            "horusdemodlib.delegates",
            "horusdemodlib.demod",
            "horusdemodlib.demodstats",
            "horusdemodlib.habitat",
            "horusdemodlib.horusudp",
            "horusdemodlib.payloads",
            "horusdemodlib.uploader"
        ],
        "version": "0.1.20"
    },
    "horuslp": {
        "cmdline": [],
        "modules": [
            "horuslp",
            "horuslp.core",
            "horuslp.core.Constraint",
            "horuslp.core.Metric",
            "horuslp.core.Objective",
            "horuslp.core.ProblemClass",
            "horuslp.core.Variables",
            "horuslp.core.constants",
            "horuslp.core.utils"
        ],
        "version": "0.0.7"
    },
    "horuslp-gurobi": {
        "cmdline": [],
        "modules": [
            "horuslp",
            "horuslp.core",
            "horuslp.core.Constraint",
            "horuslp.core.Metric",
            "horuslp.core.Objective",
            "horuslp.core.ProblemClass",
            "horuslp.core.Variables",
            "horuslp.core.constants",
            "horuslp.core.utils",
            "horuslp_gurobi",
            "horuslp_gurobi.core",
            "horuslp_gurobi.core.Constraint",
            "horuslp_gurobi.core.Metric",
            "horuslp_gurobi.core.Objective",
            "horuslp_gurobi.core.ProblemClass",
            "horuslp_gurobi.core.Variables",
            "horuslp_gurobi.core.constants",
            "horuslp_gurobi.core.utils"
        ],
        "version": "0.0.1"
    },
    "horusner": {
        "cmdline": [],
        "modules": [
            "horusner",
            "horusner.components",
            "horusner.components.bingAPI1",
            "horusner.components.config",
            "horusner.components.core",
            "horusner.components.eval",
            "horusner.components.main",
            "horusner.components.systemlog",
            "horusner.components.translator_test",
            "horusner.definitions",
            "horusner.experiments",
            "horusner.experiments.horus_dt_layer_bkp",
            "horusner.experiments.horus_final_layer",
            "horusner.nn_classifier",
            "horusner.postagger",
            "horusner.postagger.CMUTweetTagger",
            "horusner.resource"
        ],
        "version": "0.1.5"
    },
    "hos": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hos-proto": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hose": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hoshizora": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1a0"
    },
    "hospital": {
        "cmdline": [],
        "modules": [
            "hospital",
            "hospital.api",
            "hospital.assertions",
            "hospital.assertions.http",
            "hospital.assertions.networking",
            "hospital.assertions.packaging",
            "hospital.cli",
            "hospital.core",
            "hospital.healthchecks",
            "hospital.healthchecks.packaging",
            "hospital.healthchecks.predictable",
            "hospital.loading",
            "hospital.pytest_plugin",
            "hospital.utils",
            "hospital.utils.networking",
            "hospital.utils.packaging",
            "hospital.wsgi"
        ],
        "version": "0.9"
    },
    "hospital-logfile-analyzer": {
        "cmdline": [],
        "modules": [
            "hospital_logfile_analyzer",
            "hospital_logfile_analyzer.parsers",
            "hospital_logfile_analyzer.parsers.cloverleaf_parser",
            "hospital_logfile_analyzer.parsers.logfile_parser",
            "hospital_logfile_analyzer.test",
            "hospital_logfile_analyzer.test.test_cloverleaf_parser"
        ],
        "version": "0.1.4"
    },
    "hospitality": {
        "cmdline": [],
        "modules": [],
        "version": "2020.6.dev1"
    },
    "hospitalitydatascience": {
        "cmdline": [],
        "modules": [],
        "version": "2020.6.dev9"
    },
    "hoss": {
        "cmdline": [],
        "modules": [
            "hoss_agent",
            "hoss_agent.base",
            "hoss_agent.conf",
            "hoss_agent.conf.constants",
            "hoss_agent.context",
            "hoss_agent.context.base",
            "hoss_agent.context.contextvars",
            "hoss_agent.context.threadlocal",
            "hoss_agent.contrib",
            "hoss_agent.contrib.async_worker",
            "hoss_agent.instrumentation",
            "hoss_agent.instrumentation.control",
            "hoss_agent.instrumentation.packages",
            "hoss_agent.instrumentation.packages.httpclient_hooks",
            "hoss_agent.instrumentation.packages.urllib3_hooks",
            "hoss_agent.processors",
            "hoss_agent.transport",
            "hoss_agent.transport.base",
            "hoss_agent.transport.exceptions",
            "hoss_agent.transport.http",
            "hoss_agent.transport.http_base",
            "hoss_agent.utils",
            "hoss_agent.utils.buffer_proxy",
            "hoss_agent.utils.bytes_key_to_string",
            "hoss_agent.utils.compat",
            "hoss_agent.utils.encoding",
            "hoss_agent.utils.json_encoder",
            "hoss_agent.utils.logging",
            "hoss_agent.utils.module_import",
            "hoss_agent.utils.read_proxy",
            "hoss_agent.utils.runtime_env",
            "hoss_agent.utils.threading",
            "hoss_agent.version"
        ],
        "version": "1.0.15"
    },
    "host": {
        "cmdline": [],
        "modules": [
            "tphp",
            "tphp.xxx"
        ],
        "version": "0.1.0"
    },
    "host-checker": {
        "cmdline": [],
        "modules": [
            "hostchecker",
            "hostchecker.hostStorage",
            "hostchecker.hostingInfo"
        ],
        "version": "1.0.3"
    },
    "host-manager": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "host-pool": {
        "cmdline": [],
        "modules": [
            "host_pool"
        ],
        "version": "0.2"
    },
    "host-profiler": {
        "cmdline": [
            "runbench"
        ],
        "modules": [
            "host_profiler",
            "host_profiler.bench",
            "host_profiler.benchproc"
        ],
        "version": "0.7"
    },
    "hostage": {
        "cmdline": [],
        "modules": [
            "hostage",
            "hostage.core",
            "hostage.evaluator",
            "hostage.evaluators",
            "hostage.evaluators.base",
            "hostage.evaluators.editor",
            "hostage.evaluators.git",
            "hostage.evaluators.github",
            "hostage.evaluators.gradle",
            "hostage.evaluators.http",
            "hostage.evaluators.playstore",
            "hostage.evaluators.slack",
            "hostage.handlers",
            "hostage.handlers.base"
        ],
        "version": "0.8.1"
    },
    "hostb-client": {
        "cmdline": [
            "hostb_client"
        ],
        "modules": [
            "hostb_client",
            "hostb_client.form",
            "hostb_client.utils"
        ],
        "version": "11"
    },
    "hostblock": {
        "cmdline": [],
        "modules": [
            "hostblock"
        ],
        "version": "0.1.4"
    },
    "hostconf": {
        "cmdline": [],
        "modules": [
            "hostconf",
            "hostconf.backport",
            "hostconf.config_errors",
            "hostconf.configure",
            "hostconf.tests",
            "hostconf.tests.test_configure"
        ],
        "version": "0.2.0"
    },
    "hoster": {
        "cmdline": [],
        "modules": [
            "hoster"
        ],
        "version": "0.0.2"
    },
    "hostery": {
        "cmdline": [
            "hostery"
        ],
        "modules": [
            "hostery",
            "hostery.Connection",
            "hostery.git",
            "hostery.utils"
        ],
        "version": "0.1.4"
    },
    "hostexpand": {
        "cmdline": [],
        "modules": [
            "hostexpand",
            "hostexpand.HostExpander"
        ],
        "version": "1.0.2"
    },
    "hosting-benchmark": {
        "cmdline": [],
        "modules": [
            "hosting_benchmark",
            "hosting_benchmark.benchmark",
            "hosting_benchmark.commands",
            "hosting_benchmark.commands.all",
            "hosting_benchmark.commands.archive",
            "hosting_benchmark.commands.cpu",
            "hosting_benchmark.commands.info",
            "hosting_benchmark.commands.io",
            "hosting_benchmark.commands.mysql",
            "hosting_benchmark.inc",
            "hosting_benchmark.inc.formatters",
            "hosting_benchmark.inc.taxonomies",
            "hosting_benchmark.inc.tools",
            "hosting_benchmark.version",
            "tests"
        ],
        "version": "0.0.6"
    },
    "hostip-info": {
        "cmdline": [],
        "modules": [
            "hostip"
        ],
        "version": "1.0.2"
    },
    "hostlist": {
        "cmdline": [],
        "modules": [
            "hostlist",
            "hostlist.addhost",
            "hostlist.buildfiles",
            "hostlist.cnamelist",
            "hostlist.config",
            "hostlist.daemon",
            "hostlist.dnsvs",
            "hostlist.dnsvs.sync",
            "hostlist.host",
            "hostlist.hostlist",
            "hostlist.output_services"
        ],
        "version": "1.4.4"
    },
    "hostlists": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.6"
    },
    "hostman": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hostmaster": {
        "cmdline": [],
        "modules": [
            "hostmaster"
        ],
        "version": "0.0.1"
    },
    "hostmydocs-client": {
        "cmdline": [],
        "modules": [
            "hostmydocs",
            "hostmydocs.client",
            "hostmydocs.documentation",
            "hostmydocs.serverConfig"
        ],
        "version": "1.0.3"
    },
    "hostname-resolver": {
        "cmdline": [],
        "modules": [
            "hostname_resolver",
            "hostname_resolver.custom_datatypes",
            "hostname_resolver.custom_datatypes.frozentemplate",
            "hostname_resolver.custom_datatypes.gatherunique",
            "hostname_resolver.custom_datatypes.tablemat",
            "hostname_resolver.custom_datatypes.threaded_file_handler",
            "hostname_resolver.reference_data",
            "hostname_resolver.reference_data._constants",
            "hostname_resolver.reference_data._ip_rep",
            "hostname_resolver.reference_data._settings",
            "hostname_resolver.reporter_helper",
            "hostname_resolver.reporter_helper._report_amanager",
            "hostname_resolver.reporter_helper._report_csv",
            "hostname_resolver.reporter_helper._report_single_file",
            "hostname_resolver.reporter_helper._report_zengine"
        ],
        "version": "0.1.0"
    },
    "hostnamed": {
        "cmdline": [
            "hostname-ctrl",
            "hostname-ctrl.py"
        ],
        "modules": [
            "hostnamed",
            "hostnamed.admin",
            "hostnamed.apps",
            "hostnamed.migrations",
            "hostnamed.migrations.0001_initial",
            "hostnamed.models",
            "hostnamed.tests",
            "hostnamed.urls",
            "hostnamed.utils",
            "hostnamed.views"
        ],
        "version": "0.1.5"
    },
    "hostnamegen": {
        "cmdline": [],
        "modules": [
            "hostnamegen",
            "hostnamegen.base",
            "hostnamegen.exceptions",
            "hostnamegen.patterns"
        ],
        "version": "1.0.0"
    },
    "hostnameomatic": {
        "cmdline": [],
        "modules": [
            "hostnameomatic"
        ],
        "version": "0.1.0"
    },
    "hostopen": {
        "cmdline": [],
        "modules": [
            "hostopen",
            "hostopen.arg_handler",
            "hostopen.client",
            "hostopen.server",
            "hostopen.utils"
        ],
        "version": "0.1.1"
    },
    "hostout-centos": {
        "cmdline": [],
        "modules": [
            "hostout",
            "hostout.centos",
            "hostout.centos.fabfile",
            "hostout.centos.tests"
        ],
        "version": "0.1"
    },
    "hostout-cloud": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hostout-overridedeploy": {
        "cmdline": [],
        "modules": [
            "hostout",
            "hostout.overridedeploy",
            "hostout.overridedeploy.fabfile"
        ],
        "version": "1.0.1"
    },
    "hostout-supervisor": {
        "cmdline": [],
        "modules": [
            "hostout",
            "hostout.supervisor",
            "hostout.supervisor.fabfile",
            "hostout.supervisor.tests"
        ],
        "version": "1.0a5"
    },
    "hostout-ubuntu": {
        "cmdline": [],
        "modules": [
            "hostout",
            "hostout.ubuntu",
            "hostout.ubuntu.fabfile",
            "hostout.ubuntu.tests"
        ],
        "version": "1.0a3"
    },
    "hostparse": {
        "cmdline": [],
        "modules": [
            "hostparse",
            "hostparse.hostparse"
        ],
        "version": "0.0.6"
    },
    "hostport": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "hostproof-auth": {
        "cmdline": [],
        "modules": [
            "hostproof_auth",
            "hostproof_auth.auth",
            "hostproof_auth.models",
            "hostproof_auth.urls",
            "hostproof_auth.utils",
            "hostproof_auth.views"
        ],
        "version": "0.1.1"
    },
    "hostray": {
        "cmdline": [],
        "modules": [
            "hostray",
            "hostray.unit_test",
            "hostray.unit_test.base",
            "hostray.unit_test.util",
            "hostray.unit_test.util_orm",
            "hostray.unit_test.util_worker",
            "hostray.unit_test.web",
            "hostray.util",
            "hostray.util.asynccontextmanager",
            "hostray.util.callbacks",
            "hostray.util.constants",
            "hostray.util.dt",
            "hostray.util.dynamic_class_enum",
            "hostray.util.hierarchy_element",
            "hostray.util.localization",
            "hostray.util.logger",
            "hostray.util.orm",
            "hostray.util.orm.access_executor_pool",
            "hostray.util.orm.entity",
            "hostray.util.utils",
            "hostray.util.worker_pool",
            "hostray.util.worker_pool.pool",
            "hostray.util.worker_pool.worker",
            "hostray.web",
            "hostray.web.client",
            "hostray.web.component",
            "hostray.web.component.base",
            "hostray.web.component.default_component",
            "hostray.web.component.optional_component",
            "hostray.web.config_validator",
            "hostray.web.constants",
            "hostray.web.controller",
            "hostray.web.controller.base",
            "hostray.web.controller.db_cusd_controller",
            "hostray.web.controller.default_controller",
            "hostray.web.controller.request_controller",
            "hostray.web.controller.streaming_controller",
            "hostray.web.controller.unittest_controller",
            "hostray.web.controller.web_socket_controller",
            "hostray.web.pack",
            "hostray.web.server"
        ],
        "version": "0.7.5.1"
    },
    "hosts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hostscli": {
        "cmdline": [],
        "modules": [
            "hostscli",
            "hostscli.cli",
            "hostscli.constants",
            "hostscli.errors",
            "hostscli.utils",
            "hostscli.websites",
            "hostscli.websites.cloudflare",
            "hostscli.websites.diply",
            "hostscli.websites.facebook",
            "hostscli.websites.google",
            "hostscli.websites.instagram",
            "hostscli.websites.linkedin",
            "hostscli.websites.list_ads",
            "hostscli.websites.list_malwares",
            "hostscli.websites.list_misc",
            "hostscli.websites.microsoft",
            "hostscli.websites.pintrest",
            "hostscli.websites.plus_google",
            "hostscli.websites.test",
            "hostscli.websites.twitter",
            "hostscli.websites.whatsapp",
            "hostscli.websites.youtube"
        ],
        "version": "1.1.2"
    },
    "hostsctl": {
        "cmdline": [
            "hostsctl"
        ],
        "modules": [
            "hostsctl",
            "hostsctl.core",
            "hostsctl.entries"
        ],
        "version": "0.0.1"
    },
    "hostsed": {
        "cmdline": [
            "hostsed"
        ],
        "modules": [
            "hosts",
            "hosts.editor"
        ],
        "version": "0.3.0"
    },
    "hostsfile": {
        "cmdline": [],
        "modules": [
            "hostsfile"
        ],
        "version": "1.0.2"
    },
    "hostsman": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.5"
    },
    "hostsmgr": {
        "cmdline": [],
        "modules": [
            "hostsmgr",
            "hostsmgr.conditions",
            "hostsmgr.entries",
            "hostsmgr.exceptions",
            "hostsmgr.hostsmgr",
            "tests",
            "tests.test_hostsmgr"
        ],
        "version": "0.2.5"
    },
    "hostspy": {
        "cmdline": [],
        "modules": [
            "hostspy"
        ],
        "version": "0.1"
    },
    "hostswitcher": {
        "cmdline": [],
        "modules": [
            "hostswitcher",
            "hostswitcher.cli",
            "hostswitcher.cli.commands",
            "hostswitcher.cli.commands.combine",
            "hostswitcher.cli.commands.create",
            "hostswitcher.cli.commands.edit",
            "hostswitcher.cli.commands.init",
            "hostswitcher.cli.commands.ls",
            "hostswitcher.cli.commands.rm",
            "hostswitcher.cli.commands.set",
            "hostswitcher.cli.commands.show",
            "hostswitcher.lib",
            "hostswitcher.lib.table",
            "hostswitcher.utils",
            "hostswitcher.utils.file",
            "hostswitcher.utils.logger",
            "hostswitcher.utils.text",
            "hostswitcher.version"
        ],
        "version": "0.0.1b1"
    },
    "hostwinds-tool": {
        "cmdline": [],
        "modules": [
            "hostwinds",
            "hostwinds.alert",
            "hostwinds.entry",
            "hostwinds.entry.alert_command",
            "hostwinds.hostwinds"
        ],
        "version": "1.0.0"
    },
    "hot": {
        "cmdline": [],
        "modules": [
            "hot",
            "hot.lint",
            "hot.shell",
            "hot.tests",
            "hot.tests.fab",
            "hot.tests.script",
            "hot.utils",
            "hot.utils.auth",
            "hot.utils.files",
            "hot.utils.hosts",
            "hot.utils.repo",
            "hot.utils.string",
            "hot.utils.test",
            "hot.utils.timeout",
            "hot.utils.token",
            "hot.utils.yaml"
        ],
        "version": "0.5.9"
    },
    "hot-magnet": {
        "cmdline": [],
        "modules": [
            "handler",
            "handler.magnet_handler",
            "hot_magnet"
        ],
        "version": "0.0.6"
    },
    "hot-recharge": {
        "cmdline": [],
        "modules": [
            "hotrecharge",
            "hotrecharge.HotRecharge"
        ],
        "version": "1.2.0"
    },
    "hot-redis": {
        "cmdline": [],
        "modules": [
            "hot_redis",
            "hot_redis.client",
            "hot_redis.tests",
            "hot_redis.types"
        ],
        "version": "0.3"
    },
    "hotad": {
        "cmdline": [],
        "modules": [
            "hotAD",
            "hotAD.ADfun",
            "hotAD.AutoDiffObject",
            "hotAD.ElementaryFunctions"
        ],
        "version": "0.0.3"
    },
    "hotaru": {
        "cmdline": [],
        "modules": [
            "hotaru",
            "hotaru.console",
            "hotaru.console.application",
            "hotaru.console.base",
            "hotaru.console.clean",
            "hotaru.console.config",
            "hotaru.console.data",
            "hotaru.console.footprint",
            "hotaru.console.history",
            "hotaru.console.output",
            "hotaru.console.peak",
            "hotaru.console.run",
            "hotaru.console.segment",
            "hotaru.console.spike",
            "hotaru.console.status",
            "hotaru.console.test",
            "hotaru.footprint",
            "hotaru.footprint.clean",
            "hotaru.footprint.find",
            "hotaru.footprint.make",
            "hotaru.footprint.reduce",
            "hotaru.footprint.segment",
            "hotaru.footprint.util",
            "hotaru.image",
            "hotaru.image.cor",
            "hotaru.image.filter",
            "hotaru.image.filter.gaussian",
            "hotaru.image.filter.laplace",
            "hotaru.image.filter.neighbor",
            "hotaru.image.load",
            "hotaru.image.mask",
            "hotaru.image.max",
            "hotaru.image.std",
            "hotaru.optimizer",
            "hotaru.optimizer.callback",
            "hotaru.optimizer.input",
            "hotaru.optimizer.prox_nesterov",
            "hotaru.optimizer.prox_optimizer",
            "hotaru.optimizer.regularizer",
            "hotaru.train",
            "hotaru.train.dynamics",
            "hotaru.train.footprint",
            "hotaru.train.model",
            "hotaru.train.spike",
            "hotaru.train.summary",
            "hotaru.train.variance",
            "hotaru.util",
            "hotaru.util.csv",
            "hotaru.util.dataset",
            "hotaru.util.distribute",
            "hotaru.util.gs",
            "hotaru.util.numpy",
            "hotaru.util.pickle",
            "hotaru.util.tfrecord",
            "hotaru.util.tiff",
            "hotaru.version"
        ],
        "version": "3.2.4"
    },
    "hotbits": {
        "cmdline": [],
        "modules": [
            "hotbits"
        ],
        "version": "1.0.1"
    },
    "hotbot": {
        "cmdline": [],
        "modules": [
            "hotbot",
            "hotbot.jsonconf"
        ],
        "version": "1.0.1"
    },
    "hotc": {
        "cmdline": [],
        "modules": [
            "hotc",
            "hotc.main"
        ],
        "version": "2.0.0"
    },
    "hotchocolate": {
        "cmdline": [],
        "modules": [
            "hotchocolate",
            "hotchocolate.builders",
            "hotchocolate.cli",
            "hotchocolate.css",
            "hotchocolate.logging",
            "hotchocolate.markdown",
            "hotchocolate.plugins",
            "hotchocolate.readers",
            "hotchocolate.settings",
            "hotchocolate.site",
            "hotchocolate.templates",
            "hotchocolate.utils"
        ],
        "version": "3.0.1"
    },
    "hotcidr": {
        "cmdline": [],
        "modules": [
            "hotcidr",
            "hotcidr.apply",
            "hotcidr.audit",
            "hotcidr.deleteexpired",
            "hotcidr.fetch",
            "hotcidr.notifyemail",
            "hotcidr.ports",
            "hotcidr.state",
            "hotcidr.test",
            "hotcidr.test.test_expiration",
            "hotcidr.test.test_validation",
            "hotcidr.util",
            "hotcidr.validation"
        ],
        "version": "0.1.0"
    },
    "hotdate": {
        "cmdline": [],
        "modules": [
            "hotdate"
        ],
        "version": "0.4.5"
    },
    "hotdoc": {
        "cmdline": [],
        "modules": [
            "hotdoc",
            "hotdoc.core",
            "hotdoc.core.comment",
            "hotdoc.core.config",
            "hotdoc.core.database",
            "hotdoc.core.exceptions",
            "hotdoc.core.extension",
            "hotdoc.core.formatter",
            "hotdoc.core.inclusions",
            "hotdoc.core.links",
            "hotdoc.core.project",
            "hotdoc.core.symbols",
            "hotdoc.core.tests",
            "hotdoc.core.tests.test_config_parser",
            "hotdoc.core.tests.test_database",
            "hotdoc.core.tests.test_doc_tree",
            "hotdoc.core.tests.test_inclusions",
            "hotdoc.core.tests.test_links",
            "hotdoc.core.tests.test_page",
            "hotdoc.core.tests.test_project",
            "hotdoc.core.tree",
            "hotdoc.extensions",
            "hotdoc.extensions.c",
            "hotdoc.extensions.c.c_extension",
            "hotdoc.extensions.c.clang",
            "hotdoc.extensions.c.clang.cindex",
            "hotdoc.extensions.c.clang.enumerations",
            "hotdoc.extensions.c.utils",
            "hotdoc.extensions.check_since_markers",
            "hotdoc.extensions.check_since_markers.check_since_markers",
            "hotdoc.extensions.dbus",
            "hotdoc.extensions.dbus.dbus_extension",
            "hotdoc.extensions.devhelp",
            "hotdoc.extensions.devhelp.devhelp_extension",
            "hotdoc.extensions.edit_on_github",
            "hotdoc.extensions.edit_on_github.edit_on_github_extension",
            "hotdoc.extensions.gi",
            "hotdoc.extensions.gi.annotation_parser",
            "hotdoc.extensions.gi.flags",
            "hotdoc.extensions.gi.formatter",
            "hotdoc.extensions.gi.gi_extension",
            "hotdoc.extensions.gi.html_templates",
            "hotdoc.extensions.gi.language",
            "hotdoc.extensions.gi.languages",
            "hotdoc.extensions.gi.languages.c",
            "hotdoc.extensions.gi.languages.javascript",
            "hotdoc.extensions.gi.languages.python",
            "hotdoc.extensions.gi.node_cache",
            "hotdoc.extensions.gi.symbols",
            "hotdoc.extensions.gi.test_gi_extension",
            "hotdoc.extensions.gi.transition_scripts",
            "hotdoc.extensions.gi.utils",
            "hotdoc.extensions.git_upload",
            "hotdoc.extensions.git_upload.git_upload_extension",
            "hotdoc.extensions.gst",
            "hotdoc.extensions.gst.gst_extension",
            "hotdoc.extensions.license",
            "hotdoc.extensions.license.license_extension",
            "hotdoc.extensions.search",
            "hotdoc.extensions.search.search_extension",
            "hotdoc.extensions.syntax_highlighting",
            "hotdoc.extensions.syntax_highlighting.syntax_extension",
            "hotdoc.extensions.tags",
            "hotdoc.extensions.tags.tag_extension",
            "hotdoc.hotdoc_dep_printer",
            "hotdoc.parsers",
            "hotdoc.parsers.c_comment_scanner",
            "hotdoc.parsers.cmark_utils",
            "hotdoc.parsers.gtk_doc",
            "hotdoc.parsers.sitemap",
            "hotdoc.parsers.tests",
            "hotdoc.parsers.tests.test_cmark_parser",
            "hotdoc.parsers.tests.test_standalone_parser",
            "hotdoc.run_hotdoc",
            "hotdoc.tests",
            "hotdoc.tests.fixtures",
            "hotdoc.tests.test_hotdoc",
            "hotdoc.utils",
            "hotdoc.utils.configurable",
            "hotdoc.utils.loggable",
            "hotdoc.utils.setup_utils",
            "hotdoc.utils.signals",
            "hotdoc.utils.tests",
            "hotdoc.utils.tests.test_loggable",
            "hotdoc.utils.utils"
        ],
        "version": "0.12.2"
    },
    "hotdoc-python-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_python_extension",
            "hotdoc_python_extension.napoleon",
            "hotdoc_python_extension.napoleon.docstring",
            "hotdoc_python_extension.napoleon.iterators",
            "hotdoc_python_extension.python_doc_parser",
            "hotdoc_python_extension.python_extension",
            "hotdoc_python_extension.python_formatter",
            "hotdoc_python_extension.templates"
        ],
        "version": "0.8.90"
    },
    "hotdog": {
        "cmdline": [],
        "modules": [
            "hotdog",
            "hotdog.BaseDriver",
            "hotdog.BaseElement",
            "hotdog.BaseElements",
            "hotdog.BasePage",
            "hotdog.BaseTest",
            "hotdog.Conditions",
            "hotdog.Config",
            "hotdog.Elements",
            "hotdog.Elements.Checkbox",
            "hotdog.FilePath",
            "hotdog.FindEither",
            "hotdog.Mustard",
            "hotdog.Results",
            "hotdog.Retry",
            "hotdog.TestStep",
            "hotdog.Testcase"
        ],
        "version": "1.7.9"
    },
    "hotel-elasticsearch": {
        "cmdline": [],
        "modules": [
            "hotel_elasticsearch",
            "hotel_elasticsearch.app",
            "hotel_elasticsearch.backup",
            "hotel_elasticsearch.cluster",
            "hotel_elasticsearch.configuration",
            "hotel_elasticsearch.dist_locks",
            "hotel_elasticsearch.dynamodb",
            "hotel_elasticsearch.monitoring",
            "hotel_elasticsearch.service"
        ],
        "version": "0.2.0"
    },
    "hotel-lite": {
        "cmdline": [],
        "modules": [
            "Hotel_Lite.Conexion",
            "Hotel_Lite.Eventos",
            "Hotel_Lite.Facturacion",
            "Hotel_Lite.FuncionesCli",
            "Hotel_Lite.FuncionesCompresion",
            "Hotel_Lite.FuncionesGenericas",
            "Hotel_Lite.FuncionesHab",
            "Hotel_Lite.FuncionesIm",
            "Hotel_Lite.FuncionesImportExport",
            "Hotel_Lite.FuncionesRes",
            "Hotel_Lite.FuncionesServicios",
            "Hotel_Lite.Variables",
            "Hotel_Lite.main"
        ],
        "version": "0.6"
    },
    "hotel-lite-andresperez": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotel-lite-eduardobarbosa": {
        "cmdline": [],
        "modules": [],
        "version": "2"
    },
    "hotel-lite-vf": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hotel-names": {
        "cmdline": [],
        "modules": [
            "hotel_names",
            "hotel_names.hotel_names"
        ],
        "version": "0.0.1"
    },
    "hotelindex": {
        "cmdline": [],
        "modules": [
            "hotelindex",
            "hotelindex.config",
            "hotelindex.crawler",
            "hotelindex.crawler.Wyn88Crawler",
            "hotelindex.utility"
        ],
        "version": "0.17"
    },
    "hotelling": {
        "cmdline": [],
        "modules": [
            "hotelling",
            "hotelling.cli",
            "hotelling.plots",
            "hotelling.stats"
        ],
        "version": "0.4.0"
    },
    "hotellite": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hotfeng-test": {
        "cmdline": [],
        "modules": [
            "hotfeng_test"
        ],
        "version": "1.3.0"
    },
    "hotfilefinder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotfix": {
        "cmdline": [],
        "modules": [
            "hotfix",
            "hotfix.urls",
            "hotfix.utils"
        ],
        "version": "1.0.4"
    },
    "hotfn": {
        "cmdline": [],
        "modules": [
            "hotfn",
            "hotfn.http",
            "hotfn.http.errors",
            "hotfn.http.request",
            "hotfn.http.response",
            "hotfn.http.worker",
            "hotfn.tests",
            "hotfn.tests.data",
            "hotfn.tests.test_request_parser"
        ],
        "version": "0.0.6"
    },
    "hotkeys": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hotline": {
        "cmdline": [],
        "modules": [
            "hotline",
            "hotline.anim",
            "hotline.app",
            "hotline.command",
            "hotline.constant",
            "hotline.context",
            "hotline.contexts",
            "hotline.contexts.bare",
            "hotline.contexts.linux",
            "hotline.contexts.mac",
            "hotline.contexts.maya",
            "hotline.contexts.nuke",
            "hotline.contexts.win",
            "hotline.history",
            "hotline.mode",
            "hotline.renamer",
            "hotline.styles",
            "hotline.tests",
            "hotline.tests.test_renamer",
            "hotline.utils",
            "hotline.vendor",
            "hotline.vendor.Qt",
            "hotline.widgets"
        ],
        "version": "0.7.3"
    },
    "hotmapsdispatch": {
        "cmdline": [],
        "modules": [
            "app",
            "app.modules",
            "app.modules.common",
            "app.modules.common.AD",
            "app.modules.common.AD.F16_input",
            "app.modules.common.AD.F16_input.dat2xlsx",
            "app.modules.common.AD.F16_input.main",
            "app.modules.common.AD.F16_input.static",
            "app.modules.common.AD.F16_input.xlsx2dat",
            "app.modules.common.CM",
            "app.modules.common.CM.CM_TUWdispatch",
            "app.modules.common.CM.CM_TUWdispatch.eng_format",
            "app.modules.common.CM.CM_TUWdispatch.plot_bokeh",
            "app.modules.common.CM.CM_TUWdispatch.preprocessing",
            "app.modules.common.CM.CM_TUWdispatch.run_cm",
            "app.modules.common.CM.CM_TUWdispatch.save_sol_to_json",
            "app.modules.common.CM.CM_TUWdispatch.simpel_dispatch",
            "app.modules.common.FEAT",
            "app.modules.common.FEAT.F16",
            "app.modules.common.FEAT.F16.F_16",
            "app.modules.common.FEAT.F16.F_16_server",
            "app.modules.common.FEAT.F16.imageHTML"
        ],
        "version": "0.0.1"
    },
    "hotmarkup": {
        "cmdline": [],
        "modules": [
            "hotmarkup",
            "hotmarkup.conenction",
            "hotmarkup.file_connection"
        ],
        "version": "0.1.9"
    },
    "hotmic": {
        "cmdline": [],
        "modules": [
            "hotmic",
            "hotmic.polynomials"
        ],
        "version": "0.1.9"
    },
    "hotool": {
        "cmdline": [],
        "modules": [
            "hotool",
            "hotool.Hotool"
        ],
        "version": "0.1.1000"
    },
    "hotot": {
        "cmdline": [],
        "modules": [
            "hotot",
            "hotot.api",
            "hotot.async_client",
            "hotot.client"
        ],
        "version": "0.5.3"
    },
    "hotpatch": {
        "cmdline": [],
        "modules": [
            "hotpatch",
            "hotpatch.cli",
            "hotpatch.cli.hotpatch_cli"
        ],
        "version": "0.0.1"
    },
    "hotpepper": {
        "cmdline": [],
        "modules": [
            "hotpepper",
            "hotpepper.utime"
        ],
        "version": "0.0.2"
    },
    "hotpie": {
        "cmdline": [],
        "modules": [
            "hotpie"
        ],
        "version": "1.0.5"
    },
    "hotplate": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hotpot": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hotpotato": {
        "cmdline": [],
        "modules": [
            "hotpotato",
            "hotpotato.profile",
            "hotpotato.profile.default"
        ],
        "version": "0.1.0"
    },
    "hotpy": {
        "cmdline": [],
        "modules": [
            "hotpy",
            "hotpy.cache",
            "hotpy.csv",
            "hotpy.datetime",
            "hotpy.dic",
            "hotpy.html",
            "hotpy.int",
            "hotpy.json",
            "hotpy.list",
            "hotpy.parallel",
            "hotpy.pprint",
            "hotpy.sh",
            "hotpy.string"
        ],
        "version": "0.0.4"
    },
    "hotqueue": {
        "cmdline": [],
        "modules": [
            "hotqueue"
        ],
        "version": "0.2.8"
    },
    "hotrc": {
        "cmdline": [],
        "modules": [
            "hotrc",
            "hotrc.hotrc",
            "tests",
            "tests.test_hotrc"
        ],
        "version": "0.2.2"
    },
    "hotreload": {
        "cmdline": [],
        "modules": [
            "hotreload",
            "hotreload.reloader"
        ],
        "version": "2020.6.12.15.23.48"
    },
    "hotrod": {
        "cmdline": [],
        "modules": [
            "hotrod"
        ],
        "version": "0.1"
    },
    "hotsoss": {
        "cmdline": [],
        "modules": [
            "hotsoss",
            "hotsoss.crossdispersion",
            "hotsoss.locate_trace",
            "hotsoss.plotting",
            "hotsoss.utils"
        ],
        "version": "0.1.7"
    },
    "hotspot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotspot4windows": {
        "cmdline": [],
        "modules": [
            "hotspot4windows"
        ],
        "version": "1.19.3"
    },
    "hotspotd": {
        "cmdline": [
            "hotspotd"
        ],
        "modules": [
            "hotspotd",
            "hotspotd.cli",
            "hotspotd.main"
        ],
        "version": "0.1.4"
    },
    "hotspots": {
        "cmdline": [],
        "modules": [
            "hotspots",
            "hotspots.atomic_hotspot_calculation",
            "hotspots.calculation",
            "hotspots.data",
            "hotspots.grid_extension",
            "hotspots.hs_docking",
            "hotspots.hs_io",
            "hotspots.hs_pharmacophore",
            "hotspots.hs_utilities",
            "hotspots.pdb_python_api",
            "hotspots.protoss",
            "hotspots.result",
            "hotspots.siena",
            "hotspots.template_strings"
        ],
        "version": "1.0.3"
    },
    "hotstar-m3u8": {
        "cmdline": [],
        "modules": [
            "m3u8",
            "m3u8.mixins",
            "m3u8.model",
            "m3u8.parser",
            "m3u8.protocol"
        ],
        "version": "0.5.5"
    },
    "hotswap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotswappy": {
        "cmdline": [],
        "modules": [
            "hotswappy",
            "hotswappy.hotswappy"
        ],
        "version": "0.0.2"
    },
    "hotsyk": {
        "cmdline": [],
        "modules": [
            "hotsyk",
            "hotsyk.hotsyk",
            "tests",
            "tests.test_hotsyk"
        ],
        "version": "0.1.1"
    },
    "hottamale": {
        "cmdline": [],
        "modules": [
            "hottamale"
        ],
        "version": "0.1.1"
    },
    "hottbox": {
        "cmdline": [],
        "modules": [
            "hottbox",
            "hottbox.algorithms",
            "hottbox.algorithms.classification",
            "hottbox.algorithms.classification.base",
            "hottbox.algorithms.classification.ensemble_learning",
            "hottbox.algorithms.classification.stm",
            "hottbox.algorithms.classification.tests",
            "hottbox.algorithms.classification.tests.test_base",
            "hottbox.algorithms.classification.tests.test_ensemble_learning",
            "hottbox.algorithms.classification.tests.test_stm",
            "hottbox.algorithms.decomposition",
            "hottbox.algorithms.decomposition.base",
            "hottbox.algorithms.decomposition.cpd",
            "hottbox.algorithms.decomposition.fusion",
            "hottbox.algorithms.decomposition.fusion.cmtf",
            "hottbox.algorithms.decomposition.fusion.tests",
            "hottbox.algorithms.decomposition.fusion.tests.test_cmtf",
            "hottbox.algorithms.decomposition.tensor_train",
            "hottbox.algorithms.decomposition.tests",
            "hottbox.algorithms.decomposition.tests.test_base",
            "hottbox.algorithms.decomposition.tests.test_cpd",
            "hottbox.algorithms.decomposition.tests.test_tensor_train",
            "hottbox.algorithms.decomposition.tests.test_tucker",
            "hottbox.algorithms.decomposition.tucker",
            "hottbox.contrib",
            "hottbox.contrib.visualisation",
            "hottbox.core",
            "hottbox.core._meta",
            "hottbox.core.operations",
            "hottbox.core.structures",
            "hottbox.core.tests",
            "hottbox.core.tests.test_meta",
            "hottbox.core.tests.test_operations",
            "hottbox.core.tests.test_structures",
            "hottbox.datasets",
            "hottbox.datasets.synthetic",
            "hottbox.datasets.tests",
            "hottbox.datasets.tests.test_synthetic",
            "hottbox.errors",
            "hottbox.metrics",
            "hottbox.metrics.classification",
            "hottbox.metrics.decomposition",
            "hottbox.metrics.tests",
            "hottbox.metrics.tests.test_decomposition",
            "hottbox.pdtools",
            "hottbox.pdtools.tests",
            "hottbox.pdtools.tests.test_utils",
            "hottbox.pdtools.utils",
            "hottbox.rank",
            "hottbox.rank.rank_estimation",
            "hottbox.rank.tests",
            "hottbox.rank.tests.test_rank_estimation",
            "hottbox.utils",
            "hottbox.utils.generation",
            "hottbox.utils.generation.basic",
            "hottbox.utils.generation.matrices",
            "hottbox.utils.generation.special",
            "hottbox.utils.generation.tensors",
            "hottbox.utils.generation.tests",
            "hottbox.utils.generation.tests.test_basic",
            "hottbox.utils.generation.tests.test_matrices",
            "hottbox.utils.generation.tests.test_special",
            "hottbox.utils.generation.tests.test_tensors",
            "hottbox.utils.validation",
            "hottbox.utils.validation.checks",
            "hottbox.utils.validation.tests",
            "hottbox.utils.validation.tests.test_checks"
        ],
        "version": "0.3.2"
    },
    "hottest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hottie": {
        "cmdline": [],
        "modules": [
            "hottie"
        ],
        "version": "0.1.0"
    },
    "hottings": {
        "cmdline": [],
        "modules": [
            "hottings",
            "hottings.monitors",
            "hottings.version",
            "sample",
            "sample.demo"
        ],
        "version": "0.0.8"
    },
    "hotware": {
        "cmdline": [],
        "modules": [
            "hotware",
            "hotware.cli",
            "hotware.cli.github",
            "hotware.cli.stackoverflow",
            "hotware.github",
            "hotware.stackoverflow",
            "hotware.tools"
        ],
        "version": "0.1.4"
    },
    "hotwatch": {
        "cmdline": [],
        "modules": [
            "hotwatch",
            "hotwatch.cli",
            "hotwatch.query"
        ],
        "version": "0.1.3"
    },
    "hotwater": {
        "cmdline": [],
        "modules": [
            "hotWater",
            "hotWater.atom_type",
            "hotWater.h2o_bind",
            "hotWater.model"
        ],
        "version": "2.6"
    },
    "hotwing-cli": {
        "cmdline": [],
        "modules": [
            "hotwing_cli",
            "hotwing_cli.config_options",
            "hotwing_cli.generate_config",
            "hotwing_cli.main",
            "hotwing_cli.validators"
        ],
        "version": "0.1.0"
    },
    "hotwing-core": {
        "cmdline": [],
        "modules": [
            "hotwing_core",
            "hotwing_core.coordinate",
            "hotwing_core.cutting_strategies",
            "hotwing_core.cutting_strategies.base",
            "hotwing_core.cutting_strategies.cutting_strategy_1",
            "hotwing_core.cutting_strategies.cutting_strategy_2",
            "hotwing_core.cutting_strategies.factory",
            "hotwing_core.gcode",
            "hotwing_core.gcode_formatters",
            "hotwing_core.gcode_formatters.base",
            "hotwing_core.gcode_formatters.debug_formatter",
            "hotwing_core.gcode_formatters.factory",
            "hotwing_core.gcode_formatters.generic",
            "hotwing_core.machine",
            "hotwing_core.panel",
            "hotwing_core.profile",
            "hotwing_core.rib",
            "hotwing_core.surface",
            "hotwing_core.utils"
        ],
        "version": "0.1.0"
    },
    "hotwire": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotword-detection": {
        "cmdline": [
            "checkHotword.py",
            "trainHotword.py"
        ],
        "modules": [
            "hotword_detection",
            "hotword_detection.dtw",
            "hotword_detection.hwDetector",
            "hotword_detection.mfcc",
            "hotword_detection.wordRecorder"
        ],
        "version": "1.2"
    },
    "hotworker": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "hotxlfp": {
        "cmdline": [],
        "modules": [
            "hotxlfp",
            "hotxlfp._compat",
            "hotxlfp._compat.py3",
            "hotxlfp._compat.py3.statistics",
            "hotxlfp.formulas",
            "hotxlfp.formulas.dateandtime",
            "hotxlfp.formulas.engineering",
            "hotxlfp.formulas.error",
            "hotxlfp.formulas.financial",
            "hotxlfp.formulas.information",
            "hotxlfp.formulas.logic",
            "hotxlfp.formulas.lookupandreference",
            "hotxlfp.formulas.mathtrig",
            "hotxlfp.formulas.operators",
            "hotxlfp.formulas.statistical",
            "hotxlfp.formulas.text",
            "hotxlfp.formulas.utils",
            "hotxlfp.grammarparser",
            "hotxlfp.grammarparser.lexer",
            "hotxlfp.grammarparser.parser",
            "hotxlfp.grammarparser.parser_FormulaParser_parsetab",
            "hotxlfp.helper",
            "hotxlfp.helper.cell",
            "hotxlfp.helper.number",
            "hotxlfp.parser",
            "hotxlfp.tinyemitter"
        ],
        "version": "0.0.6"
    },
    "hou-flask": {
        "cmdline": [],
        "modules": [
            "houflask",
            "houflask.auth",
            "houflask.auth.daos",
            "houflask.auth.daos.account_dao",
            "houflask.auth.daos.authentication_dao",
            "houflask.auth.daos.permission_dao",
            "houflask.auth.services",
            "houflask.auth.services.authentication_service",
            "houflask.auth.services.authorization_service",
            "houflask.auth.views",
            "houflask.auth.views.authentication_view",
            "houflask.cache",
            "houflask.connexion",
            "houflask.error_handler",
            "houflask.exceptions",
            "houflask.feature_flag",
            "houflask.feature_flag.daos",
            "houflask.feature_flag.daos.feature_flag_dao",
            "houflask.feature_flag.services",
            "houflask.feature_flag.services.feature_flag_service",
            "houflask.feature_flag.views",
            "houflask.feature_flag.views.feature_flag",
            "houflask.http",
            "houflask.meta",
            "houflask.meta.views",
            "houflask.meta.views.meta",
            "houflask.organization",
            "houflask.organization.daos",
            "houflask.organization.daos.organization_account_dao",
            "houflask.organization.daos.organization_dao",
            "houflask.organization.services",
            "houflask.organization.services.organization_account_service",
            "houflask.organization.services.organization_service",
            "houflask.organization.views",
            "houflask.organization.views.organization",
            "houflask.rapidjson",
            "houflask.test_utils",
            "houflask.test_utils.base_factory",
            "houflask.test_utils.functional_base",
            "tests",
            "tests.functional",
            "tests.functional.account_test",
            "tests.functional.authentication_test",
            "tests.functional.feature_flag_test",
            "tests.functional.meta_test",
            "tests.functional.organization_test",
            "tests.integration",
            "tests.integration.auth",
            "tests.integration.auth.daos",
            "tests.integration.auth.daos.account_dao_test",
            "tests.integration.auth.daos.authentication_dao_test",
            "tests.integration.auth.daos.permission_dao_test",
            "tests.integration.auth.services",
            "tests.integration.auth.services.authentication_service_test",
            "tests.integration.auth.services.permission_dao_test",
            "tests.integration.feature_flag",
            "tests.integration.feature_flag.daos",
            "tests.integration.feature_flag.daos.feature_flag_dao_test",
            "tests.integration.feature_flag.services",
            "tests.integration.feature_flag.utils",
            "tests.integration.feature_flag.views",
            "tests.integration.organization",
            "tests.integration.organization.daos",
            "tests.integration.organization.daos.account_dao_test",
            "tests.integration.organization.daos.organization_dao_test",
            "tests.integration.organization.services",
            "tests.integration.organization.views",
            "tests.unit",
            "tests.unit.auth",
            "tests.unit.auth.authorization_test",
            "tests.unit.connexion_test",
            "tests.unit.error_handlers_test",
            "tests.unit.meta",
            "tests.unit.meta.views",
            "tests.unit.meta.views.meta_test"
        ],
        "version": "0.0.14"
    },
    "hou-flask-psycopg2": {
        "cmdline": [],
        "modules": [
            "hou_flask_psycopg2",
            "hou_flask_psycopg2.exceptions",
            "hou_flask_psycopg2.flask",
            "hou_flask_psycopg2.test_utils",
            "hou_flask_psycopg2.utils"
        ],
        "version": "0.0.7"
    },
    "houa": {
        "cmdline": [],
        "modules": [
            "houa",
            "houa._version",
            "houa.asgi",
            "houa.awsgi",
            "houa.buffer",
            "houa.cache",
            "houa.cli",
            "houa.debug",
            "houa.houa",
            "houa.multipart",
            "houa.pages",
            "houa.request",
            "houa.response"
        ],
        "version": "0.0a1"
    },
    "houder": {
        "cmdline": [],
        "modules": [
            "houder",
            "houder.big",
            "houder.genees",
            "houder.version"
        ],
        "version": "1"
    },
    "houdini": {
        "cmdline": [],
        "modules": [
            "houdini"
        ],
        "version": "0.0.1"
    },
    "houdini-lexers": {
        "cmdline": [],
        "modules": [
            "houdini_lexers",
            "houdini_lexers.vex"
        ],
        "version": "1.2"
    },
    "houdini-py": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hough": {
        "cmdline": [],
        "modules": [
            "hough",
            "hough.analyse",
            "hough.cli",
            "hough.log_utils",
            "hough.rotate",
            "hough.stats",
            "tests",
            "tests.conftest",
            "tests.test_hough"
        ],
        "version": "0.2.5"
    },
    "houkoku": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "houman-distributions": {
        "cmdline": [],
        "modules": [
            "Houman_distributions",
            "Houman_distributions.Binomialdistribution",
            "Houman_distributions.Gaussiandistribution",
            "Houman_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hound": {
        "cmdline": [],
        "modules": [
            "hound",
            "hound.client",
            "hound.snowflake"
        ],
        "version": "1.0.1"
    },
    "hound-dog": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "houndify": {
        "cmdline": [],
        "modules": [
            "houndify",
            "houndify.houndify"
        ],
        "version": "2.0.1"
    },
    "hourbike-cli": {
        "cmdline": [],
        "modules": [
            "hourbike"
        ],
        "version": "1.0"
    },
    "hourcounter": {
        "cmdline": [],
        "modules": [
            "hourcounter",
            "hourcounter.hourcounter"
        ],
        "version": "0.1.7"
    },
    "hourflow": {
        "cmdline": [],
        "modules": [
            "Operation",
            "Operation.operations"
        ],
        "version": "0.2"
    },
    "hourglass": {
        "cmdline": [],
        "modules": [
            "hourglass",
            "hourglass.clock",
            "hourglass.job",
            "hourglass.schedule",
            "hourglass.version"
        ],
        "version": "0.2"
    },
    "hourly": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.14"
    },
    "hoursofoperation": {
        "cmdline": [],
        "modules": [
            "hoursofoperation",
            "hoursofoperation._version",
            "hoursofoperation.lib",
            "hoursofoperation.test",
            "hoursofoperation.test.test_lib"
        ],
        "version": "0.1.12"
    },
    "house": {
        "cmdline": [],
        "modules": [
            "house"
        ],
        "version": "0.1.10"
    },
    "house-hunter": {
        "cmdline": [],
        "modules": [
            "house_hunter",
            "house_hunter.cli",
            "house_hunter.house_hunter"
        ],
        "version": "0.1.0"
    },
    "house-webscraper": {
        "cmdline": [],
        "modules": [
            "house_webscraper"
        ],
        "version": "0.1"
    },
    "housecanary": {
        "cmdline": [],
        "modules": [
            "housecanary",
            "housecanary.apiclient",
            "housecanary.authentication",
            "housecanary.constants",
            "housecanary.excel",
            "housecanary.excel.analytics_data_excel",
            "housecanary.excel.utilities",
            "housecanary.exceptions",
            "housecanary.hc_api_excel_concat",
            "housecanary.hc_api_excel_concat.hc_api_excel_concat",
            "housecanary.hc_api_export",
            "housecanary.hc_api_export.hc_api_export",
            "housecanary.object",
            "housecanary.output",
            "housecanary.requestclient",
            "housecanary.response",
            "housecanary.utilities"
        ],
        "version": "0.7.1"
    },
    "householdenv": {
        "cmdline": [],
        "modules": [
            "household_env",
            "household_env.dummy",
            "household_env.envs",
            "household_env.envs.house_env",
            "household_env.manual_control"
        ],
        "version": "0.0.3"
    },
    "househunt": {
        "cmdline": [],
        "modules": [
            "househunt",
            "househunt.househunt",
            "househunt.searchresults"
        ],
        "version": "0.6.4"
    },
    "housekeeper": {
        "cmdline": [],
        "modules": [
            "housekeeper",
            "housekeeper.archive",
            "housekeeper.cli",
            "housekeeper.cli.add",
            "housekeeper.cli.core",
            "housekeeper.cli.delete",
            "housekeeper.cli.get",
            "housekeeper.cli.include",
            "housekeeper.cli.init",
            "housekeeper.cli.tables",
            "housekeeper.constants",
            "housekeeper.date",
            "housekeeper.exc",
            "housekeeper.files",
            "housekeeper.include",
            "housekeeper.store",
            "housekeeper.store.api",
            "housekeeper.store.api.add",
            "housekeeper.store.api.base",
            "housekeeper.store.api.core",
            "housekeeper.store.api.find",
            "housekeeper.store.api.schema",
            "housekeeper.store.models"
        ],
        "version": "3.0.0"
    },
    "housenumparser": {
        "cmdline": [],
        "modules": [
            "housenumparser",
            "housenumparser.element",
            "housenumparser.merger",
            "housenumparser.reader"
        ],
        "version": "0.1.2"
    },
    "houserock": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "housie": {
        "cmdline": [],
        "modules": [
            "housie",
            "housie.constants",
            "housie.display_util",
            "housie.game",
            "housie.generate_ticket",
            "housie.models",
            "housie.models.board",
            "housie.models.ticket",
            "housie.utils"
        ],
        "version": "0.1.1"
    },
    "houston": {
        "cmdline": [],
        "modules": [
            "houston",
            "houston.cli",
            "houston.controller",
            "houston.files",
            "houston.utils"
        ],
        "version": "0.3.0"
    },
    "houston-client": {
        "cmdline": [],
        "modules": [
            "houston",
            "houston.client",
            "houston.exceptions",
            "houston.interface",
            "houston.plugin",
            "houston.plugin.azure",
            "houston.plugin.gcp",
            "tests",
            "tests.test_azure",
            "tests.test_gcp",
            "tests.test_houston"
        ],
        "version": "1.1.0"
    },
    "houstonj2013-ml": {
        "cmdline": [],
        "modules": [
            "houstonj2013_ml",
            "houstonj2013_ml.KNearestNeighbors",
            "houstonj2013_ml.Kmeans",
            "houstonj2013_ml.Logistic_Regression",
            "houstonj2013_ml.NMF",
            "houstonj2013_ml.ctree",
            "houstonj2013_ml.plot_tree",
            "houstonj2013_ml.roc",
            "houstonj2013_ml.setup",
            "houstonj2013_ml.tree",
            "houstonj2013_ml.tree_v2"
        ],
        "version": "1.0"
    },
    "hover": {
        "cmdline": [],
        "modules": [
            "hover",
            "hover.annotation",
            "hover.evaluation",
            "hover.generation",
            "hover.module_params",
            "hover.proposal",
            "hover.representation",
            "hover.representation.manifold",
            "hover.representation.reduction",
            "hover.representation.trajectory",
            "hover.utils",
            "hover.utils.common_nn",
            "hover.utils.future",
            "hover.utils.prodigy_model",
            "hover.utils.prodigy_recipe",
            "hover.utils.public_dataset",
            "hover.utils.snorkel_helper",
            "hover.utils.torch_helper",
            "hover.utils.visualization",
            "hover.workflow",
            "hover.workflow.subroutine",
            "model_template",
            "tests",
            "tests.conftest",
            "tests.evaluation",
            "tests.fixtures",
            "tests.fixtures.model_for_test",
            "tests.generation",
            "tests.proposal",
            "tests.proposal.test_metric"
        ],
        "version": "0.0.1"
    },
    "hover-ip-updater": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hoverboots": {
        "cmdline": [],
        "modules": [
            "hoverboots",
            "hoverboots.hoverboots"
        ],
        "version": "0.0.1"
    },
    "hovercraft": {
        "cmdline": [],
        "modules": [],
        "version": "2.7"
    },
    "hoverpy": {
        "cmdline": [],
        "modules": [
            "hoverpy",
            "hoverpy.config",
            "hoverpy.decorators",
            "hoverpy.hp",
            "hoverpy.lib",
            "hoverpy.lib.tor",
            "hoverpy.testing"
        ],
        "version": "0.2.2"
    },
    "hoversearch": {
        "cmdline": [],
        "modules": [
            "hoversearch"
        ],
        "version": "0.0.3"
    },
    "hovertools": {
        "cmdline": [],
        "modules": [
            "hovertools",
            "hovertools.actions",
            "hovertools.actions.refresh_action",
            "hovertools.actions.register_action",
            "hovertools.command_line",
            "hovertools.managers",
            "hovertools.managers.docker_manager",
            "hovertools.utils"
        ],
        "version": "0.1.6"
    },
    "how": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "how-long": {
        "cmdline": [],
        "modules": [
            "how_long",
            "how_long.how_long"
        ],
        "version": "0.1.1"
    },
    "how-long-ssk": {
        "cmdline": [],
        "modules": [
            "how_long_ssk",
            "how_long_ssk.how_long"
        ],
        "version": "0.1.3"
    },
    "howabout": {
        "cmdline": [],
        "modules": [
            "howabout",
            "howabout.version"
        ],
        "version": "1.1"
    },
    "howard": {
        "cmdline": [],
        "modules": [
            "howard"
        ],
        "version": "1.12.1"
    },
    "howbig": {
        "cmdline": [
            "howbig"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "howcode": {
        "cmdline": [],
        "modules": [
            "howcode"
        ],
        "version": "0.1.2"
    },
    "howdoi": {
        "cmdline": [],
        "modules": [
            "howdoi",
            "howdoi.howdoi"
        ],
        "version": "2.0.7"
    },
    "howdou": {
        "cmdline": [],
        "modules": [
            "howdou",
            "howdou.howdou",
            "howdou.tests"
        ],
        "version": "3.0.6"
    },
    "howdytest222": {
        "cmdline": [
            "howdytest222"
        ],
        "modules": [
            "howdytest222",
            "howdytest222.BaseWidget",
            "howdytest222._version",
            "howdytest222.all_widgets",
            "howdytest222.host_widget",
            "howdytest222.init",
            "howdytest222.reactopya_serialize",
            "howdytest222.reactopyacolabwidget",
            "howdytest222.reactopyacomponent",
            "howdytest222.reactopyaelectronwidget",
            "howdytest222.reactopyahostedwidget",
            "howdytest222.shellscript",
            "howdytest222.widgets",
            "howdytest222.widgets.HelloWidget",
            "howdytest222.widgets.HelloWidget.HelloWidget"
        ],
        "version": "0.1.0"
    },
    "howfairis": {
        "cmdline": [],
        "modules": [
            "howfairis",
            "howfairis.Checker",
            "howfairis.Compliance",
            "howfairis.Config",
            "howfairis.Platform",
            "howfairis.Readme",
            "howfairis.ReadmeFormat",
            "howfairis.Repo",
            "howfairis.__version__",
            "howfairis.cli",
            "howfairis.mixins",
            "howfairis.mixins.ChecklistMixin",
            "howfairis.mixins.CitationMixin",
            "howfairis.mixins.LicenseMixin",
            "howfairis.mixins.RegistryMixin",
            "howfairis.mixins.RepositoryMixin",
            "howfairis.schema"
        ],
        "version": "0.11.0"
    },
    "howfast-apm": {
        "cmdline": [],
        "modules": [
            "howfast_apm",
            "howfast_apm.config",
            "howfast_apm.core",
            "howfast_apm.flask",
            "howfast_apm.hook_requests",
            "howfast_apm.queue",
            "howfast_apm.runner",
            "howfast_apm.utils"
        ],
        "version": "0.7.0"
    },
    "howfo-frame": {
        "cmdline": [],
        "modules": [
            "howfo",
            "howfo.config",
            "howfo.const",
            "howfo.error",
            "howfo.helpers",
            "howfo.logger",
            "howfo.plugins",
            "howfo.tools"
        ],
        "version": "1.0.1"
    },
    "howiml": {
        "cmdline": [],
        "modules": [
            "howiml",
            "howiml.core",
            "howiml.core_stateful",
            "howiml.utils.analysis",
            "howiml.utils.metrics",
            "howiml.utils.modelFuncs",
            "howiml.utils.models",
            "howiml.utils.optimizes",
            "howiml.utils.plots",
            "howiml.utils.prints",
            "howiml.utils.utilities"
        ],
        "version": "1.0.0"
    },
    "howlermonkey": {
        "cmdline": [],
        "modules": [
            "howlermonkey",
            "howlermonkey.client",
            "howlermonkey.server"
        ],
        "version": "1.0.2"
    },
    "howlong": {
        "cmdline": [],
        "modules": [
            "HowLong",
            "HowLong.HowLong"
        ],
        "version": "0.0.2"
    },
    "howlongtobeat-python-api": {
        "cmdline": [],
        "modules": [
            "hltbapi",
            "hltbapi.HowLongToBeatEntry",
            "hltbapi.HtmlScraper"
        ],
        "version": "0.1.14"
    },
    "howlongtobeatpy": {
        "cmdline": [],
        "modules": [
            "howlongtobeatpy",
            "howlongtobeatpy.HTMLRequests",
            "howlongtobeatpy.HTMLResultParser",
            "howlongtobeatpy.HowLongToBeat",
            "howlongtobeatpy.HowLongToBeatEntry"
        ],
        "version": "0.1.12"
    },
    "howmanypeoplearearound": {
        "cmdline": [],
        "modules": [
            "howmanypeoplearearound",
            "howmanypeoplearearound.analysis",
            "howmanypeoplearearound.colors",
            "howmanypeoplearearound.oui",
            "howmanypeoplearearound.plotlyjs"
        ],
        "version": "0.5.0"
    },
    "howmuchtime": {
        "cmdline": [],
        "modules": [
            "howmuchtime",
            "howmuchtime.hmt"
        ],
        "version": "0.2.0"
    },
    "howoldru": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "howsit": {
        "cmdline": [],
        "modules": [
            "howsit",
            "howsit._version",
            "howsit.main",
            "howsit.parse",
            "howsit.test",
            "howsit.test.self_test",
            "howsit.test.test_parse"
        ],
        "version": "20.6.0"
    },
    "howto": {
        "cmdline": [],
        "modules": [
            "howto",
            "howto.howto"
        ],
        "version": "0.2.2"
    },
    "howto-pypi": {
        "cmdline": [],
        "modules": [
            "howto_pypi",
            "howto_pypi.display"
        ],
        "version": "0.0.6"
    },
    "howtodoinjava-zh": {
        "cmdline": [],
        "modules": [
            "HowtodoinjavaZh",
            "HowtodoinjavaZh.asset",
            "HowtodoinjavaZh.docs",
            "HowtodoinjavaZh.docs.java",
            "HowtodoinjavaZh.docs.java.img",
            "HowtodoinjavaZh.docs.misc1",
            "HowtodoinjavaZh.docs.misc1.img",
            "HowtodoinjavaZh.docs.misc2",
            "HowtodoinjavaZh.docs.misc2.img",
            "HowtodoinjavaZh.docs.spring",
            "HowtodoinjavaZh.docs.spring.img"
        ],
        "version": "2020.9.21.0"
    },
    "howwasde": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.2"
    },
    "hoyahoya": {
        "cmdline": [],
        "modules": [
            "Hoyahoya",
            "Hoyahoya.submarine"
        ],
        "version": "0.001"
    },
    "hp": {
        "cmdline": [],
        "modules": [
            "hp",
            "hp.params",
            "hp.parser",
            "tests",
            "tests.test_params"
        ],
        "version": "0.0.3"
    },
    "hp-darwinpush": {
        "cmdline": [],
        "modules": [
            "darwinpush",
            "darwinpush.client",
            "darwinpush.ftp",
            "darwinpush.listener",
            "darwinpush.messagefactories",
            "darwinpush.messagefactories.xml",
            "darwinpush.messagefactories.xml.ScheduleXMLMessageFactory",
            "darwinpush.messagefactories.xml.TrainStatusXMLMessageFactory",
            "darwinpush.messages",
            "darwinpush.messages.AlarmMessage",
            "darwinpush.messages.AssociationMessage",
            "darwinpush.messages.BaseMessage",
            "darwinpush.messages.DeactivatedMessage",
            "darwinpush.messages.ScheduleMessage",
            "darwinpush.messages.StationMessage",
            "darwinpush.messages.TrackingIdMessage",
            "darwinpush.messages.TrainAlertMessage",
            "darwinpush.messages.TrainOrderMessage",
            "darwinpush.messages.TrainStatusMessage",
            "darwinpush.parser",
            "darwinpush.utils",
            "darwinpush.xb",
            "darwinpush.xb.alm",
            "darwinpush.xb.binding",
            "darwinpush.xb.binding_",
            "darwinpush.xb.ct",
            "darwinpush.xb.fc",
            "darwinpush.xb.pushport",
            "darwinpush.xb.raw",
            "darwinpush.xb.raw.alm",
            "darwinpush.xb.raw.binding",
            "darwinpush.xb.raw.binding_",
            "darwinpush.xb.raw.ct",
            "darwinpush.xb.raw.fc",
            "darwinpush.xb.raw.pushport",
            "darwinpush.xb.raw.sch",
            "darwinpush.xb.raw.sm",
            "darwinpush.xb.raw.status",
            "darwinpush.xb.raw.ta",
            "darwinpush.xb.raw.td",
            "darwinpush.xb.raw.tor",
            "darwinpush.xb.sch",
            "darwinpush.xb.sm",
            "darwinpush.xb.status",
            "darwinpush.xb.ta",
            "darwinpush.xb.td",
            "darwinpush.xb.tor"
        ],
        "version": "0.0.5"
    },
    "hp-money": {
        "cmdline": [],
        "modules": [
            "hp_money",
            "hp_money.amount",
            "hp_money.currency",
            "hp_money.fee_rate",
            "hp_money.forex_rate",
            "tests",
            "tests.test_fee_rate",
            "tests.test_forex_rate",
            "tests.test_money"
        ],
        "version": "1.1.2"
    },
    "hp-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "hp-report-portal": {
        "cmdline": [],
        "modules": [
            "hp_report_portal",
            "hp_report_portal.report_portal"
        ],
        "version": "0.1.0"
    },
    "hp-sdn-client": {
        "cmdline": [],
        "modules": [
            "hpsdnclient",
            "hpsdnclient.api",
            "hpsdnclient.apibase",
            "hpsdnclient.auth",
            "hpsdnclient.core",
            "hpsdnclient.datatypes",
            "hpsdnclient.error",
            "hpsdnclient.net",
            "hpsdnclient.of",
            "hpsdnclient.rest",
            "hpsdnclient.tests",
            "hpsdnclient.tests.base",
            "hpsdnclient.tests.data",
            "hpsdnclient.tests.functional",
            "hpsdnclient.tests.functional.test_coremixin",
            "hpsdnclient.tests.functional.test_netmixin",
            "hpsdnclient.tests.functional.test_ofmixin",
            "hpsdnclient.tests.unit",
            "hpsdnclient.tests.unit.test_apibase",
            "hpsdnclient.tests.unit.test_auth",
            "hpsdnclient.tests.unit.test_client",
            "hpsdnclient.tests.unit.test_datatypes",
            "hpsdnclient.tests.unit.test_errors",
            "hpsdnclient.tests.unit.test_rest",
            "hpsdnclient.tests.unit.test_utils",
            "hpsdnclient.utils",
            "hpsdnclient.version"
        ],
        "version": "1.1.1"
    },
    "hp3478a": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hp3parclient": {
        "cmdline": [],
        "modules": [
            "hp3parclient",
            "hp3parclient.client",
            "hp3parclient.exceptions",
            "hp3parclient.file_client",
            "hp3parclient.http",
            "hp3parclient.ssh",
            "hp3parclient.tcl_parser",
            "test",
            "test.HP3ParClient_base",
            "test.HP3ParMockServer_flask",
            "test.HP3ParMockServer_ssh",
            "test.test_HP3ParClient_CPG",
            "test.test_HP3ParClient_Exception",
            "test.test_HP3ParClient_FilePersona",
            "test.test_HP3ParClient_FilePersona_Mock",
            "test.test_HP3ParClient_HostSet",
            "test.test_HP3ParClient_MockSSH",
            "test.test_HP3ParClient_Stats",
            "test.test_HP3ParClient_VLUN",
            "test.test_HP3ParClient_host",
            "test.test_HP3ParClient_ports",
            "test.test_HP3ParClient_retry",
            "test.test_HP3ParClient_system",
            "test.test_HP3ParClient_volume"
        ],
        "version": "3.3.2"
    },
    "hp54111d": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpa-utils": {
        "cmdline": [],
        "modules": [
            "hpa_utils.hpa_utils"
        ],
        "version": "0.1"
    },
    "hpack": {
        "cmdline": [],
        "modules": [
            "hpack",
            "hpack.exceptions",
            "hpack.hpack",
            "hpack.huffman",
            "hpack.huffman_constants",
            "hpack.huffman_table",
            "hpack.struct",
            "hpack.table"
        ],
        "version": "4.0.0"
    },
    "hpalette": {
        "cmdline": [],
        "modules": [
            "hpalette",
            "hpalette.seas"
        ],
        "version": "0.1.0"
    },
    "hparam": {
        "cmdline": [],
        "modules": [
            "hparam",
            "hparam.Hparam"
        ],
        "version": "0.1.4"
    },
    "hparams": {
        "cmdline": [],
        "modules": [
            "hparams",
            "hparams.hparams"
        ],
        "version": "0.3.0"
    },
    "hpargparse": {
        "cmdline": [
            "hpcli"
        ],
        "modules": [
            "hpargparse",
            "hpargparse.config",
            "hpargparse.hputils",
            "hpargparse.pkginfo"
        ],
        "version": "0.12.0"
    },
    "hpass": {
        "cmdline": [],
        "modules": [
            "hpass",
            "hpass.encryption",
            "hpass.hpass",
            "hpass.hpass_cli"
        ],
        "version": "0.2.1"
    },
    "hpbandster": {
        "cmdline": [],
        "modules": [
            "hpbandster",
            "hpbandster.core",
            "hpbandster.core.base_config_generator",
            "hpbandster.core.base_iteration",
            "hpbandster.core.dispatcher",
            "hpbandster.core.master",
            "hpbandster.core.nameserver",
            "hpbandster.core.result",
            "hpbandster.core.worker",
            "hpbandster.examples",
            "hpbandster.examples.commons",
            "hpbandster.examples.example_1_local_sequential",
            "hpbandster.examples.example_2_local_parallel_threads",
            "hpbandster.examples.example_3_local_parallel_processes",
            "hpbandster.examples.example_4_cluster",
            "hpbandster.examples.example_5_keras_worker",
            "hpbandster.examples.example_5_mnist",
            "hpbandster.examples.example_5_pytorch_worker",
            "hpbandster.examples.example_8_mnist_continued",
            "hpbandster.examples.plot_example_6_analysis",
            "hpbandster.examples.plot_example_7_interactive_plot",
            "hpbandster.optimizers",
            "hpbandster.optimizers.bohb",
            "hpbandster.optimizers.config_generators",
            "hpbandster.optimizers.config_generators.bohb",
            "hpbandster.optimizers.config_generators.h2bo",
            "hpbandster.optimizers.config_generators.kde",
            "hpbandster.optimizers.config_generators.lcnet",
            "hpbandster.optimizers.config_generators.random_sampling",
            "hpbandster.optimizers.h2bo",
            "hpbandster.optimizers.hyperband",
            "hpbandster.optimizers.iterations",
            "hpbandster.optimizers.iterations.successivehalving",
            "hpbandster.optimizers.iterations.successiveresampling",
            "hpbandster.optimizers.kde",
            "hpbandster.optimizers.kde.kernels",
            "hpbandster.optimizers.kde.mvkde",
            "hpbandster.optimizers.lcnet",
            "hpbandster.optimizers.learning_curve_models",
            "hpbandster.optimizers.learning_curve_models.arif",
            "hpbandster.optimizers.learning_curve_models.base",
            "hpbandster.optimizers.learning_curve_models.lcnet",
            "hpbandster.optimizers.randomsearch",
            "hpbandster.utils",
            "hpbandster.visualization",
            "hpbandster.workers",
            "hpbandster.workers.hpolibbenchmark"
        ],
        "version": "0.7.4"
    },
    "hpc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpc-acm": {
        "cmdline": [],
        "modules": [
            "hpc_acm",
            "hpc_acm.api",
            "hpc_acm.api.default_api",
            "hpc_acm.api_client",
            "hpc_acm.configuration",
            "hpc_acm.models",
            "hpc_acm.models.diagnotic_test",
            "hpc_acm.models.event",
            "hpc_acm.models.ip_v4",
            "hpc_acm.models.ip_v6",
            "hpc_acm.models.job",
            "hpc_acm.models.job_state",
            "hpc_acm.models.job_summary",
            "hpc_acm.models.job_type",
            "hpc_acm.models.job_update",
            "hpc_acm.models.mac_address",
            "hpc_acm.models.metrics",
            "hpc_acm.models.metrics_values",
            "hpc_acm.models.node",
            "hpc_acm.models.node_gpu",
            "hpc_acm.models.node_job",
            "hpc_acm.models.node_metadata",
            "hpc_acm.models.node_metadata_compute",
            "hpc_acm.models.node_metadata_network",
            "hpc_acm.models.node_metadata_network_interface",
            "hpc_acm.models.node_metadata_network_ipv4",
            "hpc_acm.models.node_metadata_network_ipv4_ip_address",
            "hpc_acm.models.node_metadata_network_ipv4_subnet",
            "hpc_acm.models.node_metadata_network_ipv6",
            "hpc_acm.models.node_metrics",
            "hpc_acm.models.node_metrics_data",
            "hpc_acm.models.node_metrics_metric_items",
            "hpc_acm.models.node_network",
            "hpc_acm.models.node_registration",
            "hpc_acm.models.node_summary",
            "hpc_acm.models.scheduled_event",
            "hpc_acm.models.scheduled_events",
            "hpc_acm.models.task",
            "hpc_acm.models.task_output",
            "hpc_acm.models.task_result",
            "hpc_acm.models.task_state",
            "hpc_acm.rest",
            "test",
            "test.test_default_api",
            "test.test_diagnotic_test",
            "test.test_event",
            "test.test_ip_v4",
            "test.test_ip_v6",
            "test.test_job",
            "test.test_job_state",
            "test.test_job_summary",
            "test.test_job_type",
            "test.test_job_update",
            "test.test_mac_address",
            "test.test_metrics",
            "test.test_metrics_values",
            "test.test_node",
            "test.test_node_gpu",
            "test.test_node_job",
            "test.test_node_metadata",
            "test.test_node_metadata_compute",
            "test.test_node_metadata_network",
            "test.test_node_metadata_network_interface",
            "test.test_node_metadata_network_ipv4",
            "test.test_node_metadata_network_ipv4_ip_address",
            "test.test_node_metadata_network_ipv4_subnet",
            "test.test_node_metadata_network_ipv6",
            "test.test_node_metrics",
            "test.test_node_metrics_data",
            "test.test_node_metrics_metric_items",
            "test.test_node_network",
            "test.test_node_registration",
            "test.test_node_summary",
            "test.test_scheduled_event",
            "test.test_scheduled_events",
            "test.test_task",
            "test.test_task_output",
            "test.test_task_result",
            "test.test_task_state"
        ],
        "version": "1.3.1"
    },
    "hpc-acm-cli": {
        "cmdline": [],
        "modules": [
            "hpc_acm_cli",
            "hpc_acm_cli.aad",
            "hpc_acm_cli.async_op",
            "hpc_acm_cli.clus",
            "hpc_acm_cli.command",
            "hpc_acm_cli.diag",
            "hpc_acm_cli.easy_config",
            "hpc_acm_cli.main",
            "hpc_acm_cli.main_async",
            "hpc_acm_cli.node",
            "hpc_acm_cli.parser_builder",
            "hpc_acm_cli.utils"
        ],
        "version": "2.8.4"
    },
    "hpc-deploy": {
        "cmdline": [],
        "modules": [
            "hpc-deploy",
            "hpc-deploy.cluster_experiment"
        ],
        "version": "0.0.3"
    },
    "hpc-inspect": {
        "cmdline": [],
        "modules": [
            "hpc_inspect",
            "hpc_inspect.inspector",
            "hpc_inspect.utils"
        ],
        "version": "0.1"
    },
    "hpc-scheduler": {
        "cmdline": [],
        "modules": [
            "hpc_scheduler",
            "hpc_scheduler.scheduler"
        ],
        "version": "0.1.1"
    },
    "hpc05": {
        "cmdline": [],
        "modules": [
            "hpc05",
            "hpc05._static_version",
            "hpc05._version",
            "hpc05.client",
            "hpc05.connect",
            "hpc05.profile",
            "hpc05.ssh_utils",
            "hpc05.utils",
            "hpc05_culler",
            "hpc05_monitor"
        ],
        "version": "2.0.6"
    },
    "hpcbench": {
        "cmdline": [],
        "modules": [
            "hpcbench",
            "hpcbench.api",
            "hpcbench.benchmark",
            "hpcbench.benchmark.babelstream",
            "hpcbench.benchmark.basic",
            "hpcbench.benchmark.custream",
            "hpcbench.benchmark.hpl",
            "hpcbench.benchmark.imb",
            "hpcbench.benchmark.ionvme",
            "hpcbench.benchmark.ior",
            "hpcbench.benchmark.iperf",
            "hpcbench.benchmark.mdtest",
            "hpcbench.benchmark.minigemm",
            "hpcbench.benchmark.nvidia",
            "hpcbench.benchmark.osu",
            "hpcbench.benchmark.shoc",
            "hpcbench.benchmark.standard",
            "hpcbench.benchmark.stream",
            "hpcbench.benchmark.sysbench",
            "hpcbench.campaign",
            "hpcbench.cli",
            "hpcbench.cli.bencsv",
            "hpcbench.cli.bendoc",
            "hpcbench.cli.benelastic",
            "hpcbench.cli.benmerge",
            "hpcbench.cli.bennett",
            "hpcbench.cli.bensh",
            "hpcbench.cli.bentpl",
            "hpcbench.cli.benumb",
            "hpcbench.cli.benwait",
            "hpcbench.driver",
            "hpcbench.driver.base",
            "hpcbench.driver.benchmark",
            "hpcbench.driver.campaign",
            "hpcbench.driver.executor",
            "hpcbench.driver.slurm",
            "hpcbench.export",
            "hpcbench.export.csvexport",
            "hpcbench.export.es",
            "hpcbench.net",
            "hpcbench.report",
            "hpcbench.template",
            "hpcbench.toolbox",
            "hpcbench.toolbox.buildinfo",
            "hpcbench.toolbox.collections_ext",
            "hpcbench.toolbox.contextlib_ext",
            "hpcbench.toolbox.edsl",
            "hpcbench.toolbox.env",
            "hpcbench.toolbox.environment_modules",
            "hpcbench.toolbox.functools_ext",
            "hpcbench.toolbox.loader",
            "hpcbench.toolbox.process",
            "hpcbench.toolbox.slurm",
            "hpcbench.toolbox.slurm.cluster",
            "hpcbench.toolbox.slurm.job",
            "hpcbench.toolbox.spack",
            "tests.benchmark",
            "tests.benchmark.benchmark",
            "tests.benchmark.test_babelstream",
            "tests.benchmark.test_basic",
            "tests.benchmark.test_custream",
            "tests.benchmark.test_hpl",
            "tests.benchmark.test_imb",
            "tests.benchmark.test_ionvme",
            "tests.benchmark.test_ior",
            "tests.benchmark.test_iperf",
            "tests.benchmark.test_mdtest",
            "tests.benchmark.test_minigemm",
            "tests.benchmark.test_nvidia-bandwidthtest",
            "tests.benchmark.test_nvidia-p2pBandwidthLatencyTest",
            "tests.benchmark.test_osu",
            "tests.benchmark.test_shoc",
            "tests.benchmark.test_standard",
            "tests.benchmark.test_stream",
            "tests.benchmark.test_sysbench",
            "tests.toolbox",
            "tests.toolbox.test_buildinfo",
            "tests.toolbox.test_collections_ext",
            "tests.toolbox.test_contextlib_ext",
            "tests.toolbox.test_env",
            "tests.toolbox.test_kwargsql",
            "tests.toolbox.test_process",
            "tests.toolbox.test_slurm"
        ],
        "version": "0.11"
    },
    "hpcc-i-spark": {
        "cmdline": [],
        "modules": [
            "hpcc_i_spark",
            "hpcc_i_spark.cli",
            "hpcc_i_spark.find_record_structure",
            "hpcc_i_spark.get_content",
            "tests",
            "tests.test_hpcc_i_spark"
        ],
        "version": "0.1.1"
    },
    "hpccm": {
        "cmdline": [],
        "modules": [
            "hpccm",
            "hpccm.Stage",
            "hpccm.base_object",
            "hpccm.building_blocks",
            "hpccm.building_blocks.amgx",
            "hpccm.building_blocks.apt_get",
            "hpccm.building_blocks.arm_allinea_studio",
            "hpccm.building_blocks.base",
            "hpccm.building_blocks.boost",
            "hpccm.building_blocks.catalyst",
            "hpccm.building_blocks.cgns",
            "hpccm.building_blocks.charm",
            "hpccm.building_blocks.cmake",
            "hpccm.building_blocks.conda",
            "hpccm.building_blocks.fftw",
            "hpccm.building_blocks.gdrcopy",
            "hpccm.building_blocks.generic_autotools",
            "hpccm.building_blocks.generic_build",
            "hpccm.building_blocks.generic_cmake",
            "hpccm.building_blocks.gnu",
            "hpccm.building_blocks.hdf5",
            "hpccm.building_blocks.hpcx",
            "hpccm.building_blocks.intel_mpi",
            "hpccm.building_blocks.intel_psxe",
            "hpccm.building_blocks.intel_psxe_runtime",
            "hpccm.building_blocks.julia",
            "hpccm.building_blocks.knem",
            "hpccm.building_blocks.kokkos",
            "hpccm.building_blocks.libsim",
            "hpccm.building_blocks.llvm",
            "hpccm.building_blocks.magma",
            "hpccm.building_blocks.mkl",
            "hpccm.building_blocks.mlnx_ofed",
            "hpccm.building_blocks.mpich",
            "hpccm.building_blocks.multi_ofed",
            "hpccm.building_blocks.mvapich2",
            "hpccm.building_blocks.mvapich2_gdr",
            "hpccm.building_blocks.nccl",
            "hpccm.building_blocks.netcdf",
            "hpccm.building_blocks.nsight_systems",
            "hpccm.building_blocks.nvhpc",
            "hpccm.building_blocks.nvshmem",
            "hpccm.building_blocks.ofed",
            "hpccm.building_blocks.openblas",
            "hpccm.building_blocks.openmpi",
            "hpccm.building_blocks.packages",
            "hpccm.building_blocks.pgi",
            "hpccm.building_blocks.pip",
            "hpccm.building_blocks.pmix",
            "hpccm.building_blocks.pnetcdf",
            "hpccm.building_blocks.python",
            "hpccm.building_blocks.scif",
            "hpccm.building_blocks.sensei",
            "hpccm.building_blocks.slurm_pmi2",
            "hpccm.building_blocks.ucx",
            "hpccm.building_blocks.xpmem",
            "hpccm.building_blocks.yum",
            "hpccm.cli",
            "hpccm.common",
            "hpccm.config",
            "hpccm.primitives",
            "hpccm.primitives.baseimage",
            "hpccm.primitives.blob",
            "hpccm.primitives.comment",
            "hpccm.primitives.copy",
            "hpccm.primitives.environment",
            "hpccm.primitives.label",
            "hpccm.primitives.raw",
            "hpccm.primitives.runscript",
            "hpccm.primitives.shell",
            "hpccm.primitives.user",
            "hpccm.primitives.workdir",
            "hpccm.recipe",
            "hpccm.templates",
            "hpccm.templates.CMakeBuild",
            "hpccm.templates.ConfigureMake",
            "hpccm.templates.annotate",
            "hpccm.templates.downloader",
            "hpccm.templates.envvars",
            "hpccm.templates.git",
            "hpccm.templates.ldconfig",
            "hpccm.templates.rm",
            "hpccm.templates.sed",
            "hpccm.templates.tar",
            "hpccm.templates.wget",
            "hpccm.templates.zipfile",
            "hpccm.toolchain",
            "hpccm.version"
        ],
        "version": "20.9.0"
    },
    "hpcdo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpcflow": {
        "cmdline": [],
        "modules": [
            "hpcflow",
            "hpcflow._version",
            "hpcflow.api",
            "hpcflow.archive",
            "hpcflow.archive.archive",
            "hpcflow.archive.cloud",
            "hpcflow.archive.cloud.cloud",
            "hpcflow.archive.cloud.errors",
            "hpcflow.archive.cloud.providers",
            "hpcflow.archive.cloud.providers.dropbox",
            "hpcflow.archive.errors",
            "hpcflow.base_db",
            "hpcflow.cli",
            "hpcflow.config",
            "hpcflow.copytree",
            "hpcflow.errors",
            "hpcflow.init_db",
            "hpcflow.models",
            "hpcflow.nesting",
            "hpcflow.profiles",
            "hpcflow.project",
            "hpcflow.scheduler",
            "hpcflow.utils",
            "hpcflow.validation",
            "hpcflow.variables"
        ],
        "version": "0.1.11"
    },
    "hpcheck": {
        "cmdline": [],
        "modules": [
            "hpcheck",
            "hpcheck.check"
        ],
        "version": "0.0.8"
    },
    "hpcli": {
        "cmdline": [
            "hpcli"
        ],
        "modules": [
            "hpcli",
            "hpcli.hpclilib",
            "hpcli.hpclilib.common",
            "hpcli.hpclilib.docker",
            "hpcli.hpclilib.ipython_generate",
            "hpcli.hpclilib.login",
            "hpcli.hpclilib.templates",
            "hpcli.hpclilib.upload",
            "hpcli.sdk.auth",
            "hpcli.sdk.base",
            "hpcli.sdk.common",
            "hpcli.sdk.microservice_defn",
            "hpcli.sdk.microservice_manager"
        ],
        "version": "0.9.1"
    },
    "hpcloud-auth-openstack": {
        "cmdline": [],
        "modules": [
            "hpcloud_auth_openstack",
            "hpcloud_auth_openstack.plugin"
        ],
        "version": "1.0"
    },
    "hpcloud-client": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpcm": {
        "cmdline": [],
        "modules": [
            "hpcm",
            "hpcm.hpcm"
        ],
        "version": "0.2.1"
    },
    "hpcplot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpcprocinfo": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hpcsubway": {
        "cmdline": [],
        "modules": [
            "subway",
            "subway.bootstrap",
            "subway.cli",
            "subway.components",
            "subway.components.genfiles",
            "subway.components.slurmoo",
            "subway.config",
            "subway.cons",
            "subway.entry",
            "subway.examples",
            "subway.examples.rgdslurm",
            "subway.examples.rglocal",
            "subway.examples.rgslurm",
            "subway.exceptions",
            "subway.framework",
            "subway.htree",
            "subway.plugins",
            "subway.plugins.debug",
            "subway.plugins.dslurm",
            "subway.plugins.slurm",
            "subway.plugins.sslurm",
            "subway.utils",
            "subway.workflow"
        ],
        "version": "0.0.2"
    },
    "hpctoolkit-dataframe": {
        "cmdline": [],
        "modules": [
            "hpctoolkit_dataframe",
            "hpctoolkit_dataframe._version",
            "hpctoolkit_dataframe.hpctoolkit_dataframe"
        ],
        "version": "0.2.0"
    },
    "hpd": {
        "cmdline": [],
        "modules": [
            "hplda",
            "hplda.data_preproc"
        ],
        "version": "0.3"
    },
    "hpd-20": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hpd20": {
        "cmdline": [],
        "modules": [
            "hpd20",
            "hpd20.chain",
            "hpd20.ethnic_scales",
            "hpd20.hpd20",
            "hpd20.hpd20wx",
            "hpd20.instrumentname",
            "hpd20.kit",
            "hpd20.melodypadpattern",
            "hpd20.memoryops",
            "hpd20.memoryops_unittests",
            "hpd20.pad",
            "hpd20.ratios",
            "hpd20.read_scl",
            "hpd20.scaledialog",
            "hpd20.scales",
            "hpd20.scales_unittests"
        ],
        "version": "0.0.9"
    },
    "hpdf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpdr": {
        "cmdline": [],
        "modules": [
            "hpdr",
            "hpdr.api",
            "hpdr.enums",
            "hpdr.models",
            "hpdr.parse",
            "hpdr.utils",
            "tests",
            "tests.test_all",
            "tests.test_large",
            "tests.test_parse",
            "tests.test_steps"
        ],
        "version": "1.0.0"
    },
    "hpe3par-sdk": {
        "cmdline": [],
        "modules": [
            "hpe3par_sdk",
            "hpe3par_sdk.client",
            "hpe3par_sdk.exceptions",
            "hpe3par_sdk.models",
            "test",
            "test.HPE3ParClient_base",
            "test.HPE3ParMockServer_flask",
            "test.HPE3ParMockServer_ssh",
            "test.test_HPE3ParClient_CPG",
            "test.test_HPE3ParClient_Exception",
            "test.test_HPE3ParClient_FilePersona",
            "test.test_HPE3ParClient_FilePersona_Mock",
            "test.test_HPE3ParClient_HostSet",
            "test.test_HPE3ParClient_MockSSH",
            "test.test_HPE3ParClient_Stats",
            "test.test_HPE3ParClient_VLUN",
            "test.test_HPE3ParClient_host",
            "test.test_HPE3ParClient_ports",
            "test.test_HPE3ParClient_retry",
            "test.test_HPE3ParClient_system",
            "test.test_HPE3ParClient_volume",
            "test.test_HTTPJSONRESTClient"
        ],
        "version": "1.2.1"
    },
    "hpecloudvolumes": {
        "cmdline": [
            "cloudvolumes"
        ],
        "modules": [
            "cloudvolumes",
            "cloudvolumes.client",
            "cloudvolumes.cloud_volumes",
            "cloudvolumes.exceptions",
            "cloudvolumes.regions",
            "cloudvolumes.replication",
            "cloudvolumes.resource"
        ],
        "version": "1.0.2"
    },
    "hpecp": {
        "cmdline": [
            "hpecp"
        ],
        "modules": [
            "hpecp",
            "hpecp.base_resource",
            "hpecp.catalog",
            "hpecp.cli",
            "hpecp.cli.base",
            "hpecp.cli.catalog",
            "hpecp.cli.config",
            "hpecp.cli.datatap",
            "hpecp.cli.epicworker",
            "hpecp.cli.gateway",
            "hpecp.cli.httpclient",
            "hpecp.cli.install",
            "hpecp.cli.k8scluster",
            "hpecp.cli.k8sworker",
            "hpecp.cli.license",
            "hpecp.cli.lock",
            "hpecp.cli.role",
            "hpecp.cli.tenant",
            "hpecp.cli.user",
            "hpecp.cli_utils",
            "hpecp.client",
            "hpecp.config",
            "hpecp.datatap",
            "hpecp.epic_worker",
            "hpecp.exceptions",
            "hpecp.gateway",
            "hpecp.install",
            "hpecp.k8s_cluster",
            "hpecp.k8s_worker",
            "hpecp.license",
            "hpecp.lock",
            "hpecp.logger",
            "hpecp.role",
            "hpecp.tenant",
            "hpecp.user"
        ],
        "version": "0.16.0"
    },
    "hpeixoto-letsencrypt-route53": {
        "cmdline": [],
        "modules": [
            "letsencrypt_route53",
            "letsencrypt_route53.authenticator"
        ],
        "version": "0.1.4"
    },
    "hpelm": {
        "cmdline": [],
        "modules": [
            "hpelm",
            "hpelm.elm",
            "hpelm.hp_elm",
            "hpelm.modules",
            "hpelm.modules.hdf5_tools",
            "hpelm.modules.mrsr",
            "hpelm.modules.mrsr2",
            "hpelm.modules.rbf_param",
            "hpelm.mss_cv",
            "hpelm.mss_loo",
            "hpelm.mss_v",
            "hpelm.nnets",
            "hpelm.nnets.slfn",
            "hpelm.nnets.slfn_python",
            "hpelm.nnets.slfn_skcuda",
            "hpelm.tests",
            "hpelm.tests.test_acceptance",
            "hpelm.tests.test_corr_hpelm",
            "hpelm.tests.test_correctness",
            "hpelm.tests.unittest_elm",
            "hpelm.tests.unittest_hpelm"
        ],
        "version": "1.0.10"
    },
    "hpeoneview": {
        "cmdline": [],
        "modules": [
            "hpeOneView",
            "hpeOneView.connection",
            "hpeOneView.exceptions",
            "hpeOneView.image_streamer",
            "hpeOneView.image_streamer.image_streamer_client",
            "hpeOneView.image_streamer.resources",
            "hpeOneView.image_streamer.resources.artifact_bundles",
            "hpeOneView.image_streamer.resources.build_plans",
            "hpeOneView.image_streamer.resources.deployment_groups",
            "hpeOneView.image_streamer.resources.deployment_plans",
            "hpeOneView.image_streamer.resources.golden_images",
            "hpeOneView.image_streamer.resources.os_volumes",
            "hpeOneView.image_streamer.resources.plan_scripts",
            "hpeOneView.oneview_client",
            "hpeOneView.resources",
            "hpeOneView.resources.activity",
            "hpeOneView.resources.activity.alerts",
            "hpeOneView.resources.activity.events",
            "hpeOneView.resources.activity.tasks",
            "hpeOneView.resources.data_services",
            "hpeOneView.resources.data_services.metric_streaming",
            "hpeOneView.resources.facilities",
            "hpeOneView.resources.facilities.datacenters",
            "hpeOneView.resources.facilities.power_devices",
            "hpeOneView.resources.facilities.racks",
            "hpeOneView.resources.fc_sans",
            "hpeOneView.resources.fc_sans.endpoints",
            "hpeOneView.resources.fc_sans.managed_sans",
            "hpeOneView.resources.fc_sans.san_managers",
            "hpeOneView.resources.hypervisors",
            "hpeOneView.resources.hypervisors.hypervisor_cluster_profiles",
            "hpeOneView.resources.hypervisors.hypervisor_managers",
            "hpeOneView.resources.networking",
            "hpeOneView.resources.networking.connection_templates",
            "hpeOneView.resources.networking.ethernet_networks",
            "hpeOneView.resources.networking.fabrics",
            "hpeOneView.resources.networking.fc_networks",
            "hpeOneView.resources.networking.fcoe_networks",
            "hpeOneView.resources.networking.interconnect_link_topologies",
            "hpeOneView.resources.networking.interconnect_types",
            "hpeOneView.resources.networking.interconnects",
            "hpeOneView.resources.networking.internal_link_sets",
            "hpeOneView.resources.networking.logical_downlinks",
            "hpeOneView.resources.networking.logical_interconnect_groups",
            "hpeOneView.resources.networking.logical_interconnects",
            "hpeOneView.resources.networking.logical_switch_groups",
            "hpeOneView.resources.networking.logical_switches",
            "hpeOneView.resources.networking.network_sets",
            "hpeOneView.resources.networking.sas_interconnect_types",
            "hpeOneView.resources.networking.sas_interconnects",
            "hpeOneView.resources.networking.sas_logical_interconnect_groups",
            "hpeOneView.resources.networking.sas_logical_interconnects",
            "hpeOneView.resources.networking.switch_types",
            "hpeOneView.resources.networking.switches",
            "hpeOneView.resources.networking.uplink_sets",
            "hpeOneView.resources.resource",
            "hpeOneView.resources.search",
            "hpeOneView.resources.search.index_resources",
            "hpeOneView.resources.search.labels",
            "hpeOneView.resources.security",
            "hpeOneView.resources.security.certificate_authority",
            "hpeOneView.resources.security.certificate_rabbitmq",
            "hpeOneView.resources.security.certificates_server",
            "hpeOneView.resources.security.login_details",
            "hpeOneView.resources.security.roles",
            "hpeOneView.resources.security.users",
            "hpeOneView.resources.servers",
            "hpeOneView.resources.servers.connections",
            "hpeOneView.resources.servers.enclosure_groups",
            "hpeOneView.resources.servers.enclosures",
            "hpeOneView.resources.servers.id_pools",
            "hpeOneView.resources.servers.id_pools_ipv4_ranges",
            "hpeOneView.resources.servers.id_pools_ipv4_subnets",
            "hpeOneView.resources.servers.id_pools_ranges",
            "hpeOneView.resources.servers.logical_enclosures",
            "hpeOneView.resources.servers.migratable_vc_domains",
            "hpeOneView.resources.servers.server_hardware",
            "hpeOneView.resources.servers.server_hardware_types",
            "hpeOneView.resources.servers.server_profile_templates",
            "hpeOneView.resources.servers.server_profiles",
            "hpeOneView.resources.settings",
            "hpeOneView.resources.settings.appliance_device_read_community",
            "hpeOneView.resources.settings.appliance_device_snmp_v1_trap_destinations",
            "hpeOneView.resources.settings.appliance_device_snmp_v3_trap_destinations",
            "hpeOneView.resources.settings.appliance_device_snmp_v3_users",
            "hpeOneView.resources.settings.appliance_node_information",
            "hpeOneView.resources.settings.appliance_time_and_locale_configuration",
            "hpeOneView.resources.settings.backups",
            "hpeOneView.resources.settings.firmware_bundles",
            "hpeOneView.resources.settings.firmware_drivers",
            "hpeOneView.resources.settings.licenses",
            "hpeOneView.resources.settings.restores",
            "hpeOneView.resources.settings.scopes",
            "hpeOneView.resources.settings.versions",
            "hpeOneView.resources.storage",
            "hpeOneView.resources.storage.drive_enclosures",
            "hpeOneView.resources.storage.sas_logical_jbod_attachments",
            "hpeOneView.resources.storage.sas_logical_jbods",
            "hpeOneView.resources.storage.storage_pools",
            "hpeOneView.resources.storage.storage_systems",
            "hpeOneView.resources.storage.storage_volume_attachments",
            "hpeOneView.resources.storage.storage_volume_templates",
            "hpeOneView.resources.storage.volumes",
            "hpeOneView.resources.task_monitor",
            "hpeOneView.resources.uncategorized",
            "hpeOneView.resources.uncategorized.os_deployment_plans",
            "hpeOneView.resources.uncategorized.os_deployment_servers",
            "hpeOneView.resources.uncategorized.unmanaged_devices"
        ],
        "version": "5.4.0"
    },
    "hpestorapi": {
        "cmdline": [],
        "modules": [
            "hpestorapi",
            "hpestorapi.primera",
            "hpestorapi.storeonce3",
            "hpestorapi.storeonce4",
            "hpestorapi.storeserv",
            "hpestorapi.xp"
        ],
        "version": "0.9.12"
    },
    "hpexome": {
        "cmdline": [],
        "modules": [
            "hpexome",
            "hpexome.hpexome"
        ],
        "version": "1.2.1"
    },
    "hpfeeds": {
        "cmdline": [],
        "modules": [
            "hpfeeds",
            "hpfeeds.asyncio",
            "hpfeeds.asyncio.client",
            "hpfeeds.asyncio.protocol",
            "hpfeeds.blocking",
            "hpfeeds.blocking.protocol",
            "hpfeeds.blocking.queue",
            "hpfeeds.blocking.reactor",
            "hpfeeds.blocking.session",
            "hpfeeds.broker",
            "hpfeeds.broker.auth",
            "hpfeeds.broker.auth.env",
            "hpfeeds.broker.auth.json",
            "hpfeeds.broker.auth.memory",
            "hpfeeds.broker.auth.mongo",
            "hpfeeds.broker.auth.sqlite",
            "hpfeeds.broker.connection",
            "hpfeeds.broker.prometheus",
            "hpfeeds.broker.server",
            "hpfeeds.broker.utils",
            "hpfeeds.broker.utils.inotify",
            "hpfeeds.broker.utils.supervisor",
            "hpfeeds.client",
            "hpfeeds.exceptions",
            "hpfeeds.protocol",
            "hpfeeds.scripts",
            "hpfeeds.scripts.broker",
            "hpfeeds.scripts.cli",
            "hpfeeds.tests",
            "hpfeeds.tests.conftest",
            "hpfeeds.tests.fakebroker",
            "hpfeeds.tests.test_asyncio_client",
            "hpfeeds.tests.test_asyncio_protocol",
            "hpfeeds.tests.test_blocking_protocol",
            "hpfeeds.tests.test_blocking_queue",
            "hpfeeds.tests.test_blocking_session",
            "hpfeeds.tests.test_broker_auth_env",
            "hpfeeds.tests.test_broker_auth_memory",
            "hpfeeds.tests.test_broker_auth_sqlite",
            "hpfeeds.tests.test_broker_connection",
            "hpfeeds.tests.test_broker_prometheus",
            "hpfeeds.tests.test_client_integration",
            "hpfeeds.tests.test_client_integration_py2",
            "hpfeeds.tests.test_protocol",
            "hpfeeds.tests.test_twisted_factory",
            "hpfeeds.tests.test_twisted_protocol",
            "hpfeeds.tests.test_twisted_service",
            "hpfeeds.tests.test_twisted_service_py2",
            "hpfeeds.tests.utils",
            "hpfeeds.twisted",
            "hpfeeds.twisted.factory",
            "hpfeeds.twisted.protocol",
            "hpfeeds.twisted.service"
        ],
        "version": "3.0.0"
    },
    "hpfeeds-logger": {
        "cmdline": [],
        "modules": [
            "hpfeedslogger",
            "hpfeedslogger.formatters",
            "hpfeedslogger.formatters.arcsight",
            "hpfeedslogger.formatters.json_formatter",
            "hpfeedslogger.formatters.splunk",
            "hpfeedslogger.processors"
        ],
        "version": "0.0.7.7"
    },
    "hpfeeds-threatstream": {
        "cmdline": [
            "hpfeeds-client"
        ],
        "modules": [
            "hpfeeds"
        ],
        "version": "1.1"
    },
    "hpfeeds3": {
        "cmdline": [],
        "modules": [
            "hpfeeds",
            "hpfeeds.asyncio",
            "hpfeeds.asyncio.client",
            "hpfeeds.asyncio.protocol",
            "hpfeeds.blocking",
            "hpfeeds.blocking.protocol",
            "hpfeeds.blocking.queue",
            "hpfeeds.blocking.reactor",
            "hpfeeds.blocking.session",
            "hpfeeds.broker",
            "hpfeeds.broker.auth",
            "hpfeeds.broker.auth.env",
            "hpfeeds.broker.auth.json",
            "hpfeeds.broker.auth.memory",
            "hpfeeds.broker.auth.sqlite",
            "hpfeeds.broker.connection",
            "hpfeeds.broker.prometheus",
            "hpfeeds.broker.server",
            "hpfeeds.broker.utils",
            "hpfeeds.broker.utils.inotify",
            "hpfeeds.broker.utils.supervisor",
            "hpfeeds.client",
            "hpfeeds.exceptions",
            "hpfeeds.protocol",
            "hpfeeds.scripts",
            "hpfeeds.scripts.broker",
            "hpfeeds.scripts.cli",
            "hpfeeds.tests",
            "hpfeeds.tests.fakebroker",
            "hpfeeds.tests.test_asyncio_client",
            "hpfeeds.tests.test_asyncio_protocol",
            "hpfeeds.tests.test_blocking_protocol",
            "hpfeeds.tests.test_blocking_queue",
            "hpfeeds.tests.test_blocking_session",
            "hpfeeds.tests.test_broker_auth_env",
            "hpfeeds.tests.test_broker_auth_sqlite",
            "hpfeeds.tests.test_broker_connection",
            "hpfeeds.tests.test_broker_prometheus",
            "hpfeeds.tests.test_client_integration",
            "hpfeeds.tests.test_client_integration_py2",
            "hpfeeds.tests.test_protocol",
            "hpfeeds.tests.test_twisted_factory",
            "hpfeeds.tests.test_twisted_protocol",
            "hpfeeds.tests.test_twisted_service",
            "hpfeeds.tests.test_twisted_service_py2",
            "hpfeeds.tests.utils",
            "hpfeeds.twisted",
            "hpfeeds.twisted.factory",
            "hpfeeds.twisted.protocol",
            "hpfeeds.twisted.service"
        ],
        "version": "0.9.10"
    },
    "hpfrec": {
        "cmdline": [],
        "modules": [
            "hpfrec"
        ],
        "version": "0.2.3.2"
    },
    "hpgo": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.2"
    },
    "hpi": {
        "cmdline": [],
        "modules": [
            "my.bluemaestro",
            "my.bluemaestro.check",
            "my.body",
            "my.body.blood",
            "my.body.exercise.cardio",
            "my.body.exercise.cross_trainer",
            "my.body.weight",
            "my.books.kobo",
            "my.calendar",
            "my.calendar.holidays",
            "my.cfg",
            "my.coding",
            "my.coding.codeforces",
            "my.coding.commits",
            "my.coding.github",
            "my.coding.topcoder",
            "my.common",
            "my.config",
            "my.core",
            "my.core.cachew",
            "my.core.cfg",
            "my.core.common",
            "my.core.compat",
            "my.core.core_config",
            "my.core.dataset",
            "my.core.error",
            "my.core.init",
            "my.core.orgmode",
            "my.core.pandas",
            "my.core.preinit",
            "my.core.py37",
            "my.core.time",
            "my.core.util",
            "my.core.warnings",
            "my.demo",
            "my.emfit",
            "my.emfit.plot",
            "my.endomondo",
            "my.error",
            "my.fbmessenger",
            "my.foursquare",
            "my.github.all",
            "my.github.common",
            "my.github.gdpr",
            "my.github.ghexport",
            "my.google.takeout.html",
            "my.google.takeout.paths",
            "my.hypothesis",
            "my.instapaper",
            "my.jawbone",
            "my.jawbone.plots",
            "my.kobo",
            "my.kython.klogging",
            "my.kython.kompress",
            "my.kython.konsume",
            "my.lastfm",
            "my.lastfm.fill_influxdb",
            "my.location",
            "my.location.takeout",
            "my.materialistic",
            "my.media",
            "my.media.imdb",
            "my.media.movies",
            "my.media.youtube",
            "my.notes.orgmode",
            "my.pdfs",
            "my.photos",
            "my.photos.utils",
            "my.pinboard",
            "my.pocket",
            "my.reading.goodreads",
            "my.reading.polar",
            "my.reddit",
            "my.rescuetime",
            "my.roamresearch",
            "my.rss.all",
            "my.rss.common",
            "my.rss.feedbin",
            "my.rss.feedly",
            "my.rtm",
            "my.smscalls",
            "my.stackexchange",
            "my.twitter.all",
            "my.twitter.archive",
            "my.twitter.common",
            "my.twitter.twint",
            "my.vk.all",
            "my.vk.favorites",
            "my.vk.vk_messages_backup"
        ],
        "version": "0.2.20201003"
    },
    "hpicsp": {
        "cmdline": [],
        "modules": [
            "hpICsp",
            "hpICsp.buildPlans",
            "hpICsp.cfg",
            "hpICsp.common",
            "hpICsp.connection",
            "hpICsp.connectionHPOneView",
            "hpICsp.deviceGroups",
            "hpICsp.exceptions",
            "hpICsp.facility",
            "hpICsp.jobs",
            "hpICsp.ogfsScripts",
            "hpICsp.packages",
            "hpICsp.serverScripts",
            "hpICsp.servers",
            "hpICsp.settings"
        ],
        "version": "1.0.2"
    },
    "hpilo-exporter": {
        "cmdline": [],
        "modules": [
            "hpilo_exporter",
            "hpilo_exporter.exporter",
            "hpilo_exporter.main",
            "hpilo_exporter.prometheus_metrics"
        ],
        "version": "0.4.5"
    },
    "hpilo-exporter-forked": {
        "cmdline": [],
        "modules": [
            "hpilo_exporter",
            "hpilo_exporter.exporter",
            "hpilo_exporter.main",
            "hpilo_exporter.prometheus_metrics"
        ],
        "version": "0.4.3"
    },
    "hpim-dm": {
        "cmdline": [],
        "modules": [
            "hpimdm",
            "hpimdm.Config",
            "hpimdm.Interface",
            "hpimdm.InterfaceHPIM",
            "hpimdm.InterfaceHPIM6",
            "hpimdm.InterfaceIGMP",
            "hpimdm.InterfaceMLD",
            "hpimdm.Kernel",
            "hpimdm.Main",
            "hpimdm.Neighbor",
            "hpimdm.ReliableMsgTransmission",
            "hpimdm.Run",
            "hpimdm.TestLogger",
            "hpimdm.UnicastRouting",
            "hpimdm.daemon",
            "hpimdm.daemon.Daemon",
            "hpimdm.igmp",
            "hpimdm.igmp.GroupState",
            "hpimdm.igmp.RouterState",
            "hpimdm.igmp.igmp_globals",
            "hpimdm.igmp.nonquerier",
            "hpimdm.igmp.nonquerier.CheckingMembership",
            "hpimdm.igmp.nonquerier.MembersPresent",
            "hpimdm.igmp.nonquerier.NoMembersPresent",
            "hpimdm.igmp.nonquerier.NonQuerier",
            "hpimdm.igmp.querier",
            "hpimdm.igmp.querier.CheckingMembership",
            "hpimdm.igmp.querier.MembersPresent",
            "hpimdm.igmp.querier.NoMembersPresent",
            "hpimdm.igmp.querier.Querier",
            "hpimdm.igmp.querier.Version1MembersPresent",
            "hpimdm.igmp.wrapper",
            "hpimdm.igmp.wrapper.CheckingMembership",
            "hpimdm.igmp.wrapper.MembersPresent",
            "hpimdm.igmp.wrapper.NoMembersPresent",
            "hpimdm.igmp.wrapper.Version1MembersPresent",
            "hpimdm.mld",
            "hpimdm.mld.GroupState",
            "hpimdm.mld.RouterState",
            "hpimdm.mld.mld_globals",
            "hpimdm.mld.nonquerier",
            "hpimdm.mld.nonquerier.CheckingListeners",
            "hpimdm.mld.nonquerier.ListenersPresent",
            "hpimdm.mld.nonquerier.NoListenersPresent",
            "hpimdm.mld.nonquerier.NonQuerier",
            "hpimdm.mld.querier",
            "hpimdm.mld.querier.CheckingListeners",
            "hpimdm.mld.querier.ListenersPresent",
            "hpimdm.mld.querier.NoListenersPresent",
            "hpimdm.mld.querier.Querier",
            "hpimdm.mld.wrapper",
            "hpimdm.mld.wrapper.CheckingListeners",
            "hpimdm.mld.wrapper.ListenersPresent",
            "hpimdm.mld.wrapper.NoListenersPresent",
            "hpimdm.packet",
            "hpimdm.packet.Packet",
            "hpimdm.packet.PacketHPIMAck",
            "hpimdm.packet.PacketHPIMHeader",
            "hpimdm.packet.PacketHPIMHello",
            "hpimdm.packet.PacketHPIMHelloOptions",
            "hpimdm.packet.PacketHPIMIamUpstream",
            "hpimdm.packet.PacketHPIMInterest",
            "hpimdm.packet.PacketHPIMNotUpstream",
            "hpimdm.packet.PacketHPIMSync",
            "hpimdm.packet.PacketIGMPHeader",
            "hpimdm.packet.PacketIpHeader",
            "hpimdm.packet.PacketMLDHeader",
            "hpimdm.packet.PacketPayload",
            "hpimdm.packet.ReceivedPacket",
            "hpimdm.rwlock",
            "hpimdm.rwlock.RWLock",
            "hpimdm.tree",
            "hpimdm.tree.KernelEntry",
            "hpimdm.tree.KernelEntryInterface",
            "hpimdm.tree.assert_state",
            "hpimdm.tree.data_packets_socket",
            "hpimdm.tree.downstream_state",
            "hpimdm.tree.hpim_globals",
            "hpimdm.tree.local_membership",
            "hpimdm.tree.metric",
            "hpimdm.tree.non_root_state_machine",
            "hpimdm.tree.root_state_machine",
            "hpimdm.tree.tree_if_non_root",
            "hpimdm.tree.tree_if_root",
            "hpimdm.tree.tree_if_root_originator",
            "hpimdm.tree.tree_interface",
            "hpimdm.tree.tree_state",
            "hpimdm.utils"
        ],
        "version": "1.4"
    },
    "hpimon": {
        "cmdline": [],
        "modules": [
            "hpimon",
            "hpimon.FieldTrip",
            "hpimon.config",
            "hpimon.elekta",
            "hpimon.hpimon",
            "hpimon.rt_server",
            "hpimon.utils"
        ],
        "version": "0.12.6"
    },
    "hpitclient": {
        "cmdline": [],
        "modules": [
            "hpitclient",
            "hpitclient.exceptions",
            "hpitclient.message_sender_mixin",
            "hpitclient.plugin",
            "hpitclient.requests_mixin",
            "hpitclient.tutor"
        ],
        "version": "0.36"
    },
    "hplawson": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hplda": {
        "cmdline": [],
        "modules": [
            "hplda",
            "hplda.data_preproc"
        ],
        "version": "0.3"
    },
    "hplefthandclient": {
        "cmdline": [],
        "modules": [
            "hplefthandclient",
            "hplefthandclient.client",
            "hplefthandclient.exceptions",
            "hplefthandclient.http"
        ],
        "version": "1.1.0"
    },
    "hpman": {
        "cmdline": [],
        "modules": [
            "hpman",
            "hpman.__version__",
            "hpman.hpm",
            "hpman.hpm_db",
            "hpman.hpm_zoo_monkey_patch",
            "hpman.primitives",
            "hpman.source_helper"
        ],
        "version": "0.10.0"
    },
    "hpn-utilities": {
        "cmdline": [],
        "modules": [
            "HPN_Utilities",
            "HPN_Utilities.TelnetHandler"
        ],
        "version": "1.0.9"
    },
    "hpnapy": {
        "cmdline": [],
        "modules": [
            "hpnapy",
            "hpnapy.exceptions",
            "hpnapy.hpnapy"
        ],
        "version": "1.0.7"
    },
    "hpo-downloader": {
        "cmdline": [],
        "modules": [
            "hpo_downloader",
            "hpo_downloader.__version__",
            "hpo_downloader.cafa4",
            "hpo_downloader.cafa4.cafa4_mapping",
            "hpo_downloader.hpo",
            "hpo_downloader.hpo.hpo_mapping",
            "hpo_downloader.mapping",
            "hpo_downloader.uniprot",
            "hpo_downloader.uniprot.uniprot_mapping",
            "hpo_downloader.utils",
            "hpo_downloader.utils.non_unique_mapping",
            "hpo_downloader.utils.overlap"
        ],
        "version": "1.1.0"
    },
    "hpo-similarity": {
        "cmdline": [],
        "modules": [
            "hpo_similarity",
            "hpo_similarity.analyse_genes",
            "hpo_similarity.check_proband_terms",
            "hpo_similarity.get_scores",
            "hpo_similarity.load_files",
            "hpo_similarity.obo",
            "hpo_similarity.ontology",
            "hpo_similarity.permute_probands",
            "hpo_similarity.similarity",
            "hpo_similarity.test_similarity"
        ],
        "version": "0.5.3"
    },
    "hpogrid": {
        "cmdline": [
            "hpogrid"
        ],
        "modules": [
            "hpogrid",
            "hpogrid.algorithm",
            "hpogrid.algorithm.ax_algorithm",
            "hpogrid.algorithm.bohb_algorithm",
            "hpogrid.algorithm.hyperopt_algorithm",
            "hpogrid.algorithm.nevergrad_algorithm",
            "hpogrid.algorithm.skopt_algorithm",
            "hpogrid.components",
            "hpogrid.components.core",
            "hpogrid.components.defaults",
            "hpogrid.components.environment_settings",
            "hpogrid.components.grid_handler",
            "hpogrid.components.job_builder",
            "hpogrid.components.job_builder_test",
            "hpogrid.components.panda_task_manager",
            "hpogrid.components.reporter",
            "hpogrid.components.rucio",
            "hpogrid.components.validation",
            "hpogrid.configuration",
            "hpogrid.configuration.configuration_base",
            "hpogrid.configuration.grid_configuration",
            "hpogrid.configuration.hpo_configuration",
            "hpogrid.configuration.model_configuration",
            "hpogrid.configuration.project_configuration",
            "hpogrid.configuration.search_space_configuration",
            "hpogrid.generator",
            "hpogrid.generator.ax_generator",
            "hpogrid.generator.base_generator",
            "hpogrid.generator.bohb_generator",
            "hpogrid.generator.hyperopt_generator",
            "hpogrid.generator.nevergrad_generator",
            "hpogrid.generator.skopt_generator",
            "hpogrid.idds_interface",
            "hpogrid.idds_interface.idds_utils",
            "hpogrid.idds_interface.steering",
            "hpogrid.scheduler",
            "hpogrid.scheduler.asynchyperband_scheduler",
            "hpogrid.scheduler.bohbhyperband_scheduler",
            "hpogrid.scheduler.pbt_scheduler",
            "hpogrid.search_space",
            "hpogrid.search_space.ax_space",
            "hpogrid.search_space.base_space",
            "hpogrid.search_space.bohb_space",
            "hpogrid.search_space.hyperopt_space",
            "hpogrid.search_space.nevergrad_space",
            "hpogrid.search_space.pbt_space",
            "hpogrid.search_space.skopt_space",
            "hpogrid.search_space.tune_space",
            "hpogrid.utils",
            "hpogrid.utils.generator",
            "hpogrid.utils.grid_site_info",
            "hpogrid.utils.grid_util",
            "hpogrid.utils.helper",
            "hpogrid.utils.logger",
            "hpogrid.utils.stylus"
        ],
        "version": "0.7.9"
    },
    "hpolib2": {
        "cmdline": [],
        "modules": [
            "hpolib",
            "hpolib.__version__",
            "hpolib.abstract_benchmark",
            "hpolib.abstract_multitask_benchmark",
            "hpolib.benchmarks",
            "hpolib.benchmarks.ml",
            "hpolib.benchmarks.ml.autosklearn_benchmark",
            "hpolib.benchmarks.ml.bnn_benchmark",
            "hpolib.benchmarks.ml.conv_net",
            "hpolib.benchmarks.ml.fully_connected_network",
            "hpolib.benchmarks.ml.logistic_regression",
            "hpolib.benchmarks.ml.residual_networks",
            "hpolib.benchmarks.ml.sklearn_mlp_benchmark",
            "hpolib.benchmarks.ml.svm_benchmark",
            "hpolib.benchmarks.rl",
            "hpolib.benchmarks.rl.cartpole",
            "hpolib.benchmarks.surrogates",
            "hpolib.benchmarks.surrogates.cnn",
            "hpolib.benchmarks.surrogates.paramnet",
            "hpolib.benchmarks.surrogates.surrogate_benchmark",
            "hpolib.benchmarks.surrogates.svm",
            "hpolib.benchmarks.surrogates.wide_resnet_2d",
            "hpolib.benchmarks.synthetic_functions",
            "hpolib.benchmarks.synthetic_functions.bohachevsky",
            "hpolib.benchmarks.synthetic_functions.branin",
            "hpolib.benchmarks.synthetic_functions.camelback",
            "hpolib.benchmarks.synthetic_functions.counting_ones",
            "hpolib.benchmarks.synthetic_functions.forrester",
            "hpolib.benchmarks.synthetic_functions.goldstein_price",
            "hpolib.benchmarks.synthetic_functions.hartmann3",
            "hpolib.benchmarks.synthetic_functions.hartmann6",
            "hpolib.benchmarks.synthetic_functions.levy",
            "hpolib.benchmarks.synthetic_functions.rosenbrock",
            "hpolib.benchmarks.synthetic_functions.sin_one",
            "hpolib.benchmarks.synthetic_functions.sin_two",
            "hpolib.benchmarks.synthetic_functions.wrapper",
            "hpolib.benchmarks.synthetic_functions.wrapper.synthetic_noise_and_cost",
            "hpolib.config",
            "hpolib.util",
            "hpolib.util.data_manager",
            "hpolib.util.dependencies",
            "hpolib.util.openml_data_manager",
            "hpolib.util.rng_helper",
            "tests",
            "tests.test_abstract_benchmark",
            "tests.test_config",
            "tests.test_data_manager",
            "tests.test_ml",
            "tests.test_ml.test_autosklearn",
            "tests.test_ml.test_init_rng",
            "tests.test_ml.test_logistic_regression_on_MNIST",
            "tests.test_ml.test_random_config",
            "tests.test_openml_data_manager",
            "tests.test_synthetic_functions",
            "tests.test_util",
            "tests.test_util.test_dependencies"
        ],
        "version": "0.0.1"
    },
    "hpoliced": {
        "cmdline": [],
        "modules": [
            "hpoliced",
            "hpoliced.cli"
        ],
        "version": "0.0.4"
    },
    "hponeview": {
        "cmdline": [],
        "modules": [
            "hpOneView",
            "hpOneView.connection",
            "hpOneView.exceptions",
            "hpOneView.image_streamer",
            "hpOneView.image_streamer.image_streamer_client",
            "hpOneView.image_streamer.resources",
            "hpOneView.image_streamer.resources.artifact_bundles",
            "hpOneView.image_streamer.resources.build_plans",
            "hpOneView.image_streamer.resources.deployment_groups",
            "hpOneView.image_streamer.resources.deployment_plans",
            "hpOneView.image_streamer.resources.golden_images",
            "hpOneView.image_streamer.resources.os_volumes",
            "hpOneView.image_streamer.resources.plan_scripts",
            "hpOneView.oneview_client",
            "hpOneView.resources",
            "hpOneView.resources.activity",
            "hpOneView.resources.activity.alerts",
            "hpOneView.resources.activity.events",
            "hpOneView.resources.activity.tasks",
            "hpOneView.resources.data_services",
            "hpOneView.resources.data_services.metric_streaming",
            "hpOneView.resources.facilities",
            "hpOneView.resources.facilities.datacenters",
            "hpOneView.resources.facilities.power_devices",
            "hpOneView.resources.facilities.racks",
            "hpOneView.resources.fc_sans",
            "hpOneView.resources.fc_sans.endpoints",
            "hpOneView.resources.fc_sans.managed_sans",
            "hpOneView.resources.fc_sans.san_managers",
            "hpOneView.resources.hypervisors",
            "hpOneView.resources.hypervisors.hypervisor_cluster_profiles",
            "hpOneView.resources.hypervisors.hypervisor_managers",
            "hpOneView.resources.networking",
            "hpOneView.resources.networking.connection_templates",
            "hpOneView.resources.networking.ethernet_networks",
            "hpOneView.resources.networking.fabrics",
            "hpOneView.resources.networking.fc_networks",
            "hpOneView.resources.networking.fcoe_networks",
            "hpOneView.resources.networking.interconnect_link_topologies",
            "hpOneView.resources.networking.interconnect_types",
            "hpOneView.resources.networking.interconnects",
            "hpOneView.resources.networking.internal_link_sets",
            "hpOneView.resources.networking.logical_downlinks",
            "hpOneView.resources.networking.logical_interconnect_groups",
            "hpOneView.resources.networking.logical_interconnects",
            "hpOneView.resources.networking.logical_switch_groups",
            "hpOneView.resources.networking.logical_switches",
            "hpOneView.resources.networking.network_sets",
            "hpOneView.resources.networking.sas_interconnect_types",
            "hpOneView.resources.networking.sas_interconnects",
            "hpOneView.resources.networking.sas_logical_interconnect_groups",
            "hpOneView.resources.networking.sas_logical_interconnects",
            "hpOneView.resources.networking.switch_types",
            "hpOneView.resources.networking.switches",
            "hpOneView.resources.networking.uplink_sets",
            "hpOneView.resources.resource",
            "hpOneView.resources.search",
            "hpOneView.resources.search.index_resources",
            "hpOneView.resources.search.labels",
            "hpOneView.resources.security",
            "hpOneView.resources.security.certificate_authority",
            "hpOneView.resources.security.certificate_rabbitmq",
            "hpOneView.resources.security.certificates_server",
            "hpOneView.resources.security.login_details",
            "hpOneView.resources.security.roles",
            "hpOneView.resources.security.users",
            "hpOneView.resources.servers",
            "hpOneView.resources.servers.connections",
            "hpOneView.resources.servers.enclosure_groups",
            "hpOneView.resources.servers.enclosures",
            "hpOneView.resources.servers.id_pools",
            "hpOneView.resources.servers.id_pools_ipv4_ranges",
            "hpOneView.resources.servers.id_pools_ipv4_subnets",
            "hpOneView.resources.servers.id_pools_ranges",
            "hpOneView.resources.servers.logical_enclosures",
            "hpOneView.resources.servers.migratable_vc_domains",
            "hpOneView.resources.servers.server_hardware",
            "hpOneView.resources.servers.server_hardware_types",
            "hpOneView.resources.servers.server_profile_templates",
            "hpOneView.resources.servers.server_profiles",
            "hpOneView.resources.settings",
            "hpOneView.resources.settings.appliance_device_read_community",
            "hpOneView.resources.settings.appliance_device_snmp_v1_trap_destinations",
            "hpOneView.resources.settings.appliance_device_snmp_v3_trap_destinations",
            "hpOneView.resources.settings.appliance_device_snmp_v3_users",
            "hpOneView.resources.settings.appliance_node_information",
            "hpOneView.resources.settings.appliance_time_and_locale_configuration",
            "hpOneView.resources.settings.backups",
            "hpOneView.resources.settings.firmware_bundles",
            "hpOneView.resources.settings.firmware_drivers",
            "hpOneView.resources.settings.licenses",
            "hpOneView.resources.settings.restores",
            "hpOneView.resources.settings.scopes",
            "hpOneView.resources.settings.versions",
            "hpOneView.resources.storage",
            "hpOneView.resources.storage.drive_enclosures",
            "hpOneView.resources.storage.sas_logical_jbod_attachments",
            "hpOneView.resources.storage.sas_logical_jbods",
            "hpOneView.resources.storage.storage_pools",
            "hpOneView.resources.storage.storage_systems",
            "hpOneView.resources.storage.storage_volume_attachments",
            "hpOneView.resources.storage.storage_volume_templates",
            "hpOneView.resources.storage.volumes",
            "hpOneView.resources.task_monitor",
            "hpOneView.resources.uncategorized",
            "hpOneView.resources.uncategorized.os_deployment_plans",
            "hpOneView.resources.uncategorized.os_deployment_servers",
            "hpOneView.resources.uncategorized.unmanaged_devices"
        ],
        "version": "5.3.0"
    },
    "hpoo": {
        "cmdline": [],
        "modules": [
            "hpoo",
            "hpoo.core"
        ],
        "version": "0.0.3"
    },
    "hpp2plantuml": {
        "cmdline": [],
        "modules": [
            "hpp2plantuml",
            "hpp2plantuml.hpp2plantuml"
        ],
        "version": "0.6"
    },
    "hpppm": {
        "cmdline": [
            "hpppm_demand_management.py"
        ],
        "modules": [
            "hpppm",
            "hpppm.demand_management",
            "hpppm.error_handler",
            "hpppm.ez_setup",
            "hpppm.field_parser"
        ],
        "version": "0.1"
    },
    "hpproj": {
        "cmdline": [],
        "modules": [
            "hpproj",
            "hpproj.cutsky",
            "hpproj.decorator",
            "hpproj.hp_helper",
            "hpproj.parse",
            "hpproj.visu",
            "hpproj.wcs_helper"
        ],
        "version": "0.9.3"
    },
    "hppy": {
        "cmdline": [],
        "modules": [
            "hppy",
            "hppy._hyphyinterface",
            "hppy._hyphymap"
        ],
        "version": "0.9.9"
    },
    "hprof2flamegraph": {
        "cmdline": [
            "flamegraph.pl"
        ],
        "modules": [
            "stackcollapse_hpl",
            "stackcollapse_hprof"
        ],
        "version": "0.0.6"
    },
    "hprogressbars": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hprose": {
        "cmdline": [],
        "modules": [
            "fpconst",
            "hprose",
            "hprose.client",
            "hprose.common",
            "hprose.httpclient",
            "hprose.httpserver",
            "hprose.io",
            "hprose.server"
        ],
        "version": "1.4.3"
    },
    "hps-nyu": {
        "cmdline": [],
        "modules": [
            "hps",
            "hps.clients",
            "hps.clients.python",
            "hps.clients.python.socket_client",
            "hps.clients.python.zmq_client",
            "hps.servers",
            "hps.servers.base",
            "hps.servers.socket_server",
            "hps.servers.zmq_server"
        ],
        "version": "1.0.0"
    },
    "hps360pen": {
        "cmdline": [],
        "modules": [],
        "version": "0.1b2"
    },
    "hpsc": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hpsim": {
        "cmdline": [],
        "modules": [
            "hpsim",
            "hpsim.acceleration",
            "hpsim.arena",
            "hpsim.boundaries",
            "hpsim.energy",
            "hpsim.ensgen",
            "hpsim.force",
            "hpsim.hdf5gen",
            "hpsim.integrator",
            "hpsim.main",
            "hpsim.maintest",
            "hpsim.miscfuncs",
            "hpsim.newmain",
            "hpsim.ntgrtr",
            "hpsim.solver",
            "hpsim.timegen",
            "hpsim.timestep",
            "hpsim.visual"
        ],
        "version": "0.8.0"
    },
    "hpsklearn": {
        "cmdline": [],
        "modules": [
            "hpsklearn",
            "hpsklearn.components",
            "hpsklearn.demo_support",
            "hpsklearn.estimator",
            "hpsklearn.lagselectors",
            "hpsklearn.vkmeans"
        ],
        "version": "0.1.0"
    },
    "hpsocket": {
        "cmdline": [],
        "modules": [
            "HPSocket",
            "HPSocket.HPSocketAPI",
            "HPSocket.HPTypeDef",
            "HPSocket.TcpPack",
            "HPSocket.TcpPull",
            "HPSocket.TcpPush",
            "HPSocket.helper",
            "HPSocket.multiplatforms",
            "HPSocket.pyhpsocket"
        ],
        "version": "0.9.3"
    },
    "hpsspy": {
        "cmdline": [],
        "modules": [
            "hpsspy",
            "hpsspy.os",
            "hpsspy.os._os",
            "hpsspy.os.path",
            "hpsspy.scan",
            "hpsspy.test",
            "hpsspy.test.test_data",
            "hpsspy.test.test_os",
            "hpsspy.test.test_scan",
            "hpsspy.test.test_top_level",
            "hpsspy.test.test_util",
            "hpsspy.util"
        ],
        "version": "0.5.1"
    },
    "hptcad": {
        "cmdline": [],
        "modules": [
            "hptcad"
        ],
        "version": "0.0.1"
    },
    "hptpy": {
        "cmdline": [],
        "modules": [
            "hptpy",
            "hptpy.anova",
            "hptpy.midcal",
            "hptpy.midcal.midcal_anova",
            "hptpy.midcal.midcal_ttest",
            "hptpy.t_tests"
        ],
        "version": "0.0.8"
    },
    "hpw": {
        "cmdline": [],
        "modules": [
            "http_proxy_wrapper",
            "http_proxy_wrapper.main"
        ],
        "version": "0.1.1"
    },
    "hpx-bitly": {
        "cmdline": [],
        "modules": [
            "bitly",
            "bitly.bitly"
        ],
        "version": "0.1"
    },
    "hpx-insightly": {
        "cmdline": [],
        "modules": [
            "insightly",
            "insightly.insightly"
        ],
        "version": "2.2.7"
    },
    "hpy": {
        "cmdline": [
            "hpython"
        ],
        "modules": [
            "hpy",
            "hpy.hebrew",
            "hpy.htokenize"
        ],
        "version": "0.2"
    },
    "hpy-devel": {
        "cmdline": [],
        "modules": [
            "hpy.devel"
        ],
        "version": "0.0.0rc1"
    },
    "hpy-universal": {
        "cmdline": [],
        "modules": [
            "hpy.devel"
        ],
        "version": "0.0.0rc1"
    },
    "hpycc": {
        "cmdline": [],
        "modules": [
            "hpycc",
            "hpycc.connection",
            "hpycc.delete",
            "hpycc.get",
            "hpycc.run",
            "hpycc.save",
            "hpycc.spray",
            "hpycc.utils",
            "hpycc.utils.docker_tools",
            "hpycc.utils.filechunker",
            "hpycc.utils.parsers",
            "tests",
            "tests.test_with_server",
            "tests.test_with_server.test_connection",
            "tests.test_with_server.test_delete",
            "tests.test_with_server.test_get",
            "tests.test_with_server.test_run",
            "tests.test_with_server.test_save",
            "tests.test_with_server.test_spray",
            "tests.test_without_server",
            "tests.test_without_server.test_connection",
            "tests.test_without_server.test_run",
            "tests.test_without_server.test_utils",
            "tests.test_without_server.test_utils.test_filechunker",
            "tests.test_without_server.test_utils.test_parsers"
        ],
        "version": "0.2.2"
    },
    "hq": {
        "cmdline": [],
        "modules": [
            "hq",
            "hq.config",
            "hq.hq",
            "hq.hquery",
            "hq.hquery.axis",
            "hq.hquery.computed_constructors",
            "hq.hquery.computed_constructors.hash_key_value",
            "hq.hquery.computed_constructors.html_attribute",
            "hq.hquery.computed_constructors.html_element",
            "hq.hquery.computed_constructors.json_array",
            "hq.hquery.computed_constructors.json_hash",
            "hq.hquery.equality_operators",
            "hq.hquery.evaluation_error",
            "hq.hquery.evaluation_in_context",
            "hq.hquery.expression_context",
            "hq.hquery.flwor",
            "hq.hquery.function_support",
            "hq.hquery.functions",
            "hq.hquery.functions.core_boolean",
            "hq.hquery.functions.core_node_set",
            "hq.hquery.functions.core_number",
            "hq.hquery.functions.core_string",
            "hq.hquery.functions.extend_node_set",
            "hq.hquery.functions.extend_string",
            "hq.hquery.hquery_processor",
            "hq.hquery.location_path",
            "hq.hquery.node_test",
            "hq.hquery.object_type",
            "hq.hquery.relational_operators",
            "hq.hquery.sequences",
            "hq.hquery.string_interpolation",
            "hq.hquery.syntax_error",
            "hq.hquery.tokens",
            "hq.hquery.union_decomposition",
            "hq.hquery.variables",
            "hq.output",
            "hq.soup_util",
            "hq.string_util",
            "hq.verbosity"
        ],
        "version": "0.0.4"
    },
    "hqapi": {
        "cmdline": [],
        "modules": [
            "HQApi",
            "HQApi.exceptions",
            "HQApi.hq_api",
            "HQApi.hq_api_cli",
            "HQApi.hq_websocket"
        ],
        "version": "2.5.1"
    },
    "hqc": {
        "cmdline": [],
        "modules": [
            "hqc",
            "hqc.hqc",
            "hqc.tests",
            "hqc.tests.test_common",
            "hqc.tests.test_hqc",
            "hqc.version"
        ],
        "version": "0.1.4"
    },
    "hqchart": {
        "cmdline": [],
        "modules": [
            "__init__",
            "umychart_complier_data",
            "umychart_complier_help",
            "umychart_complier_job",
            "umychart_complier_jsalgorithm",
            "umychart_complier_jscomplier",
            "umychart_complier_jsexecute",
            "umychart_complier_jsparser",
            "umychart_complier_jssymboldata",
            "umychart_complier_scanner",
            "umychart_complier_testcase",
            "umychart_complier_util"
        ],
        "version": "1.0.6"
    },
    "hqscord": {
        "cmdline": [],
        "modules": [
            "hqscord.hqscord"
        ],
        "version": "1.0.0"
    },
    "hqtfc-01": {
        "cmdline": [],
        "modules": [
            "hqtfc_01"
        ],
        "version": "1.0.0"
    },
    "hqueue": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "hr": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hr-little-api": {
        "cmdline": [],
        "modules": [
            "hr_little_api",
            "hr_little_api.builders",
            "hr_little_api.functional",
            "hr_little_api.json_api",
            "hr_little_api.robot",
            "hr_little_api.transport",
            "hr_little_api_examples",
            "hr_little_api_examples.action_callbacks",
            "hr_little_api_examples.actions",
            "hr_little_api_examples.custom_animations",
            "hr_little_api_examples.functional_api",
            "hr_little_api_examples.functional_api_callbacks",
            "hr_little_api_examples.sensors"
        ],
        "version": "19.10.1"
    },
    "hr-piano-sdk": {
        "cmdline": [],
        "modules": [
            "piano_sdk",
            "piano_sdk.api_requestor",
            "piano_sdk.enums",
            "piano_sdk.error",
            "piano_sdk.resources",
            "piano_sdk.security_utils"
        ],
        "version": "0.8.1"
    },
    "hr-prometheus": {
        "cmdline": [],
        "modules": [
            "hr_prometheus",
            "hr_prometheus.middleware",
            "hr_prometheus.monitors",
            "hr_prometheus.view"
        ],
        "version": "0.2.0"
    },
    "hra-etl": {
        "cmdline": [],
        "modules": [
            "hra_etl",
            "hra_etl.BaseTable",
            "hra_etl.labio",
            "hra_etl.labio.argParseWrapper",
            "hra_etl.labio.configWrapper",
            "hra_etl.labio.dbWrapper",
            "hra_etl.labio.logWrapper",
            "hra_etl.labio.utils",
            "hra_etl.labio.validators"
        ],
        "version": "0.0.4"
    },
    "hrdagen": {
        "cmdline": [],
        "modules": [
            "hrdagen"
        ],
        "version": "0.0.0"
    },
    "hrdns": {
        "cmdline": [],
        "modules": [
            "hrdns",
            "hrdns.commands",
            "hrdns.service"
        ],
        "version": "dev"
    },
    "hrds": {
        "cmdline": [],
        "modules": [
            "hrds",
            "hrds.hrds",
            "hrds.raster",
            "hrds.raster_buffer"
        ],
        "version": "0.1.2"
    },
    "hre": {
        "cmdline": [
            "hre.py"
        ],
        "modules": [
            "hre"
        ],
        "version": "1.0.0"
    },
    "hrelutils": {
        "cmdline": [],
        "modules": [
            "hrelutils",
            "hrelutils.functional",
            "hrelutils.time",
            "hrelutils.update"
        ],
        "version": "1.1"
    },
    "hrep": {
        "cmdline": [
            "hrep"
        ],
        "modules": [
            "hrep",
            "hrep.hexdump"
        ],
        "version": "0.3.0a0"
    },
    "hreports": {
        "cmdline": [],
        "modules": [
            "hreports",
            "hreports.cli",
            "hreports.config",
            "hreports.hreports",
            "hreports.template_filters"
        ],
        "version": "0.2.1"
    },
    "hrepr": {
        "cmdline": [],
        "modules": [
            "hrepr",
            "hrepr.h"
        ],
        "version": "0.2.4"
    },
    "hrf-estimation": {
        "cmdline": [],
        "modules": [
            "hrf_estimation",
            "hrf_estimation.data",
            "hrf_estimation.hrf",
            "hrf_estimation.rank_one_",
            "hrf_estimation.savitzky_golay",
            "hrf_estimation.utils"
        ],
        "version": "1.1"
    },
    "hrf-opt": {
        "cmdline": [],
        "modules": [
            "hrf_opt",
            "hrf_opt.find_opt_hrf",
            "hrf_opt.hrf_opt_main",
            "hrf_opt.hrf_opt_utils",
            "hrf_opt.load_config"
        ],
        "version": "1.0.3"
    },
    "hrflow": {
        "cmdline": [],
        "modules": [
            "hrflow",
            "hrflow.hrflow",
            "hrflow.hrflow.board",
            "hrflow.hrflow.document",
            "hrflow.hrflow.document.embedding",
            "hrflow.hrflow.document.linking",
            "hrflow.hrflow.document.parsing",
            "hrflow.hrflow.document.revealing",
            "hrflow.hrflow.hrflow",
            "hrflow.hrflow.job",
            "hrflow.hrflow.job.embedding",
            "hrflow.hrflow.job.indexing",
            "hrflow.hrflow.job.parsing",
            "hrflow.hrflow.job.reasoning",
            "hrflow.hrflow.job.scoring",
            "hrflow.hrflow.job.searching",
            "hrflow.hrflow.profile",
            "hrflow.hrflow.profile.attachment",
            "hrflow.hrflow.profile.embedding",
            "hrflow.hrflow.profile.exporter",
            "hrflow.hrflow.profile.importer",
            "hrflow.hrflow.profile.indexing",
            "hrflow.hrflow.profile.parsing",
            "hrflow.hrflow.profile.reasoning",
            "hrflow.hrflow.profile.revealing",
            "hrflow.hrflow.profile.scoring",
            "hrflow.hrflow.profile.searching",
            "hrflow.hrflow.source",
            "hrflow.hrflow.utils",
            "hrflow.hrflow.webhook",
            "hrflow.hrflow.webhook.base64Wrapper",
            "hrflow.hrflow.webhook.bytesutils",
            "hrflow.hrflow.webhook.hmacutils",
            "libs",
            "tests",
            "tests.config",
            "tests.test_api"
        ],
        "version": "1.8.6"
    },
    "hrim": {
        "cmdline": [],
        "modules": [
            "hrim",
            "hrim.scripts",
            "hrim.scripts.classes",
            "hrim.scripts.compiling",
            "hrim.scripts.parsing",
            "hrim.scripts.utils"
        ],
        "version": "0.3"
    },
    "hrisapi": {
        "cmdline": [],
        "modules": [
            "hrisapi",
            "hrisapi.exception",
            "hrisapi.schema",
            "hrisapi.zoho_schema"
        ],
        "version": "0.0.2"
    },
    "hrjota": {
        "cmdline": [],
        "modules": [
            "hrjota",
            "hrjota.globals",
            "hrjota.hrjota",
            "hrjota.utils",
            "hrjota.utils.text"
        ],
        "version": "0.0.7"
    },
    "hrl-i-yr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hrlo": {
        "cmdline": [
            "HRauth",
            "HRbot",
            "HRcompany",
            "HRday",
            "HRget",
            "HRlo",
            "HRphone",
            "HRpresence",
            "HRscripts",
            "HRtotalizator",
            "HRutils",
            "accaerralo"
        ],
        "modules": [
            "HRlo",
            "HRlo.HRauth",
            "HRlo.HRbot",
            "HRlo.HRcompany",
            "HRlo.HRday",
            "HRlo.HRdayList",
            "HRlo.HRget",
            "HRlo.HRlo",
            "HRlo.HRphone",
            "HRlo.HRpresence",
            "HRlo.HRscripts",
            "HRlo.HRtotalizator",
            "HRlo.HRutils",
            "HRlo.color",
            "HRlo.config",
            "HRlo.list_presents",
            "HRlo.utils",
            "HRlo/logs",
            "HRlo/logs.config",
            "HRlo/logs.daylog",
            "HRlo/logs.dayloglist",
            "HRlo/logs.logs",
            "HRlo/logs.test",
            "HRlo/logs.test_main",
            "HRlo/logs/dayutils",
            "HRlo/logs/dayutils.dayutils",
            "HRlo/scripts",
            "HRlo/scripts.dump_presents",
            "HRlo/scripts.monitor",
            "HRlo/scripts.report",
            "HRlo/scripts.scripts_utils"
        ],
        "version": "0.8.4"
    },
    "hrm": {
        "cmdline": [],
        "modules": [
            "employee",
            "employee.employee",
            "tests"
        ],
        "version": "0.0.1"
    },
    "hrmcompiler": {
        "cmdline": [],
        "modules": [
            "hrmcompiler",
            "hrmcompiler.assembler",
            "hrmcompiler.conversion",
            "hrmcompiler.jsonassembler",
            "hrmcompiler.main",
            "hrmcompiler.parser",
            "hrmcompiler.semantic_check"
        ],
        "version": "0.2.0"
    },
    "hrmserve": {
        "cmdline": [
            "hrmDeviceListServer"
        ],
        "modules": [
            "hrmserve",
            "hrmserve.devices_dashboard"
        ],
        "version": "0.1.dev5"
    },
    "hrmtools": {
        "cmdline": [],
        "modules": [
            "hrmtools",
            "hrmtools.config",
            "hrmtools.db",
            "hrmtools.db.filters",
            "hrmtools.devices",
            "hrmtools.devices.api",
            "hrmtools.devices.cls",
            "hrmtools.devices.io",
            "hrmtools.devices.ioxls",
            "hrmtools.devices.keys",
            "hrmtools.io",
            "hrmtools.io.ioconfig",
            "hrmtools.servers",
            "hrmtools.servers.device_list"
        ],
        "version": "0.1.dev6"
    },
    "hros": {
        "cmdline": [],
        "modules": [
            "hros"
        ],
        "version": "0.4"
    },
    "hrot-cli-tools": {
        "cmdline": [],
        "modules": [
            "hcli",
            "hcli.common",
            "hcli.pak",
            "hcli.pak.cli",
            "hcli.unpak",
            "hcli.unpak.cli"
        ],
        "version": "1.0.0"
    },
    "hroute": {
        "cmdline": [
            "hroute"
        ],
        "modules": [
            "hroute",
            "hroute.app",
            "hroute.config",
            "hroute.lookup",
            "hroute.proxy",
            "hroute.rewrite",
            "hroute.util"
        ],
        "version": "0.2.0"
    },
    "hrpc": {
        "cmdline": [],
        "modules": [
            "hrpc",
            "hrpc.client",
            "hrpc.exceptions",
            "hrpc.object_proxy",
            "hrpc.transport",
            "hrpc.transport.http",
            "hrpc.utils",
            "hrpc.utils.promise",
            "test",
            "test.test_http_transport"
        ],
        "version": "1.0.8"
    },
    "hrpdrebin": {
        "cmdline": [],
        "modules": [
            "hrpdrebin",
            "hrpdrebin.customui",
            "hrpdrebin.maincmd",
            "hrpdrebin.mainui",
            "hrpdrebin.mythen",
            "hrpdrebin.mythenui",
            "hrpdrebin.processed",
            "hrpdrebin.rangeui"
        ],
        "version": "1.1"
    },
    "hrprotoparser": {
        "cmdline": [],
        "modules": [
            "hrprotoparser",
            "hrprotoparser.cli",
            "hrprotoparser.protocol_parser"
        ],
        "version": "0.1.dev1"
    },
    "hrpy": {
        "cmdline": [],
        "modules": [
            "hrpy",
            "hrpy.hr"
        ],
        "version": "0.2.2"
    },
    "hrrrb": {
        "cmdline": [],
        "modules": [
            "hrrrb",
            "hrrrb.archive",
            "hrrrb.plots",
            "hrrrb.tools"
        ],
        "version": "0.0.1"
    },
    "hrs": {
        "cmdline": [],
        "modules": [
            "hrs",
            "hrs.aperture",
            "hrs.calibration",
            "hrs.frame",
            "hrs.logtable",
            "song",
            "song.ccdproc_mod",
            "song.eg_check_xdrift",
            "song.eg_extract1dspec",
            "song.extract",
            "song.master",
            "song.measure_xdrift",
            "song.measure_ydrift",
            "song.song",
            "song.test_script2",
            "song.utils",
            "twodspec",
            "twodspec.aperture",
            "twodspec.ccdproc_mod",
            "twodspec.config",
            "twodspec.normalization",
            "twodspec/extern",
            "twodspec/extern.interpolate",
            "twodspec/extern.polynomial"
        ],
        "version": "1.2.2"
    },
    "hrt": {
        "cmdline": [
            "hrt"
        ],
        "modules": [
            "hrt",
            "hrt.base",
            "hrt.cli",
            "hrt.input_handler",
            "hrt.interface",
            "hrt.plugin_manager",
            "hrt.script",
            "hrt.templates",
            "hrt.templates.bash",
            "hrt.templates.php",
            "hrt.templates.python",
            "hrt.templates.ruby",
            "hrt.translator",
            "hrt.url",
            "hrt.util"
        ],
        "version": "0.1.0"
    },
    "hrtools": {
        "cmdline": [],
        "modules": [
            "hrtools",
            "hrtools.glassdoor",
            "hrtools.utils"
        ],
        "version": "1.1.2"
    },
    "hrtpsnlpsdk": {
        "cmdline": [],
        "modules": [
            "hrtps",
            "hrtps.meanful",
            "hrtps.nvwa",
            "hrtps.oral_preprocess",
            "hrtps.oral_preprocess.preprocess",
            "hrtps.overtalk",
            "hrtps.overtalk.over",
            "hrtps.simer",
            "hrtps.star",
            "hrtps.star.rule_subject_ex",
            "hrtps.star.thriftio",
            "hrtps.star.thriftio.STARService",
            "hrtps.star.thriftio.constants",
            "hrtps.star.thriftio.ttypes",
            "hrtps.utils",
            "hrtps.utils.logutil",
            "hrtps.utils.text_utils",
            "hrtps.utils.tokenization",
            "hrtps.vad"
        ],
        "version": "0.2.12"
    },
    "hruid": {
        "cmdline": [],
        "modules": [
            "hruid",
            "hruid.adjectives",
            "hruid.adverbs",
            "hruid.cli",
            "hruid.hruid",
            "hruid.nouns",
            "hruid.verbs"
        ],
        "version": "0.0.3"
    },
    "hrv": {
        "cmdline": [],
        "modules": [
            "hrv",
            "hrv.classical",
            "hrv.detrend",
            "hrv.exceptions",
            "hrv.filters",
            "hrv.io",
            "hrv.nonstationary",
            "hrv.rri",
            "hrv.sampledata",
            "hrv.sampledata._load",
            "hrv.utils"
        ],
        "version": "0.2.8"
    },
    "hrv-analysis": {
        "cmdline": [],
        "modules": [
            "hrvanalysis",
            "hrvanalysis.extract_features",
            "hrvanalysis.plot",
            "hrvanalysis.preprocessing"
        ],
        "version": "1.0.3"
    },
    "hryniu1984": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hs": {
        "cmdline": [],
        "modules": [
            "hydroserving",
            "hydroserving.cli",
            "hydroserving.cli.commands",
            "hydroserving.cli.commands.app",
            "hydroserving.cli.commands.cluster",
            "hydroserving.cli.commands.deployment_configuration",
            "hydroserving.cli.commands.hs",
            "hydroserving.cli.commands.model",
            "hydroserving.cli.commands.profile",
            "hydroserving.cli.commands.root",
            "hydroserving.cli.commands.servable",
            "hydroserving.cli.context",
            "hydroserving.cli.context_object",
            "hydroserving.cli.help",
            "hydroserving.config",
            "hydroserving.config.cluster_config",
            "hydroserving.config.config",
            "hydroserving.config.parser",
            "hydroserving.config.settings",
            "hydroserving.core",
            "hydroserving.core.application",
            "hydroserving.core.application.entities",
            "hydroserving.core.application.parser",
            "hydroserving.core.application.service",
            "hydroserving.core.apply",
            "hydroserving.core.contract",
            "hydroserving.core.deployment_config",
            "hydroserving.core.deployment_config.parser",
            "hydroserving.core.deployment_config.service",
            "hydroserving.core.git_extractor",
            "hydroserving.core.image",
            "hydroserving.core.model",
            "hydroserving.core.model.entities",
            "hydroserving.core.model.package",
            "hydroserving.core.model.parser",
            "hydroserving.core.model.service",
            "hydroserving.core.model.upload",
            "hydroserving.core.monitoring",
            "hydroserving.core.monitoring.service",
            "hydroserving.core.monitoring_configuration",
            "hydroserving.core.monitoring_configuration.monitoring_configuration",
            "hydroserving.core.monitoring_configuration.parser",
            "hydroserving.core.servable",
            "hydroserving.core.servable.service",
            "hydroserving.http",
            "hydroserving.http.remote_connection",
            "hydroserving.integrations",
            "hydroserving.integrations.dvc",
            "hydroserving.integrations.git",
            "hydroserving.python",
            "hydroserving.python.contract_decorators",
            "hydroserving.python.server",
            "hydroserving.python.setup",
            "hydroserving.python.types",
            "hydroserving.python.types.base",
            "hydroserving.python.types.num",
            "hydroserving.python.types.python",
            "hydroserving.util",
            "hydroserving.util.dictutil",
            "hydroserving.util.fileutil",
            "hydroserving.util.log_handler",
            "hydroserving.util.yamlutil",
            "tests",
            "tests.parsers",
            "tests.parsers.test_application",
            "tests.parsers.test_monitoring",
            "tests.test_cli",
            "tests.test_deployment_configuration",
            "tests.util",
            "tests.util.test_fileutils",
            "tests.utils"
        ],
        "version": "2.4.0"
    },
    "hs-build-tools": {
        "cmdline": [],
        "modules": [
            "hs_build_tools",
            "hs_build_tools.assert_text_template",
            "hs_build_tools.nose",
            "hs_build_tools.pytest",
            "hs_build_tools.pyz",
            "hs_build_tools.release",
            "hs_build_tools.runenv",
            "hs_build_tools.tidy"
        ],
        "version": "2020.4"
    },
    "hs-dbus-signature": {
        "cmdline": [],
        "modules": [
            "hs_dbus_signature",
            "hs_dbus_signature._signature",
            "hs_dbus_signature._version"
        ],
        "version": "0.6"
    },
    "hs-dl": {
        "cmdline": [],
        "modules": [
            "hs_dl"
        ],
        "version": "1.1.0"
    },
    "hs-formation": {
        "cmdline": [],
        "modules": [
            "hs_formation",
            "hs_formation.__version__",
            "hs_formation.for_requests",
            "hs_formation.formation",
            "hs_formation.middleware",
            "hs_formation.middleware.accept",
            "hs_formation.middleware.breaker",
            "hs_formation.middleware.context",
            "hs_formation.middleware.context_logger",
            "hs_formation.middleware.logger",
            "hs_formation.middleware.request_duration",
            "hs_formation.middleware.request_id",
            "hs_formation.middleware.retry",
            "hs_formation.middleware.timeout",
            "hs_formation.middleware.ua"
        ],
        "version": "4.1.13"
    },
    "hs-infra": {
        "cmdline": [],
        "modules": [
            "hs_infra",
            "hs_infra.adapters",
            "hs_infra.adapters.base",
            "hs_infra.adapters.base.base_adapter",
            "hs_infra.adapters.email_adapters",
            "hs_infra.adapters.email_adapters.base_email_adapter",
            "hs_infra.adapters.message_adapters",
            "hs_infra.adapters.message_adapters.base_message_adapter",
            "hs_infra.config",
            "hs_infra.config.runtime_config",
            "hs_infra.dal",
            "hs_infra.dal.base",
            "hs_infra.dal.base.base_dal",
            "hs_infra.entities",
            "hs_infra.entities.base",
            "hs_infra.entities.base.base_entity",
            "hs_infra.enums",
            "hs_infra.enums.base",
            "hs_infra.enums.base.base_enum",
            "hs_infra.enums.request",
            "hs_infra.enums.request.request_action_enum",
            "hs_infra.enums.request.response_status_enum",
            "hs_infra.managers",
            "hs_infra.managers.base",
            "hs_infra.managers.base.base_manager",
            "hs_infra.managers.base.base_redis_manager",
            "hs_infra.managers.message",
            "hs_infra.managers.message.message_redis_manager",
            "hs_infra.meta_classes",
            "hs_infra.meta_classes.singleton_meta_class",
            "hs_infra.utils",
            "hs_infra.utils.base_utils",
            "hs_infra.utils.date_time_utils",
            "hs_infra.utils.mobile_number_utils",
            "hs_infra.utils.string_utils",
            "hs_infra.utils.utils",
            "hs_infra.wrappers",
            "hs_infra.wrappers.request_wrapper"
        ],
        "version": "0.0.9"
    },
    "hs-package": {
        "cmdline": [],
        "modules": [
            "hs_httpController",
            "hs_httpController.CurlHttpController",
            "hs_logController",
            "hs_logController.LogController"
        ],
        "version": "0.0.7"
    },
    "hs-process": {
        "cmdline": [],
        "modules": [
            "hs_process",
            "hs_process.batch",
            "hs_process.segment",
            "hs_process.spatial_mod",
            "hs_process.spec_mod",
            "hs_process.utilities"
        ],
        "version": "0.0.3"
    },
    "hs-recursion-list": {
        "cmdline": [],
        "modules": [
            "HS_recursion_List"
        ],
        "version": "1.0.0"
    },
    "hs-restclient": {
        "cmdline": [],
        "modules": [
            "hs_restclient",
            "hs_restclient.compat",
            "hs_restclient.endpoints",
            "hs_restclient.endpoints.resources",
            "hs_restclient.exceptions",
            "hs_restclient.generators",
            "hs_restclient.util"
        ],
        "version": "1.3.7"
    },
    "hs-rpc": {
        "cmdline": [],
        "modules": [
            "hs_rpc",
            "hs_rpc.decorates",
            "hs_rpc.exceptions",
            "hs_rpc.proto",
            "hs_rpc.proto.rpc_data_pb2",
            "hs_rpc.proto.rpc_data_pb2_grpc",
            "hs_rpc.request",
            "hs_rpc.rpc",
            "hs_rpc.server"
        ],
        "version": "0.1.7"
    },
    "hs-social-listener": {
        "cmdline": [],
        "modules": [
            "hs_social_listener",
            "hs_social_listener.twitter_listener"
        ],
        "version": "1.7"
    },
    "hs-test1": {
        "cmdline": [],
        "modules": [
            "my_prog",
            "my_prog.demo1",
            "my_prog.demo2"
        ],
        "version": "1.0"
    },
    "hs110-exporter": {
        "cmdline": [],
        "modules": [
            "hs110_exporter",
            "hs110_exporter.collector",
            "hs110_exporter.http"
        ],
        "version": "0.0.1"
    },
    "hs2client": {
        "cmdline": [],
        "modules": [
            "hs2client",
            "hs2client.commons",
            "hs2client.genthrift",
            "hs2client.genthrift.TCLIService",
            "hs2client.genthrift.TCLIService.TCLIService",
            "hs2client.genthrift.TCLIService.constants",
            "hs2client.genthrift.TCLIService.ttypes",
            "hs2client.hs2client"
        ],
        "version": "0.1.1"
    },
    "hs3sh": {
        "cmdline": [],
        "modules": [
            "hs3",
            "hs3.cmd",
            "hs3.conf",
            "hs3.init",
            "hs3.parse",
            "hs3.s3config",
            "hs3.test_aclcleanup"
        ],
        "version": "1.1.7"
    },
    "hsalf": {
        "cmdline": [],
        "modules": [
            "hsalf",
            "hsalf.swf",
            "hsalf.test_swf"
        ],
        "version": "0.0.1"
    },
    "hsaquery": {
        "cmdline": [],
        "modules": [
            "hsaquery",
            "hsaquery.fetch",
            "hsaquery.fetch_mast",
            "hsaquery.overlaps",
            "hsaquery.query",
            "hsaquery.utils",
            "hsaquery.version"
        ],
        "version": "0.2.0"
    },
    "hsaudiotag3k": {
        "cmdline": [],
        "modules": [
            "hsaudiotag",
            "hsaudiotag.aiff",
            "hsaudiotag.auto",
            "hsaudiotag.flac",
            "hsaudiotag.genres",
            "hsaudiotag.id3v1",
            "hsaudiotag.id3v2",
            "hsaudiotag.mp4",
            "hsaudiotag.mpeg",
            "hsaudiotag.ogg",
            "hsaudiotag.util",
            "hsaudiotag.wma"
        ],
        "version": "1.1.3.post1"
    },
    "hsauth": {
        "cmdline": [],
        "modules": [
            "hs_auth",
            "hs_auth.decor_token"
        ],
        "version": "1.0.3"
    },
    "hsbcore": {
        "cmdline": [],
        "modules": [
            "betcore",
            "betcore.browser",
            "betcore.exception",
            "betcore.horse",
            "betcore.horse.AA",
            "betcore.horse.AA_Admin",
            "betcore.horse.DB",
            "betcore.horse.DB_Admin",
            "betcore.horse.LW",
            "betcore.horse.LW_Admin",
            "betcore.horse.config",
            "betcore.util"
        ],
        "version": "1.0.0"
    },
    "hsc": {
        "cmdline": [],
        "modules": [
            "hsc",
            "hsc.constants",
            "hsc.crawler",
            "hsc.metadata",
            "hsc.progress_bar"
        ],
        "version": "1.2.2"
    },
    "hscacheutils": {
        "cmdline": [],
        "modules": [
            "hscacheutils",
            "hscacheutils.generational_cache",
            "hscacheutils.raw_cache",
            "hscacheutils.setting_wrappers",
            "hscacheutils.simple_memory_cache"
        ],
        "version": "0.1.8"
    },
    "hscquery": {
        "cmdline": [],
        "modules": [
            "hscquery"
        ],
        "version": "0.2.1"
    },
    "hscraper": {
        "cmdline": [],
        "modules": [
            "hscraper",
            "hscraper.h_core",
            "hscraper.plugins",
            "hscraper.plugins.danbooru",
            "hscraper.plugins.danbooru.danbooru_scraper",
            "hscraper.plugins.ehen",
            "hscraper.plugins.ehen.ehen_scraper",
            "hscraper.plugins.hitomi",
            "hscraper.plugins.hitomi.hitomi_scraper",
            "hscraper.plugins.plugin_base",
            "hscraper.plugins.r34",
            "hscraper.plugins.r34.r34_scraper"
        ],
        "version": "1.1.3"
    },
    "hsdata": {
        "cmdline": [],
        "modules": [
            "hsdata",
            "hsdata.core",
            "hsdata.hearthstats",
            "hsdata.hsbox",
            "hsdata.utils"
        ],
        "version": "0.2.16"
    },
    "hsdbi": {
        "cmdline": [],
        "modules": [
            "hsdbi",
            "hsdbi.base",
            "hsdbi.errors",
            "hsdbi.mongo",
            "hsdbi.sql"
        ],
        "version": "0.1a19"
    },
    "hsdecks": {
        "cmdline": [],
        "modules": [
            "hsdecks",
            "hsdecks.hsdecks"
        ],
        "version": "0.4.1"
    },
    "hse-de-project": {
        "cmdline": [],
        "modules": [
            "hse_de_project",
            "hse_de_project.AdamsMethod",
            "hse_de_project.AdamsMethodIII",
            "hse_de_project.AdamsMethodIV",
            "hse_de_project.AdamsPC",
            "hse_de_project.DEMethod",
            "hse_de_project.EulerMethod",
            "hse_de_project.ImplicitRungeKuttaMethodII",
            "hse_de_project.ImprovedEulerMethod",
            "hse_de_project.RungeKuttaMethodIV",
            "hse_de_project.TaylorMethod",
            "hse_de_project.methods"
        ],
        "version": "0.0.13"
    },
    "hse-ruz": {
        "cmdline": [],
        "modules": [
            "ruz",
            "ruz.api",
            "ruz.schema",
            "ruz.utils"
        ],
        "version": "2.1.2"
    },
    "hse-search": {
        "cmdline": [],
        "modules": [
            "hse_search",
            "hse_search.analyzers",
            "hse_search.index",
            "hse_search.index.bigtable_index",
            "hse_search.index.http_index",
            "hse_search.index.index",
            "hse_search.index.posterizer",
            "hse_search.index.sharded_index",
            "hse_search.index.worker_index_manager",
            "hse_search.low_level",
            "hse_search.mapping",
            "hse_search.query_components",
            "hse_search.query_components._and",
            "hse_search.query_components._filter",
            "hse_search.query_components._or",
            "hse_search.query_components.bool",
            "hse_search.query_components.boost",
            "hse_search.query_components.field_boost",
            "hse_search.query_components.interleave",
            "hse_search.query_components.match",
            "hse_search.query_components.must",
            "hse_search.query_components.must_not",
            "hse_search.query_components.query_component",
            "hse_search.query_components.range",
            "hse_search.query_components.scored_term",
            "hse_search.query_components.should",
            "hse_search.query_components.term",
            "hse_search.query_components.terms",
            "hse_search.query_parser",
            "hse_search.query_result",
            "hse_search.utils"
        ],
        "version": "0.0.17"
    },
    "hsecscan": {
        "cmdline": [],
        "modules": [
            "hsecscan",
            "hsecscan.hsecscan",
            "hsecscan.hsecscancmd"
        ],
        "version": "0.0.1"
    },
    "hsedisti": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hsep-automation": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hsettings": {
        "cmdline": [],
        "modules": [
            "hsettings",
            "hsettings.hsettings",
            "hsettings.loaders"
        ],
        "version": "0.1.5"
    },
    "hsfs": {
        "cmdline": [],
        "modules": [
            "hsfs",
            "hsfs.client",
            "hsfs.client.auth",
            "hsfs.client.base",
            "hsfs.client.exceptions",
            "hsfs.client.external",
            "hsfs.client.hopsworks",
            "hsfs.connection",
            "hsfs.core",
            "hsfs.core.feature_group_api",
            "hsfs.core.feature_group_engine",
            "hsfs.core.feature_store_api",
            "hsfs.core.feed_model_engine",
            "hsfs.core.hosts_api",
            "hsfs.core.join",
            "hsfs.core.project_api",
            "hsfs.core.query",
            "hsfs.core.query_constructor_api",
            "hsfs.core.services_api",
            "hsfs.core.storage_connector_api",
            "hsfs.core.tags_api",
            "hsfs.core.training_dataset_api",
            "hsfs.core.training_dataset_engine",
            "hsfs.decorators",
            "hsfs.engine",
            "hsfs.engine.hive",
            "hsfs.engine.spark",
            "hsfs.feature",
            "hsfs.feature_group",
            "hsfs.feature_store",
            "hsfs.storage_connector",
            "hsfs.tag",
            "hsfs.training_dataset",
            "hsfs.util",
            "hsfs.version"
        ],
        "version": "1.4.0"
    },
    "hsgconv": {
        "cmdline": [],
        "modules": [
            "hsgconv",
            "hsgconv.hsgconv"
        ],
        "version": "1.1.0"
    },
    "hsh": {
        "cmdline": [],
        "modules": [
            "hsh",
            "hsh.app",
            "hsh.library",
            "hsh.library.hash",
            "hsh.settings"
        ],
        "version": "1.1.0"
    },
    "hshare": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hshu": {
        "cmdline": [],
        "modules": [
            "hshu"
        ],
        "version": "1.0.0"
    },
    "hsi": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.1"
    },
    "hsize": {
        "cmdline": [],
        "modules": [
            "hsize",
            "hsize.hsize",
            "hsize.tests"
        ],
        "version": "0.0.2"
    },
    "hsl-builder": {
        "cmdline": [],
        "modules": [
            "hsl_builder",
            "hsl_builder.base",
            "hsl_builder.button",
            "hsl_builder.carousel",
            "hsl_builder.elements",
            "hsl_builder.elements.actionable",
            "hsl_builder.elements.carousel_item",
            "hsl_builder.elements.form_field",
            "hsl_builder.elements.silent_action",
            "hsl_builder.form",
            "hsl_builder.native_action",
            "hsl_builder.silent",
            "hsl_builder.system",
            "hsl_builder.text"
        ],
        "version": "0.0.1b0"
    },
    "hslcommunication": {
        "cmdline": [],
        "modules": [
            "HslCommunication"
        ],
        "version": "1.0.4"
    },
    "hslog": {
        "cmdline": [],
        "modules": [],
        "version": "1.11.0"
    },
    "hsluv": {
        "cmdline": [],
        "modules": [
            "hsluv"
        ],
        "version": "5.0.0"
    },
    "hsm": {
        "cmdline": [],
        "modules": [
            "hsm",
            "hsm.actor",
            "hsm.runtime_actor",
            "hsm.runtime_queue",
            "hsm.test",
            "hsm.test.test_actor",
            "hsm.test.test_actor2",
            "hsm.test.test_actor3",
            "hsm.test.test_iomonitor"
        ],
        "version": "0.1.9"
    },
    "hsme": {
        "cmdline": [],
        "modules": [
            "fsm",
            "fsm.core",
            "fsm.parsers",
            "tests",
            "tests.charts",
            "tests.charts.rules",
            "tests.test_parsers",
            "tests.test_process"
        ],
        "version": "0.3"
    },
    "hsmfile": {
        "cmdline": [],
        "modules": [
            "hsmfile"
        ],
        "version": "0.1.2"
    },
    "hsmpy3": {
        "cmdline": [],
        "modules": [
            "hsmpy3",
            "hsmpy3.HSMScripts",
            "hsmpy3.args",
            "hsmpy3.common",
            "hsmpy3.crash",
            "hsmpy3.db",
            "hsmpy3.fars",
            "hsmpy3.fields",
            "hsmpy3.fields_IL",
            "hsmpy3.fields_SC",
            "hsmpy3.il",
            "hsmpy3.network",
            "hsmpy3.nm",
            "hsmpy3.precrash"
        ],
        "version": "1.4"
    },
    "hsmwiz": {
        "cmdline": [],
        "modules": [
            "hsmwiz",
            "hsmwiz.ActionChangePIN",
            "hsmwiz.ActionCheckEngine",
            "hsmwiz.ActionExplore",
            "hsmwiz.ActionFormat",
            "hsmwiz.ActionGenCSR",
            "hsmwiz.ActionGetPublicKey",
            "hsmwiz.ActionIdentify",
            "hsmwiz.ActionInit",
            "hsmwiz.ActionKeyGen",
            "hsmwiz.ActionPutCRT",
            "hsmwiz.ActionRemoveKey",
            "hsmwiz.ActionUnblock",
            "hsmwiz.ActionVerifyPIN",
            "hsmwiz.BaseAction",
            "hsmwiz.CmdTools",
            "hsmwiz.FriendlyArgumentParser",
            "hsmwiz.HardwareSecurityModule",
            "hsmwiz.MultiCommand",
            "hsmwiz.PrefixMatcher"
        ],
        "version": "0.0.1"
    },
    "hsopdhr": {
        "cmdline": [],
        "modules": [
            "dhrpackage",
            "dhrpackage.global_vars",
            "dhrpackage.hsop_services",
            "dhrpackage.hsop_version",
            "dhrpackage.ibe_details",
            "dhrpackage.log_exception",
            "dhrpackage.logging_monitoring_details",
            "dhrpackage.vmware_details"
        ],
        "version": "0.1"
    },
    "hsp": {
        "cmdline": [],
        "modules": [
            "hsp",
            "hsp.exception",
            "hsp.hsp",
            "hsp.stream"
        ],
        "version": "0.1.0"
    },
    "hspatial": {
        "cmdline": [],
        "modules": [
            "hspatial",
            "hspatial.cli",
            "hspatial.hspatial",
            "hspatial.test"
        ],
        "version": "2.1.0"
    },
    "hspectral": {
        "cmdline": [],
        "modules": [
            "hspectral",
            "hspectral._version",
            "hspectral.detectors",
            "hspectral.detectors.RX",
            "hspectral.generators",
            "hspectral.generators.generators",
            "hspectral.tests",
            "hspectral.tests.test_detectors",
            "hspectral.tests.test_generators",
            "hspectral.utils",
            "hspectral.utils.basic"
        ],
        "version": "0.1"
    },
    "hspellpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "hspf-utils": {
        "cmdline": [],
        "modules": [
            "hspf_utils",
            "hspf_utils.hspf_utils"
        ],
        "version": "5.1.1"
    },
    "hspfbintoolbox": {
        "cmdline": [],
        "modules": [
            "hspfbintoolbox",
            "hspfbintoolbox.hspfbintoolbox"
        ],
        "version": "6.0.0"
    },
    "hspicefile": {
        "cmdline": [],
        "modules": [
            "hspicefile"
        ],
        "version": "1.01"
    },
    "hspotipy": {
        "cmdline": [],
        "modules": [
            "hspotipy",
            "hspotipy.user"
        ],
        "version": "0.0.1"
    },
    "hspsms": {
        "cmdline": [],
        "modules": [
            "hspsms",
            "hspsms.backends",
            "hspsms.main"
        ],
        "version": "0.0.3"
    },
    "hspy": {
        "cmdline": [],
        "modules": [
            "marketplace",
            "marketplace.decorators",
            "marketplace.logger",
            "marketplace.middleware",
            "marketplace.middleware.anchor_fix",
            "marketplace.middleware.auth",
            "marketplace.middleware.debug_mode_logging",
            "marketplace.middleware.error_goggles",
            "marketplace.middleware.mock",
            "marketplace.request_supplement"
        ],
        "version": "1.6.4"
    },
    "hsq": {
        "cmdline": [],
        "modules": [
            "hsq",
            "hsq.hsq"
        ],
        "version": "1.0.2"
    },
    "hsreplay": {
        "cmdline": [],
        "modules": [],
        "version": "1.13.0"
    },
    "hss": {
        "cmdline": [],
        "modules": [
            "hss"
        ],
        "version": "0.0.4"
    },
    "hss-brunorosilva": {
        "cmdline": [],
        "modules": [
            "hss"
        ],
        "version": "0.0.1"
    },
    "hss-ml": {
        "cmdline": [],
        "modules": [
            "ML_platform.utils"
        ],
        "version": "1.0.1"
    },
    "hss-server": {
        "cmdline": [
            "hss-cli",
            "hss-server"
        ],
        "modules": [
            "hss_server",
            "hss_server.collection",
            "hss_server.controller",
            "hss_server.httptts",
            "hss_server.logger",
            "hss_server.mqtt",
            "hss_server.rpc",
            "hss_server.skill",
            "hss_server.skillserver"
        ],
        "version": "0.5.2"
    },
    "hss-skill": {
        "cmdline": [],
        "modules": [
            "hss_skill",
            "hss_skill.hss",
            "hss_skill.logger",
            "hss_skill.rpc"
        ],
        "version": "0.5.0"
    },
    "hssa": {
        "cmdline": [],
        "modules": [
            "hssa",
            "hssa.AP",
            "hssa.HS",
            "hssa.HSFrame",
            "hssa.HSSA",
            "hssa.anisodiff"
        ],
        "version": "0.4.1"
    },
    "hssadmin": {
        "cmdline": [],
        "modules": [
            "hssadmin",
            "hssadmin.adminclient",
            "hssadmin.admincore"
        ],
        "version": "0.3.1"
    },
    "hst": {
        "cmdline": [],
        "modules": [
            "hst",
            "hst.hst",
            "hst.indexer",
            "hst.levenshtein",
            "hst.matcher"
        ],
        "version": "0.1.11"
    },
    "hstapcorr": {
        "cmdline": [],
        "modules": [
            "hstapcorr",
            "hstapcorr.grismapcorr",
            "hstapcorr.photapcorr"
        ],
        "version": "1.3.0"
    },
    "hstaxe": {
        "cmdline": [],
        "modules": [
            "hstaxe",
            "hstaxe.axeException",
            "hstaxe.axeerror",
            "hstaxe.axesim",
            "hstaxe.axesim.WCSdata",
            "hstaxe.axesim.axesim_verify",
            "hstaxe.axesim.axesimtasks",
            "hstaxe.axesim.imagemaker",
            "hstaxe.axesim.interpolator",
            "hstaxe.axesim.modspeclist",
            "hstaxe.axesim.realworld",
            "hstaxe.axesim.templateimages",
            "hstaxe.axesim.templatespectra",
            "hstaxe.axesrc",
            "hstaxe.axesrc.axecommands",
            "hstaxe.axesrc.axeinputs",
            "hstaxe.axesrc.axeiol",
            "hstaxe.axesrc.axelowlev",
            "hstaxe.axesrc.axepreptor",
            "hstaxe.axesrc.axesingextr",
            "hstaxe.axesrc.axetasks",
            "hstaxe.axesrc.configfile",
            "hstaxe.axesrc.dither",
            "hstaxe.axesrc.dppdumps",
            "hstaxe.axesrc.drizzleobjects",
            "hstaxe.axesrc.fcubeobjs",
            "hstaxe.axesrc.imagemaker",
            "hstaxe.axesrc.inputchecks",
            "hstaxe.axesrc.iolmaking",
            "hstaxe.axesrc.mefobjects",
            "hstaxe.axesrc.nlincoeffs",
            "hstaxe.axesrc.pysex2gol",
            "hstaxe.config",
            "hstaxe.utils"
        ],
        "version": "0.6.0"
    },
    "hstgrism": {
        "cmdline": [],
        "modules": [
            "hstgrism",
            "hstgrism.background",
            "hstgrism.computesip",
            "hstgrism.computetracenwavelength",
            "hstgrism.computexyref",
            "hstgrism.confreader",
            "hstgrism.container",
            "hstgrism.contamination",
            "hstgrism.cutout2d",
            "hstgrism.extract",
            "hstgrism.flatfield",
            "hstgrism.grismapcorr",
            "hstgrism.headersummary",
            "hstgrism.objectmask",
            "hstgrism.show_bbox",
            "hstgrism.show_overview",
            "hstgrism.show_sum1d",
            "hstgrism.sub2full",
            "hstgrism.to_fullframe",
            "hstgrism.wfc3irg102",
            "hstgrism.wfc3irg141",
            "hstgrism.wfc3uvisg280"
        ],
        "version": "8.5.0"
    },
    "hstk": {
        "cmdline": [],
        "modules": [
            "hstk",
            "hstk.hscli",
            "hstk.hsscript"
        ],
        "version": "4.1.0.1"
    },
    "hstools": {
        "cmdline": [],
        "modules": [
            "hstools",
            "hstools.auth",
            "hstools.compat",
            "hstools.funcs",
            "hstools.funcs.add",
            "hstools.funcs.content",
            "hstools.funcs.create",
            "hstools.funcs.delete",
            "hstools.funcs.describe",
            "hstools.funcs.get",
            "hstools.funcs.init",
            "hstools.funcs.ls",
            "hstools.funcs.move",
            "hstools.hydroshare",
            "hstools.log",
            "hstools.progress",
            "hstools.resource",
            "hstools.threads",
            "hstools.utilities",
            "test",
            "test.test_add",
            "test.test_auth",
            "test.test_create",
            "test.test_download"
        ],
        "version": "0.0.3"
    },
    "hstore-field": {
        "cmdline": [],
        "modules": [
            "hstore_field",
            "hstore_field.fields",
            "hstore_field.forms",
            "hstore_field.query"
        ],
        "version": "1.0.3"
    },
    "hstore-field-caseinsensitive": {
        "cmdline": [],
        "modules": [
            "hstore_field",
            "hstore_field.fields",
            "hstore_field.forms",
            "hstore_field.query"
        ],
        "version": "1.0.2"
    },
    "hstphot": {
        "cmdline": [],
        "modules": [
            "hstphot",
            "hstphot.apphot",
            "hstphot.background",
            "hstphot.container",
            "hstphot.cutout2d",
            "hstphot.mag2flux",
            "hstphot.objectmask",
            "hstphot.phot2abmag",
            "hstphot.photapcorr",
            "hstphot.read_ds9region",
            "hstphot.show_source",
            "hstphot.show_sources",
            "hstphot.show_sum1d",
            "hstphot.to_fullframe"
        ],
        "version": "1.3.0"
    },
    "hstproprep": {
        "cmdline": [],
        "modules": [
            "hstproprep",
            "hstproprep.concat_tablelist",
            "hstproprep.header_extract_for_proposal"
        ],
        "version": "1.0.0"
    },
    "hstsparser": {
        "cmdline": [],
        "modules": [
            "hstsparser"
        ],
        "version": "1.1.4"
    },
    "hstspreload": {
        "cmdline": [],
        "modules": [
            "hstspreload"
        ],
        "version": "2020.10.6"
    },
    "hsub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hsuite": {
        "cmdline": [
            "hsuite-s3dump"
        ],
        "modules": [
            "hsuite",
            "hsuite.cli",
            "hsuite.cli.arguments",
            "hsuite.cli.s3dump",
            "hsuite.cli.scripts",
            "hsuite.constants",
            "hsuite.context",
            "hsuite.errors",
            "hsuite.modules",
            "hsuite.modules.http",
            "hsuite.modules.thread",
            "hsuite.release",
            "hsuite.utils",
            "hsuite.utils._text",
            "hsuite.utils.color",
            "hsuite.utils.common",
            "hsuite.utils.common._collections_compat",
            "hsuite.utils.common._json_compat",
            "hsuite.utils.common.collections",
            "hsuite.utils.context_objects",
            "hsuite.utils.display",
            "hsuite.utils.singleton",
            "hsuite.utils.six"
        ],
        "version": "1.2.1"
    },
    "hsv-calibration": {
        "cmdline": [],
        "modules": [
            "hsv_calibration",
            "hsv_calibration.hsv_calibration"
        ],
        "version": "0.7"
    },
    "hsvhub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hsvpicker": {
        "cmdline": [],
        "modules": [
            "hsvpicker",
            "hsvpicker.hsv",
            "hsvpicker.test"
        ],
        "version": "4.0"
    },
    "hsw2v": {
        "cmdline": [],
        "modules": [
            "w2v",
            "w2v.collation",
            "w2v.datasets",
            "w2v.frequencies",
            "w2v.inputs",
            "w2v.neg_sampling",
            "w2v.preprocessing",
            "w2v.readers",
            "w2v.subsampling",
            "w2v.tokenization",
            "w2v.vocabulary"
        ],
        "version": "1.0a5"
    },
    "hsync": {
        "cmdline": [],
        "modules": [
            "hsync",
            "hsync.dir",
            "hsync.local",
            "hsync.server"
        ],
        "version": "1.0.4"
    },
    "hszinc": {
        "cmdline": [],
        "modules": [
            "hszinc",
            "hszinc.datatypes",
            "hszinc.dumper",
            "hszinc.filter_ast",
            "hszinc.grid",
            "hszinc.grid_filter",
            "hszinc.jsondumper",
            "hszinc.jsonparser",
            "hszinc.metadata",
            "hszinc.parser",
            "hszinc.pintutil",
            "hszinc.sortabledict",
            "hszinc.version",
            "hszinc.zincdumper",
            "hszinc.zincparser",
            "hszinc.zoneinfo",
            "tests",
            "tests.pint_enable",
            "tests.pint_units",
            "tests.sortabledict_tests",
            "tests.test_acid",
            "tests.test_datatype",
            "tests.test_dumper",
            "tests.test_filter",
            "tests.test_grid",
            "tests.test_import",
            "tests.test_parser",
            "tests.test_pint",
            "tests.test_version",
            "tests.test_zoneinfo"
        ],
        "version": "1.3.1"
    },
    "ht": {
        "cmdline": [],
        "modules": [
            "ht",
            "ht.air_cooler",
            "ht.boiling_flow",
            "ht.boiling_nucleic",
            "ht.boiling_plate",
            "ht.condensation",
            "ht.conduction",
            "ht.conv_external",
            "ht.conv_free_enclosed",
            "ht.conv_free_immersed",
            "ht.conv_internal",
            "ht.conv_jacket",
            "ht.conv_packed_bed",
            "ht.conv_plate",
            "ht.conv_supercritical",
            "ht.conv_tube_bank",
            "ht.conv_two_phase",
            "ht.core",
            "ht.hx",
            "ht.insulation",
            "ht.numba",
            "ht.numba_vectorized",
            "ht.radiation",
            "ht.units",
            "ht.vectorized"
        ],
        "version": "0.1.57"
    },
    "ht-nester": {
        "cmdline": [],
        "modules": [
            "HT_nester"
        ],
        "version": "1.0.0"
    },
    "ht0740": {
        "cmdline": [],
        "modules": [
            "ht0740"
        ],
        "version": "0.0.2"
    },
    "htable": {
        "cmdline": [],
        "modules": [
            "htable"
        ],
        "version": "0.1.1"
    },
    "htables": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.1"
    },
    "htail": {
        "cmdline": [],
        "modules": [
            "htail"
        ],
        "version": "1.4"
    },
    "htam": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.9"
    },
    "htap": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "htb": {
        "cmdline": [],
        "modules": [
            "htb"
        ],
        "version": "1.1.0"
    },
    "htb-cli": {
        "cmdline": [
            "hackthebox.py"
        ],
        "modules": [
            "htb-cli"
        ],
        "version": "0.1.2"
    },
    "htbao": {
        "cmdline": [],
        "modules": [
            "baizhanMath2",
            "baizhanMath2.demo1",
            "baizhanMath2.demo2"
        ],
        "version": "1.0"
    },
    "htbapi": {
        "cmdline": [],
        "modules": [
            "htbapi",
            "htbapi.challenges",
            "htbapi.core",
            "htbapi.machines",
            "htbapi.social"
        ],
        "version": "1.3"
    },
    "htbcli": {
        "cmdline": [],
        "modules": [
            "htbcli"
        ],
        "version": "1.1.4"
    },
    "htbclient": {
        "cmdline": [],
        "modules": [
            "HTBClient",
            "HTBClient.client",
            "HTBClient.models",
            "HTBClient.models.assigned",
            "HTBClient.models.machine",
            "HTBClient.models.machinedetails",
            "HTBClient.models.own",
            "HTBClient.models.spawned",
            "HTBClient.models.terminating"
        ],
        "version": "0.4.0"
    },
    "htblowfishstoreplugin": {
        "cmdline": [],
        "modules": [
            "htblowfishstore",
            "htblowfishstore.htblowfishstore"
        ],
        "version": "0.1"
    },
    "htbuilder": {
        "cmdline": [],
        "modules": [
            "htbuilder",
            "htbuilder.funcs",
            "htbuilder.units",
            "htbuilder.utils"
        ],
        "version": "0.3.0"
    },
    "htc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htc-api": {
        "cmdline": [],
        "modules": [
            "htc_api",
            "htc_api.api"
        ],
        "version": "0.0.2"
    },
    "htchirp": {
        "cmdline": [],
        "modules": [
            "htchirp",
            "htchirp.cli",
            "htchirp.htchirp"
        ],
        "version": "2.0"
    },
    "htcondor": {
        "cmdline": [],
        "modules": [
            "classad",
            "htcondor",
            "htcondor._deprecation",
            "htcondor._lock",
            "htcondor._wrap",
            "htcondor.dags",
            "htcondor.dags.dag",
            "htcondor.dags.edges",
            "htcondor.dags.exceptions",
            "htcondor.dags.formatter",
            "htcondor.dags.node",
            "htcondor.dags.rescue",
            "htcondor.dags.utils",
            "htcondor.dags.walk_order",
            "htcondor.dags.writer",
            "htcondor.htchirp",
            "htcondor.htchirp.htchirp"
        ],
        "version": "8.9.8"
    },
    "htcondor-dags": {
        "cmdline": [],
        "modules": [
            "htcondor_dags",
            "htcondor_dags.dag",
            "htcondor_dags.edges",
            "htcondor_dags.exceptions",
            "htcondor_dags.formatter",
            "htcondor_dags.node",
            "htcondor_dags.rescue",
            "htcondor_dags.utils",
            "htcondor_dags.version",
            "htcondor_dags.walk_order",
            "htcondor_dags.writer"
        ],
        "version": "0.2.0"
    },
    "htconsole": {
        "cmdline": [],
        "modules": [
            "htconsole",
            "htconsole.command",
            "htconsole.evalcontext",
            "htconsole.extrabuiltins",
            "htconsole.htmlrepr",
            "htconsole.sitepage",
            "htconsole.web",
            "htconsole.web.index",
            "htconsole.wsgiapp"
        ],
        "version": "0.2"
    },
    "htdataredirector": {
        "cmdline": [],
        "modules": [
            "htdataredirector",
            "htdataredirector.client",
            "htdataredirector.publishers",
            "htdataredirector.publishers.httppublisher",
            "htdataredirector.units",
            "htdataredirector.units.rfd21733",
            "htdataredirector.units.rfd21733.reader",
            "htdataredirector.units.rfd21733.registry",
            "htdataredirector.utils"
        ],
        "version": "0.3.1"
    },
    "htdefects": {
        "cmdline": [],
        "modules": [
            "htdefects",
            "htdefects.data",
            "htdefects.mixing",
            "htdefects.mixing.calculation",
            "htdefects.mixing.defect",
            "htdefects.mixing.parsers",
            "htdefects.mixing.serializers",
            "htdefects.mixing.supercell",
            "htdefects.mixing.tests",
            "htdefects.mixing.tests.test_calculation",
            "htdefects.mixing.tests.test_defect",
            "htdefects.mixing.tests.test_mixing",
            "htdefects.mixing.tests.test_mixing_calculation",
            "htdefects.mixing.tests.test_parsers",
            "htdefects.mixing.tests.test_serializers",
            "htdefects.mixing.tests.test_supercell",
            "htdefects.mixing.utils"
        ],
        "version": "0.3.0"
    },
    "htdp-pt-br": {
        "cmdline": [],
        "modules": [
            "htdp_pt_br",
            "htdp_pt_br.base",
            "htdp_pt_br.image",
            "htdp_pt_br.list",
            "htdp_pt_br.universe"
        ],
        "version": "0.1.4"
    },
    "htexpr": {
        "cmdline": [],
        "modules": [
            "htexpr",
            "htexpr.exceptions",
            "htexpr.htexpr",
            "htexpr.mappings"
        ],
        "version": "0.1.0"
    },
    "htf": {
        "cmdline": [],
        "modules": [
            "htf"
        ],
        "version": "0.0.1"
    },
    "htf-demo": {
        "cmdline": [],
        "modules": [
            "htf"
        ],
        "version": "0.0.1"
    },
    "htfile": {
        "cmdline": [],
        "modules": [
            "htfile",
            "htfile.htfile"
        ],
        "version": "0.0.1a0"
    },
    "htg": {
        "cmdline": [],
        "modules": [
            "htg",
            "htg.classes",
            "htg.classes.clean",
            "htg.classes.config",
            "htg.classes.index",
            "htg.classes.json",
            "htg.classes.resize",
            "htg.classes.resize_simple",
            "htg.classes.serve",
            "htg.commands",
            "htg.commands.album",
            "htg.commands.config",
            "htg.commands.groom",
            "htg.commands.index",
            "htg.commands.json",
            "htg.commands.resize",
            "htg.commands.util",
            "htg.defaults",
            "htg.htg",
            "htg.imaging",
            "htg.imaging.average",
            "htg.imaging.resize_im",
            "htg.imaging.resize_pil",
            "htg.imaging.resize_sips",
            "htg.meta_example",
            "htg.migrate",
            "htg.migrate.in2ex",
            "htg.models",
            "htg.utils",
            "htg.utils.aliased_group",
            "htg.utils.groom",
            "htg.utils.validate"
        ],
        "version": "0.7a2"
    },
    "htheatpump": {
        "cmdline": [],
        "modules": [
            "htheatpump",
            "htheatpump.__version__",
            "htheatpump.htheatpump",
            "htheatpump.htparams",
            "htheatpump.httimeprog",
            "htheatpump.scripts",
            "htheatpump.scripts.daemon",
            "htheatpump.scripts.htbackup",
            "htheatpump.scripts.htcomplparams",
            "htheatpump.scripts.htdatetime",
            "htheatpump.scripts.htfastquery",
            "htheatpump.scripts.htfaultlist",
            "htheatpump.scripts.hthttp",
            "htheatpump.scripts.htquery",
            "htheatpump.scripts.htset",
            "htheatpump.scripts.htshell",
            "htheatpump.scripts.httimeprog",
            "htheatpump.utils"
        ],
        "version": "1.2.4"
    },
    "hthworldwide": {
        "cmdline": [],
        "modules": [
            "hthworldwide",
            "hthworldwide.api",
            "hthworldwide.data"
        ],
        "version": "0.0.2"
    },
    "htimeseries": {
        "cmdline": [],
        "modules": [
            "htimeseries",
            "htimeseries.htimeseries",
            "htimeseries.tzinfofromstring"
        ],
        "version": "3.0.0"
    },
    "htjs-apisdk": {
        "cmdline": [],
        "modules": [
            "htjs_apisdk",
            "htjs_apisdk._api_sdk"
        ],
        "version": "1.0.3"
    },
    "htjs-k8s": {
        "cmdline": [],
        "modules": [
            "htjs_k8s",
            "htjs_k8s.cli",
            "htjs_k8s.conf"
        ],
        "version": "0.0.9"
    },
    "htk": {
        "cmdline": [],
        "modules": [
            "htk",
            "htk.encoders",
            "htk.settings",
            "htk.utils",
            "htk.utils.debuggers",
            "htk.utils.slack",
            "htk.utils.validate_emails_csv"
        ],
        "version": "1.3.0"
    },
    "htk-io": {
        "cmdline": [
            "htk_io_get_label_map_leaf_macro_id_to_leaf_index.py",
            "htk_io_map_alignment_files.py",
            "htk_io_map_alignment_files_label_sublabel_to_leaf_macro_id.py"
        ],
        "modules": [
            "htk_io",
            "htk_io.alignment",
            "htk_io.base",
            "htk_io.hmgens_pdf",
            "htk_io.misc",
            "htk_io.ques",
            "htk_io.test_alignment",
            "htk_io.test_base",
            "htk_io.tree",
            "htk_io.vecseq"
        ],
        "version": "0.5"
    },
    "htk-lite": {
        "cmdline": [],
        "modules": [
            "encoders",
            "utils",
            "utils.debuggers",
            "utils.slack"
        ],
        "version": "1.0.0"
    },
    "htklite": {
        "cmdline": [],
        "modules": [
            "htklite",
            "htklite.preprocessing",
            "htklite.preprocessing._linalg",
            "htklite.preprocessing.color_conversion",
            "htklite.preprocessing.color_conversion.lab_mean_std",
            "htklite.preprocessing.color_conversion.lab_to_rgb",
            "htklite.preprocessing.color_conversion.od_to_rgb",
            "htklite.preprocessing.color_conversion.rgb_to_hsi",
            "htklite.preprocessing.color_conversion.rgb_to_lab",
            "htklite.preprocessing.color_conversion.rgb_to_od",
            "htklite.preprocessing.color_conversion.rgb_to_sda",
            "htklite.preprocessing.color_conversion.sda_to_rgb",
            "htklite.preprocessing.color_convolution",
            "htklite.preprocessing.color_deconvolution",
            "htklite.utils"
        ],
        "version": "0.0.1"
    },
    "htm": {
        "cmdline": [],
        "modules": [
            "htm"
        ],
        "version": "0.1.1"
    },
    "htm-pyx": {
        "cmdline": [],
        "modules": [
            "htm_pyx",
            "htm_pyx.cli",
            "htm_pyx.register",
            "htm_pyx.transpile",
            "htm_pyx.utils"
        ],
        "version": "0.1.0.dev0"
    },
    "htmap": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.1"
    },
    "htmd": {
        "cmdline": [],
        "modules": [
            "htmd",
            "htmd.cli",
            "htmd.config",
            "htmd.site"
        ],
        "version": "1.5.0"
    },
    "htmd-pdb2pqr": {
        "cmdline": [],
        "modules": [
            "pdb2pqr",
            "pdb2pqr.AppService_client",
            "pdb2pqr.AppService_services",
            "pdb2pqr.AppService_services_types",
            "pdb2pqr.AppService_types",
            "pdb2pqr.SConscript-error",
            "pdb2pqr.SConscript-install",
            "pdb2pqr.SConscript-main",
            "pdb2pqr.apbs_cgi",
            "pdb2pqr.build_config",
            "pdb2pqr.dx2cube",
            "pdb2pqr.extensions",
            "pdb2pqr.extensions.chi",
            "pdb2pqr.extensions.contact",
            "pdb2pqr.extensions.hbond",
            "pdb2pqr.extensions.newresinter",
            "pdb2pqr.extensions.rama",
            "pdb2pqr.extensions.resinter",
            "pdb2pqr.extensions.salt",
            "pdb2pqr.extensions.summary",
            "pdb2pqr.fabfile",
            "pdb2pqr.fabfile_settings",
            "pdb2pqr.main",
            "pdb2pqr.main_cgi",
            "pdb2pqr.pdb2pka",
            "pdb2pqr.pdb2pka.NEWligand_topology",
            "pdb2pqr.pdb2pka.apbs",
            "pdb2pqr.pdb2pka.charge_mon",
            "pdb2pqr.pdb2pka.example",
            "pdb2pqr.pdb2pka.inputgen_pKa",
            "pdb2pqr.pdb2pka.ligand_topology",
            "pdb2pqr.pdb2pka.pKaIO_compat",
            "pdb2pqr.pdb2pka.pKa_base",
            "pdb2pqr.pdb2pka.pKa_utility_functions_compat",
            "pdb2pqr.pdb2pka.pMC_mult",
            "pdb2pqr.pdb2pka.pka_help",
            "pdb2pqr.pdb2pka.pka_old",
            "pdb2pqr.pdb2pka.pka_routines",
            "pdb2pqr.pdb2pka.prepare_pKa_ligand",
            "pdb2pqr.pka",
            "pdb2pqr.propka30",
            "pdb2pqr.propka30.compare",
            "pdb2pqr.propka30.experiment",
            "pdb2pqr.propka30.propka",
            "pdb2pqr.propka30.propka_det",
            "pdb2pqr.propka30.propka_gui",
            "pdb2pqr.propka30.propka_mut",
            "pdb2pqr.propka30.propka_pdb",
            "pdb2pqr.querystatus",
            "pdb2pqr.src",
            "pdb2pqr.src.aa",
            "pdb2pqr.src.definitions",
            "pdb2pqr.src.errors",
            "pdb2pqr.src.forcefield",
            "pdb2pqr.src.hydrogens",
            "pdb2pqr.src.inputgen",
            "pdb2pqr.src.na",
            "pdb2pqr.src.pdb",
            "pdb2pqr.src.protein",
            "pdb2pqr.src.psize",
            "pdb2pqr.src.quatfit",
            "pdb2pqr.src.routines",
            "pdb2pqr.src.structures",
            "pdb2pqr.src.topology",
            "pdb2pqr.src.utilities",
            "pdb2pqr.visualize",
            "pdb2pqr.visualize2"
        ],
        "version": "0.0.2"
    },
    "htmdpro": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "html": {
        "cmdline": [],
        "modules": [
            "html"
        ],
        "version": "1.16"
    },
    "html-as-programming-language": {
        "cmdline": [],
        "modules": [
            "htmlc",
            "htmlc.c_linker",
            "htmlc.code_range",
            "htmlc.compiler",
            "htmlc.diagnostics",
            "htmlc.elements",
            "htmlc.elements.assembly",
            "htmlc.elements.assign",
            "htmlc.elements.avr",
            "htmlc.elements.avr.atmega328p",
            "htmlc.elements.avr.atmega328p.serial_begin",
            "htmlc.elements.avr.atmega328p.serial_receive",
            "htmlc.elements.avr.atmega328p.serial_transmit",
            "htmlc.elements.avr.pin_elements",
            "htmlc.elements.avr.pin_elements.digital_read",
            "htmlc.elements.avr.pin_elements.digital_write",
            "htmlc.elements.avr.pin_elements.pin",
            "htmlc.elements.avr.pin_elements.pin_mode",
            "htmlc.elements.boolean_elements",
            "htmlc.elements.c",
            "htmlc.elements.comment",
            "htmlc.elements.element",
            "htmlc.elements.expression",
            "htmlc.elements.function",
            "htmlc.elements.function_call",
            "htmlc.elements.infinity",
            "htmlc.elements.link",
            "htmlc.elements.loop",
            "htmlc.elements.pile_elements",
            "htmlc.elements.pile_elements.have",
            "htmlc.elements.pile_elements.pile",
            "htmlc.elements.pile_elements.pile_action",
            "htmlc.elements.pile_elements.upgrade",
            "htmlc.elements.return_element",
            "htmlc.elements.rise_and_fall",
            "htmlc.elements.var_and_const",
            "htmlc.elements.what_is",
            "htmlc.gcc",
            "htmlc.gcc.avr",
            "htmlc.gcc.gcc",
            "htmlc.html_parser",
            "htmlc.json_rpc",
            "htmlc.lang_server",
            "htmlc.lexer",
            "htmlc.linker",
            "htmlc.mapped_c_string",
            "htmlc.utils"
        ],
        "version": "0.1.21"
    },
    "html-auto": {
        "cmdline": [],
        "modules": [
            "HTML",
            "HTML.Auto"
        ],
        "version": "0.0.4"
    },
    "html-clean": {
        "cmdline": [],
        "modules": [
            "html_clean",
            "html_clean.clean"
        ],
        "version": "0.0.4"
    },
    "html-cleaner": {
        "cmdline": [],
        "modules": [
            "html_cleaner"
        ],
        "version": "0.4.dev0"
    },
    "html-cluster": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "html-codec": {
        "cmdline": [],
        "modules": [
            "html_codec"
        ],
        "version": "1.0.0"
    },
    "html-creator": {
        "cmdline": [],
        "modules": [
            "html_creator",
            "html_creator.test"
        ],
        "version": "1.1"
    },
    "html-css-gen": {
        "cmdline": [],
        "modules": [
            "html_css_gen",
            "html_css_gen.template"
        ],
        "version": "2.2.1"
    },
    "html-diff": {
        "cmdline": [],
        "modules": [
            "html_diff",
            "html_diff.check",
            "html_diff.config"
        ],
        "version": "0.3.0"
    },
    "html-diff-wrapper": {
        "cmdline": [],
        "modules": [
            "html_diff_wrapper",
            "html_diff_wrapper.htmldiff",
            "html_diff_wrapper.htmldiff.htmldiff",
            "html_diff_wrapper.testing",
            "html_diff_wrapper.tests",
            "html_diff_wrapper.tests.test_htmldiff_wrapper"
        ],
        "version": "1.0"
    },
    "html-dsl": {
        "cmdline": [],
        "modules": [
            "html_dsl",
            "html_dsl.elements"
        ],
        "version": "0.3.1"
    },
    "html-generators": {
        "cmdline": [],
        "modules": [
            "html_generators",
            "html_generators.base",
            "html_generators.comment",
            "html_generators.django",
            "html_generators.document",
            "html_generators.elements",
            "html_generators.fragment",
            "html_generators.mark_safe"
        ],
        "version": "1.3.1"
    },
    "html-jparser": {
        "cmdline": [],
        "modules": [
            "html_jparser",
            "html_jparser.core"
        ],
        "version": "0.3"
    },
    "html-json-forms": {
        "cmdline": [],
        "modules": [
            "html_json_forms",
            "html_json_forms.serializers",
            "html_json_forms.utils"
        ],
        "version": "1.1.1"
    },
    "html-jumping": {
        "cmdline": [],
        "modules": [
            "html_jumping"
        ],
        "version": "0.2.4"
    },
    "html-librarian": {
        "cmdline": [],
        "modules": [
            "src",
            "src.librarian",
            "tests",
            "tests.basictest",
            "tests.context"
        ],
        "version": "0.0.1"
    },
    "html-linter": {
        "cmdline": [
            "html_lint.py"
        ],
        "modules": [
            "html_linter"
        ],
        "version": "0.4.0"
    },
    "html-minifier": {
        "cmdline": [],
        "modules": [
            "html_minifier",
            "html_minifier.minify",
            "html_minifier.test"
        ],
        "version": "0.0.4"
    },
    "html-nested-tables": {
        "cmdline": [],
        "modules": [
            "html_nested_tables",
            "html_nested_tables.base"
        ],
        "version": "0.2.0"
    },
    "html-parser": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "html-processing": {
        "cmdline": [],
        "modules": [
            "html_processing",
            "html_processing.connection",
            "html_processing.io",
            "html_processing.parser",
            "html_processing.traversal",
            "html_processing.util"
        ],
        "version": "1.1.4"
    },
    "html-processor": {
        "cmdline": [],
        "modules": [
            "html_processor",
            "html_processor.processor",
            "html_processor.rules"
        ],
        "version": "0.0.5"
    },
    "html-purifier": {
        "cmdline": [],
        "modules": [
            "purifier",
            "purifier.forms",
            "purifier.models",
            "purifier.purifier",
            "purifier.test"
        ],
        "version": "0.1.9"
    },
    "html-purifier3": {
        "cmdline": [],
        "modules": [
            "purifier",
            "purifier.forms",
            "purifier.models",
            "purifier.purifier",
            "purifier.test",
            "purifier.whitelist"
        ],
        "version": "2.1.0"
    },
    "html-py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "html-reports": {
        "cmdline": [],
        "modules": [
            "html_reports",
            "html_reports.reports"
        ],
        "version": "0.1.0"
    },
    "html-sanitizer": {
        "cmdline": [],
        "modules": [
            "html_sanitizer",
            "html_sanitizer.django",
            "html_sanitizer.sanitizer",
            "html_sanitizer.tests"
        ],
        "version": "1.9.1"
    },
    "html-sanitizer-with-iframe": {
        "cmdline": [],
        "modules": [
            "html_sanitizer_with_iframe"
        ],
        "version": "0.1.0"
    },
    "html-similarity": {
        "cmdline": [],
        "modules": [
            "html_similarity",
            "html_similarity.similarity",
            "html_similarity.structural_similarity",
            "html_similarity.style_similarity"
        ],
        "version": "0.3.3"
    },
    "html-slacker": {
        "cmdline": [],
        "modules": [
            "htmlslacker",
            "htmlslacker.htmlslacker"
        ],
        "version": "0.1.6"
    },
    "html-snippet": {
        "cmdline": [],
        "modules": [
            "html_snippet",
            "html_snippet.html_snippet"
        ],
        "version": "0.2"
    },
    "html-speak": {
        "cmdline": [],
        "modules": [
            "html_speak",
            "html_speak.server",
            "html_speak.util"
        ],
        "version": "0.1.1"
    },
    "html-stripper": {
        "cmdline": [],
        "modules": [
            "html_stripper"
        ],
        "version": "0.3"
    },
    "html-table": {
        "cmdline": [],
        "modules": [
            "HTMLTable",
            "HTMLTable.cell",
            "HTMLTable.column",
            "HTMLTable.common",
            "HTMLTable.row",
            "HTMLTable.table"
        ],
        "version": "1.0"
    },
    "html-table-extractor": {
        "cmdline": [],
        "modules": [
            "html_table_extractor",
            "html_table_extractor.extractor"
        ],
        "version": "1.4.1"
    },
    "html-table-parser": {
        "cmdline": [],
        "modules": [
            "html_table_parser",
            "html_table_parser.parser_functions",
            "html_table_parser.tests",
            "html_table_parser.tests.test_html_table_parser"
        ],
        "version": "0.1.0"
    },
    "html-table-parser-python3": {
        "cmdline": [],
        "modules": [
            "html_table_parser",
            "html_table_parser.parser"
        ],
        "version": "0.1.5"
    },
    "html-telegraph-poster": {
        "cmdline": [],
        "modules": [
            "html_telegraph_poster",
            "html_telegraph_poster.create_account",
            "html_telegraph_poster.errors",
            "html_telegraph_poster.html_to_telegraph",
            "html_telegraph_poster.upload_images"
        ],
        "version": "0.2.21"
    },
    "html-test-report": {
        "cmdline": [],
        "modules": [
            "html_test_report",
            "html_test_report.color_text",
            "html_test_report.django",
            "html_test_report.html_test",
            "html_test_report.nose_plugin",
            "html_test_report.runner"
        ],
        "version": "1.0.0"
    },
    "html-testrunner": {
        "cmdline": [],
        "modules": [
            "HtmlTestRunner",
            "HtmlTestRunner.result",
            "HtmlTestRunner.runner"
        ],
        "version": "1.2.1"
    },
    "html-testrunner-df": {
        "cmdline": [],
        "modules": [
            "HtmlTestRunner",
            "HtmlTestRunner.result",
            "HtmlTestRunner.runner"
        ],
        "version": "1.2.2.dev2"
    },
    "html-text": {
        "cmdline": [],
        "modules": [
            "html_text",
            "html_text.html_text"
        ],
        "version": "0.5.2"
    },
    "html-to-csv": {
        "cmdline": [],
        "modules": [
            "html2csv",
            "html2csv.converter",
            "html2csv.version"
        ],
        "version": "0.1.3"
    },
    "html-to-draftjs": {
        "cmdline": [],
        "modules": [
            "html_to_draftjs",
            "html_to_draftjs.converter",
            "html_to_draftjs.types"
        ],
        "version": "1.0.1"
    },
    "html-to-etree": {
        "cmdline": [],
        "modules": [
            "html_to_etree"
        ],
        "version": "0.2.0"
    },
    "html-to-text": {
        "cmdline": [],
        "modules": [
            "html_to_text",
            "html_to_text.parser"
        ],
        "version": "1.0.0"
    },
    "html-tree-diff": {
        "cmdline": [],
        "modules": [
            "htmltreediff",
            "htmltreediff.changes",
            "htmltreediff.cli",
            "htmltreediff.diff_core",
            "htmltreediff.edit_script_runner",
            "htmltreediff.html",
            "htmltreediff.test_html",
            "htmltreediff.test_main",
            "htmltreediff.test_text",
            "htmltreediff.test_util",
            "htmltreediff.test_xml",
            "htmltreediff.tests",
            "htmltreediff.text",
            "htmltreediff.util"
        ],
        "version": "0.1.2"
    },
    "html-utils-becothal": {
        "cmdline": [],
        "modules": [
            "html_utils",
            "html_utils.CSS",
            "html_utils.HTML",
            "html_utils.filemodel"
        ],
        "version": "1.3"
    },
    "html-validator": {
        "cmdline": [],
        "modules": [
            "html_validator",
            "html_validator.html_validator"
        ],
        "version": "1.0.1"
    },
    "html-wrapper": {
        "cmdline": [],
        "modules": [
            "html_wrapper",
            "html_wrapper.wrapper"
        ],
        "version": "0.1.3"
    },
    "html-writer": {
        "cmdline": [],
        "modules": [
            "html_writer",
            "html_writer._version",
            "html_writer.html_writer"
        ],
        "version": "1.1.1"
    },
    "html-xblock": {
        "cmdline": [],
        "modules": [
            "html_xblock",
            "html_xblock.bleaching",
            "html_xblock.html",
            "html_xblock.utils"
        ],
        "version": "1.0.0"
    },
    "html2ans": {
        "cmdline": [],
        "modules": [
            "html2ans",
            "html2ans.base",
            "html2ans.default",
            "html2ans.exc",
            "html2ans.parsers",
            "html2ans.parsers.audio",
            "html2ans.parsers.base",
            "html2ans.parsers.embeds",
            "html2ans.parsers.image",
            "html2ans.parsers.raw_html",
            "html2ans.parsers.text",
            "html2ans.parsers.utils"
        ],
        "version": "3.0.6"
    },
    "html2bbcode": {
        "cmdline": [
            "html2bbcode"
        ],
        "modules": [
            "html2bbcode",
            "html2bbcode.parser"
        ],
        "version": "2.3.3"
    },
    "html2csv": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "html2data": {
        "cmdline": [],
        "modules": [
            "html2data",
            "tests",
            "tests.test_parse",
            "tests.test_tree"
        ],
        "version": "0.4.3"
    },
    "html2dict": {
        "cmdline": [],
        "modules": [
            "html2dict",
            "html2dict.base_extractor",
            "html2dict.extractors",
            "html2dict.resources"
        ],
        "version": "0.2"
    },
    "html2docbook": {
        "cmdline": [],
        "modules": [
            "html2docbook",
            "html2docbook.tests",
            "html2docbook.tests.test_transformation"
        ],
        "version": "0.1"
    },
    "html2docx": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.1"
    },
    "html2dt": {
        "cmdline": [],
        "modules": [
            "html2dt"
        ],
        "version": "1.1"
    },
    "html2eml": {
        "cmdline": [],
        "modules": [
            "html2eml",
            "html2eml.html2eml"
        ],
        "version": "0.0.5"
    },
    "html2epub": {
        "cmdline": [],
        "modules": [
            "html2epub",
            "html2epub.chapter",
            "html2epub.clean",
            "html2epub.constants",
            "html2epub.epub"
        ],
        "version": "1.2"
    },
    "html2hamlpy": {
        "cmdline": [],
        "modules": [
            "html2hamlpy",
            "html2hamlpy.html"
        ],
        "version": "0.11.3"
    },
    "html2image": {
        "cmdline": [],
        "modules": [
            "html2image",
            "html2image.cli",
            "html2image.main"
        ],
        "version": "0.1.6"
    },
    "html2jirawiki": {
        "cmdline": [],
        "modules": [
            "html2jirawiki",
            "html2jirawiki.html2jirawiki"
        ],
        "version": "1.0.0"
    },
    "html2json": {
        "cmdline": [],
        "modules": [
            "html2json",
            "html2json.html2json"
        ],
        "version": "0.2.4.1"
    },
    "html2kirby": {
        "cmdline": [],
        "modules": [
            "html2kirby",
            "html2kirby.html2kirby"
        ],
        "version": "0.2"
    },
    "html2latex": {
        "cmdline": [],
        "modules": [
            "html2latex",
            "html2latex.html2latex",
            "html2latex.setup_texenv",
            "html2latex.tests",
            "html2latex.tests.utils",
            "html2latex.tests.utils.images",
            "html2latex.tests.utils.test_image",
            "html2latex.tests.utils.test_spellchecker",
            "html2latex.tests.utils.test_text",
            "html2latex.tests.utils.test_text1",
            "html2latex.utils",
            "html2latex.utils.html_table",
            "html2latex.utils.image",
            "html2latex.utils.output_message",
            "html2latex.utils.spellchecker",
            "html2latex.utils.text",
            "html2latex.utils.unpack_merged_cells_in_table",
            "html2latex.webkit2png"
        ],
        "version": "0.0.76"
    },
    "html2list": {
        "cmdline": [],
        "modules": [
            "html2list",
            "html2list.html2list"
        ],
        "version": "0.1.6"
    },
    "html2markdown": {
        "cmdline": [],
        "modules": [
            "html2markdown"
        ],
        "version": "0.1.7"
    },
    "html2md": {
        "cmdline": [],
        "modules": [
            "html2md",
            "html2md.convert",
            "html2md.convert_test"
        ],
        "version": "0.1.7"
    },
    "html2pdf": {
        "cmdline": [],
        "modules": [
            "html2pdf",
            "html2pdf.main",
            "html2pdf.tests"
        ],
        "version": "0.1"
    },
    "html2pdf-server": {
        "cmdline": [
            "html2pdfd.py"
        ],
        "modules": [
            "html2pdfd"
        ],
        "version": "1.2.2"
    },
    "html2phpbbcode": {
        "cmdline": [],
        "modules": [
            "html2phpbbcode",
            "html2phpbbcode.parser",
            "html2phpbbcode.validators"
        ],
        "version": "0.1.4"
    },
    "html2py": {
        "cmdline": [],
        "modules": [
            "html2py",
            "html2py.converter",
            "html2py.output",
            "html2py.parser",
            "html2py.yattag"
        ],
        "version": "1.0.1"
    },
    "html2rest": {
        "cmdline": [
            "html2rest"
        ],
        "modules": [
            "html2rest"
        ],
        "version": "0.2.2"
    },
    "html2rml": {
        "cmdline": [],
        "modules": [
            "html2rml",
            "html2rml.templatetags",
            "html2rml.templatetags.html2rml"
        ],
        "version": "0.3.0"
    },
    "html2shpaml": {
        "cmdline": [
            "html2Shpaml"
        ],
        "modules": [],
        "version": "0.1"
    },
    "html2text": {
        "cmdline": [],
        "modules": [],
        "version": "2020.1.16"
    },
    "html2text-no-md-escapes": {
        "cmdline": [],
        "modules": [
            "html2text_no_md_escapes",
            "html2text_no_md_escapes.cli",
            "html2text_no_md_escapes.compat",
            "html2text_no_md_escapes.config",
            "html2text_no_md_escapes.utils"
        ],
        "version": "2020.8.9"
    },
    "html2textile": {
        "cmdline": [],
        "modules": [
            "html2textile",
            "test"
        ],
        "version": "0.2"
    },
    "html2texttg": {
        "cmdline": [],
        "modules": [
            "html2texttg",
            "html2texttg.cli",
            "html2texttg.compat",
            "html2texttg.config",
            "html2texttg.utils",
            "html2texttg.version"
        ],
        "version": "1.0.3"
    },
    "html2txt": {
        "cmdline": [],
        "modules": [
            "html2txt",
            "html2txt.converters",
            "html2txt.converters.html2markdown",
            "html2txt.parsers",
            "html2txt.parsers.ast",
            "html2txt.parsers.common",
            "html2txt.parsers.etreehtmlparser",
            "html2txt.parsers.parser",
            "html2txt.parsers.visitor",
            "html2txt.parsers.xmlfragmentparser"
        ],
        "version": "0.3.0"
    },
    "html3": {
        "cmdline": [],
        "modules": [
            "html3",
            "html3.html3"
        ],
        "version": "1.18"
    },
    "html4vision": {
        "cmdline": [],
        "modules": [
            "html4vision",
            "html4vision.common",
            "html4vision.server",
            "html4vision.table",
            "html4vision.tile"
        ],
        "version": "0.4.0"
    },
    "html5": {
        "cmdline": [],
        "modules": [
            "html5lib",
            "html5lib._ihatexml",
            "html5lib._inputstream",
            "html5lib._tokenizer",
            "html5lib._trie",
            "html5lib._trie._base",
            "html5lib._trie.datrie",
            "html5lib._trie.py",
            "html5lib._utils",
            "html5lib.constants",
            "html5lib.filters",
            "html5lib.filters.alphabeticalattributes",
            "html5lib.filters.base",
            "html5lib.filters.inject_meta_charset",
            "html5lib.filters.lint",
            "html5lib.filters.optionaltags",
            "html5lib.filters.sanitizer",
            "html5lib.filters.whitespace",
            "html5lib.html5parser",
            "html5lib.serializer",
            "html5lib.tests",
            "html5lib.tests.conftest",
            "html5lib.tests.sanitizer",
            "html5lib.tests.support",
            "html5lib.tests.test_encoding",
            "html5lib.tests.test_meta",
            "html5lib.tests.test_optionaltags_filter",
            "html5lib.tests.test_parser2",
            "html5lib.tests.test_sanitizer",
            "html5lib.tests.test_serializer",
            "html5lib.tests.test_stream",
            "html5lib.tests.test_treeadapters",
            "html5lib.tests.test_treewalkers",
            "html5lib.tests.test_whitespace_filter",
            "html5lib.tests.tokenizer",
            "html5lib.tests.tokenizertotree",
            "html5lib.tests.tree_construction",
            "html5lib.treeadapters",
            "html5lib.treeadapters.genshi",
            "html5lib.treeadapters.sax",
            "html5lib.treebuilders",
            "html5lib.treebuilders.base",
            "html5lib.treebuilders.dom",
            "html5lib.treebuilders.etree",
            "html5lib.treebuilders.etree_lxml",
            "html5lib.treewalkers",
            "html5lib.treewalkers.base",
            "html5lib.treewalkers.dom",
            "html5lib.treewalkers.etree",
            "html5lib.treewalkers.etree_lxml",
            "html5lib.treewalkers.genshi"
        ],
        "version": "0.0.9"
    },
    "html5-parser": {
        "cmdline": [],
        "modules": [
            "html5_parser",
            "html5_parser.dom",
            "html5_parser.encoding_names",
            "html5_parser.encoding_parser",
            "html5_parser.soup",
            "html5_parser.stdlib_etree"
        ],
        "version": "0.4.9"
    },
    "html5builder": {
        "cmdline": [],
        "modules": [
            "html5builder"
        ],
        "version": "0.1.0"
    },
    "html5charref": {
        "cmdline": [],
        "modules": [
            "html5charref"
        ],
        "version": "0.1.0"
    },
    "html5ever": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "html5forms": {
        "cmdline": [],
        "modules": [
            "html5forms",
            "html5forms.fields",
            "html5forms.models",
            "html5forms.tests",
            "html5forms.util",
            "html5forms.views",
            "html5forms.widgets"
        ],
        "version": "0.0.3"
    },
    "html5lib": {
        "cmdline": [],
        "modules": [
            "html5lib",
            "html5lib._ihatexml",
            "html5lib._inputstream",
            "html5lib._tokenizer",
            "html5lib._trie",
            "html5lib._trie._base",
            "html5lib._trie.py",
            "html5lib._utils",
            "html5lib.constants",
            "html5lib.filters",
            "html5lib.filters.alphabeticalattributes",
            "html5lib.filters.base",
            "html5lib.filters.inject_meta_charset",
            "html5lib.filters.lint",
            "html5lib.filters.optionaltags",
            "html5lib.filters.sanitizer",
            "html5lib.filters.whitespace",
            "html5lib.html5parser",
            "html5lib.serializer",
            "html5lib.treeadapters",
            "html5lib.treeadapters.genshi",
            "html5lib.treeadapters.sax",
            "html5lib.treebuilders",
            "html5lib.treebuilders.base",
            "html5lib.treebuilders.dom",
            "html5lib.treebuilders.etree",
            "html5lib.treebuilders.etree_lxml",
            "html5lib.treewalkers",
            "html5lib.treewalkers.base",
            "html5lib.treewalkers.dom",
            "html5lib.treewalkers.etree",
            "html5lib.treewalkers.etree_lxml",
            "html5lib.treewalkers.genshi"
        ],
        "version": "1.1"
    },
    "html5lib-truncation": {
        "cmdline": [],
        "modules": [
            "html5lib_truncation",
            "html5lib_truncation.filters",
            "html5lib_truncation.shortcuts",
            "html5lib_truncation.utils",
            "tests",
            "tests.conftest",
            "tests.test_filters",
            "tests.test_utils"
        ],
        "version": "0.1.0"
    },
    "html5lib-typogrify": {
        "cmdline": [],
        "modules": [
            "html5lib_typogrify",
            "html5lib_typogrify.french",
            "html5lib_typogrify.french.filters",
            "html5lib_typogrify.french.filters.dashes",
            "html5lib_typogrify.french.filters.ellipsis",
            "html5lib_typogrify.french.filters.figures",
            "html5lib_typogrify.french.filters.hyphenate",
            "html5lib_typogrify.french.filters.medor",
            "html5lib_typogrify.french.filters.spaces",
            "html5lib_typogrify.french.filters.widows_orphans"
        ],
        "version": "0.2"
    },
    "html5lib42": {
        "cmdline": [],
        "modules": [
            "html5lib",
            "html5lib._ihatexml",
            "html5lib._inputstream",
            "html5lib._tokenizer",
            "html5lib._trie",
            "html5lib._trie._base",
            "html5lib._trie.datrie",
            "html5lib._trie.py",
            "html5lib._utils",
            "html5lib.constants",
            "html5lib.filters",
            "html5lib.filters.alphabeticalattributes",
            "html5lib.filters.base",
            "html5lib.filters.inject_meta_charset",
            "html5lib.filters.lint",
            "html5lib.filters.optionaltags",
            "html5lib.filters.sanitizer",
            "html5lib.filters.whitespace",
            "html5lib.html5parser",
            "html5lib.serializer",
            "html5lib.treeadapters",
            "html5lib.treeadapters.genshi",
            "html5lib.treeadapters.sax",
            "html5lib.treebuilders",
            "html5lib.treebuilders.base",
            "html5lib.treebuilders.dom",
            "html5lib.treebuilders.etree",
            "html5lib.treebuilders.etree_lxml",
            "html5lib.treewalkers",
            "html5lib.treewalkers.base",
            "html5lib.treewalkers.dom",
            "html5lib.treewalkers.etree",
            "html5lib.treewalkers.etree_lxml",
            "html5lib.treewalkers.genshi"
        ],
        "version": "1.1.1"
    },
    "html5prescan": {
        "cmdline": [],
        "modules": [
            "html5prescan",
            "html5prescan.replacement",
            "html5prescan.scan"
        ],
        "version": "0.2.0"
    },
    "html5print": {
        "cmdline": [],
        "modules": [
            "html5print",
            "html5print.cssprint",
            "html5print.html5print",
            "html5print.jsprint",
            "html5print.utils"
        ],
        "version": "0.1.2"
    },
    "html5routes": {
        "cmdline": [],
        "modules": [
            "html5routes"
        ],
        "version": "0.0.2"
    },
    "html5tagger": {
        "cmdline": [],
        "modules": [
            "html5tagger"
        ],
        "version": "1.1.0"
    },
    "html5tidy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "html5validate": {
        "cmdline": [],
        "modules": [
            "html5validate"
        ],
        "version": "0.0.2"
    },
    "html5validator": {
        "cmdline": [],
        "modules": [
            "html5validator",
            "html5validator.cli",
            "html5validator.tests",
            "html5validator.tests.test_simple",
            "html5validator.validator",
            "vnujar"
        ],
        "version": "0.3.3"
    },
    "html5witch": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "htmlark": {
        "cmdline": [],
        "modules": [
            "htmlark"
        ],
        "version": "1.0.0"
    },
    "htmlbuilder": {
        "cmdline": [],
        "modules": [
            "htmlBuilder",
            "htmlBuilder.attributes",
            "htmlBuilder.exceptions",
            "htmlBuilder.tags",
            "htmlBuilder.test",
            "htmlBuilder.utils"
        ],
        "version": "0.1.2"
    },
    "htmlclientdejavu": {
        "cmdline": [],
        "modules": [
            "htmlclientdejavu",
            "htmlclientdejavu.backends",
            "htmlclientdejavu.backends.base",
            "htmlclientdejavu.backends.db",
            "htmlclientdejavu.exceptions",
            "htmlclientdejavu.middleware",
            "htmlclientdejavu.model",
            "htmlclientdejavu.model.columns",
            "htmlclientdejavu.model.mixins",
            "htmlclientdejavu.model.tables",
            "htmlclientdejavu.settings"
        ],
        "version": "0.0.1a2"
    },
    "htmlcolor": {
        "cmdline": [],
        "modules": [
            "htmlcolor",
            "htmlcolor.generate_names",
            "htmlcolor.names",
            "htmlcolor.parser"
        ],
        "version": "0.1"
    },
    "htmlcomparator": {
        "cmdline": [],
        "modules": [
            "htmlcomparator",
            "htmlcomparator.html_comparator",
            "tests",
            "tests.test_parse"
        ],
        "version": "0.1.0"
    },
    "htmlcompare": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "htmlcompressor": {
        "cmdline": [],
        "modules": [
            "htmlcompressor",
            "htmlcompressor.cli",
            "htmlcompressor.htmlmin",
            "htmlcompressor.htmlmin.command",
            "htmlcompressor.htmlmin.decorator",
            "htmlcompressor.htmlmin.escape",
            "htmlcompressor.htmlmin.main",
            "htmlcompressor.htmlmin.middleware",
            "htmlcompressor.htmlmin.parser"
        ],
        "version": "1.1"
    },
    "htmlcontact": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "htmlcreator": {
        "cmdline": [],
        "modules": [
            "htmlcreator",
            "htmlcreator.document"
        ],
        "version": "0.4.1"
    },
    "htmlcssinclude": {
        "cmdline": [],
        "modules": [
            "HtmlCssInclude"
        ],
        "version": "0.1.2"
    },
    "htmlcutstr": {
        "cmdline": [],
        "modules": [
            "htmlcutstr"
        ],
        "version": "1.2.1"
    },
    "htmlcutstring": {
        "cmdline": [],
        "modules": [
            "htmlcutstring"
        ],
        "version": "1.1"
    },
    "htmldammit": {
        "cmdline": [],
        "modules": [
            "htmldammit",
            "htmldammit.contenttypes",
            "htmldammit.core",
            "htmldammit.integrations",
            "htmldammit.integrations.requests",
            "htmldammit.integrations.urllib"
        ],
        "version": "0.1.1"
    },
    "htmldata": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmldate": {
        "cmdline": [],
        "modules": [
            "htmldate",
            "htmldate.cli",
            "htmldate.core",
            "htmldate.extractors",
            "htmldate.settings",
            "htmldate.utils",
            "htmldate.validators"
        ],
        "version": "0.7.1"
    },
    "htmldeps": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmldiagnose": {
        "cmdline": [],
        "modules": [
            "HtmlDiagnose",
            "HtmlDiagnose.HtmlDiagnose"
        ],
        "version": "1.0.3"
    },
    "htmldiff": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "htmldiff2": {
        "cmdline": [],
        "modules": [
            "htmldiff2"
        ],
        "version": "0.1.1"
    },
    "htmldiffer": {
        "cmdline": [],
        "modules": [
            "htmldiffer",
            "htmldiffer.diff",
            "htmldiffer.settings",
            "htmldiffer.utils",
            "tests",
            "tests.fixtures",
            "tests.test_diff",
            "tests.test_utils"
        ],
        "version": "0.25.2"
    },
    "htmldo": {
        "cmdline": [
            "htmld.py"
        ],
        "modules": [],
        "version": "0.1.3"
    },
    "htmldocx": {
        "cmdline": [],
        "modules": [
            "htmldocx"
        ],
        "version": "0.0.4"
    },
    "htmldom": {
        "cmdline": [],
        "modules": [
            "htmldom",
            "htmldom.htmldom"
        ],
        "version": "2.0"
    },
    "htmldoom": {
        "cmdline": [],
        "modules": [
            "htmldoom",
            "htmldoom.base",
            "htmldoom.conf",
            "htmldoom.elements",
            "htmldoom.functions",
            "htmldoom.url",
            "htmldoom.util",
            "htmldoom.value_loader",
            "htmldoom.yaml_loader"
        ],
        "version": "1.0.1"
    },
    "htmldump": {
        "cmdline": [],
        "modules": [
            "htmldump",
            "htmldump.command",
            "htmldump.html_parser",
            "htmldump.html_utils"
        ],
        "version": "0.2039.0"
    },
    "htmlele": {
        "cmdline": [],
        "modules": [
            "htmlele",
            "htmlele.mkpage"
        ],
        "version": "0.0.3.dev0"
    },
    "htmlement": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "htmlentities": {
        "cmdline": [],
        "modules": [
            "htmlentities",
            "tests",
            "tests.test_decoding",
            "tests.test_encoding"
        ],
        "version": "0.3.0"
    },
    "htmlentitiesdecode": {
        "cmdline": [
            "decodehtmlentities"
        ],
        "modules": [
            "htmlentitiesdecode"
        ],
        "version": "0.1.1"
    },
    "htmlentity2ascii": {
        "cmdline": [],
        "modules": [
            "htmlentity2ascii"
        ],
        "version": "1.0"
    },
    "htmler": {
        "cmdline": [],
        "modules": [
            "htmler",
            "htmler.base",
            "htmler.block",
            "htmler.inline",
            "tests",
            "tests.test_all"
        ],
        "version": "0.1.3"
    },
    "htmlext": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "htmlfetcher": {
        "cmdline": [],
        "modules": [
            "htmlfetcher"
        ],
        "version": "0.0.6"
    },
    "htmlfilter": {
        "cmdline": [],
        "modules": [
            "htmlfilter",
            "htmlfilter.rules"
        ],
        "version": "0.2"
    },
    "htmlfn": {
        "cmdline": [],
        "modules": [
            "htmlfn"
        ],
        "version": "0.0.4"
    },
    "htmlfun": {
        "cmdline": [],
        "modules": [
            "htmlfun",
            "htmlfun.core",
            "htmlfun.elements"
        ],
        "version": "0.1.0"
    },
    "htmlfy": {
        "cmdline": [],
        "modules": [
            "htmlfy",
            "htmlfy.minifier"
        ],
        "version": "0.1.3"
    },
    "htmlgen": {
        "cmdline": [],
        "modules": [
            "htmlgen",
            "htmlgen.attribute",
            "htmlgen.block",
            "htmlgen.document",
            "htmlgen.element",
            "htmlgen.form",
            "htmlgen.generator",
            "htmlgen.image",
            "htmlgen.inline",
            "htmlgen.link",
            "htmlgen.list",
            "htmlgen.structure",
            "htmlgen.table",
            "htmlgen.time",
            "htmlgen.timeutil",
            "htmlgen.video",
            "test_htmlgen",
            "test_htmlgen.attribute",
            "test_htmlgen.block",
            "test_htmlgen.document",
            "test_htmlgen.element",
            "test_htmlgen.form",
            "test_htmlgen.generator",
            "test_htmlgen.image",
            "test_htmlgen.inline",
            "test_htmlgen.link",
            "test_htmlgen.list",
            "test_htmlgen.structure",
            "test_htmlgen.table",
            "test_htmlgen.time",
            "test_htmlgen.util",
            "test_htmlgen.video"
        ],
        "version": "2.0.0"
    },
    "htmlgenerate": {
        "cmdline": [],
        "modules": [
            "htmlgenerate"
        ],
        "version": "0.01"
    },
    "htmlgrab": {
        "cmdline": [],
        "modules": [
            "htmlgrab",
            "htmlgrab.bin",
            "htmlgrab.bin.html-grab",
            "htmlgrab.core"
        ],
        "version": "0.0.3-alpha"
    },
    "htmlhelpers": {
        "cmdline": [],
        "modules": [
            "htmlhelpers",
            "htmlhelpers.htmlformat",
            "htmlhelpers.htmlphrase",
            "htmlhelpers.htmlstring",
            "htmlhelpers.utils"
        ],
        "version": "0.1.1"
    },
    "htmlib": {
        "cmdline": [],
        "modules": [
            "htmlib",
            "htmlib.htmelement",
            "htmlib.main"
        ],
        "version": "0.1"
    },
    "htmlie": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "htmlify": {
        "cmdline": [],
        "modules": [
            "htmlify",
            "htmlify.manualHTML",
            "htmlify.templates"
        ],
        "version": "0.1.2-beta"
    },
    "htmlize": {
        "cmdline": [],
        "modules": [
            "htmlize",
            "htmlize.command",
            "htmlize.compat",
            "htmlize.tests",
            "htmlize.tests.test_detect"
        ],
        "version": "0.2.2"
    },
    "htmllaundry": {
        "cmdline": [],
        "modules": [
            "htmllaundry",
            "htmllaundry.cleaners",
            "htmllaundry.tests",
            "htmllaundry.utils",
            "htmllaundry.z3cform"
        ],
        "version": "2.2"
    },
    "htmllibrarian": {
        "cmdline": [],
        "modules": [
            "htmlLibrarian",
            "htmlLibrarian.librarian",
            "htmlLibrarian.librarianUtil",
            "htmlLibrarian.linkData",
            "htmlLibrarian.tests",
            "htmlLibrarian.tests.clean_test",
            "htmlLibrarian.tests.context",
            "htmlLibrarian.tests.debug_mode_print_test",
            "htmlLibrarian.tests.example_test",
            "htmlLibrarian.tests.get_fetch_flow_test",
            "htmlLibrarian.tests.make_csv_test"
        ],
        "version": "0.0.14"
    },
    "htmllintbear": {
        "cmdline": [],
        "modules": [
            "coalaHTMLLintBear",
            "coalaHTMLLintBear.HTMLLintBear"
        ],
        "version": "0.10.0"
    },
    "htmllinter": {
        "cmdline": [],
        "modules": [
            "htmllinter",
            "htmllinter.cli"
        ],
        "version": "0.1.1"
    },
    "htmllist": {
        "cmdline": [
            "htmlist"
        ],
        "modules": [
            "htmllist",
            "htmllist.algo_dict",
            "htmllist.break_html_page",
            "htmllist.break_html_page2",
            "htmllist.break_page_base",
            "htmllist.break_page_seq",
            "htmllist.htmllist_base",
            "htmllist.htmllist_break",
            "htmllist.htmllist_demo",
            "htmllist.htmllist_summary",
            "htmllist.pattern_quality",
            "htmllist.pysuffix_tools",
            "htmllist.repeat_pattern",
            "htmllist.repeat_pattern2",
            "htmllist.repeat_pattern3",
            "htmllist.repeat_pattern_base",
            "htmllist.repeat_pattern_suffix",
            "htmllist.repeat_title",
            "htmllist.tag_tools",
            "htmllist.test",
            "htmllist.test.profile",
            "htmllist.test.regression_tests",
            "htmllist.utills"
        ],
        "version": "2.2.2"
    },
    "htmllistparse": {
        "cmdline": [],
        "modules": [
            "htmllistparse",
            "htmllistparse.htmllistparse",
            "htmllistparse.rehttpfs"
        ],
        "version": "0.5.2"
    },
    "htmllogger": {
        "cmdline": [],
        "modules": [
            "htmllogger",
            "htmllogger.Htmllogger",
            "tests",
            "tests.htmllogger_unittest",
            "tests.test_pytest"
        ],
        "version": "1.2"
    },
    "htmlmarkup": {
        "cmdline": [],
        "modules": [
            "htmlmarkup",
            "htmlmarkup.constants",
            "htmlmarkup.errors",
            "htmlmarkup.mixins",
            "htmlmarkup.mixins.generators",
            "htmlmarkup.tags",
            "htmlmarkup.tags.base",
            "htmlmarkup.validators",
            "test",
            "test.test_tag",
            "test.test_validators"
        ],
        "version": "0.1"
    },
    "htmlmerge": {
        "cmdline": [],
        "modules": [
            "htmlmerge",
            "htmlmerge.htmlmerge"
        ],
        "version": "1.2.7"
    },
    "htmlmeta-hub": {
        "cmdline": [],
        "modules": [
            "htmlmeta_hub",
            "htmlmeta_hub.pyramid_helpers"
        ],
        "version": "0.3.1"
    },
    "htmlmetadata": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "htmlmin": {
        "cmdline": [],
        "modules": [
            "htmlmin",
            "htmlmin.command",
            "htmlmin.decorator",
            "htmlmin.escape",
            "htmlmin.main",
            "htmlmin.middleware",
            "htmlmin.parser",
            "htmlmin.python3html",
            "htmlmin.python3html.parser"
        ],
        "version": "0.1.12"
    },
    "htmlminifier": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmlnode": {
        "cmdline": [],
        "modules": [
            "html_node",
            "html_node.tags",
            "html_node.templates",
            "html_node.tests",
            "html_node.utils"
        ],
        "version": "0.1.8"
    },
    "htmlol": {
        "cmdline": [],
        "modules": [
            "htmlol"
        ],
        "version": "1.0"
    },
    "htmloverpdf": {
        "cmdline": [],
        "modules": [
            "htmloverpdf"
        ],
        "version": "0.0.1b2"
    },
    "htmlparser": {
        "cmdline": [],
        "modules": [
            "HTMLParser"
        ],
        "version": "0.0.2"
    },
    "htmlparsert": {
        "cmdline": [],
        "modules": [
            "htmlparsert",
            "htmlparsert.parser"
        ],
        "version": "0.1.0"
    },
    "htmlparsing": {
        "cmdline": [],
        "modules": [
            "htmlparsing"
        ],
        "version": "0.1.5"
    },
    "htmlpeeker": {
        "cmdline": [],
        "modules": [
            "peeker"
        ],
        "version": "0.1.2"
    },
    "htmlpetrol": {
        "cmdline": [],
        "modules": [
            "htmlpetrol",
            "htmlpetrol.render"
        ],
        "version": "0.3-2"
    },
    "htmlpretty": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "htmlpurifier": {
        "cmdline": [],
        "modules": [
            "htmlpurifier",
            "htmlpurifier.__version__",
            "htmlpurifier.fields",
            "htmlpurifier.models",
            "htmlpurifier.purify",
            "htmlpurifier.tests",
            "htmlpurifier.views"
        ],
        "version": "1.0.1"
    },
    "htmlpy": {
        "cmdline": [],
        "modules": [
            "htmlPy",
            "htmlPy.app_gui",
            "htmlPy.base_gui",
            "htmlPy.descriptors",
            "htmlPy.gui_helper",
            "htmlPy.settings",
            "htmlPy.web_app_gui"
        ],
        "version": "2.0.3"
    },
    "htmlpyever": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0.post3"
    },
    "htmlpyrser": {
        "cmdline": [],
        "modules": [
            "HtmlPyrser",
            "HtmlPyrser.parser",
            "HtmlPyrser.types"
        ],
        "version": "0.1.1"
    },
    "htmlremote": {
        "cmdline": [],
        "modules": [
            "htmlremote",
            "htmlremote.cmd_htmlremote"
        ],
        "version": "0.1.0"
    },
    "htmlreport": {
        "cmdline": [],
        "modules": [
            "HTMLReport",
            "HTMLReport.src",
            "HTMLReport.src.test_runner",
            "HTMLReport.src.tools",
            "HTMLReport.src.tools.data_driven",
            "HTMLReport.src.tools.log",
            "HTMLReport.src.tools.log.handler_factory",
            "HTMLReport.src.tools.result",
            "HTMLReport.src.tools.retry_on_exception",
            "HTMLReport.src.tools.save_images",
            "HTMLReport.src.tools.template"
        ],
        "version": "2.1.5"
    },
    "htmlrunner": {
        "cmdline": [],
        "modules": [
            "htmlrunner",
            "htmlrunner.exceptions",
            "htmlrunner.loader",
            "htmlrunner.result",
            "htmlrunner.runner"
        ],
        "version": "0.13"
    },
    "htmls": {
        "cmdline": [],
        "modules": [
            "htmls"
        ],
        "version": "1.0.0"
    },
    "htmlsanitizer": {
        "cmdline": [],
        "modules": [
            "htmlsanitizer",
            "htmlsanitizer.cli"
        ],
        "version": "0.1.1"
    },
    "htmlscraper": {
        "cmdline": [],
        "modules": [],
        "version": "0.1a0"
    },
    "htmlserver": {
        "cmdline": [],
        "modules": [
            "htmlserver",
            "htmlserver._README",
            "htmlserver.main"
        ],
        "version": "2010.02.07.appengine"
    },
    "htmlsimilarity": {
        "cmdline": [],
        "modules": [
            "htmlsimilarity",
            "htmlsimilarity.cli"
        ],
        "version": "0.1.1"
    },
    "htmlst": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0b1"
    },
    "htmltable-df": {
        "cmdline": [],
        "modules": [
            "htmltable_df",
            "htmltable_df.extractor"
        ],
        "version": "1.0.3"
    },
    "htmltable2csv": {
        "cmdline": [],
        "modules": [
            "htmltable2csv",
            "htmltable2csv.htmltable2csv",
            "htmltable2csv.parser"
        ],
        "version": "0.6.0"
    },
    "htmltag": {
        "cmdline": [],
        "modules": [
            "htmltag"
        ],
        "version": "1.7"
    },
    "htmltc": {
        "cmdline": [],
        "modules": [
            "tagcounter",
            "tagcounter.DB",
            "tagcounter.DB.domainRepo",
            "tagcounter.DB.models",
            "tagcounter.DB.models.domain",
            "tagcounter.DB.models.page",
            "tagcounter.DB.pageRepo",
            "tagcounter.console",
            "tagcounter.gui",
            "tagcounter.htmlParser",
            "tagcounter.htmlReader",
            "tagcounter.tagService",
            "tagcounter.urlParser",
            "tagcounter.yamlService"
        ],
        "version": "1.0.1"
    },
    "htmltemplate": {
        "cmdline": [],
        "modules": [
            "htmltemplate"
        ],
        "version": "2.2.0"
    },
    "htmltestrunner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmltestrunner-python3": {
        "cmdline": [],
        "modules": [
            "HTMLTestRunner",
            "HTMLTestRunner.HTMLTestRunner"
        ],
        "version": "0.8.0"
    },
    "htmltext": {
        "cmdline": [],
        "modules": [
            "htmltext",
            "htmltext.example",
            "htmltext.htmltext"
        ],
        "version": "0.0.7"
    },
    "htmltextconvert": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "htmltg": {
        "cmdline": [],
        "modules": [
            "tagcounter",
            "tagcounter.DB",
            "tagcounter.DB.domainRepo",
            "tagcounter.DB.models",
            "tagcounter.DB.models.domain",
            "tagcounter.DB.models.page",
            "tagcounter.DB.pageRepo",
            "tagcounter.console",
            "tagcounter.gui",
            "tagcounter.htmlParser",
            "tagcounter.htmlReader",
            "tagcounter.tagService",
            "tagcounter.urlParser",
            "tagcounter.yamlService"
        ],
        "version": "1.5.12"
    },
    "htmltocsv": {
        "cmdline": [
            "convert"
        ],
        "modules": [
            "helper",
            "helper.create",
            "helper.grab",
            "helper.parse"
        ],
        "version": "0.1"
    },
    "htmltodraftjs": {
        "cmdline": [],
        "modules": [
            "htmltodraftjs",
            "htmltodraftjs.cli"
        ],
        "version": "0.1.1"
    },
    "htmltopdf": {
        "cmdline": [],
        "modules": [
            "htmltopdf",
            "htmltopdf.wkhtmltopdf",
            "tests",
            "tests.test_htmltopdf"
        ],
        "version": "0.1.1"
    },
    "htmltotext": {
        "cmdline": [],
        "modules": [
            "configutils",
            "configutils.build",
            "configutils.config",
            "test",
            "test.test"
        ],
        "version": "0.7.3"
    },
    "htmltoword": {
        "cmdline": [],
        "modules": [
            "HtmlToWord",
            "HtmlToWord.elements",
            "HtmlToWord.elements.Base",
            "HtmlToWord.elements.Headings",
            "HtmlToWord.elements.List",
            "HtmlToWord.elements.Misc",
            "HtmlToWord.elements.Specials",
            "HtmlToWord.elements.Table",
            "HtmlToWord.elements.Text",
            "HtmlToWord.elements.styles",
            "HtmlToWord.groups",
            "HtmlToWord.parser"
        ],
        "version": "0.6.1"
    },
    "htmltransform": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmltree": {
        "cmdline": [],
        "modules": [
            "htmltree",
            "htmltree.htmltree"
        ],
        "version": "0.7.6"
    },
    "htmlutils": {
        "cmdline": [],
        "modules": [
            "htmlutils",
            "htmlutils.html"
        ],
        "version": "0.1.2"
    },
    "htmlviewer": {
        "cmdline": [],
        "modules": [
            "htmlviewer",
            "htmlviewer.core",
            "htmlviewer.pagination",
            "htmlviewer.util"
        ],
        "version": "0.1.7"
    },
    "htmlwrite": {
        "cmdline": [],
        "modules": [
            "htmlwrite"
        ],
        "version": "0.7.0"
    },
    "htmly": {
        "cmdline": [],
        "modules": [
            "htmly",
            "htmly.htmly"
        ],
        "version": "0.3dev"
    },
    "htmq": {
        "cmdline": [
            "ez_setup.py"
        ],
        "modules": [
            "htmq",
            "htmq.html_parser",
            "htmq.html_parser_debugger",
            "htmq.html_query",
            "htmq.stack",
            "htmq.version"
        ],
        "version": "1.0.0"
    },
    "htmresearch": {
        "cmdline": [],
        "modules": [
            "htmresearch",
            "htmresearch.algorithms",
            "htmresearch.algorithms.TM",
            "htmresearch.algorithms.apical_dependent_temporal_memory",
            "htmresearch.algorithms.apical_tiebreak_temporal_memory",
            "htmresearch.algorithms.column_pooler",
            "htmresearch.algorithms.faulty_spatial_pooler",
            "htmresearch.algorithms.faulty_temporal_memory",
            "htmresearch.algorithms.faulty_temporal_memory_shim",
            "htmresearch.algorithms.hidden_markov_model",
            "htmresearch.algorithms.hierarchical_clustering",
            "htmresearch.algorithms.image_sparse_net",
            "htmresearch.algorithms.lateral_pooler",
            "htmresearch.algorithms.location_modules",
            "htmresearch.algorithms.multiconnections",
            "htmresearch.algorithms.online_extreme_learning_machine",
            "htmresearch.algorithms.simple_union_pooler",
            "htmresearch.algorithms.single_layer_location_memory",
            "htmresearch.algorithms.sparse_net",
            "htmresearch.algorithms.temporal_memory_factory",
            "htmresearch.algorithms.temporal_pooler",
            "htmresearch.algorithms.union_temporal_pooler",
            "htmresearch.data",
            "htmresearch.data.sequence_generator",
            "htmresearch.data.sm_sequences",
            "htmresearch.frameworks",
            "htmresearch.frameworks.grid_cell_learning",
            "htmresearch.frameworks.grid_cell_learning.CAN",
            "htmresearch.frameworks.grid_cell_learning.compute_hardwired_weights",
            "htmresearch.frameworks.layers",
            "htmresearch.frameworks.layers.combined_sequence_experiment",
            "htmresearch.frameworks.layers.combined_sequence_experiment2",
            "htmresearch.frameworks.layers.combined_sequence_network_creation",
            "htmresearch.frameworks.layers.combined_sequence_network_creation2",
            "htmresearch.frameworks.layers.continuous_location_object_machine",
            "htmresearch.frameworks.layers.l2456_model",
            "htmresearch.frameworks.layers.l2456_network_creation",
            "htmresearch.frameworks.layers.l2_l4_inference",
            "htmresearch.frameworks.layers.l2_l4_network_creation",
            "htmresearch.frameworks.layers.laminar_network",
            "htmresearch.frameworks.layers.multi_column_convergence_experiment",
            "htmresearch.frameworks.layers.object_machine_base",
            "htmresearch.frameworks.layers.object_machine_factory",
            "htmresearch.frameworks.layers.physical_object_base",
            "htmresearch.frameworks.layers.physical_objects",
            "htmresearch.frameworks.layers.sensor_placement",
            "htmresearch.frameworks.layers.sequence_object_machine",
            "htmresearch.frameworks.layers.simple_object_machine",
            "htmresearch.frameworks.location",
            "htmresearch.frameworks.location.ambiguity_index",
            "htmresearch.frameworks.location.location_network_creation",
            "htmresearch.frameworks.location.object_generation",
            "htmresearch.frameworks.location.path_integration_union_narrowing",
            "htmresearch.frameworks.location.two_layer_tracing",
            "htmresearch.frameworks.opf",
            "htmresearch.frameworks.opf.clamodel_custom",
            "htmresearch.frameworks.poirazi_neuron_model",
            "htmresearch.frameworks.poirazi_neuron_model.data_tools",
            "htmresearch.frameworks.poirazi_neuron_model.neuron_model",
            "htmresearch.frameworks.sp_paper",
            "htmresearch.frameworks.sp_paper.sp_metrics",
            "htmresearch.frameworks.specific_timing",
            "htmresearch.frameworks.specific_timing.apical_dependent_sequence_timing_memory",
            "htmresearch.frameworks.specific_timing.timing_adtm",
            "htmresearch.frameworks.union_temporal_pooling",
            "htmresearch.frameworks.union_temporal_pooling.activation",
            "htmresearch.frameworks.union_temporal_pooling.activation.decay_functions",
            "htmresearch.frameworks.union_temporal_pooling.activation.decay_functions.decay_function_base",
            "htmresearch.frameworks.union_temporal_pooling.activation.decay_functions.decay_functions_all",
            "htmresearch.frameworks.union_temporal_pooling.activation.excite_functions",
            "htmresearch.frameworks.union_temporal_pooling.activation.excite_functions.excite_function_base",
            "htmresearch.frameworks.union_temporal_pooling.activation.excite_functions.excite_functions_all",
            "htmresearch.frameworks.union_temporal_pooling.activation.plotExciteDecayFunctions",
            "htmresearch.frameworks.union_temporal_pooling.union_temporal_pooler_experiment",
            "htmresearch.frameworks.utils",
            "htmresearch.regions",
            "htmresearch.regions.ApicalTMPairRegion",
            "htmresearch.regions.ApicalTMSequenceRegion",
            "htmresearch.regions.ColumnPoolerRegion",
            "htmresearch.regions.CoordinateSensorRegion",
            "htmresearch.regions.Guassian2DLocationRegion",
            "htmresearch.regions.RawSensor",
            "htmresearch.regions.RawValues",
            "htmresearch.regions.TemporalPoolerRegion",
            "htmresearch.support",
            "htmresearch.support.apical_tm_pair_monitor_mixin",
            "htmresearch.support.column_pooler_mixin",
            "htmresearch.support.csv_helper",
            "htmresearch.support.expsuite",
            "htmresearch.support.generate_sdr_dataset",
            "htmresearch.support.lateral_pooler",
            "htmresearch.support.lateral_pooler.callbacks",
            "htmresearch.support.lateral_pooler.datasets",
            "htmresearch.support.lateral_pooler.metrics",
            "htmresearch.support.lateral_pooler.scalar_encoder",
            "htmresearch.support.lateral_pooler.utils",
            "htmresearch.support.logging_decorator",
            "htmresearch.support.network_text_data_generator",
            "htmresearch.support.neural_correlations_utils",
            "htmresearch.support.numpy_helpers",
            "htmresearch.support.reberGrammar",
            "htmresearch.support.register_regions",
            "htmresearch.support.sequence_learning_utils",
            "htmresearch.support.sequence_prediction_dataset",
            "htmresearch.support.shared_tests",
            "htmresearch.support.shared_tests.apical_tiebreak_sequences_test_base",
            "htmresearch.support.shared_tests.apical_tiebreak_test_base",
            "htmresearch.support.shared_tests.sequence_memory_test_base",
            "htmresearch.support.sp_paper_utils",
            "htmresearch.support.spatial_pooler_monitor_mixin",
            "htmresearch.support.temporal_pooler_monitor_mixin",
            "htmresearch.support.union_temporal_pooler_monitor_mixin"
        ],
        "version": "0.0.3"
    },
    "htmresearch-core": {
        "cmdline": [],
        "modules": [
            "htmresearch_core",
            "htmresearch_core.experimental",
            "htmresearch_core.proto"
        ],
        "version": "0.0.3"
    },
    "htnb-getpath": {
        "cmdline": [],
        "modules": [
            "htnb_getpath",
            "htnb_getpath.run"
        ],
        "version": "0.1"
    },
    "htnhello": {
        "cmdline": [],
        "modules": [
            "htnhello",
            "htnhello.greet"
        ],
        "version": "1.1.0"
    },
    "htof": {
        "cmdline": [],
        "modules": [
            "htof",
            "htof.data",
            "htof.fit",
            "htof.main",
            "htof.parse",
            "htof.polynomial",
            "htof.polynomial.polynomial",
            "htof.settings",
            "htof.sky_path",
            "htof.test",
            "htof.test.test_data_utils",
            "htof.test.test_fit",
            "htof.test.test_main",
            "htof.test.test_parse",
            "htof.test.test_polynomial",
            "htof.test.test_sky_path",
            "htof.utils",
            "htof.utils.data_utils",
            "htof.utils.fit_utils",
            "htof.utils.parse_utils"
        ],
        "version": "0.2.11"
    },
    "htool": {
        "cmdline": [],
        "modules": [
            "htool",
            "htool.docs",
            "htool.dom",
            "htool.misc",
            "htool.tags",
            "htool.text"
        ],
        "version": "1.0.1"
    },
    "htooldeploy": {
        "cmdline": [],
        "modules": [
            "htooldeploy",
            "htooldeploy.htool",
            "htooldeploy.template"
        ],
        "version": "0.5.4"
    },
    "htools": {
        "cmdline": [],
        "modules": [
            "htools",
            "htools.config",
            "htools.core",
            "htools.magics",
            "htools.meta",
            "htools.pd_tools",
            "htools.structures"
        ],
        "version": "4.0.6"
    },
    "htop": {
        "cmdline": [],
        "modules": [
            "htop",
            "htop.htop",
            "htop.test",
            "htop.test.htop-tests"
        ],
        "version": "1.0"
    },
    "htp-client": {
        "cmdline": [],
        "modules": [
            "htpclient",
            "htpclient.htp_controller",
            "htpclient.main",
            "htpclient.test_engine",
            "htpclient.web_client"
        ],
        "version": "0.5.3"
    },
    "htpasswd": {
        "cmdline": [],
        "modules": [
            "htpasswd",
            "htpasswd.basic",
            "htpasswd.group"
        ],
        "version": "2.3"
    },
    "htpasswd-cli": {
        "cmdline": [],
        "modules": [
            "htpasswdcli",
            "htpasswdcli.cli"
        ],
        "version": "0.1.3"
    },
    "htpbs": {
        "cmdline": [],
        "modules": [
            "htpbs",
            "htpbs.bar",
            "htpbs.progressbars"
        ],
        "version": "0.0.4"
    },
    "htpc-launcher": {
        "cmdline": [],
        "modules": [
            "htpclauncher",
            "htpclauncher.app",
            "htpclauncher.command",
            "htpclauncher.config",
            "htpclauncher.irreader",
            "htpclauncher.ostools",
            "htpclauncher.processManager",
            "htpclauncher.socketreader"
        ],
        "version": "1.1.0"
    },
    "htpicker": {
        "cmdline": [],
        "modules": [
            "htpicker",
            "htpicker.browser",
            "htpicker.config",
            "htpicker.handler",
            "htpicker.inotify",
            "htpicker.joystick",
            "htpicker.lirc"
        ],
        "version": "0.1.3"
    },
    "htpio": {
        "cmdline": [],
        "modules": [
            "htpio",
            "htpio.bridge",
            "htpio.decorators",
            "htpio.exceptions",
            "htpio.socketio",
            "htpio.telnetio"
        ],
        "version": "1.1.0.4"
    },
    "htptimeclient": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "htpwd": {
        "cmdline": [],
        "modules": [
            "htpwd",
            "htpwd.htpwd",
            "htpwd.tests",
            "htpwd.tests.functional_tests",
            "htpwd.tests.unittests"
        ],
        "version": "0.1.1"
    },
    "htq": {
        "cmdline": [],
        "modules": [
            "htq",
            "htq.api",
            "htq.db",
            "htq.service",
            "htq.utils"
        ],
        "version": "0.1.0"
    },
    "htrc": {
        "cmdline": [],
        "modules": [
            "htrc",
            "htrc.auth",
            "htrc.config",
            "htrc.lib",
            "htrc.lib.cli",
            "htrc.metadata",
            "htrc.metadata.marc",
            "htrc.mock",
            "htrc.mock.volumes",
            "htrc.tools",
            "htrc.tools.mallet",
            "htrc.tools.topicexplorer",
            "htrc.util",
            "htrc.util.resolve",
            "htrc.volumes",
            "htrc.workset",
            "tests",
            "tests.test_download_cli",
            "tests.test_htrc_lib_cli",
            "tests.test_htrc_mock_volumes",
            "tests.test_htrc_util_resolve",
            "tests.test_htrc_volumes",
            "tests.test_htrc_workset"
        ],
        "version": "0.1.54"
    },
    "htrc-feature-reader": {
        "cmdline": [],
        "modules": [
            "htrc_features",
            "htrc_features.caching",
            "htrc_features.config",
            "htrc_features.feature_reader",
            "htrc_features.parsers",
            "htrc_features.resolvers",
            "htrc_features.transformations",
            "htrc_features.utils"
        ],
        "version": "2.0.7"
    },
    "htrc-text-processing": {
        "cmdline": [],
        "modules": [
            "htrc_text_processing",
            "htrc_text_processing.htrc",
            "htrc_text_processing.htrc.models",
            "htrc_text_processing.htrc.runningheaders",
            "htrc_text_processing.htrc.tests",
            "htrc_text_processing.htrc.utils"
        ],
        "version": "0.0.2"
    },
    "htredirect": {
        "cmdline": [],
        "modules": [
            "htredirect",
            "htredirect.htredirect"
        ],
        "version": "0.01"
    },
    "htrest": {
        "cmdline": [],
        "modules": [
            "htrest",
            "htrest.__version__",
            "htrest.apis",
            "htrest.apis.date_time",
            "htrest.apis.device",
            "htrest.apis.fast_query",
            "htrest.apis.fault_list",
            "htrest.apis.param",
            "htrest.apis.time_prog",
            "htrest.apis.utils",
            "htrest.apiv1",
            "htrest.app",
            "htrest.settings"
        ],
        "version": "0.1.9"
    },
    "hts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hts-engine-python": {
        "cmdline": [],
        "modules": [
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u5256\u6790",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u5256\u6790.\u4e2d\u7814\u9662",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u5256\u6790.\u4e2d\u7814\u9662.\u5256\u6790\u7528\u6236\u7aef",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u5256\u6790.\u4e2d\u7814\u9662.\u5256\u6790\u7d50\u69cb\u5316\u5de5\u5177",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u5256\u6790.\u4e2d\u7814\u9662.\u81ea\u8a2d\u5256\u6790\u7528\u6236\u7aef",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6.\u516c\u7528\u8b8a\u6578",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6.\u529f\u80fd",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6.\u53e5",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6.\u5b57",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6.\u7ae0",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6.\u7d44",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6.\u8a5e",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u57fa\u672c\u7269\u4ef6.\u96c6",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e.\u4e0a\u9577\u8a5e\u512a\u5148\u8fad\u5178\u63e3\u8a5e",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e.\u4e2d\u7814\u9662",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e.\u4e2d\u7814\u9662.\u65b7\u8a5e\u7528\u6236\u7aef",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e.\u4e2d\u7814\u9662.\u7528\u6236\u7aef\u9023\u7dda",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e.\u5c3e\u5b57\u8fad\u5178\u63e3\u8a5e",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e.\u62c4\u597d\u9577\u5ea6\u8fad\u5178\u63e3\u8a5e",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e.\u8a9e\u8a00\u6a21\u578b\u63c0\u96c6\u5167\u7d44",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u65b7\u8a5e.\u8fad\u5178\u8a9e\u8a00\u6a21\u578b\u65b7\u8a5e",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u6b63\u898f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u6b63\u898f.\u963f\u62c9\u4f2f\u6578\u5b57",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7cfb\u7d71\u6574\u5408",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7cfb\u7d71\u6574\u5408.\u5916\u90e8\u7a0b\u5f0f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7cfb\u7d71\u6574\u5408.\u5b89\u88dd\u7a0b\u5f0f\u8173\u672c",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7cfb\u7d71\u6574\u5408.\u7a0b\u5f0f\u8173\u672c",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u6469\u897f\u5de5\u5177",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u6469\u897f\u5de5\u5177.\u5b89\u88dd\u6469\u897f\u7ffb\u8b6f\u4f6e\u76f8\u95dc\u7a0b\u5f0f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u6469\u897f\u5de5\u5177.\u6469\u897f\u670d\u52d9\u7aef",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u6469\u897f\u5de5\u5177.\u6469\u897f\u7528\u6236\u7aef",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u6469\u897f\u5de5\u5177.\u6469\u897f\u7ffb\u8b6f\u6a21\u578b\u8a13\u7df4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u6469\u897f\u5de5\u5177.\u65b7\u8a5e\u8f49\u65b7\u5b57\u7684\u7de8\u78bc\u5668",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u6469\u897f\u5de5\u5177.\u7121\u7de8\u78bc\u5668",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u6469\u897f\u5de5\u5177.\u8a9e\u53e5\u7de8\u78bc\u5668",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u7ffb\u8b6f.\u65b7\u8a5e\u65b7\u5b57\u7ffb\u8b6f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u53c3\u6578\u932f\u8aa4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u578b\u614b\u932f\u8aa4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u5b57\u7269\u4ef6\u7be9\u4ed4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u5ea7\u6a19\u63c0\u96c6\u5167\u7d44",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u62c6\u6587\u5206\u6790\u5668",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u6587\u7ae0\u7c97\u80da",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u7269\u4ef6\u8b40\u93e1",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u7a0b\u5f0f\u63a0\u6f0f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u7f85\u99ac\u97f3\u4ed5\u4e0a\u3052",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u89e3\u6790\u932f\u8aa4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u8a5e\u7269\u4ef6\u7db2\u4ed4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u8f49\u7269\u4ef6\u97f3\u5bb6\u79c1",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u89e3\u6790\u6574\u7406.\u96c6\u5167\u7d44\u7167\u6392",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u8a00\u6a21\u578b",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u8a00\u6a21\u578b.KenLM\u8a9e\u8a00\u6a21\u578b",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u8a00\u6a21\u578b.KenLM\u8a9e\u8a00\u6a21\u578b\u8a13\u7df4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u8a00\u6a21\u578b.\u5be6\u969b\u8a9e\u8a00\u6a21\u578b",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u8a00\u6a21\u578b.\u8a9e\u8a00\u6a21\u578b",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.HTS\u5de5\u5177",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.HTS\u5de5\u5177.HTS\u5408\u6210\u6a21\u578b",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.HTS\u5de5\u5177.\u5b89\u88ddHTS\u8a9e\u97f3\u8fa8\u8b58\u7a0b\u5f0f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.HTS\u5de5\u5177.\u8a13\u7df4HTSengine\u6a21\u578b",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u5357\u5cf6\u8a9e\u8a9e\u97f3\u6a19\u4ed4\u8f49\u63db",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u6c7a\u7b56\u6a39\u4ed4\u554f\u984c",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u6c7a\u7b56\u6a39\u4ed4\u554f\u984c.\u516c\u5bb6\u6c7a\u7b56\u6a39\u4ed4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u6c7a\u7b56\u6a39\u4ed4\u554f\u984c.\u5b98\u8a71\u6c7a\u7b56\u6a39\u4ed4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u6c7a\u7b56\u6a39\u4ed4\u554f\u984c.\u5ba2\u5bb6\u8a71\u6c7a\u7b56\u6a39\u4ed4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u6c7a\u7b56\u6a39\u4ed4\u554f\u984c.\u79c0\u59d1\u5dd2\u963f\u7f8e\u8a9e\u6c7a\u7b56\u6a39\u4ed4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u6c7a\u7b56\u6a39\u4ed4\u554f\u984c.\u95a9\u5357\u8a9e\u6c7a\u7b56\u6a39\u4ed4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u6f22\u8a9e\u8a9e\u97f3\u6a19\u4ed4\u8f49\u63db",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u751f\u6c7a\u7b56\u6a39\u4ed4\u554f\u984c",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u8a9e\u97f3\u6a19\u4ed4\u8f49\u63db",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf.\u4e09\u9023\u97f3\u8b8a\u8abf",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf.\u4ed4\u524d\u8b8a\u8abf",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf.\u518d\u8b8a\u8abf",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf.\u7121\u8abf\u7b26\u865f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf.\u7dad\u6301\u672c\u8abf",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf.\u898f\u5247\u8b8a\u8abf",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf.\u8f15\u8072",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf.\u96a8\u524d\u8b8a\u8abf",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb.\u8b8a\u8abf\u5224\u65b7",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u5408\u6210.\u95a9\u5357\u8a9e\u97f3\u97fb\u898f\u5247",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u8fa8\u8b58",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u8fa8\u8b58.HTK\u5de5\u5177",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u8fa8\u8b58.HTK\u5de5\u5177.HTK\u8a9e\u6599\u8655\u7406",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u8fa8\u8b58.HTK\u5de5\u5177.HTK\u8fa8\u8b58\u6a21\u578b",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u8fa8\u8b58.HTK\u5de5\u5177.HTK\u8fa8\u8b58\u6a21\u578b\u8a13\u7df4",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u8fa8\u8b58.HTK\u5de5\u5177.\u5b89\u88ddHTK\u8a9e\u97f3\u8fa8\u8b58\u7a0b\u5f0f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8a9e\u97f3\u8fa8\u8b58.\u8072\u97f3\u6a94",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8fad\u5178",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8fad\u5178.\u578b\u97f3\u8fad\u5178",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8fad\u5178.\u578b\u97f3\u9ede",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8fad\u5178.\u5c3e\u5b57\u8fad\u5178",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8fad\u5178.\u6587\u5b57\u8fad\u5178",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u8fad\u5178.\u73fe\u6380\u8fad\u5178",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.Pangcah",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.Pangcah.\u539f\u4f4f\u6c11\u65cf\u8a9e\u8a00\u66f8\u5beb\u7cfb\u7d71\u79c0\u59d1\u5dd2\u963f\u7f8e\u8a9e",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5b98\u8a71",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5b98\u8a71.\u5b98\u8a71\u6ce8\u97f3\u7b26\u865f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5b98\u8a71.\u5b98\u8a71\u6ce8\u97f3\u7b26\u865f\u8f49\u97f3\u503c\u6a21\u7d44",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5b98\u8a71.\u6f22\u8a9e\u62fc\u97f3",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5b98\u8a71\u7d9c\u5408\u6a19\u97f3",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5ba2\u8a71",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5ba2\u8a71.\u81fa\u7063\u5ba2\u5bb6\u8a71\u62fc\u97f3",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5ba2\u8a71.\u81fa\u7063\u5ba2\u5bb6\u8a71\u62fc\u97f3\u8f49\u97f3\u503c\u6a21\u7d44",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u5ba2\u8a71\u7d9c\u5408\u6a19\u97f3",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u6559\u6703\u7cfb\u7f85\u99ac\u97f3\u6a19",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u6559\u6703\u7f85\u99ac\u5b57\u97f3\u6a19",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u65b9\u97f3\u7b26\u865f\u5433\u5b88\u79ae\u6539\u826f\u5f0f",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u81fa\u7063\u8a9e\u8a00\u97f3\u6a19",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u81fa\u7063\u95a9\u5357\u8a9e\u7f85\u99ac\u5b57\u62fc\u97f3",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u81fa\u7063\u95a9\u5357\u8a9e\u7f85\u99ac\u5b57\u62fc\u97f3\u76f8\u5bb9\u6559\u6703\u7f85\u99ac\u5b57\u97f3\u6a19",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u81fa\u7063\u95a9\u5357\u8a9e\u7f85\u99ac\u5b57\u62fc\u97f3\u8f49\u65b9\u97f3\u7b26\u865f\u5433\u5b88\u79ae\u6539\u826f\u5f0f\u6a21\u7d44",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u81fa\u7063\u95a9\u5357\u8a9e\u7f85\u99ac\u5b57\u62fc\u97f3\u8f49\u97f3\u503c\u6a21\u7d44",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u901a\u7528\u62fc\u97f3\u97f3\u6a19",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e.\u95a9\u5357\u8a9e\u97f3\u6a19\u4ecb\u9762",
            "\u81fa\u7063\u8a00\u8a9e\u5de5\u5177.\u97f3\u6a19\u7cfb\u7d71.\u95a9\u5357\u8a9e\u7d9c\u5408\u6a19\u97f3"
        ],
        "version": "0.1.0"
    },
    "hts-heracles": {
        "cmdline": [],
        "modules": [
            "hts_heracles",
            "hts_heracles.atlasLogger",
            "hts_heracles.herculesExceptions",
            "hts_heracles.rabbitmqclient",
            "hts_heracles.util"
        ],
        "version": "1597758259"
    },
    "hts-waterworks": {
        "cmdline": [],
        "modules": [
            "hts_waterworks",
            "hts_waterworks.annotation",
            "hts_waterworks.bootstrap",
            "hts_waterworks.call_peaks",
            "hts_waterworks.clip_seq",
            "hts_waterworks.mapping",
            "hts_waterworks.motif_discovery",
            "hts_waterworks.pas_seq",
            "hts_waterworks.preprocessing",
            "hts_waterworks.visualize"
        ],
        "version": "0.1"
    },
    "htsengine": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "htseq": {
        "cmdline": [],
        "modules": [
            "HTSeq",
            "HTSeq.StepVector",
            "HTSeq._HTSeq_internal",
            "HTSeq._version",
            "HTSeq.features",
            "HTSeq.scripts",
            "HTSeq.scripts.count",
            "HTSeq.scripts.count_with_barcodes",
            "HTSeq.scripts.qa",
            "HTSeq.utils"
        ],
        "version": "0.12.4"
    },
    "htseq-arm-linux": {
        "cmdline": [],
        "modules": [
            "HTSeq",
            "HTSeq.StepVector",
            "HTSeq._HTSeq",
            "HTSeq._HTSeq_internal",
            "HTSeq._StepVector",
            "HTSeq._version",
            "HTSeq.scripts",
            "HTSeq.scripts.count",
            "HTSeq.scripts.qa"
        ],
        "version": "0.6.1"
    },
    "htseq-clip": {
        "cmdline": [],
        "modules": [
            "clip",
            "clip.GTxFeature",
            "clip.Gene",
            "clip.GeneLengthSummary",
            "clip.GeneRegion",
            "clip.bamCLIP",
            "clip.bedCLIP",
            "clip.clip",
            "clip.command_line",
            "clip.countCLIP",
            "clip.createMatrix",
            "clip.gffCLIP",
            "clip.output",
            "tests",
            "tests.bamCLIP_test",
            "tests.countCLIP_test",
            "tests.createMatrix_test",
            "tests.gffCLIP_test"
        ],
        "version": "2.2.0b0"
    },
    "htseqcountcluster": {
        "cmdline": [],
        "modules": [
            "HTSeqCountCluster",
            "HTSeqCountCluster.htseq_count_cluster",
            "HTSeqCountCluster.logger",
            "HTSeqCountCluster.logger.logger",
            "HTSeqCountCluster.mergecounts",
            "HTSeqCountCluster.pbsjob",
            "HTSeqCountCluster.pbsjob.pbsconfig",
            "HTSeqCountCluster.pbsjob.pbsjob",
            "HTSeqCountCluster.pbsjob.pbsutils",
            "HTSeqCountCluster.pbsjob.qstat",
            "HTSeqCountCluster.utils",
            "tests",
            "tests.data"
        ],
        "version": "1.3"
    },
    "htsget": {
        "cmdline": [],
        "modules": [
            "htsget",
            "htsget._version",
            "htsget.cli",
            "htsget.exceptions",
            "htsget.io",
            "htsget.protocol"
        ],
        "version": "0.2.5"
    },
    "htsimaging": {
        "cmdline": [],
        "modules": [
            "htsimaging",
            "htsimaging.ana1_nd2csv",
            "htsimaging.ana2_csv2nums",
            "htsimaging.ana3_nums2kins",
            "htsimaging.ana_spt",
            "htsimaging.bleach_chase2kins",
            "htsimaging.bleach_chase2vid",
            "htsimaging.endocytosis",
            "htsimaging.lib",
            "htsimaging.lib.bleach_chase",
            "htsimaging.lib.diffusion",
            "htsimaging.lib.fit_kin",
            "htsimaging.lib.global_vars",
            "htsimaging.lib.io_cfg",
            "htsimaging.lib.io_data_files",
            "htsimaging.lib.io_nd_files",
            "htsimaging.lib.o2im",
            "htsimaging.lib.plot",
            "htsimaging.lib.segment",
            "htsimaging.lib.spt",
            "htsimaging.lib.stat",
            "htsimaging.lib.utils",
            "htsimaging.trackinginfo2emsd"
        ],
        "version": "1.0.2"
    },
    "htsinfer": {
        "cmdline": [],
        "modules": [
            "src",
            "src.htsinfer"
        ],
        "version": "0.2.0"
    },
    "htsint": {
        "cmdline": [],
        "modules": [
            "htsint",
            "htsint.AssembleDistances",
            "htsint.Configure",
            "htsint.GeneDistances",
            "htsint.GeneOntology",
            "htsint.GeneSet",
            "htsint.GeneSetCollection",
            "htsint.InnerJoinExample",
            "htsint.RunSubprocess",
            "htsint.TaxaSummary",
            "htsint.TermDistances",
            "htsint.basedir",
            "htsint.version"
        ],
        "version": "0.5.2"
    },
    "htsprophet": {
        "cmdline": [],
        "modules": [
            "htsprophet",
            "htsprophet.fitForecast",
            "htsprophet.hts",
            "htsprophet.htsPlot",
            "htsprophet.makeWeekly",
            "htsprophet.orderHier",
            "htsprophet.runHTS"
        ],
        "version": "0.1.0"
    },
    "htsql": {
        "cmdline": [],
        "modules": [
            "htsql",
            "htsql.core",
            "htsql.core.adapter",
            "htsql.core.addon",
            "htsql.core.application",
            "htsql.core.cache",
            "htsql.core.classify",
            "htsql.core.cmd",
            "htsql.core.cmd.act",
            "htsql.core.cmd.command",
            "htsql.core.cmd.embed",
            "htsql.core.cmd.fetch",
            "htsql.core.cmd.summon",
            "htsql.core.connect",
            "htsql.core.context",
            "htsql.core.domain",
            "htsql.core.entity",
            "htsql.core.error",
            "htsql.core.fmt",
            "htsql.core.fmt.accept",
            "htsql.core.fmt.emit",
            "htsql.core.fmt.format",
            "htsql.core.fmt.html",
            "htsql.core.fmt.json",
            "htsql.core.fmt.tabular",
            "htsql.core.fmt.text",
            "htsql.core.fmt.xml",
            "htsql.core.introspect",
            "htsql.core.model",
            "htsql.core.split_sql",
            "htsql.core.syn",
            "htsql.core.syn.decode",
            "htsql.core.syn.grammar",
            "htsql.core.syn.parse",
            "htsql.core.syn.scan",
            "htsql.core.syn.syntax",
            "htsql.core.syn.token",
            "htsql.core.tr",
            "htsql.core.tr.assemble",
            "htsql.core.tr.bind",
            "htsql.core.tr.binding",
            "htsql.core.tr.coerce",
            "htsql.core.tr.compile",
            "htsql.core.tr.decorate",
            "htsql.core.tr.dump",
            "htsql.core.tr.encode",
            "htsql.core.tr.flow",
            "htsql.core.tr.fn",
            "htsql.core.tr.fn.assemble",
            "htsql.core.tr.fn.bind",
            "htsql.core.tr.fn.dump",
            "htsql.core.tr.fn.encode",
            "htsql.core.tr.fn.reduce",
            "htsql.core.tr.fn.rewrite",
            "htsql.core.tr.fn.signature",
            "htsql.core.tr.frame",
            "htsql.core.tr.lookup",
            "htsql.core.tr.plan",
            "htsql.core.tr.reduce",
            "htsql.core.tr.rewrite",
            "htsql.core.tr.signature",
            "htsql.core.tr.stitch",
            "htsql.core.tr.term",
            "htsql.core.util",
            "htsql.core.validator",
            "htsql.core.wsgi",
            "htsql.ctl",
            "htsql.ctl.default",
            "htsql.ctl.error",
            "htsql.ctl.extension",
            "htsql.ctl.help",
            "htsql.ctl.option",
            "htsql.ctl.regress",
            "htsql.ctl.request",
            "htsql.ctl.routine",
            "htsql.ctl.script",
            "htsql.ctl.server",
            "htsql.ctl.shell",
            "htsql.ctl.version",
            "htsql.tweak",
            "htsql.tweak.autolimit",
            "htsql.tweak.autolimit.encode",
            "htsql.tweak.cors",
            "htsql.tweak.cors.wsgi",
            "htsql.tweak.csrf",
            "htsql.tweak.csrf.wsgi",
            "htsql.tweak.django",
            "htsql.tweak.django.connect",
            "htsql.tweak.django.introspect",
            "htsql.tweak.etl",
            "htsql.tweak.etl.cmd",
            "htsql.tweak.etl.cmd.command",
            "htsql.tweak.etl.cmd.delete",
            "htsql.tweak.etl.cmd.do",
            "htsql.tweak.etl.cmd.insert",
            "htsql.tweak.etl.cmd.merge",
            "htsql.tweak.etl.cmd.summon",
            "htsql.tweak.etl.cmd.truncate",
            "htsql.tweak.etl.cmd.update",
            "htsql.tweak.etl.tr",
            "htsql.tweak.etl.tr.dump",
            "htsql.tweak.filedb",
            "htsql.tweak.filedb.connect",
            "htsql.tweak.filedb.introspect",
            "htsql.tweak.gateway",
            "htsql.tweak.gateway.command",
            "htsql.tweak.hello",
            "htsql.tweak.inet",
            "htsql.tweak.inet.bind",
            "htsql.tweak.inet.coerce",
            "htsql.tweak.inet.domain",
            "htsql.tweak.inet.encode",
            "htsql.tweak.inet.signature",
            "htsql.tweak.meta",
            "htsql.tweak.meta.command",
            "htsql.tweak.meta.slave",
            "htsql.tweak.meta.slave.connect",
            "htsql.tweak.override",
            "htsql.tweak.override.classify",
            "htsql.tweak.override.introspect",
            "htsql.tweak.override.pattern",
            "htsql.tweak.pool",
            "htsql.tweak.pool.connect",
            "htsql.tweak.resource",
            "htsql.tweak.resource.locate",
            "htsql.tweak.resource.wsgi",
            "htsql.tweak.shell",
            "htsql.tweak.shell.command",
            "htsql.tweak.shell.default",
            "htsql.tweak.shell.default.act",
            "htsql.tweak.shell.locate",
            "htsql.tweak.sqlalchemy",
            "htsql.tweak.sqlalchemy.connect",
            "htsql.tweak.sqlalchemy.introspect",
            "htsql.tweak.system",
            "htsql.tweak.timeout",
            "htsql_sqlite",
            "htsql_sqlite.core",
            "htsql_sqlite.core.connect",
            "htsql_sqlite.core.introspect",
            "htsql_sqlite.core.split_sql",
            "htsql_sqlite.core.tr",
            "htsql_sqlite.core.tr.compile",
            "htsql_sqlite.core.tr.dump",
            "htsql_sqlite.core.tr.signature",
            "sphinxcontrib",
            "sphinxcontrib.htsqldoc",
            "sphinxcontrib.texdiag"
        ],
        "version": "2.3.3"
    },
    "htsql-django": {
        "cmdline": [],
        "modules": [
            "htsql_django",
            "htsql_django.urls",
            "htsql_django.views"
        ],
        "version": "2.3.3"
    },
    "htsql-excel": {
        "cmdline": [],
        "modules": [
            "htsql_excel"
        ],
        "version": "0.1.3"
    },
    "htsql-mssql": {
        "cmdline": [],
        "modules": [
            "htsql_mssql",
            "htsql_mssql.core",
            "htsql_mssql.core.connect",
            "htsql_mssql.core.introspect",
            "htsql_mssql.core.split_sql",
            "htsql_mssql.core.tr",
            "htsql_mssql.core.tr.compile",
            "htsql_mssql.core.tr.dump",
            "htsql_mssql.core.tr.encode",
            "htsql_mssql.core.tr.reduce"
        ],
        "version": "2.3.3"
    },
    "htsql-mysql": {
        "cmdline": [],
        "modules": [
            "htsql_mysql",
            "htsql_mysql.core",
            "htsql_mysql.core.connect",
            "htsql_mysql.core.introspect",
            "htsql_mysql.core.split_sql",
            "htsql_mysql.core.tr",
            "htsql_mysql.core.tr.compile",
            "htsql_mysql.core.tr.dump",
            "htsql_mysql.core.tr.reduce",
            "htsql_mysql.core.tr.signature"
        ],
        "version": "2.3.3"
    },
    "htsql-oracle": {
        "cmdline": [],
        "modules": [
            "htsql_oracle",
            "htsql_oracle.core",
            "htsql_oracle.core.connect",
            "htsql_oracle.core.introspect",
            "htsql_oracle.core.split_sql",
            "htsql_oracle.core.tr",
            "htsql_oracle.core.tr.compile",
            "htsql_oracle.core.tr.dump",
            "htsql_oracle.core.tr.lookup",
            "htsql_oracle.core.tr.reduce",
            "htsql_oracle.core.tr.rewrite",
            "htsql_oracle.core.tr.signature"
        ],
        "version": "2.3.3"
    },
    "htsql-pgsql": {
        "cmdline": [],
        "modules": [
            "htsql_pgsql",
            "htsql_pgsql.core",
            "htsql_pgsql.core.connect",
            "htsql_pgsql.core.introspect",
            "htsql_pgsql.core.split_sql",
            "htsql_pgsql.core.tr",
            "htsql_pgsql.core.tr.dump",
            "htsql_pgsql.tweak",
            "htsql_pgsql.tweak.inet",
            "htsql_pgsql.tweak.inet.dump",
            "htsql_pgsql.tweak.inet.introspect",
            "htsql_pgsql.tweak.system",
            "htsql_pgsql.tweak.system.introspect",
            "htsql_pgsql.tweak.timeout",
            "htsql_pgsql.tweak.timeout.connect"
        ],
        "version": "2.3.3"
    },
    "htsql-xport": {
        "cmdline": [],
        "modules": [
            "htsql_xport",
            "htsql_xport.xpt"
        ],
        "version": "0.1.1"
    },
    "httk": {
        "cmdline": [],
        "modules": [
            "httk",
            "httk.analysis",
            "httk.analysis.matsci",
            "httk.analysis.matsci.phasediagram",
            "httk.analysis.matsci.vis",
            "httk.analysis.matsci.vis.matplotlibphasediagramvisualizer",
            "httk.analysis.matsci.vis.phasediagramvisualizerplugin",
            "httk.atomistic",
            "httk.atomistic.assignment",
            "httk.atomistic.assignments",
            "httk.atomistic.atomisticio",
            "httk.atomistic.atomisticio.structure_cif_io",
            "httk.atomistic.atomisticio.structure_io",
            "httk.atomistic.atomisticio.structureioplugin",
            "httk.atomistic.cell",
            "httk.atomistic.cellshape",
            "httk.atomistic.cellutils",
            "httk.atomistic.cli",
            "httk.atomistic.compound",
            "httk.atomistic.data",
            "httk.atomistic.data.periodictable",
            "httk.atomistic.data.spacegroups",
            "httk.atomistic.formulautils",
            "httk.atomistic.representativesites",
            "httk.atomistic.representativestructure",
            "httk.atomistic.results",
            "httk.atomistic.results.relaxedcellresult",
            "httk.atomistic.results.totalenergyresult",
            "httk.atomistic.siteassignment",
            "httk.atomistic.sites",
            "httk.atomistic.sitesutils",
            "httk.atomistic.spacegroup",
            "httk.atomistic.spacegrouputils",
            "httk.atomistic.structure",
            "httk.atomistic.structurephasediagram",
            "httk.atomistic.structureutils",
            "httk.atomistic.supercellutils",
            "httk.atomistic.unitcellsites",
            "httk.atomistic.unitcellstructure",
            "httk.atomistic.vis",
            "httk.atomistic.vis.asestructurevisualizer",
            "httk.atomistic.vis.jmolstructurevisualizer",
            "httk.atomistic.vis.structurephasediagramvisualizerplugin",
            "httk.atomistic.vis.structurevisualizerplugin",
            "httk.cli",
            "httk.config",
            "httk.config.config",
            "httk.core",
            "httk.core.basic",
            "httk.core.citation",
            "httk.core.code",
            "httk.core.computation",
            "httk.core.console",
            "httk.core.crypto",
            "httk.core.ed25519",
            "httk.core.geometry",
            "httk.core.httkobject",
            "httk.core.ioadapters",
            "httk.core.project",
            "httk.core.reference",
            "httk.core.signature",
            "httk.core.template",
            "httk.core.vectors",
            "httk.core.vectors.fracmath",
            "httk.core.vectors.fracvector",
            "httk.core.vectors.mutablefracvector",
            "httk.core.vectors.vector",
            "httk.core.vectors.vectormath",
            "httk.db",
            "httk.db.backend",
            "httk.db.backend.sqlite",
            "httk.db.filteredcollection",
            "httk.db.httkobjdbplugin",
            "httk.db.storable",
            "httk.db.store",
            "httk.db.store.dictstore",
            "httk.db.store.sqlstore",
            "httk.db.store.trivialstore",
            "httk.external",
            "httk.external.aflow_ext",
            "httk.external.ase_glue",
            "httk.external.cif2cell_ext",
            "httk.external.command",
            "httk.external.gulp_ext",
            "httk.external.isotropy_ext",
            "httk.external.jmol",
            "httk.external.numpy_ext",
            "httk.external.platon_ext",
            "httk.external.pymatgen_glue",
            "httk.external.pyspglib_ext",
            "httk.external.subimport",
            "httk.graphics",
            "httk.graphics.matplotlib",
            "httk.graphics.matplotlib.arrowplot",
            "httk.graphics.matplotlib.polygonplot",
            "httk.httkio",
            "httk.httkio.cif",
            "httk.httkio.load",
            "httk.httkio.save",
            "httk.iface",
            "httk.iface.ase_if",
            "httk.iface.cif2cell_if",
            "httk.iface.gulp_if",
            "httk.iface.isotropy_if",
            "httk.iface.jmol_if",
            "httk.iface.openbabel_if_notstable",
            "httk.iface.platon_if",
            "httk.iface.spglib_if",
            "httk.iface.vasp_if",
            "httk.task",
            "httk.task.reader",
            "httk.task.taskmgr",
            "httk.versioning"
        ],
        "version": "1.1.14"
    },
    "httm": {
        "cmdline": [
            "electron_flux_single_ccd_ffi_to_simulated_raw",
            "raw_single_ccd_ffi_to_calibrated_electron_flux"
        ],
        "modules": [
            "httm",
            "httm.data_structures",
            "httm.data_structures.common",
            "httm.data_structures.documentation",
            "httm.data_structures.electron_flux_converter",
            "httm.data_structures.metadata",
            "httm.data_structures.raw_converter",
            "httm.fits_utilities",
            "httm.fits_utilities.electron_flux_fits",
            "httm.fits_utilities.header_tools",
            "httm.fits_utilities.raw_fits",
            "httm.resource_utilities",
            "httm.system",
            "httm.system.command_line",
            "httm.system.command_line.metadata",
            "httm.system.config_file",
            "httm.transformations",
            "httm.transformations.common",
            "httm.transformations.constants",
            "httm.transformations.electron_flux_converters_to_raw",
            "httm.transformations.electron_flux_slices_to_raw",
            "httm.transformations.metadata",
            "httm.transformations.raw_converters_to_calibrated",
            "httm.transformations.raw_slices_to_calibrated"
        ],
        "version": "0.2.2"
    },
    "httmock": {
        "cmdline": [],
        "modules": [
            "httmock"
        ],
        "version": "1.3.0"
    },
    "httools": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "http": {
        "cmdline": [],
        "modules": [
            "http",
            "http.date",
            "http.exception",
            "http.headers",
            "http.request",
            "http.response",
            "http.url"
        ],
        "version": "0.02"
    },
    "http-api": {
        "cmdline": [],
        "modules": [
            "http_api",
            "http_api.example",
            "http_api.map",
            "http_api.security",
            "http_api.server",
            "http_api.utils"
        ],
        "version": "0.2.2"
    },
    "http-api-exporter": {
        "cmdline": [],
        "modules": [
            "http_api_exporter",
            "http_api_exporter.api_servers",
            "http_api_exporter.api_servers.abstract_api_server",
            "http_api_exporter.api_servers.simple_api_server",
            "http_api_exporter.handler",
            "http_api_exporter.log_helper"
        ],
        "version": "1.2.3"
    },
    "http-api-sdk": {
        "cmdline": [],
        "modules": [
            "httpapi",
            "httpapi.HTTPSDK"
        ],
        "version": "2.3.0"
    },
    "http-basic-auth": {
        "cmdline": [],
        "modules": [
            "http_basic_auth"
        ],
        "version": "1.2.0"
    },
    "http-butler": {
        "cmdline": [],
        "modules": [
            "butler",
            "butler.__version__",
            "butler.butler",
            "butler.butler_function",
            "butler.client",
            "butler.server"
        ],
        "version": "0.4.0"
    },
    "http-checks": {
        "cmdline": [],
        "modules": [
            "httpchecks",
            "httpchecks.httpcheck"
        ],
        "version": "0.2.1"
    },
    "http-client": {
        "cmdline": [],
        "modules": [
            "http_client",
            "http_client.base"
        ],
        "version": "0.1.22"
    },
    "http-cmd": {
        "cmdline": [],
        "modules": [
            "httpcmd",
            "httpcmd.app",
            "httpcmd.cli",
            "httpcmd.cmd"
        ],
        "version": "0.1"
    },
    "http-constants": {
        "cmdline": [],
        "modules": [
            "http_constants",
            "http_constants.headers",
            "http_constants.status"
        ],
        "version": "0.5.0"
    },
    "http-crawler": {
        "cmdline": [],
        "modules": [
            "http_crawler"
        ],
        "version": "0.2.1"
    },
    "http-dumper": {
        "cmdline": [
            "http_dumper"
        ],
        "modules": [
            "http_dumper",
            "http_dumper.wsgi"
        ],
        "version": "0.4"
    },
    "http-ece": {
        "cmdline": [],
        "modules": [
            "http_ece"
        ],
        "version": "1.1.0"
    },
    "http-here": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "http-hmac-python": {
        "cmdline": [],
        "modules": [
            "httphmac",
            "httphmac.base_signer",
            "httphmac.compat",
            "httphmac.request",
            "httphmac.v1",
            "httphmac.v2"
        ],
        "version": "2.4.1"
    },
    "http-import": {
        "cmdline": [],
        "modules": [
            "http_import",
            "http_import.http_import"
        ],
        "version": "0.1.2"
    },
    "http-interceptor": {
        "cmdline": [],
        "modules": [
            "interceptor"
        ],
        "version": "0.1.3"
    },
    "http-lazy-headers": {
        "cmdline": [],
        "modules": [
            "http_lazy_headers",
            "http_lazy_headers.collections_",
            "http_lazy_headers.exceptions",
            "http_lazy_headers.fields",
            "http_lazy_headers.fields.accept",
            "http_lazy_headers.fields.accept_charset",
            "http_lazy_headers.fields.accept_encoding",
            "http_lazy_headers.fields.accept_language",
            "http_lazy_headers.fields.accept_ranges",
            "http_lazy_headers.fields.age",
            "http_lazy_headers.fields.allow",
            "http_lazy_headers.fields.authorization",
            "http_lazy_headers.fields.cache_control",
            "http_lazy_headers.fields.connection",
            "http_lazy_headers.fields.content_disposition",
            "http_lazy_headers.fields.content_encoding",
            "http_lazy_headers.fields.content_language",
            "http_lazy_headers.fields.content_length",
            "http_lazy_headers.fields.content_location",
            "http_lazy_headers.fields.content_range",
            "http_lazy_headers.fields.content_type",
            "http_lazy_headers.fields.cookie",
            "http_lazy_headers.fields.custom",
            "http_lazy_headers.fields.date",
            "http_lazy_headers.fields.etag",
            "http_lazy_headers.fields.expect",
            "http_lazy_headers.fields.expires",
            "http_lazy_headers.fields.from_",
            "http_lazy_headers.fields.host",
            "http_lazy_headers.fields.if_match",
            "http_lazy_headers.fields.if_modified_since",
            "http_lazy_headers.fields.if_none_match",
            "http_lazy_headers.fields.if_range",
            "http_lazy_headers.fields.if_unmodified_since",
            "http_lazy_headers.fields.last_modified",
            "http_lazy_headers.fields.location",
            "http_lazy_headers.fields.max_forwards",
            "http_lazy_headers.fields.pragma",
            "http_lazy_headers.fields.range",
            "http_lazy_headers.fields.referer",
            "http_lazy_headers.fields.retry_after",
            "http_lazy_headers.fields.server",
            "http_lazy_headers.fields.set_cookie",
            "http_lazy_headers.fields.te",
            "http_lazy_headers.fields.trailer",
            "http_lazy_headers.fields.transfer_encoding",
            "http_lazy_headers.fields.upgrade",
            "http_lazy_headers.fields.user_agent",
            "http_lazy_headers.fields.vary",
            "http_lazy_headers.fields.via",
            "http_lazy_headers.fields.warning",
            "http_lazy_headers.fields.www_authenticate",
            "http_lazy_headers.settings",
            "http_lazy_headers.shared",
            "http_lazy_headers.shared.ascii_tools",
            "http_lazy_headers.shared.bases",
            "http_lazy_headers.shared.checkers",
            "http_lazy_headers.shared.cleaners",
            "http_lazy_headers.shared.constraints",
            "http_lazy_headers.shared.cookies",
            "http_lazy_headers.shared.dates",
            "http_lazy_headers.shared.helpers",
            "http_lazy_headers.shared.language_tags",
            "http_lazy_headers.shared.parameters",
            "http_lazy_headers.shared.parsers",
            "http_lazy_headers.shared.quality",
            "http_lazy_headers.shared.values",
            "http_lazy_headers.shared.values.charsets",
            "http_lazy_headers.shared.values.disposition",
            "http_lazy_headers.shared.values.encodings",
            "http_lazy_headers.shared.values.media_types",
            "http_lazy_headers.shared.values.methods",
            "http_lazy_headers.shared.values.ranges",
            "http_lazy_headers.wsgi",
            "tests",
            "tests.tests_fields"
        ],
        "version": "0.1.dev0"
    },
    "http-log": {
        "cmdline": [],
        "modules": [
            "httplog",
            "httplog.log",
            "httplog.patcher",
            "httplog.settings",
            "httplog.support",
            "httplog.support.httplib2",
            "httplog.support.requests",
            "httplog.support.urllib2"
        ],
        "version": "2.2"
    },
    "http-logger": {
        "cmdline": [],
        "modules": [
            "http_logger",
            "http_logger.handlers"
        ],
        "version": "0.0.1"
    },
    "http-noah": {
        "cmdline": [],
        "modules": [
            "http_noah",
            "http_noah.async_client",
            "http_noah.common",
            "http_noah.sync_client",
            "http_noah.utils",
            "tests",
            "tests.async_tests",
            "tests.common",
            "tests.models",
            "tests.server",
            "tests.sync_tests"
        ],
        "version": "0.1.10"
    },
    "http-ok": {
        "cmdline": [],
        "modules": [
            "http_ok",
            "http_ok.run"
        ],
        "version": "0.1"
    },
    "http-okapi": {
        "cmdline": [],
        "modules": [
            "http_okapi",
            "http_okapi.cherrypy"
        ],
        "version": "1.0.0"
    },
    "http-parser": {
        "cmdline": [],
        "modules": [
            "http_parser",
            "http_parser._socketio",
            "http_parser.http",
            "http_parser.pyparser",
            "http_parser.reader",
            "http_parser.util"
        ],
        "version": "0.9.0"
    },
    "http-process-proxy": {
        "cmdline": [],
        "modules": [
            "httpprocessproxy",
            "httpprocessproxy.backend",
            "httpprocessproxy.frontend",
            "httpprocessproxy.livereload",
            "httpprocessproxy.watcher"
        ],
        "version": "0.0.10"
    },
    "http-prompt": {
        "cmdline": [],
        "modules": [
            "http_prompt",
            "http_prompt.cli",
            "http_prompt.completer",
            "http_prompt.completion",
            "http_prompt.config",
            "http_prompt.context",
            "http_prompt.context.transform",
            "http_prompt.contextio",
            "http_prompt.defaultconfig",
            "http_prompt.execution",
            "http_prompt.lexer",
            "http_prompt.options",
            "http_prompt.output",
            "http_prompt.tree",
            "http_prompt.utils",
            "http_prompt.xdg"
        ],
        "version": "1.0.0"
    },
    "http-proxy": {
        "cmdline": [],
        "modules": [
            "proxycore",
            "proxycore.flows",
            "proxycore.flows.duck_flow",
            "proxycore.flows.narwhals_flow",
            "proxycore.flows.zz_default_recipe",
            "proxycore.parser",
            "proxycore.parser.http_parser",
            "proxycore.parser.parser_utils",
            "proxycore.pipe",
            "proxycore.pipe.apipe",
            "proxycore.pipe.aserver",
            "proxycore.pipe.communication",
            "proxycore.pipe.endpoint",
            "proxycore.pipe.importing",
            "proxycore.pipe.logger",
            "proxycore.pipe.persistence",
            "proxycore.pipe.recipe",
            "proxycore.pipe.recipe.flow",
            "proxycore.pipe.recipe.flow_finder",
            "proxycore.pipe.recipe.matchers",
            "proxycore.pipe.recipe.soap",
            "proxycore.pipe.reporting",
            "proxycore.utils",
            "proxycore.utils.soap2python",
            "setup",
            "setup_proxy"
        ],
        "version": "1.0.16"
    },
    "http-proxy-gui": {
        "cmdline": [],
        "modules": [
            "proxycore",
            "proxygui",
            "proxygui.main",
            "proxygui.main_window",
            "proxygui.plugins",
            "proxygui.plugins.abstract_plugins",
            "proxygui.plugins.cmd_plugin",
            "proxygui.plugins.code_gen_plugin",
            "proxygui.plugins.core_plugin",
            "proxygui.plugins.plugin_registry",
            "proxygui.plugins.request_plugin",
            "proxygui.plugins.soap",
            "proxygui.plugins.soap.SoapCodeGenerator",
            "proxygui.plugins.soap_plugin",
            "proxygui.widgets",
            "proxygui.widgets.body_content_viewer",
            "proxygui.widgets.connection_config",
            "proxygui.widgets.http_messages_tabs",
            "proxygui.widgets.http_messages_tree_view",
            "proxygui.widgets.top_tabs",
            "proxygui.worker",
            "setup",
            "setup_gui"
        ],
        "version": "1.0.13"
    },
    "http-pycurl": {
        "cmdline": [],
        "modules": [
            "http_pycurl",
            "http_pycurl.api",
            "http_pycurl.exceptions",
            "http_pycurl.models",
            "http_pycurl.sessions",
            "http_pycurl.structures",
            "http_pycurl.utils"
        ],
        "version": "1.0.2"
    },
    "http-raw": {
        "cmdline": [],
        "modules": [
            "httpraw",
            "httpraw.httpraw"
        ],
        "version": "0.2.1"
    },
    "http-request": {
        "cmdline": [],
        "modules": [
            "http_request"
        ],
        "version": "1.2"
    },
    "http-request-aggregator": {
        "cmdline": [],
        "modules": [
            "http_request_aggregator"
        ],
        "version": "0.4"
    },
    "http-request-args": {
        "cmdline": [],
        "modules": [
            "http_request_args",
            "http_request_args.argument",
            "http_request_args.arguments_params",
            "http_request_args.arguments_prototypes",
            "http_request_args.qs_parser",
            "http_request_args.status",
            "http_request_args.utilities",
            "http_request_args.validation"
        ],
        "version": "0.1.28"
    },
    "http-request-randomizer": {
        "cmdline": [],
        "modules": [
            "http_request_randomizer",
            "http_request_randomizer.requests",
            "http_request_randomizer.requests.errors",
            "http_request_randomizer.requests.errors.ParserExceptions",
            "http_request_randomizer.requests.errors.ProxyListException",
            "http_request_randomizer.requests.parsers",
            "http_request_randomizer.requests.parsers.FreeProxyParser",
            "http_request_randomizer.requests.parsers.PremProxyParser",
            "http_request_randomizer.requests.parsers.ProxyForEuParser",
            "http_request_randomizer.requests.parsers.RebroWeeblyParser",
            "http_request_randomizer.requests.parsers.UrlParser",
            "http_request_randomizer.requests.parsers.js",
            "http_request_randomizer.requests.parsers.js.UnPacker",
            "http_request_randomizer.requests.proxy",
            "http_request_randomizer.requests.proxy.ProxyObject",
            "http_request_randomizer.requests.proxy.requestProxy",
            "http_request_randomizer.requests.runners",
            "http_request_randomizer.requests.runners.proxyList",
            "http_request_randomizer.requests.useragent",
            "http_request_randomizer.requests.useragent.userAgent"
        ],
        "version": "1.2.3"
    },
    "http-request-response": {
        "cmdline": [],
        "modules": [
            "http_request_response"
        ],
        "version": "0.0.14"
    },
    "http-requester": {
        "cmdline": [],
        "modules": [
            "http_requester",
            "http_requester.creds",
            "http_requester.requester"
        ],
        "version": "1.0.3"
    },
    "http-requests": {
        "cmdline": [],
        "modules": [
            "http_requests",
            "http_requests.async_requests"
        ],
        "version": "0.1"
    },
    "http-resource": {
        "cmdline": [],
        "modules": [
            "http_resource",
            "http_resource.compat",
            "http_resource.error",
            "http_resource.resource",
            "http_resource.transports",
            "http_resource.utils"
        ],
        "version": "0.1.2"
    },
    "http-rx": {
        "cmdline": [],
        "modules": [
            "rx",
            "rx.check",
            "rx.check.check_headers",
            "rx.check.test_check",
            "rx.check.test_check_headers",
            "rx.doctor",
            "rx.report",
            "rx.request",
            "rx.test_report",
            "rx.test_request",
            "rx.test_timer",
            "rx.timer"
        ],
        "version": "0.5.0"
    },
    "http-serve": {
        "cmdline": [],
        "modules": [
            "http_serve",
            "http_serve.errors",
            "http_serve.middleware",
            "http_serve.request",
            "http_serve.response",
            "http_serve.router",
            "http_serve.server"
        ],
        "version": "0.246"
    },
    "http-server-base": {
        "cmdline": [],
        "modules": [
            "http_server_base",
            "http_server_base.ab2",
            "http_server_base.application_base",
            "http_server_base.auth",
            "http_server_base.auth.api_key_auth_providers",
            "http_server_base.auth.auth_providers",
            "http_server_base.auth.authorized_client",
            "http_server_base.auth.oauth2_model",
            "http_server_base.auth.oauth2_provider",
            "http_server_base.daemon",
            "http_server_base.discoverable",
            "http_server_base.empty_request_handler",
            "http_server_base.error_matcher",
            "http_server_base.handler_controller",
            "http_server_base.health_check_request_handler",
            "http_server_base.host",
            "http_server_base.interfaces",
            "http_server_base.interfaces.iapplication",
            "http_server_base.interfaces.idiscoverable",
            "http_server_base.interfaces.ihc",
            "http_server_base.interfaces.iloggable",
            "http_server_base.interfaces.ilrh",
            "http_server_base.interfaces.irespondable",
            "http_server_base.interfaces.iresponder",
            "http_server_base.interfaces.irouter",
            "http_server_base.interfaces.types",
            "http_server_base.logged_request_handler",
            "http_server_base.model",
            "http_server_base.model.dataclass_generic_encoder",
            "http_server_base.model.dataclass_json_encoder",
            "http_server_base.model.encoder_error",
            "http_server_base.model.filtering_json_encoder",
            "http_server_base.model.iencoder",
            "http_server_base.prefix_tree_router",
            "http_server_base.request_logger_client",
            "http_server_base.responders",
            "http_server_base.restapi",
            "http_server_base.restapi.base_in_request_router",
            "http_server_base.restapi.base_rest_request_handler",
            "http_server_base.restapi.interfaces",
            "http_server_base.restapi.interfaces.endpoint",
            "http_server_base.restapi.interfaces.extras",
            "http_server_base.restapi.interfaces.iirr",
            "http_server_base.restapi.interfaces.irrh",
            "http_server_base.restapi.path_tree_in_request_router",
            "http_server_base.restapi.path_tree_rest_request_handler",
            "http_server_base.restapi.prefix_tree_rest_router",
            "http_server_base.restapi.regexp_in_request_router",
            "http_server_base.restapi.regexp_rest_request_handler",
            "http_server_base.strict_host_matches",
            "http_server_base.subrequest_client",
            "http_server_base.tools",
            "http_server_base.tools.config_loader",
            "http_server_base.tools.dataclass_with_settings",
            "http_server_base.tools.defaults",
            "http_server_base.tools.docs",
            "http_server_base.tools.errors",
            "http_server_base.tools.extensions",
            "http_server_base.tools.filters",
            "http_server_base.tools.inspect_tools",
            "http_server_base.tools.logging",
            "http_server_base.tools.path_tree_map",
            "http_server_base.tools.prefix_tree_map",
            "http_server_base.tools.re_dict",
            "http_server_base.tools.subrequest_classes",
            "http_server_base.tools.types"
        ],
        "version": "2.0.1"
    },
    "http-server-livereload": {
        "cmdline": [],
        "modules": [
            "http_server_livereload"
        ],
        "version": "1.1.0"
    },
    "http-server-mock": {
        "cmdline": [],
        "modules": [
            "http_server_mock"
        ],
        "version": "1.7"
    },
    "http-sfv": {
        "cmdline": [],
        "modules": [
            "http_sfv",
            "http_sfv.boolean",
            "http_sfv.byteseq",
            "http_sfv.decimal",
            "http_sfv.dictionary",
            "http_sfv.integer",
            "http_sfv.item",
            "http_sfv.list",
            "http_sfv.string",
            "http_sfv.token",
            "http_sfv.types",
            "http_sfv.util",
            "http_sfv.util_json"
        ],
        "version": "0.9.1"
    },
    "http-signature": {
        "cmdline": [],
        "modules": [
            "http_signature",
            "http_signature._version",
            "http_signature.requests_auth",
            "http_signature.sign",
            "http_signature.utils"
        ],
        "version": "0.1.4"
    },
    "http-signature-client": {
        "cmdline": [],
        "modules": [
            "http_signature_client"
        ],
        "version": "0.0.23"
    },
    "http-signature-server": {
        "cmdline": [],
        "modules": [
            "http_signature_server"
        ],
        "version": "0.0.12"
    },
    "http-status": {
        "cmdline": [],
        "modules": [
            "http_status",
            "http_status.six",
            "http_status.test_http_status"
        ],
        "version": "1.0.0"
    },
    "http-status-code": {
        "cmdline": [],
        "modules": [
            "http_status_code",
            "http_status_code.errors",
            "http_status_code.standard"
        ],
        "version": "0.0.8"
    },
    "http-status-codes": {
        "cmdline": [],
        "modules": [
            "http_constants",
            "http_constants.header",
            "http_constants.status"
        ],
        "version": "1.0.1"
    },
    "http-stream-xml": {
        "cmdline": [],
        "modules": [
            "httpstreamxml",
            "httpstreamxml.entrez_example",
            "httpstreamxml.entrez_socket_example",
            "httpstreamxml.ncbi",
            "httpstreamxml.socket_stream",
            "httpstreamxml.xml_stream",
            "tests"
        ],
        "version": "1.3"
    },
    "http-tarpit": {
        "cmdline": [],
        "modules": [
            "http_tarpit",
            "http_tarpit.constants",
            "http_tarpit.server",
            "http_tarpit.utils"
        ],
        "version": "0.1.2"
    },
    "http-test-client": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.2"
    },
    "http-tools": {
        "cmdline": [],
        "modules": [
            "http_tools",
            "http_tools.modules",
            "http_tools.modules.capture",
            "http_tools.modules.interceptor",
            "http_tools.modules.runner",
            "http_tools.settings",
            "http_tools.web",
            "http_tools.web.controllers",
            "http_tools.web.controllers.dashboard",
            "http_tools.web.controllers.index",
            "http_tools.web.flow_tools",
            "http_tools.web.server"
        ],
        "version": "1.1.1"
    },
    "http-tracer": {
        "cmdline": [],
        "modules": [
            "tests",
            "tests.context",
            "tests.test_basic",
            "tracer",
            "tracer.main"
        ],
        "version": "19.7.3"
    },
    "http-types": {
        "cmdline": [],
        "modules": [
            "http_types",
            "http_types.types",
            "http_types.utils"
        ],
        "version": "0.0.18"
    },
    "http1": {
        "cmdline": [],
        "modules": [
            "http1",
            "http1.http1",
            "http1.test_http1"
        ],
        "version": "1.0.2"
    },
    "http11": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "http2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "http2json": {
        "cmdline": [],
        "modules": [
            "http2json",
            "http2json.__about__",
            "http2json.cli",
            "http2json.compat",
            "http2json.core",
            "http2json.utils"
        ],
        "version": "1.0.7"
    },
    "http2py": {
        "cmdline": [],
        "modules": [
            "http2py",
            "http2py.client",
            "http2py.decorators",
            "http2py.default_configs",
            "http2py.global_state",
            "http2py.http2py",
            "http2py.py2request",
            "http2py.testing_utils",
            "http2py.util"
        ],
        "version": "0.0.3"
    },
    "http3": {
        "cmdline": [],
        "modules": [
            "http3",
            "http3.__version__",
            "http3.api",
            "http3.auth",
            "http3.client",
            "http3.concurrency",
            "http3.config",
            "http3.decoders",
            "http3.exceptions",
            "http3.interfaces",
            "http3.models",
            "http3.multipart",
            "http3.status_codes",
            "http3.utils",
            "http3/dispatch",
            "http3/dispatch.asgi",
            "http3/dispatch.connection",
            "http3/dispatch.connection_pool",
            "http3/dispatch.http11",
            "http3/dispatch.http2",
            "http3/dispatch.threaded",
            "http3/dispatch.wsgi"
        ],
        "version": "0.6.7"
    },
    "http4store": {
        "cmdline": [],
        "modules": [
            "HTTP4Store",
            "HTTP4Store.HTTP4Store",
            "HTTP4Store.sparql_response",
            "HTTP4Store.utils"
        ],
        "version": "0.3.1"
    },
    "httpagentparser": {
        "cmdline": [],
        "modules": [
            "httpagentparser",
            "httpagentparser.more"
        ],
        "version": "1.9.0"
    },
    "httpantry": {
        "cmdline": [],
        "modules": [
            "httpantry",
            "httpantry.command_line",
            "httpantry.http_proxy_server",
            "httpantry.parse_configuration",
            "httpantry.proxy_database",
            "httpantry.requests_wrapper"
        ],
        "version": "0.0.6"
    },
    "httpapi": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "httpapiclient": {
        "cmdline": [],
        "modules": [
            "HttpApiClient",
            "HttpApiClient.base",
            "HttpApiClient.exceptions",
            "HttpApiClient.mixins",
            "HttpApiClient.request"
        ],
        "version": "0.0.3"
    },
    "httpappengine": {
        "cmdline": [],
        "modules": [
            "httpappengine",
            "httpappengine.aetest",
            "httpappengine.decorator",
            "httpappengine.engine",
            "httpappengine.engine.config",
            "httpappengine.engine.debug",
            "httpappengine.engine.driver",
            "httpappengine.engine.driver.engine_default",
            "httpappengine.engine.driver.engine_werkzeug",
            "httpappengine.engine.driver.parser_default",
            "httpappengine.engine.driver.router_default",
            "httpappengine.engine.interface",
            "httpappengine.engine.parser",
            "httpappengine.engine.router",
            "httpappengine.engine.scheduler",
            "httpappengine.engine.server",
            "httpappengine.engine.signaler",
            "httpappengine.engine.support",
            "httpappengine.engine.util",
            "httpappengine.helper",
            "httpappengine.util"
        ],
        "version": "0.3.4"
    },
    "httpasync": {
        "cmdline": [],
        "modules": [
            "httpasync",
            "httpasync.version"
        ],
        "version": "0.2.0"
    },
    "httpauth": {
        "cmdline": [],
        "modules": [
            "httpauth"
        ],
        "version": "0.3"
    },
    "httpauthproxy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "httpautotest": {
        "cmdline": [],
        "modules": [
            "HTTPAUTOTESTLibrary",
            "HTTPAUTOTESTLibrary.HTTPAUTOTESTLibrary",
            "HTTPAUTOTESTLibrary.version"
        ],
        "version": "2.0.0"
    },
    "httpaws": {
        "cmdline": [],
        "modules": [
            "httpaws",
            "httpaws.core"
        ],
        "version": "0.0.4"
    },
    "httpbase": {
        "cmdline": [],
        "modules": [
            "httpbase",
            "httpbase.client",
            "httpbase.constants",
            "httpbase.exceptions",
            "httpbase.fields",
            "httpbase.resources",
            "httpbase.routes",
            "tests",
            "tests.test_client",
            "tests.test_fields",
            "tests.test_fields.test_bool_field",
            "tests.test_fields.test_date_field",
            "tests.test_fields.test_epoch_field",
            "tests.test_fields.test_int_field",
            "tests.test_fields.test_list_field",
            "tests.test_fields.test_map_field",
            "tests.test_fields.test_resource_field",
            "tests.test_fields.test_str_field",
            "tests.test_http_codes",
            "tests.test_resources",
            "tests.test_resources._test_classes",
            "tests.test_resources.test_accessors",
            "tests.test_resources.test_resources",
            "tests.test_routes"
        ],
        "version": "0.6.1"
    },
    "httpbenchmark": {
        "cmdline": [],
        "modules": [
            "httpbenchmark",
            "httpbenchmark.benchmark",
            "httpbenchmark.fake"
        ],
        "version": "0.5"
    },
    "httpbin": {
        "cmdline": [],
        "modules": [
            "httpbin",
            "httpbin.core",
            "httpbin.filters",
            "httpbin.helpers",
            "httpbin.structures",
            "httpbin.utils"
        ],
        "version": "0.7.0"
    },
    "httpbl": {
        "cmdline": [],
        "modules": [
            "httpbl"
        ],
        "version": "1.0.1"
    },
    "httpcache": {
        "cmdline": [],
        "modules": [
            "httpcache",
            "httpcache.adapter",
            "httpcache.cache",
            "httpcache.compat",
            "httpcache.structures",
            "httpcache.utils"
        ],
        "version": "0.1.3"
    },
    "httpcachepurger": {
        "cmdline": [],
        "modules": [
            "httpcachepurger",
            "httpcachepurger.cmdline",
            "httpcachepurger.purger"
        ],
        "version": "0.2"
    },
    "httpcap": {
        "cmdline": [],
        "modules": [
            "httpcap",
            "httpcap.cleanups",
            "httpcap.config",
            "httpcap.constant",
            "httpcap.content_utils",
            "httpcap.httpparser",
            "httpcap.link_layer",
            "httpcap.live_cap",
            "httpcap.packet_parser",
            "httpcap.parse_pcap",
            "httpcap.pcap",
            "httpcap.pcap_wrapper",
            "httpcap.pcapng",
            "httpcap.printer",
            "httpcap.reader",
            "httpcap.tcp_assembly",
            "pcappy_port",
            "pcappy_port.constants",
            "pcappy_port.functions",
            "pcappy_port.types"
        ],
        "version": "0.7.9"
    },
    "httpcat": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "httpchunked": {
        "cmdline": [],
        "modules": [
            "httpchunked"
        ],
        "version": "0.1.2"
    },
    "httpcli": {
        "cmdline": [],
        "modules": [
            "httpcli",
            "httpcli.cli",
            "httpcli.client",
            "httpcli.content",
            "httpcli.core",
            "httpcli.output"
        ],
        "version": "1.3.0"
    },
    "httpclient": {
        "cmdline": [],
        "modules": [
            "httpclient",
            "httpclient.httpclient",
            "httpclient.httpcore",
            "httpclient_test",
            "httpclient_test.functionaltest",
            "httpclient_test.functionaltest.httpclient_test",
            "httpclient_test.functionaltest.server",
            "httpclient_test.unittest",
            "httpclient_test.unittest.httpclient_test",
            "httpclient_test.unittest.httpcore_test"
        ],
        "version": "0.0.2"
    },
    "httpcode": {
        "cmdline": [],
        "modules": [
            "httpcode"
        ],
        "version": "0.6"
    },
    "httpcodes": {
        "cmdline": [],
        "modules": [
            "httpcodes"
        ],
        "version": "1.0.0"
    },
    "httpcompressionserver": {
        "cmdline": [],
        "modules": [
            "httpcompressionserver"
        ],
        "version": "0.4"
    },
    "httpcore": {
        "cmdline": [],
        "modules": [
            "httpcore",
            "httpcore._bytestreams",
            "httpcore._exceptions",
            "httpcore._threadlock",
            "httpcore._types",
            "httpcore._utils",
            "httpcore/_async",
            "httpcore/_async.base",
            "httpcore/_async.connection",
            "httpcore/_async.connection_pool",
            "httpcore/_async.http",
            "httpcore/_async.http11",
            "httpcore/_async.http2",
            "httpcore/_async.http_proxy",
            "httpcore/_backends",
            "httpcore/_backends.anyio",
            "httpcore/_backends.asyncio",
            "httpcore/_backends.auto",
            "httpcore/_backends.base",
            "httpcore/_backends.curio",
            "httpcore/_backends.sync",
            "httpcore/_backends.trio",
            "httpcore/_sync",
            "httpcore/_sync.base",
            "httpcore/_sync.connection",
            "httpcore/_sync.connection_pool",
            "httpcore/_sync.http",
            "httpcore/_sync.http11",
            "httpcore/_sync.http2",
            "httpcore/_sync.http_proxy"
        ],
        "version": "0.12.0"
    },
    "httpd-echo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "httpdatetime": {
        "cmdline": [],
        "modules": [
            "httpdatetime",
            "httpdatetime.getdatetime"
        ],
        "version": "1.0.2"
    },
    "httpdbg": {
        "cmdline": [],
        "modules": [
            "httpdbg",
            "httpdbg.httpdbg",
            "httpdbg.vcrpy",
            "httpdbg.vcrpy.persister",
            "httpdbg.vcrpy.utils",
            "httpdbg.webapp",
            "httpdbg.webapp.api",
            "httpdbg.webapp.app",
            "httpdbg.webapp.preview"
        ],
        "version": "0.0.4"
    },
    "httpdebug": {
        "cmdline": [],
        "modules": [
            "httpdebug"
        ],
        "version": "30"
    },
    "httpdec": {
        "cmdline": [],
        "modules": [
            "httpdec",
            "httpdec.decode",
            "httpdec.main"
        ],
        "version": "0.0.4"
    },
    "httpdis": {
        "cmdline": [],
        "modules": [
            "httpdis",
            "httpdis.ext",
            "httpdis.ext.httpdis_json",
            "httpdis.httpdis"
        ],
        "version": "0.6.14"
    },
    "httpdns": {
        "cmdline": [],
        "modules": [
            "httpdns"
        ],
        "version": "0.1.0"
    },
    "httpdo": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "httpdrun": {
        "cmdline": [],
        "modules": [
            "httpdrun",
            "httpdrun.install_service",
            "httpdrun.uninstall_service",
            "httpdrun.win",
            "httpdrun.win.services",
            "httpdrun.yaptu"
        ],
        "version": "0.2.2"
    },
    "httpdummy": {
        "cmdline": [],
        "modules": [
            "httpdummy",
            "httpdummy.server"
        ],
        "version": "1.1.4"
    },
    "httpece": {
        "cmdline": [],
        "modules": [
            "httpece",
            "httpece.cli"
        ],
        "version": "0.1.1"
    },
    "httpeek": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpencode": {
        "cmdline": [],
        "modules": [
            "httpencode",
            "httpencode.api",
            "httpencode.bsoupfilter",
            "httpencode.etree",
            "httpencode.form",
            "httpencode.format",
            "httpencode.http",
            "httpencode.json",
            "httpencode.lxmlformat",
            "httpencode.registry",
            "httpencode.wrappers"
        ],
        "version": "0.1"
    },
    "httperfpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httperrors": {
        "cmdline": [],
        "modules": [
            "httperrors",
            "httperrors.errors"
        ],
        "version": "1.0.0"
    },
    "httpexceptor": {
        "cmdline": [],
        "modules": [
            "httpexceptor"
        ],
        "version": "1.4.0"
    },
    "httpext": {
        "cmdline": [],
        "modules": [
            "httpext"
        ],
        "version": "0.1.4"
    },
    "httpfind": {
        "cmdline": [],
        "modules": [
            "httpfind",
            "httpfind.httpfind"
        ],
        "version": "1.0.1"
    },
    "httpfingerprint": {
        "cmdline": [],
        "modules": [
            "httpfingerprint"
        ],
        "version": "0.1"
    },
    "httpforge": {
        "cmdline": [
            "httpextract",
            "httpforge",
            "httpsend"
        ],
        "modules": [
            "httpforgelib"
        ],
        "version": "11.02.01"
    },
    "httpfs": {
        "cmdline": [],
        "modules": [
            "httpfs",
            "httpfs._version",
            "httpfs.fs",
            "httpfs.opener"
        ],
        "version": "0.0.1"
    },
    "httpheader": {
        "cmdline": [],
        "modules": [
            "httpheader"
        ],
        "version": "1.1"
    },
    "httphelp": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1.post1"
    },
    "httphmacpython": {
        "cmdline": [],
        "modules": [
            "httphmacpython",
            "httphmacpython.cli"
        ],
        "version": "0.1.1"
    },
    "httphq": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "httpie": {
        "cmdline": [],
        "modules": [
            "httpie",
            "httpie.cli",
            "httpie.cli.argparser",
            "httpie.cli.argtypes",
            "httpie.cli.constants",
            "httpie.cli.definition",
            "httpie.cli.dicts",
            "httpie.cli.exceptions",
            "httpie.cli.requestitems",
            "httpie.client",
            "httpie.compat",
            "httpie.config",
            "httpie.context",
            "httpie.core",
            "httpie.downloads",
            "httpie.models",
            "httpie.output",
            "httpie.output.formatters",
            "httpie.output.formatters.colors",
            "httpie.output.formatters.headers",
            "httpie.output.formatters.json",
            "httpie.output.processing",
            "httpie.output.streams",
            "httpie.output.writer",
            "httpie.plugins",
            "httpie.plugins.base",
            "httpie.plugins.builtin",
            "httpie.plugins.manager",
            "httpie.plugins.registry",
            "httpie.sessions",
            "httpie.ssl",
            "httpie.status",
            "httpie.utils"
        ],
        "version": "2.2.0"
    },
    "httpie-adobeio": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "httpie-akamai": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "httpie-api-auth": {
        "cmdline": [],
        "modules": [
            "httpie_api_auth"
        ],
        "version": "0.3.1"
    },
    "httpie-apikey-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "httpie-asap-auth": {
        "cmdline": [],
        "modules": [
            "httpie_asap_auth"
        ],
        "version": "0.2.1"
    },
    "httpie-aws-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "httpie-aws-authv4": {
        "cmdline": [],
        "modules": [
            "httpie_aws_authv4"
        ],
        "version": "0.1.4"
    },
    "httpie-consul": {
        "cmdline": [],
        "modules": [
            "httpie_consul"
        ],
        "version": "1.0.2"
    },
    "httpie-credential-store": {
        "cmdline": [],
        "modules": [
            "httpie_credential_store",
            "httpie_credential_store._auth",
            "httpie_credential_store._keychain",
            "httpie_credential_store._plugin",
            "httpie_credential_store._store"
        ],
        "version": "2.0.0"
    },
    "httpie-dag": {
        "cmdline": [],
        "modules": [
            "httpie_dag",
            "httpie_dag.auth",
            "httpie_dag.auth_v4"
        ],
        "version": "0.1.0"
    },
    "httpie-django-auth": {
        "cmdline": [],
        "modules": [
            "httpie_django_auth"
        ],
        "version": "0.1.2"
    },
    "httpie-edgegrid": {
        "cmdline": [],
        "modules": [
            "httpie_edgegrid"
        ],
        "version": "1.0.6"
    },
    "httpie-ems-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "httpie-ems-auth-p3": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "httpie-escher-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "httpie-esni-auth": {
        "cmdline": [],
        "modules": [
            "httpie_esni_auth"
        ],
        "version": "1.0.0"
    },
    "httpie-f5-auth": {
        "cmdline": [],
        "modules": [
            "httpie_f5_auth"
        ],
        "version": "0.0.6"
    },
    "httpie-gssapi": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "httpie-hmac-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "httpie-http2": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "httpie-httpsig-auth": {
        "cmdline": [],
        "modules": [
            "httpie_httpsig_auth"
        ],
        "version": "0.1.1"
    },
    "httpie-image": {
        "cmdline": [],
        "modules": [
            "httpie_image"
        ],
        "version": "1.0.0"
    },
    "httpie-jwt-auth": {
        "cmdline": [],
        "modules": [
            "httpie_jwt_auth"
        ],
        "version": "0.4.0"
    },
    "httpie-kong-hmac": {
        "cmdline": [],
        "modules": [
            "httpie_kong_hmac"
        ],
        "version": "0.0.6"
    },
    "httpie-llnw-auth": {
        "cmdline": [],
        "modules": [
            "httpie_llnw_auth"
        ],
        "version": "1.0.1"
    },
    "httpie-media-auth": {
        "cmdline": [],
        "modules": [
            "bcesigner",
            "httpie_media_auth",
            "mediaauth"
        ],
        "version": "0.0.8"
    },
    "httpie-msgpack": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "httpie-negotiate": {
        "cmdline": [],
        "modules": [
            "httpie_negotiate"
        ],
        "version": "1.0.1"
    },
    "httpie-nifcloud-authv4": {
        "cmdline": [],
        "modules": [
            "httpie_nifcloud_authv4"
        ],
        "version": "0.1.0"
    },
    "httpie-nsof": {
        "cmdline": [
            "httpie-nsof-setup"
        ],
        "modules": [
            "httpie_nsof"
        ],
        "version": "1.6"
    },
    "httpie-ntlm": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "httpie-oauth": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "httpie-oauth2": {
        "cmdline": [],
        "modules": [
            "httpie_oauth2"
        ],
        "version": "0.1.1"
    },
    "httpie-odps-auth": {
        "cmdline": [],
        "modules": [
            "httpie_odps_auth"
        ],
        "version": "0.2.1"
    },
    "httpie-plex": {
        "cmdline": [],
        "modules": [
            "httpie_plex"
        ],
        "version": "1.0.1"
    },
    "httpie-svb-auth": {
        "cmdline": [],
        "modules": [
            "httpie_svb_auth"
        ],
        "version": "1.0.4"
    },
    "httpie-token-auth": {
        "cmdline": [],
        "modules": [
            "httpie_token_auth"
        ],
        "version": "0.1.8"
    },
    "httpie-unixsocket": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "httpie-visionect-auth": {
        "cmdline": [],
        "modules": [
            "httpie_visionect_auth"
        ],
        "version": "0.0.1"
    },
    "httpie-wsse-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "httpie-xsisip": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "httpie-zign": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "httpie-zipkin": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "httpieedgegrid": {
        "cmdline": [],
        "modules": [
            "httpieedgegrid",
            "httpieedgegrid.cli"
        ],
        "version": "0.1.1"
    },
    "httpiejwtauth": {
        "cmdline": [],
        "modules": [
            "httpiejwtauth",
            "httpiejwtauth.cli"
        ],
        "version": "0.1.1"
    },
    "httpimport": {
        "cmdline": [],
        "modules": [],
        "version": "0.7.2"
    },
    "httping": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "httpio": {
        "cmdline": [],
        "modules": [
            "httpio",
            "httpio.asyncio"
        ],
        "version": "0.3.0"
    },
    "httpkie": {
        "cmdline": [],
        "modules": [
            "httpkie"
        ],
        "version": "1.1.0"
    },
    "httpkit": {
        "cmdline": [],
        "modules": [
            "httpkit",
            "httpkit.helper",
            "httpkit.helper.cookie",
            "httpkit.helper.response",
            "httpkit.service",
            "httpkit.service.input",
            "httpkit.service.not_found",
            "httpkit.service.query",
            "httpkit.service.response"
        ],
        "version": "0.2.1"
    },
    "httpkom": {
        "cmdline": [],
        "modules": [
            "httpkom",
            "httpkom.conferences",
            "httpkom.errors",
            "httpkom.komserialization",
            "httpkom.memberships",
            "httpkom.misc",
            "httpkom.persons",
            "httpkom.sessions",
            "httpkom.stats",
            "httpkom.texts",
            "httpkom.version"
        ],
        "version": "0.17"
    },
    "httplaceholder": {
        "cmdline": [],
        "modules": [
            "httplaceholder",
            "httplaceholder.htt_placeholder_api",
            "httplaceholder.models",
            "httplaceholder.models.condition_check_result_model",
            "httplaceholder.models.request_parameters_model",
            "httplaceholder.models.request_result_model",
            "httplaceholder.models.stub_basic_authentication_model",
            "httplaceholder.models.stub_conditions_model",
            "httplaceholder.models.stub_execution_result_model",
            "httplaceholder.models.stub_model",
            "httplaceholder.models.stub_response_model",
            "httplaceholder.models.stub_response_writer_result_model",
            "httplaceholder.models.stub_url_condition_model",
            "httplaceholder.models.stub_xpath_model",
            "httplaceholder.version"
        ],
        "version": "0.5.0"
    },
    "httplib2": {
        "cmdline": [],
        "modules": [
            "httplib2",
            "httplib2.certs",
            "httplib2.iri2uri",
            "httplib2.socks",
            "httplib2.test",
            "httplib2.test.miniserver",
            "httplib2.test.smoke_test",
            "httplib2.test.test_no_socket",
            "httplib2.test.test_ssl_context",
            "tests",
            "tests.test_auth",
            "tests.test_cacerts_from_env",
            "tests.test_cache",
            "tests.test_encoding",
            "tests.test_http",
            "tests.test_https",
            "tests.test_other",
            "tests.test_proxy",
            "tests.test_uri"
        ],
        "version": "0.18.1"
    },
    "httplib2-ca-certs-locater": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "httplib2-ss": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httplib2-system-ca-certs-locater": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "httplib2cacertslocater": {
        "cmdline": [],
        "modules": [
            "httplib2cacertslocater",
            "httplib2cacertslocater.cli"
        ],
        "version": "0.1.1"
    },
    "httplib2shim": {
        "cmdline": [],
        "modules": [
            "httplib2shim",
            "httplib2shim.test",
            "httplib2shim.test.httplib2_test"
        ],
        "version": "0.0.3"
    },
    "httplibfix": {
        "cmdline": [],
        "modules": [
            "httplibfix",
            "httplibfix.patch"
        ],
        "version": "1.0"
    },
    "httplink": {
        "cmdline": [],
        "modules": [
            "httplink"
        ],
        "version": "0.1.0"
    },
    "httplog": {
        "cmdline": [],
        "modules": [
            "httplog",
            "httplog.base",
            "httplog.decorators",
            "httplog.filters",
            "httplog.middleware",
            "httplog.serializers",
            "httplog.services",
            "httplog.tasks",
            "httplog.urls",
            "httplog.views"
        ],
        "version": "1.2.0"
    },
    "httpmeter": {
        "cmdline": [],
        "modules": [
            "httpmeter",
            "httpmeter.cli",
            "httpmeter.net",
            "httpmeter.stats",
            "httpmeter.utils"
        ],
        "version": "0.1.0"
    },
    "httpmethods": {
        "cmdline": [],
        "modules": [
            "httpmethods"
        ],
        "version": "1.0.5"
    },
    "httpmultipart": {
        "cmdline": [],
        "modules": [
            "httpmultipart",
            "httpmultipart.main"
        ],
        "version": "0.2.0"
    },
    "httpnext": {
        "cmdline": [],
        "modules": [
            "httpnext"
        ],
        "version": "0.0.1"
    },
    "httpobs-alt": {
        "cmdline": [
            "httpobs-local-scan",
            "httpobs-mass-scan",
            "httpobs-scan-worker"
        ],
        "modules": [
            "httpobs",
            "httpobs.conf",
            "httpobs.database",
            "httpobs.database.celeryconfig",
            "httpobs.database.database",
            "httpobs.scanner",
            "httpobs.scanner.analyzer",
            "httpobs.scanner.analyzer.content",
            "httpobs.scanner.analyzer.decorators",
            "httpobs.scanner.analyzer.headers",
            "httpobs.scanner.analyzer.misc",
            "httpobs.scanner.analyzer.utils",
            "httpobs.scanner.celeryconfig",
            "httpobs.scanner.grader",
            "httpobs.scanner.grader.grade",
            "httpobs.scanner.local",
            "httpobs.scanner.main",
            "httpobs.scanner.retriever",
            "httpobs.scanner.retriever.retriever",
            "httpobs.scanner.tasks",
            "httpobs.scanner.utils",
            "httpobs.tests",
            "httpobs.tests.unittests",
            "httpobs.tests.unittests.test_content",
            "httpobs.tests.unittests.test_environ",
            "httpobs.tests.unittests.test_grades",
            "httpobs.tests.unittests.test_headers",
            "httpobs.tests.unittests.test_misc",
            "httpobs.tests.unittests.test_parse_http_equiv_headers",
            "httpobs.tests.unittests.test_preload",
            "httpobs.tests.unittests.test_retriever",
            "httpobs.tests.unittests.test_sanitize_headers",
            "httpobs.tests.unittests.test_valid_hostname",
            "httpobs.tests.utils",
            "httpobs.website",
            "httpobs.website.api",
            "httpobs.website.decorators",
            "httpobs.website.main",
            "httpobs.website.monitoring"
        ],
        "version": "0.9.2.post4"
    },
    "httpobs-cli": {
        "cmdline": [],
        "modules": [
            "httpobscli",
            "httpobscli.cli"
        ],
        "version": "1.0.2"
    },
    "httpolice": {
        "cmdline": [],
        "modules": [
            "httpolice",
            "httpolice.__metadata__",
            "httpolice.blackboard",
            "httpolice.citation",
            "httpolice.cli",
            "httpolice.codings",
            "httpolice.exchange",
            "httpolice.framing1",
            "httpolice.header",
            "httpolice.helpers",
            "httpolice.inputs",
            "httpolice.inputs.common",
            "httpolice.inputs.har",
            "httpolice.inputs.streams",
            "httpolice.known",
            "httpolice.message",
            "httpolice.notice",
            "httpolice.parse",
            "httpolice.reports",
            "httpolice.reports.common",
            "httpolice.reports.html",
            "httpolice.reports.text",
            "httpolice.request",
            "httpolice.response",
            "httpolice.stream",
            "httpolice.structure",
            "httpolice.syntax",
            "httpolice.syntax.common",
            "httpolice.syntax.internal",
            "httpolice.syntax.rfc2616",
            "httpolice.syntax.rfc3986",
            "httpolice.syntax.rfc4647",
            "httpolice.syntax.rfc5646",
            "httpolice.syntax.rfc5789",
            "httpolice.syntax.rfc6266",
            "httpolice.syntax.rfc6749",
            "httpolice.syntax.rfc6797",
            "httpolice.syntax.rfc6838",
            "httpolice.syntax.rfc7230",
            "httpolice.syntax.rfc7231",
            "httpolice.syntax.rfc7232",
            "httpolice.syntax.rfc7233",
            "httpolice.syntax.rfc7234",
            "httpolice.syntax.rfc7235",
            "httpolice.syntax.rfc7239",
            "httpolice.syntax.rfc7240",
            "httpolice.syntax.rfc7540",
            "httpolice.syntax.rfc7838",
            "httpolice.syntax.rfc8187",
            "httpolice.syntax.rfc8288",
            "httpolice.syntax.w3c_ldp",
            "httpolice.syntax.whatwg_fetch",
            "httpolice.util",
            "httpolice.util.data",
            "httpolice.util.ordered_enum",
            "httpolice.util.text"
        ],
        "version": "0.9.0"
    },
    "httpony": {
        "cmdline": [],
        "modules": [
            "httpony",
            "httpony.application",
            "httpony.server",
            "httpony.tests",
            "httpony.tests.test_parser",
            "httpony.tests.test_server"
        ],
        "version": "0.3"
    },
    "httpoutputstream": {
        "cmdline": [],
        "modules": [
            "httpoutputstream",
            "httpoutputstream.stream"
        ],
        "version": "1.0.0"
    },
    "httpparser": {
        "cmdline": [],
        "modules": [
            "httpparser"
        ],
        "version": "0.3.12"
    },
    "httpproblem": {
        "cmdline": [],
        "modules": [
            "httpproblem",
            "httpproblem.problem"
        ],
        "version": "0.2.0"
    },
    "httpproxy": {
        "cmdline": [],
        "modules": [
            "httpproxy",
            "httpproxy.cache",
            "httpproxy.crawler",
            "httpproxy.data",
            "httpproxy.ping",
            "httpproxy.settings"
        ],
        "version": "0.5"
    },
    "httppy": {
        "cmdline": [],
        "modules": [
            "HttpPy",
            "HttpPy.Arguments",
            "HttpPy.Exceptions",
            "HttpPy.Exceptions.KeyValDefinition",
            "HttpPy.Exceptions.RequestDefinition",
            "HttpPy.Logger",
            "HttpPy.Logger.generics",
            "HttpPy.Logger.request",
            "HttpPy.ParseRequest",
            "HttpPy.Request",
            "HttpPy.decorators",
            "HttpPy.decorators.timming"
        ],
        "version": "0.0.9"
    },
    "httprealm": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "httpreplay": {
        "cmdline": [],
        "modules": [
            "httpreplay",
            "httpreplay.cobweb",
            "httpreplay.cut",
            "httpreplay.exceptions",
            "httpreplay.main",
            "httpreplay.misc",
            "httpreplay.reader",
            "httpreplay.shoddy",
            "httpreplay.smegma",
            "httpreplay.utils"
        ],
        "version": "0.2.6"
    },
    "httprequest": {
        "cmdline": [],
        "modules": [
            "HTTPrequest"
        ],
        "version": "0.1"
    },
    "httprequests": {
        "cmdline": [],
        "modules": [
            "httprequests",
            "httprequests.drEsSign",
            "httprequests.httpFunctions",
            "httprequests.librarytester",
            "httprequests.philipsHue"
        ],
        "version": "0.3"
    },
    "httpretty": {
        "cmdline": [],
        "modules": [
            "httpretty",
            "httpretty.compat",
            "httpretty.core",
            "httpretty.errors",
            "httpretty.http",
            "httpretty.utils",
            "httpretty.version"
        ],
        "version": "1.0.2"
    },
    "httpretty-fixtures": {
        "cmdline": [],
        "modules": [
            "httpretty_fixtures",
            "httpretty_fixtures.test",
            "httpretty_fixtures.test.test"
        ],
        "version": "2.1.1"
    },
    "httpreverse": {
        "cmdline": [],
        "modules": [
            "httpreverse",
            "httpreverse.httpreverse",
            "httpreverse.util"
        ],
        "version": "0.4.0"
    },
    "httpripper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httproxy": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.0"
    },
    "httprpclib": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "httprunner": {
        "cmdline": [],
        "modules": [
            "httprunner",
            "httprunner.app",
            "httprunner.app.main",
            "httprunner.app.routers",
            "httprunner.app.routers.debug",
            "httprunner.app.routers.debugtalk",
            "httprunner.app.routers.deps",
            "httprunner.builtin",
            "httprunner.builtin.comparators",
            "httprunner.builtin.functions",
            "httprunner.cli",
            "httprunner.client",
            "httprunner.compat",
            "httprunner.exceptions",
            "httprunner.ext",
            "httprunner.ext.har2case",
            "httprunner.ext.har2case.core",
            "httprunner.ext.har2case.utils",
            "httprunner.ext.locust",
            "httprunner.ext.locust.locustfile",
            "httprunner.ext.uploader",
            "httprunner.loader",
            "httprunner.make",
            "httprunner.models",
            "httprunner.parser",
            "httprunner.response",
            "httprunner.runner",
            "httprunner.scaffold",
            "httprunner.testcase",
            "httprunner.utils"
        ],
        "version": "3.1.4"
    },
    "https": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "https-everywhere": {
        "cmdline": [],
        "modules": [
            "https_everywhere",
            "https_everywhere._chrome_preload_hsts",
            "https_everywhere._fetch",
            "https_everywhere._fixme",
            "https_everywhere._rules",
            "https_everywhere._unregex",
            "https_everywhere._util",
            "https_everywhere.adapter",
            "https_everywhere.session"
        ],
        "version": "0.2.2"
    },
    "https-everywhere-checker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "https-filesystem": {
        "cmdline": [],
        "modules": [
            "HTTPS_filesystem.sync_client",
            "HTTPS_filesystem.sync_server"
        ],
        "version": "1.1"
    },
    "https-keep-alive": {
        "cmdline": [],
        "modules": [
            "keepalive_pkg"
        ],
        "version": "0.0.1"
    },
    "https-server": {
        "cmdline": [],
        "modules": [
            "https",
            "https.server"
        ],
        "version": "1.0.1"
    },
    "httpsdate": {
        "cmdline": [
            "httpsdate.py"
        ],
        "modules": [],
        "version": "0.2.0"
    },
    "httpself": {
        "cmdline": [],
        "modules": [
            "httpself",
            "httpself.cli",
            "httpself.security",
            "httpself.server"
        ],
        "version": "1.0.0"
    },
    "httpserver": {
        "cmdline": [],
        "modules": [
            "httpserver",
            "httpserver.httpserver",
            "tests",
            "tests.test_httpserver",
            "tests.test_selenium"
        ],
        "version": "1.1.0"
    },
    "httpserver-mock": {
        "cmdline": [],
        "modules": [
            "HTTPserver_mock"
        ],
        "version": "2"
    },
    "httpshare": {
        "cmdline": [],
        "modules": [
            "httpshare",
            "httpshare.app",
            "httpshare.compat",
            "httpshare.compat.urllib",
            "httpshare.compat.urllib.parse",
            "httpshare.main",
            "httpshare.version"
        ],
        "version": "1.0.8"
    },
    "httpshell": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpsig": {
        "cmdline": [],
        "modules": [
            "httpsig",
            "httpsig.requests_auth",
            "httpsig.sign",
            "httpsig.tests",
            "httpsig.tests.test_signature",
            "httpsig.tests.test_utils",
            "httpsig.tests.test_verify",
            "httpsig.utils",
            "httpsig.verify"
        ],
        "version": "1.3.0"
    },
    "httpsig-cffi": {
        "cmdline": [],
        "modules": [
            "httpsig_cffi",
            "httpsig_cffi._version",
            "httpsig_cffi.requests_auth",
            "httpsig_cffi.sign",
            "httpsig_cffi.tests",
            "httpsig_cffi.tests.test_signature",
            "httpsig_cffi.tests.test_utils",
            "httpsig_cffi.tests.test_verify",
            "httpsig_cffi.utils",
            "httpsig_cffi.verify"
        ],
        "version": "15.0.0"
    },
    "httpsig-pure-hmac": {
        "cmdline": [],
        "modules": [
            "httpsig_pure_hmac",
            "httpsig_pure_hmac._version",
            "httpsig_pure_hmac.requests_auth",
            "httpsig_pure_hmac.sign",
            "httpsig_pure_hmac.tests",
            "httpsig_pure_hmac.tests.test_signature",
            "httpsig_pure_hmac.tests.test_utils",
            "httpsig_pure_hmac.tests.test_verify",
            "httpsig_pure_hmac.utils",
            "httpsig_pure_hmac.verify"
        ],
        "version": "1.1.2"
    },
    "httpsigcffi": {
        "cmdline": [],
        "modules": [
            "httpsigcffi",
            "httpsigcffi.cli"
        ],
        "version": "0.1.1"
    },
    "httpsproxy-urllib2": {
        "cmdline": [],
        "modules": [
            "httplib",
            "urllib2"
        ],
        "version": "1.0"
    },
    "httpsqs": {
        "cmdline": [],
        "modules": [
            "httpsqs"
        ],
        "version": "1.4"
    },
    "httpsrv": {
        "cmdline": [],
        "modules": [
            "httpsrv",
            "httpsrv.httpsrv"
        ],
        "version": "0.1.6"
    },
    "httpsrvvcr": {
        "cmdline": [],
        "modules": [
            "httpsrvvcr",
            "httpsrvvcr.player",
            "httpsrvvcr.recorder"
        ],
        "version": "0.1.9"
    },
    "httpsserver": {
        "cmdline": [],
        "modules": [
            "HTTPSServer",
            "HTTPSServer.HTTPSServer"
        ],
        "version": "0.1"
    },
    "httpstan": {
        "cmdline": [],
        "modules": [
            "httpstan",
            "httpstan.app",
            "httpstan.build_ext",
            "httpstan.cache",
            "httpstan.callbacks_writer_pb2",
            "httpstan.compile",
            "httpstan.config",
            "httpstan.fits",
            "httpstan.models",
            "httpstan.openapi",
            "httpstan.routes",
            "httpstan.schemas",
            "httpstan.services",
            "httpstan.services.arguments",
            "httpstan.services_stub",
            "httpstan.utils",
            "httpstan.views"
        ],
        "version": "2.2.0"
    },
    "httpstat": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.1"
    },
    "httpstatus": {
        "cmdline": [],
        "modules": [
            "httpstatus",
            "httpstatus.codes"
        ],
        "version": "1.0.4"
    },
    "httpstatus35": {
        "cmdline": [],
        "modules": [
            "httpstatus"
        ],
        "version": "0.0.1"
    },
    "httpstatuscodes": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "httpstatuspuppet": {
        "cmdline": [],
        "modules": [
            "httpstatuspuppet",
            "httpstatuspuppet.common",
            "httpstatuspuppet.entrypoint",
            "httpstatuspuppet.helpers",
            "httpstatuspuppet.server",
            "httpstatuspuppet.tests",
            "httpstatuspuppet.tests.test_server"
        ],
        "version": "1.0.1"
    },
    "httpstream": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpsuite": {
        "cmdline": [],
        "modules": [
            "httpsuite",
            "httpsuite.RFC",
            "httpsuite.core",
            "httpsuite.helpers",
            "httpsuite.info",
            "tests",
            "tests.interfaces",
            "tests.interfaces.test_headers",
            "tests.interfaces.test_interfaces",
            "tests.interfaces.test_item",
            "tests.test_message",
            "tests.test_request",
            "tests.test_response"
        ],
        "version": "1.0.1"
    },
    "httpsweet": {
        "cmdline": [
            "httpsweet"
        ],
        "modules": [
            "httpsweetlib",
            "httpsweetlib.constants",
            "httpsweetlib.encoder",
            "httpsweetlib.handler",
            "httpsweetlib.parameters",
            "httpsweetlib.request",
            "httpsweetlib.server",
            "httpsweetlib.utils"
        ],
        "version": "0.0.1"
    },
    "httpsx": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "httptest": {
        "cmdline": [],
        "modules": [
            "httptest",
            "httptest.cli",
            "httptest.httptest",
            "httptest.version",
            "tests",
            "tests.httptest"
        ],
        "version": "0.0.15"
    },
    "httptester": {
        "cmdline": [],
        "modules": [
            "HttpTester",
            "HttpTester.HttpTester"
        ],
        "version": "0.0.2"
    },
    "httptesting": {
        "cmdline": [],
        "modules": [
            "httptesting",
            "httptesting.case",
            "httptesting.case.conftest",
            "httptesting.case.extfunc",
            "httptesting.case.test_load_case",
            "httptesting.library",
            "httptesting.library.Multipart",
            "httptesting.library.assert_case",
            "httptesting.library.case",
            "httptesting.library.case_queue",
            "httptesting.library.emailstmp",
            "httptesting.library.falsework",
            "httptesting.library.func",
            "httptesting.library.gl",
            "httptesting.library.har",
            "httptesting.library.http",
            "httptesting.library.parse",
            "httptesting.library.scripts",
            "httptesting.main"
        ],
        "version": "1.2.22"
    },
    "httptestkit": {
        "cmdline": [],
        "modules": [
            "httptestkit",
            "httptestkit.cli",
            "httptestkit.inspector",
            "httptestkit.plugins",
            "httptestkit.plugins.dnskit",
            "httptestkit.plugins.headers",
            "httptestkit.plugins.ipinfo",
            "httptestkit.plugins.master",
            "tests"
        ],
        "version": "0.1.3"
    },
    "httptestserver": {
        "cmdline": [],
        "modules": [
            "httptestserver",
            "httptestserver._compat",
            "httptestserver.http_server",
            "httptestserver.smtp_server",
            "httptestserver.testing"
        ],
        "version": "0.3.1"
    },
    "httptools": {
        "cmdline": [],
        "modules": [
            "httptools",
            "httptools._version",
            "httptools.parser",
            "httptools.parser.errors"
        ],
        "version": "0.1.1"
    },
    "httpuploader": {
        "cmdline": [],
        "modules": [
            "httpuploader"
        ],
        "version": "1.0.1"
    },
    "httputil": {
        "cmdline": [],
        "modules": [
            "httputil",
            "httputil.httputil",
            "httputil.request_engines",
            "httputil.request_engines.async",
            "httputil.request_engines.base",
            "httputil.request_engines.errors",
            "httputil.request_engines.sync"
        ],
        "version": "0.6.7"
    },
    "httputils": {
        "cmdline": [],
        "modules": [
            "httputils",
            "httputils.httputils"
        ],
        "version": "0.1b"
    },
    "httpw": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpwatcher": {
        "cmdline": [],
        "modules": [
            "httpwatcher",
            "httpwatcher.cmdline",
            "httpwatcher.errors",
            "httpwatcher.filesystem",
            "httpwatcher.server"
        ],
        "version": "0.5.2"
    },
    "httpx": {
        "cmdline": [],
        "modules": [
            "httpx",
            "httpx.__version__",
            "httpx._api",
            "httpx._auth",
            "httpx._client",
            "httpx._config",
            "httpx._content",
            "httpx._decoders",
            "httpx._exceptions",
            "httpx._models",
            "httpx._multipart",
            "httpx._status_codes",
            "httpx._types",
            "httpx._utils",
            "httpx/_transports",
            "httpx/_transports.asgi",
            "httpx/_transports.wsgi"
        ],
        "version": "0.16.1"
    },
    "httpx-auth": {
        "cmdline": [],
        "modules": [
            "httpx_auth",
            "httpx_auth.authentication",
            "httpx_auth.aws",
            "httpx_auth.errors",
            "httpx_auth.oauth2_authentication_responses_server",
            "httpx_auth.oauth2_tokens",
            "httpx_auth.testing",
            "httpx_auth.version"
        ],
        "version": "0.7.0"
    },
    "httpx-cli": {
        "cmdline": [],
        "modules": [
            "httpx_cli",
            "httpx_cli._cli",
            "httpx_cli._help",
            "httpx_cli._utils"
        ],
        "version": "0.1.2"
    },
    "httpx-ntlm": {
        "cmdline": [],
        "modules": [
            "httpx_ntlm",
            "httpx_ntlm.httpx_ntlm"
        ],
        "version": "0.0.9"
    },
    "httpx-oauth": {
        "cmdline": [],
        "modules": [
            "httpx_oauth",
            "httpx_oauth.clients",
            "httpx_oauth.clients.facebook",
            "httpx_oauth.clients.github",
            "httpx_oauth.clients.google",
            "httpx_oauth.clients.linkedin",
            "httpx_oauth.clients.microsoft",
            "httpx_oauth.errors",
            "httpx_oauth.integrations",
            "httpx_oauth.integrations.fastapi",
            "httpx_oauth.oauth2"
        ],
        "version": "0.3.3"
    },
    "httpx-socks": {
        "cmdline": [],
        "modules": [
            "httpx_socks",
            "httpx_socks._async_transport",
            "httpx_socks._sync_transport"
        ],
        "version": "0.3.0"
    },
    "httpxo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpython": {
        "cmdline": [],
        "modules": [
            "httpython",
            "httpython.documents",
            "httpython.requests",
            "httpython.servers",
            "httpython.structures"
        ],
        "version": "0.2.7"
    },
    "httpz": {
        "cmdline": [],
        "modules": [
            "httpz",
            "httpz.http_status_code",
            "httpz.http_status_code_category_enum",
            "httpz.http_status_code_enum",
            "httpz.http_status_codes",
            "httpz.status_codes",
            "tests",
            "tests.test_http_status_codes"
        ],
        "version": "1.0"
    },
    "httq": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "httrack-py": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.1"
    },
    "httrcss-nester": {
        "cmdline": [],
        "modules": [
            "httrcss_nester"
        ],
        "version": "1.3.0"
    },
    "httreplay": {
        "cmdline": [],
        "modules": [
            "httreplay",
            "httreplay.context",
            "httreplay.patch",
            "httreplay.recording",
            "httreplay.replay_settings",
            "httreplay.stubs",
            "httreplay.stubs.base",
            "httreplay.stubs.requests_stubs",
            "httreplay.stubs.urllib3_stubs",
            "httreplay.utils"
        ],
        "version": "0.2.0"
    },
    "httsleep": {
        "cmdline": [],
        "modules": [
            "httsleep",
            "httsleep._compat",
            "httsleep.exceptions",
            "httsleep.main"
        ],
        "version": "0.3.1"
    },
    "htttea": {
        "cmdline": [],
        "modules": [
            "htttea"
        ],
        "version": "0.1.0"
    },
    "httxlib": {
        "cmdline": [],
        "modules": [
            "httxlib",
            "httxlib.httxauth",
            "httxlib.httxauthcache",
            "httxlib.httxbase",
            "httxlib.httxcertificates",
            "httxlib.httxcompression",
            "httxlib.httxcompressionset",
            "httxlib.httxconnection",
            "httxlib.httxcookiejar",
            "httxlib.httxerror",
            "httxlib.httxmanager",
            "httxlib.httxnetlocation",
            "httxlib.httxobject",
            "httxlib.httxoptions",
            "httxlib.httxpassmanager",
            "httxlib.httxrequest",
            "httxlib.httxresponse",
            "httxlib.httxs",
            "httxlib.httxutil",
            "httxlib.version"
        ],
        "version": "1.0.4"
    },
    "htu21df": {
        "cmdline": [],
        "modules": [
            "htu21",
            "htu21.htu21",
            "htu21.rawi2c",
            "htu21.retry"
        ],
        "version": "0.1.4"
    },
    "htun-example-pkg": {
        "cmdline": [],
        "modules": [
            "htun_pkg"
        ],
        "version": "0.0.1"
    },
    "htuneml": {
        "cmdline": [],
        "modules": [
            "htuneml",
            "htuneml.hmonitor"
        ],
        "version": "0.0.6"
    },
    "htv": {
        "cmdline": [],
        "modules": [
            "htvalidator",
            "htvalidator.config",
            "htvalidator.config.auth_config",
            "htvalidator.config.keygen",
            "htvalidator.install",
            "htvalidator.main",
            "htvalidator.os_utility",
            "htvalidator.os_utility.crongen",
            "htvalidator.os_utility.miscellanea",
            "htvalidator.os_utility.os_check",
            "htvalidator.os_utility.os_parser",
            "htvalidator.os_utility.os_verify",
            "htvalidator.shadow",
            "htvalidator.validate"
        ],
        "version": "0.1.9"
    },
    "htwkimn-theme": {
        "cmdline": [],
        "modules": [
            "htwkimn",
            "htwkimn.theme",
            "htwkimn.theme.tests"
        ],
        "version": "1.0.10"
    },
    "htwrapper": {
        "cmdline": [],
        "modules": [
            "htwrapper"
        ],
        "version": "1.0.2"
    },
    "htzguoguo-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "hu": {
        "cmdline": [],
        "modules": [
            "hu",
            "hu._version",
            "hu.dotted_dict",
            "hu.object_dict"
        ],
        "version": "0.9.0"
    },
    "hu-app": {
        "cmdline": [],
        "modules": [
            "Hu_App",
            "Hu_App.create_topic",
            "Hu_App.delete_topic"
        ],
        "version": "1.3"
    },
    "hu-bert": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hu-bert2": {
        "cmdline": [],
        "modules": [
            "hu_bert2",
            "hu_bert2.today"
        ],
        "version": "0.0.2"
    },
    "hua": {
        "cmdline": [],
        "modules": [
            "tphp",
            "tphp.ddd",
            "tphp.xxx"
        ],
        "version": "0.0.1"
    },
    "hua-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "hua-tool": {
        "cmdline": [],
        "modules": [
            "huatool",
            "huatool.container",
            "huatool.detector",
            "huatool.parser",
            "huatool.proxy"
        ],
        "version": "0.1.7"
    },
    "huaban-exporter": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "huaiyu-distributions": {
        "cmdline": [],
        "modules": [
            "huaiyu_distributions",
            "huaiyu_distributions.Binomialdistribution",
            "huaiyu_distributions.Gaussiandistribution",
            "huaiyu_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "huaji-nester": {
        "cmdline": [],
        "modules": [
            "huaji_nester"
        ],
        "version": "1.3.0"
    },
    "huajiweb": {
        "cmdline": [],
        "modules": [
            "huajiweb",
            "huajiweb.ConfigOption",
            "huajiweb.DeltaGenerator",
            "huajiweb.ForwardMsgCache",
            "huajiweb.MediaFileManager",
            "huajiweb.Report",
            "huajiweb.ReportQueue",
            "huajiweb.ReportSession",
            "huajiweb.ReportThread",
            "huajiweb.ScriptRequestQueue",
            "huajiweb.ScriptRunner",
            "huajiweb.UploadedFileManager",
            "huajiweb.bootstrap",
            "huajiweb.caching",
            "huajiweb.case_converters",
            "huajiweb.cli",
            "huajiweb.code_util",
            "huajiweb.config",
            "huajiweb.credentials",
            "huajiweb.cursor",
            "huajiweb.development",
            "huajiweb.elements",
            "huajiweb.elements.altair",
            "huajiweb.elements.bokeh_chart",
            "huajiweb.elements.data_frame_proto",
            "huajiweb.elements.deck_gl",
            "huajiweb.elements.deck_gl_json_chart",
            "huajiweb.elements.doc_string",
            "huajiweb.elements.exception_proto",
            "huajiweb.elements.graphviz_chart",
            "huajiweb.elements.image_proto",
            "huajiweb.elements.lib",
            "huajiweb.elements.lib.dicttools",
            "huajiweb.elements.map",
            "huajiweb.elements.media_proto",
            "huajiweb.elements.plotly_chart",
            "huajiweb.elements.pyplot",
            "huajiweb.elements.vega_lite",
            "huajiweb.env_util",
            "huajiweb.error_util",
            "huajiweb.errors",
            "huajiweb.file_util",
            "huajiweb.folder_black_list",
            "huajiweb.hashing",
            "huajiweb.hello",
            "huajiweb.hello.demos",
            "huajiweb.hello.hello",
            "huajiweb.js_number",
            "huajiweb.logger",
            "huajiweb.magic",
            "huajiweb.metrics",
            "huajiweb.net_util",
            "huajiweb.policy",
            "huajiweb.proto",
            "huajiweb.proto.Alert_pb2",
            "huajiweb.proto.Audio_pb2",
            "huajiweb.proto.BackMsg_pb2",
            "huajiweb.proto.Balloons_pb2",
            "huajiweb.proto.BlockPath_pb2",
            "huajiweb.proto.BokehChart_pb2",
            "huajiweb.proto.Button_pb2",
            "huajiweb.proto.Chart_pb2",
            "huajiweb.proto.Checkbox_pb2",
            "huajiweb.proto.DataFrame_pb2",
            "huajiweb.proto.DataTransform_pb2",
            "huajiweb.proto.DateInput_pb2",
            "huajiweb.proto.DeckGlChart_pb2",
            "huajiweb.proto.DeckGlJsonChart_pb2",
            "huajiweb.proto.Delta_pb2",
            "huajiweb.proto.DocString_pb2",
            "huajiweb.proto.Element_pb2",
            "huajiweb.proto.Empty_pb2",
            "huajiweb.proto.Exception_pb2",
            "huajiweb.proto.FileUploader_pb2",
            "huajiweb.proto.ForwardMsg_pb2",
            "huajiweb.proto.GraphVizChart_pb2",
            "huajiweb.proto.Image_pb2",
            "huajiweb.proto.Initialize_pb2",
            "huajiweb.proto.Json_pb2",
            "huajiweb.proto.Markdown_pb2",
            "huajiweb.proto.MultiSelect_pb2",
            "huajiweb.proto.NamedDataSet_pb2",
            "huajiweb.proto.NewReport_pb2",
            "huajiweb.proto.NumberInput_pb2",
            "huajiweb.proto.PlotlyChart_pb2",
            "huajiweb.proto.Progress_pb2",
            "huajiweb.proto.Radio_pb2",
            "huajiweb.proto.Selectbox_pb2",
            "huajiweb.proto.SessionEvent_pb2",
            "huajiweb.proto.SessionState_pb2",
            "huajiweb.proto.Slider_pb2",
            "huajiweb.proto.StaticManifest_pb2",
            "huajiweb.proto.TextArea_pb2",
            "huajiweb.proto.TextInput_pb2",
            "huajiweb.proto.Text_pb2",
            "huajiweb.proto.TimeInput_pb2",
            "huajiweb.proto.VegaLiteChart_pb2",
            "huajiweb.proto.Video_pb2",
            "huajiweb.proto.Widget_pb2",
            "huajiweb.server",
            "huajiweb.server.Server",
            "huajiweb.server.UploadFileRequestHandler",
            "huajiweb.server.routes",
            "huajiweb.server.server_util",
            "huajiweb.source_util",
            "huajiweb.storage",
            "huajiweb.storage.AbstractStorage",
            "huajiweb.storage.FileStorage",
            "huajiweb.storage.S3Storage",
            "huajiweb.string_util",
            "huajiweb.temporary_directory",
            "huajiweb.type_util",
            "huajiweb.url_util",
            "huajiweb.util",
            "huajiweb.version",
            "huajiweb.watcher",
            "huajiweb.watcher.EventBasedFileWatcher",
            "huajiweb.watcher.LocalSourcesWatcher",
            "huajiweb.watcher.PollingFileWatcher",
            "huajiweb.watcher.util",
            "huajiweb.widgets"
        ],
        "version": "0.60"
    },
    "hualang": {
        "cmdline": [],
        "modules": [
            "hualang"
        ],
        "version": "2020.4.25.1618"
    },
    "huang": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "huanghama": {
        "cmdline": [],
        "modules": [
            "huanghama"
        ],
        "version": "1.0.00"
    },
    "huanghe-test": {
        "cmdline": [],
        "modules": [
            "example_pkg",
            "example_pkg.test1",
            "example_pkg.test2"
        ],
        "version": "0.0.3"
    },
    "huanglinflask": {
        "cmdline": [],
        "modules": [
            "huanglinflask",
            "huanglinflask.config",
            "huanglinflask.login",
            "huanglinflask.p"
        ],
        "version": "1.0.1"
    },
    "huanying": {
        "cmdline": [],
        "modules": [
            "__init__",
            "game_engine32",
            "game_sprites32",
            "main"
        ],
        "version": "1.0"
    },
    "huanzinester": {
        "cmdline": [],
        "modules": [
            "huanzinester"
        ],
        "version": "1.4.0"
    },
    "huasampleproject": {
        "cmdline": [],
        "modules": [
            "sample"
        ],
        "version": "1.3.1"
    },
    "huasca": {
        "cmdline": [],
        "modules": [
            "huasca",
            "huasca.cellar",
            "huasca.classify",
            "huasca.classify.demographics",
            "huasca.classify.generic_classifier",
            "huasca.detect",
            "huasca.detect.faces",
            "huasca.detect.objects",
            "huasca.detect.objects.coco",
            "huasca.detect.objects.yolo3",
            "huasca.detect.objects.yolo3.model",
            "huasca.detect.objects.yolo3.utils",
            "huasca.object_tracking",
            "huasca.representation",
            "huasca.root",
            "huasca.root.keras",
            "huasca.root.mobilenet"
        ],
        "version": "0.2.1"
    },
    "huatools": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "huatule": {
        "cmdline": [],
        "modules": [
            "huatule"
        ],
        "version": "0.1.2"
    },
    "huaula": {
        "cmdline": [],
        "modules": [
            "huaula",
            "huaula.dunder_main",
            "huaula.github",
            "huaula.github_import",
            "huaula.meu_xml"
        ],
        "version": "0.2"
    },
    "huaula-lsilva": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "huawei": {
        "cmdline": [],
        "modules": [
            "car",
            "car.code1",
            "car.code2"
        ],
        "version": "7.7.7"
    },
    "huawei-3g": {
        "cmdline": [],
        "modules": [
            "huawei_3g",
            "huawei_3g.datastructures",
            "huawei_3g.huawei_e303",
            "huawei_3g.modem",
            "huawei_3g.test_modem"
        ],
        "version": "0.1.0"
    },
    "huawei-api-sdk": {
        "cmdline": [],
        "modules": [
            "huawei_api_sdk",
            "huawei_api_sdk.ASYHWSClient",
            "huawei_api_sdk.HWSClient",
            "huawei_api_sdk.signature",
            "huawei_api_sdk.signature.signer"
        ],
        "version": "1.0.3"
    },
    "huawei-b593-status": {
        "cmdline": [],
        "modules": [
            "huawei_b593_status"
        ],
        "version": "0.0.2"
    },
    "huawei-e3-e5": {
        "cmdline": [],
        "modules": [
            "huawei_e3_e5",
            "huawei_e3_e5.datastructures",
            "huawei_e3_e5.huawei_db",
            "huawei_e3_e5.huawei_exxxx",
            "huawei_e3_e5.modem"
        ],
        "version": "0.1.5"
    },
    "huawei-hg659": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "huawei-lte-api": {
        "cmdline": [],
        "modules": [
            "huawei_lte_api",
            "huawei_lte_api.ApiGroup",
            "huawei_lte_api.AuthorizedConnection",
            "huawei_lte_api.Client",
            "huawei_lte_api.Connection",
            "huawei_lte_api.api",
            "huawei_lte_api.api.Bluetooth",
            "huawei_lte_api.api.Cradle",
            "huawei_lte_api.api.Cwmp",
            "huawei_lte_api.api.DDns",
            "huawei_lte_api.api.Device",
            "huawei_lte_api.api.Dhcp",
            "huawei_lte_api.api.Diagnosis",
            "huawei_lte_api.api.DialUp",
            "huawei_lte_api.api.FileManager",
            "huawei_lte_api.api.Global",
            "huawei_lte_api.api.Host",
            "huawei_lte_api.api.Lan",
            "huawei_lte_api.api.Language",
            "huawei_lte_api.api.Led",
            "huawei_lte_api.api.Log",
            "huawei_lte_api.api.MLog",
            "huawei_lte_api.api.Monitoring",
            "huawei_lte_api.api.Net",
            "huawei_lte_api.api.Ntwk",
            "huawei_lte_api.api.OnlineUpdate",
            "huawei_lte_api.api.Ota",
            "huawei_lte_api.api.Pb",
            "huawei_lte_api.api.Pin",
            "huawei_lte_api.api.Redirection",
            "huawei_lte_api.api.SNtp",
            "huawei_lte_api.api.SdCard",
            "huawei_lte_api.api.Security",
            "huawei_lte_api.api.Sms",
            "huawei_lte_api.api.Statistic",
            "huawei_lte_api.api.Syslog",
            "huawei_lte_api.api.Time",
            "huawei_lte_api.api.TimeRule",
            "huawei_lte_api.api.UsbPrinter",
            "huawei_lte_api.api.UsbStorage",
            "huawei_lte_api.api.User",
            "huawei_lte_api.api.VSim",
            "huawei_lte_api.api.Voice",
            "huawei_lte_api.api.Vpn",
            "huawei_lte_api.api.WLan",
            "huawei_lte_api.api.WebServer",
            "huawei_lte_api.config",
            "huawei_lte_api.config.Device",
            "huawei_lte_api.config.DeviceInformation",
            "huawei_lte_api.config.DialUp",
            "huawei_lte_api.config.FastBoot",
            "huawei_lte_api.config.Firewall",
            "huawei_lte_api.config.Global",
            "huawei_lte_api.config.IPv6",
            "huawei_lte_api.config.Lan",
            "huawei_lte_api.config.Network",
            "huawei_lte_api.config.Ota",
            "huawei_lte_api.config.Pb",
            "huawei_lte_api.config.PcAssistant",
            "huawei_lte_api.config.Pincode",
            "huawei_lte_api.config.Sms",
            "huawei_lte_api.config.Sntp",
            "huawei_lte_api.config.Statistic",
            "huawei_lte_api.config.Stk",
            "huawei_lte_api.config.UPnp",
            "huawei_lte_api.config.Update",
            "huawei_lte_api.config.Ussd",
            "huawei_lte_api.config.Voice",
            "huawei_lte_api.config.WebSd",
            "huawei_lte_api.config.WebUICfg",
            "huawei_lte_api.config.Wifi",
            "huawei_lte_api.enums",
            "huawei_lte_api.enums.client",
            "huawei_lte_api.enums.cradle",
            "huawei_lte_api.enums.device",
            "huawei_lte_api.enums.sms",
            "huawei_lte_api.enums.user",
            "huawei_lte_api.enums.wlan",
            "huawei_lte_api.exceptions",
            "huawei_lte_api.usermanual",
            "huawei_lte_api.usermanual.PublicSysResources"
        ],
        "version": "1.4.14"
    },
    "huawei-modem-api-client": {
        "cmdline": [],
        "modules": [
            "huaweisms",
            "huaweisms.api",
            "huaweisms.api.common",
            "huaweisms.api.config",
            "huaweisms.api.device",
            "huaweisms.api.dialup",
            "huaweisms.api.monitoring",
            "huaweisms.api.sms",
            "huaweisms.api.user",
            "huaweisms.api.ussd",
            "huaweisms.api.webserver",
            "huaweisms.api.wlan",
            "huaweisms.xml",
            "huaweisms.xml.util"
        ],
        "version": "1.0.10"
    },
    "huawei-modem-py-api-client-through-proxy": {
        "cmdline": [],
        "modules": [
            "huaweisms",
            "huaweisms.api",
            "huaweisms.api.common",
            "huaweisms.api.config",
            "huaweisms.api.device",
            "huaweisms.api.dialup",
            "huaweisms.api.monitoring",
            "huaweisms.api.sms",
            "huaweisms.api.user",
            "huaweisms.api.ussd",
            "huaweisms.api.webserver",
            "huaweisms.api.wlan",
            "huaweisms.xml",
            "huaweisms.xml.util"
        ],
        "version": "0.0.8"
    },
    "huawei-obs": {
        "cmdline": [],
        "modules": [
            "obs",
            "obs.auth",
            "obs.bucket",
            "obs.bulktasks",
            "obs.cache",
            "obs.client",
            "obs.const",
            "obs.convertor",
            "obs.extension",
            "obs.http2",
            "obs.ilog",
            "obs.loadtoken",
            "obs.locks",
            "obs.model",
            "obs.progress",
            "obs.searchmethod",
            "obs.transfer",
            "obs.util"
        ],
        "version": "0.0.1"
    },
    "huawei-solar": {
        "cmdline": [],
        "modules": [
            "huawei_solar",
            "huawei_solar.huawei_solar"
        ],
        "version": "0.0.11"
    },
    "huaweicloud-python-sdk-core": {
        "cmdline": [],
        "modules": [
            "huaweipythonsdkcore",
            "huaweipythonsdkcore.auth",
            "huaweipythonsdkcore.auth.aksk_authenticator",
            "huaweipythonsdkcore.auth.authenticator",
            "huaweipythonsdkcore.auth.digester",
            "huaweipythonsdkcore.auth.factory",
            "huaweipythonsdkcore.auth.pwd_authenticator",
            "huaweipythonsdkcore.auth.utils",
            "huaweipythonsdkcore.base_client",
            "huaweipythonsdkcore.client",
            "huaweipythonsdkcore.credential",
            "huaweipythonsdkcore.endpoint_resolver",
            "huaweipythonsdkcore.exception",
            "huaweipythonsdkcore.request",
            "huaweipythonsdkcore.urllib3_handler",
            "huaweipythonsdkcore.utils",
            "tests",
            "tests.functional",
            "tests.functional.test_aksk_credential",
            "tests.functional.test_pwd_credential",
            "tests.functional.utils",
            "tests.unit",
            "tests.unit.test_utils"
        ],
        "version": "0.0.3"
    },
    "huaweicloud-python-sdk-dis": {
        "cmdline": [],
        "modules": [
            "dis_sdk_python",
            "dis_sdk_python.com",
            "dis_sdk_python.com.huaweicloud",
            "dis_sdk_python.com.huaweicloud.dis",
            "dis_sdk_python.com.huaweicloud.dis.sdk",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.client",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.client.disclient",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models.DumpTask",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models.base_model",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models.disauth",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models.disexception",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models.disrequest",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models.log",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models.model_python2",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.models.model_python3",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.proto",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.proto.record_pb2",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disAppresonse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disConsumeresponse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disGetresponse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disMonitorresponse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disStreamresponse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disadminresponse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.discheckpointresponse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disreadDISConfig",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disrecordresponse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.response.disresponse",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.utils",
            "dis_sdk_python.com.huaweicloud.dis.sdk.python.utils.util"
        ],
        "version": "2.0.4"
    },
    "huaweicloud-sdk-python": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.26"
    },
    "huaweicloud-sdk-python-modelarts-dataset": {
        "cmdline": [],
        "modules": [
            "modelarts",
            "modelarts.field_name",
            "modelarts.file_util",
            "modelarts.manifest",
            "modelarts.test",
            "modelarts.test.test_getAnnotations",
            "modelarts.test.test_manifest_audio_classification_get_sample_list",
            "modelarts.test.test_manifest_audio_content_get_sample_list",
            "modelarts.test.test_manifest_carbon_get_sample_list",
            "modelarts.test.test_manifest_detection",
            "modelarts.test.test_manifest_detection_get_sample_list",
            "modelarts.test.test_manifest_image_classification",
            "modelarts.test.test_manifest_image_classification_detection_get_sample_list",
            "modelarts.test.test_manifest_image_classification_from_modelarts",
            "modelarts.test.test_manifest_image_classification_get_sample_list",
            "modelarts.test.test_manifest_text_classification_get_sample_list",
            "modelarts.test.test_manifest_text_entity_get_sample_list",
            "modelarts.test.test_manifest_write_audio_content_overwrite",
            "modelarts.test.test_manifest_write_detection",
            "modelarts.test.test_manifest_write_image_classification_append",
            "modelarts.test.test_manifest_write_image_classification_inference",
            "modelarts.test.test_manifest_write_image_classification_inference_result",
            "modelarts.test.test_manifest_write_image_classification_overwrite",
            "modelarts.test.test_manifest_write_text_entity_overwrite"
        ],
        "version": "0.1.4"
    },
    "huaweicloudsdkapig": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkapig",
            "huaweicloudsdkapig.v2",
            "huaweicloudsdkapig.v2.apig_async_client",
            "huaweicloudsdkapig.v2.apig_client",
            "huaweicloudsdkapig.v2.model",
            "huaweicloudsdkapig.v2.model.api_backend_vpc_req",
            "huaweicloudsdkapig.v2.model.api_base_info",
            "huaweicloudsdkapig.v2.model.api_common",
            "huaweicloudsdkapig.v2.model.api_condition_base",
            "huaweicloudsdkapig.v2.model.api_create",
            "huaweicloudsdkapig.v2.model.api_create_base",
            "huaweicloudsdkapig.v2.model.api_func",
            "huaweicloudsdkapig.v2.model.api_func_create",
            "huaweicloudsdkapig.v2.model.api_group_detail_resp",
            "huaweicloudsdkapig.v2.model.api_group_req",
            "huaweicloudsdkapig.v2.model.api_info_per_page",
            "huaweicloudsdkapig.v2.model.api_mock",
            "huaweicloudsdkapig.v2.model.api_mock_create",
            "huaweicloudsdkapig.v2.model.api_policy_function_base",
            "huaweicloudsdkapig.v2.model.api_policy_function_create",
            "huaweicloudsdkapig.v2.model.api_policy_function_resp",
            "huaweicloudsdkapig.v2.model.api_policy_http_base",
            "huaweicloudsdkapig.v2.model.api_policy_http_create",
            "huaweicloudsdkapig.v2.model.api_policy_http_resp",
            "huaweicloudsdkapig.v2.model.api_policy_mock_base",
            "huaweicloudsdkapig.v2.model.api_policy_mock_create",
            "huaweicloudsdkapig.v2.model.api_policy_mock_resp",
            "huaweicloudsdkapig.v2.model.api_policy_req_base",
            "huaweicloudsdkapig.v2.model.api_policy_resp_base",
            "huaweicloudsdkapig.v2.model.api_publish_req",
            "huaweicloudsdkapig.v2.model.api_resp_base_info",
            "huaweicloudsdkapig.v2.model.app_auth_binded_api_resp",
            "huaweicloudsdkapig.v2.model.app_auth_req",
            "huaweicloudsdkapig.v2.model.app_auth_resp",
            "huaweicloudsdkapig.v2.model.app_auth_un_binded_api_resp",
            "huaweicloudsdkapig.v2.model.app_info_with_bind_num_resp",
            "huaweicloudsdkapig.v2.model.app_req",
            "huaweicloudsdkapig.v2.model.app_secret_req",
            "huaweicloudsdkapig.v2.model.associate_certificate_v2_request",
            "huaweicloudsdkapig.v2.model.associate_certificate_v2_response",
            "huaweicloudsdkapig.v2.model.associate_domain_v2_request",
            "huaweicloudsdkapig.v2.model.associate_domain_v2_response",
            "huaweicloudsdkapig.v2.model.associate_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.associate_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.associate_signature_key_v2_request",
            "huaweicloudsdkapig.v2.model.associate_signature_key_v2_response",
            "huaweicloudsdkapig.v2.model.auth_opt",
            "huaweicloudsdkapig.v2.model.auth_result_resp",
            "huaweicloudsdkapig.v2.model.backend_api",
            "huaweicloudsdkapig.v2.model.backend_api_base",
            "huaweicloudsdkapig.v2.model.backend_api_base_info",
            "huaweicloudsdkapig.v2.model.backend_api_create",
            "huaweicloudsdkapig.v2.model.backend_param",
            "huaweicloudsdkapig.v2.model.backend_param_base",
            "huaweicloudsdkapig.v2.model.batch_disassociate_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.batch_disassociate_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.canceling_authorization_v2_request",
            "huaweicloudsdkapig.v2.model.canceling_authorization_v2_response",
            "huaweicloudsdkapig.v2.model.check_app_v2_request",
            "huaweicloudsdkapig.v2.model.check_app_v2_response",
            "huaweicloudsdkapig.v2.model.codition_resp",
            "huaweicloudsdkapig.v2.model.create_an_app_v2_request",
            "huaweicloudsdkapig.v2.model.create_an_app_v2_response",
            "huaweicloudsdkapig.v2.model.create_api_group_v2_request",
            "huaweicloudsdkapig.v2.model.create_api_group_v2_response",
            "huaweicloudsdkapig.v2.model.create_api_v2_request",
            "huaweicloudsdkapig.v2.model.create_api_v2_response",
            "huaweicloudsdkapig.v2.model.create_authorizing_apps_v2_request",
            "huaweicloudsdkapig.v2.model.create_authorizing_apps_v2_response",
            "huaweicloudsdkapig.v2.model.create_environment_v2_request",
            "huaweicloudsdkapig.v2.model.create_environment_v2_response",
            "huaweicloudsdkapig.v2.model.create_environment_variable_v2_request",
            "huaweicloudsdkapig.v2.model.create_environment_variable_v2_response",
            "huaweicloudsdkapig.v2.model.create_or_delete_publish_record_for_api_v2_request",
            "huaweicloudsdkapig.v2.model.create_or_delete_publish_record_for_api_v2_response",
            "huaweicloudsdkapig.v2.model.create_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.create_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.create_signature_key_v2_request",
            "huaweicloudsdkapig.v2.model.create_signature_key_v2_response",
            "huaweicloudsdkapig.v2.model.create_special_throttling_configuration_v2_request",
            "huaweicloudsdkapig.v2.model.create_special_throttling_configuration_v2_response",
            "huaweicloudsdkapig.v2.model.delete_api_group_v2_request",
            "huaweicloudsdkapig.v2.model.delete_api_group_v2_response",
            "huaweicloudsdkapig.v2.model.delete_api_v2_request",
            "huaweicloudsdkapig.v2.model.delete_api_v2_response",
            "huaweicloudsdkapig.v2.model.delete_app_v2_request",
            "huaweicloudsdkapig.v2.model.delete_app_v2_response",
            "huaweicloudsdkapig.v2.model.delete_environment_v2_request",
            "huaweicloudsdkapig.v2.model.delete_environment_v2_response",
            "huaweicloudsdkapig.v2.model.delete_environment_variable_v2_request",
            "huaweicloudsdkapig.v2.model.delete_environment_variable_v2_response",
            "huaweicloudsdkapig.v2.model.delete_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.delete_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.delete_signature_key_v2_request",
            "huaweicloudsdkapig.v2.model.delete_signature_key_v2_response",
            "huaweicloudsdkapig.v2.model.delete_special_throttling_configuration_v2_request",
            "huaweicloudsdkapig.v2.model.delete_special_throttling_configuration_v2_response",
            "huaweicloudsdkapig.v2.model.disassociate_certificate_v2_request",
            "huaweicloudsdkapig.v2.model.disassociate_certificate_v2_response",
            "huaweicloudsdkapig.v2.model.disassociate_domain_v2_request",
            "huaweicloudsdkapig.v2.model.disassociate_domain_v2_response",
            "huaweicloudsdkapig.v2.model.disassociate_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.disassociate_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.disassociate_signature_key_v2_request",
            "huaweicloudsdkapig.v2.model.disassociate_signature_key_v2_response",
            "huaweicloudsdkapig.v2.model.domain_cert_req",
            "huaweicloudsdkapig.v2.model.domain_req",
            "huaweicloudsdkapig.v2.model.env_req",
            "huaweicloudsdkapig.v2.model.env_resp",
            "huaweicloudsdkapig.v2.model.env_variable_req",
            "huaweicloudsdkapig.v2.model.env_variable_resp",
            "huaweicloudsdkapig.v2.model.list_api_groups_quantities_v2_request",
            "huaweicloudsdkapig.v2.model.list_api_groups_quantities_v2_response",
            "huaweicloudsdkapig.v2.model.list_api_groups_v2_request",
            "huaweicloudsdkapig.v2.model.list_api_groups_v2_response",
            "huaweicloudsdkapig.v2.model.list_api_quantities_v2_request",
            "huaweicloudsdkapig.v2.model.list_api_quantities_v2_response",
            "huaweicloudsdkapig.v2.model.list_apis_binded_to_app_v2_request",
            "huaweicloudsdkapig.v2.model.list_apis_binded_to_app_v2_response",
            "huaweicloudsdkapig.v2.model.list_apis_binded_to_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.list_apis_binded_to_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.list_apis_binded_to_signature_key_v2_request",
            "huaweicloudsdkapig.v2.model.list_apis_binded_to_signature_key_v2_response",
            "huaweicloudsdkapig.v2.model.list_apis_not_bound_with_signature_key_v2_request",
            "huaweicloudsdkapig.v2.model.list_apis_not_bound_with_signature_key_v2_response",
            "huaweicloudsdkapig.v2.model.list_apis_unbinded_to_app_v2_request",
            "huaweicloudsdkapig.v2.model.list_apis_unbinded_to_app_v2_response",
            "huaweicloudsdkapig.v2.model.list_apis_unbinded_to_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.list_apis_unbinded_to_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.list_apis_v2_request",
            "huaweicloudsdkapig.v2.model.list_apis_v2_response",
            "huaweicloudsdkapig.v2.model.list_app_quantities_v2_request",
            "huaweicloudsdkapig.v2.model.list_app_quantities_v2_response",
            "huaweicloudsdkapig.v2.model.list_apps_binded_to_api_v2_request",
            "huaweicloudsdkapig.v2.model.list_apps_binded_to_api_v2_response",
            "huaweicloudsdkapig.v2.model.list_apps_v2_request",
            "huaweicloudsdkapig.v2.model.list_apps_v2_response",
            "huaweicloudsdkapig.v2.model.list_environment_variables_v2_request",
            "huaweicloudsdkapig.v2.model.list_environment_variables_v2_response",
            "huaweicloudsdkapig.v2.model.list_environments_v2_request",
            "huaweicloudsdkapig.v2.model.list_environments_v2_response",
            "huaweicloudsdkapig.v2.model.list_request_throttling_policies_binded_to_api_v2_request",
            "huaweicloudsdkapig.v2.model.list_request_throttling_policies_binded_to_api_v2_response",
            "huaweicloudsdkapig.v2.model.list_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.list_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.list_signature_keys_binded_to_api_v2_request",
            "huaweicloudsdkapig.v2.model.list_signature_keys_binded_to_api_v2_response",
            "huaweicloudsdkapig.v2.model.list_signature_keys_v2_request",
            "huaweicloudsdkapig.v2.model.list_signature_keys_v2_response",
            "huaweicloudsdkapig.v2.model.list_special_throttling_configurations_v2_request",
            "huaweicloudsdkapig.v2.model.list_special_throttling_configurations_v2_response",
            "huaweicloudsdkapig.v2.model.req_param",
            "huaweicloudsdkapig.v2.model.req_param_base",
            "huaweicloudsdkapig.v2.model.resetting_app_secret_v2_request",
            "huaweicloudsdkapig.v2.model.resetting_app_secret_v2_response",
            "huaweicloudsdkapig.v2.model.show_details_of_api_group_v2_request",
            "huaweicloudsdkapig.v2.model.show_details_of_api_group_v2_response",
            "huaweicloudsdkapig.v2.model.show_details_of_api_v2_request",
            "huaweicloudsdkapig.v2.model.show_details_of_api_v2_response",
            "huaweicloudsdkapig.v2.model.show_details_of_app_v2_request",
            "huaweicloudsdkapig.v2.model.show_details_of_app_v2_response",
            "huaweicloudsdkapig.v2.model.show_details_of_domain_name_certificate_v2_request",
            "huaweicloudsdkapig.v2.model.show_details_of_domain_name_certificate_v2_response",
            "huaweicloudsdkapig.v2.model.show_details_of_environment_variable_v2_request",
            "huaweicloudsdkapig.v2.model.show_details_of_environment_variable_v2_response",
            "huaweicloudsdkapig.v2.model.show_details_of_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.show_details_of_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.sign_binding_api_resp",
            "huaweicloudsdkapig.v2.model.sign_binding_req",
            "huaweicloudsdkapig.v2.model.sign_unbinding_api_resp",
            "huaweicloudsdkapig.v2.model.signature_create_resp",
            "huaweicloudsdkapig.v2.model.signature_req",
            "huaweicloudsdkapig.v2.model.throttle_binding_api_resp",
            "huaweicloudsdkapig.v2.model.throttle_binding_batch_delete",
            "huaweicloudsdkapig.v2.model.throttle_binding_batch_result_failure_resp",
            "huaweicloudsdkapig.v2.model.throttle_binding_req",
            "huaweicloudsdkapig.v2.model.throttle_binding_resp",
            "huaweicloudsdkapig.v2.model.throttle_binding_throttle_resp",
            "huaweicloudsdkapig.v2.model.throttle_req",
            "huaweicloudsdkapig.v2.model.throttle_resp",
            "huaweicloudsdkapig.v2.model.throttle_special_req",
            "huaweicloudsdkapig.v2.model.throttle_special_resp",
            "huaweicloudsdkapig.v2.model.throttle_special_update_req",
            "huaweicloudsdkapig.v2.model.update_api_group_v2_request",
            "huaweicloudsdkapig.v2.model.update_api_group_v2_response",
            "huaweicloudsdkapig.v2.model.update_api_v2_request",
            "huaweicloudsdkapig.v2.model.update_api_v2_response",
            "huaweicloudsdkapig.v2.model.update_app_v2_request",
            "huaweicloudsdkapig.v2.model.update_app_v2_response",
            "huaweicloudsdkapig.v2.model.update_environment_v2_request",
            "huaweicloudsdkapig.v2.model.update_environment_v2_response",
            "huaweicloudsdkapig.v2.model.update_request_throttling_policy_v2_request",
            "huaweicloudsdkapig.v2.model.update_request_throttling_policy_v2_response",
            "huaweicloudsdkapig.v2.model.update_signature_key_v2_request",
            "huaweicloudsdkapig.v2.model.update_signature_key_v2_response",
            "huaweicloudsdkapig.v2.model.update_special_throttling_configuration_v2_request",
            "huaweicloudsdkapig.v2.model.update_special_throttling_configuration_v2_response",
            "huaweicloudsdkapig.v2.model.url_domains_resp",
            "huaweicloudsdkapig.v2.model.vpc_base_info",
            "huaweicloudsdkapig.v2.model.vpc_info"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkas": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkas",
            "huaweicloudsdkas.v1",
            "huaweicloudsdkas.v1.as_async_client",
            "huaweicloudsdkas.v1.as_client",
            "huaweicloudsdkas.v1.model",
            "huaweicloudsdkas.v1.model.all_quotas",
            "huaweicloudsdkas.v1.model.all_resources",
            "huaweicloudsdkas.v1.model.bandwidth",
            "huaweicloudsdkas.v1.model.batch_delete_scaling_configs_request",
            "huaweicloudsdkas.v1.model.batch_delete_scaling_configs_request_body",
            "huaweicloudsdkas.v1.model.batch_delete_scaling_configs_response",
            "huaweicloudsdkas.v1.model.complete_lifecycle_action_request",
            "huaweicloudsdkas.v1.model.complete_lifecycle_action_request_body",
            "huaweicloudsdkas.v1.model.complete_lifecycle_action_response",
            "huaweicloudsdkas.v1.model.create_life_cycle_hook_request_body",
            "huaweicloudsdkas.v1.model.create_lify_cycle_hook_request",
            "huaweicloudsdkas.v1.model.create_lify_cycle_hook_response",
            "huaweicloudsdkas.v1.model.create_notification_request_body",
            "huaweicloudsdkas.v1.model.create_scaling_config_request",
            "huaweicloudsdkas.v1.model.create_scaling_config_request_body",
            "huaweicloudsdkas.v1.model.create_scaling_config_response",
            "huaweicloudsdkas.v1.model.create_scaling_group_request",
            "huaweicloudsdkas.v1.model.create_scaling_group_request_body",
            "huaweicloudsdkas.v1.model.create_scaling_group_response",
            "huaweicloudsdkas.v1.model.create_scaling_notification_request",
            "huaweicloudsdkas.v1.model.create_scaling_notification_response",
            "huaweicloudsdkas.v1.model.create_scaling_policy_request",
            "huaweicloudsdkas.v1.model.create_scaling_policy_request_body",
            "huaweicloudsdkas.v1.model.create_scaling_policy_response",
            "huaweicloudsdkas.v1.model.create_scaling_tags_request",
            "huaweicloudsdkas.v1.model.create_scaling_tags_request_body",
            "huaweicloudsdkas.v1.model.create_scaling_tags_response",
            "huaweicloudsdkas.v1.model.delete_lifecycle_hook_request",
            "huaweicloudsdkas.v1.model.delete_lifecycle_hook_response",
            "huaweicloudsdkas.v1.model.delete_scaling_config_request",
            "huaweicloudsdkas.v1.model.delete_scaling_config_response",
            "huaweicloudsdkas.v1.model.delete_scaling_group_request",
            "huaweicloudsdkas.v1.model.delete_scaling_group_response",
            "huaweicloudsdkas.v1.model.delete_scaling_instance_request",
            "huaweicloudsdkas.v1.model.delete_scaling_instance_response",
            "huaweicloudsdkas.v1.model.delete_scaling_notification_request",
            "huaweicloudsdkas.v1.model.delete_scaling_notification_response",
            "huaweicloudsdkas.v1.model.delete_scaling_policy_request",
            "huaweicloudsdkas.v1.model.delete_scaling_policy_response",
            "huaweicloudsdkas.v1.model.delete_scaling_tags_request",
            "huaweicloudsdkas.v1.model.delete_scaling_tags_request_body",
            "huaweicloudsdkas.v1.model.delete_scaling_tags_response",
            "huaweicloudsdkas.v1.model.disk",
            "huaweicloudsdkas.v1.model.eip",
            "huaweicloudsdkas.v1.model.enable_or_disable_scaling_group_request",
            "huaweicloudsdkas.v1.model.enable_or_disable_scaling_group_request_body",
            "huaweicloudsdkas.v1.model.enable_or_disable_scaling_group_response",
            "huaweicloudsdkas.v1.model.execute_scaling_policy_request",
            "huaweicloudsdkas.v1.model.execute_scaling_policy_request_body",
            "huaweicloudsdkas.v1.model.execute_scaling_policy_response",
            "huaweicloudsdkas.v1.model.instance_config",
            "huaweicloudsdkas.v1.model.instance_config_result",
            "huaweicloudsdkas.v1.model.instance_hanging_infos",
            "huaweicloudsdkas.v1.model.ipv6_bandwidth",
            "huaweicloudsdkas.v1.model.job_records",
            "huaweicloudsdkas.v1.model.lbaas_listeners",
            "huaweicloudsdkas.v1.model.lbaas_listeners_result",
            "huaweicloudsdkas.v1.model.lifecycle_hook_list",
            "huaweicloudsdkas.v1.model.list_hook_instances_request",
            "huaweicloudsdkas.v1.model.list_hook_instances_response",
            "huaweicloudsdkas.v1.model.list_life_cycle_hooks_request",
            "huaweicloudsdkas.v1.model.list_life_cycle_hooks_response",
            "huaweicloudsdkas.v1.model.list_resource_instances_request",
            "huaweicloudsdkas.v1.model.list_resource_instances_response",
            "huaweicloudsdkas.v1.model.list_scaling_activity_logs_request",
            "huaweicloudsdkas.v1.model.list_scaling_activity_logs_response",
            "huaweicloudsdkas.v1.model.list_scaling_configs_request",
            "huaweicloudsdkas.v1.model.list_scaling_configs_response",
            "huaweicloudsdkas.v1.model.list_scaling_groups_request",
            "huaweicloudsdkas.v1.model.list_scaling_groups_response",
            "huaweicloudsdkas.v1.model.list_scaling_instances_request",
            "huaweicloudsdkas.v1.model.list_scaling_instances_response",
            "huaweicloudsdkas.v1.model.list_scaling_notifications_request",
            "huaweicloudsdkas.v1.model.list_scaling_notifications_response",
            "huaweicloudsdkas.v1.model.list_scaling_policies_request",
            "huaweicloudsdkas.v1.model.list_scaling_policies_response",
            "huaweicloudsdkas.v1.model.list_scaling_policy_execute_logs_request",
            "huaweicloudsdkas.v1.model.list_scaling_policy_execute_logs_response",
            "huaweicloudsdkas.v1.model.list_scaling_tag_infos_by_resource_id_request",
            "huaweicloudsdkas.v1.model.list_scaling_tag_infos_by_resource_id_response",
            "huaweicloudsdkas.v1.model.list_scaling_tag_infos_by_tenant_id_request",
            "huaweicloudsdkas.v1.model.list_scaling_tag_infos_by_tenant_id_response",
            "huaweicloudsdkas.v1.model.matches",
            "huaweicloudsdkas.v1.model.meta_data",
            "huaweicloudsdkas.v1.model.networks",
            "huaweicloudsdkas.v1.model.personality",
            "huaweicloudsdkas.v1.model.policy_instance_quotas",
            "huaweicloudsdkas.v1.model.policy_instance_resources",
            "huaweicloudsdkas.v1.model.public_ip",
            "huaweicloudsdkas.v1.model.resource_tags",
            "huaweicloudsdkas.v1.model.resources",
            "huaweicloudsdkas.v1.model.scaling_activity_log_list",
            "huaweicloudsdkas.v1.model.scaling_configuration",
            "huaweicloudsdkas.v1.model.scaling_group_instance",
            "huaweicloudsdkas.v1.model.scaling_groups",
            "huaweicloudsdkas.v1.model.scaling_policy_action",
            "huaweicloudsdkas.v1.model.scaling_policy_detail",
            "huaweicloudsdkas.v1.model.scaling_policy_execute_log_list",
            "huaweicloudsdkas.v1.model.scheduled_policy",
            "huaweicloudsdkas.v1.model.security_groups",
            "huaweicloudsdkas.v1.model.security_groups_result",
            "huaweicloudsdkas.v1.model.show_life_cycle_hook_request",
            "huaweicloudsdkas.v1.model.show_life_cycle_hook_response",
            "huaweicloudsdkas.v1.model.show_policy_and_instance_quota_request",
            "huaweicloudsdkas.v1.model.show_policy_and_instance_quota_response",
            "huaweicloudsdkas.v1.model.show_resource_quota_request",
            "huaweicloudsdkas.v1.model.show_resource_quota_response",
            "huaweicloudsdkas.v1.model.show_scaling_config_request",
            "huaweicloudsdkas.v1.model.show_scaling_config_response",
            "huaweicloudsdkas.v1.model.show_scaling_group_request",
            "huaweicloudsdkas.v1.model.show_scaling_group_response",
            "huaweicloudsdkas.v1.model.show_scaling_policy_request",
            "huaweicloudsdkas.v1.model.show_scaling_policy_response",
            "huaweicloudsdkas.v1.model.show_tags_request_body",
            "huaweicloudsdkas.v1.model.tags_multi_value",
            "huaweicloudsdkas.v1.model.tags_single_value",
            "huaweicloudsdkas.v1.model.topics",
            "huaweicloudsdkas.v1.model.update_life_cycle_hook_request",
            "huaweicloudsdkas.v1.model.update_life_cycle_hook_request_body",
            "huaweicloudsdkas.v1.model.update_life_cycle_hook_response",
            "huaweicloudsdkas.v1.model.update_scaling_group_instance_request",
            "huaweicloudsdkas.v1.model.update_scaling_group_instance_request_body",
            "huaweicloudsdkas.v1.model.update_scaling_group_instance_response",
            "huaweicloudsdkas.v1.model.update_scaling_group_request",
            "huaweicloudsdkas.v1.model.update_scaling_group_request_body",
            "huaweicloudsdkas.v1.model.update_scaling_group_response",
            "huaweicloudsdkas.v1.model.update_scaling_policy_request",
            "huaweicloudsdkas.v1.model.update_scaling_policy_request_body",
            "huaweicloudsdkas.v1.model.update_scaling_policy_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkbss": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkbss",
            "huaweicloudsdkbss.v2",
            "huaweicloudsdkbss.v2.bss_async_client",
            "huaweicloudsdkbss.v2.bss_client",
            "huaweicloudsdkbss.v2.model",
            "huaweicloudsdkbss.v2.model.account_balance_v2",
            "huaweicloudsdkbss.v2.model.account_balance_v3",
            "huaweicloudsdkbss.v2.model.account_manager",
            "huaweicloudsdkbss.v2.model.add_postal_req",
            "huaweicloudsdkbss.v2.model.adjust_account_req",
            "huaweicloudsdkbss.v2.model.adjust_coupon_quotas_req",
            "huaweicloudsdkbss.v2.model.adjust_record_v2",
            "huaweicloudsdkbss.v2.model.adjust_to_indirect_partner_req",
            "huaweicloudsdkbss.v2.model.agent_pay_info",
            "huaweicloudsdkbss.v2.model.amount_infomation",
            "huaweicloudsdkbss.v2.model.amount_infomation_v2",
            "huaweicloudsdkbss.v2.model.apply_enterprise_realname_auths_req",
            "huaweicloudsdkbss.v2.model.apply_individual_realname_auths_req",
            "huaweicloudsdkbss.v2.model.auto_renewal_resources_request",
            "huaweicloudsdkbss.v2.model.auto_renewal_resources_response",
            "huaweicloudsdkbss.v2.model.balance_type_deduct_sum_v2",
            "huaweicloudsdkbss.v2.model.bank_card_info_v2",
            "huaweicloudsdkbss.v2.model.batch_set_sub_customer_discount_request",
            "huaweicloudsdkbss.v2.model.batch_set_sub_customer_discount_response",
            "huaweicloudsdkbss.v2.model.bill_sum_info_v2",
            "huaweicloudsdkbss.v2.model.bill_sum_record_info_v2",
            "huaweicloudsdkbss.v2.model.cancel_auto_renewal_resources_request",
            "huaweicloudsdkbss.v2.model.cancel_auto_renewal_resources_response",
            "huaweicloudsdkbss.v2.model.cancel_customer_order_req",
            "huaweicloudsdkbss.v2.model.cancel_customer_order_request",
            "huaweicloudsdkbss.v2.model.cancel_customer_order_response",
            "huaweicloudsdkbss.v2.model.cancel_resources_subscription_request",
            "huaweicloudsdkbss.v2.model.cancel_resources_subscription_response",
            "huaweicloudsdkbss.v2.model.change_enterprise_realname_authentication_request",
            "huaweicloudsdkbss.v2.model.change_enterprise_realname_authentication_response",
            "huaweicloudsdkbss.v2.model.change_enterprise_realname_auths_req",
            "huaweicloudsdkbss.v2.model.check_subcustomer_user_req",
            "huaweicloudsdkbss.v2.model.check_user_identity_request",
            "huaweicloudsdkbss.v2.model.check_user_identity_response",
            "huaweicloudsdkbss.v2.model.city",
            "huaweicloudsdkbss.v2.model.county",
            "huaweicloudsdkbss.v2.model.coupon_info_v2",
            "huaweicloudsdkbss.v2.model.coupon_quota_v2",
            "huaweicloudsdkbss.v2.model.coupon_record_v2",
            "huaweicloudsdkbss.v2.model.coupon_simple_info",
            "huaweicloudsdkbss.v2.model.coupon_simple_info_order_pay",
            "huaweicloudsdkbss.v2.model.create_customer_v2_req",
            "huaweicloudsdkbss.v2.model.create_enterprise_project_auth_request",
            "huaweicloudsdkbss.v2.model.create_enterprise_project_auth_response",
            "huaweicloudsdkbss.v2.model.create_enterprise_realname_authentication_request",
            "huaweicloudsdkbss.v2.model.create_enterprise_realname_authentication_response",
            "huaweicloudsdkbss.v2.model.create_partner_coupons_req",
            "huaweicloudsdkbss.v2.model.create_partner_coupons_request",
            "huaweicloudsdkbss.v2.model.create_partner_coupons_response",
            "huaweicloudsdkbss.v2.model.create_personal_realname_auth_request",
            "huaweicloudsdkbss.v2.model.create_personal_realname_auth_response",
            "huaweicloudsdkbss.v2.model.create_postal_request",
            "huaweicloudsdkbss.v2.model.create_postal_response",
            "huaweicloudsdkbss.v2.model.create_sub_customer_req_v2",
            "huaweicloudsdkbss.v2.model.create_sub_customer_request",
            "huaweicloudsdkbss.v2.model.create_sub_customer_response",
            "huaweicloudsdkbss.v2.model.create_sub_enterprise_account_request",
            "huaweicloudsdkbss.v2.model.create_sub_enterprise_account_response",
            "huaweicloudsdkbss.v2.model.customer_balances_v2",
            "huaweicloudsdkbss.v2.model.customer_info_v2",
            "huaweicloudsdkbss.v2.model.customer_information",
            "huaweicloudsdkbss.v2.model.customer_on_demand_resource",
            "huaweicloudsdkbss.v2.model.customer_order_entity",
            "huaweicloudsdkbss.v2.model.customer_order_v2",
            "huaweicloudsdkbss.v2.model.customer_postal_address_v2",
            "huaweicloudsdkbss.v2.model.delete_postal_request",
            "huaweicloudsdkbss.v2.model.delete_postal_response",
            "huaweicloudsdkbss.v2.model.demand_discount_rating_result",
            "huaweicloudsdkbss.v2.model.demand_product_info",
            "huaweicloudsdkbss.v2.model.demand_product_rating_result",
            "huaweicloudsdkbss.v2.model.discount_entry",
            "huaweicloudsdkbss.v2.model.discount_item_v2",
            "huaweicloudsdkbss.v2.model.enterprise_person_new",
            "huaweicloudsdkbss.v2.model.error_detail",
            "huaweicloudsdkbss.v2.model.i_coupon_use_limit_info_v2",
            "huaweicloudsdkbss.v2.model.i_query_user_coupons_result_v2",
            "huaweicloudsdkbss.v2.model.i_query_user_partner_coupons_result_v2",
            "huaweicloudsdkbss.v2.model.indirect_partner_info",
            "huaweicloudsdkbss.v2.model.issued_coupon_quota",
            "huaweicloudsdkbss.v2.model.limit_info_v2",
            "huaweicloudsdkbss.v2.model.limit_value",
            "huaweicloudsdkbss.v2.model.list_cities_request",
            "huaweicloudsdkbss.v2.model.list_cities_response",
            "huaweicloudsdkbss.v2.model.list_counties_request",
            "huaweicloudsdkbss.v2.model.list_counties_response",
            "huaweicloudsdkbss.v2.model.list_coupon_quotas_records_request",
            "huaweicloudsdkbss.v2.model.list_coupon_quotas_records_response",
            "huaweicloudsdkbss.v2.model.list_customer_on_demand_resources_request",
            "huaweicloudsdkbss.v2.model.list_customer_on_demand_resources_response",
            "huaweicloudsdkbss.v2.model.list_customer_orders_request",
            "huaweicloudsdkbss.v2.model.list_customer_orders_response",
            "huaweicloudsdkbss.v2.model.list_customers_balances_detail_request",
            "huaweicloudsdkbss.v2.model.list_customers_balances_detail_response",
            "huaweicloudsdkbss.v2.model.list_customerself_resource_record_details_request",
            "huaweicloudsdkbss.v2.model.list_customerself_resource_record_details_response",
            "huaweicloudsdkbss.v2.model.list_customerself_resource_records_request",
            "huaweicloudsdkbss.v2.model.list_customerself_resource_records_response",
            "huaweicloudsdkbss.v2.model.list_enterprise_multi_account_request",
            "huaweicloudsdkbss.v2.model.list_enterprise_multi_account_response",
            "huaweicloudsdkbss.v2.model.list_indirect_partners_request",
            "huaweicloudsdkbss.v2.model.list_indirect_partners_response",
            "huaweicloudsdkbss.v2.model.list_issued_coupon_quotas_request",
            "huaweicloudsdkbss.v2.model.list_issued_coupon_quotas_response",
            "huaweicloudsdkbss.v2.model.list_issued_partner_coupons_request",
            "huaweicloudsdkbss.v2.model.list_issued_partner_coupons_response",
            "huaweicloudsdkbss.v2.model.list_on_demand_resource_ratings_request",
            "huaweicloudsdkbss.v2.model.list_on_demand_resource_ratings_response",
            "huaweicloudsdkbss.v2.model.list_order_coupons_by_order_id_request",
            "huaweicloudsdkbss.v2.model.list_order_coupons_by_order_id_response",
            "huaweicloudsdkbss.v2.model.list_partner_adjust_records_request",
            "huaweicloudsdkbss.v2.model.list_partner_adjust_records_response",
            "huaweicloudsdkbss.v2.model.list_partner_balances_request",
            "huaweicloudsdkbss.v2.model.list_partner_balances_response",
            "huaweicloudsdkbss.v2.model.list_partner_coupons_record_request",
            "huaweicloudsdkbss.v2.model.list_partner_coupons_record_response",
            "huaweicloudsdkbss.v2.model.list_partner_pay_orders_request",
            "huaweicloudsdkbss.v2.model.list_partner_pay_orders_response",
            "huaweicloudsdkbss.v2.model.list_pay_per_use_customer_resources_request",
            "huaweicloudsdkbss.v2.model.list_pay_per_use_customer_resources_response",
            "huaweicloudsdkbss.v2.model.list_postal_address_request",
            "huaweicloudsdkbss.v2.model.list_postal_address_response",
            "huaweicloudsdkbss.v2.model.list_provinces_request",
            "huaweicloudsdkbss.v2.model.list_provinces_response",
            "huaweicloudsdkbss.v2.model.list_quota_coupons_request",
            "huaweicloudsdkbss.v2.model.list_quota_coupons_response",
            "huaweicloudsdkbss.v2.model.list_rate_on_period_detail_request",
            "huaweicloudsdkbss.v2.model.list_rate_on_period_detail_response",
            "huaweicloudsdkbss.v2.model.list_resource_usages_request",
            "huaweicloudsdkbss.v2.model.list_resource_usages_response",
            "huaweicloudsdkbss.v2.model.list_sku_inventories_request",
            "huaweicloudsdkbss.v2.model.list_sku_inventories_response",
            "huaweicloudsdkbss.v2.model.list_sub_customer_coupons_request",
            "huaweicloudsdkbss.v2.model.list_sub_customer_coupons_response",
            "huaweicloudsdkbss.v2.model.list_sub_customer_discounts_request",
            "huaweicloudsdkbss.v2.model.list_sub_customer_discounts_response",
            "huaweicloudsdkbss.v2.model.list_sub_customer_res_fee_records_request",
            "huaweicloudsdkbss.v2.model.list_sub_customer_res_fee_records_response",
            "huaweicloudsdkbss.v2.model.list_sub_customers_request",
            "huaweicloudsdkbss.v2.model.list_sub_customers_response",
            "huaweicloudsdkbss.v2.model.list_subcustomer_monthly_bills_request",
            "huaweicloudsdkbss.v2.model.list_subcustomer_monthly_bills_response",
            "huaweicloudsdkbss.v2.model.monthly_bill_res",
            "huaweicloudsdkbss.v2.model.new_customer_v2",
            "huaweicloudsdkbss.v2.model.official_website_rating_result",
            "huaweicloudsdkbss.v2.model.optional_discount_rating_result",
            "huaweicloudsdkbss.v2.model.order_instance_v2",
            "huaweicloudsdkbss.v2.model.order_line_item_entity_v2",
            "huaweicloudsdkbss.v2.model.order_refund_info_v2",
            "huaweicloudsdkbss.v2.model.package_usage_info",
            "huaweicloudsdkbss.v2.model.pay_customer_order_req",
            "huaweicloudsdkbss.v2.model.pay_orders_request",
            "huaweicloudsdkbss.v2.model.pay_orders_response",
            "huaweicloudsdkbss.v2.model.period_product_info",
            "huaweicloudsdkbss.v2.model.period_product_official_rating_result",
            "huaweicloudsdkbss.v2.model.period_product_rating_result",
            "huaweicloudsdkbss.v2.model.province",
            "huaweicloudsdkbss.v2.model.query_coupon_quotas_req_ext",
            "huaweicloudsdkbss.v2.model.query_customer_on_demand_resources_req",
            "huaweicloudsdkbss.v2.model.query_customers_balances_req",
            "huaweicloudsdkbss.v2.model.query_indirect_partners_req",
            "huaweicloudsdkbss.v2.model.query_res_records_detail_req",
            "huaweicloudsdkbss.v2.model.query_resources_req",
            "huaweicloudsdkbss.v2.model.query_sku_inventories_req",
            "huaweicloudsdkbss.v2.model.query_sub_customer_discount_v2",
            "huaweicloudsdkbss.v2.model.query_sub_customer_list_req",
            "huaweicloudsdkbss.v2.model.quota_limit_info",
            "huaweicloudsdkbss.v2.model.quota_reclaim",
            "huaweicloudsdkbss.v2.model.quota_record",
            "huaweicloudsdkbss.v2.model.quota_simple_info",
            "huaweicloudsdkbss.v2.model.rate_on_demand_req",
            "huaweicloudsdkbss.v2.model.rate_on_period_req",
            "huaweicloudsdkbss.v2.model.reclaim_coupon_quotas_req",
            "huaweicloudsdkbss.v2.model.reclaim_coupon_quotas_request",
            "huaweicloudsdkbss.v2.model.reclaim_coupon_quotas_response",
            "huaweicloudsdkbss.v2.model.reclaim_indirect_partner_account_req",
            "huaweicloudsdkbss.v2.model.reclaim_indirect_partner_account_request",
            "huaweicloudsdkbss.v2.model.reclaim_indirect_partner_account_response",
            "huaweicloudsdkbss.v2.model.reclaim_partner_coupons_req",
            "huaweicloudsdkbss.v2.model.reclaim_partner_coupons_request",
            "huaweicloudsdkbss.v2.model.reclaim_partner_coupons_response",
            "huaweicloudsdkbss.v2.model.reclaim_sub_enterprise_amount_request",
            "huaweicloudsdkbss.v2.model.reclaim_sub_enterprise_amount_response",
            "huaweicloudsdkbss.v2.model.reclaim_to_partner_account_balances_req",
            "huaweicloudsdkbss.v2.model.reclaim_to_partner_account_request",
            "huaweicloudsdkbss.v2.model.reclaim_to_partner_account_response",
            "huaweicloudsdkbss.v2.model.renewal_resources_req",
            "huaweicloudsdkbss.v2.model.renewal_resources_request",
            "huaweicloudsdkbss.v2.model.renewal_resources_response",
            "huaweicloudsdkbss.v2.model.res_fee_record_v2",
            "huaweicloudsdkbss.v2.model.retrieve_amount_info_v2",
            "huaweicloudsdkbss.v2.model.retrieve_enterprise_multi_account_req",
            "huaweicloudsdkbss.v2.model.send_sm_verification_code_req",
            "huaweicloudsdkbss.v2.model.send_sms_verification_code_request",
            "huaweicloudsdkbss.v2.model.send_sms_verification_code_response",
            "huaweicloudsdkbss.v2.model.send_verification_code_v2_req",
            "huaweicloudsdkbss.v2.model.send_verification_message_code_request",
            "huaweicloudsdkbss.v2.model.send_verification_message_code_response",
            "huaweicloudsdkbss.v2.model.set_partner_discounts_req",
            "huaweicloudsdkbss.v2.model.set_sub_customer_discount_v2",
            "huaweicloudsdkbss.v2.model.show_cusotmer_account_balances_request",
            "huaweicloudsdkbss.v2.model.show_cusotmer_account_balances_response",
            "huaweicloudsdkbss.v2.model.show_customer_monthly_sum_request",
            "huaweicloudsdkbss.v2.model.show_customer_monthly_sum_response",
            "huaweicloudsdkbss.v2.model.show_customer_order_details_request",
            "huaweicloudsdkbss.v2.model.show_customer_order_details_response",
            "huaweicloudsdkbss.v2.model.show_multi_account_transfer_amount_request",
            "huaweicloudsdkbss.v2.model.show_multi_account_transfer_amount_response",
            "huaweicloudsdkbss.v2.model.show_realname_authentication_review_result_request",
            "huaweicloudsdkbss.v2.model.show_realname_authentication_review_result_response",
            "huaweicloudsdkbss.v2.model.show_refund_order_details_request",
            "huaweicloudsdkbss.v2.model.show_refund_order_details_response",
            "huaweicloudsdkbss.v2.model.sku_inventory",
            "huaweicloudsdkbss.v2.model.sku_item",
            "huaweicloudsdkbss.v2.model.sub_customer_res_fee_record_v2",
            "huaweicloudsdkbss.v2.model.template_args",
            "huaweicloudsdkbss.v2.model.transfer_amount_info_v2",
            "huaweicloudsdkbss.v2.model.transfer_enterprise_multi_account_req",
            "huaweicloudsdkbss.v2.model.unsubscribe_resources_req",
            "huaweicloudsdkbss.v2.model.update_coupon_quotas_request",
            "huaweicloudsdkbss.v2.model.update_coupon_quotas_response",
            "huaweicloudsdkbss.v2.model.update_customer_account_amount_request",
            "huaweicloudsdkbss.v2.model.update_customer_account_amount_response",
            "huaweicloudsdkbss.v2.model.update_indirect_partner_account_request",
            "huaweicloudsdkbss.v2.model.update_indirect_partner_account_response",
            "huaweicloudsdkbss.v2.model.update_postal_req",
            "huaweicloudsdkbss.v2.model.update_postal_request",
            "huaweicloudsdkbss.v2.model.update_postal_response",
            "huaweicloudsdkbss.v2.model.update_sub_enterprise_amount_request",
            "huaweicloudsdkbss.v2.model.update_sub_enterprise_amount_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkbssintl": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkbssintl",
            "huaweicloudsdkbssintl.v2",
            "huaweicloudsdkbssintl.v2.bssintl_async_client",
            "huaweicloudsdkbssintl.v2.bssintl_client",
            "huaweicloudsdkbssintl.v2.model",
            "huaweicloudsdkbssintl.v2.model.account_manager",
            "huaweicloudsdkbssintl.v2.model.amount_infomation_v2",
            "huaweicloudsdkbssintl.v2.model.apply_enterprise_realname_auths_req",
            "huaweicloudsdkbssintl.v2.model.apply_individual_realname_auths_req",
            "huaweicloudsdkbssintl.v2.model.auto_renewal_resources_request",
            "huaweicloudsdkbssintl.v2.model.auto_renewal_resources_response",
            "huaweicloudsdkbssintl.v2.model.bank_card_info_v2",
            "huaweicloudsdkbssintl.v2.model.bill_sum_record_info_v2",
            "huaweicloudsdkbssintl.v2.model.cancel_auto_renewal_resources_request",
            "huaweicloudsdkbssintl.v2.model.cancel_auto_renewal_resources_response",
            "huaweicloudsdkbssintl.v2.model.cancel_customer_order_req",
            "huaweicloudsdkbssintl.v2.model.cancel_customer_order_request",
            "huaweicloudsdkbssintl.v2.model.cancel_customer_order_response",
            "huaweicloudsdkbssintl.v2.model.cancel_resources_subscription_request",
            "huaweicloudsdkbssintl.v2.model.cancel_resources_subscription_response",
            "huaweicloudsdkbssintl.v2.model.change_enterprise_realname_authentication_request",
            "huaweicloudsdkbssintl.v2.model.change_enterprise_realname_authentication_response",
            "huaweicloudsdkbssintl.v2.model.change_enterprise_realname_auths_req",
            "huaweicloudsdkbssintl.v2.model.check_subcustomer_user_req",
            "huaweicloudsdkbssintl.v2.model.check_user_identity_request",
            "huaweicloudsdkbssintl.v2.model.check_user_identity_response",
            "huaweicloudsdkbssintl.v2.model.coupon_info_v2",
            "huaweicloudsdkbssintl.v2.model.coupon_simple_info_order_pay",
            "huaweicloudsdkbssintl.v2.model.create_customer_v2_req",
            "huaweicloudsdkbssintl.v2.model.create_enterprise_realname_authentication_request",
            "huaweicloudsdkbssintl.v2.model.create_enterprise_realname_authentication_response",
            "huaweicloudsdkbssintl.v2.model.create_personal_realname_auth_request",
            "huaweicloudsdkbssintl.v2.model.create_personal_realname_auth_response",
            "huaweicloudsdkbssintl.v2.model.create_sub_customer_request",
            "huaweicloudsdkbssintl.v2.model.create_sub_customer_response",
            "huaweicloudsdkbssintl.v2.model.customer_error_detail",
            "huaweicloudsdkbssintl.v2.model.customer_information",
            "huaweicloudsdkbssintl.v2.model.customer_on_demand_resource",
            "huaweicloudsdkbssintl.v2.model.customer_order_v2",
            "huaweicloudsdkbssintl.v2.model.demand_discount_rating_result",
            "huaweicloudsdkbssintl.v2.model.demand_product_info",
            "huaweicloudsdkbssintl.v2.model.demand_product_rating_result",
            "huaweicloudsdkbssintl.v2.model.discount_item_v2",
            "huaweicloudsdkbssintl.v2.model.enterprise_person_new",
            "huaweicloudsdkbssintl.v2.model.freeze_sub_customers_req",
            "huaweicloudsdkbssintl.v2.model.freeze_sub_customers_request",
            "huaweicloudsdkbssintl.v2.model.freeze_sub_customers_response",
            "huaweicloudsdkbssintl.v2.model.i_coupon_use_limit_info_v2",
            "huaweicloudsdkbssintl.v2.model.i_query_user_coupons_result_v2",
            "huaweicloudsdkbssintl.v2.model.limit_info_v2",
            "huaweicloudsdkbssintl.v2.model.list_customer_on_demand_resources_request",
            "huaweicloudsdkbssintl.v2.model.list_customer_on_demand_resources_response",
            "huaweicloudsdkbssintl.v2.model.list_customer_orders_request",
            "huaweicloudsdkbssintl.v2.model.list_customer_orders_response",
            "huaweicloudsdkbssintl.v2.model.list_customerself_resource_record_details_request",
            "huaweicloudsdkbssintl.v2.model.list_customerself_resource_record_details_response",
            "huaweicloudsdkbssintl.v2.model.list_customerself_resource_records_request",
            "huaweicloudsdkbssintl.v2.model.list_customerself_resource_records_response",
            "huaweicloudsdkbssintl.v2.model.list_on_demand_resource_ratings_request",
            "huaweicloudsdkbssintl.v2.model.list_on_demand_resource_ratings_response",
            "huaweicloudsdkbssintl.v2.model.list_order_coupons_by_order_id_request",
            "huaweicloudsdkbssintl.v2.model.list_order_coupons_by_order_id_response",
            "huaweicloudsdkbssintl.v2.model.list_pay_per_use_customer_resources_request",
            "huaweicloudsdkbssintl.v2.model.list_pay_per_use_customer_resources_response",
            "huaweicloudsdkbssintl.v2.model.list_rate_on_period_detail_request",
            "huaweicloudsdkbssintl.v2.model.list_rate_on_period_detail_response",
            "huaweicloudsdkbssintl.v2.model.list_resource_usages_request",
            "huaweicloudsdkbssintl.v2.model.list_resource_usages_response",
            "huaweicloudsdkbssintl.v2.model.list_sub_customer_coupons_request",
            "huaweicloudsdkbssintl.v2.model.list_sub_customer_coupons_response",
            "huaweicloudsdkbssintl.v2.model.list_sub_customers_request",
            "huaweicloudsdkbssintl.v2.model.list_sub_customers_response",
            "huaweicloudsdkbssintl.v2.model.mod_sub_customer_budget_req",
            "huaweicloudsdkbssintl.v2.model.monthly_bill_res",
            "huaweicloudsdkbssintl.v2.model.official_website_rating_result",
            "huaweicloudsdkbssintl.v2.model.optional_discount_rating_result",
            "huaweicloudsdkbssintl.v2.model.order_instance_v2",
            "huaweicloudsdkbssintl.v2.model.order_line_item_entity_v2",
            "huaweicloudsdkbssintl.v2.model.order_refund_info_v2",
            "huaweicloudsdkbssintl.v2.model.package_usage_info",
            "huaweicloudsdkbssintl.v2.model.pay_customer_order_req",
            "huaweicloudsdkbssintl.v2.model.pay_orders_request",
            "huaweicloudsdkbssintl.v2.model.pay_orders_response",
            "huaweicloudsdkbssintl.v2.model.period_product_info",
            "huaweicloudsdkbssintl.v2.model.period_product_official_rating_result",
            "huaweicloudsdkbssintl.v2.model.period_product_rating_result",
            "huaweicloudsdkbssintl.v2.model.query_customer_on_demand_resources_req",
            "huaweicloudsdkbssintl.v2.model.query_res_records_detail_req",
            "huaweicloudsdkbssintl.v2.model.query_resources_req",
            "huaweicloudsdkbssintl.v2.model.query_sub_customer_list_req",
            "huaweicloudsdkbssintl.v2.model.rate_on_demand_req",
            "huaweicloudsdkbssintl.v2.model.rate_on_period_req",
            "huaweicloudsdkbssintl.v2.model.renewal_resources_req",
            "huaweicloudsdkbssintl.v2.model.renewal_resources_request",
            "huaweicloudsdkbssintl.v2.model.renewal_resources_response",
            "huaweicloudsdkbssintl.v2.model.res_fee_record_v2",
            "huaweicloudsdkbssintl.v2.model.send_verification_code_v2_req",
            "huaweicloudsdkbssintl.v2.model.send_verification_message_code_request",
            "huaweicloudsdkbssintl.v2.model.send_verification_message_code_response",
            "huaweicloudsdkbssintl.v2.model.show_customer_monthly_sum_request",
            "huaweicloudsdkbssintl.v2.model.show_customer_monthly_sum_response",
            "huaweicloudsdkbssintl.v2.model.show_customer_order_details_request",
            "huaweicloudsdkbssintl.v2.model.show_customer_order_details_response",
            "huaweicloudsdkbssintl.v2.model.show_realname_authentication_review_result_request",
            "huaweicloudsdkbssintl.v2.model.show_realname_authentication_review_result_response",
            "huaweicloudsdkbssintl.v2.model.show_refund_order_details_request",
            "huaweicloudsdkbssintl.v2.model.show_refund_order_details_response",
            "huaweicloudsdkbssintl.v2.model.show_sub_customer_budget_request",
            "huaweicloudsdkbssintl.v2.model.show_sub_customer_budget_response",
            "huaweicloudsdkbssintl.v2.model.unfreeze_sub_customers_req",
            "huaweicloudsdkbssintl.v2.model.unfreeze_sub_customers_request",
            "huaweicloudsdkbssintl.v2.model.unfreeze_sub_customers_response",
            "huaweicloudsdkbssintl.v2.model.unsubscribe_resources_req",
            "huaweicloudsdkbssintl.v2.model.update_sub_customer_budget_request",
            "huaweicloudsdkbssintl.v2.model.update_sub_customer_budget_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkcbr": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkcbr",
            "huaweicloudsdkcbr.v1",
            "huaweicloudsdkcbr.v1.cbr_async_client",
            "huaweicloudsdkcbr.v1.cbr_client",
            "huaweicloudsdkcbr.v1.model",
            "huaweicloudsdkcbr.v1.model.add_member_request",
            "huaweicloudsdkcbr.v1.model.add_member_response",
            "huaweicloudsdkcbr.v1.model.add_members_req",
            "huaweicloudsdkcbr.v1.model.add_vault_resource_request",
            "huaweicloudsdkcbr.v1.model.add_vault_resource_response",
            "huaweicloudsdkcbr.v1.model.associate_vault_policy_request",
            "huaweicloudsdkcbr.v1.model.associate_vault_policy_response",
            "huaweicloudsdkcbr.v1.model.backup_detail",
            "huaweicloudsdkcbr.v1.model.backup_extend_info",
            "huaweicloudsdkcbr.v1.model.backup_replicate_req",
            "huaweicloudsdkcbr.v1.model.backup_replicate_req_body",
            "huaweicloudsdkcbr.v1.model.backup_replicate_resp_body",
            "huaweicloudsdkcbr.v1.model.backup_resp",
            "huaweicloudsdkcbr.v1.model.backup_restore",
            "huaweicloudsdkcbr.v1.model.backup_restore_req",
            "huaweicloudsdkcbr.v1.model.backup_restore_server_mapping",
            "huaweicloudsdkcbr.v1.model.backup_sync",
            "huaweicloudsdkcbr.v1.model.backup_sync_req",
            "huaweicloudsdkcbr.v1.model.backup_sync_resp_body",
            "huaweicloudsdkcbr.v1.model.billbing_create_extra_info",
            "huaweicloudsdkcbr.v1.model.billing",
            "huaweicloudsdkcbr.v1.model.billing_create",
            "huaweicloudsdkcbr.v1.model.billing_update",
            "huaweicloudsdkcbr.v1.model.checkpoint_create",
            "huaweicloudsdkcbr.v1.model.checkpoint_create_skipped_resource",
            "huaweicloudsdkcbr.v1.model.checkpoint_extra_info_resp",
            "huaweicloudsdkcbr.v1.model.checkpoint_param",
            "huaweicloudsdkcbr.v1.model.checkpoint_plan_create",
            "huaweicloudsdkcbr.v1.model.checkpoint_replicate_param",
            "huaweicloudsdkcbr.v1.model.checkpoint_replicate_req",
            "huaweicloudsdkcbr.v1.model.checkpoint_replicate_resp_body",
            "huaweicloudsdkcbr.v1.model.checkpoint_replicate_respbackups",
            "huaweicloudsdkcbr.v1.model.checkpoint_resource_resp",
            "huaweicloudsdkcbr.v1.model.copy_backup_request",
            "huaweicloudsdkcbr.v1.model.copy_backup_response",
            "huaweicloudsdkcbr.v1.model.copy_checkpoint_request",
            "huaweicloudsdkcbr.v1.model.copy_checkpoint_response",
            "huaweicloudsdkcbr.v1.model.create_checkpoint_request",
            "huaweicloudsdkcbr.v1.model.create_checkpoint_response",
            "huaweicloudsdkcbr.v1.model.create_policy_request",
            "huaweicloudsdkcbr.v1.model.create_policy_response",
            "huaweicloudsdkcbr.v1.model.create_vault_request",
            "huaweicloudsdkcbr.v1.model.create_vault_response",
            "huaweicloudsdkcbr.v1.model.delete_backup_request",
            "huaweicloudsdkcbr.v1.model.delete_backup_response",
            "huaweicloudsdkcbr.v1.model.delete_member_request",
            "huaweicloudsdkcbr.v1.model.delete_member_response",
            "huaweicloudsdkcbr.v1.model.delete_policy_request",
            "huaweicloudsdkcbr.v1.model.delete_policy_response",
            "huaweicloudsdkcbr.v1.model.delete_vault_request",
            "huaweicloudsdkcbr.v1.model.delete_vault_response",
            "huaweicloudsdkcbr.v1.model.disassociate_vault_policy_request",
            "huaweicloudsdkcbr.v1.model.disassociate_vault_policy_response",
            "huaweicloudsdkcbr.v1.model.import_backup_request",
            "huaweicloudsdkcbr.v1.model.import_backup_response",
            "huaweicloudsdkcbr.v1.model.list_backups_request",
            "huaweicloudsdkcbr.v1.model.list_backups_response",
            "huaweicloudsdkcbr.v1.model.list_op_logs_request",
            "huaweicloudsdkcbr.v1.model.list_op_logs_response",
            "huaweicloudsdkcbr.v1.model.list_policies_request",
            "huaweicloudsdkcbr.v1.model.list_policies_response",
            "huaweicloudsdkcbr.v1.model.list_protectable_request",
            "huaweicloudsdkcbr.v1.model.list_protectable_response",
            "huaweicloudsdkcbr.v1.model.list_vault_request",
            "huaweicloudsdkcbr.v1.model.list_vault_response",
            "huaweicloudsdkcbr.v1.model.member",
            "huaweicloudsdkcbr.v1.model.op_error_info",
            "huaweicloudsdkcbr.v1.model.op_extend_info_bckup",
            "huaweicloudsdkcbr.v1.model.op_extend_info_common",
            "huaweicloudsdkcbr.v1.model.op_extend_info_delete",
            "huaweicloudsdkcbr.v1.model.op_extend_info_remove_resources",
            "huaweicloudsdkcbr.v1.model.op_extend_info_replication",
            "huaweicloudsdkcbr.v1.model.op_extend_info_restore",
            "huaweicloudsdkcbr.v1.model.op_extend_info_sync",
            "huaweicloudsdkcbr.v1.model.op_extend_info_vault_delete",
            "huaweicloudsdkcbr.v1.model.op_extra_info",
            "huaweicloudsdkcbr.v1.model.operation_log",
            "huaweicloudsdkcbr.v1.model.policy",
            "huaweicloudsdkcbr.v1.model.policy_associate_vault",
            "huaweicloudsdkcbr.v1.model.policy_create",
            "huaweicloudsdkcbr.v1.model.policy_create_req",
            "huaweicloudsdkcbr.v1.model.policy_trigger_properties_req",
            "huaweicloudsdkcbr.v1.model.policy_trigger_properties_resp",
            "huaweicloudsdkcbr.v1.model.policy_trigger_req",
            "huaweicloudsdkcbr.v1.model.policy_trigger_resp",
            "huaweicloudsdkcbr.v1.model.policy_update",
            "huaweicloudsdkcbr.v1.model.policy_update_req",
            "huaweicloudsdkcbr.v1.model.policyo_od_create",
            "huaweicloudsdkcbr.v1.model.protectable_replication_capabilities_resp_region",
            "huaweicloudsdkcbr.v1.model.protectable_result",
            "huaweicloudsdkcbr.v1.model.protectables_resp",
            "huaweicloudsdkcbr.v1.model.remove_vault_resource_request",
            "huaweicloudsdkcbr.v1.model.remove_vault_resource_response",
            "huaweicloudsdkcbr.v1.model.replication_record_get",
            "huaweicloudsdkcbr.v1.model.resource",
            "huaweicloudsdkcbr.v1.model.resource_create",
            "huaweicloudsdkcbr.v1.model.resource_extra_info",
            "huaweicloudsdkcbr.v1.model.resource_extra_info_include_volumes",
            "huaweicloudsdkcbr.v1.model.resource_resp",
            "huaweicloudsdkcbr.v1.model.restore_backup_request",
            "huaweicloudsdkcbr.v1.model.restore_backup_response",
            "huaweicloudsdkcbr.v1.model.show_backup_request",
            "huaweicloudsdkcbr.v1.model.show_backup_response",
            "huaweicloudsdkcbr.v1.model.show_checkpoint_request",
            "huaweicloudsdkcbr.v1.model.show_checkpoint_response",
            "huaweicloudsdkcbr.v1.model.show_member_detail_request",
            "huaweicloudsdkcbr.v1.model.show_member_detail_response",
            "huaweicloudsdkcbr.v1.model.show_members_detail_request",
            "huaweicloudsdkcbr.v1.model.show_members_detail_response",
            "huaweicloudsdkcbr.v1.model.show_op_log_request",
            "huaweicloudsdkcbr.v1.model.show_op_log_response",
            "huaweicloudsdkcbr.v1.model.show_policy_request",
            "huaweicloudsdkcbr.v1.model.show_policy_response",
            "huaweicloudsdkcbr.v1.model.show_protectable_request",
            "huaweicloudsdkcbr.v1.model.show_protectable_response",
            "huaweicloudsdkcbr.v1.model.show_replication_capabilities_request",
            "huaweicloudsdkcbr.v1.model.show_replication_capabilities_response",
            "huaweicloudsdkcbr.v1.model.show_vault_request",
            "huaweicloudsdkcbr.v1.model.show_vault_response",
            "huaweicloudsdkcbr.v1.model.sys_tag",
            "huaweicloudsdkcbr.v1.model.tag",
            "huaweicloudsdkcbr.v1.model.tag_resource",
            "huaweicloudsdkcbr.v1.model.tags_resp",
            "huaweicloudsdkcbr.v1.model.update_member",
            "huaweicloudsdkcbr.v1.model.update_member_status_request",
            "huaweicloudsdkcbr.v1.model.update_member_status_response",
            "huaweicloudsdkcbr.v1.model.update_policy_request",
            "huaweicloudsdkcbr.v1.model.update_policy_response",
            "huaweicloudsdkcbr.v1.model.update_vault_request",
            "huaweicloudsdkcbr.v1.model.update_vault_response",
            "huaweicloudsdkcbr.v1.model.vault",
            "huaweicloudsdkcbr.v1.model.vault_add_resource_req",
            "huaweicloudsdkcbr.v1.model.vault_associate",
            "huaweicloudsdkcbr.v1.model.vault_backup",
            "huaweicloudsdkcbr.v1.model.vault_backup_req",
            "huaweicloudsdkcbr.v1.model.vault_bind_rules",
            "huaweicloudsdkcbr.v1.model.vault_create",
            "huaweicloudsdkcbr.v1.model.vault_create_req",
            "huaweicloudsdkcbr.v1.model.vault_dissociate",
            "huaweicloudsdkcbr.v1.model.vault_get",
            "huaweicloudsdkcbr.v1.model.vault_policy_resp",
            "huaweicloudsdkcbr.v1.model.vault_remove_resource_req",
            "huaweicloudsdkcbr.v1.model.vault_resource_intances_resp",
            "huaweicloudsdkcbr.v1.model.vault_update",
            "huaweicloudsdkcbr.v1.model.vault_update_req"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkces": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkces",
            "huaweicloudsdkces.v1",
            "huaweicloudsdkces.v1.ces_async_client",
            "huaweicloudsdkces.v1.ces_client",
            "huaweicloudsdkces.v1.model",
            "huaweicloudsdkces.v1.model.alarm_actions",
            "huaweicloudsdkces.v1.model.batch_list_metric_data_request",
            "huaweicloudsdkces.v1.model.batch_list_metric_data_request_body",
            "huaweicloudsdkces.v1.model.batch_list_metric_data_response",
            "huaweicloudsdkces.v1.model.batch_metric_data",
            "huaweicloudsdkces.v1.model.condition",
            "huaweicloudsdkces.v1.model.create_alarm_request",
            "huaweicloudsdkces.v1.model.create_alarm_request_body",
            "huaweicloudsdkces.v1.model.create_alarm_response",
            "huaweicloudsdkces.v1.model.create_events_request",
            "huaweicloudsdkces.v1.model.create_events_response",
            "huaweicloudsdkces.v1.model.create_events_response_body",
            "huaweicloudsdkces.v1.model.create_metric_data_request",
            "huaweicloudsdkces.v1.model.create_metric_data_response",
            "huaweicloudsdkces.v1.model.datapoint",
            "huaweicloudsdkces.v1.model.datapoint_for_batch_metric",
            "huaweicloudsdkces.v1.model.delete_alarm_request",
            "huaweicloudsdkces.v1.model.delete_alarm_response",
            "huaweicloudsdkces.v1.model.event_data_info",
            "huaweicloudsdkces.v1.model.event_item",
            "huaweicloudsdkces.v1.model.event_item_detail",
            "huaweicloudsdkces.v1.model.list_alarms_request",
            "huaweicloudsdkces.v1.model.list_alarms_response",
            "huaweicloudsdkces.v1.model.list_metrics_request",
            "huaweicloudsdkces.v1.model.list_metrics_response",
            "huaweicloudsdkces.v1.model.meta_data",
            "huaweicloudsdkces.v1.model.metric_alarms",
            "huaweicloudsdkces.v1.model.metric_data_item",
            "huaweicloudsdkces.v1.model.metric_info",
            "huaweicloudsdkces.v1.model.metric_info_ext",
            "huaweicloudsdkces.v1.model.metric_info_list",
            "huaweicloudsdkces.v1.model.metrics_dimension",
            "huaweicloudsdkces.v1.model.modify_alarm_action_req",
            "huaweicloudsdkces.v1.model.quotas",
            "huaweicloudsdkces.v1.model.resource",
            "huaweicloudsdkces.v1.model.show_alarm_request",
            "huaweicloudsdkces.v1.model.show_alarm_response",
            "huaweicloudsdkces.v1.model.show_event_data_request",
            "huaweicloudsdkces.v1.model.show_event_data_response",
            "huaweicloudsdkces.v1.model.show_metric_data_request",
            "huaweicloudsdkces.v1.model.show_metric_data_response",
            "huaweicloudsdkces.v1.model.show_quotas_request",
            "huaweicloudsdkces.v1.model.show_quotas_response",
            "huaweicloudsdkces.v1.model.update_alarm_action_request",
            "huaweicloudsdkces.v1.model.update_alarm_action_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkclassroom": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkclassroom",
            "huaweicloudsdkclassroom.v3",
            "huaweicloudsdkclassroom.v3.classroom_async_client",
            "huaweicloudsdkclassroom.v3.classroom_client",
            "huaweicloudsdkclassroom.v3.model",
            "huaweicloudsdkclassroom.v3.model.classroom_card",
            "huaweicloudsdkclassroom.v3.model.classroom_member",
            "huaweicloudsdkclassroom.v3.model.exercise_card",
            "huaweicloudsdkclassroom.v3.model.exercise_group",
            "huaweicloudsdkclassroom.v3.model.job_card",
            "huaweicloudsdkclassroom.v3.model.job_records",
            "huaweicloudsdkclassroom.v3.model.list_classroom_member_jobs_request",
            "huaweicloudsdkclassroom.v3.model.list_classroom_member_jobs_response",
            "huaweicloudsdkclassroom.v3.model.list_classroom_members_request",
            "huaweicloudsdkclassroom.v3.model.list_classroom_members_response",
            "huaweicloudsdkclassroom.v3.model.list_classrooms_request",
            "huaweicloudsdkclassroom.v3.model.list_classrooms_response",
            "huaweicloudsdkclassroom.v3.model.list_jobs_request",
            "huaweicloudsdkclassroom.v3.model.list_jobs_response",
            "huaweicloudsdkclassroom.v3.model.list_member_job_records_request",
            "huaweicloudsdkclassroom.v3.model.list_member_job_records_response",
            "huaweicloudsdkclassroom.v3.model.member_job_card",
            "huaweicloudsdkclassroom.v3.model.show_classroom_detail_request",
            "huaweicloudsdkclassroom.v3.model.show_classroom_detail_response",
            "huaweicloudsdkclassroom.v3.model.show_job_detail_request",
            "huaweicloudsdkclassroom.v3.model.show_job_detail_response",
            "huaweicloudsdkclassroom.v3.model.show_job_exercises_request",
            "huaweicloudsdkclassroom.v3.model.show_job_exercises_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkcloudide": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkcloudide",
            "huaweicloudsdkcloudide.v2",
            "huaweicloudsdkcloudide.v2.cloudide_async_client",
            "huaweicloudsdkcloudide.v2.cloudide_client",
            "huaweicloudsdkcloudide.v2.model",
            "huaweicloudsdkcloudide.v2.model.attributes",
            "huaweicloudsdkcloudide.v2.model.check_name_request",
            "huaweicloudsdkcloudide.v2.model.check_name_response",
            "huaweicloudsdkcloudide.v2.model.create_instance_by3rd_request",
            "huaweicloudsdkcloudide.v2.model.create_instance_by3rd_response",
            "huaweicloudsdkcloudide.v2.model.create_instance_request",
            "huaweicloudsdkcloudide.v2.model.create_instance_response",
            "huaweicloudsdkcloudide.v2.model.delete_instance_request",
            "huaweicloudsdkcloudide.v2.model.delete_instance_response",
            "huaweicloudsdkcloudide.v2.model.instance_edge_param",
            "huaweicloudsdkcloudide.v2.model.instance_param",
            "huaweicloudsdkcloudide.v2.model.instance_update_param",
            "huaweicloudsdkcloudide.v2.model.instances_vo",
            "huaweicloudsdkcloudide.v2.model.list_instances_request",
            "huaweicloudsdkcloudide.v2.model.list_instances_response",
            "huaweicloudsdkcloudide.v2.model.list_org_instances_request",
            "huaweicloudsdkcloudide.v2.model.list_org_instances_response",
            "huaweicloudsdkcloudide.v2.model.list_project_templates_request",
            "huaweicloudsdkcloudide.v2.model.list_project_templates_response",
            "huaweicloudsdkcloudide.v2.model.list_stacks_by_tag_request",
            "huaweicloudsdkcloudide.v2.model.list_stacks_by_tag_response",
            "huaweicloudsdkcloudide.v2.model.page_instances_vo",
            "huaweicloudsdkcloudide.v2.model.plugin",
            "huaweicloudsdkcloudide.v2.model.project_templates",
            "huaweicloudsdkcloudide.v2.model.recipe",
            "huaweicloudsdkcloudide.v2.model.resource_price",
            "huaweicloudsdkcloudide.v2.model.role",
            "huaweicloudsdkcloudide.v2.model.role_action",
            "huaweicloudsdkcloudide.v2.model.show_instance_request",
            "huaweicloudsdkcloudide.v2.model.show_instance_response",
            "huaweicloudsdkcloudide.v2.model.show_price_request",
            "huaweicloudsdkcloudide.v2.model.show_price_response",
            "huaweicloudsdkcloudide.v2.model.source_storage",
            "huaweicloudsdkcloudide.v2.model.stacks",
            "huaweicloudsdkcloudide.v2.model.stacks_attribute",
            "huaweicloudsdkcloudide.v2.model.stacks_config",
            "huaweicloudsdkcloudide.v2.model.stacks_tag",
            "huaweicloudsdkcloudide.v2.model.start_instance_request",
            "huaweicloudsdkcloudide.v2.model.start_instance_response",
            "huaweicloudsdkcloudide.v2.model.stop_instance_request",
            "huaweicloudsdkcloudide.v2.model.stop_instance_response",
            "huaweicloudsdkcloudide.v2.model.update_instance_request",
            "huaweicloudsdkcloudide.v2.model.update_instance_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkcloudpipeline": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkcloudpipeline",
            "huaweicloudsdkcloudpipeline.v2",
            "huaweicloudsdkcloudpipeline.v2.devcloudpipeline_async_client",
            "huaweicloudsdkcloudpipeline.v2.devcloudpipeline_client",
            "huaweicloudsdkcloudpipeline.v2.model",
            "huaweicloudsdkcloudpipeline.v2.model.batch_show_pipelines_status_request",
            "huaweicloudsdkcloudpipeline.v2.model.batch_show_pipelines_status_response",
            "huaweicloudsdkcloudpipeline.v2.model.constraint",
            "huaweicloudsdkcloudpipeline.v2.model.create_pipeline_by_template_request",
            "huaweicloudsdkcloudpipeline.v2.model.create_pipeline_by_template_response",
            "huaweicloudsdkcloudpipeline.v2.model.extended_props",
            "huaweicloudsdkcloudpipeline.v2.model.flow_item",
            "huaweicloudsdkcloudpipeline.v2.model.list_templates_request",
            "huaweicloudsdkcloudpipeline.v2.model.list_templates_response",
            "huaweicloudsdkcloudpipeline.v2.model.param_type_limits",
            "huaweicloudsdkcloudpipeline.v2.model.pipeline_param",
            "huaweicloudsdkcloudpipeline.v2.model.pipeline_parameter",
            "huaweicloudsdkcloudpipeline.v2.model.pipeline_state_status",
            "huaweicloudsdkcloudpipeline.v2.model.register_agent_request",
            "huaweicloudsdkcloudpipeline.v2.model.register_agent_response",
            "huaweicloudsdkcloudpipeline.v2.model.remove_pipeline_request",
            "huaweicloudsdkcloudpipeline.v2.model.remove_pipeline_response",
            "huaweicloudsdkcloudpipeline.v2.model.show_agent_status_request",
            "huaweicloudsdkcloudpipeline.v2.model.show_agent_status_response",
            "huaweicloudsdkcloudpipeline.v2.model.show_instance_status_request",
            "huaweicloudsdkcloudpipeline.v2.model.show_instance_status_response",
            "huaweicloudsdkcloudpipeline.v2.model.show_pipleine_status_request",
            "huaweicloudsdkcloudpipeline.v2.model.show_pipleine_status_response",
            "huaweicloudsdkcloudpipeline.v2.model.show_template_detail_request",
            "huaweicloudsdkcloudpipeline.v2.model.show_template_detail_response",
            "huaweicloudsdkcloudpipeline.v2.model.slave_register",
            "huaweicloudsdkcloudpipeline.v2.model.source",
            "huaweicloudsdkcloudpipeline.v2.model.stages",
            "huaweicloudsdkcloudpipeline.v2.model.start_new_pipeline_request",
            "huaweicloudsdkcloudpipeline.v2.model.start_new_pipeline_response",
            "huaweicloudsdkcloudpipeline.v2.model.start_pipeline_build_params",
            "huaweicloudsdkcloudpipeline.v2.model.start_pipeline_parameters",
            "huaweicloudsdkcloudpipeline.v2.model.start_pipeline_request",
            "huaweicloudsdkcloudpipeline.v2.model.start_pipeline_response",
            "huaweicloudsdkcloudpipeline.v2.model.state_item",
            "huaweicloudsdkcloudpipeline.v2.model.stop_pipeline_request",
            "huaweicloudsdkcloudpipeline.v2.model.stop_pipeline_response",
            "huaweicloudsdkcloudpipeline.v2.model.template_cddl",
            "huaweicloudsdkcloudpipeline.v2.model.template_param",
            "huaweicloudsdkcloudpipeline.v2.model.template_state",
            "huaweicloudsdkcloudpipeline.v2.model.template_view",
            "huaweicloudsdkcloudpipeline.v2.model.workflow"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkcloudtest": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkcloudtest",
            "huaweicloudsdkcloudtest.v1",
            "huaweicloudsdkcloudtest.v1.cloudtest_async_client",
            "huaweicloudsdkcloudtest.v1.cloudtest_client",
            "huaweicloudsdkcloudtest.v1.model",
            "huaweicloudsdkcloudtest.v1.model.assigned_user_info",
            "huaweicloudsdkcloudtest.v1.model.batch_delete_test_case_request",
            "huaweicloudsdkcloudtest.v1.model.batch_delete_test_case_request_body",
            "huaweicloudsdkcloudtest.v1.model.batch_delete_test_case_response",
            "huaweicloudsdkcloudtest.v1.model.create_plan_request",
            "huaweicloudsdkcloudtest.v1.model.create_plan_request_body",
            "huaweicloudsdkcloudtest.v1.model.create_plan_response",
            "huaweicloudsdkcloudtest.v1.model.create_service_request",
            "huaweicloudsdkcloudtest.v1.model.create_service_response",
            "huaweicloudsdkcloudtest.v1.model.create_test_case_in_plan_request",
            "huaweicloudsdkcloudtest.v1.model.create_test_case_in_plan_request_body",
            "huaweicloudsdkcloudtest.v1.model.create_test_case_in_plan_response",
            "huaweicloudsdkcloudtest.v1.model.create_test_case_request",
            "huaweicloudsdkcloudtest.v1.model.create_test_case_request_body",
            "huaweicloudsdkcloudtest.v1.model.create_test_case_response",
            "huaweicloudsdkcloudtest.v1.model.delete_service_request",
            "huaweicloudsdkcloudtest.v1.model.delete_service_response",
            "huaweicloudsdkcloudtest.v1.model.error_case_info_bean",
            "huaweicloudsdkcloudtest.v1.model.error_detail_info",
            "huaweicloudsdkcloudtest.v1.model.extend_author_info",
            "huaweicloudsdkcloudtest.v1.model.extend_info",
            "huaweicloudsdkcloudtest.v1.model.external_service_biz_case",
            "huaweicloudsdkcloudtest.v1.model.external_service_case_info",
            "huaweicloudsdkcloudtest.v1.model.external_service_case_step",
            "huaweicloudsdkcloudtest.v1.model.plan_cycle",
            "huaweicloudsdkcloudtest.v1.model.run_test_case_request",
            "huaweicloudsdkcloudtest.v1.model.run_test_case_request_body",
            "huaweicloudsdkcloudtest.v1.model.run_test_case_response",
            "huaweicloudsdkcloudtest.v1.model.service_request_body",
            "huaweicloudsdkcloudtest.v1.model.services_info",
            "huaweicloudsdkcloudtest.v1.model.show_register_service_request",
            "huaweicloudsdkcloudtest.v1.model.show_register_service_response",
            "huaweicloudsdkcloudtest.v1.model.show_test_case_detail_request",
            "huaweicloudsdkcloudtest.v1.model.show_test_case_detail_response",
            "huaweicloudsdkcloudtest.v1.model.show_test_case_detail_v2_request",
            "huaweicloudsdkcloudtest.v1.model.show_test_case_detail_v2_response",
            "huaweicloudsdkcloudtest.v1.model.test_case_execute_bean",
            "huaweicloudsdkcloudtest.v1.model.update_service_request",
            "huaweicloudsdkcloudtest.v1.model.update_service_response",
            "huaweicloudsdkcloudtest.v1.model.update_test_case_request",
            "huaweicloudsdkcloudtest.v1.model.update_test_case_request_body",
            "huaweicloudsdkcloudtest.v1.model.update_test_case_response",
            "huaweicloudsdkcloudtest.v1.model.update_test_case_result_bean",
            "huaweicloudsdkcloudtest.v1.model.update_test_case_result_request",
            "huaweicloudsdkcloudtest.v1.model.update_test_case_result_request_body",
            "huaweicloudsdkcloudtest.v1.model.update_test_case_result_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkcore": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkcore",
            "huaweicloudsdkcore.auth",
            "huaweicloudsdkcore.auth.credentials",
            "huaweicloudsdkcore.client",
            "huaweicloudsdkcore.exceptions",
            "huaweicloudsdkcore.exceptions.exceptions",
            "huaweicloudsdkcore.http",
            "huaweicloudsdkcore.http.http_client",
            "huaweicloudsdkcore.http.http_config",
            "huaweicloudsdkcore.http.http_handler",
            "huaweicloudsdkcore.http.primitive_types",
            "huaweicloudsdkcore.sdk_request",
            "huaweicloudsdkcore.sdk_response",
            "huaweicloudsdkcore.sdk_stream_request",
            "huaweicloudsdkcore.sdk_stream_response",
            "huaweicloudsdkcore.signer",
            "huaweicloudsdkcore.signer.signer",
            "huaweicloudsdkcore.utils",
            "huaweicloudsdkcore.utils.core_utils",
            "huaweicloudsdkcore.utils.http_utils",
            "huaweicloudsdkcore.utils.string_utils",
            "tests",
            "tests.model",
            "tests.model.vpc",
            "tests.model.vpc.list_vpcs_response",
            "tests.test_client_build",
            "tests.test_request_and_exceptions",
            "tests.test_signer",
            "tests.test_upload_download"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkcts": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkcts",
            "huaweicloudsdkcts.v3",
            "huaweicloudsdkcts.v3.cts_async_client",
            "huaweicloudsdkcts.v3.cts_client",
            "huaweicloudsdkcts.v3.model",
            "huaweicloudsdkcts.v3.model.base_user",
            "huaweicloudsdkcts.v3.model.create_tracker_request",
            "huaweicloudsdkcts.v3.model.create_tracker_request_body",
            "huaweicloudsdkcts.v3.model.create_tracker_response",
            "huaweicloudsdkcts.v3.model.data_bucket",
            "huaweicloudsdkcts.v3.model.data_bucket_query",
            "huaweicloudsdkcts.v3.model.delete_tracker_request",
            "huaweicloudsdkcts.v3.model.delete_tracker_response",
            "huaweicloudsdkcts.v3.model.list_traces_request",
            "huaweicloudsdkcts.v3.model.list_traces_response",
            "huaweicloudsdkcts.v3.model.list_trackers_request",
            "huaweicloudsdkcts.v3.model.list_trackers_response",
            "huaweicloudsdkcts.v3.model.lts",
            "huaweicloudsdkcts.v3.model.meta_data",
            "huaweicloudsdkcts.v3.model.obs_info",
            "huaweicloudsdkcts.v3.model.traces",
            "huaweicloudsdkcts.v3.model.tracker_obs_info",
            "huaweicloudsdkcts.v3.model.tracker_response_body",
            "huaweicloudsdkcts.v3.model.update_tracker_request",
            "huaweicloudsdkcts.v3.model.update_tracker_request_body",
            "huaweicloudsdkcts.v3.model.update_tracker_response",
            "huaweicloudsdkcts.v3.model.user_info"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkdcs": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkdcs",
            "huaweicloudsdkdcs.v2",
            "huaweicloudsdkdcs.v2.dcs_async_client",
            "huaweicloudsdkdcs.v2.dcs_client",
            "huaweicloudsdkdcs.v2.model",
            "huaweicloudsdkdcs.v2.model.add_replication_body",
            "huaweicloudsdkdcs.v2.model.attrs_object",
            "huaweicloudsdkdcs.v2.model.available_zones",
            "huaweicloudsdkdcs.v2.model.backup_files_body",
            "huaweicloudsdkdcs.v2.model.backup_instance_body",
            "huaweicloudsdkdcs.v2.model.backup_plan",
            "huaweicloudsdkdcs.v2.model.backup_policy",
            "huaweicloudsdkdcs.v2.model.backup_record_response",
            "huaweicloudsdkdcs.v2.model.batch_create_or_delete_dcs_tags_request",
            "huaweicloudsdkdcs.v2.model.batch_create_or_delete_dcs_tags_response",
            "huaweicloudsdkdcs.v2.model.batch_delete_body",
            "huaweicloudsdkdcs.v2.model.batch_delete_dcs_instances_request",
            "huaweicloudsdkdcs.v2.model.batch_delete_dcs_instances_response",
            "huaweicloudsdkdcs.v2.model.batch_ops_result",
            "huaweicloudsdkdcs.v2.model.bss_param",
            "huaweicloudsdkdcs.v2.model.change_instance_status_body",
            "huaweicloudsdkdcs.v2.model.cluster_redis_node_monitored_object",
            "huaweicloudsdkdcs.v2.model.copy_instance_request",
            "huaweicloudsdkdcs.v2.model.copy_instance_response",
            "huaweicloudsdkdcs.v2.model.create_dcs_instance_request",
            "huaweicloudsdkdcs.v2.model.create_dcs_instance_response",
            "huaweicloudsdkdcs.v2.model.create_instance_body",
            "huaweicloudsdkdcs.v2.model.create_migration_task_body",
            "huaweicloudsdkdcs.v2.model.create_migration_task_request",
            "huaweicloudsdkdcs.v2.model.create_migration_task_response",
            "huaweicloudsdkdcs.v2.model.create_or_delete_instance_tags",
            "huaweicloudsdkdcs.v2.model.create_replication_request",
            "huaweicloudsdkdcs.v2.model.create_replication_response",
            "huaweicloudsdkdcs.v2.model.delete_backup_file_request",
            "huaweicloudsdkdcs.v2.model.delete_backup_file_response",
            "huaweicloudsdkdcs.v2.model.delete_ip_from_domain_name_request",
            "huaweicloudsdkdcs.v2.model.delete_ip_from_domain_name_response",
            "huaweicloudsdkdcs.v2.model.delete_migrate_task_request",
            "huaweicloudsdkdcs.v2.model.delete_migration_task_request",
            "huaweicloudsdkdcs.v2.model.delete_migration_task_response",
            "huaweicloudsdkdcs.v2.model.delete_replication_request",
            "huaweicloudsdkdcs.v2.model.delete_replication_response",
            "huaweicloudsdkdcs.v2.model.delete_single_dcs_instance_request",
            "huaweicloudsdkdcs.v2.model.delete_single_dcs_instance_response",
            "huaweicloudsdkdcs.v2.model.dim_child",
            "huaweicloudsdkdcs.v2.model.download_backup_files_req",
            "huaweicloudsdkdcs.v2.model.files",
            "huaweicloudsdkdcs.v2.model.flavor_az_object",
            "huaweicloudsdkdcs.v2.model.flavors_items",
            "huaweicloudsdkdcs.v2.model.instance_group_list_info",
            "huaweicloudsdkdcs.v2.model.instance_replication_list_info",
            "huaweicloudsdkdcs.v2.model.instance_restore_info",
            "huaweicloudsdkdcs.v2.model.instance_statistic",
            "huaweicloudsdkdcs.v2.model.instances",
            "huaweicloudsdkdcs.v2.model.instances_monitored_object",
            "huaweicloudsdkdcs.v2.model.links_item",
            "huaweicloudsdkdcs.v2.model.list_available_zones_request",
            "huaweicloudsdkdcs.v2.model.list_available_zones_response",
            "huaweicloudsdkdcs.v2.model.list_backup_file_links_request",
            "huaweicloudsdkdcs.v2.model.list_backup_file_links_response",
            "huaweicloudsdkdcs.v2.model.list_backup_records_request",
            "huaweicloudsdkdcs.v2.model.list_backup_records_response",
            "huaweicloudsdkdcs.v2.model.list_ces_monitored_objects_request",
            "huaweicloudsdkdcs.v2.model.list_ces_monitored_objects_response",
            "huaweicloudsdkdcs.v2.model.list_configurations_request",
            "huaweicloudsdkdcs.v2.model.list_configurations_response",
            "huaweicloudsdkdcs.v2.model.list_dcs_tags_of_tenant_request",
            "huaweicloudsdkdcs.v2.model.list_dcs_tags_of_tenant_response",
            "huaweicloudsdkdcs.v2.model.list_flavors_request",
            "huaweicloudsdkdcs.v2.model.list_flavors_response",
            "huaweicloudsdkdcs.v2.model.list_group_replication_info_request",
            "huaweicloudsdkdcs.v2.model.list_group_replication_info_response",
            "huaweicloudsdkdcs.v2.model.list_maintenance_windows_request",
            "huaweicloudsdkdcs.v2.model.list_maintenance_windows_response",
            "huaweicloudsdkdcs.v2.model.list_migration_task_request",
            "huaweicloudsdkdcs.v2.model.list_migration_task_response",
            "huaweicloudsdkdcs.v2.model.list_monitored_objects_of_instance_request",
            "huaweicloudsdkdcs.v2.model.list_monitored_objects_of_instance_response",
            "huaweicloudsdkdcs.v2.model.list_number_of_instances_in_different_status_request",
            "huaweicloudsdkdcs.v2.model.list_number_of_instances_in_different_status_response",
            "huaweicloudsdkdcs.v2.model.list_restore_records_request",
            "huaweicloudsdkdcs.v2.model.list_restore_records_response",
            "huaweicloudsdkdcs.v2.model.list_statistics_of_running_instances_request",
            "huaweicloudsdkdcs.v2.model.list_statistics_of_running_instances_response",
            "huaweicloudsdkdcs.v2.model.maintain_windows",
            "huaweicloudsdkdcs.v2.model.migration_task_list",
            "huaweicloudsdkdcs.v2.model.modify_instance_body",
            "huaweicloudsdkdcs.v2.model.modify_instance_password_body",
            "huaweicloudsdkdcs.v2.model.modify_ip_whitelist_body",
            "huaweicloudsdkdcs.v2.model.modify_redis_config_body",
            "huaweicloudsdkdcs.v2.model.priority_body",
            "huaweicloudsdkdcs.v2.model.proxy_node_monitored_object",
            "huaweicloudsdkdcs.v2.model.query_redis_config",
            "huaweicloudsdkdcs.v2.model.query_tenant_quota_resp_quotas",
            "huaweicloudsdkdcs.v2.model.redis_config",
            "huaweicloudsdkdcs.v2.model.resource_tag",
            "huaweicloudsdkdcs.v2.model.resources",
            "huaweicloudsdkdcs.v2.model.restart_or_flush_dcs_instances_request",
            "huaweicloudsdkdcs.v2.model.restart_or_flush_dcs_instances_response",
            "huaweicloudsdkdcs.v2.model.restore_instance_body",
            "huaweicloudsdkdcs.v2.model.restore_instance_request",
            "huaweicloudsdkdcs.v2.model.restore_instance_response",
            "huaweicloudsdkdcs.v2.model.show_dcs_tags_request",
            "huaweicloudsdkdcs.v2.model.show_dcs_tags_response",
            "huaweicloudsdkdcs.v2.model.show_ip_whitelist_request",
            "huaweicloudsdkdcs.v2.model.show_ip_whitelist_response",
            "huaweicloudsdkdcs.v2.model.show_migration_task_request",
            "huaweicloudsdkdcs.v2.model.show_migration_task_response",
            "huaweicloudsdkdcs.v2.model.show_quota_of_tenant_request",
            "huaweicloudsdkdcs.v2.model.show_quota_of_tenant_response",
            "huaweicloudsdkdcs.v2.model.source_instance_body",
            "huaweicloudsdkdcs.v2.model.status_statistic",
            "huaweicloudsdkdcs.v2.model.stop_migration_task_request",
            "huaweicloudsdkdcs.v2.model.stop_migration_task_response",
            "huaweicloudsdkdcs.v2.model.tag",
            "huaweicloudsdkdcs.v2.model.target_instance_body",
            "huaweicloudsdkdcs.v2.model.update_configurations_request",
            "huaweicloudsdkdcs.v2.model.update_configurations_response",
            "huaweicloudsdkdcs.v2.model.update_dcs_instance_request",
            "huaweicloudsdkdcs.v2.model.update_dcs_instance_response",
            "huaweicloudsdkdcs.v2.model.update_ip_whitelist_request",
            "huaweicloudsdkdcs.v2.model.update_ip_whitelist_response",
            "huaweicloudsdkdcs.v2.model.update_password_request",
            "huaweicloudsdkdcs.v2.model.update_password_response",
            "huaweicloudsdkdcs.v2.model.update_slave_priority_request",
            "huaweicloudsdkdcs.v2.model.update_slave_priority_response",
            "huaweicloudsdkdcs.v2.model.whitelist"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkdds": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkdds",
            "huaweicloudsdkdds.v3",
            "huaweicloudsdkdds.v3.dds_async_client",
            "huaweicloudsdkdds.v3.dds_client",
            "huaweicloudsdkdds.v3.model",
            "huaweicloudsdkdds.v3.model.add_sharding_node_request",
            "huaweicloudsdkdds.v3.model.add_sharding_node_request_body",
            "huaweicloudsdkdds.v3.model.add_sharding_node_response",
            "huaweicloudsdkdds.v3.model.add_sharding_node_volume_option",
            "huaweicloudsdkdds.v3.model.batch_create_instance_tags_option",
            "huaweicloudsdkdds.v3.model.batch_create_instance_tags_request",
            "huaweicloudsdkdds.v3.model.batch_create_instance_tags_request_body",
            "huaweicloudsdkdds.v3.model.batch_create_instance_tags_response",
            "huaweicloudsdkdds.v3.model.batch_delete_instance_tags_option",
            "huaweicloudsdkdds.v3.model.batch_delete_instance_tags_request",
            "huaweicloudsdkdds.v3.model.batch_delete_instance_tags_request_body",
            "huaweicloudsdkdds.v3.model.batch_delete_instance_tags_response",
            "huaweicloudsdkdds.v3.model.create_instance_backup_strategy_option",
            "huaweicloudsdkdds.v3.model.create_instance_backup_strategy_result",
            "huaweicloudsdkdds.v3.model.create_instance_datastore_option",
            "huaweicloudsdkdds.v3.model.create_instance_datastore_result",
            "huaweicloudsdkdds.v3.model.create_instance_flavor_option",
            "huaweicloudsdkdds.v3.model.create_instance_flavor_result",
            "huaweicloudsdkdds.v3.model.create_instance_request",
            "huaweicloudsdkdds.v3.model.create_instance_request_body",
            "huaweicloudsdkdds.v3.model.create_instance_response",
            "huaweicloudsdkdds.v3.model.create_instance_storage_option",
            "huaweicloudsdkdds.v3.model.create_instance_storage_result",
            "huaweicloudsdkdds.v3.model.create_manual_backup_option",
            "huaweicloudsdkdds.v3.model.create_manual_backup_request",
            "huaweicloudsdkdds.v3.model.create_manual_backup_request_body",
            "huaweicloudsdkdds.v3.model.create_manual_backup_response",
            "huaweicloudsdkdds.v3.model.delete_instance_request",
            "huaweicloudsdkdds.v3.model.delete_instance_response",
            "huaweicloudsdkdds.v3.model.delete_manual_backup_request",
            "huaweicloudsdkdds.v3.model.delete_manual_backup_response",
            "huaweicloudsdkdds.v3.model.list_backups_datastore_result",
            "huaweicloudsdkdds.v3.model.list_backups_request",
            "huaweicloudsdkdds.v3.model.list_backups_response",
            "huaweicloudsdkdds.v3.model.list_backups_result",
            "huaweicloudsdkdds.v3.model.list_datastore_versions_request",
            "huaweicloudsdkdds.v3.model.list_datastore_versions_response",
            "huaweicloudsdkdds.v3.model.list_flavors_request",
            "huaweicloudsdkdds.v3.model.list_flavors_response",
            "huaweicloudsdkdds.v3.model.list_flavors_result",
            "huaweicloudsdkdds.v3.model.list_instance_tags_request",
            "huaweicloudsdkdds.v3.model.list_instance_tags_response",
            "huaweicloudsdkdds.v3.model.list_instance_tags_result",
            "huaweicloudsdkdds.v3.model.list_instances_backup_strategy_result",
            "huaweicloudsdkdds.v3.model.list_instances_by_tags_request",
            "huaweicloudsdkdds.v3.model.list_instances_by_tags_request_body",
            "huaweicloudsdkdds.v3.model.list_instances_by_tags_response",
            "huaweicloudsdkdds.v3.model.list_instances_by_tags_result",
            "huaweicloudsdkdds.v3.model.list_instances_datastore_result",
            "huaweicloudsdkdds.v3.model.list_instances_group_result",
            "huaweicloudsdkdds.v3.model.list_instances_node_result",
            "huaweicloudsdkdds.v3.model.list_instances_request",
            "huaweicloudsdkdds.v3.model.list_instances_response",
            "huaweicloudsdkdds.v3.model.list_instances_result",
            "huaweicloudsdkdds.v3.model.list_instances_storage_result",
            "huaweicloudsdkdds.v3.model.list_instances_tag_option",
            "huaweicloudsdkdds.v3.model.list_instances_tag_result",
            "huaweicloudsdkdds.v3.model.list_instances_volume_result",
            "huaweicloudsdkdds.v3.model.list_project_tags_request",
            "huaweicloudsdkdds.v3.model.list_project_tags_response",
            "huaweicloudsdkdds.v3.model.list_project_tags_result",
            "huaweicloudsdkdds.v3.model.match",
            "huaweicloudsdkdds.v3.model.resize_instance_option",
            "huaweicloudsdkdds.v3.model.resize_instance_request",
            "huaweicloudsdkdds.v3.model.resize_instance_request_body",
            "huaweicloudsdkdds.v3.model.resize_instance_response",
            "huaweicloudsdkdds.v3.model.resize_instance_volume_option",
            "huaweicloudsdkdds.v3.model.resize_instance_volume_request",
            "huaweicloudsdkdds.v3.model.resize_instance_volume_request_body",
            "huaweicloudsdkdds.v3.model.resize_instance_volume_response",
            "huaweicloudsdkdds.v3.model.restart_instance_request",
            "huaweicloudsdkdds.v3.model.restart_instance_request_body",
            "huaweicloudsdkdds.v3.model.restart_instance_response",
            "huaweicloudsdkdds.v3.model.set_backup_policy_option",
            "huaweicloudsdkdds.v3.model.set_backup_policy_request",
            "huaweicloudsdkdds.v3.model.set_backup_policy_request_body",
            "huaweicloudsdkdds.v3.model.set_backup_policy_response",
            "huaweicloudsdkdds.v3.model.show_backup_policy_request",
            "huaweicloudsdkdds.v3.model.show_backup_policy_response",
            "huaweicloudsdkdds.v3.model.show_backup_policy_result"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkdevstar": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkdevstar",
            "huaweicloudsdkdevstar.v1",
            "huaweicloudsdkdevstar.v1.devstar_async_client",
            "huaweicloudsdkdevstar.v1.devstar_client",
            "huaweicloudsdkdevstar.v1.model",
            "huaweicloudsdkdevstar.v1.model.download_application_code_request",
            "huaweicloudsdkdevstar.v1.model.download_application_code_response",
            "huaweicloudsdkdevstar.v1.model.list_published_templates_request",
            "huaweicloudsdkdevstar.v1.model.list_published_templates_response",
            "huaweicloudsdkdevstar.v1.model.properties_info",
            "huaweicloudsdkdevstar.v1.model.repository_info",
            "huaweicloudsdkdevstar.v1.model.run_devstar_template_job_request",
            "huaweicloudsdkdevstar.v1.model.run_devstar_template_job_response",
            "huaweicloudsdkdevstar.v1.model.show_job_detail_request",
            "huaweicloudsdkdevstar.v1.model.show_job_detail_response",
            "huaweicloudsdkdevstar.v1.model.show_template_detail_request",
            "huaweicloudsdkdevstar.v1.model.show_template_detail_response",
            "huaweicloudsdkdevstar.v1.model.template_job_info",
            "huaweicloudsdkdevstar.v1.model.template_simple_info"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkdms": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkdms",
            "huaweicloudsdkdms.v2",
            "huaweicloudsdkdms.v2.dms_async_client",
            "huaweicloudsdkdms.v2.dms_client",
            "huaweicloudsdkdms.v2.model",
            "huaweicloudsdkdms.v2.model.batch_create_or_delete_queue_tag_request",
            "huaweicloudsdkdms.v2.model.batch_create_or_delete_queue_tag_response",
            "huaweicloudsdkdms.v2.model.batch_create_or_delete_tag_req",
            "huaweicloudsdkdms.v2.model.batch_create_or_delete_tag_req_tags",
            "huaweicloudsdkdms.v2.model.confirm_consumption_messages_req",
            "huaweicloudsdkdms.v2.model.confirm_consumption_messages_request",
            "huaweicloudsdkdms.v2.model.confirm_consumption_messages_response",
            "huaweicloudsdkdms.v2.model.confirm_dead_letters_messages_req",
            "huaweicloudsdkdms.v2.model.confirm_dead_letters_messages_req_message",
            "huaweicloudsdkdms.v2.model.confirm_dead_letters_messages_request",
            "huaweicloudsdkdms.v2.model.confirm_dead_letters_messages_response",
            "huaweicloudsdkdms.v2.model.consume_deadletters_message",
            "huaweicloudsdkdms.v2.model.consume_deadletters_message_message",
            "huaweicloudsdkdms.v2.model.consume_deadletters_message_request",
            "huaweicloudsdkdms.v2.model.consume_deadletters_message_response",
            "huaweicloudsdkdms.v2.model.consume_message",
            "huaweicloudsdkdms.v2.model.consume_message_message",
            "huaweicloudsdkdms.v2.model.consume_messages_request",
            "huaweicloudsdkdms.v2.model.consume_messages_response",
            "huaweicloudsdkdms.v2.model.create_consumer_group_req",
            "huaweicloudsdkdms.v2.model.create_consumer_group_request",
            "huaweicloudsdkdms.v2.model.create_consumer_group_resp_groups",
            "huaweicloudsdkdms.v2.model.create_consumer_group_response",
            "huaweicloudsdkdms.v2.model.create_queue_req",
            "huaweicloudsdkdms.v2.model.create_queue_request",
            "huaweicloudsdkdms.v2.model.create_queue_response",
            "huaweicloudsdkdms.v2.model.delete_queue_request",
            "huaweicloudsdkdms.v2.model.delete_queue_response",
            "huaweicloudsdkdms.v2.model.delete_specified_consumer_group_request",
            "huaweicloudsdkdms.v2.model.delete_specified_consumer_group_response",
            "huaweicloudsdkdms.v2.model.group_entity",
            "huaweicloudsdkdms.v2.model.list_consumer_groups_request",
            "huaweicloudsdkdms.v2.model.list_consumer_groups_response",
            "huaweicloudsdkdms.v2.model.list_queue_groups_resp_groups",
            "huaweicloudsdkdms.v2.model.list_queues_request",
            "huaweicloudsdkdms.v2.model.list_queues_resp_queues",
            "huaweicloudsdkdms.v2.model.list_queues_response",
            "huaweicloudsdkdms.v2.model.send_message_entity",
            "huaweicloudsdkdms.v2.model.send_messages_req",
            "huaweicloudsdkdms.v2.model.send_messages_request",
            "huaweicloudsdkdms.v2.model.send_messages_resp_messages",
            "huaweicloudsdkdms.v2.model.send_messages_response",
            "huaweicloudsdkdms.v2.model.show_project_tags_request",
            "huaweicloudsdkdms.v2.model.show_project_tags_resp_tags",
            "huaweicloudsdkdms.v2.model.show_project_tags_response",
            "huaweicloudsdkdms.v2.model.show_queue_request",
            "huaweicloudsdkdms.v2.model.show_queue_response",
            "huaweicloudsdkdms.v2.model.show_queue_tags_request",
            "huaweicloudsdkdms.v2.model.show_queue_tags_response",
            "huaweicloudsdkdms.v2.model.show_quotas_request",
            "huaweicloudsdkdms.v2.model.show_quotas_resp_quotas",
            "huaweicloudsdkdms.v2.model.show_quotas_resp_quotas_resources",
            "huaweicloudsdkdms.v2.model.show_quotas_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkecs": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkecs",
            "huaweicloudsdkecs.v2",
            "huaweicloudsdkecs.v2.ecs_async_client",
            "huaweicloudsdkecs.v2.ecs_client",
            "huaweicloudsdkecs.v2.model",
            "huaweicloudsdkecs.v2.model.add_server_group_member_request",
            "huaweicloudsdkecs.v2.model.add_server_group_member_request_body",
            "huaweicloudsdkecs.v2.model.add_server_group_member_response",
            "huaweicloudsdkecs.v2.model.attach_server_volume_option",
            "huaweicloudsdkecs.v2.model.attach_server_volume_request",
            "huaweicloudsdkecs.v2.model.attach_server_volume_request_body",
            "huaweicloudsdkecs.v2.model.attach_server_volume_response",
            "huaweicloudsdkecs.v2.model.batch_add_server_nic_option",
            "huaweicloudsdkecs.v2.model.batch_add_server_nics_request",
            "huaweicloudsdkecs.v2.model.batch_add_server_nics_request_body",
            "huaweicloudsdkecs.v2.model.batch_add_server_nics_response",
            "huaweicloudsdkecs.v2.model.batch_create_server_tags_request",
            "huaweicloudsdkecs.v2.model.batch_create_server_tags_request_body",
            "huaweicloudsdkecs.v2.model.batch_create_server_tags_response",
            "huaweicloudsdkecs.v2.model.batch_delete_server_nic_option",
            "huaweicloudsdkecs.v2.model.batch_delete_server_nics_request",
            "huaweicloudsdkecs.v2.model.batch_delete_server_nics_request_body",
            "huaweicloudsdkecs.v2.model.batch_delete_server_nics_response",
            "huaweicloudsdkecs.v2.model.batch_delete_server_tags_request",
            "huaweicloudsdkecs.v2.model.batch_delete_server_tags_request_body",
            "huaweicloudsdkecs.v2.model.batch_delete_server_tags_response",
            "huaweicloudsdkecs.v2.model.batch_reboot_servers_request",
            "huaweicloudsdkecs.v2.model.batch_reboot_servers_request_body",
            "huaweicloudsdkecs.v2.model.batch_reboot_servers_response",
            "huaweicloudsdkecs.v2.model.batch_reboot_severs_option",
            "huaweicloudsdkecs.v2.model.batch_start_servers_option",
            "huaweicloudsdkecs.v2.model.batch_start_servers_request",
            "huaweicloudsdkecs.v2.model.batch_start_servers_request_body",
            "huaweicloudsdkecs.v2.model.batch_start_servers_response",
            "huaweicloudsdkecs.v2.model.batch_stop_servers_option",
            "huaweicloudsdkecs.v2.model.batch_stop_servers_request",
            "huaweicloudsdkecs.v2.model.batch_stop_servers_request_body",
            "huaweicloudsdkecs.v2.model.batch_stop_servers_response",
            "huaweicloudsdkecs.v2.model.block_device_attachable_quantity",
            "huaweicloudsdkecs.v2.model.change_server_os_with_cloud_init_option",
            "huaweicloudsdkecs.v2.model.change_server_os_with_cloud_init_request",
            "huaweicloudsdkecs.v2.model.change_server_os_with_cloud_init_request_body",
            "huaweicloudsdkecs.v2.model.change_server_os_with_cloud_init_response",
            "huaweicloudsdkecs.v2.model.change_severs_os_metadata",
            "huaweicloudsdkecs.v2.model.create_post_paid_servers_request",
            "huaweicloudsdkecs.v2.model.create_post_paid_servers_request_body",
            "huaweicloudsdkecs.v2.model.create_post_paid_servers_response",
            "huaweicloudsdkecs.v2.model.create_server_group_option",
            "huaweicloudsdkecs.v2.model.create_server_group_request",
            "huaweicloudsdkecs.v2.model.create_server_group_request_body",
            "huaweicloudsdkecs.v2.model.create_server_group_response",
            "huaweicloudsdkecs.v2.model.create_server_group_result",
            "huaweicloudsdkecs.v2.model.create_servers_request",
            "huaweicloudsdkecs.v2.model.create_servers_request_body",
            "huaweicloudsdkecs.v2.model.create_servers_response",
            "huaweicloudsdkecs.v2.model.delete_server_group_member_request",
            "huaweicloudsdkecs.v2.model.delete_server_group_member_request_body",
            "huaweicloudsdkecs.v2.model.delete_server_group_member_response",
            "huaweicloudsdkecs.v2.model.delete_server_group_request",
            "huaweicloudsdkecs.v2.model.delete_server_group_response",
            "huaweicloudsdkecs.v2.model.delete_server_metadata_request",
            "huaweicloudsdkecs.v2.model.delete_server_metadata_response",
            "huaweicloudsdkecs.v2.model.delete_servers_request",
            "huaweicloudsdkecs.v2.model.delete_servers_request_body",
            "huaweicloudsdkecs.v2.model.delete_servers_response",
            "huaweicloudsdkecs.v2.model.detach_server_volume_request",
            "huaweicloudsdkecs.v2.model.detach_server_volume_response",
            "huaweicloudsdkecs.v2.model.flavor",
            "huaweicloudsdkecs.v2.model.flavor_extra_spec",
            "huaweicloudsdkecs.v2.model.flavor_link",
            "huaweicloudsdkecs.v2.model.get_server_remote_console_option",
            "huaweicloudsdkecs.v2.model.interface_attachment",
            "huaweicloudsdkecs.v2.model.ipv6_bandwidth",
            "huaweicloudsdkecs.v2.model.job_entities",
            "huaweicloudsdkecs.v2.model.link",
            "huaweicloudsdkecs.v2.model.list_flavors_request",
            "huaweicloudsdkecs.v2.model.list_flavors_response",
            "huaweicloudsdkecs.v2.model.list_resize_flavors_request",
            "huaweicloudsdkecs.v2.model.list_resize_flavors_response",
            "huaweicloudsdkecs.v2.model.list_resize_flavors_result",
            "huaweicloudsdkecs.v2.model.list_server_block_devices_request",
            "huaweicloudsdkecs.v2.model.list_server_block_devices_response",
            "huaweicloudsdkecs.v2.model.list_server_interfaces_request",
            "huaweicloudsdkecs.v2.model.list_server_interfaces_response",
            "huaweicloudsdkecs.v2.model.list_servers_details_request",
            "huaweicloudsdkecs.v2.model.list_servers_details_response",
            "huaweicloudsdkecs.v2.model.nova_add_security_group_option",
            "huaweicloudsdkecs.v2.model.nova_associate_security_group_request",
            "huaweicloudsdkecs.v2.model.nova_associate_security_group_request_body",
            "huaweicloudsdkecs.v2.model.nova_associate_security_group_response",
            "huaweicloudsdkecs.v2.model.nova_availability_zone",
            "huaweicloudsdkecs.v2.model.nova_availability_zone_state",
            "huaweicloudsdkecs.v2.model.nova_create_keypair_option",
            "huaweicloudsdkecs.v2.model.nova_create_keypair_request",
            "huaweicloudsdkecs.v2.model.nova_create_keypair_request_body",
            "huaweicloudsdkecs.v2.model.nova_create_keypair_response",
            "huaweicloudsdkecs.v2.model.nova_create_servers_option",
            "huaweicloudsdkecs.v2.model.nova_create_servers_request",
            "huaweicloudsdkecs.v2.model.nova_create_servers_request_body",
            "huaweicloudsdkecs.v2.model.nova_create_servers_response",
            "huaweicloudsdkecs.v2.model.nova_create_servers_result",
            "huaweicloudsdkecs.v2.model.nova_create_servers_scheduler_hint",
            "huaweicloudsdkecs.v2.model.nova_delete_keypair_request",
            "huaweicloudsdkecs.v2.model.nova_delete_keypair_response",
            "huaweicloudsdkecs.v2.model.nova_delete_server_request",
            "huaweicloudsdkecs.v2.model.nova_delete_server_response",
            "huaweicloudsdkecs.v2.model.nova_disassociate_security_group_request",
            "huaweicloudsdkecs.v2.model.nova_disassociate_security_group_request_body",
            "huaweicloudsdkecs.v2.model.nova_disassociate_security_group_response",
            "huaweicloudsdkecs.v2.model.nova_keypair",
            "huaweicloudsdkecs.v2.model.nova_link",
            "huaweicloudsdkecs.v2.model.nova_list_availability_zones_request",
            "huaweicloudsdkecs.v2.model.nova_list_availability_zones_response",
            "huaweicloudsdkecs.v2.model.nova_list_keypairs_request",
            "huaweicloudsdkecs.v2.model.nova_list_keypairs_response",
            "huaweicloudsdkecs.v2.model.nova_list_keypairs_result",
            "huaweicloudsdkecs.v2.model.nova_list_server_security_groups_request",
            "huaweicloudsdkecs.v2.model.nova_list_server_security_groups_response",
            "huaweicloudsdkecs.v2.model.nova_list_servers_details_request",
            "huaweicloudsdkecs.v2.model.nova_list_servers_details_response",
            "huaweicloudsdkecs.v2.model.nova_network",
            "huaweicloudsdkecs.v2.model.nova_remove_security_group_option",
            "huaweicloudsdkecs.v2.model.nova_security_group",
            "huaweicloudsdkecs.v2.model.nova_security_group_common_group",
            "huaweicloudsdkecs.v2.model.nova_security_group_common_ip_range",
            "huaweicloudsdkecs.v2.model.nova_security_group_common_rule",
            "huaweicloudsdkecs.v2.model.nova_server",
            "huaweicloudsdkecs.v2.model.nova_server_block_device_mapping",
            "huaweicloudsdkecs.v2.model.nova_server_fault",
            "huaweicloudsdkecs.v2.model.nova_server_flavor",
            "huaweicloudsdkecs.v2.model.nova_server_image",
            "huaweicloudsdkecs.v2.model.nova_server_network",
            "huaweicloudsdkecs.v2.model.nova_server_security_group",
            "huaweicloudsdkecs.v2.model.nova_server_volume",
            "huaweicloudsdkecs.v2.model.nova_show_server_request",
            "huaweicloudsdkecs.v2.model.nova_show_server_response",
            "huaweicloudsdkecs.v2.model.nova_simple_keypair",
            "huaweicloudsdkecs.v2.model.page_link",
            "huaweicloudsdkecs.v2.model.post_paid_server",
            "huaweicloudsdkecs.v2.model.post_paid_server_data_volume",
            "huaweicloudsdkecs.v2.model.post_paid_server_data_volume_extend_param",
            "huaweicloudsdkecs.v2.model.post_paid_server_data_volume_metadata",
            "huaweicloudsdkecs.v2.model.post_paid_server_eip",
            "huaweicloudsdkecs.v2.model.post_paid_server_eip_bandwidth",
            "huaweicloudsdkecs.v2.model.post_paid_server_eip_extend_param",
            "huaweicloudsdkecs.v2.model.post_paid_server_extend_param",
            "huaweicloudsdkecs.v2.model.post_paid_server_ipv6_bandwidth",
            "huaweicloudsdkecs.v2.model.post_paid_server_nic",
            "huaweicloudsdkecs.v2.model.post_paid_server_publicip",
            "huaweicloudsdkecs.v2.model.post_paid_server_root_volume",
            "huaweicloudsdkecs.v2.model.post_paid_server_root_volume_extend_param",
            "huaweicloudsdkecs.v2.model.post_paid_server_scheduler_hints",
            "huaweicloudsdkecs.v2.model.post_paid_server_security_group",
            "huaweicloudsdkecs.v2.model.post_paid_server_tag",
            "huaweicloudsdkecs.v2.model.pre_paid_server",
            "huaweicloudsdkecs.v2.model.pre_paid_server_data_volume",
            "huaweicloudsdkecs.v2.model.pre_paid_server_data_volume_extend_param",
            "huaweicloudsdkecs.v2.model.pre_paid_server_data_volume_metadata",
            "huaweicloudsdkecs.v2.model.pre_paid_server_eip",
            "huaweicloudsdkecs.v2.model.pre_paid_server_eip_bandwidth",
            "huaweicloudsdkecs.v2.model.pre_paid_server_eip_extend_param",
            "huaweicloudsdkecs.v2.model.pre_paid_server_extend_param",
            "huaweicloudsdkecs.v2.model.pre_paid_server_ipv6_bandwidth",
            "huaweicloudsdkecs.v2.model.pre_paid_server_nic",
            "huaweicloudsdkecs.v2.model.pre_paid_server_publicip",
            "huaweicloudsdkecs.v2.model.pre_paid_server_root_volume",
            "huaweicloudsdkecs.v2.model.pre_paid_server_root_volume_extend_param",
            "huaweicloudsdkecs.v2.model.pre_paid_server_scheduler_hints",
            "huaweicloudsdkecs.v2.model.pre_paid_server_security_group",
            "huaweicloudsdkecs.v2.model.pre_paid_server_tag",
            "huaweicloudsdkecs.v2.model.project_flavor_limit",
            "huaweicloudsdkecs.v2.model.reinstall_server_with_cloud_init_option",
            "huaweicloudsdkecs.v2.model.reinstall_server_with_cloud_init_request",
            "huaweicloudsdkecs.v2.model.reinstall_server_with_cloud_init_request_body",
            "huaweicloudsdkecs.v2.model.reinstall_server_with_cloud_init_response",
            "huaweicloudsdkecs.v2.model.reinstall_sever_metadata",
            "huaweicloudsdkecs.v2.model.reset_server_password_option",
            "huaweicloudsdkecs.v2.model.reset_server_password_request",
            "huaweicloudsdkecs.v2.model.reset_server_password_request_body",
            "huaweicloudsdkecs.v2.model.reset_server_password_response",
            "huaweicloudsdkecs.v2.model.resize_post_paid_server_option",
            "huaweicloudsdkecs.v2.model.resize_post_paid_server_request",
            "huaweicloudsdkecs.v2.model.resize_post_paid_server_request_body",
            "huaweicloudsdkecs.v2.model.resize_post_paid_server_response",
            "huaweicloudsdkecs.v2.model.resize_pre_paid_server_option",
            "huaweicloudsdkecs.v2.model.resize_server_extend_param",
            "huaweicloudsdkecs.v2.model.resize_server_request",
            "huaweicloudsdkecs.v2.model.resize_server_request_body",
            "huaweicloudsdkecs.v2.model.resize_server_response",
            "huaweicloudsdkecs.v2.model.server_address",
            "huaweicloudsdkecs.v2.model.server_attachable_quantity",
            "huaweicloudsdkecs.v2.model.server_block_device",
            "huaweicloudsdkecs.v2.model.server_detail",
            "huaweicloudsdkecs.v2.model.server_extend_volume_attachment",
            "huaweicloudsdkecs.v2.model.server_fault",
            "huaweicloudsdkecs.v2.model.server_flavor",
            "huaweicloudsdkecs.v2.model.server_group_member",
            "huaweicloudsdkecs.v2.model.server_id",
            "huaweicloudsdkecs.v2.model.server_image",
            "huaweicloudsdkecs.v2.model.server_interface_fixed_ip",
            "huaweicloudsdkecs.v2.model.server_limits",
            "huaweicloudsdkecs.v2.model.server_nic_security_group",
            "huaweicloudsdkecs.v2.model.server_remote_console",
            "huaweicloudsdkecs.v2.model.server_scheduler_hints",
            "huaweicloudsdkecs.v2.model.server_security_group",
            "huaweicloudsdkecs.v2.model.server_system_tag",
            "huaweicloudsdkecs.v2.model.server_tag",
            "huaweicloudsdkecs.v2.model.show_job_request",
            "huaweicloudsdkecs.v2.model.show_job_response",
            "huaweicloudsdkecs.v2.model.show_reset_password_flag_request",
            "huaweicloudsdkecs.v2.model.show_reset_password_flag_response",
            "huaweicloudsdkecs.v2.model.show_server_limits_request",
            "huaweicloudsdkecs.v2.model.show_server_limits_response",
            "huaweicloudsdkecs.v2.model.show_server_remote_console_request",
            "huaweicloudsdkecs.v2.model.show_server_remote_console_request_body",
            "huaweicloudsdkecs.v2.model.show_server_remote_console_response",
            "huaweicloudsdkecs.v2.model.show_server_request",
            "huaweicloudsdkecs.v2.model.show_server_response",
            "huaweicloudsdkecs.v2.model.show_server_tags_request",
            "huaweicloudsdkecs.v2.model.show_server_tags_response",
            "huaweicloudsdkecs.v2.model.simple_flavor",
            "huaweicloudsdkecs.v2.model.sub_job",
            "huaweicloudsdkecs.v2.model.sub_job_entities",
            "huaweicloudsdkecs.v2.model.update_server_address",
            "huaweicloudsdkecs.v2.model.update_server_metadata_request",
            "huaweicloudsdkecs.v2.model.update_server_metadata_request_body",
            "huaweicloudsdkecs.v2.model.update_server_metadata_response",
            "huaweicloudsdkecs.v2.model.update_server_option",
            "huaweicloudsdkecs.v2.model.update_server_request",
            "huaweicloudsdkecs.v2.model.update_server_request_body",
            "huaweicloudsdkecs.v2.model.update_server_response",
            "huaweicloudsdkecs.v2.model.update_server_result"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkeip": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkeip",
            "huaweicloudsdkeip.v2",
            "huaweicloudsdkeip.v2.eip_async_client",
            "huaweicloudsdkeip.v2.eip_client",
            "huaweicloudsdkeip.v2.model",
            "huaweicloudsdkeip.v2.model.add_publicips_into_shared_bandwidth_option",
            "huaweicloudsdkeip.v2.model.add_publicips_into_shared_bandwidth_request",
            "huaweicloudsdkeip.v2.model.add_publicips_into_shared_bandwidth_request_body",
            "huaweicloudsdkeip.v2.model.add_publicips_into_shared_bandwidth_response",
            "huaweicloudsdkeip.v2.model.band_width_rules",
            "huaweicloudsdkeip.v2.model.bandwidth_resp",
            "huaweicloudsdkeip.v2.model.bandwidth_resp_insert",
            "huaweicloudsdkeip.v2.model.batch_bandwidth_resp",
            "huaweicloudsdkeip.v2.model.batch_create_bandwidth_option",
            "huaweicloudsdkeip.v2.model.batch_create_bandwidth_request_body",
            "huaweicloudsdkeip.v2.model.batch_create_publicip_tags_request",
            "huaweicloudsdkeip.v2.model.batch_create_publicip_tags_request_body",
            "huaweicloudsdkeip.v2.model.batch_create_publicip_tags_response",
            "huaweicloudsdkeip.v2.model.batch_create_shared_bandwidths_request",
            "huaweicloudsdkeip.v2.model.batch_create_shared_bandwidths_response",
            "huaweicloudsdkeip.v2.model.batch_delete_publicip_tags_request",
            "huaweicloudsdkeip.v2.model.batch_delete_publicip_tags_request_body",
            "huaweicloudsdkeip.v2.model.batch_delete_publicip_tags_response",
            "huaweicloudsdkeip.v2.model.create_floating_ip_option",
            "huaweicloudsdkeip.v2.model.create_pre_paid_publicip_extend_param_option",
            "huaweicloudsdkeip.v2.model.create_pre_paid_publicip_option",
            "huaweicloudsdkeip.v2.model.create_pre_paid_publicip_request",
            "huaweicloudsdkeip.v2.model.create_pre_paid_publicip_request_body",
            "huaweicloudsdkeip.v2.model.create_pre_paid_publicip_response",
            "huaweicloudsdkeip.v2.model.create_publicip_bandwidth_option",
            "huaweicloudsdkeip.v2.model.create_publicip_option",
            "huaweicloudsdkeip.v2.model.create_publicip_request",
            "huaweicloudsdkeip.v2.model.create_publicip_request_body",
            "huaweicloudsdkeip.v2.model.create_publicip_response",
            "huaweicloudsdkeip.v2.model.create_publicip_tag_request",
            "huaweicloudsdkeip.v2.model.create_publicip_tag_request_body",
            "huaweicloudsdkeip.v2.model.create_publicip_tag_response",
            "huaweicloudsdkeip.v2.model.create_shared_bandwidh_request_body",
            "huaweicloudsdkeip.v2.model.create_shared_bandwidth_option",
            "huaweicloudsdkeip.v2.model.create_shared_bandwidth_request",
            "huaweicloudsdkeip.v2.model.create_shared_bandwidth_response",
            "huaweicloudsdkeip.v2.model.delete_publicip_request",
            "huaweicloudsdkeip.v2.model.delete_publicip_response",
            "huaweicloudsdkeip.v2.model.delete_publicip_tag_request",
            "huaweicloudsdkeip.v2.model.delete_publicip_tag_response",
            "huaweicloudsdkeip.v2.model.delete_shared_bandwidth_request",
            "huaweicloudsdkeip.v2.model.delete_shared_bandwidth_response",
            "huaweicloudsdkeip.v2.model.floating_ip_resp",
            "huaweicloudsdkeip.v2.model.insert_publicip_info",
            "huaweicloudsdkeip.v2.model.list_bandwidths_request",
            "huaweicloudsdkeip.v2.model.list_bandwidths_response",
            "huaweicloudsdkeip.v2.model.list_publicip_tags_request",
            "huaweicloudsdkeip.v2.model.list_publicip_tags_response",
            "huaweicloudsdkeip.v2.model.list_publicips_by_tags_request",
            "huaweicloudsdkeip.v2.model.list_publicips_by_tags_request_body",
            "huaweicloudsdkeip.v2.model.list_publicips_by_tags_response",
            "huaweicloudsdkeip.v2.model.list_publicips_request",
            "huaweicloudsdkeip.v2.model.list_publicips_response",
            "huaweicloudsdkeip.v2.model.list_quotas_request",
            "huaweicloudsdkeip.v2.model.list_quotas_response",
            "huaweicloudsdkeip.v2.model.list_resource_resp",
            "huaweicloudsdkeip.v2.model.match_req",
            "huaweicloudsdkeip.v2.model.neutron_create_floating_ip_request",
            "huaweicloudsdkeip.v2.model.neutron_create_floating_ip_request_body",
            "huaweicloudsdkeip.v2.model.neutron_create_floating_ip_response",
            "huaweicloudsdkeip.v2.model.neutron_delete_floating_ip_request",
            "huaweicloudsdkeip.v2.model.neutron_delete_floating_ip_response",
            "huaweicloudsdkeip.v2.model.neutron_list_floating_ips_request",
            "huaweicloudsdkeip.v2.model.neutron_list_floating_ips_response",
            "huaweicloudsdkeip.v2.model.neutron_show_floating_ip_request",
            "huaweicloudsdkeip.v2.model.neutron_show_floating_ip_response",
            "huaweicloudsdkeip.v2.model.neutron_update_floating_ip_request",
            "huaweicloudsdkeip.v2.model.neutron_update_floating_ip_request_body",
            "huaweicloudsdkeip.v2.model.neutron_update_floating_ip_response",
            "huaweicloudsdkeip.v2.model.pager",
            "huaweicloudsdkeip.v2.model.post_and_put_floating_ip_resp",
            "huaweicloudsdkeip.v2.model.profile_resp",
            "huaweicloudsdkeip.v2.model.publicip_create_resp",
            "huaweicloudsdkeip.v2.model.publicip_info_resp",
            "huaweicloudsdkeip.v2.model.publicip_show_resp",
            "huaweicloudsdkeip.v2.model.quota_show_resp",
            "huaweicloudsdkeip.v2.model.remove_from_shared_bandwidth_option",
            "huaweicloudsdkeip.v2.model.remove_publicip_info",
            "huaweicloudsdkeip.v2.model.remove_publicips_from_shared_bandwidth_request",
            "huaweicloudsdkeip.v2.model.remove_publicips_from_shared_bandwidth_request_body",
            "huaweicloudsdkeip.v2.model.remove_publicips_from_shared_bandwidth_response",
            "huaweicloudsdkeip.v2.model.resource_resp",
            "huaweicloudsdkeip.v2.model.resource_tag_option",
            "huaweicloudsdkeip.v2.model.resource_tag_resp",
            "huaweicloudsdkeip.v2.model.show_bandwidth_request",
            "huaweicloudsdkeip.v2.model.show_bandwidth_response",
            "huaweicloudsdkeip.v2.model.show_publicip_request",
            "huaweicloudsdkeip.v2.model.show_publicip_response",
            "huaweicloudsdkeip.v2.model.show_publicip_tags_request",
            "huaweicloudsdkeip.v2.model.show_publicip_tags_response",
            "huaweicloudsdkeip.v2.model.tag_req",
            "huaweicloudsdkeip.v2.model.tag_resp",
            "huaweicloudsdkeip.v2.model.update_bandwidth_option",
            "huaweicloudsdkeip.v2.model.update_bandwidth_request",
            "huaweicloudsdkeip.v2.model.update_bandwidth_request_body",
            "huaweicloudsdkeip.v2.model.update_bandwidth_response",
            "huaweicloudsdkeip.v2.model.update_floating_ip_option",
            "huaweicloudsdkeip.v2.model.update_pre_paid_bandwidth_extend_param_option",
            "huaweicloudsdkeip.v2.model.update_pre_paid_bandwidth_option",
            "huaweicloudsdkeip.v2.model.update_pre_paid_bandwidth_request",
            "huaweicloudsdkeip.v2.model.update_pre_paid_bandwidth_request_body",
            "huaweicloudsdkeip.v2.model.update_pre_paid_bandwidth_response",
            "huaweicloudsdkeip.v2.model.update_publicip_option",
            "huaweicloudsdkeip.v2.model.update_publicip_request",
            "huaweicloudsdkeip.v2.model.update_publicip_response",
            "huaweicloudsdkeip.v2.model.update_publicips_request_body"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkeps": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkeps",
            "huaweicloudsdkeps.v1",
            "huaweicloudsdkeps.v1.eps_async_client",
            "huaweicloudsdkeps.v1.eps_client",
            "huaweicloudsdkeps.v1.model",
            "huaweicloudsdkeps.v1.model.create_ep_request",
            "huaweicloudsdkeps.v1.model.create_ep_response",
            "huaweicloudsdkeps.v1.model.disable_action",
            "huaweicloudsdkeps.v1.model.disable_ep_request",
            "huaweicloudsdkeps.v1.model.disable_ep_response",
            "huaweicloudsdkeps.v1.model.enable_action",
            "huaweicloudsdkeps.v1.model.enable_ep_request",
            "huaweicloudsdkeps.v1.model.enable_ep_response",
            "huaweicloudsdkeps.v1.model.enterprise_project",
            "huaweicloudsdkeps.v1.model.ep_detail",
            "huaweicloudsdkeps.v1.model.ep_quotas",
            "huaweicloudsdkeps.v1.model.errors",
            "huaweicloudsdkeps.v1.model.link",
            "huaweicloudsdkeps.v1.model.list_api_versions_request",
            "huaweicloudsdkeps.v1.model.list_api_versions_response",
            "huaweicloudsdkeps.v1.model.list_ep_request",
            "huaweicloudsdkeps.v1.model.list_ep_response",
            "huaweicloudsdkeps.v1.model.match",
            "huaweicloudsdkeps.v1.model.migrate_resource",
            "huaweicloudsdkeps.v1.model.migrate_resource_request",
            "huaweicloudsdkeps.v1.model.migrate_resource_response",
            "huaweicloudsdkeps.v1.model.modify_ep_request",
            "huaweicloudsdkeps.v1.model.modify_ep_response",
            "huaweicloudsdkeps.v1.model.quotas_detail",
            "huaweicloudsdkeps.v1.model.resources",
            "huaweicloudsdkeps.v1.model.resq_ep_resouce",
            "huaweicloudsdkeps.v1.model.show_api_version_request",
            "huaweicloudsdkeps.v1.model.show_api_version_response",
            "huaweicloudsdkeps.v1.model.show_ep_quota_request",
            "huaweicloudsdkeps.v1.model.show_ep_quota_response",
            "huaweicloudsdkeps.v1.model.show_ep_request",
            "huaweicloudsdkeps.v1.model.show_ep_response",
            "huaweicloudsdkeps.v1.model.show_resource_bind_ep_request",
            "huaweicloudsdkeps.v1.model.show_resource_bind_ep_response",
            "huaweicloudsdkeps.v1.model.version_detail"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkevs": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkevs",
            "huaweicloudsdkevs.v2",
            "huaweicloudsdkevs.v2.evs_async_client",
            "huaweicloudsdkevs.v2.evs_client",
            "huaweicloudsdkevs.v2.model",
            "huaweicloudsdkevs.v2.model.attachment",
            "huaweicloudsdkevs.v2.model.az_info",
            "huaweicloudsdkevs.v2.model.batch_create_volume_tags_request",
            "huaweicloudsdkevs.v2.model.batch_create_volume_tags_request_body",
            "huaweicloudsdkevs.v2.model.batch_create_volume_tags_response",
            "huaweicloudsdkevs.v2.model.batch_delete_volume_tags_request",
            "huaweicloudsdkevs.v2.model.batch_delete_volume_tags_request_body",
            "huaweicloudsdkevs.v2.model.batch_delete_volume_tags_response",
            "huaweicloudsdkevs.v2.model.bss_param_for_create_volume",
            "huaweicloudsdkevs.v2.model.bss_param_for_resize_volume",
            "huaweicloudsdkevs.v2.model.cinder_export_to_image_option",
            "huaweicloudsdkevs.v2.model.cinder_export_to_image_request",
            "huaweicloudsdkevs.v2.model.cinder_export_to_image_request_body",
            "huaweicloudsdkevs.v2.model.cinder_export_to_image_response",
            "huaweicloudsdkevs.v2.model.cinder_list_availability_zones_request",
            "huaweicloudsdkevs.v2.model.cinder_list_availability_zones_response",
            "huaweicloudsdkevs.v2.model.cinder_list_quotas_request",
            "huaweicloudsdkevs.v2.model.cinder_list_quotas_response",
            "huaweicloudsdkevs.v2.model.cinder_list_volume_types_request",
            "huaweicloudsdkevs.v2.model.cinder_list_volume_types_response",
            "huaweicloudsdkevs.v2.model.create_snapshot_option",
            "huaweicloudsdkevs.v2.model.create_snapshot_request",
            "huaweicloudsdkevs.v2.model.create_snapshot_request_body",
            "huaweicloudsdkevs.v2.model.create_snapshot_response",
            "huaweicloudsdkevs.v2.model.create_volume_option",
            "huaweicloudsdkevs.v2.model.create_volume_request",
            "huaweicloudsdkevs.v2.model.create_volume_request_body",
            "huaweicloudsdkevs.v2.model.create_volume_response",
            "huaweicloudsdkevs.v2.model.delete_snapshot_request",
            "huaweicloudsdkevs.v2.model.delete_snapshot_response",
            "huaweicloudsdkevs.v2.model.delete_tags_option",
            "huaweicloudsdkevs.v2.model.delete_volume_request",
            "huaweicloudsdkevs.v2.model.delete_volume_response",
            "huaweicloudsdkevs.v2.model.image",
            "huaweicloudsdkevs.v2.model.job_entities",
            "huaweicloudsdkevs.v2.model.link",
            "huaweicloudsdkevs.v2.model.list_snapshots_request",
            "huaweicloudsdkevs.v2.model.list_snapshots_response",
            "huaweicloudsdkevs.v2.model.list_volume_tags_request",
            "huaweicloudsdkevs.v2.model.list_volume_tags_response",
            "huaweicloudsdkevs.v2.model.list_volumes_by_tags_request",
            "huaweicloudsdkevs.v2.model.list_volumes_by_tags_request_body",
            "huaweicloudsdkevs.v2.model.list_volumes_by_tags_response",
            "huaweicloudsdkevs.v2.model.list_volumes_request",
            "huaweicloudsdkevs.v2.model.list_volumes_response",
            "huaweicloudsdkevs.v2.model.match",
            "huaweicloudsdkevs.v2.model.os_extend",
            "huaweicloudsdkevs.v2.model.quota_detail",
            "huaweicloudsdkevs.v2.model.quota_detail_backup_gigabytes",
            "huaweicloudsdkevs.v2.model.quota_detail_backups",
            "huaweicloudsdkevs.v2.model.quota_detail_gigabytes",
            "huaweicloudsdkevs.v2.model.quota_detail_gigabytes_gpssd",
            "huaweicloudsdkevs.v2.model.quota_detail_gigabytes_sas",
            "huaweicloudsdkevs.v2.model.quota_detail_gigabytes_sata",
            "huaweicloudsdkevs.v2.model.quota_detail_gigabytes_ssd",
            "huaweicloudsdkevs.v2.model.quota_detail_per_volume_gigabytes",
            "huaweicloudsdkevs.v2.model.quota_detail_snapshots",
            "huaweicloudsdkevs.v2.model.quota_detail_snapshots_gpssd",
            "huaweicloudsdkevs.v2.model.quota_detail_snapshots_sas",
            "huaweicloudsdkevs.v2.model.quota_detail_snapshots_sata",
            "huaweicloudsdkevs.v2.model.quota_detail_snapshots_ssd",
            "huaweicloudsdkevs.v2.model.quota_detail_volumes",
            "huaweicloudsdkevs.v2.model.quota_detail_volumes_gpssd",
            "huaweicloudsdkevs.v2.model.quota_detail_volumes_sas",
            "huaweicloudsdkevs.v2.model.quota_detail_volumes_sata",
            "huaweicloudsdkevs.v2.model.quota_detail_volumes_ssd",
            "huaweicloudsdkevs.v2.model.quota_list",
            "huaweicloudsdkevs.v2.model.resize_volume_request",
            "huaweicloudsdkevs.v2.model.resize_volume_request_body",
            "huaweicloudsdkevs.v2.model.resize_volume_response",
            "huaweicloudsdkevs.v2.model.resource",
            "huaweicloudsdkevs.v2.model.rollback_info",
            "huaweicloudsdkevs.v2.model.rollback_snapshot_option",
            "huaweicloudsdkevs.v2.model.rollback_snapshot_request",
            "huaweicloudsdkevs.v2.model.rollback_snapshot_request_body",
            "huaweicloudsdkevs.v2.model.rollback_snapshot_response",
            "huaweicloudsdkevs.v2.model.show_job_request",
            "huaweicloudsdkevs.v2.model.show_job_response",
            "huaweicloudsdkevs.v2.model.show_snapshot_request",
            "huaweicloudsdkevs.v2.model.show_snapshot_response",
            "huaweicloudsdkevs.v2.model.show_volume_request",
            "huaweicloudsdkevs.v2.model.show_volume_response",
            "huaweicloudsdkevs.v2.model.show_volume_tags_request",
            "huaweicloudsdkevs.v2.model.show_volume_tags_response",
            "huaweicloudsdkevs.v2.model.snapshot_details",
            "huaweicloudsdkevs.v2.model.snapshot_list",
            "huaweicloudsdkevs.v2.model.sub_job",
            "huaweicloudsdkevs.v2.model.sub_job_entities",
            "huaweicloudsdkevs.v2.model.tag",
            "huaweicloudsdkevs.v2.model.tags_for_list_volumes",
            "huaweicloudsdkevs.v2.model.update_snapshot_option",
            "huaweicloudsdkevs.v2.model.update_snapshot_request",
            "huaweicloudsdkevs.v2.model.update_snapshot_request_body",
            "huaweicloudsdkevs.v2.model.update_snapshot_response",
            "huaweicloudsdkevs.v2.model.update_volume_option",
            "huaweicloudsdkevs.v2.model.update_volume_request",
            "huaweicloudsdkevs.v2.model.update_volume_request_body",
            "huaweicloudsdkevs.v2.model.update_volume_response",
            "huaweicloudsdkevs.v2.model.volume_detail",
            "huaweicloudsdkevs.v2.model.volume_detail_for_tag",
            "huaweicloudsdkevs.v2.model.volume_metadata",
            "huaweicloudsdkevs.v2.model.volume_type",
            "huaweicloudsdkevs.v2.model.volume_type_extra_specs",
            "huaweicloudsdkevs.v2.model.zone_state"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkexample": {
        "cmdline": [],
        "modules": [],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkfgs": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkfgs",
            "huaweicloudsdkfgs.v2",
            "huaweicloudsdkfgs.v2.fgs_async_client",
            "huaweicloudsdkfgs.v2.fgs_client",
            "huaweicloudsdkfgs.v2.model",
            "huaweicloudsdkfgs.v2.model.async_invoke_function_request",
            "huaweicloudsdkfgs.v2.model.async_invoke_function_response",
            "huaweicloudsdkfgs.v2.model.batch_delete_function_triggers_request",
            "huaweicloudsdkfgs.v2.model.batch_delete_function_triggers_response",
            "huaweicloudsdkfgs.v2.model.create_function_request",
            "huaweicloudsdkfgs.v2.model.create_function_request_body",
            "huaweicloudsdkfgs.v2.model.create_function_response",
            "huaweicloudsdkfgs.v2.model.create_function_trigger_request",
            "huaweicloudsdkfgs.v2.model.create_function_trigger_request_body",
            "huaweicloudsdkfgs.v2.model.create_function_trigger_response",
            "huaweicloudsdkfgs.v2.model.create_function_version_request",
            "huaweicloudsdkfgs.v2.model.create_function_version_request_body",
            "huaweicloudsdkfgs.v2.model.create_function_version_response",
            "huaweicloudsdkfgs.v2.model.create_version_alias_request",
            "huaweicloudsdkfgs.v2.model.create_version_alias_request_body",
            "huaweicloudsdkfgs.v2.model.create_version_alias_response",
            "huaweicloudsdkfgs.v2.model.delete_function_request",
            "huaweicloudsdkfgs.v2.model.delete_function_response",
            "huaweicloudsdkfgs.v2.model.delete_function_trigger_request",
            "huaweicloudsdkfgs.v2.model.delete_function_trigger_response",
            "huaweicloudsdkfgs.v2.model.delete_version_alias_request",
            "huaweicloudsdkfgs.v2.model.delete_version_alias_response",
            "huaweicloudsdkfgs.v2.model.dependency",
            "huaweicloudsdkfgs.v2.model.func_code",
            "huaweicloudsdkfgs.v2.model.func_mount",
            "huaweicloudsdkfgs.v2.model.func_vpc",
            "huaweicloudsdkfgs.v2.model.invoke_function_request",
            "huaweicloudsdkfgs.v2.model.invoke_function_response",
            "huaweicloudsdkfgs.v2.model.list_function_result",
            "huaweicloudsdkfgs.v2.model.list_function_trigger_result",
            "huaweicloudsdkfgs.v2.model.list_function_triggers_request",
            "huaweicloudsdkfgs.v2.model.list_function_triggers_response",
            "huaweicloudsdkfgs.v2.model.list_function_version_result",
            "huaweicloudsdkfgs.v2.model.list_function_versions_request",
            "huaweicloudsdkfgs.v2.model.list_function_versions_response",
            "huaweicloudsdkfgs.v2.model.list_functions_request",
            "huaweicloudsdkfgs.v2.model.list_functions_response",
            "huaweicloudsdkfgs.v2.model.list_version_alias_result",
            "huaweicloudsdkfgs.v2.model.list_version_aliases_request",
            "huaweicloudsdkfgs.v2.model.list_version_aliases_response",
            "huaweicloudsdkfgs.v2.model.mount_config",
            "huaweicloudsdkfgs.v2.model.mount_user",
            "huaweicloudsdkfgs.v2.model.show_function_code_request",
            "huaweicloudsdkfgs.v2.model.show_function_code_response",
            "huaweicloudsdkfgs.v2.model.show_function_config_request",
            "huaweicloudsdkfgs.v2.model.show_function_config_response",
            "huaweicloudsdkfgs.v2.model.show_function_trigger_request",
            "huaweicloudsdkfgs.v2.model.show_function_trigger_response",
            "huaweicloudsdkfgs.v2.model.show_version_alias_request",
            "huaweicloudsdkfgs.v2.model.show_version_alias_response",
            "huaweicloudsdkfgs.v2.model.strategy_config",
            "huaweicloudsdkfgs.v2.model.update_function_code_request",
            "huaweicloudsdkfgs.v2.model.update_function_code_request_body",
            "huaweicloudsdkfgs.v2.model.update_function_code_response",
            "huaweicloudsdkfgs.v2.model.update_function_config_request",
            "huaweicloudsdkfgs.v2.model.update_function_config_request_body",
            "huaweicloudsdkfgs.v2.model.update_function_config_response",
            "huaweicloudsdkfgs.v2.model.update_version_alias_request",
            "huaweicloudsdkfgs.v2.model.update_version_alias_request_body",
            "huaweicloudsdkfgs.v2.model.update_version_alias_response"
        ],
        "version": "3.0.8b0"
    },
    "huaweicloudsdkfunctiongraph": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkfunctiongraph",
            "huaweicloudsdkfunctiongraph.v2",
            "huaweicloudsdkfunctiongraph.v2.functiongraph_async_client",
            "huaweicloudsdkfunctiongraph.v2.functiongraph_client",
            "huaweicloudsdkfunctiongraph.v2.model",
            "huaweicloudsdkfunctiongraph.v2.model.async_invoke_function_request",
            "huaweicloudsdkfunctiongraph.v2.model.async_invoke_function_response",
            "huaweicloudsdkfunctiongraph.v2.model.batch_delete_function_triggers_request",
            "huaweicloudsdkfunctiongraph.v2.model.batch_delete_function_triggers_response",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_request",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_request_body",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_response",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_trigger_request",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_trigger_request_body",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_trigger_response",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_version_request",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_version_request_body",
            "huaweicloudsdkfunctiongraph.v2.model.create_function_version_response",
            "huaweicloudsdkfunctiongraph.v2.model.create_version_alias_request",
            "huaweicloudsdkfunctiongraph.v2.model.create_version_alias_request_body",
            "huaweicloudsdkfunctiongraph.v2.model.create_version_alias_response",
            "huaweicloudsdkfunctiongraph.v2.model.delete_function_request",
            "huaweicloudsdkfunctiongraph.v2.model.delete_function_response",
            "huaweicloudsdkfunctiongraph.v2.model.delete_function_trigger_request",
            "huaweicloudsdkfunctiongraph.v2.model.delete_function_trigger_response",
            "huaweicloudsdkfunctiongraph.v2.model.delete_version_alias_request",
            "huaweicloudsdkfunctiongraph.v2.model.delete_version_alias_response",
            "huaweicloudsdkfunctiongraph.v2.model.dependency",
            "huaweicloudsdkfunctiongraph.v2.model.func_code",
            "huaweicloudsdkfunctiongraph.v2.model.func_mount",
            "huaweicloudsdkfunctiongraph.v2.model.func_vpc",
            "huaweicloudsdkfunctiongraph.v2.model.invoke_function_request",
            "huaweicloudsdkfunctiongraph.v2.model.invoke_function_response",
            "huaweicloudsdkfunctiongraph.v2.model.list_function_result",
            "huaweicloudsdkfunctiongraph.v2.model.list_function_trigger_result",
            "huaweicloudsdkfunctiongraph.v2.model.list_function_triggers_request",
            "huaweicloudsdkfunctiongraph.v2.model.list_function_triggers_response",
            "huaweicloudsdkfunctiongraph.v2.model.list_function_version_result",
            "huaweicloudsdkfunctiongraph.v2.model.list_function_versions_request",
            "huaweicloudsdkfunctiongraph.v2.model.list_function_versions_response",
            "huaweicloudsdkfunctiongraph.v2.model.list_functions_request",
            "huaweicloudsdkfunctiongraph.v2.model.list_functions_response",
            "huaweicloudsdkfunctiongraph.v2.model.list_version_alias_result",
            "huaweicloudsdkfunctiongraph.v2.model.list_version_aliases_request",
            "huaweicloudsdkfunctiongraph.v2.model.list_version_aliases_response",
            "huaweicloudsdkfunctiongraph.v2.model.mount_config",
            "huaweicloudsdkfunctiongraph.v2.model.mount_user",
            "huaweicloudsdkfunctiongraph.v2.model.show_function_code_request",
            "huaweicloudsdkfunctiongraph.v2.model.show_function_code_response",
            "huaweicloudsdkfunctiongraph.v2.model.show_function_config_request",
            "huaweicloudsdkfunctiongraph.v2.model.show_function_config_response",
            "huaweicloudsdkfunctiongraph.v2.model.show_function_trigger_request",
            "huaweicloudsdkfunctiongraph.v2.model.show_function_trigger_response",
            "huaweicloudsdkfunctiongraph.v2.model.show_version_alias_request",
            "huaweicloudsdkfunctiongraph.v2.model.show_version_alias_response",
            "huaweicloudsdkfunctiongraph.v2.model.strategy_config",
            "huaweicloudsdkfunctiongraph.v2.model.update_function_code_request",
            "huaweicloudsdkfunctiongraph.v2.model.update_function_code_request_body",
            "huaweicloudsdkfunctiongraph.v2.model.update_function_code_response",
            "huaweicloudsdkfunctiongraph.v2.model.update_function_config_request",
            "huaweicloudsdkfunctiongraph.v2.model.update_function_config_request_body",
            "huaweicloudsdkfunctiongraph.v2.model.update_function_config_response",
            "huaweicloudsdkfunctiongraph.v2.model.update_version_alias_request",
            "huaweicloudsdkfunctiongraph.v2.model.update_version_alias_request_body",
            "huaweicloudsdkfunctiongraph.v2.model.update_version_alias_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkiam": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkiam",
            "huaweicloudsdkiam.v3",
            "huaweicloudsdkiam.v3.iam_async_client",
            "huaweicloudsdkiam.v3.iam_client",
            "huaweicloudsdkiam.v3.model",
            "huaweicloudsdkiam.v3.model.acl_policy_option",
            "huaweicloudsdkiam.v3.model.acl_policy_result",
            "huaweicloudsdkiam.v3.model.agency_all_project_role",
            "huaweicloudsdkiam.v3.model.agency_auth",
            "huaweicloudsdkiam.v3.model.agency_auth_identity",
            "huaweicloudsdkiam.v3.model.agency_policy",
            "huaweicloudsdkiam.v3.model.agency_policy_resource",
            "huaweicloudsdkiam.v3.model.agency_policy_role_option",
            "huaweicloudsdkiam.v3.model.agency_policy_role_result",
            "huaweicloudsdkiam.v3.model.agency_policy_statement",
            "huaweicloudsdkiam.v3.model.agency_result",
            "huaweicloudsdkiam.v3.model.allow_address_netmasks_option",
            "huaweicloudsdkiam.v3.model.allow_address_netmasks_result",
            "huaweicloudsdkiam.v3.model.allow_ip_ranges_option",
            "huaweicloudsdkiam.v3.model.allow_ip_ranges_result",
            "huaweicloudsdkiam.v3.model.associate_agency_with_all_projects_permission_request",
            "huaweicloudsdkiam.v3.model.associate_agency_with_all_projects_permission_response",
            "huaweicloudsdkiam.v3.model.associate_agency_with_domain_permission_request",
            "huaweicloudsdkiam.v3.model.associate_agency_with_domain_permission_response",
            "huaweicloudsdkiam.v3.model.associate_agency_with_project_permission_request",
            "huaweicloudsdkiam.v3.model.associate_agency_with_project_permission_response",
            "huaweicloudsdkiam.v3.model.assumerole_sessionuser",
            "huaweicloudsdkiam.v3.model.auth_project_result",
            "huaweicloudsdkiam.v3.model.catalog",
            "huaweicloudsdkiam.v3.model.catalog_endpoints",
            "huaweicloudsdkiam.v3.model.check_all_projects_permission_for_agency_request",
            "huaweicloudsdkiam.v3.model.check_all_projects_permission_for_agency_response",
            "huaweicloudsdkiam.v3.model.check_domain_permission_for_agency_request",
            "huaweicloudsdkiam.v3.model.check_domain_permission_for_agency_response",
            "huaweicloudsdkiam.v3.model.check_project_permission_for_agency_request",
            "huaweicloudsdkiam.v3.model.check_project_permission_for_agency_response",
            "huaweicloudsdkiam.v3.model.config",
            "huaweicloudsdkiam.v3.model.config_by_option",
            "huaweicloudsdkiam.v3.model.create_agency_custom_policy_request",
            "huaweicloudsdkiam.v3.model.create_agency_custom_policy_request_body",
            "huaweicloudsdkiam.v3.model.create_agency_custom_policy_response",
            "huaweicloudsdkiam.v3.model.create_agency_option",
            "huaweicloudsdkiam.v3.model.create_agency_request",
            "huaweicloudsdkiam.v3.model.create_agency_request_body",
            "huaweicloudsdkiam.v3.model.create_agency_response",
            "huaweicloudsdkiam.v3.model.create_cloud_service_custom_policy_request",
            "huaweicloudsdkiam.v3.model.create_cloud_service_custom_policy_request_body",
            "huaweicloudsdkiam.v3.model.create_cloud_service_custom_policy_response",
            "huaweicloudsdkiam.v3.model.create_credential_option",
            "huaweicloudsdkiam.v3.model.create_credential_result",
            "huaweicloudsdkiam.v3.model.create_permanent_access_key_request",
            "huaweicloudsdkiam.v3.model.create_permanent_access_key_request_body",
            "huaweicloudsdkiam.v3.model.create_permanent_access_key_response",
            "huaweicloudsdkiam.v3.model.create_temporary_access_key_by_agency_request",
            "huaweicloudsdkiam.v3.model.create_temporary_access_key_by_agency_request_body",
            "huaweicloudsdkiam.v3.model.create_temporary_access_key_by_agency_response",
            "huaweicloudsdkiam.v3.model.create_temporary_access_key_by_token_request",
            "huaweicloudsdkiam.v3.model.create_temporary_access_key_by_token_request_body",
            "huaweicloudsdkiam.v3.model.create_temporary_access_key_by_token_response",
            "huaweicloudsdkiam.v3.model.create_user_option",
            "huaweicloudsdkiam.v3.model.create_user_request",
            "huaweicloudsdkiam.v3.model.create_user_request_body",
            "huaweicloudsdkiam.v3.model.create_user_response",
            "huaweicloudsdkiam.v3.model.create_user_result",
            "huaweicloudsdkiam.v3.model.credential",
            "huaweicloudsdkiam.v3.model.credentials",
            "huaweicloudsdkiam.v3.model.delete_agency_request",
            "huaweicloudsdkiam.v3.model.delete_agency_response",
            "huaweicloudsdkiam.v3.model.delete_custom_policy_request",
            "huaweicloudsdkiam.v3.model.delete_custom_policy_response",
            "huaweicloudsdkiam.v3.model.delete_permanent_access_key_request",
            "huaweicloudsdkiam.v3.model.delete_permanent_access_key_response",
            "huaweicloudsdkiam.v3.model.domains",
            "huaweicloudsdkiam.v3.model.endpoint",
            "huaweicloudsdkiam.v3.model.identity_assumerole",
            "huaweicloudsdkiam.v3.model.identity_token",
            "huaweicloudsdkiam.v3.model.keystone_add_user_to_group_request",
            "huaweicloudsdkiam.v3.model.keystone_add_user_to_group_response",
            "huaweicloudsdkiam.v3.model.keystone_associate_group_with_all_project_permission_request",
            "huaweicloudsdkiam.v3.model.keystone_associate_group_with_all_project_permission_response",
            "huaweicloudsdkiam.v3.model.keystone_associate_group_with_domain_permission_request",
            "huaweicloudsdkiam.v3.model.keystone_associate_group_with_domain_permission_response",
            "huaweicloudsdkiam.v3.model.keystone_associate_group_with_project_permission_request",
            "huaweicloudsdkiam.v3.model.keystone_associate_group_with_project_permission_response",
            "huaweicloudsdkiam.v3.model.keystone_check_domain_permission_for_group_request",
            "huaweicloudsdkiam.v3.model.keystone_check_domain_permission_for_group_response",
            "huaweicloudsdkiam.v3.model.keystone_check_project_permission_for_group_request",
            "huaweicloudsdkiam.v3.model.keystone_check_project_permission_for_group_response",
            "huaweicloudsdkiam.v3.model.keystone_check_user_in_group_request",
            "huaweicloudsdkiam.v3.model.keystone_check_user_in_group_response",
            "huaweicloudsdkiam.v3.model.keystone_create_group_option",
            "huaweicloudsdkiam.v3.model.keystone_create_group_request",
            "huaweicloudsdkiam.v3.model.keystone_create_group_request_body",
            "huaweicloudsdkiam.v3.model.keystone_create_group_response",
            "huaweicloudsdkiam.v3.model.keystone_create_project_option",
            "huaweicloudsdkiam.v3.model.keystone_create_project_request",
            "huaweicloudsdkiam.v3.model.keystone_create_project_request_body",
            "huaweicloudsdkiam.v3.model.keystone_create_project_response",
            "huaweicloudsdkiam.v3.model.keystone_create_user_option",
            "huaweicloudsdkiam.v3.model.keystone_create_user_request",
            "huaweicloudsdkiam.v3.model.keystone_create_user_request_body",
            "huaweicloudsdkiam.v3.model.keystone_create_user_response",
            "huaweicloudsdkiam.v3.model.keystone_create_user_result",
            "huaweicloudsdkiam.v3.model.keystone_delete_group_request",
            "huaweicloudsdkiam.v3.model.keystone_delete_group_response",
            "huaweicloudsdkiam.v3.model.keystone_delete_user_request",
            "huaweicloudsdkiam.v3.model.keystone_delete_user_response",
            "huaweicloudsdkiam.v3.model.keystone_group_result",
            "huaweicloudsdkiam.v3.model.keystone_group_result_with_links_self",
            "huaweicloudsdkiam.v3.model.keystone_list_auth_domains_request",
            "huaweicloudsdkiam.v3.model.keystone_list_auth_domains_response",
            "huaweicloudsdkiam.v3.model.keystone_list_auth_projects_request",
            "huaweicloudsdkiam.v3.model.keystone_list_auth_projects_response",
            "huaweicloudsdkiam.v3.model.keystone_list_domain_permissions_for_group_request",
            "huaweicloudsdkiam.v3.model.keystone_list_domain_permissions_for_group_response",
            "huaweicloudsdkiam.v3.model.keystone_list_endpoints_request",
            "huaweicloudsdkiam.v3.model.keystone_list_endpoints_response",
            "huaweicloudsdkiam.v3.model.keystone_list_groups_for_user_request",
            "huaweicloudsdkiam.v3.model.keystone_list_groups_for_user_response",
            "huaweicloudsdkiam.v3.model.keystone_list_groups_request",
            "huaweicloudsdkiam.v3.model.keystone_list_groups_response",
            "huaweicloudsdkiam.v3.model.keystone_list_permissions_request",
            "huaweicloudsdkiam.v3.model.keystone_list_permissions_response",
            "huaweicloudsdkiam.v3.model.keystone_list_project_permissions_for_group_request",
            "huaweicloudsdkiam.v3.model.keystone_list_project_permissions_for_group_response",
            "huaweicloudsdkiam.v3.model.keystone_list_projects_for_user_request",
            "huaweicloudsdkiam.v3.model.keystone_list_projects_for_user_response",
            "huaweicloudsdkiam.v3.model.keystone_list_projects_request",
            "huaweicloudsdkiam.v3.model.keystone_list_projects_response",
            "huaweicloudsdkiam.v3.model.keystone_list_regions_request",
            "huaweicloudsdkiam.v3.model.keystone_list_regions_response",
            "huaweicloudsdkiam.v3.model.keystone_list_services_request",
            "huaweicloudsdkiam.v3.model.keystone_list_services_response",
            "huaweicloudsdkiam.v3.model.keystone_list_users_for_group_by_admin_request",
            "huaweicloudsdkiam.v3.model.keystone_list_users_for_group_by_admin_response",
            "huaweicloudsdkiam.v3.model.keystone_list_users_request",
            "huaweicloudsdkiam.v3.model.keystone_list_users_response",
            "huaweicloudsdkiam.v3.model.keystone_list_users_result",
            "huaweicloudsdkiam.v3.model.keystone_list_versions_request",
            "huaweicloudsdkiam.v3.model.keystone_list_versions_response",
            "huaweicloudsdkiam.v3.model.keystone_remove_domain_permission_from_group_request",
            "huaweicloudsdkiam.v3.model.keystone_remove_domain_permission_from_group_response",
            "huaweicloudsdkiam.v3.model.keystone_remove_project_permission_from_group_request",
            "huaweicloudsdkiam.v3.model.keystone_remove_project_permission_from_group_response",
            "huaweicloudsdkiam.v3.model.keystone_remove_user_from_group_request",
            "huaweicloudsdkiam.v3.model.keystone_remove_user_from_group_response",
            "huaweicloudsdkiam.v3.model.keystone_show_catalog_request",
            "huaweicloudsdkiam.v3.model.keystone_show_catalog_response",
            "huaweicloudsdkiam.v3.model.keystone_show_endpoint_request",
            "huaweicloudsdkiam.v3.model.keystone_show_endpoint_response",
            "huaweicloudsdkiam.v3.model.keystone_show_group_request",
            "huaweicloudsdkiam.v3.model.keystone_show_group_response",
            "huaweicloudsdkiam.v3.model.keystone_show_permission_request",
            "huaweicloudsdkiam.v3.model.keystone_show_permission_response",
            "huaweicloudsdkiam.v3.model.keystone_show_project_request",
            "huaweicloudsdkiam.v3.model.keystone_show_project_response",
            "huaweicloudsdkiam.v3.model.keystone_show_region_request",
            "huaweicloudsdkiam.v3.model.keystone_show_region_response",
            "huaweicloudsdkiam.v3.model.keystone_show_security_compliance_by_option_request",
            "huaweicloudsdkiam.v3.model.keystone_show_security_compliance_by_option_response",
            "huaweicloudsdkiam.v3.model.keystone_show_security_compliance_request",
            "huaweicloudsdkiam.v3.model.keystone_show_security_compliance_response",
            "huaweicloudsdkiam.v3.model.keystone_show_service_request",
            "huaweicloudsdkiam.v3.model.keystone_show_service_response",
            "huaweicloudsdkiam.v3.model.keystone_show_user_request",
            "huaweicloudsdkiam.v3.model.keystone_show_user_response",
            "huaweicloudsdkiam.v3.model.keystone_show_user_result",
            "huaweicloudsdkiam.v3.model.keystone_show_version_request",
            "huaweicloudsdkiam.v3.model.keystone_show_version_response",
            "huaweicloudsdkiam.v3.model.keystone_update_group_option",
            "huaweicloudsdkiam.v3.model.keystone_update_group_request",
            "huaweicloudsdkiam.v3.model.keystone_update_group_request_body",
            "huaweicloudsdkiam.v3.model.keystone_update_group_response",
            "huaweicloudsdkiam.v3.model.keystone_update_password_option",
            "huaweicloudsdkiam.v3.model.keystone_update_project_option",
            "huaweicloudsdkiam.v3.model.keystone_update_project_request",
            "huaweicloudsdkiam.v3.model.keystone_update_project_request_body",
            "huaweicloudsdkiam.v3.model.keystone_update_project_response",
            "huaweicloudsdkiam.v3.model.keystone_update_project_result",
            "huaweicloudsdkiam.v3.model.keystone_update_user_by_admin_request",
            "huaweicloudsdkiam.v3.model.keystone_update_user_by_admin_request_body",
            "huaweicloudsdkiam.v3.model.keystone_update_user_by_admin_response",
            "huaweicloudsdkiam.v3.model.keystone_update_user_by_admin_result",
            "huaweicloudsdkiam.v3.model.keystone_update_user_option",
            "huaweicloudsdkiam.v3.model.keystone_update_user_password_request",
            "huaweicloudsdkiam.v3.model.keystone_update_user_password_request_body",
            "huaweicloudsdkiam.v3.model.keystone_update_user_password_response",
            "huaweicloudsdkiam.v3.model.keystone_user_result",
            "huaweicloudsdkiam.v3.model.keystone_user_result_extra",
            "huaweicloudsdkiam.v3.model.links",
            "huaweicloudsdkiam.v3.model.links_self",
            "huaweicloudsdkiam.v3.model.list_agencies_request",
            "huaweicloudsdkiam.v3.model.list_agencies_response",
            "huaweicloudsdkiam.v3.model.list_all_projects_permissions_for_agency_request",
            "huaweicloudsdkiam.v3.model.list_all_projects_permissions_for_agency_response",
            "huaweicloudsdkiam.v3.model.list_custom_policies_request",
            "huaweicloudsdkiam.v3.model.list_custom_policies_response",
            "huaweicloudsdkiam.v3.model.list_domain_permissions_for_agency_request",
            "huaweicloudsdkiam.v3.model.list_domain_permissions_for_agency_response",
            "huaweicloudsdkiam.v3.model.list_permanent_access_keys_request",
            "huaweicloudsdkiam.v3.model.list_permanent_access_keys_response",
            "huaweicloudsdkiam.v3.model.list_project_permissions_for_agency_request",
            "huaweicloudsdkiam.v3.model.list_project_permissions_for_agency_response",
            "huaweicloudsdkiam.v3.model.list_user_login_protects_request",
            "huaweicloudsdkiam.v3.model.list_user_login_protects_response",
            "huaweicloudsdkiam.v3.model.list_user_mfa_devices_request",
            "huaweicloudsdkiam.v3.model.list_user_mfa_devices_response",
            "huaweicloudsdkiam.v3.model.login_policy_option",
            "huaweicloudsdkiam.v3.model.login_policy_result",
            "huaweicloudsdkiam.v3.model.login_protect_result",
            "huaweicloudsdkiam.v3.model.mfa_device_result",
            "huaweicloudsdkiam.v3.model.password_policy_option",
            "huaweicloudsdkiam.v3.model.password_policy_result",
            "huaweicloudsdkiam.v3.model.policy_depends",
            "huaweicloudsdkiam.v3.model.policy_role_result",
            "huaweicloudsdkiam.v3.model.policy_statement",
            "huaweicloudsdkiam.v3.model.project_details_and_status_result",
            "huaweicloudsdkiam.v3.model.project_result",
            "huaweicloudsdkiam.v3.model.protect_policy_option",
            "huaweicloudsdkiam.v3.model.protect_policy_result",
            "huaweicloudsdkiam.v3.model.quota_result",
            "huaweicloudsdkiam.v3.model.region",
            "huaweicloudsdkiam.v3.model.region_locales",
            "huaweicloudsdkiam.v3.model.remove_all_projects_permission_from_agency_request",
            "huaweicloudsdkiam.v3.model.remove_all_projects_permission_from_agency_response",
            "huaweicloudsdkiam.v3.model.remove_domain_permission_from_agency_request",
            "huaweicloudsdkiam.v3.model.remove_domain_permission_from_agency_response",
            "huaweicloudsdkiam.v3.model.remove_project_permission_from_agency_request",
            "huaweicloudsdkiam.v3.model.remove_project_permission_from_agency_response",
            "huaweicloudsdkiam.v3.model.resources",
            "huaweicloudsdkiam.v3.model.role_policy",
            "huaweicloudsdkiam.v3.model.role_result",
            "huaweicloudsdkiam.v3.model.security_compliance",
            "huaweicloudsdkiam.v3.model.service",
            "huaweicloudsdkiam.v3.model.service_policy",
            "huaweicloudsdkiam.v3.model.service_policy_role_option",
            "huaweicloudsdkiam.v3.model.service_policy_role_result",
            "huaweicloudsdkiam.v3.model.service_statement",
            "huaweicloudsdkiam.v3.model.show_agency_request",
            "huaweicloudsdkiam.v3.model.show_agency_response",
            "huaweicloudsdkiam.v3.model.show_credential",
            "huaweicloudsdkiam.v3.model.show_custom_policy_request",
            "huaweicloudsdkiam.v3.model.show_custom_policy_response",
            "huaweicloudsdkiam.v3.model.show_domain_api_acl_policy_request",
            "huaweicloudsdkiam.v3.model.show_domain_api_acl_policy_response",
            "huaweicloudsdkiam.v3.model.show_domain_console_acl_policy_request",
            "huaweicloudsdkiam.v3.model.show_domain_console_acl_policy_response",
            "huaweicloudsdkiam.v3.model.show_domain_login_policy_request",
            "huaweicloudsdkiam.v3.model.show_domain_login_policy_response",
            "huaweicloudsdkiam.v3.model.show_domain_password_policy_request",
            "huaweicloudsdkiam.v3.model.show_domain_password_policy_response",
            "huaweicloudsdkiam.v3.model.show_domain_protect_policy_request",
            "huaweicloudsdkiam.v3.model.show_domain_protect_policy_response",
            "huaweicloudsdkiam.v3.model.show_domain_quota_request",
            "huaweicloudsdkiam.v3.model.show_domain_quota_response",
            "huaweicloudsdkiam.v3.model.show_permanent_access_key_request",
            "huaweicloudsdkiam.v3.model.show_permanent_access_key_response",
            "huaweicloudsdkiam.v3.model.show_project_details_and_status_request",
            "huaweicloudsdkiam.v3.model.show_project_details_and_status_response",
            "huaweicloudsdkiam.v3.model.show_project_quota_request",
            "huaweicloudsdkiam.v3.model.show_project_quota_response",
            "huaweicloudsdkiam.v3.model.show_user_login_protect_request",
            "huaweicloudsdkiam.v3.model.show_user_login_protect_response",
            "huaweicloudsdkiam.v3.model.show_user_mfa_device_request",
            "huaweicloudsdkiam.v3.model.show_user_mfa_device_response",
            "huaweicloudsdkiam.v3.model.show_user_request",
            "huaweicloudsdkiam.v3.model.show_user_response",
            "huaweicloudsdkiam.v3.model.show_user_result",
            "huaweicloudsdkiam.v3.model.token_auth",
            "huaweicloudsdkiam.v3.model.token_auth_identity",
            "huaweicloudsdkiam.v3.model.update_agency_custom_policy_request",
            "huaweicloudsdkiam.v3.model.update_agency_custom_policy_request_body",
            "huaweicloudsdkiam.v3.model.update_agency_custom_policy_response",
            "huaweicloudsdkiam.v3.model.update_agency_option",
            "huaweicloudsdkiam.v3.model.update_agency_request",
            "huaweicloudsdkiam.v3.model.update_agency_request_body",
            "huaweicloudsdkiam.v3.model.update_agency_response",
            "huaweicloudsdkiam.v3.model.update_cloud_service_custom_policy_request",
            "huaweicloudsdkiam.v3.model.update_cloud_service_custom_policy_request_body",
            "huaweicloudsdkiam.v3.model.update_cloud_service_custom_policy_response",
            "huaweicloudsdkiam.v3.model.update_credential_option",
            "huaweicloudsdkiam.v3.model.update_credential_result",
            "huaweicloudsdkiam.v3.model.update_domain_api_acl_policy_request",
            "huaweicloudsdkiam.v3.model.update_domain_api_acl_policy_request_body",
            "huaweicloudsdkiam.v3.model.update_domain_api_acl_policy_response",
            "huaweicloudsdkiam.v3.model.update_domain_console_acl_policy_request",
            "huaweicloudsdkiam.v3.model.update_domain_console_acl_policy_request_body",
            "huaweicloudsdkiam.v3.model.update_domain_console_acl_policy_response",
            "huaweicloudsdkiam.v3.model.update_domain_login_policy_request",
            "huaweicloudsdkiam.v3.model.update_domain_login_policy_request_body",
            "huaweicloudsdkiam.v3.model.update_domain_login_policy_response",
            "huaweicloudsdkiam.v3.model.update_domain_password_policy_request",
            "huaweicloudsdkiam.v3.model.update_domain_password_policy_request_body",
            "huaweicloudsdkiam.v3.model.update_domain_password_policy_response",
            "huaweicloudsdkiam.v3.model.update_domain_protect_policy_request",
            "huaweicloudsdkiam.v3.model.update_domain_protect_policy_request_body",
            "huaweicloudsdkiam.v3.model.update_domain_protect_policy_response",
            "huaweicloudsdkiam.v3.model.update_permanent_access_key_request",
            "huaweicloudsdkiam.v3.model.update_permanent_access_key_request_body",
            "huaweicloudsdkiam.v3.model.update_permanent_access_key_response",
            "huaweicloudsdkiam.v3.model.update_project_option",
            "huaweicloudsdkiam.v3.model.update_project_status_request",
            "huaweicloudsdkiam.v3.model.update_project_status_request_body",
            "huaweicloudsdkiam.v3.model.update_project_status_response",
            "huaweicloudsdkiam.v3.model.update_user_information_option",
            "huaweicloudsdkiam.v3.model.update_user_information_request",
            "huaweicloudsdkiam.v3.model.update_user_information_request_body",
            "huaweicloudsdkiam.v3.model.update_user_information_response",
            "huaweicloudsdkiam.v3.model.update_user_option",
            "huaweicloudsdkiam.v3.model.update_user_request",
            "huaweicloudsdkiam.v3.model.update_user_request_body",
            "huaweicloudsdkiam.v3.model.update_user_response",
            "huaweicloudsdkiam.v3.model.update_user_result",
            "huaweicloudsdkiam.v3.model.version",
            "huaweicloudsdkiam.v3.model.version_links",
            "huaweicloudsdkiam.v3.model.version_mediatypes",
            "huaweicloudsdkiam.v3.model.versions"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkimage": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkimage",
            "huaweicloudsdkimage.v1",
            "huaweicloudsdkimage.v1.image_async_client",
            "huaweicloudsdkimage.v1.image_client",
            "huaweicloudsdkimage.v1.model",
            "huaweicloudsdkimage.v1.model.celebrity_recognition_req",
            "huaweicloudsdkimage.v1.model.celebrity_recognition_result_body",
            "huaweicloudsdkimage.v1.model.image_tagging_body",
            "huaweicloudsdkimage.v1.model.image_tagging_i18n_tag",
            "huaweicloudsdkimage.v1.model.image_tagging_item_body",
            "huaweicloudsdkimage.v1.model.image_tagging_req",
            "huaweicloudsdkimage.v1.model.run_celebrity_recognition_request",
            "huaweicloudsdkimage.v1.model.run_celebrity_recognition_response",
            "huaweicloudsdkimage.v1.model.run_image_tagging_request",
            "huaweicloudsdkimage.v1.model.run_image_tagging_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkims": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkims",
            "huaweicloudsdkims.v2",
            "huaweicloudsdkims.v2.ims_async_client",
            "huaweicloudsdkims.v2.ims_client",
            "huaweicloudsdkims.v2.model",
            "huaweicloudsdkims.v2.model.add_or_update_tags_request_body",
            "huaweicloudsdkims.v2.model.additional_properties",
            "huaweicloudsdkims.v2.model.batch_add_members_request",
            "huaweicloudsdkims.v2.model.batch_add_members_request_body",
            "huaweicloudsdkims.v2.model.batch_add_members_response",
            "huaweicloudsdkims.v2.model.batch_delete_members_request",
            "huaweicloudsdkims.v2.model.batch_delete_members_response",
            "huaweicloudsdkims.v2.model.batch_update_members_request",
            "huaweicloudsdkims.v2.model.batch_update_members_request_body",
            "huaweicloudsdkims.v2.model.batch_update_members_response",
            "huaweicloudsdkims.v2.model.copy_image_cross_region_request",
            "huaweicloudsdkims.v2.model.copy_image_cross_region_request_body",
            "huaweicloudsdkims.v2.model.copy_image_cross_region_response",
            "huaweicloudsdkims.v2.model.copy_image_in_region_request",
            "huaweicloudsdkims.v2.model.copy_image_in_region_request_body",
            "huaweicloudsdkims.v2.model.copy_image_in_region_response",
            "huaweicloudsdkims.v2.model.create_data_image",
            "huaweicloudsdkims.v2.model.create_data_image_request",
            "huaweicloudsdkims.v2.model.create_data_image_request_body",
            "huaweicloudsdkims.v2.model.create_data_image_response",
            "huaweicloudsdkims.v2.model.create_image_request",
            "huaweicloudsdkims.v2.model.create_image_request_body",
            "huaweicloudsdkims.v2.model.create_image_response",
            "huaweicloudsdkims.v2.model.create_or_update_tags_request",
            "huaweicloudsdkims.v2.model.create_or_update_tags_response",
            "huaweicloudsdkims.v2.model.create_whole_image_request",
            "huaweicloudsdkims.v2.model.create_whole_image_request_body",
            "huaweicloudsdkims.v2.model.create_whole_image_response",
            "huaweicloudsdkims.v2.model.export_image_request",
            "huaweicloudsdkims.v2.model.export_image_request_body",
            "huaweicloudsdkims.v2.model.export_image_response",
            "huaweicloudsdkims.v2.model.glance_add_image_member_request",
            "huaweicloudsdkims.v2.model.glance_add_image_member_request_body",
            "huaweicloudsdkims.v2.model.glance_add_image_member_response",
            "huaweicloudsdkims.v2.model.glance_create_image_metadata_request",
            "huaweicloudsdkims.v2.model.glance_create_image_metadata_request_body",
            "huaweicloudsdkims.v2.model.glance_create_image_metadata_response",
            "huaweicloudsdkims.v2.model.glance_create_tag_request",
            "huaweicloudsdkims.v2.model.glance_create_tag_response",
            "huaweicloudsdkims.v2.model.glance_delete_image_member_request",
            "huaweicloudsdkims.v2.model.glance_delete_image_member_response",
            "huaweicloudsdkims.v2.model.glance_delete_image_request",
            "huaweicloudsdkims.v2.model.glance_delete_image_request_body",
            "huaweicloudsdkims.v2.model.glance_delete_image_response",
            "huaweicloudsdkims.v2.model.glance_delete_tag_request",
            "huaweicloudsdkims.v2.model.glance_delete_tag_response",
            "huaweicloudsdkims.v2.model.glance_image_members",
            "huaweicloudsdkims.v2.model.glance_list_image_member_schemas_request",
            "huaweicloudsdkims.v2.model.glance_list_image_member_schemas_response",
            "huaweicloudsdkims.v2.model.glance_list_image_members_request",
            "huaweicloudsdkims.v2.model.glance_list_image_members_response",
            "huaweicloudsdkims.v2.model.glance_list_image_schemas_request",
            "huaweicloudsdkims.v2.model.glance_list_image_schemas_response",
            "huaweicloudsdkims.v2.model.glance_list_images_request",
            "huaweicloudsdkims.v2.model.glance_list_images_response",
            "huaweicloudsdkims.v2.model.glance_show_image_member_request",
            "huaweicloudsdkims.v2.model.glance_show_image_member_response",
            "huaweicloudsdkims.v2.model.glance_show_image_member_schemas_request",
            "huaweicloudsdkims.v2.model.glance_show_image_member_schemas_response",
            "huaweicloudsdkims.v2.model.glance_show_image_request",
            "huaweicloudsdkims.v2.model.glance_show_image_response",
            "huaweicloudsdkims.v2.model.glance_show_image_response_body",
            "huaweicloudsdkims.v2.model.glance_show_image_schemas_request",
            "huaweicloudsdkims.v2.model.glance_show_image_schemas_response",
            "huaweicloudsdkims.v2.model.glance_update_image_member_request",
            "huaweicloudsdkims.v2.model.glance_update_image_member_request_body",
            "huaweicloudsdkims.v2.model.glance_update_image_member_response",
            "huaweicloudsdkims.v2.model.glance_update_image_request",
            "huaweicloudsdkims.v2.model.glance_update_image_request_body",
            "huaweicloudsdkims.v2.model.glance_update_image_response",
            "huaweicloudsdkims.v2.model.image_info",
            "huaweicloudsdkims.v2.model.image_tag",
            "huaweicloudsdkims.v2.model.import_image_quick_request",
            "huaweicloudsdkims.v2.model.import_image_quick_response",
            "huaweicloudsdkims.v2.model.job_entities",
            "huaweicloudsdkims.v2.model.links",
            "huaweicloudsdkims.v2.model.list_images_request",
            "huaweicloudsdkims.v2.model.list_images_response",
            "huaweicloudsdkims.v2.model.list_os_versions_request",
            "huaweicloudsdkims.v2.model.list_os_versions_response",
            "huaweicloudsdkims.v2.model.list_os_versions_response_body",
            "huaweicloudsdkims.v2.model.list_tags_request",
            "huaweicloudsdkims.v2.model.list_tags_response",
            "huaweicloudsdkims.v2.model.os_version_info",
            "huaweicloudsdkims.v2.model.quick_import_image_by_file_request_body",
            "huaweicloudsdkims.v2.model.quota",
            "huaweicloudsdkims.v2.model.quota_info",
            "huaweicloudsdkims.v2.model.register_image_request",
            "huaweicloudsdkims.v2.model.register_image_request_body",
            "huaweicloudsdkims.v2.model.register_image_response",
            "huaweicloudsdkims.v2.model.resource_tag",
            "huaweicloudsdkims.v2.model.show_image_quota_request",
            "huaweicloudsdkims.v2.model.show_image_quota_response",
            "huaweicloudsdkims.v2.model.show_job_request",
            "huaweicloudsdkims.v2.model.show_job_response",
            "huaweicloudsdkims.v2.model.tag_key_value",
            "huaweicloudsdkims.v2.model.update_image_request",
            "huaweicloudsdkims.v2.model.update_image_request_body",
            "huaweicloudsdkims.v2.model.update_image_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkiotda": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkiotda",
            "huaweicloudsdkiotda.v5",
            "huaweicloudsdkiotda.v5.iotda_async_client",
            "huaweicloudsdkiotda.v5.iotda_client",
            "huaweicloudsdkiotda.v5.model",
            "huaweicloudsdkiotda.v5.model.action_device_alarm",
            "huaweicloudsdkiotda.v5.model.action_device_command",
            "huaweicloudsdkiotda.v5.model.action_dis_forwarding",
            "huaweicloudsdkiotda.v5.model.action_io_ta_forwarding",
            "huaweicloudsdkiotda.v5.model.action_kafka_forwarding",
            "huaweicloudsdkiotda.v5.model.action_obs_forwarding",
            "huaweicloudsdkiotda.v5.model.action_roma_forwarding",
            "huaweicloudsdkiotda.v5.model.action_smn_forwarding",
            "huaweicloudsdkiotda.v5.model.add_application",
            "huaweicloudsdkiotda.v5.model.add_application_request",
            "huaweicloudsdkiotda.v5.model.add_application_response",
            "huaweicloudsdkiotda.v5.model.add_certificate_request",
            "huaweicloudsdkiotda.v5.model.add_certificate_response",
            "huaweicloudsdkiotda.v5.model.add_device",
            "huaweicloudsdkiotda.v5.model.add_device_group_dto",
            "huaweicloudsdkiotda.v5.model.add_device_group_request",
            "huaweicloudsdkiotda.v5.model.add_device_group_response",
            "huaweicloudsdkiotda.v5.model.add_device_request",
            "huaweicloudsdkiotda.v5.model.add_device_response",
            "huaweicloudsdkiotda.v5.model.add_product",
            "huaweicloudsdkiotda.v5.model.application_dto",
            "huaweicloudsdkiotda.v5.model.async_device_command_request",
            "huaweicloudsdkiotda.v5.model.auth_info",
            "huaweicloudsdkiotda.v5.model.auth_info_without_secret",
            "huaweicloudsdkiotda.v5.model.batch_task_file",
            "huaweicloudsdkiotda.v5.model.bind_tags_dto",
            "huaweicloudsdkiotda.v5.model.certificates_rsp_dto",
            "huaweicloudsdkiotda.v5.model.change_rule_status_request",
            "huaweicloudsdkiotda.v5.model.change_rule_status_response",
            "huaweicloudsdkiotda.v5.model.check_certificate_request",
            "huaweicloudsdkiotda.v5.model.check_certificate_response",
            "huaweicloudsdkiotda.v5.model.cmd",
            "huaweicloudsdkiotda.v5.model.condition_group",
            "huaweicloudsdkiotda.v5.model.create_async_command_request",
            "huaweicloudsdkiotda.v5.model.create_async_command_response",
            "huaweicloudsdkiotda.v5.model.create_batch_task",
            "huaweicloudsdkiotda.v5.model.create_batch_task_request",
            "huaweicloudsdkiotda.v5.model.create_batch_task_response",
            "huaweicloudsdkiotda.v5.model.create_certificate_dto",
            "huaweicloudsdkiotda.v5.model.create_command_request",
            "huaweicloudsdkiotda.v5.model.create_command_response",
            "huaweicloudsdkiotda.v5.model.create_message_request",
            "huaweicloudsdkiotda.v5.model.create_message_response",
            "huaweicloudsdkiotda.v5.model.create_or_delete_device_in_group_request",
            "huaweicloudsdkiotda.v5.model.create_or_delete_device_in_group_response",
            "huaweicloudsdkiotda.v5.model.create_product_request",
            "huaweicloudsdkiotda.v5.model.create_product_response",
            "huaweicloudsdkiotda.v5.model.create_rule_request",
            "huaweicloudsdkiotda.v5.model.create_rule_response",
            "huaweicloudsdkiotda.v5.model.create_sub_req",
            "huaweicloudsdkiotda.v5.model.create_subscription_request",
            "huaweicloudsdkiotda.v5.model.create_subscription_response",
            "huaweicloudsdkiotda.v5.model.daily_timer_type",
            "huaweicloudsdkiotda.v5.model.delete_application_request",
            "huaweicloudsdkiotda.v5.model.delete_application_response",
            "huaweicloudsdkiotda.v5.model.delete_batch_task_file_request",
            "huaweicloudsdkiotda.v5.model.delete_batch_task_file_response",
            "huaweicloudsdkiotda.v5.model.delete_certificate_request",
            "huaweicloudsdkiotda.v5.model.delete_certificate_response",
            "huaweicloudsdkiotda.v5.model.delete_device_group_request",
            "huaweicloudsdkiotda.v5.model.delete_device_group_response",
            "huaweicloudsdkiotda.v5.model.delete_device_request",
            "huaweicloudsdkiotda.v5.model.delete_device_response",
            "huaweicloudsdkiotda.v5.model.delete_product_request",
            "huaweicloudsdkiotda.v5.model.delete_product_response",
            "huaweicloudsdkiotda.v5.model.delete_rule_request",
            "huaweicloudsdkiotda.v5.model.delete_rule_response",
            "huaweicloudsdkiotda.v5.model.delete_subscription_request",
            "huaweicloudsdkiotda.v5.model.delete_subscription_response",
            "huaweicloudsdkiotda.v5.model.device_command_request",
            "huaweicloudsdkiotda.v5.model.device_data_condition",
            "huaweicloudsdkiotda.v5.model.device_group_response_dto",
            "huaweicloudsdkiotda.v5.model.device_message",
            "huaweicloudsdkiotda.v5.model.device_message_condition",
            "huaweicloudsdkiotda.v5.model.device_message_request",
            "huaweicloudsdkiotda.v5.model.device_properties_request",
            "huaweicloudsdkiotda.v5.model.device_shadow_data",
            "huaweicloudsdkiotda.v5.model.device_shadow_properties",
            "huaweicloudsdkiotda.v5.model.device_status_condition",
            "huaweicloudsdkiotda.v5.model.error_info",
            "huaweicloudsdkiotda.v5.model.freeze_device_request",
            "huaweicloudsdkiotda.v5.model.freeze_device_response",
            "huaweicloudsdkiotda.v5.model.initial_desired",
            "huaweicloudsdkiotda.v5.model.list_batch_task_files_request",
            "huaweicloudsdkiotda.v5.model.list_batch_task_files_response",
            "huaweicloudsdkiotda.v5.model.list_batch_tasks_request",
            "huaweicloudsdkiotda.v5.model.list_batch_tasks_response",
            "huaweicloudsdkiotda.v5.model.list_certificates_request",
            "huaweicloudsdkiotda.v5.model.list_certificates_response",
            "huaweicloudsdkiotda.v5.model.list_device_groups_request",
            "huaweicloudsdkiotda.v5.model.list_device_groups_response",
            "huaweicloudsdkiotda.v5.model.list_device_messages_request",
            "huaweicloudsdkiotda.v5.model.list_device_messages_response",
            "huaweicloudsdkiotda.v5.model.list_devices_request",
            "huaweicloudsdkiotda.v5.model.list_devices_response",
            "huaweicloudsdkiotda.v5.model.list_products_request",
            "huaweicloudsdkiotda.v5.model.list_products_response",
            "huaweicloudsdkiotda.v5.model.list_properties_request",
            "huaweicloudsdkiotda.v5.model.list_properties_response",
            "huaweicloudsdkiotda.v5.model.list_resources_by_tags_request",
            "huaweicloudsdkiotda.v5.model.list_resources_by_tags_response",
            "huaweicloudsdkiotda.v5.model.list_rules_request",
            "huaweicloudsdkiotda.v5.model.list_rules_response",
            "huaweicloudsdkiotda.v5.model.list_subscriptions_request",
            "huaweicloudsdkiotda.v5.model.list_subscriptions_response",
            "huaweicloudsdkiotda.v5.model.message_result",
            "huaweicloudsdkiotda.v5.model.net_address",
            "huaweicloudsdkiotda.v5.model.page",
            "huaweicloudsdkiotda.v5.model.product_summary",
            "huaweicloudsdkiotda.v5.model.property_filter",
            "huaweicloudsdkiotda.v5.model.query_device_simplify",
            "huaweicloudsdkiotda.v5.model.query_resource_by_tags_dto",
            "huaweicloudsdkiotda.v5.model.reset_device_secret",
            "huaweicloudsdkiotda.v5.model.reset_device_secret_request",
            "huaweicloudsdkiotda.v5.model.reset_device_secret_response",
            "huaweicloudsdkiotda.v5.model.resource_dto",
            "huaweicloudsdkiotda.v5.model.rule",
            "huaweicloudsdkiotda.v5.model.rule_action",
            "huaweicloudsdkiotda.v5.model.rule_condition",
            "huaweicloudsdkiotda.v5.model.rule_response",
            "huaweicloudsdkiotda.v5.model.rule_status",
            "huaweicloudsdkiotda.v5.model.service_capability",
            "huaweicloudsdkiotda.v5.model.service_command",
            "huaweicloudsdkiotda.v5.model.service_command_para",
            "huaweicloudsdkiotda.v5.model.service_command_response",
            "huaweicloudsdkiotda.v5.model.service_event",
            "huaweicloudsdkiotda.v5.model.service_property",
            "huaweicloudsdkiotda.v5.model.show_application_request",
            "huaweicloudsdkiotda.v5.model.show_application_response",
            "huaweicloudsdkiotda.v5.model.show_applications_request",
            "huaweicloudsdkiotda.v5.model.show_applications_response",
            "huaweicloudsdkiotda.v5.model.show_async_device_command_request",
            "huaweicloudsdkiotda.v5.model.show_async_device_command_response",
            "huaweicloudsdkiotda.v5.model.show_batch_task_request",
            "huaweicloudsdkiotda.v5.model.show_batch_task_response",
            "huaweicloudsdkiotda.v5.model.show_device_group_request",
            "huaweicloudsdkiotda.v5.model.show_device_group_response",
            "huaweicloudsdkiotda.v5.model.show_device_message_request",
            "huaweicloudsdkiotda.v5.model.show_device_message_response",
            "huaweicloudsdkiotda.v5.model.show_device_request",
            "huaweicloudsdkiotda.v5.model.show_device_response",
            "huaweicloudsdkiotda.v5.model.show_device_shadow_request",
            "huaweicloudsdkiotda.v5.model.show_device_shadow_response",
            "huaweicloudsdkiotda.v5.model.show_devices_in_group_request",
            "huaweicloudsdkiotda.v5.model.show_devices_in_group_response",
            "huaweicloudsdkiotda.v5.model.show_product_request",
            "huaweicloudsdkiotda.v5.model.show_product_response",
            "huaweicloudsdkiotda.v5.model.show_rule_request",
            "huaweicloudsdkiotda.v5.model.show_rule_response",
            "huaweicloudsdkiotda.v5.model.show_subscription_request",
            "huaweicloudsdkiotda.v5.model.show_subscription_response",
            "huaweicloudsdkiotda.v5.model.simple_timer_type",
            "huaweicloudsdkiotda.v5.model.simplify_device",
            "huaweicloudsdkiotda.v5.model.strategy",
            "huaweicloudsdkiotda.v5.model.subject",
            "huaweicloudsdkiotda.v5.model.subscription_item",
            "huaweicloudsdkiotda.v5.model.tag_device_request",
            "huaweicloudsdkiotda.v5.model.tag_device_response",
            "huaweicloudsdkiotda.v5.model.tag_v5_dto",
            "huaweicloudsdkiotda.v5.model.task",
            "huaweicloudsdkiotda.v5.model.task_detail",
            "huaweicloudsdkiotda.v5.model.task_policy",
            "huaweicloudsdkiotda.v5.model.task_progress",
            "huaweicloudsdkiotda.v5.model.time_range",
            "huaweicloudsdkiotda.v5.model.unbind_tags_dto",
            "huaweicloudsdkiotda.v5.model.unfreeze_device_request",
            "huaweicloudsdkiotda.v5.model.unfreeze_device_response",
            "huaweicloudsdkiotda.v5.model.untag_device_request",
            "huaweicloudsdkiotda.v5.model.untag_device_response",
            "huaweicloudsdkiotda.v5.model.update_desired",
            "huaweicloudsdkiotda.v5.model.update_desireds",
            "huaweicloudsdkiotda.v5.model.update_device",
            "huaweicloudsdkiotda.v5.model.update_device_group_dto",
            "huaweicloudsdkiotda.v5.model.update_device_group_request",
            "huaweicloudsdkiotda.v5.model.update_device_group_response",
            "huaweicloudsdkiotda.v5.model.update_device_request",
            "huaweicloudsdkiotda.v5.model.update_device_response",
            "huaweicloudsdkiotda.v5.model.update_device_shadow_desired_data_request",
            "huaweicloudsdkiotda.v5.model.update_device_shadow_desired_data_response",
            "huaweicloudsdkiotda.v5.model.update_product",
            "huaweicloudsdkiotda.v5.model.update_product_request",
            "huaweicloudsdkiotda.v5.model.update_product_response",
            "huaweicloudsdkiotda.v5.model.update_properties_request",
            "huaweicloudsdkiotda.v5.model.update_properties_response",
            "huaweicloudsdkiotda.v5.model.update_rule_request",
            "huaweicloudsdkiotda.v5.model.update_rule_response",
            "huaweicloudsdkiotda.v5.model.update_sub_req",
            "huaweicloudsdkiotda.v5.model.update_subscription_request",
            "huaweicloudsdkiotda.v5.model.update_subscription_response",
            "huaweicloudsdkiotda.v5.model.verify_certificate_dto"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkkafka": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkkafka",
            "huaweicloudsdkkafka.v2",
            "huaweicloudsdkkafka.v2.kafka_async_client",
            "huaweicloudsdkkafka.v2.kafka_client",
            "huaweicloudsdkkafka.v2.model",
            "huaweicloudsdkkafka.v2.model.batch_create_or_delete_instance_tag_request",
            "huaweicloudsdkkafka.v2.model.batch_create_or_delete_instance_tag_response",
            "huaweicloudsdkkafka.v2.model.batch_create_or_delete_tag_req",
            "huaweicloudsdkkafka.v2.model.batch_delete_instance_topic_req",
            "huaweicloudsdkkafka.v2.model.batch_delete_instance_topic_request",
            "huaweicloudsdkkafka.v2.model.batch_delete_instance_topic_resp_topics",
            "huaweicloudsdkkafka.v2.model.batch_delete_instance_topic_response",
            "huaweicloudsdkkafka.v2.model.batch_restart_or_delete_instance_req",
            "huaweicloudsdkkafka.v2.model.batch_restart_or_delete_instance_resp_results",
            "huaweicloudsdkkafka.v2.model.batch_restart_or_delete_instances_request",
            "huaweicloudsdkkafka.v2.model.batch_restart_or_delete_instances_response",
            "huaweicloudsdkkafka.v2.model.create_connector_req",
            "huaweicloudsdkkafka.v2.model.create_connector_request",
            "huaweicloudsdkkafka.v2.model.create_connector_response",
            "huaweicloudsdkkafka.v2.model.create_instance_topic_req",
            "huaweicloudsdkkafka.v2.model.create_instance_topic_request",
            "huaweicloudsdkkafka.v2.model.create_instance_topic_response",
            "huaweicloudsdkkafka.v2.model.create_partition_req",
            "huaweicloudsdkkafka.v2.model.create_partition_request",
            "huaweicloudsdkkafka.v2.model.create_partition_response",
            "huaweicloudsdkkafka.v2.model.create_post_paid_instance_req",
            "huaweicloudsdkkafka.v2.model.create_post_paid_instance_req_tags",
            "huaweicloudsdkkafka.v2.model.create_post_paid_instance_request",
            "huaweicloudsdkkafka.v2.model.create_post_paid_instance_response",
            "huaweicloudsdkkafka.v2.model.create_sink_task_req",
            "huaweicloudsdkkafka.v2.model.create_sink_task_request",
            "huaweicloudsdkkafka.v2.model.create_sink_task_response",
            "huaweicloudsdkkafka.v2.model.delete_background_task_request",
            "huaweicloudsdkkafka.v2.model.delete_background_task_response",
            "huaweicloudsdkkafka.v2.model.delete_instance_request",
            "huaweicloudsdkkafka.v2.model.delete_instance_response",
            "huaweicloudsdkkafka.v2.model.delete_sink_task_request",
            "huaweicloudsdkkafka.v2.model.delete_sink_task_response",
            "huaweicloudsdkkafka.v2.model.list_available_zones_request",
            "huaweicloudsdkkafka.v2.model.list_available_zones_resp_available_zones",
            "huaweicloudsdkkafka.v2.model.list_available_zones_response",
            "huaweicloudsdkkafka.v2.model.list_background_tasks_request",
            "huaweicloudsdkkafka.v2.model.list_background_tasks_resp_tasks",
            "huaweicloudsdkkafka.v2.model.list_background_tasks_response",
            "huaweicloudsdkkafka.v2.model.list_instance_topics_request",
            "huaweicloudsdkkafka.v2.model.list_instance_topics_resp_topics",
            "huaweicloudsdkkafka.v2.model.list_instance_topics_response",
            "huaweicloudsdkkafka.v2.model.list_instances_request",
            "huaweicloudsdkkafka.v2.model.list_instances_resp_instances",
            "huaweicloudsdkkafka.v2.model.list_instances_response",
            "huaweicloudsdkkafka.v2.model.list_products_request",
            "huaweicloudsdkkafka.v2.model.list_products_resp_detail",
            "huaweicloudsdkkafka.v2.model.list_products_resp_hourly",
            "huaweicloudsdkkafka.v2.model.list_products_resp_io",
            "huaweicloudsdkkafka.v2.model.list_products_resp_values",
            "huaweicloudsdkkafka.v2.model.list_products_response",
            "huaweicloudsdkkafka.v2.model.list_sink_tasks_request",
            "huaweicloudsdkkafka.v2.model.list_sink_tasks_resp_tasks",
            "huaweicloudsdkkafka.v2.model.list_sink_tasks_response",
            "huaweicloudsdkkafka.v2.model.obs_destination_descriptor",
            "huaweicloudsdkkafka.v2.model.reset_manager_password_req",
            "huaweicloudsdkkafka.v2.model.reset_manager_password_request",
            "huaweicloudsdkkafka.v2.model.reset_manager_password_response",
            "huaweicloudsdkkafka.v2.model.reset_message_offset_req",
            "huaweicloudsdkkafka.v2.model.reset_message_offset_request",
            "huaweicloudsdkkafka.v2.model.reset_message_offset_response",
            "huaweicloudsdkkafka.v2.model.reset_password_req",
            "huaweicloudsdkkafka.v2.model.reset_password_request",
            "huaweicloudsdkkafka.v2.model.reset_password_response",
            "huaweicloudsdkkafka.v2.model.reset_replica_req",
            "huaweicloudsdkkafka.v2.model.reset_replica_req_partitions",
            "huaweicloudsdkkafka.v2.model.resize_instance_req",
            "huaweicloudsdkkafka.v2.model.resize_instance_request",
            "huaweicloudsdkkafka.v2.model.resize_instance_response",
            "huaweicloudsdkkafka.v2.model.restart_manager_request",
            "huaweicloudsdkkafka.v2.model.restart_manager_response",
            "huaweicloudsdkkafka.v2.model.show_background_task_request",
            "huaweicloudsdkkafka.v2.model.show_background_task_response",
            "huaweicloudsdkkafka.v2.model.show_ces_hierarchy_request",
            "huaweicloudsdkkafka.v2.model.show_ces_hierarchy_response",
            "huaweicloudsdkkafka.v2.model.show_ceshierarchy_resp_children",
            "huaweicloudsdkkafka.v2.model.show_ceshierarchy_resp_dimensions",
            "huaweicloudsdkkafka.v2.model.show_ceshierarchy_resp_instance_ids",
            "huaweicloudsdkkafka.v2.model.show_ceshierarchy_resp_nodes",
            "huaweicloudsdkkafka.v2.model.show_ceshierarchy_resp_partitions",
            "huaweicloudsdkkafka.v2.model.show_ceshierarchy_resp_queues",
            "huaweicloudsdkkafka.v2.model.show_cluster_request",
            "huaweicloudsdkkafka.v2.model.show_cluster_resp_cluster",
            "huaweicloudsdkkafka.v2.model.show_cluster_resp_cluster_brokers",
            "huaweicloudsdkkafka.v2.model.show_cluster_response",
            "huaweicloudsdkkafka.v2.model.show_coordinators_request",
            "huaweicloudsdkkafka.v2.model.show_coordinators_resp_coordinators",
            "huaweicloudsdkkafka.v2.model.show_coordinators_response",
            "huaweicloudsdkkafka.v2.model.show_groups_request",
            "huaweicloudsdkkafka.v2.model.show_groups_resp_group",
            "huaweicloudsdkkafka.v2.model.show_groups_resp_group_assignment",
            "huaweicloudsdkkafka.v2.model.show_groups_resp_group_group_message_offsets",
            "huaweicloudsdkkafka.v2.model.show_groups_resp_group_members",
            "huaweicloudsdkkafka.v2.model.show_groups_response",
            "huaweicloudsdkkafka.v2.model.show_instance_extend_product_info_request",
            "huaweicloudsdkkafka.v2.model.show_instance_extend_product_info_response",
            "huaweicloudsdkkafka.v2.model.show_instance_request",
            "huaweicloudsdkkafka.v2.model.show_instance_response",
            "huaweicloudsdkkafka.v2.model.show_instance_tags_request",
            "huaweicloudsdkkafka.v2.model.show_instance_tags_response",
            "huaweicloudsdkkafka.v2.model.show_instance_topic_detail_request",
            "huaweicloudsdkkafka.v2.model.show_instance_topic_detail_resp_partitions",
            "huaweicloudsdkkafka.v2.model.show_instance_topic_detail_resp_replicas",
            "huaweicloudsdkkafka.v2.model.show_instance_topic_detail_response",
            "huaweicloudsdkkafka.v2.model.show_maintain_windows_request",
            "huaweicloudsdkkafka.v2.model.show_maintain_windows_resp_maintain_windows",
            "huaweicloudsdkkafka.v2.model.show_maintain_windows_response",
            "huaweicloudsdkkafka.v2.model.show_messages_request",
            "huaweicloudsdkkafka.v2.model.show_messages_resp_messages",
            "huaweicloudsdkkafka.v2.model.show_messages_response",
            "huaweicloudsdkkafka.v2.model.show_partition_beginning_message_request",
            "huaweicloudsdkkafka.v2.model.show_partition_beginning_message_response",
            "huaweicloudsdkkafka.v2.model.show_partition_end_message_request",
            "huaweicloudsdkkafka.v2.model.show_partition_end_message_response",
            "huaweicloudsdkkafka.v2.model.show_partition_message_request",
            "huaweicloudsdkkafka.v2.model.show_partition_message_resp_message",
            "huaweicloudsdkkafka.v2.model.show_partition_message_response",
            "huaweicloudsdkkafka.v2.model.show_project_tags_request",
            "huaweicloudsdkkafka.v2.model.show_project_tags_resp_tags",
            "huaweicloudsdkkafka.v2.model.show_project_tags_response",
            "huaweicloudsdkkafka.v2.model.show_sink_task_detail_request",
            "huaweicloudsdkkafka.v2.model.show_sink_task_detail_resp_obs_destination_descriptor",
            "huaweicloudsdkkafka.v2.model.show_sink_task_detail_response",
            "huaweicloudsdkkafka.v2.model.update_instance_auto_create_topic_req",
            "huaweicloudsdkkafka.v2.model.update_instance_auto_create_topic_request",
            "huaweicloudsdkkafka.v2.model.update_instance_auto_create_topic_response",
            "huaweicloudsdkkafka.v2.model.update_instance_cross_vpcip_req",
            "huaweicloudsdkkafka.v2.model.update_instance_cross_vpcip_request",
            "huaweicloudsdkkafka.v2.model.update_instance_cross_vpcip_resp_results",
            "huaweicloudsdkkafka.v2.model.update_instance_cross_vpcip_response",
            "huaweicloudsdkkafka.v2.model.update_instance_req",
            "huaweicloudsdkkafka.v2.model.update_instance_request",
            "huaweicloudsdkkafka.v2.model.update_instance_response",
            "huaweicloudsdkkafka.v2.model.update_instance_topic_req",
            "huaweicloudsdkkafka.v2.model.update_instance_topic_req_topics",
            "huaweicloudsdkkafka.v2.model.update_instance_topic_request",
            "huaweicloudsdkkafka.v2.model.update_instance_topic_response",
            "huaweicloudsdkkafka.v2.model.update_sink_task_quota_req",
            "huaweicloudsdkkafka.v2.model.update_sink_task_quota_request",
            "huaweicloudsdkkafka.v2.model.update_sink_task_quota_response",
            "huaweicloudsdkkafka.v2.model.update_topic_replica_request",
            "huaweicloudsdkkafka.v2.model.update_topic_replica_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkkms": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkkms",
            "huaweicloudsdkkms.v1",
            "huaweicloudsdkkms.v1.kms_async_client",
            "huaweicloudsdkkms.v1.kms_client",
            "huaweicloudsdkkms.v1.model",
            "huaweicloudsdkkms.v1.model.action_resources",
            "huaweicloudsdkkms.v1.model.api_link",
            "huaweicloudsdkkms.v1.model.api_version_detail",
            "huaweicloudsdkkms.v1.model.batch_create_kms_tags_request",
            "huaweicloudsdkkms.v1.model.batch_create_kms_tags_request_body",
            "huaweicloudsdkkms.v1.model.batch_create_kms_tags_response",
            "huaweicloudsdkkms.v1.model.cancel_grant_request",
            "huaweicloudsdkkms.v1.model.cancel_grant_response",
            "huaweicloudsdkkms.v1.model.cancel_key_deletion_request",
            "huaweicloudsdkkms.v1.model.cancel_key_deletion_response",
            "huaweicloudsdkkms.v1.model.cancel_self_grant_request",
            "huaweicloudsdkkms.v1.model.cancel_self_grant_response",
            "huaweicloudsdkkms.v1.model.create_datakey_request",
            "huaweicloudsdkkms.v1.model.create_datakey_request_body",
            "huaweicloudsdkkms.v1.model.create_datakey_response",
            "huaweicloudsdkkms.v1.model.create_datakey_without_plaintext_request",
            "huaweicloudsdkkms.v1.model.create_datakey_without_plaintext_response",
            "huaweicloudsdkkms.v1.model.create_grant_request",
            "huaweicloudsdkkms.v1.model.create_grant_request_body",
            "huaweicloudsdkkms.v1.model.create_grant_response",
            "huaweicloudsdkkms.v1.model.create_key_request",
            "huaweicloudsdkkms.v1.model.create_key_request_body",
            "huaweicloudsdkkms.v1.model.create_key_response",
            "huaweicloudsdkkms.v1.model.create_kms_tag_request",
            "huaweicloudsdkkms.v1.model.create_kms_tag_request_body",
            "huaweicloudsdkkms.v1.model.create_kms_tag_response",
            "huaweicloudsdkkms.v1.model.create_parameters_for_import_request",
            "huaweicloudsdkkms.v1.model.create_parameters_for_import_response",
            "huaweicloudsdkkms.v1.model.create_random_request",
            "huaweicloudsdkkms.v1.model.create_random_response",
            "huaweicloudsdkkms.v1.model.decrypt_data_request",
            "huaweicloudsdkkms.v1.model.decrypt_data_request_body",
            "huaweicloudsdkkms.v1.model.decrypt_data_response",
            "huaweicloudsdkkms.v1.model.decrypt_datakey_request",
            "huaweicloudsdkkms.v1.model.decrypt_datakey_request_body",
            "huaweicloudsdkkms.v1.model.decrypt_datakey_response",
            "huaweicloudsdkkms.v1.model.delete_imported_key_material_request",
            "huaweicloudsdkkms.v1.model.delete_imported_key_material_response",
            "huaweicloudsdkkms.v1.model.delete_key_request",
            "huaweicloudsdkkms.v1.model.delete_key_response",
            "huaweicloudsdkkms.v1.model.delete_tag_request",
            "huaweicloudsdkkms.v1.model.delete_tag_response",
            "huaweicloudsdkkms.v1.model.disable_key_request",
            "huaweicloudsdkkms.v1.model.disable_key_response",
            "huaweicloudsdkkms.v1.model.disable_key_rotation_request",
            "huaweicloudsdkkms.v1.model.disable_key_rotation_response",
            "huaweicloudsdkkms.v1.model.enable_key_request",
            "huaweicloudsdkkms.v1.model.enable_key_response",
            "huaweicloudsdkkms.v1.model.enable_key_rotation_request",
            "huaweicloudsdkkms.v1.model.enable_key_rotation_response",
            "huaweicloudsdkkms.v1.model.encrypt_data_request",
            "huaweicloudsdkkms.v1.model.encrypt_data_request_body",
            "huaweicloudsdkkms.v1.model.encrypt_data_response",
            "huaweicloudsdkkms.v1.model.encrypt_datakey_request",
            "huaweicloudsdkkms.v1.model.encrypt_datakey_request_body",
            "huaweicloudsdkkms.v1.model.encrypt_datakey_response",
            "huaweicloudsdkkms.v1.model.exception_handler",
            "huaweicloudsdkkms.v1.model.gen_random_request_body",
            "huaweicloudsdkkms.v1.model.get_parameters_for_import_request_body",
            "huaweicloudsdkkms.v1.model.grants",
            "huaweicloudsdkkms.v1.model.import_key_material_request",
            "huaweicloudsdkkms.v1.model.import_key_material_request_body",
            "huaweicloudsdkkms.v1.model.import_key_material_response",
            "huaweicloudsdkkms.v1.model.ke_k_info",
            "huaweicloudsdkkms.v1.model.key_alias_info",
            "huaweicloudsdkkms.v1.model.key_description_info",
            "huaweicloudsdkkms.v1.model.key_details",
            "huaweicloudsdkkms.v1.model.key_status_info",
            "huaweicloudsdkkms.v1.model.list_grants_request",
            "huaweicloudsdkkms.v1.model.list_grants_request_body",
            "huaweicloudsdkkms.v1.model.list_grants_response",
            "huaweicloudsdkkms.v1.model.list_key_detail_request",
            "huaweicloudsdkkms.v1.model.list_key_detail_response",
            "huaweicloudsdkkms.v1.model.list_keys_request",
            "huaweicloudsdkkms.v1.model.list_keys_request_body",
            "huaweicloudsdkkms.v1.model.list_keys_response",
            "huaweicloudsdkkms.v1.model.list_kms_by_tags_request",
            "huaweicloudsdkkms.v1.model.list_kms_by_tags_request_body",
            "huaweicloudsdkkms.v1.model.list_kms_by_tags_response",
            "huaweicloudsdkkms.v1.model.list_kms_tags_request",
            "huaweicloudsdkkms.v1.model.list_kms_tags_response",
            "huaweicloudsdkkms.v1.model.list_retirable_grants_request",
            "huaweicloudsdkkms.v1.model.list_retirable_grants_request_body",
            "huaweicloudsdkkms.v1.model.list_retirable_grants_response",
            "huaweicloudsdkkms.v1.model.operate_key_request_body",
            "huaweicloudsdkkms.v1.model.quotas",
            "huaweicloudsdkkms.v1.model.resources",
            "huaweicloudsdkkms.v1.model.revoke_grant_request_body",
            "huaweicloudsdkkms.v1.model.schedule_key_deletion_request_body",
            "huaweicloudsdkkms.v1.model.show_key_rotation_status_request",
            "huaweicloudsdkkms.v1.model.show_key_rotation_status_response",
            "huaweicloudsdkkms.v1.model.show_kms_tags_request",
            "huaweicloudsdkkms.v1.model.show_kms_tags_response",
            "huaweicloudsdkkms.v1.model.show_user_instances_request",
            "huaweicloudsdkkms.v1.model.show_user_instances_response",
            "huaweicloudsdkkms.v1.model.show_user_quotas_request",
            "huaweicloudsdkkms.v1.model.show_user_quotas_response",
            "huaweicloudsdkkms.v1.model.show_version_request",
            "huaweicloudsdkkms.v1.model.show_version_response",
            "huaweicloudsdkkms.v1.model.show_versions_request",
            "huaweicloudsdkkms.v1.model.show_versions_response",
            "huaweicloudsdkkms.v1.model.tag",
            "huaweicloudsdkkms.v1.model.tag_item",
            "huaweicloudsdkkms.v1.model.update_key_alias_request",
            "huaweicloudsdkkms.v1.model.update_key_alias_request_body",
            "huaweicloudsdkkms.v1.model.update_key_alias_response",
            "huaweicloudsdkkms.v1.model.update_key_description_request",
            "huaweicloudsdkkms.v1.model.update_key_description_request_body",
            "huaweicloudsdkkms.v1.model.update_key_description_response",
            "huaweicloudsdkkms.v1.model.update_key_rotation_interval_request",
            "huaweicloudsdkkms.v1.model.update_key_rotation_interval_request_body",
            "huaweicloudsdkkms.v1.model.update_key_rotation_interval_response"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdklive": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdklive",
            "huaweicloudsdklive.v1",
            "huaweicloudsdklive.v1.liveapi_async_client",
            "huaweicloudsdklive.v1.liveapi_client",
            "huaweicloudsdklive.v1.model",
            "huaweicloudsdklive.v1.model.app_quality_info",
            "huaweicloudsdklive.v1.model.bandwidth_info",
            "huaweicloudsdklive.v1.model.create_record_config_request",
            "huaweicloudsdklive.v1.model.create_record_config_response",
            "huaweicloudsdklive.v1.model.create_stream_forbidden_request",
            "huaweicloudsdklive.v1.model.create_stream_forbidden_response",
            "huaweicloudsdklive.v1.model.create_transcodings_template_request",
            "huaweicloudsdklive.v1.model.create_transcodings_template_response",
            "huaweicloudsdklive.v1.model.delete_record_config_request",
            "huaweicloudsdklive.v1.model.delete_record_config_response",
            "huaweicloudsdklive.v1.model.delete_stream_forbidden_request",
            "huaweicloudsdklive.v1.model.delete_stream_forbidden_response",
            "huaweicloudsdklive.v1.model.delete_transcodings_template_request",
            "huaweicloudsdklive.v1.model.delete_transcodings_template_response",
            "huaweicloudsdklive.v1.model.list_record_configs_request",
            "huaweicloudsdklive.v1.model.list_record_configs_response",
            "huaweicloudsdklive.v1.model.list_stream_forbidden_request",
            "huaweicloudsdklive.v1.model.list_stream_forbidden_response",
            "huaweicloudsdklive.v1.model.obs_file_addr",
            "huaweicloudsdklive.v1.model.quality_info",
            "huaweicloudsdklive.v1.model.record_config_info",
            "huaweicloudsdklive.v1.model.show_bandwidth_request",
            "huaweicloudsdklive.v1.model.show_bandwidth_response",
            "huaweicloudsdklive.v1.model.show_online_users_request",
            "huaweicloudsdklive.v1.model.show_online_users_response",
            "huaweicloudsdklive.v1.model.show_traffic_request",
            "huaweicloudsdklive.v1.model.show_traffic_response",
            "huaweicloudsdklive.v1.model.show_transcodings_template_request",
            "huaweicloudsdklive.v1.model.show_transcodings_template_response",
            "huaweicloudsdklive.v1.model.stream_forbidden_list",
            "huaweicloudsdklive.v1.model.stream_forbidden_setting",
            "huaweicloudsdklive.v1.model.stream_transcoding_template",
            "huaweicloudsdklive.v1.model.traffic_info",
            "huaweicloudsdklive.v1.model.update_stream_forbidden_request",
            "huaweicloudsdklive.v1.model.update_stream_forbidden_response",
            "huaweicloudsdklive.v1.model.update_transcodings_template_request",
            "huaweicloudsdklive.v1.model.update_transcodings_template_response",
            "huaweicloudsdklive.v1.model.user_info"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkmeeting": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkmeeting",
            "huaweicloudsdkmeeting.v1",
            "huaweicloudsdkmeeting.v1.meeting_async_client",
            "huaweicloudsdkmeeting.v1.meeting_client",
            "huaweicloudsdkmeeting.v1.meeting_credentials",
            "huaweicloudsdkmeeting.v1.model",
            "huaweicloudsdkmeeting.v1.model.active_dto",
            "huaweicloudsdkmeeting.v1.model.add_corp_admin_request",
            "huaweicloudsdkmeeting.v1.model.add_corp_admin_response",
            "huaweicloudsdkmeeting.v1.model.add_corp_dto",
            "huaweicloudsdkmeeting.v1.model.add_corp_request",
            "huaweicloudsdkmeeting.v1.model.add_corp_res_dto",
            "huaweicloudsdkmeeting.v1.model.add_corp_response",
            "huaweicloudsdkmeeting.v1.model.add_department_request",
            "huaweicloudsdkmeeting.v1.model.add_department_response",
            "huaweicloudsdkmeeting.v1.model.add_device_dto",
            "huaweicloudsdkmeeting.v1.model.add_device_request",
            "huaweicloudsdkmeeting.v1.model.add_device_response",
            "huaweicloudsdkmeeting.v1.model.add_program_request",
            "huaweicloudsdkmeeting.v1.model.add_program_response",
            "huaweicloudsdkmeeting.v1.model.add_publication_request",
            "huaweicloudsdkmeeting.v1.model.add_publication_response",
            "huaweicloudsdkmeeting.v1.model.add_resource_request",
            "huaweicloudsdkmeeting.v1.model.add_resource_response",
            "huaweicloudsdkmeeting.v1.model.add_to_personal_space_request",
            "huaweicloudsdkmeeting.v1.model.add_to_personal_space_response",
            "huaweicloudsdkmeeting.v1.model.add_user_dto",
            "huaweicloudsdkmeeting.v1.model.add_user_request",
            "huaweicloudsdkmeeting.v1.model.add_user_response",
            "huaweicloudsdkmeeting.v1.model.admin_dto",
            "huaweicloudsdkmeeting.v1.model.admin_reset_pwd_req_dto",
            "huaweicloudsdkmeeting.v1.model.allow_guest_unmute_request",
            "huaweicloudsdkmeeting.v1.model.allow_guest_unmute_response",
            "huaweicloudsdkmeeting.v1.model.associate_vmr_request",
            "huaweicloudsdkmeeting.v1.model.associate_vmr_response",
            "huaweicloudsdkmeeting.v1.model.attendee",
            "huaweicloudsdkmeeting.v1.model.batch_delete_corp_admins_request",
            "huaweicloudsdkmeeting.v1.model.batch_delete_corp_admins_response",
            "huaweicloudsdkmeeting.v1.model.batch_delete_devices_request",
            "huaweicloudsdkmeeting.v1.model.batch_delete_devices_response",
            "huaweicloudsdkmeeting.v1.model.batch_delete_materials_request",
            "huaweicloudsdkmeeting.v1.model.batch_delete_materials_response",
            "huaweicloudsdkmeeting.v1.model.batch_delete_programs_request",
            "huaweicloudsdkmeeting.v1.model.batch_delete_programs_response",
            "huaweicloudsdkmeeting.v1.model.batch_delete_publications_request",
            "huaweicloudsdkmeeting.v1.model.batch_delete_publications_response",
            "huaweicloudsdkmeeting.v1.model.batch_delete_users_request",
            "huaweicloudsdkmeeting.v1.model.batch_delete_users_response",
            "huaweicloudsdkmeeting.v1.model.batch_update_devices_status_request",
            "huaweicloudsdkmeeting.v1.model.batch_update_devices_status_response",
            "huaweicloudsdkmeeting.v1.model.batch_update_user_status_request",
            "huaweicloudsdkmeeting.v1.model.batch_update_user_status_response",
            "huaweicloudsdkmeeting.v1.model.broadcast_participant_request",
            "huaweicloudsdkmeeting.v1.model.broadcast_participant_response",
            "huaweicloudsdkmeeting.v1.model.cancel_meeting_request",
            "huaweicloudsdkmeeting.v1.model.cancel_meeting_response",
            "huaweicloudsdkmeeting.v1.model.check_slide_verify_code_request",
            "huaweicloudsdkmeeting.v1.model.check_slide_verify_code_response",
            "huaweicloudsdkmeeting.v1.model.check_token_request",
            "huaweicloudsdkmeeting.v1.model.check_token_response",
            "huaweicloudsdkmeeting.v1.model.check_veri_code_for_update_user_info_request",
            "huaweicloudsdkmeeting.v1.model.check_veri_code_for_update_user_info_response",
            "huaweicloudsdkmeeting.v1.model.check_verify_code_request",
            "huaweicloudsdkmeeting.v1.model.check_verify_code_response",
            "huaweicloudsdkmeeting.v1.model.conf_attendee_record_info",
            "huaweicloudsdkmeeting.v1.model.conf_ctl_record_info",
            "huaweicloudsdkmeeting.v1.model.conference_info",
            "huaweicloudsdkmeeting.v1.model.corp_admin_dto",
            "huaweicloudsdkmeeting.v1.model.corp_basic_dto",
            "huaweicloudsdkmeeting.v1.model.corp_basic_info_dto",
            "huaweicloudsdkmeeting.v1.model.create_anonymous_auth_random_request",
            "huaweicloudsdkmeeting.v1.model.create_anonymous_auth_random_response",
            "huaweicloudsdkmeeting.v1.model.create_conf_token_request",
            "huaweicloudsdkmeeting.v1.model.create_conf_token_response",
            "huaweicloudsdkmeeting.v1.model.create_meeting_request",
            "huaweicloudsdkmeeting.v1.model.create_meeting_response",
            "huaweicloudsdkmeeting.v1.model.create_program_request_dto",
            "huaweicloudsdkmeeting.v1.model.create_publication_request_dto",
            "huaweicloudsdkmeeting.v1.model.cycle_params",
            "huaweicloudsdkmeeting.v1.model.del_attend_info",
            "huaweicloudsdkmeeting.v1.model.delete_attendees_request",
            "huaweicloudsdkmeeting.v1.model.delete_attendees_response",
            "huaweicloudsdkmeeting.v1.model.delete_corp_request",
            "huaweicloudsdkmeeting.v1.model.delete_corp_response",
            "huaweicloudsdkmeeting.v1.model.delete_corp_vmr_request",
            "huaweicloudsdkmeeting.v1.model.delete_corp_vmr_response",
            "huaweicloudsdkmeeting.v1.model.delete_department_request",
            "huaweicloudsdkmeeting.v1.model.delete_department_response",
            "huaweicloudsdkmeeting.v1.model.delete_recordings_request",
            "huaweicloudsdkmeeting.v1.model.delete_recordings_response",
            "huaweicloudsdkmeeting.v1.model.delete_resource_request",
            "huaweicloudsdkmeeting.v1.model.delete_resource_response",
            "huaweicloudsdkmeeting.v1.model.dept_basic_dto",
            "huaweicloudsdkmeeting.v1.model.dept_dto",
            "huaweicloudsdkmeeting.v1.model.disassociate_vmr_request",
            "huaweicloudsdkmeeting.v1.model.disassociate_vmr_response",
            "huaweicloudsdkmeeting.v1.model.edit_meeting_request",
            "huaweicloudsdkmeeting.v1.model.edit_meeting_response",
            "huaweicloudsdkmeeting.v1.model.hand_request",
            "huaweicloudsdkmeeting.v1.model.hand_response",
            "huaweicloudsdkmeeting.v1.model.hang_up_request",
            "huaweicloudsdkmeeting.v1.model.hang_up_response",
            "huaweicloudsdkmeeting.v1.model.id_mark_dto",
            "huaweicloudsdkmeeting.v1.model.invite_participant_request",
            "huaweicloudsdkmeeting.v1.model.invite_participant_response",
            "huaweicloudsdkmeeting.v1.model.invite_with_pwd_request",
            "huaweicloudsdkmeeting.v1.model.invite_with_pwd_response",
            "huaweicloudsdkmeeting.v1.model.list_meeting_file_response_dto",
            "huaweicloudsdkmeeting.v1.model.live_request",
            "huaweicloudsdkmeeting.v1.model.live_response",
            "huaweicloudsdkmeeting.v1.model.lock_meeting_request",
            "huaweicloudsdkmeeting.v1.model.lock_meeting_response",
            "huaweicloudsdkmeeting.v1.model.lock_view_request",
            "huaweicloudsdkmeeting.v1.model.lock_view_response",
            "huaweicloudsdkmeeting.v1.model.material",
            "huaweicloudsdkmeeting.v1.model.meeting_file_base",
            "huaweicloudsdkmeeting.v1.model.mod_admin_dto",
            "huaweicloudsdkmeeting.v1.model.mod_corp_basic_dto",
            "huaweicloudsdkmeeting.v1.model.mod_corp_basic_info_dto",
            "huaweicloudsdkmeeting.v1.model.mod_corp_dto",
            "huaweicloudsdkmeeting.v1.model.mod_dept_dto",
            "huaweicloudsdkmeeting.v1.model.mod_device_dto",
            "huaweicloudsdkmeeting.v1.model.mod_member_dto",
            "huaweicloudsdkmeeting.v1.model.mod_pwd_req_dto",
            "huaweicloudsdkmeeting.v1.model.mod_resource_dto",
            "huaweicloudsdkmeeting.v1.model.mod_user_dto",
            "huaweicloudsdkmeeting.v1.model.mod_vmr_dto",
            "huaweicloudsdkmeeting.v1.model.mute_meeting_request",
            "huaweicloudsdkmeeting.v1.model.mute_meeting_response",
            "huaweicloudsdkmeeting.v1.model.mute_participant_request",
            "huaweicloudsdkmeeting.v1.model.mute_participant_response",
            "huaweicloudsdkmeeting.v1.model.page_participant",
            "huaweicloudsdkmeeting.v1.model.pages",
            "huaweicloudsdkmeeting.v1.model.part_attendee",
            "huaweicloudsdkmeeting.v1.model.participant_info",
            "huaweicloudsdkmeeting.v1.model.password_entry",
            "huaweicloudsdkmeeting.v1.model.program_item_request_base",
            "huaweicloudsdkmeeting.v1.model.program_item_response_base",
            "huaweicloudsdkmeeting.v1.model.program_request_base",
            "huaweicloudsdkmeeting.v1.model.program_response_base",
            "huaweicloudsdkmeeting.v1.model.prolong_meeting_request",
            "huaweicloudsdkmeeting.v1.model.prolong_meeting_response",
            "huaweicloudsdkmeeting.v1.model.publication_request_base",
            "huaweicloudsdkmeeting.v1.model.publication_response_base",
            "huaweicloudsdkmeeting.v1.model.publish_dept_response_dto",
            "huaweicloudsdkmeeting.v1.model.publish_device_response_dto",
            "huaweicloudsdkmeeting.v1.model.query_admin_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_corp_admin_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_corp_basic_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_corp_res_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_corp_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_corp_vc_res_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_dept_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_device_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_device_type_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_org_vmr_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_resource_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_vmr_pkg_res_result_dto",
            "huaweicloudsdkmeeting.v1.model.query_vmr_result_dto",
            "huaweicloudsdkmeeting.v1.model.real_time_attendee",
            "huaweicloudsdkmeeting.v1.model.real_time_conf_info",
            "huaweicloudsdkmeeting.v1.model.real_time_participant",
            "huaweicloudsdkmeeting.v1.model.record_request",
            "huaweicloudsdkmeeting.v1.model.record_response",
            "huaweicloudsdkmeeting.v1.model.record_result_do",
            "huaweicloudsdkmeeting.v1.model.rename_participant_request",
            "huaweicloudsdkmeeting.v1.model.rename_participant_response",
            "huaweicloudsdkmeeting.v1.model.res_detail_dto",
            "huaweicloudsdkmeeting.v1.model.reset_activecode_request",
            "huaweicloudsdkmeeting.v1.model.reset_activecode_response",
            "huaweicloudsdkmeeting.v1.model.reset_pwd_by_admin_request",
            "huaweicloudsdkmeeting.v1.model.reset_pwd_by_admin_response",
            "huaweicloudsdkmeeting.v1.model.reset_pwd_req_dtov1",
            "huaweicloudsdkmeeting.v1.model.reset_pwd_request",
            "huaweicloudsdkmeeting.v1.model.reset_pwd_response",
            "huaweicloudsdkmeeting.v1.model.resource_dto",
            "huaweicloudsdkmeeting.v1.model.rest_allow_un_mute_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_attendee_dto",
            "huaweicloudsdkmeeting.v1.model.rest_bulk_del_attend_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_bulk_hang_up_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_chair_token_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_chair_view_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_conf_config_dto",
            "huaweicloudsdkmeeting.v1.model.rest_hands_up_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_invite_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_invite_with_pwd_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_lock_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_lock_site_view_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_mixed_picture_body",
            "huaweicloudsdkmeeting.v1.model.rest_mute_participant_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_mute_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_participant_view_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_prolong_dur_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_rename_part_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_schedule_conf_dto",
            "huaweicloudsdkmeeting.v1.model.rest_set_live_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_set_record_req_body",
            "huaweicloudsdkmeeting.v1.model.rest_switch_mode_req_body",
            "huaweicloudsdkmeeting.v1.model.rollcall_participant_request",
            "huaweicloudsdkmeeting.v1.model.rollcall_participant_response",
            "huaweicloudsdkmeeting.v1.model.search_attendance_records_of_his_meeting_request",
            "huaweicloudsdkmeeting.v1.model.search_attendance_records_of_his_meeting_response",
            "huaweicloudsdkmeeting.v1.model.search_corp_admins_request",
            "huaweicloudsdkmeeting.v1.model.search_corp_admins_response",
            "huaweicloudsdkmeeting.v1.model.search_corp_dir_request",
            "huaweicloudsdkmeeting.v1.model.search_corp_dir_response",
            "huaweicloudsdkmeeting.v1.model.search_corp_request",
            "huaweicloudsdkmeeting.v1.model.search_corp_response",
            "huaweicloudsdkmeeting.v1.model.search_corp_vmr_request",
            "huaweicloudsdkmeeting.v1.model.search_corp_vmr_response",
            "huaweicloudsdkmeeting.v1.model.search_ctl_records_of_his_meeting_request",
            "huaweicloudsdkmeeting.v1.model.search_ctl_records_of_his_meeting_response",
            "huaweicloudsdkmeeting.v1.model.search_department_by_name_request",
            "huaweicloudsdkmeeting.v1.model.search_department_by_name_response",
            "huaweicloudsdkmeeting.v1.model.search_devices_request",
            "huaweicloudsdkmeeting.v1.model.search_devices_response",
            "huaweicloudsdkmeeting.v1.model.search_his_meetings_request",
            "huaweicloudsdkmeeting.v1.model.search_his_meetings_response",
            "huaweicloudsdkmeeting.v1.model.search_materials_request",
            "huaweicloudsdkmeeting.v1.model.search_materials_response",
            "huaweicloudsdkmeeting.v1.model.search_meeting_file_list_request",
            "huaweicloudsdkmeeting.v1.model.search_meeting_file_list_response",
            "huaweicloudsdkmeeting.v1.model.search_meetings_request",
            "huaweicloudsdkmeeting.v1.model.search_meetings_response",
            "huaweicloudsdkmeeting.v1.model.search_member_vmr_request",
            "huaweicloudsdkmeeting.v1.model.search_member_vmr_response",
            "huaweicloudsdkmeeting.v1.model.search_online_meetings_request",
            "huaweicloudsdkmeeting.v1.model.search_online_meetings_response",
            "huaweicloudsdkmeeting.v1.model.search_programs_request",
            "huaweicloudsdkmeeting.v1.model.search_programs_response",
            "huaweicloudsdkmeeting.v1.model.search_publications_request",
            "huaweicloudsdkmeeting.v1.model.search_publications_response",
            "huaweicloudsdkmeeting.v1.model.search_recordings_request",
            "huaweicloudsdkmeeting.v1.model.search_recordings_response",
            "huaweicloudsdkmeeting.v1.model.search_resource_op_record_request",
            "huaweicloudsdkmeeting.v1.model.search_resource_op_record_response",
            "huaweicloudsdkmeeting.v1.model.search_resource_request",
            "huaweicloudsdkmeeting.v1.model.search_resource_response",
            "huaweicloudsdkmeeting.v1.model.search_user_result_dto",
            "huaweicloudsdkmeeting.v1.model.search_users_request",
            "huaweicloudsdkmeeting.v1.model.search_users_response",
            "huaweicloudsdkmeeting.v1.model.send_slide_verify_code_request",
            "huaweicloudsdkmeeting.v1.model.send_slide_verify_code_response",
            "huaweicloudsdkmeeting.v1.model.send_veri_code_for_change_pwd_request",
            "huaweicloudsdkmeeting.v1.model.send_veri_code_for_change_pwd_response",
            "huaweicloudsdkmeeting.v1.model.send_veri_code_for_update_user_info_request",
            "huaweicloudsdkmeeting.v1.model.send_veri_code_for_update_user_info_response",
            "huaweicloudsdkmeeting.v1.model.set_host_view_request",
            "huaweicloudsdkmeeting.v1.model.set_host_view_response",
            "huaweicloudsdkmeeting.v1.model.set_multi_picture_request",
            "huaweicloudsdkmeeting.v1.model.set_multi_picture_response",
            "huaweicloudsdkmeeting.v1.model.set_participant_view_request",
            "huaweicloudsdkmeeting.v1.model.set_participant_view_response",
            "huaweicloudsdkmeeting.v1.model.set_role_request",
            "huaweicloudsdkmeeting.v1.model.set_role_response",
            "huaweicloudsdkmeeting.v1.model.show_conf_org_request",
            "huaweicloudsdkmeeting.v1.model.show_conf_org_response",
            "huaweicloudsdkmeeting.v1.model.show_corp_admin_request",
            "huaweicloudsdkmeeting.v1.model.show_corp_admin_response",
            "huaweicloudsdkmeeting.v1.model.show_corp_basic_info_request",
            "huaweicloudsdkmeeting.v1.model.show_corp_basic_info_response",
            "huaweicloudsdkmeeting.v1.model.show_corp_request",
            "huaweicloudsdkmeeting.v1.model.show_corp_resource_request",
            "huaweicloudsdkmeeting.v1.model.show_corp_resource_response",
            "huaweicloudsdkmeeting.v1.model.show_corp_response",
            "huaweicloudsdkmeeting.v1.model.show_dept_and_child_dept_request",
            "huaweicloudsdkmeeting.v1.model.show_dept_and_child_dept_response",
            "huaweicloudsdkmeeting.v1.model.show_device_detail_request",
            "huaweicloudsdkmeeting.v1.model.show_device_detail_response",
            "huaweicloudsdkmeeting.v1.model.show_device_status_request",
            "huaweicloudsdkmeeting.v1.model.show_device_status_response",
            "huaweicloudsdkmeeting.v1.model.show_device_types_request",
            "huaweicloudsdkmeeting.v1.model.show_device_types_response",
            "huaweicloudsdkmeeting.v1.model.show_his_meeting_detail_request",
            "huaweicloudsdkmeeting.v1.model.show_his_meeting_detail_response",
            "huaweicloudsdkmeeting.v1.model.show_meeting_detail_request",
            "huaweicloudsdkmeeting.v1.model.show_meeting_detail_response",
            "huaweicloudsdkmeeting.v1.model.show_meeting_file_list_request",
            "huaweicloudsdkmeeting.v1.model.show_meeting_file_list_response",
            "huaweicloudsdkmeeting.v1.model.show_meeting_file_request",
            "huaweicloudsdkmeeting.v1.model.show_meeting_file_response",
            "huaweicloudsdkmeeting.v1.model.show_my_info_request",
            "huaweicloudsdkmeeting.v1.model.show_my_info_response",
            "huaweicloudsdkmeeting.v1.model.show_online_meeting_detail_request",
            "huaweicloudsdkmeeting.v1.model.show_online_meeting_detail_response",
            "huaweicloudsdkmeeting.v1.model.show_program_request",
            "huaweicloudsdkmeeting.v1.model.show_program_response",
            "huaweicloudsdkmeeting.v1.model.show_publication_request",
            "huaweicloudsdkmeeting.v1.model.show_publication_response",
            "huaweicloudsdkmeeting.v1.model.show_real_time_info_of_meeting_request",
            "huaweicloudsdkmeeting.v1.model.show_real_time_info_of_meeting_response",
            "huaweicloudsdkmeeting.v1.model.show_recording_detail_request",
            "huaweicloudsdkmeeting.v1.model.show_recording_detail_response",
            "huaweicloudsdkmeeting.v1.model.show_region_info_of_meeting_request",
            "huaweicloudsdkmeeting.v1.model.show_region_info_of_meeting_response",
            "huaweicloudsdkmeeting.v1.model.show_sp_res_request",
            "huaweicloudsdkmeeting.v1.model.show_sp_res_response",
            "huaweicloudsdkmeeting.v1.model.show_user_detail_request",
            "huaweicloudsdkmeeting.v1.model.show_user_detail_response",
            "huaweicloudsdkmeeting.v1.model.slide_verify_code_check_dto",
            "huaweicloudsdkmeeting.v1.model.slide_verify_code_send_dto",
            "huaweicloudsdkmeeting.v1.model.stop_meeting_request",
            "huaweicloudsdkmeeting.v1.model.stop_meeting_response",
            "huaweicloudsdkmeeting.v1.model.subscriber_in_pic",
            "huaweicloudsdkmeeting.v1.model.switch_mode_request",
            "huaweicloudsdkmeeting.v1.model.switch_mode_response",
            "huaweicloudsdkmeeting.v1.model.token_info",
            "huaweicloudsdkmeeting.v1.model.update_contact_request",
            "huaweicloudsdkmeeting.v1.model.update_contact_response",
            "huaweicloudsdkmeeting.v1.model.update_corp_basic_info_request",
            "huaweicloudsdkmeeting.v1.model.update_corp_basic_info_response",
            "huaweicloudsdkmeeting.v1.model.update_corp_request",
            "huaweicloudsdkmeeting.v1.model.update_corp_response",
            "huaweicloudsdkmeeting.v1.model.update_department_request",
            "huaweicloudsdkmeeting.v1.model.update_department_response",
            "huaweicloudsdkmeeting.v1.model.update_device_request",
            "huaweicloudsdkmeeting.v1.model.update_device_response",
            "huaweicloudsdkmeeting.v1.model.update_material_request",
            "huaweicloudsdkmeeting.v1.model.update_material_request_dto",
            "huaweicloudsdkmeeting.v1.model.update_material_response",
            "huaweicloudsdkmeeting.v1.model.update_member_vmr_request",
            "huaweicloudsdkmeeting.v1.model.update_member_vmr_response",
            "huaweicloudsdkmeeting.v1.model.update_my_info_request",
            "huaweicloudsdkmeeting.v1.model.update_my_info_response",
            "huaweicloudsdkmeeting.v1.model.update_program_request",
            "huaweicloudsdkmeeting.v1.model.update_program_request_dto",
            "huaweicloudsdkmeeting.v1.model.update_program_response",
            "huaweicloudsdkmeeting.v1.model.update_publication_request",
            "huaweicloudsdkmeeting.v1.model.update_publication_request_dto",
            "huaweicloudsdkmeeting.v1.model.update_publication_response",
            "huaweicloudsdkmeeting.v1.model.update_pwd_request",
            "huaweicloudsdkmeeting.v1.model.update_pwd_response",
            "huaweicloudsdkmeeting.v1.model.update_resource_request",
            "huaweicloudsdkmeeting.v1.model.update_resource_response",
            "huaweicloudsdkmeeting.v1.model.update_token_request",
            "huaweicloudsdkmeeting.v1.model.update_token_response",
            "huaweicloudsdkmeeting.v1.model.update_user_request",
            "huaweicloudsdkmeeting.v1.model.update_user_response",
            "huaweicloudsdkmeeting.v1.model.user_dto",
            "huaweicloudsdkmeeting.v1.model.user_function_dto",
            "huaweicloudsdkmeeting.v1.model.user_info",
            "huaweicloudsdkmeeting.v1.model.user_status_dto",
            "huaweicloudsdkmeeting.v1.model.user_vmr_dto",
            "huaweicloudsdkmeeting.v1.model.validate_token_req_dto",
            "huaweicloudsdkmeeting.v1.model.verification_code_dto",
            "huaweicloudsdkmeeting.v1.model.verify_code_check_dto",
            "huaweicloudsdkmeeting.v1.model.verify_code_send_dtov1"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkmoderation": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkmoderation",
            "huaweicloudsdkmoderation.v1",
            "huaweicloudsdkmoderation.v1.model",
            "huaweicloudsdkmoderation.v1.model.check_result_items_body",
            "huaweicloudsdkmoderation.v1.model.check_result_result_body",
            "huaweicloudsdkmoderation.v1.model.check_task_jobs_items_body",
            "huaweicloudsdkmoderation.v1.model.image_batch_moderation_req",
            "huaweicloudsdkmoderation.v1.model.image_batch_moderation_result_body",
            "huaweicloudsdkmoderation.v1.model.image_detection_req",
            "huaweicloudsdkmoderation.v1.model.image_detection_result_body",
            "huaweicloudsdkmoderation.v1.model.image_detection_result_detail",
            "huaweicloudsdkmoderation.v1.model.image_detection_result_detail_face_detail",
            "huaweicloudsdkmoderation.v1.model.image_detection_result_detail_politics",
            "huaweicloudsdkmoderation.v1.model.image_detection_result_detail_porn",
            "huaweicloudsdkmoderation.v1.model.run_check_result_request",
            "huaweicloudsdkmoderation.v1.model.run_check_result_response",
            "huaweicloudsdkmoderation.v1.model.run_check_task_jobs_request",
            "huaweicloudsdkmoderation.v1.model.run_check_task_jobs_response",
            "huaweicloudsdkmoderation.v1.model.run_image_batch_moderation_request",
            "huaweicloudsdkmoderation.v1.model.run_image_batch_moderation_response",
            "huaweicloudsdkmoderation.v1.model.run_image_moderation_request",
            "huaweicloudsdkmoderation.v1.model.run_image_moderation_response",
            "huaweicloudsdkmoderation.v1.model.run_task_sumbit_request",
            "huaweicloudsdkmoderation.v1.model.run_task_sumbit_response",
            "huaweicloudsdkmoderation.v1.model.run_text_moderation_request",
            "huaweicloudsdkmoderation.v1.model.run_text_moderation_response",
            "huaweicloudsdkmoderation.v1.model.task_sumbit_req",
            "huaweicloudsdkmoderation.v1.model.task_sumbit_result_body",
            "huaweicloudsdkmoderation.v1.model.text_detection_body",
            "huaweicloudsdkmoderation.v1.model.text_detection_items_req",
            "huaweicloudsdkmoderation.v1.model.text_detection_req",
            "huaweicloudsdkmoderation.v1.moderation_async_client",
            "huaweicloudsdkmoderation.v1.moderation_client"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkmpc": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkmpc",
            "huaweicloudsdkmpc.v1",
            "huaweicloudsdkmpc.v1.model",
            "huaweicloudsdkmpc.v1.model.animated_graphics_output_param",
            "huaweicloudsdkmpc.v1.model.animated_graphics_task",
            "huaweicloudsdkmpc.v1.model.audio",
            "huaweicloudsdkmpc.v1.model.audio_file",
            "huaweicloudsdkmpc.v1.model.audio_info",
            "huaweicloudsdkmpc.v1.model.audio_process",
            "huaweicloudsdkmpc.v1.model.audio_track",
            "huaweicloudsdkmpc.v1.model.audit",
            "huaweicloudsdkmpc.v1.model.audit_report",
            "huaweicloudsdkmpc.v1.model.av_parameters",
            "huaweicloudsdkmpc.v1.model.basic_watermark",
            "huaweicloudsdkmpc.v1.model.black_enhance",
            "huaweicloudsdkmpc.v1.model.cancel_remux_task_request",
            "huaweicloudsdkmpc.v1.model.cancel_remux_task_response",
            "huaweicloudsdkmpc.v1.model.common",
            "huaweicloudsdkmpc.v1.model.common_create_task_req",
            "huaweicloudsdkmpc.v1.model.common_query_task_rsp",
            "huaweicloudsdkmpc.v1.model.common_task",
            "huaweicloudsdkmpc.v1.model.create_animated_graphics_task_req",
            "huaweicloudsdkmpc.v1.model.create_animated_graphics_task_request",
            "huaweicloudsdkmpc.v1.model.create_animated_graphics_task_response",
            "huaweicloudsdkmpc.v1.model.create_encrypt_req",
            "huaweicloudsdkmpc.v1.model.create_encrypt_task_request",
            "huaweicloudsdkmpc.v1.model.create_encrypt_task_response",
            "huaweicloudsdkmpc.v1.model.create_extract_task_req",
            "huaweicloudsdkmpc.v1.model.create_extract_task_request",
            "huaweicloudsdkmpc.v1.model.create_extract_task_response",
            "huaweicloudsdkmpc.v1.model.create_remux_task_req",
            "huaweicloudsdkmpc.v1.model.create_remux_task_request",
            "huaweicloudsdkmpc.v1.model.create_remux_task_response",
            "huaweicloudsdkmpc.v1.model.create_retry_remux_task_request",
            "huaweicloudsdkmpc.v1.model.create_retry_remux_task_response",
            "huaweicloudsdkmpc.v1.model.create_template_group_request",
            "huaweicloudsdkmpc.v1.model.create_template_group_response",
            "huaweicloudsdkmpc.v1.model.create_thumb_req",
            "huaweicloudsdkmpc.v1.model.create_thumbnails_task_request",
            "huaweicloudsdkmpc.v1.model.create_thumbnails_task_response",
            "huaweicloudsdkmpc.v1.model.create_trans_template_request",
            "huaweicloudsdkmpc.v1.model.create_trans_template_response",
            "huaweicloudsdkmpc.v1.model.create_transcoding_req",
            "huaweicloudsdkmpc.v1.model.create_transcoding_task_request",
            "huaweicloudsdkmpc.v1.model.create_transcoding_task_response",
            "huaweicloudsdkmpc.v1.model.create_watermark_template_request",
            "huaweicloudsdkmpc.v1.model.create_watermark_template_response",
            "huaweicloudsdkmpc.v1.model.crop",
            "huaweicloudsdkmpc.v1.model.delete_animated_graphics_task_request",
            "huaweicloudsdkmpc.v1.model.delete_animated_graphics_task_response",
            "huaweicloudsdkmpc.v1.model.delete_encrypt_task_request",
            "huaweicloudsdkmpc.v1.model.delete_encrypt_task_response",
            "huaweicloudsdkmpc.v1.model.delete_extract_task_request",
            "huaweicloudsdkmpc.v1.model.delete_extract_task_response",
            "huaweicloudsdkmpc.v1.model.delete_remux_task_request",
            "huaweicloudsdkmpc.v1.model.delete_remux_task_response",
            "huaweicloudsdkmpc.v1.model.delete_template_group_request",
            "huaweicloudsdkmpc.v1.model.delete_template_group_response",
            "huaweicloudsdkmpc.v1.model.delete_template_request",
            "huaweicloudsdkmpc.v1.model.delete_template_response",
            "huaweicloudsdkmpc.v1.model.delete_thumbnails_task_request",
            "huaweicloudsdkmpc.v1.model.delete_thumbnails_task_response",
            "huaweicloudsdkmpc.v1.model.delete_transcoding_task_request",
            "huaweicloudsdkmpc.v1.model.delete_transcoding_task_response",
            "huaweicloudsdkmpc.v1.model.delete_watermark_template_request",
            "huaweicloudsdkmpc.v1.model.delete_watermark_template_response",
            "huaweicloudsdkmpc.v1.model.digital_watermark",
            "huaweicloudsdkmpc.v1.model.each_encrypt_rsp",
            "huaweicloudsdkmpc.v1.model.effect_info",
            "huaweicloudsdkmpc.v1.model.encryption",
            "huaweicloudsdkmpc.v1.model.error_response",
            "huaweicloudsdkmpc.v1.model.extract_task",
            "huaweicloudsdkmpc.v1.model.hls_encrypt",
            "huaweicloudsdkmpc.v1.model.image_watermark",
            "huaweicloudsdkmpc.v1.model.list_animated_graphics_task_request",
            "huaweicloudsdkmpc.v1.model.list_animated_graphics_task_response",
            "huaweicloudsdkmpc.v1.model.list_encrypt_task_request",
            "huaweicloudsdkmpc.v1.model.list_encrypt_task_response",
            "huaweicloudsdkmpc.v1.model.list_extract_task_request",
            "huaweicloudsdkmpc.v1.model.list_extract_task_response",
            "huaweicloudsdkmpc.v1.model.list_remux_task_request",
            "huaweicloudsdkmpc.v1.model.list_remux_task_response",
            "huaweicloudsdkmpc.v1.model.list_template_group_request",
            "huaweicloudsdkmpc.v1.model.list_template_group_response",
            "huaweicloudsdkmpc.v1.model.list_template_request",
            "huaweicloudsdkmpc.v1.model.list_template_response",
            "huaweicloudsdkmpc.v1.model.list_thumbnails_task_request",
            "huaweicloudsdkmpc.v1.model.list_thumbnails_task_response",
            "huaweicloudsdkmpc.v1.model.list_transcode_detail_request",
            "huaweicloudsdkmpc.v1.model.list_transcode_detail_response",
            "huaweicloudsdkmpc.v1.model.list_transcoding_task_request",
            "huaweicloudsdkmpc.v1.model.list_transcoding_task_response",
            "huaweicloudsdkmpc.v1.model.list_watermark_template_request",
            "huaweicloudsdkmpc.v1.model.list_watermark_template_response",
            "huaweicloudsdkmpc.v1.model.media_detail",
            "huaweicloudsdkmpc.v1.model.meta_data",
            "huaweicloudsdkmpc.v1.model.modify_trans_template_group",
            "huaweicloudsdkmpc.v1.model.modify_trans_template_req",
            "huaweicloudsdkmpc.v1.model.mul_input_file_info",
            "huaweicloudsdkmpc.v1.model.multi_audio",
            "huaweicloudsdkmpc.v1.model.multi_task_info",
            "huaweicloudsdkmpc.v1.model.multidrm",
            "huaweicloudsdkmpc.v1.model.obs_obj_info",
            "huaweicloudsdkmpc.v1.model.origin_para",
            "huaweicloudsdkmpc.v1.model.output_policy",
            "huaweicloudsdkmpc.v1.model.output_thumbnail_para",
            "huaweicloudsdkmpc.v1.model.output_video_para",
            "huaweicloudsdkmpc.v1.model.output_watermark_para",
            "huaweicloudsdkmpc.v1.model.pic_info",
            "huaweicloudsdkmpc.v1.model.quality_enhance",
            "huaweicloudsdkmpc.v1.model.query_trans_template",
            "huaweicloudsdkmpc.v1.model.query_transcodings_task_response",
            "huaweicloudsdkmpc.v1.model.remux_output_param",
            "huaweicloudsdkmpc.v1.model.remux_retry_req",
            "huaweicloudsdkmpc.v1.model.remux_task",
            "huaweicloudsdkmpc.v1.model.source_info",
            "huaweicloudsdkmpc.v1.model.special_effect",
            "huaweicloudsdkmpc.v1.model.subtitle",
            "huaweicloudsdkmpc.v1.model.system_process",
            "huaweicloudsdkmpc.v1.model.task_detail_info",
            "huaweicloudsdkmpc.v1.model.template_group",
            "huaweicloudsdkmpc.v1.model.template_info",
            "huaweicloudsdkmpc.v1.model.text_watermark",
            "huaweicloudsdkmpc.v1.model.thumb_task",
            "huaweicloudsdkmpc.v1.model.thumbnail",
            "huaweicloudsdkmpc.v1.model.thumbnail_para",
            "huaweicloudsdkmpc.v1.model.tracks_info",
            "huaweicloudsdkmpc.v1.model.trans_template",
            "huaweicloudsdkmpc.v1.model.trans_template_group",
            "huaweicloudsdkmpc.v1.model.transcode_detail",
            "huaweicloudsdkmpc.v1.model.update_template_group_request",
            "huaweicloudsdkmpc.v1.model.update_template_group_response",
            "huaweicloudsdkmpc.v1.model.update_trans_template_request",
            "huaweicloudsdkmpc.v1.model.update_trans_template_response",
            "huaweicloudsdkmpc.v1.model.update_watermark_template_request",
            "huaweicloudsdkmpc.v1.model.update_watermark_template_response",
            "huaweicloudsdkmpc.v1.model.video",
            "huaweicloudsdkmpc.v1.model.video_and_template",
            "huaweicloudsdkmpc.v1.model.video_common",
            "huaweicloudsdkmpc.v1.model.video_info",
            "huaweicloudsdkmpc.v1.model.video_obj",
            "huaweicloudsdkmpc.v1.model.video_parameters",
            "huaweicloudsdkmpc.v1.model.video_process",
            "huaweicloudsdkmpc.v1.model.watermark_request",
            "huaweicloudsdkmpc.v1.model.watermark_template",
            "huaweicloudsdkmpc.v1.model.x_code_error",
            "huaweicloudsdkmpc.v1.mpc_async_client",
            "huaweicloudsdkmpc.v1.mpc_client"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkprojectman": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkprojectman",
            "huaweicloudsdkprojectman.v4",
            "huaweicloudsdkprojectman.v4.model",
            "huaweicloudsdkprojectman.v4.model.comment_user_v4",
            "huaweicloudsdkprojectman.v4.model.create_project_v4_request",
            "huaweicloudsdkprojectman.v4.model.create_project_v4_request_body",
            "huaweicloudsdkprojectman.v4.model.create_project_v4_response",
            "huaweicloudsdkprojectman.v4.model.issue_comment_v4",
            "huaweicloudsdkprojectman.v4.model.issue_completion_rate_v4_issue_completion_rates",
            "huaweicloudsdkprojectman.v4.model.issue_completion_rate_v4_issue_status",
            "huaweicloudsdkprojectman.v4.model.issue_record_v4",
            "huaweicloudsdkprojectman.v4.model.issue_record_v4_details",
            "huaweicloudsdkprojectman.v4.model.issue_record_v4_user",
            "huaweicloudsdkprojectman.v4.model.list_domain_not_added_projects_v4_request",
            "huaweicloudsdkprojectman.v4.model.list_domain_not_added_projects_v4_response",
            "huaweicloudsdkprojectman.v4.model.list_domain_not_added_projects_v4_response_body_creator",
            "huaweicloudsdkprojectman.v4.model.list_domain_not_added_projects_v4_response_body_projects",
            "huaweicloudsdkprojectman.v4.model.list_issue_comments_v4_request",
            "huaweicloudsdkprojectman.v4.model.list_issue_comments_v4_response",
            "huaweicloudsdkprojectman.v4.model.list_issue_records_v4_request",
            "huaweicloudsdkprojectman.v4.model.list_issue_records_v4_response",
            "huaweicloudsdkprojectman.v4.model.list_project_members_v4_request",
            "huaweicloudsdkprojectman.v4.model.list_project_members_v4_response",
            "huaweicloudsdkprojectman.v4.model.list_project_versions_v4_request",
            "huaweicloudsdkprojectman.v4.model.list_project_versions_v4_response",
            "huaweicloudsdkprojectman.v4.model.list_project_versions_v4_response_body_iterations",
            "huaweicloudsdkprojectman.v4.model.list_project_work_hours_request",
            "huaweicloudsdkprojectman.v4.model.list_project_work_hours_request_body",
            "huaweicloudsdkprojectman.v4.model.list_project_work_hours_response",
            "huaweicloudsdkprojectman.v4.model.list_projects_v4_request",
            "huaweicloudsdkprojectman.v4.model.list_projects_v4_response",
            "huaweicloudsdkprojectman.v4.model.list_projects_v4_response_body_creator",
            "huaweicloudsdkprojectman.v4.model.list_projects_v4_response_body_projects",
            "huaweicloudsdkprojectman.v4.model.member_list_v4_members",
            "huaweicloudsdkprojectman.v4.model.remove_project_request",
            "huaweicloudsdkprojectman.v4.model.remove_project_response",
            "huaweicloudsdkprojectman.v4.model.show_cur_user_info_request",
            "huaweicloudsdkprojectman.v4.model.show_cur_user_info_response",
            "huaweicloudsdkprojectman.v4.model.show_cur_user_role_request",
            "huaweicloudsdkprojectman.v4.model.show_cur_user_role_response",
            "huaweicloudsdkprojectman.v4.model.show_project_work_hours_request",
            "huaweicloudsdkprojectman.v4.model.show_project_work_hours_request_body",
            "huaweicloudsdkprojectman.v4.model.show_project_work_hours_response",
            "huaweicloudsdkprojectman.v4.model.show_project_work_hours_response_body_work_hours",
            "huaweicloudsdkprojectman.v4.model.showt_issue_completion_rate_request",
            "huaweicloudsdkprojectman.v4.model.showt_issue_completion_rate_response",
            "huaweicloudsdkprojectman.v4.model.update_membes_role_v4_request",
            "huaweicloudsdkprojectman.v4.model.update_membes_role_v4_request_body",
            "huaweicloudsdkprojectman.v4.model.update_membes_role_v4_response",
            "huaweicloudsdkprojectman.v4.projectman_async_client",
            "huaweicloudsdkprojectman.v4.projectman_client"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkrabbitmq": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkrabbitmq",
            "huaweicloudsdkrabbitmq.v2",
            "huaweicloudsdkrabbitmq.v2.model",
            "huaweicloudsdkrabbitmq.v2.model.batch_create_or_delete_instance_tag_request",
            "huaweicloudsdkrabbitmq.v2.model.batch_create_or_delete_instance_tag_response",
            "huaweicloudsdkrabbitmq.v2.model.batch_create_or_delete_tag_req",
            "huaweicloudsdkrabbitmq.v2.model.batch_restart_or_delete_instance_req",
            "huaweicloudsdkrabbitmq.v2.model.batch_restart_or_delete_instance_resp_results",
            "huaweicloudsdkrabbitmq.v2.model.batch_restart_or_delete_instances_request",
            "huaweicloudsdkrabbitmq.v2.model.batch_restart_or_delete_instances_response",
            "huaweicloudsdkrabbitmq.v2.model.create_instance_req",
            "huaweicloudsdkrabbitmq.v2.model.create_instance_req_tags",
            "huaweicloudsdkrabbitmq.v2.model.create_post_paid_instance_request",
            "huaweicloudsdkrabbitmq.v2.model.create_post_paid_instance_response",
            "huaweicloudsdkrabbitmq.v2.model.delete_background_task_request",
            "huaweicloudsdkrabbitmq.v2.model.delete_background_task_response",
            "huaweicloudsdkrabbitmq.v2.model.delete_instance_request",
            "huaweicloudsdkrabbitmq.v2.model.delete_instance_response",
            "huaweicloudsdkrabbitmq.v2.model.list_available_zones_request",
            "huaweicloudsdkrabbitmq.v2.model.list_available_zones_resp_available_zones",
            "huaweicloudsdkrabbitmq.v2.model.list_available_zones_response",
            "huaweicloudsdkrabbitmq.v2.model.list_background_tasks_request",
            "huaweicloudsdkrabbitmq.v2.model.list_background_tasks_resp_tasks",
            "huaweicloudsdkrabbitmq.v2.model.list_background_tasks_response",
            "huaweicloudsdkrabbitmq.v2.model.list_instances_details_request",
            "huaweicloudsdkrabbitmq.v2.model.list_instances_details_response",
            "huaweicloudsdkrabbitmq.v2.model.list_instances_resp_instances",
            "huaweicloudsdkrabbitmq.v2.model.list_plugins_request",
            "huaweicloudsdkrabbitmq.v2.model.list_plugins_resp_plugins",
            "huaweicloudsdkrabbitmq.v2.model.list_plugins_response",
            "huaweicloudsdkrabbitmq.v2.model.list_products_request",
            "huaweicloudsdkrabbitmq.v2.model.list_products_resp_detail",
            "huaweicloudsdkrabbitmq.v2.model.list_products_resp_hourly",
            "huaweicloudsdkrabbitmq.v2.model.list_products_resp_io",
            "huaweicloudsdkrabbitmq.v2.model.list_products_resp_values",
            "huaweicloudsdkrabbitmq.v2.model.list_products_response",
            "huaweicloudsdkrabbitmq.v2.model.reset_password_req",
            "huaweicloudsdkrabbitmq.v2.model.reset_password_request",
            "huaweicloudsdkrabbitmq.v2.model.reset_password_response",
            "huaweicloudsdkrabbitmq.v2.model.resize_instance_req",
            "huaweicloudsdkrabbitmq.v2.model.resize_instance_request",
            "huaweicloudsdkrabbitmq.v2.model.resize_instance_response",
            "huaweicloudsdkrabbitmq.v2.model.show_background_task_request",
            "huaweicloudsdkrabbitmq.v2.model.show_background_task_response",
            "huaweicloudsdkrabbitmq.v2.model.show_instance_extend_product_info_request",
            "huaweicloudsdkrabbitmq.v2.model.show_instance_extend_product_info_response",
            "huaweicloudsdkrabbitmq.v2.model.show_instance_request",
            "huaweicloudsdkrabbitmq.v2.model.show_instance_response",
            "huaweicloudsdkrabbitmq.v2.model.show_instance_tags_request",
            "huaweicloudsdkrabbitmq.v2.model.show_instance_tags_response",
            "huaweicloudsdkrabbitmq.v2.model.show_maintain_windows_request",
            "huaweicloudsdkrabbitmq.v2.model.show_maintain_windows_resp_maintain_windows",
            "huaweicloudsdkrabbitmq.v2.model.show_maintain_windows_response",
            "huaweicloudsdkrabbitmq.v2.model.show_project_tags_request",
            "huaweicloudsdkrabbitmq.v2.model.show_project_tags_resp_tags",
            "huaweicloudsdkrabbitmq.v2.model.show_project_tags_response",
            "huaweicloudsdkrabbitmq.v2.model.update_instance_req",
            "huaweicloudsdkrabbitmq.v2.model.update_instance_request",
            "huaweicloudsdkrabbitmq.v2.model.update_instance_response",
            "huaweicloudsdkrabbitmq.v2.model.update_plugins_req",
            "huaweicloudsdkrabbitmq.v2.model.update_plugins_request",
            "huaweicloudsdkrabbitmq.v2.model.update_plugins_response",
            "huaweicloudsdkrabbitmq.v2.rabbitmq_async_client",
            "huaweicloudsdkrabbitmq.v2.rabbitmq_client"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkservicestage": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkservicestage",
            "huaweicloudsdkservicestage.v2",
            "huaweicloudsdkservicestage.v2.model",
            "huaweicloudsdkservicestage.v2.model.access_password",
            "huaweicloudsdkservicestage.v2.model.access_token",
            "huaweicloudsdkservicestage.v2.model.application_config_modify",
            "huaweicloudsdkservicestage.v2.model.application_config_modify_configuration",
            "huaweicloudsdkservicestage.v2.model.application_config_modify_configuration_env",
            "huaweicloudsdkservicestage.v2.model.application_create",
            "huaweicloudsdkservicestage.v2.model.application_list_config_configuration",
            "huaweicloudsdkservicestage.v2.model.application_list_config_configuration1",
            "huaweicloudsdkservicestage.v2.model.application_list_config_configuration_env",
            "huaweicloudsdkservicestage.v2.model.application_modify",
            "huaweicloudsdkservicestage.v2.model.application_view",
            "huaweicloudsdkservicestage.v2.model.authorization_vo",
            "huaweicloudsdkservicestage.v2.model.build",
            "huaweicloudsdkservicestage.v2.model.build_info",
            "huaweicloudsdkservicestage.v2.model.build_info_parameters",
            "huaweicloudsdkservicestage.v2.model.change_application_configuration_request",
            "huaweicloudsdkservicestage.v2.model.change_application_configuration_response",
            "huaweicloudsdkservicestage.v2.model.change_application_request",
            "huaweicloudsdkservicestage.v2.model.change_application_response",
            "huaweicloudsdkservicestage.v2.model.change_component_request",
            "huaweicloudsdkservicestage.v2.model.change_component_response",
            "huaweicloudsdkservicestage.v2.model.change_environment_request",
            "huaweicloudsdkservicestage.v2.model.change_environment_response",
            "huaweicloudsdkservicestage.v2.model.change_instance_request",
            "huaweicloudsdkservicestage.v2.model.change_instance_response",
            "huaweicloudsdkservicestage.v2.model.change_resource_in_environment_request",
            "huaweicloudsdkservicestage.v2.model.change_resource_in_environment_response",
            "huaweicloudsdkservicestage.v2.model.charge_mode",
            "huaweicloudsdkservicestage.v2.model.commits_commits",
            "huaweicloudsdkservicestage.v2.model.component_category",
            "huaweicloudsdkservicestage.v2.model.component_create",
            "huaweicloudsdkservicestage.v2.model.component_modify",
            "huaweicloudsdkservicestage.v2.model.component_sub_category",
            "huaweicloudsdkservicestage.v2.model.component_view",
            "huaweicloudsdkservicestage.v2.model.create_application_request",
            "huaweicloudsdkservicestage.v2.model.create_application_response",
            "huaweicloudsdkservicestage.v2.model.create_component_request",
            "huaweicloudsdkservicestage.v2.model.create_component_response",
            "huaweicloudsdkservicestage.v2.model.create_environment_request",
            "huaweicloudsdkservicestage.v2.model.create_environment_response",
            "huaweicloudsdkservicestage.v2.model.create_file_request",
            "huaweicloudsdkservicestage.v2.model.create_file_response",
            "huaweicloudsdkservicestage.v2.model.create_hook_request",
            "huaweicloudsdkservicestage.v2.model.create_hook_response",
            "huaweicloudsdkservicestage.v2.model.create_instance_request",
            "huaweicloudsdkservicestage.v2.model.create_instance_response",
            "huaweicloudsdkservicestage.v2.model.create_o_auth_request",
            "huaweicloudsdkservicestage.v2.model.create_o_auth_response",
            "huaweicloudsdkservicestage.v2.model.create_password_auth_request",
            "huaweicloudsdkservicestage.v2.model.create_password_auth_response",
            "huaweicloudsdkservicestage.v2.model.create_personal_auth_request",
            "huaweicloudsdkservicestage.v2.model.create_personal_auth_response",
            "huaweicloudsdkservicestage.v2.model.create_project_request",
            "huaweicloudsdkservicestage.v2.model.create_project_response",
            "huaweicloudsdkservicestage.v2.model.create_tag_request",
            "huaweicloudsdkservicestage.v2.model.create_tag_response",
            "huaweicloudsdkservicestage.v2.model.delete_application_configuration_request",
            "huaweicloudsdkservicestage.v2.model.delete_application_configuration_response",
            "huaweicloudsdkservicestage.v2.model.delete_application_request",
            "huaweicloudsdkservicestage.v2.model.delete_application_response",
            "huaweicloudsdkservicestage.v2.model.delete_authorize_request",
            "huaweicloudsdkservicestage.v2.model.delete_authorize_response",
            "huaweicloudsdkservicestage.v2.model.delete_component_request",
            "huaweicloudsdkservicestage.v2.model.delete_component_response",
            "huaweicloudsdkservicestage.v2.model.delete_environment_request",
            "huaweicloudsdkservicestage.v2.model.delete_environment_response",
            "huaweicloudsdkservicestage.v2.model.delete_file_request",
            "huaweicloudsdkservicestage.v2.model.delete_file_response",
            "huaweicloudsdkservicestage.v2.model.delete_hook_request",
            "huaweicloudsdkservicestage.v2.model.delete_hook_response",
            "huaweicloudsdkservicestage.v2.model.delete_instance_request",
            "huaweicloudsdkservicestage.v2.model.delete_instance_response",
            "huaweicloudsdkservicestage.v2.model.delete_tag_request",
            "huaweicloudsdkservicestage.v2.model.delete_tag_response",
            "huaweicloudsdkservicestage.v2.model.environment",
            "huaweicloudsdkservicestage.v2.model.environment_create",
            "huaweicloudsdkservicestage.v2.model.environment_modify",
            "huaweicloudsdkservicestage.v2.model.environment_resource_modify",
            "huaweicloudsdkservicestage.v2.model.external_access_protocol",
            "huaweicloudsdkservicestage.v2.model.external_access_status",
            "huaweicloudsdkservicestage.v2.model.external_access_type",
            "huaweicloudsdkservicestage.v2.model.external_accesses",
            "huaweicloudsdkservicestage.v2.model.external_accesses_create",
            "huaweicloudsdkservicestage.v2.model.file_create",
            "huaweicloudsdkservicestage.v2.model.file_update",
            "huaweicloudsdkservicestage.v2.model.flavor_id",
            "huaweicloudsdkservicestage.v2.model.flavor_view",
            "huaweicloudsdkservicestage.v2.model.hook",
            "huaweicloudsdkservicestage.v2.model.hook_create",
            "huaweicloudsdkservicestage.v2.model.instance_action",
            "huaweicloudsdkservicestage.v2.model.instance_action_parameters",
            "huaweicloudsdkservicestage.v2.model.instance_action_type",
            "huaweicloudsdkservicestage.v2.model.instance_create",
            "huaweicloudsdkservicestage.v2.model.instance_fail_detail",
            "huaweicloudsdkservicestage.v2.model.instance_list_view",
            "huaweicloudsdkservicestage.v2.model.instance_modify",
            "huaweicloudsdkservicestage.v2.model.instance_platform_type",
            "huaweicloudsdkservicestage.v2.model.instance_snapshot_view",
            "huaweicloudsdkservicestage.v2.model.instance_status_type",
            "huaweicloudsdkservicestage.v2.model.instance_status_view",
            "huaweicloudsdkservicestage.v2.model.job_info",
            "huaweicloudsdkservicestage.v2.model.list_applications_request",
            "huaweicloudsdkservicestage.v2.model.list_applications_response",
            "huaweicloudsdkservicestage.v2.model.list_authorizations_request",
            "huaweicloudsdkservicestage.v2.model.list_authorizations_response",
            "huaweicloudsdkservicestage.v2.model.list_branches_request",
            "huaweicloudsdkservicestage.v2.model.list_branches_response",
            "huaweicloudsdkservicestage.v2.model.list_commits_request",
            "huaweicloudsdkservicestage.v2.model.list_commits_response",
            "huaweicloudsdkservicestage.v2.model.list_components_request",
            "huaweicloudsdkservicestage.v2.model.list_components_response",
            "huaweicloudsdkservicestage.v2.model.list_environments_request",
            "huaweicloudsdkservicestage.v2.model.list_environments_response",
            "huaweicloudsdkservicestage.v2.model.list_flavors_request",
            "huaweicloudsdkservicestage.v2.model.list_flavors_response",
            "huaweicloudsdkservicestage.v2.model.list_hooks_request",
            "huaweicloudsdkservicestage.v2.model.list_hooks_response",
            "huaweicloudsdkservicestage.v2.model.list_instance_snapshots_request",
            "huaweicloudsdkservicestage.v2.model.list_instance_snapshots_response",
            "huaweicloudsdkservicestage.v2.model.list_instances_request",
            "huaweicloudsdkservicestage.v2.model.list_instances_response",
            "huaweicloudsdkservicestage.v2.model.list_namespaces_request",
            "huaweicloudsdkservicestage.v2.model.list_namespaces_response",
            "huaweicloudsdkservicestage.v2.model.list_projects_request",
            "huaweicloudsdkservicestage.v2.model.list_projects_response",
            "huaweicloudsdkservicestage.v2.model.list_runtimes_request",
            "huaweicloudsdkservicestage.v2.model.list_runtimes_response",
            "huaweicloudsdkservicestage.v2.model.list_tags_request",
            "huaweicloudsdkservicestage.v2.model.list_tags_response",
            "huaweicloudsdkservicestage.v2.model.list_templates_request",
            "huaweicloudsdkservicestage.v2.model.list_templates_response",
            "huaweicloudsdkservicestage.v2.model.list_trees_request",
            "huaweicloudsdkservicestage.v2.model.list_trees_response",
            "huaweicloudsdkservicestage.v2.model.namespaces_namespaces",
            "huaweicloudsdkservicestage.v2.model.o_auth",
            "huaweicloudsdkservicestage.v2.model.project",
            "huaweicloudsdkservicestage.v2.model.project_create",
            "huaweicloudsdkservicestage.v2.model.refer_resource_create",
            "huaweicloudsdkservicestage.v2.model.refer_resources",
            "huaweicloudsdkservicestage.v2.model.resource",
            "huaweicloudsdkservicestage.v2.model.resource_refer_alias",
            "huaweicloudsdkservicestage.v2.model.resource_type",
            "huaweicloudsdkservicestage.v2.model.runtime_type",
            "huaweicloudsdkservicestage.v2.model.runtime_type_view",
            "huaweicloudsdkservicestage.v2.model.show_application_configuration_request",
            "huaweicloudsdkservicestage.v2.model.show_application_configuration_response",
            "huaweicloudsdkservicestage.v2.model.show_application_detail_request",
            "huaweicloudsdkservicestage.v2.model.show_application_detail_response",
            "huaweicloudsdkservicestage.v2.model.show_component_detail_request",
            "huaweicloudsdkservicestage.v2.model.show_component_detail_response",
            "huaweicloudsdkservicestage.v2.model.show_content_request",
            "huaweicloudsdkservicestage.v2.model.show_content_response",
            "huaweicloudsdkservicestage.v2.model.show_environment_detail_request",
            "huaweicloudsdkservicestage.v2.model.show_environment_detail_response",
            "huaweicloudsdkservicestage.v2.model.show_instance_detail_request",
            "huaweicloudsdkservicestage.v2.model.show_instance_detail_response",
            "huaweicloudsdkservicestage.v2.model.show_job_detail_request",
            "huaweicloudsdkservicestage.v2.model.show_job_detail_response",
            "huaweicloudsdkservicestage.v2.model.show_project_detail_request",
            "huaweicloudsdkservicestage.v2.model.show_project_detail_response",
            "huaweicloudsdkservicestage.v2.model.show_redirect_url_request",
            "huaweicloudsdkservicestage.v2.model.show_redirect_url_response",
            "huaweicloudsdkservicestage.v2.model.source_kind",
            "huaweicloudsdkservicestage.v2.model.source_object",
            "huaweicloudsdkservicestage.v2.model.source_or_artifact",
            "huaweicloudsdkservicestage.v2.model.source_repo_type",
            "huaweicloudsdkservicestage.v2.model.tag_create",
            "huaweicloudsdkservicestage.v2.model.task_info",
            "huaweicloudsdkservicestage.v2.model.template",
            "huaweicloudsdkservicestage.v2.model.template_view",
            "huaweicloudsdkservicestage.v2.model.update_file_request",
            "huaweicloudsdkservicestage.v2.model.update_file_response",
            "huaweicloudsdkservicestage.v2.model.update_instance_action_request",
            "huaweicloudsdkservicestage.v2.model.update_instance_action_response",
            "huaweicloudsdkservicestage.v2.servicestage_async_client",
            "huaweicloudsdkservicestage.v2.servicestage_client"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdktesthub": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdktesthub",
            "huaweicloudsdktesthub.v1",
            "huaweicloudsdktesthub.v1.cloudtest_async_client",
            "huaweicloudsdktesthub.v1.cloudtest_client",
            "huaweicloudsdktesthub.v1.model",
            "huaweicloudsdktesthub.v1.model.assigned_user_info",
            "huaweicloudsdktesthub.v1.model.batch_delete_test_case_request",
            "huaweicloudsdktesthub.v1.model.batch_delete_test_case_request_body",
            "huaweicloudsdktesthub.v1.model.batch_delete_test_case_response",
            "huaweicloudsdktesthub.v1.model.create_plan_request",
            "huaweicloudsdktesthub.v1.model.create_plan_request_body",
            "huaweicloudsdktesthub.v1.model.create_plan_response",
            "huaweicloudsdktesthub.v1.model.create_service_request",
            "huaweicloudsdktesthub.v1.model.create_service_response",
            "huaweicloudsdktesthub.v1.model.create_test_case_in_plan_request",
            "huaweicloudsdktesthub.v1.model.create_test_case_in_plan_request_body",
            "huaweicloudsdktesthub.v1.model.create_test_case_in_plan_response",
            "huaweicloudsdktesthub.v1.model.create_test_case_request",
            "huaweicloudsdktesthub.v1.model.create_test_case_request_body",
            "huaweicloudsdktesthub.v1.model.create_test_case_response",
            "huaweicloudsdktesthub.v1.model.delete_service_request",
            "huaweicloudsdktesthub.v1.model.delete_service_response",
            "huaweicloudsdktesthub.v1.model.error_case_info_bean",
            "huaweicloudsdktesthub.v1.model.error_detail_info",
            "huaweicloudsdktesthub.v1.model.extend_author_info",
            "huaweicloudsdktesthub.v1.model.extend_info",
            "huaweicloudsdktesthub.v1.model.external_service_biz_case",
            "huaweicloudsdktesthub.v1.model.external_service_case_info",
            "huaweicloudsdktesthub.v1.model.external_service_case_step",
            "huaweicloudsdktesthub.v1.model.plan_cycle",
            "huaweicloudsdktesthub.v1.model.run_test_case_request",
            "huaweicloudsdktesthub.v1.model.run_test_case_request_body",
            "huaweicloudsdktesthub.v1.model.run_test_case_response",
            "huaweicloudsdktesthub.v1.model.service_request_body",
            "huaweicloudsdktesthub.v1.model.services_info",
            "huaweicloudsdktesthub.v1.model.show_register_service_request",
            "huaweicloudsdktesthub.v1.model.show_register_service_response",
            "huaweicloudsdktesthub.v1.model.show_test_case_detail_request",
            "huaweicloudsdktesthub.v1.model.show_test_case_detail_response",
            "huaweicloudsdktesthub.v1.model.show_test_case_detail_v2_request",
            "huaweicloudsdktesthub.v1.model.show_test_case_detail_v2_response",
            "huaweicloudsdktesthub.v1.model.test_case_execute_bean",
            "huaweicloudsdktesthub.v1.model.update_service_request",
            "huaweicloudsdktesthub.v1.model.update_service_response",
            "huaweicloudsdktesthub.v1.model.update_test_case_request",
            "huaweicloudsdktesthub.v1.model.update_test_case_request_body",
            "huaweicloudsdktesthub.v1.model.update_test_case_response",
            "huaweicloudsdktesthub.v1.model.update_test_case_result_bean",
            "huaweicloudsdktesthub.v1.model.update_test_case_result_request",
            "huaweicloudsdktesthub.v1.model.update_test_case_result_request_body",
            "huaweicloudsdktesthub.v1.model.update_test_case_result_response"
        ],
        "version": "3.0.13b0"
    },
    "huaweicloudsdktms": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdktms",
            "huaweicloudsdktms.v1",
            "huaweicloudsdktms.v1.model",
            "huaweicloudsdktms.v1.model.create_predefine_tags_request",
            "huaweicloudsdktms.v1.model.create_predefine_tags_response",
            "huaweicloudsdktms.v1.model.delete_predefine_tags_request",
            "huaweicloudsdktms.v1.model.delete_predefine_tags_response",
            "huaweicloudsdktms.v1.model.link",
            "huaweicloudsdktms.v1.model.list_api_versions_request",
            "huaweicloudsdktms.v1.model.list_api_versions_response",
            "huaweicloudsdktms.v1.model.list_predefine_tags_request",
            "huaweicloudsdktms.v1.model.list_predefine_tags_response",
            "huaweicloudsdktms.v1.model.modify_prefine_tag",
            "huaweicloudsdktms.v1.model.predefine_tag",
            "huaweicloudsdktms.v1.model.predefine_tag_request",
            "huaweicloudsdktms.v1.model.req_create_predefine_tag",
            "huaweicloudsdktms.v1.model.req_delete_predefine_tag",
            "huaweicloudsdktms.v1.model.show_api_version_request",
            "huaweicloudsdktms.v1.model.show_api_version_response",
            "huaweicloudsdktms.v1.model.update_predefine_tags_request",
            "huaweicloudsdktms.v1.model.update_predefine_tags_response",
            "huaweicloudsdktms.v1.model.version_detail",
            "huaweicloudsdktms.v1.tms_async_client",
            "huaweicloudsdktms.v1.tms_client"
        ],
        "version": "3.0.16b0"
    },
    "huaweicloudsdkvpc": {
        "cmdline": [],
        "modules": [
            "huaweicloudsdkvpc",
            "huaweicloudsdkvpc.v2",
            "huaweicloudsdkvpc.v2.model",
            "huaweicloudsdkvpc.v2.model.accept_vpc_peering_request",
            "huaweicloudsdkvpc.v2.model.accept_vpc_peering_response",
            "huaweicloudsdkvpc.v2.model.allowed_address_pair",
            "huaweicloudsdkvpc.v2.model.create_port_option",
            "huaweicloudsdkvpc.v2.model.create_port_request",
            "huaweicloudsdkvpc.v2.model.create_port_request_body",
            "huaweicloudsdkvpc.v2.model.create_port_response",
            "huaweicloudsdkvpc.v2.model.create_privateip_option",
            "huaweicloudsdkvpc.v2.model.create_privateip_request",
            "huaweicloudsdkvpc.v2.model.create_privateip_request_body",
            "huaweicloudsdkvpc.v2.model.create_privateip_response",
            "huaweicloudsdkvpc.v2.model.create_security_group_option",
            "huaweicloudsdkvpc.v2.model.create_security_group_request",
            "huaweicloudsdkvpc.v2.model.create_security_group_request_body",
            "huaweicloudsdkvpc.v2.model.create_security_group_response",
            "huaweicloudsdkvpc.v2.model.create_security_group_rule_option",
            "huaweicloudsdkvpc.v2.model.create_security_group_rule_request",
            "huaweicloudsdkvpc.v2.model.create_security_group_rule_request_body",
            "huaweicloudsdkvpc.v2.model.create_security_group_rule_response",
            "huaweicloudsdkvpc.v2.model.create_subnet_option",
            "huaweicloudsdkvpc.v2.model.create_subnet_request",
            "huaweicloudsdkvpc.v2.model.create_subnet_request_body",
            "huaweicloudsdkvpc.v2.model.create_subnet_response",
            "huaweicloudsdkvpc.v2.model.create_vpc_option",
            "huaweicloudsdkvpc.v2.model.create_vpc_peering_option",
            "huaweicloudsdkvpc.v2.model.create_vpc_peering_request",
            "huaweicloudsdkvpc.v2.model.create_vpc_peering_request_body",
            "huaweicloudsdkvpc.v2.model.create_vpc_peering_response",
            "huaweicloudsdkvpc.v2.model.create_vpc_request",
            "huaweicloudsdkvpc.v2.model.create_vpc_request_body",
            "huaweicloudsdkvpc.v2.model.create_vpc_response",
            "huaweicloudsdkvpc.v2.model.create_vpc_route_option",
            "huaweicloudsdkvpc.v2.model.create_vpc_route_request",
            "huaweicloudsdkvpc.v2.model.create_vpc_route_request_body",
            "huaweicloudsdkvpc.v2.model.create_vpc_route_response",
            "huaweicloudsdkvpc.v2.model.delete_port_request",
            "huaweicloudsdkvpc.v2.model.delete_port_response",
            "huaweicloudsdkvpc.v2.model.delete_privateip_request",
            "huaweicloudsdkvpc.v2.model.delete_privateip_response",
            "huaweicloudsdkvpc.v2.model.delete_security_group_request",
            "huaweicloudsdkvpc.v2.model.delete_security_group_response",
            "huaweicloudsdkvpc.v2.model.delete_security_group_rule_request",
            "huaweicloudsdkvpc.v2.model.delete_security_group_rule_response",
            "huaweicloudsdkvpc.v2.model.delete_subnet_request",
            "huaweicloudsdkvpc.v2.model.delete_subnet_response",
            "huaweicloudsdkvpc.v2.model.delete_vpc_peering_request",
            "huaweicloudsdkvpc.v2.model.delete_vpc_peering_response",
            "huaweicloudsdkvpc.v2.model.delete_vpc_request",
            "huaweicloudsdkvpc.v2.model.delete_vpc_response",
            "huaweicloudsdkvpc.v2.model.delete_vpc_route_request",
            "huaweicloudsdkvpc.v2.model.delete_vpc_route_response",
            "huaweicloudsdkvpc.v2.model.dns_assign_ment",
            "huaweicloudsdkvpc.v2.model.extra_dhcp_opt",
            "huaweicloudsdkvpc.v2.model.extra_dhcp_option",
            "huaweicloudsdkvpc.v2.model.fixed_ip",
            "huaweicloudsdkvpc.v2.model.list_ports_request",
            "huaweicloudsdkvpc.v2.model.list_ports_response",
            "huaweicloudsdkvpc.v2.model.list_privateips_request",
            "huaweicloudsdkvpc.v2.model.list_privateips_response",
            "huaweicloudsdkvpc.v2.model.list_security_group_rules_request",
            "huaweicloudsdkvpc.v2.model.list_security_group_rules_response",
            "huaweicloudsdkvpc.v2.model.list_security_groups_request",
            "huaweicloudsdkvpc.v2.model.list_security_groups_response",
            "huaweicloudsdkvpc.v2.model.list_subnets_request",
            "huaweicloudsdkvpc.v2.model.list_subnets_response",
            "huaweicloudsdkvpc.v2.model.list_vpc_peerings_request",
            "huaweicloudsdkvpc.v2.model.list_vpc_peerings_response",
            "huaweicloudsdkvpc.v2.model.list_vpc_routes_request",
            "huaweicloudsdkvpc.v2.model.list_vpc_routes_response",
            "huaweicloudsdkvpc.v2.model.list_vpcs_request",
            "huaweicloudsdkvpc.v2.model.list_vpcs_response",
            "huaweicloudsdkvpc.v2.model.network_ip_availability",
            "huaweicloudsdkvpc.v2.model.neutron_page_link",
            "huaweicloudsdkvpc.v2.model.port",
            "huaweicloudsdkvpc.v2.model.privateip",
            "huaweicloudsdkvpc.v2.model.quota",
            "huaweicloudsdkvpc.v2.model.reject_vpc_peering_request",
            "huaweicloudsdkvpc.v2.model.reject_vpc_peering_response",
            "huaweicloudsdkvpc.v2.model.resource_result",
            "huaweicloudsdkvpc.v2.model.route",
            "huaweicloudsdkvpc.v2.model.security_group",
            "huaweicloudsdkvpc.v2.model.security_group_rule",
            "huaweicloudsdkvpc.v2.model.show_network_ip_availabilities_request",
            "huaweicloudsdkvpc.v2.model.show_network_ip_availabilities_response",
            "huaweicloudsdkvpc.v2.model.show_port_request",
            "huaweicloudsdkvpc.v2.model.show_port_response",
            "huaweicloudsdkvpc.v2.model.show_privateip_request",
            "huaweicloudsdkvpc.v2.model.show_privateip_response",
            "huaweicloudsdkvpc.v2.model.show_quota_request",
            "huaweicloudsdkvpc.v2.model.show_quota_response",
            "huaweicloudsdkvpc.v2.model.show_security_group_request",
            "huaweicloudsdkvpc.v2.model.show_security_group_response",
            "huaweicloudsdkvpc.v2.model.show_security_group_rule_request",
            "huaweicloudsdkvpc.v2.model.show_security_group_rule_response",
            "huaweicloudsdkvpc.v2.model.show_subnet_request",
            "huaweicloudsdkvpc.v2.model.show_subnet_response",
            "huaweicloudsdkvpc.v2.model.show_vpc_peering_request",
            "huaweicloudsdkvpc.v2.model.show_vpc_peering_response",
            "huaweicloudsdkvpc.v2.model.show_vpc_request",
            "huaweicloudsdkvpc.v2.model.show_vpc_response",
            "huaweicloudsdkvpc.v2.model.show_vpc_route_request",
            "huaweicloudsdkvpc.v2.model.show_vpc_route_response",
            "huaweicloudsdkvpc.v2.model.subnet",
            "huaweicloudsdkvpc.v2.model.subnet_ip_availability",
            "huaweicloudsdkvpc.v2.model.subnet_result",
            "huaweicloudsdkvpc.v2.model.update_port_option",
            "huaweicloudsdkvpc.v2.model.update_port_request",
            "huaweicloudsdkvpc.v2.model.update_port_request_body",
            "huaweicloudsdkvpc.v2.model.update_port_response",
            "huaweicloudsdkvpc.v2.model.update_subnet_option",
            "huaweicloudsdkvpc.v2.model.update_subnet_request",
            "huaweicloudsdkvpc.v2.model.update_subnet_request_body",
            "huaweicloudsdkvpc.v2.model.update_subnet_response",
            "huaweicloudsdkvpc.v2.model.update_vpc_option",
            "huaweicloudsdkvpc.v2.model.update_vpc_peering_option",
            "huaweicloudsdkvpc.v2.model.update_vpc_peering_request",
            "huaweicloudsdkvpc.v2.model.update_vpc_peering_request_body",
            "huaweicloudsdkvpc.v2.model.update_vpc_peering_response",
            "huaweicloudsdkvpc.v2.model.update_vpc_request",
            "huaweicloudsdkvpc.v2.model.update_vpc_request_body",
            "huaweicloudsdkvpc.v2.model.update_vpc_response",
            "huaweicloudsdkvpc.v2.model.vpc",
            "huaweicloudsdkvpc.v2.model.vpc_info",
            "huaweicloudsdkvpc.v2.model.vpc_peering",
            "huaweicloudsdkvpc.v2.model.vpc_route",
            "huaweicloudsdkvpc.v2.vpc_async_client",
            "huaweicloudsdkvpc.v2.vpc_client",
            "huaweicloudsdkvpc.v3",
            "huaweicloudsdkvpc.v3.model",
            "huaweicloudsdkvpc.v3.model.batch_create_sub_network_interface_option",
            "huaweicloudsdkvpc.v3.model.batch_create_sub_network_interface_v3_request",
            "huaweicloudsdkvpc.v3.model.batch_create_sub_network_interface_v3_request_body",
            "huaweicloudsdkvpc.v3.model.batch_create_sub_network_interface_v3_response",
            "huaweicloudsdkvpc.v3.model.create_security_group_option",
            "huaweicloudsdkvpc.v3.model.create_security_group_request",
            "huaweicloudsdkvpc.v3.model.create_security_group_request_body",
            "huaweicloudsdkvpc.v3.model.create_security_group_response",
            "huaweicloudsdkvpc.v3.model.create_security_group_rule_option",
            "huaweicloudsdkvpc.v3.model.create_security_group_rule_request",
            "huaweicloudsdkvpc.v3.model.create_security_group_rule_request_body",
            "huaweicloudsdkvpc.v3.model.create_security_group_rule_response",
            "huaweicloudsdkvpc.v3.model.create_sub_network_interface_option",
            "huaweicloudsdkvpc.v3.model.create_sub_network_interface_request",
            "huaweicloudsdkvpc.v3.model.create_sub_network_interface_request_body",
            "huaweicloudsdkvpc.v3.model.create_sub_network_interface_response",
            "huaweicloudsdkvpc.v3.model.delete_security_group_request",
            "huaweicloudsdkvpc.v3.model.delete_security_group_response",
            "huaweicloudsdkvpc.v3.model.delete_security_group_rule_request",
            "huaweicloudsdkvpc.v3.model.delete_security_group_rule_response",
            "huaweicloudsdkvpc.v3.model.delete_sub_network_interface_request",
            "huaweicloudsdkvpc.v3.model.delete_sub_network_interface_response",
            "huaweicloudsdkvpc.v3.model.list_security_group_rules_request",
            "huaweicloudsdkvpc.v3.model.list_security_group_rules_response",
            "huaweicloudsdkvpc.v3.model.list_security_groups_request",
            "huaweicloudsdkvpc.v3.model.list_security_groups_response",
            "huaweicloudsdkvpc.v3.model.list_sub_network_interfaces_request",
            "huaweicloudsdkvpc.v3.model.list_sub_network_interfaces_response",
            "huaweicloudsdkvpc.v3.model.page_info",
            "huaweicloudsdkvpc.v3.model.security_group",
            "huaweicloudsdkvpc.v3.model.security_group_info",
            "huaweicloudsdkvpc.v3.model.security_group_rule",
            "huaweicloudsdkvpc.v3.model.show_security_group_request",
            "huaweicloudsdkvpc.v3.model.show_security_group_response",
            "huaweicloudsdkvpc.v3.model.show_security_group_rule_request",
            "huaweicloudsdkvpc.v3.model.show_security_group_rule_response",
            "huaweicloudsdkvpc.v3.model.show_sub_network_interface_request",
            "huaweicloudsdkvpc.v3.model.show_sub_network_interface_response",
            "huaweicloudsdkvpc.v3.model.show_sub_network_interfaces_quantity_request",
            "huaweicloudsdkvpc.v3.model.show_sub_network_interfaces_quantity_response",
            "huaweicloudsdkvpc.v3.model.sub_network_interface",
            "huaweicloudsdkvpc.v3.model.update_security_group_option",
            "huaweicloudsdkvpc.v3.model.update_security_group_request",
            "huaweicloudsdkvpc.v3.model.update_security_group_request_body",
            "huaweicloudsdkvpc.v3.model.update_security_group_response",
            "huaweicloudsdkvpc.v3.model.update_sub_network_interface_option",
            "huaweicloudsdkvpc.v3.model.update_sub_network_interface_request",
            "huaweicloudsdkvpc.v3.model.update_sub_network_interface_request_body",
            "huaweicloudsdkvpc.v3.model.update_sub_network_interface_response",
            "huaweicloudsdkvpc.v3.vpc_async_client",
            "huaweicloudsdkvpc.v3.vpc_client"
        ],
        "version": "3.0.16b0"
    },
    "huaweilteapi": {
        "cmdline": [],
        "modules": [
            "huaweilteapi",
            "huaweilteapi.cli"
        ],
        "version": "0.1.1"
    },
    "huaytools": {
        "cmdline": [],
        "modules": [
            "huaytools",
            "huaytools.crawler",
            "huaytools.crawler.tools",
            "huaytools.dataset",
            "huaytools.dataset.imdb",
            "huaytools.dataset.mnist",
            "huaytools.dataset.mnist_fashion",
            "huaytools.kreas",
            "huaytools.nlp",
            "huaytools.nlp.stopwords",
            "huaytools.nlp.wordvec",
            "huaytools.tensorflow",
            "huaytools.tensorflow.layers",
            "huaytools.tensorflow.layers.attention",
            "huaytools.tensorflow.layers.cnn",
            "huaytools.tensorflow.layers.embedding",
            "huaytools.tensorflow.layers.rnn",
            "huaytools.tensorflow.shape",
            "huaytools.test",
            "huaytools.utils",
            "huaytools.utils.bunch",
            "huaytools.utils.time"
        ],
        "version": "0.3.3"
    },
    "hub": {
        "cmdline": [],
        "modules": [
            "hub",
            "hub.areal",
            "hub.areal.storage_tensor",
            "hub.areal.store",
            "hub.areal.tensor",
            "hub.areal.tests",
            "hub.areal.tests.test_storage_tensor",
            "hub.cli",
            "hub.cli.auth",
            "hub.cli.command",
            "hub.cli.dev",
            "hub.cli.local",
            "hub.cli.utils",
            "hub.client",
            "hub.client.auth",
            "hub.client.base",
            "hub.client.hub_control",
            "hub.client.token_manager",
            "hub.codec",
            "hub.codec.base",
            "hub.codec.default",
            "hub.codec.gzip",
            "hub.codec.image",
            "hub.codec.jpeg",
            "hub.codec.lz4",
            "hub.codec.png",
            "hub.codec.zip",
            "hub.codec.zlib",
            "hub.collections",
            "hub.collections._chunk_utils",
            "hub.collections._store_version",
            "hub.collections.client_manager",
            "hub.collections.dataset",
            "hub.collections.dataset.core",
            "hub.collections.dataset.logger",
            "hub.collections.tensor",
            "hub.collections.tensor.core",
            "hub.config",
            "hub.exceptions",
            "hub.log",
            "hub.utils"
        ],
        "version": "0.12.7"
    },
    "hub-cep": {
        "cmdline": [],
        "modules": [
            "hub_cep",
            "hub_cep.consts",
            "hub_cep.exceptions",
            "hub_cep.messages",
            "hub_cep.providers",
            "hub_cep.zipcode"
        ],
        "version": "0.0.19"
    },
    "hub-dataflow": {
        "cmdline": [],
        "modules": [
            "dataflow",
            "dataflow.cli",
            "dataflow.cli.auth",
            "dataflow.cloud",
            "dataflow.cloud.cluster",
            "dataflow.cloud.container",
            "dataflow.cloud.iam_blocked_check",
            "dataflow.collections",
            "dataflow.collections._store_version",
            "dataflow.collections.client_manager",
            "dataflow.collections.dataset",
            "dataflow.collections.dataset.core",
            "dataflow.collections.dataset.logger",
            "dataflow.collections.tensor",
            "dataflow.collections.tensor.core",
            "dataflow.config",
            "dataflow.creds",
            "dataflow.creds.aws",
            "dataflow.creds.creds",
            "dataflow.creds.logger",
            "dataflow.dataset_generators",
            "dataflow.dataset_generators.sampler",
            "dataflow.dataset_generators.sampler.sampler",
            "dataflow.dataset_generators.tests",
            "dataflow.dataset_generators.tests.intelinair",
            "dataflow.dataset_generators.tests.intelinair.test_ingestor",
            "dataflow.dataset_generators.tests.intelinair.test_sampler",
            "dataflow.dataset_generators.tests.test_flow",
            "dataflow.hub_api",
            "dataflow.ingestor.intelinair.logger",
            "dataflow.logger",
            "dataflow.utils"
        ],
        "version": "0.9.4"
    },
    "hub-kinesis": {
        "cmdline": [],
        "modules": [
            "hub",
            "hub.client",
            "hub.db",
            "hub.db.dynamo",
            "hub.kinesis",
            "hub.kinesis.data_kinesis",
            "hub.kinesis.decorators",
            "hub.kinesis.helpers",
            "hub.kinesis.listener",
            "hub.kinesis.producer",
            "hub.version",
            "hub.workers",
            "hub.workers.worker"
        ],
        "version": "1.0.20"
    },
    "hub-pip": {
        "cmdline": [],
        "modules": [
            "hub_pip",
            "hub_pip.BlackDuckConfig",
            "hub_pip.BlackDuckCore",
            "hub_pip.BlackDuckPackage",
            "hub_pip.BlackDuckPlugin",
            "hub_pip.BlackDuckSerializer",
            "hub_pip.FileHandler",
            "hub_pip.LogHandler",
            "hub_pip.Main",
            "hub_pip.TreeHandler",
            "hub_pip.api",
            "hub_pip.api.AuthenticationDataService",
            "hub_pip.api.CodeLocationsDataService",
            "hub_pip.api.HubServerConfig",
            "hub_pip.api.LinkedDataDataService",
            "hub_pip.api.ProjectDataService",
            "hub_pip.api.RestConnection",
            "hub_pip.api.ScanSummaryDataService",
            "hub_pip.api.VersionBomPolicyDataService",
            "hub_pip.api.WaitingDataService",
            "hub_pip.api.model",
            "hub_pip.api.model.CodeLocationView",
            "hub_pip.api.model.MetadataView",
            "hub_pip.api.model.NameValuePair",
            "hub_pip.api.model.PagedCodeLocationView",
            "hub_pip.api.model.PagedProjectVersionView",
            "hub_pip.api.model.PagedProjectView",
            "hub_pip.api.model.PagedScanSummaryView",
            "hub_pip.api.model.ProjectVersionView",
            "hub_pip.api.model.ProjectView",
            "hub_pip.api.model.ScanSummaryView",
            "hub_pip.api.model.VersionBomPolicyStatusView",
            "hub_pip.bdio",
            "hub_pip.bdio.Bdio",
            "hub_pip.bdio.BdioComponent",
            "hub_pip.bdio.BdioExternalIdentifier",
            "hub_pip.bdio.BdioProject",
            "hub_pip.bdio.BdioRelationship",
            "hub_pip.bdio.BillOfMaterials",
            "hub_pip.tests",
            "hub_pip.tests.helper",
            "hub_pip.tests.test_bdio",
            "hub_pip.tests.test_config",
            "hub_pip.tests.test_flat_list",
            "hub_pip.tests.test_tree"
        ],
        "version": "1.1.0"
    },
    "hub-shim": {
        "cmdline": [],
        "modules": [
            "otreehub",
            "otreehub.apps",
            "otreehub.migrations",
            "otreehub.migrations.0001_initial",
            "otreehub.migrations.0002_profile_user",
            "otreehub.models",
            "otreehub.signals"
        ],
        "version": "0.3.2"
    },
    "hub-toolbox": {
        "cmdline": [],
        "modules": [
            "hub_toolbox",
            "hub_toolbox.approximate",
            "hub_toolbox.centering",
            "hub_toolbox.distances",
            "hub_toolbox.global_scaling",
            "hub_toolbox.goodman_kruskal",
            "hub_toolbox.htlogging",
            "hub_toolbox.hubness",
            "hub_toolbox.hubness_analysis",
            "hub_toolbox.intrinsic_dimension",
            "hub_toolbox.io",
            "hub_toolbox.knn_classification",
            "hub_toolbox.local_scaling",
            "hub_toolbox.shared_neighbors",
            "hub_toolbox.utils",
            "tests",
            "tests.approximate_test",
            "tests.centering_test",
            "tests.distances_test",
            "tests.goodmankruskal_test",
            "tests.hubness_test",
            "tests.hubnessanalysis_test",
            "tests.intrinsicdim_test",
            "tests.io_test",
            "tests.knn_test",
            "tests.localscaling_test",
            "tests.logging_test",
            "tests.mutualproximity_test",
            "tests.sharednn_test"
        ],
        "version": "2.5.2"
    },
    "hub20": {
        "cmdline": [],
        "modules": [
            "hub20",
            "hub20.api",
            "hub20.api.celery",
            "hub20.api.middleware",
            "hub20.api.routing",
            "hub20.api.settings",
            "hub20.api.urls",
            "hub20.api.wsgi",
            "hub20.apps",
            "hub20.apps.blockchain",
            "hub20.apps.blockchain.app_settings",
            "hub20.apps.blockchain.apps",
            "hub20.apps.blockchain.choices",
            "hub20.apps.blockchain.constants",
            "hub20.apps.blockchain.factories",
            "hub20.apps.blockchain.factories.base",
            "hub20.apps.blockchain.factories.providers",
            "hub20.apps.blockchain.fields",
            "hub20.apps.blockchain.management",
            "hub20.apps.blockchain.management.commands",
            "hub20.apps.blockchain.management.commands.sync_blockchain",
            "hub20.apps.blockchain.migrations",
            "hub20.apps.blockchain.migrations.0001_initial",
            "hub20.apps.blockchain.models",
            "hub20.apps.blockchain.serializers",
            "hub20.apps.blockchain.validators",
            "hub20.apps.core",
            "hub20.apps.core.admin",
            "hub20.apps.core.api",
            "hub20.apps.core.app_settings",
            "hub20.apps.core.apps",
            "hub20.apps.core.choices",
            "hub20.apps.core.consumers",
            "hub20.apps.core.factories",
            "hub20.apps.core.factories.accounting",
            "hub20.apps.core.factories.base",
            "hub20.apps.core.factories.payments",
            "hub20.apps.core.factories.store",
            "hub20.apps.core.factories.transfers",
            "hub20.apps.core.handlers",
            "hub20.apps.core.management",
            "hub20.apps.core.management.commands",
            "hub20.apps.core.management.commands.track_pending_payments",
            "hub20.apps.core.migrations",
            "hub20.apps.core.migrations.0001_initial",
            "hub20.apps.core.models",
            "hub20.apps.core.models.accounting",
            "hub20.apps.core.models.payments",
            "hub20.apps.core.models.store",
            "hub20.apps.core.models.transfers",
            "hub20.apps.core.serializers",
            "hub20.apps.core.settings",
            "hub20.apps.core.signals",
            "hub20.apps.core.tasks",
            "hub20.apps.core.tests",
            "hub20.apps.core.tests.base",
            "hub20.apps.core.tests.test_consumers",
            "hub20.apps.core.tests.test_models",
            "hub20.apps.core.tests.test_views",
            "hub20.apps.core.views",
            "hub20.apps.ethereum_money",
            "hub20.apps.ethereum_money.admin",
            "hub20.apps.ethereum_money.api",
            "hub20.apps.ethereum_money.app_settings",
            "hub20.apps.ethereum_money.apps",
            "hub20.apps.ethereum_money.factories",
            "hub20.apps.ethereum_money.handlers",
            "hub20.apps.ethereum_money.management",
            "hub20.apps.ethereum_money.management.commands",
            "hub20.apps.ethereum_money.management.commands.load_tracked_tokens",
            "hub20.apps.ethereum_money.migrations",
            "hub20.apps.ethereum_money.migrations.0001_initial",
            "hub20.apps.ethereum_money.models",
            "hub20.apps.ethereum_money.serializers",
            "hub20.apps.ethereum_money.signals",
            "hub20.apps.ethereum_money.views",
            "hub20.apps.raiden",
            "hub20.apps.raiden.admin",
            "hub20.apps.raiden.apps",
            "hub20.apps.raiden.client",
            "hub20.apps.raiden.contracts",
            "hub20.apps.raiden.factories",
            "hub20.apps.raiden.handlers",
            "hub20.apps.raiden.management",
            "hub20.apps.raiden.management.commands",
            "hub20.apps.raiden.management.commands.sync_raiden",
            "hub20.apps.raiden.migrations",
            "hub20.apps.raiden.migrations.0001_initial",
            "hub20.apps.raiden.models",
            "hub20.apps.raiden.signals",
            "hub20.apps.raiden.tasks"
        ],
        "version": "0.1.3"
    },
    "hub2lab": {
        "cmdline": [],
        "modules": [
            "github2gitlab",
            "github2gitlab.main"
        ],
        "version": "1.6.0"
    },
    "hub2lab-hook": {
        "cmdline": [],
        "modules": [
            "hub2labhook"
        ],
        "version": "0.0.1"
    },
    "hubarcode": {
        "cmdline": [],
        "modules": [
            "hubarcode",
            "hubarcode.code128",
            "hubarcode.code128.code128test",
            "hubarcode.code128.encoding",
            "hubarcode.code128.generate_test",
            "hubarcode.code128.renderer",
            "hubarcode.code128.textencoder",
            "hubarcode.datamatrix",
            "hubarcode.datamatrix.matrixtest",
            "hubarcode.datamatrix.placement",
            "hubarcode.datamatrix.reedsolomon",
            "hubarcode.datamatrix.renderer",
            "hubarcode.datamatrix.textencoder",
            "hubarcode.ean13",
            "hubarcode.ean13.eantest",
            "hubarcode.ean13.encoding",
            "hubarcode.ean13.generate_test",
            "hubarcode.ean13.renderer",
            "hubarcode.qrcode",
            "hubarcode.qrcode.isodata",
            "hubarcode.qrcode.qrcodetest",
            "hubarcode.qrcode.qrdata",
            "hubarcode.qrcode.qrdata.fr1",
            "hubarcode.qrcode.qrdata.fr10",
            "hubarcode.qrcode.qrdata.fr11",
            "hubarcode.qrcode.qrdata.fr12",
            "hubarcode.qrcode.qrdata.fr13",
            "hubarcode.qrcode.qrdata.fr14",
            "hubarcode.qrcode.qrdata.fr15",
            "hubarcode.qrcode.qrdata.fr16",
            "hubarcode.qrcode.qrdata.fr17",
            "hubarcode.qrcode.qrdata.fr18",
            "hubarcode.qrcode.qrdata.fr19",
            "hubarcode.qrcode.qrdata.fr2",
            "hubarcode.qrcode.qrdata.fr20",
            "hubarcode.qrcode.qrdata.fr21",
            "hubarcode.qrcode.qrdata.fr22",
            "hubarcode.qrcode.qrdata.fr23",
            "hubarcode.qrcode.qrdata.fr24",
            "hubarcode.qrcode.qrdata.fr25",
            "hubarcode.qrcode.qrdata.fr26",
            "hubarcode.qrcode.qrdata.fr27",
            "hubarcode.qrcode.qrdata.fr28",
            "hubarcode.qrcode.qrdata.fr29",
            "hubarcode.qrcode.qrdata.fr3",
            "hubarcode.qrcode.qrdata.fr30",
            "hubarcode.qrcode.qrdata.fr31",
            "hubarcode.qrcode.qrdata.fr32",
            "hubarcode.qrcode.qrdata.fr33",
            "hubarcode.qrcode.qrdata.fr34",
            "hubarcode.qrcode.qrdata.fr35",
            "hubarcode.qrcode.qrdata.fr36",
            "hubarcode.qrcode.qrdata.fr37",
            "hubarcode.qrcode.qrdata.fr38",
            "hubarcode.qrcode.qrdata.fr39",
            "hubarcode.qrcode.qrdata.fr4",
            "hubarcode.qrcode.qrdata.fr40",
            "hubarcode.qrcode.qrdata.fr5",
            "hubarcode.qrcode.qrdata.fr6",
            "hubarcode.qrcode.qrdata.fr7",
            "hubarcode.qrcode.qrdata.fr8",
            "hubarcode.qrcode.qrdata.fr9",
            "hubarcode.qrcode.qrdata.qrv10_0",
            "hubarcode.qrcode.qrdata.qrv10_1",
            "hubarcode.qrcode.qrdata.qrv10_2",
            "hubarcode.qrcode.qrdata.qrv10_3",
            "hubarcode.qrcode.qrdata.qrv11_0",
            "hubarcode.qrcode.qrdata.qrv11_1",
            "hubarcode.qrcode.qrdata.qrv11_2",
            "hubarcode.qrcode.qrdata.qrv11_3",
            "hubarcode.qrcode.qrdata.qrv12_0",
            "hubarcode.qrcode.qrdata.qrv12_1",
            "hubarcode.qrcode.qrdata.qrv12_2",
            "hubarcode.qrcode.qrdata.qrv12_3",
            "hubarcode.qrcode.qrdata.qrv13_0",
            "hubarcode.qrcode.qrdata.qrv13_1",
            "hubarcode.qrcode.qrdata.qrv13_2",
            "hubarcode.qrcode.qrdata.qrv13_3",
            "hubarcode.qrcode.qrdata.qrv14_0",
            "hubarcode.qrcode.qrdata.qrv14_1",
            "hubarcode.qrcode.qrdata.qrv14_2",
            "hubarcode.qrcode.qrdata.qrv14_3",
            "hubarcode.qrcode.qrdata.qrv15_0",
            "hubarcode.qrcode.qrdata.qrv15_1",
            "hubarcode.qrcode.qrdata.qrv15_2",
            "hubarcode.qrcode.qrdata.qrv15_3",
            "hubarcode.qrcode.qrdata.qrv16_0",
            "hubarcode.qrcode.qrdata.qrv16_1",
            "hubarcode.qrcode.qrdata.qrv16_2",
            "hubarcode.qrcode.qrdata.qrv16_3",
            "hubarcode.qrcode.qrdata.qrv17_0",
            "hubarcode.qrcode.qrdata.qrv17_1",
            "hubarcode.qrcode.qrdata.qrv17_2",
            "hubarcode.qrcode.qrdata.qrv17_3",
            "hubarcode.qrcode.qrdata.qrv18_0",
            "hubarcode.qrcode.qrdata.qrv18_1",
            "hubarcode.qrcode.qrdata.qrv18_2",
            "hubarcode.qrcode.qrdata.qrv18_3",
            "hubarcode.qrcode.qrdata.qrv19_0",
            "hubarcode.qrcode.qrdata.qrv19_1",
            "hubarcode.qrcode.qrdata.qrv19_2",
            "hubarcode.qrcode.qrdata.qrv19_3",
            "hubarcode.qrcode.qrdata.qrv1_0",
            "hubarcode.qrcode.qrdata.qrv1_1",
            "hubarcode.qrcode.qrdata.qrv1_2",
            "hubarcode.qrcode.qrdata.qrv1_3",
            "hubarcode.qrcode.qrdata.qrv20_0",
            "hubarcode.qrcode.qrdata.qrv20_1",
            "hubarcode.qrcode.qrdata.qrv20_2",
            "hubarcode.qrcode.qrdata.qrv20_3",
            "hubarcode.qrcode.qrdata.qrv21_0",
            "hubarcode.qrcode.qrdata.qrv21_1",
            "hubarcode.qrcode.qrdata.qrv21_2",
            "hubarcode.qrcode.qrdata.qrv21_3",
            "hubarcode.qrcode.qrdata.qrv22_0",
            "hubarcode.qrcode.qrdata.qrv22_1",
            "hubarcode.qrcode.qrdata.qrv22_2",
            "hubarcode.qrcode.qrdata.qrv22_3",
            "hubarcode.qrcode.qrdata.qrv23_0",
            "hubarcode.qrcode.qrdata.qrv23_1",
            "hubarcode.qrcode.qrdata.qrv23_2",
            "hubarcode.qrcode.qrdata.qrv23_3",
            "hubarcode.qrcode.qrdata.qrv24_0",
            "hubarcode.qrcode.qrdata.qrv24_1",
            "hubarcode.qrcode.qrdata.qrv24_2",
            "hubarcode.qrcode.qrdata.qrv24_3",
            "hubarcode.qrcode.qrdata.qrv25_0",
            "hubarcode.qrcode.qrdata.qrv25_1",
            "hubarcode.qrcode.qrdata.qrv25_2",
            "hubarcode.qrcode.qrdata.qrv25_3",
            "hubarcode.qrcode.qrdata.qrv26_0",
            "hubarcode.qrcode.qrdata.qrv26_1",
            "hubarcode.qrcode.qrdata.qrv26_2",
            "hubarcode.qrcode.qrdata.qrv26_3",
            "hubarcode.qrcode.qrdata.qrv27_0",
            "hubarcode.qrcode.qrdata.qrv27_1",
            "hubarcode.qrcode.qrdata.qrv27_2",
            "hubarcode.qrcode.qrdata.qrv27_3",
            "hubarcode.qrcode.qrdata.qrv28_0",
            "hubarcode.qrcode.qrdata.qrv28_1",
            "hubarcode.qrcode.qrdata.qrv28_2",
            "hubarcode.qrcode.qrdata.qrv28_3",
            "hubarcode.qrcode.qrdata.qrv29_0",
            "hubarcode.qrcode.qrdata.qrv29_1",
            "hubarcode.qrcode.qrdata.qrv29_2",
            "hubarcode.qrcode.qrdata.qrv29_3",
            "hubarcode.qrcode.qrdata.qrv2_0",
            "hubarcode.qrcode.qrdata.qrv2_1",
            "hubarcode.qrcode.qrdata.qrv2_2",
            "hubarcode.qrcode.qrdata.qrv2_3",
            "hubarcode.qrcode.qrdata.qrv30_0",
            "hubarcode.qrcode.qrdata.qrv30_1",
            "hubarcode.qrcode.qrdata.qrv30_2",
            "hubarcode.qrcode.qrdata.qrv30_3",
            "hubarcode.qrcode.qrdata.qrv31_0",
            "hubarcode.qrcode.qrdata.qrv31_1",
            "hubarcode.qrcode.qrdata.qrv31_2",
            "hubarcode.qrcode.qrdata.qrv31_3",
            "hubarcode.qrcode.qrdata.qrv32_0",
            "hubarcode.qrcode.qrdata.qrv32_1",
            "hubarcode.qrcode.qrdata.qrv32_2",
            "hubarcode.qrcode.qrdata.qrv32_3",
            "hubarcode.qrcode.qrdata.qrv33_0",
            "hubarcode.qrcode.qrdata.qrv33_1",
            "hubarcode.qrcode.qrdata.qrv33_2",
            "hubarcode.qrcode.qrdata.qrv33_3",
            "hubarcode.qrcode.qrdata.qrv34_0",
            "hubarcode.qrcode.qrdata.qrv34_1",
            "hubarcode.qrcode.qrdata.qrv34_2",
            "hubarcode.qrcode.qrdata.qrv34_3",
            "hubarcode.qrcode.qrdata.qrv35_0",
            "hubarcode.qrcode.qrdata.qrv35_1",
            "hubarcode.qrcode.qrdata.qrv35_2",
            "hubarcode.qrcode.qrdata.qrv35_3",
            "hubarcode.qrcode.qrdata.qrv36_0",
            "hubarcode.qrcode.qrdata.qrv36_1",
            "hubarcode.qrcode.qrdata.qrv36_2",
            "hubarcode.qrcode.qrdata.qrv36_3",
            "hubarcode.qrcode.qrdata.qrv37_0",
            "hubarcode.qrcode.qrdata.qrv37_1",
            "hubarcode.qrcode.qrdata.qrv37_2",
            "hubarcode.qrcode.qrdata.qrv37_3",
            "hubarcode.qrcode.qrdata.qrv38_0",
            "hubarcode.qrcode.qrdata.qrv38_1",
            "hubarcode.qrcode.qrdata.qrv38_2",
            "hubarcode.qrcode.qrdata.qrv38_3",
            "hubarcode.qrcode.qrdata.qrv39_0",
            "hubarcode.qrcode.qrdata.qrv39_1",
            "hubarcode.qrcode.qrdata.qrv39_2",
            "hubarcode.qrcode.qrdata.qrv39_3",
            "hubarcode.qrcode.qrdata.qrv3_0",
            "hubarcode.qrcode.qrdata.qrv3_1",
            "hubarcode.qrcode.qrdata.qrv3_2",
            "hubarcode.qrcode.qrdata.qrv3_3",
            "hubarcode.qrcode.qrdata.qrv40_0",
            "hubarcode.qrcode.qrdata.qrv40_1",
            "hubarcode.qrcode.qrdata.qrv40_2",
            "hubarcode.qrcode.qrdata.qrv40_3",
            "hubarcode.qrcode.qrdata.qrv4_0",
            "hubarcode.qrcode.qrdata.qrv4_1",
            "hubarcode.qrcode.qrdata.qrv4_2",
            "hubarcode.qrcode.qrdata.qrv4_3",
            "hubarcode.qrcode.qrdata.qrv5_0",
            "hubarcode.qrcode.qrdata.qrv5_1",
            "hubarcode.qrcode.qrdata.qrv5_2",
            "hubarcode.qrcode.qrdata.qrv5_3",
            "hubarcode.qrcode.qrdata.qrv6_0",
            "hubarcode.qrcode.qrdata.qrv6_1",
            "hubarcode.qrcode.qrdata.qrv6_2",
            "hubarcode.qrcode.qrdata.qrv6_3",
            "hubarcode.qrcode.qrdata.qrv7_0",
            "hubarcode.qrcode.qrdata.qrv7_1",
            "hubarcode.qrcode.qrdata.qrv7_2",
            "hubarcode.qrcode.qrdata.qrv7_3",
            "hubarcode.qrcode.qrdata.qrv8_0",
            "hubarcode.qrcode.qrdata.qrv8_1",
            "hubarcode.qrcode.qrdata.qrv8_2",
            "hubarcode.qrcode.qrdata.qrv8_3",
            "hubarcode.qrcode.qrdata.qrv9_0",
            "hubarcode.qrcode.qrdata.qrv9_1",
            "hubarcode.qrcode.qrdata.qrv9_2",
            "hubarcode.qrcode.qrdata.qrv9_3",
            "hubarcode.qrcode.qrdata.rsc10",
            "hubarcode.qrcode.qrdata.rsc13",
            "hubarcode.qrcode.qrdata.rsc15",
            "hubarcode.qrcode.qrdata.rsc16",
            "hubarcode.qrcode.qrdata.rsc17",
            "hubarcode.qrcode.qrdata.rsc18",
            "hubarcode.qrcode.qrdata.rsc20",
            "hubarcode.qrcode.qrdata.rsc22",
            "hubarcode.qrcode.qrdata.rsc24",
            "hubarcode.qrcode.qrdata.rsc26",
            "hubarcode.qrcode.qrdata.rsc28",
            "hubarcode.qrcode.qrdata.rsc30",
            "hubarcode.qrcode.qrdata.rsc7",
            "hubarcode.qrcode.renderer",
            "hubarcode.qrcode.textencoder"
        ],
        "version": "1.0.0"
    },
    "hubble": {
        "cmdline": [],
        "modules": [
            "hubble",
            "hubble.config",
            "hubble.keys",
            "hubble.shell"
        ],
        "version": "1.1.6"
    },
    "hubble-client": {
        "cmdline": [],
        "modules": [
            "hubble",
            "hubble.client",
            "hubble.consumer",
            "hubble.request",
            "hubble.utils",
            "hubble.version"
        ],
        "version": "0.1"
    },
    "hubble-github": {
        "cmdline": [],
        "modules": [
            "hubble_github",
            "hubble_github.display",
            "hubble_github.search"
        ],
        "version": "0.0.5"
    },
    "hubble-shuttle": {
        "cmdline": [],
        "modules": [
            "hubble_shuttle",
            "hubble_shuttle.api",
            "hubble_shuttle.exceptions",
            "hubble_shuttle.http",
            "hubble_shuttle.tests",
            "hubble_shuttle.tests.tests_exceptions",
            "hubble_shuttle.tests.tests_requests_transport",
            "hubble_shuttle.tests.tests_shuttle_api"
        ],
        "version": "0.1.2"
    },
    "hubblepy": {
        "cmdline": [],
        "modules": [
            "hubblepy",
            "hubblepy.api"
        ],
        "version": "1.0.0"
    },
    "hubblesec": {
        "cmdline": [],
        "modules": [
            "core",
            "core.connect",
            "core.rule_db",
            "core.scan"
        ],
        "version": "2.0"
    },
    "hubbub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubby": {
        "cmdline": [],
        "modules": [
            "hubby",
            "hubby._version",
            "hubby.cli",
            "hubby.git_wrapper",
            "tests",
            "tests.conftest",
            "tests.test_assignees",
            "tests.test_core",
            "tests.test_git_wrapper",
            "tests.test_pull_requests"
        ],
        "version": "0.3.0"
    },
    "hubbypy": {
        "cmdline": [],
        "modules": [
            "hubbypy",
            "hubbypy.contact_properties",
            "hubbypy.hub_api"
        ],
        "version": "0.1.8"
    },
    "hubcli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubcrypt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubd": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hubdbapi": {
        "cmdline": [],
        "modules": [
            "hubdbapi",
            "hubdbapi.constants",
            "hubdbapi.log_handler",
            "hubdbapi.table_functions"
        ],
        "version": "0.4"
    },
    "hubdns": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "huber": {
        "cmdline": [],
        "modules": [
            "huber",
            "huber.driver",
            "huber.mock",
            "huber.util"
        ],
        "version": "0.3.2"
    },
    "hubhack": {
        "cmdline": [],
        "modules": [
            "hubhack",
            "hubhack.spider"
        ],
        "version": "0.1.1"
    },
    "hubitat-maker-api-client": {
        "cmdline": [],
        "modules": [
            "hubitat_maker_api_client",
            "hubitat_maker_api_client.api_client",
            "hubitat_maker_api_client.caching_client",
            "hubitat_maker_api_client.client",
            "hubitat_maker_api_client.constants",
            "hubitat_maker_api_client.device_cache",
            "hubitat_maker_api_client.errors",
            "hubitat_maker_api_client.event_socket"
        ],
        "version": "1.1.1"
    },
    "hubitatmaker": {
        "cmdline": [],
        "modules": [
            "hubitatmaker",
            "hubitatmaker.const",
            "hubitatmaker.error",
            "hubitatmaker.hub",
            "hubitatmaker.server",
            "hubitatmaker.tests",
            "hubitatmaker.tests.test_hub",
            "hubitatmaker.tests.test_types",
            "hubitatmaker.types"
        ],
        "version": "0.3.15"
    },
    "hublatest": {
        "cmdline": [],
        "modules": [
            "hublatest",
            "hublatest.file_download",
            "hublatest.hublatest"
        ],
        "version": "0.1.3"
    },
    "hublib": {
        "cmdline": [],
        "modules": [
            "hublib",
            "hublib.cmd",
            "hublib.cmd.command",
            "hublib.rappture",
            "hublib.rappture.curve",
            "hublib.rappture.hist",
            "hublib.rappture.image",
            "hublib.rappture.integer",
            "hublib.rappture.loader",
            "hublib.rappture.node",
            "hublib.rappture.number",
            "hublib.rappture.rappture",
            "hublib.rappture.structure",
            "hublib.rappture.tool",
            "hublib.rappture.util",
            "hublib.tool",
            "hublib.tool.input_types",
            "hublib.tool.rw",
            "hublib.ui",
            "hublib.ui.command",
            "hublib.ui.download",
            "hublib.ui.editor",
            "hublib.ui.formvalue",
            "hublib.ui.group",
            "hublib.ui.hidecode",
            "hublib.ui.listmanager",
            "hublib.ui.modal",
            "hublib.ui.numvalue",
            "hublib.ui.pathselect",
            "hublib.ui.submit",
            "hublib.ui.upload",
            "hublib.ui.uq",
            "hublib.uq",
            "hublib.use",
            "hublib.util"
        ],
        "version": "0.9.96"
    },
    "hubmap-pipeline-release-mgmt": {
        "cmdline": [],
        "modules": [
            "hubmap_pipeline_release_mgmt",
            "hubmap_pipeline_release_mgmt.tag_release_pipeline"
        ],
        "version": "0.3"
    },
    "hubo": {
        "cmdline": [],
        "modules": [
            "hubo",
            "hubo.cs1graphics",
            "hubo.cs1media",
            "hubo.cs1robots",
            "hubo.cs1robots_images"
        ],
        "version": "0.0.2"
    },
    "hubot-hangups": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubot-python": {
        "cmdline": [],
        "modules": [
            "pybot",
            "pybot.adapter",
            "pybot.adapters",
            "pybot.adapters.shell",
            "pybot.events",
            "pybot.listener",
            "pybot.matchers",
            "pybot.messages",
            "pybot.response",
            "pybot.robot",
            "pybot.user"
        ],
        "version": "0.1.1"
    },
    "hubploy": {
        "cmdline": [],
        "modules": [
            "hubploy",
            "hubploy.auth",
            "hubploy.commitrange",
            "hubploy.config",
            "hubploy.gitutils",
            "hubploy.helm"
        ],
        "version": "0.1.1"
    },
    "hubs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubspot": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.blog",
            "hubspot.contacts",
            "hubspot.files",
            "hubspot.forms",
            "hubspot.hsapi",
            "hubspot.pages",
            "hubspot.properties",
            "hubspot.templates",
            "hubspot.utilities"
        ],
        "version": "0.1.14dev"
    },
    "hubspot-api-client": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.auth",
            "hubspot.auth.oauth",
            "hubspot.auth.oauth.api",
            "hubspot.auth.oauth.api.default_api",
            "hubspot.auth.oauth.api_client",
            "hubspot.auth.oauth.configuration",
            "hubspot.auth.oauth.exceptions",
            "hubspot.auth.oauth.models",
            "hubspot.auth.oauth.models.access_token_info_response",
            "hubspot.auth.oauth.models.error",
            "hubspot.auth.oauth.models.error_detail",
            "hubspot.auth.oauth.models.refresh_token_info_response",
            "hubspot.auth.oauth.models.token_response_if",
            "hubspot.auth.oauth.rest",
            "hubspot.client",
            "hubspot.cms",
            "hubspot.cms.audit_logs",
            "hubspot.cms.audit_logs.api",
            "hubspot.cms.audit_logs.api.default_api",
            "hubspot.cms.audit_logs.api_client",
            "hubspot.cms.audit_logs.configuration",
            "hubspot.cms.audit_logs.exceptions",
            "hubspot.cms.audit_logs.models",
            "hubspot.cms.audit_logs.models.collection_response_public_audit_log",
            "hubspot.cms.audit_logs.models.error",
            "hubspot.cms.audit_logs.models.error_detail",
            "hubspot.cms.audit_logs.models.next_page",
            "hubspot.cms.audit_logs.models.paging",
            "hubspot.cms.audit_logs.models.public_audit_log",
            "hubspot.cms.audit_logs.rest",
            "hubspot.cms.domains",
            "hubspot.cms.domains.api",
            "hubspot.cms.domains.api.domains_api",
            "hubspot.cms.domains.api_client",
            "hubspot.cms.domains.configuration",
            "hubspot.cms.domains.exceptions",
            "hubspot.cms.domains.models",
            "hubspot.cms.domains.models.collection_response_with_total_domain",
            "hubspot.cms.domains.models.domain",
            "hubspot.cms.domains.models.domain_cdn_config",
            "hubspot.cms.domains.models.domain_setup_info",
            "hubspot.cms.domains.models.error",
            "hubspot.cms.domains.models.error_detail",
            "hubspot.cms.domains.models.next_page",
            "hubspot.cms.domains.models.paging",
            "hubspot.cms.domains.rest",
            "hubspot.cms.performance",
            "hubspot.cms.performance.api",
            "hubspot.cms.performance.api.default_api",
            "hubspot.cms.performance.api_client",
            "hubspot.cms.performance.configuration",
            "hubspot.cms.performance.exceptions",
            "hubspot.cms.performance.models",
            "hubspot.cms.performance.models.error",
            "hubspot.cms.performance.models.error_detail",
            "hubspot.cms.performance.models.performance_view",
            "hubspot.cms.performance.models.public_performance_response",
            "hubspot.cms.performance.rest",
            "hubspot.cms.site_search",
            "hubspot.cms.site_search.api",
            "hubspot.cms.site_search.api.default_api",
            "hubspot.cms.site_search.api_client",
            "hubspot.cms.site_search.configuration",
            "hubspot.cms.site_search.exceptions",
            "hubspot.cms.site_search.models",
            "hubspot.cms.site_search.models.content_search_result",
            "hubspot.cms.site_search.models.error",
            "hubspot.cms.site_search.models.error_detail",
            "hubspot.cms.site_search.models.indexed_data",
            "hubspot.cms.site_search.models.public_search_results",
            "hubspot.cms.site_search.models.search_hit_field",
            "hubspot.cms.site_search.rest",
            "hubspot.cms.url_redirects",
            "hubspot.cms.url_redirects.api",
            "hubspot.cms.url_redirects.api.redirects_api",
            "hubspot.cms.url_redirects.api_client",
            "hubspot.cms.url_redirects.configuration",
            "hubspot.cms.url_redirects.exceptions",
            "hubspot.cms.url_redirects.models",
            "hubspot.cms.url_redirects.models.collection_response_with_total_url_mapping",
            "hubspot.cms.url_redirects.models.error",
            "hubspot.cms.url_redirects.models.error_detail",
            "hubspot.cms.url_redirects.models.next_page",
            "hubspot.cms.url_redirects.models.paging",
            "hubspot.cms.url_redirects.models.url_mapping",
            "hubspot.cms.url_redirects.models.url_mapping_create_request_body",
            "hubspot.cms.url_redirects.rest",
            "hubspot.crm",
            "hubspot.crm.association_type",
            "hubspot.crm.associations",
            "hubspot.crm.associations.api",
            "hubspot.crm.associations.api.batch_api",
            "hubspot.crm.associations.api.types_api",
            "hubspot.crm.associations.api_client",
            "hubspot.crm.associations.configuration",
            "hubspot.crm.associations.exceptions",
            "hubspot.crm.associations.models",
            "hubspot.crm.associations.models.associated_id",
            "hubspot.crm.associations.models.batch_input_public_association",
            "hubspot.crm.associations.models.batch_input_public_object_id",
            "hubspot.crm.associations.models.batch_response_public_association",
            "hubspot.crm.associations.models.batch_response_public_association_multi",
            "hubspot.crm.associations.models.collection_response_public_association_definiton",
            "hubspot.crm.associations.models.error",
            "hubspot.crm.associations.models.error_detail",
            "hubspot.crm.associations.models.next_page",
            "hubspot.crm.associations.models.paging",
            "hubspot.crm.associations.models.public_association",
            "hubspot.crm.associations.models.public_association_definiton",
            "hubspot.crm.associations.models.public_association_multi",
            "hubspot.crm.associations.models.public_object_id",
            "hubspot.crm.associations.rest",
            "hubspot.crm.companies",
            "hubspot.crm.companies.api",
            "hubspot.crm.companies.api.associations_api",
            "hubspot.crm.companies.api.basic_api",
            "hubspot.crm.companies.api.batch_api",
            "hubspot.crm.companies.api.search_api",
            "hubspot.crm.companies.api_client",
            "hubspot.crm.companies.configuration",
            "hubspot.crm.companies.exceptions",
            "hubspot.crm.companies.models",
            "hubspot.crm.companies.models.associated_id",
            "hubspot.crm.companies.models.batch_input_simple_public_object_batch_input",
            "hubspot.crm.companies.models.batch_input_simple_public_object_id",
            "hubspot.crm.companies.models.batch_input_simple_public_object_input",
            "hubspot.crm.companies.models.batch_read_input_simple_public_object_id",
            "hubspot.crm.companies.models.batch_response_simple_public_object",
            "hubspot.crm.companies.models.batch_response_simple_public_object_with_errors",
            "hubspot.crm.companies.models.collection_response_associated_id",
            "hubspot.crm.companies.models.collection_response_simple_public_object",
            "hubspot.crm.companies.models.collection_response_simple_public_object_id",
            "hubspot.crm.companies.models.collection_response_with_total_simple_public_object",
            "hubspot.crm.companies.models.error",
            "hubspot.crm.companies.models.error_detail",
            "hubspot.crm.companies.models.filter",
            "hubspot.crm.companies.models.filter_group",
            "hubspot.crm.companies.models.next_page",
            "hubspot.crm.companies.models.paging",
            "hubspot.crm.companies.models.previous_page",
            "hubspot.crm.companies.models.public_object_search_request",
            "hubspot.crm.companies.models.simple_public_object",
            "hubspot.crm.companies.models.simple_public_object_batch_input",
            "hubspot.crm.companies.models.simple_public_object_id",
            "hubspot.crm.companies.models.simple_public_object_input",
            "hubspot.crm.companies.rest",
            "hubspot.crm.contacts",
            "hubspot.crm.contacts.api",
            "hubspot.crm.contacts.api.associations_api",
            "hubspot.crm.contacts.api.basic_api",
            "hubspot.crm.contacts.api.batch_api",
            "hubspot.crm.contacts.api.search_api",
            "hubspot.crm.contacts.api_client",
            "hubspot.crm.contacts.configuration",
            "hubspot.crm.contacts.exceptions",
            "hubspot.crm.contacts.models",
            "hubspot.crm.contacts.models.associated_id",
            "hubspot.crm.contacts.models.batch_input_simple_public_object_batch_input",
            "hubspot.crm.contacts.models.batch_input_simple_public_object_id",
            "hubspot.crm.contacts.models.batch_input_simple_public_object_input",
            "hubspot.crm.contacts.models.batch_read_input_simple_public_object_id",
            "hubspot.crm.contacts.models.batch_response_simple_public_object",
            "hubspot.crm.contacts.models.batch_response_simple_public_object_with_errors",
            "hubspot.crm.contacts.models.collection_response_associated_id",
            "hubspot.crm.contacts.models.collection_response_simple_public_object",
            "hubspot.crm.contacts.models.collection_response_simple_public_object_id",
            "hubspot.crm.contacts.models.collection_response_with_total_simple_public_object",
            "hubspot.crm.contacts.models.error",
            "hubspot.crm.contacts.models.error_detail",
            "hubspot.crm.contacts.models.filter",
            "hubspot.crm.contacts.models.filter_group",
            "hubspot.crm.contacts.models.next_page",
            "hubspot.crm.contacts.models.paging",
            "hubspot.crm.contacts.models.previous_page",
            "hubspot.crm.contacts.models.public_object_search_request",
            "hubspot.crm.contacts.models.simple_public_object",
            "hubspot.crm.contacts.models.simple_public_object_batch_input",
            "hubspot.crm.contacts.models.simple_public_object_id",
            "hubspot.crm.contacts.models.simple_public_object_input",
            "hubspot.crm.contacts.rest",
            "hubspot.crm.deals",
            "hubspot.crm.deals.api",
            "hubspot.crm.deals.api.associations_api",
            "hubspot.crm.deals.api.basic_api",
            "hubspot.crm.deals.api.batch_api",
            "hubspot.crm.deals.api.search_api",
            "hubspot.crm.deals.api_client",
            "hubspot.crm.deals.configuration",
            "hubspot.crm.deals.exceptions",
            "hubspot.crm.deals.models",
            "hubspot.crm.deals.models.associated_id",
            "hubspot.crm.deals.models.batch_input_simple_public_object_batch_input",
            "hubspot.crm.deals.models.batch_input_simple_public_object_id",
            "hubspot.crm.deals.models.batch_input_simple_public_object_input",
            "hubspot.crm.deals.models.batch_read_input_simple_public_object_id",
            "hubspot.crm.deals.models.batch_response_simple_public_object",
            "hubspot.crm.deals.models.batch_response_simple_public_object_with_errors",
            "hubspot.crm.deals.models.collection_response_associated_id",
            "hubspot.crm.deals.models.collection_response_simple_public_object",
            "hubspot.crm.deals.models.collection_response_simple_public_object_id",
            "hubspot.crm.deals.models.collection_response_with_total_simple_public_object",
            "hubspot.crm.deals.models.error",
            "hubspot.crm.deals.models.error_detail",
            "hubspot.crm.deals.models.filter",
            "hubspot.crm.deals.models.filter_group",
            "hubspot.crm.deals.models.next_page",
            "hubspot.crm.deals.models.paging",
            "hubspot.crm.deals.models.previous_page",
            "hubspot.crm.deals.models.public_object_search_request",
            "hubspot.crm.deals.models.simple_public_object",
            "hubspot.crm.deals.models.simple_public_object_batch_input",
            "hubspot.crm.deals.models.simple_public_object_id",
            "hubspot.crm.deals.models.simple_public_object_input",
            "hubspot.crm.deals.rest",
            "hubspot.crm.extensions",
            "hubspot.crm.extensions.cards",
            "hubspot.crm.extensions.cards.api",
            "hubspot.crm.extensions.cards.api.cards_api",
            "hubspot.crm.extensions.cards.api.sample_response_api",
            "hubspot.crm.extensions.cards.api_client",
            "hubspot.crm.extensions.cards.configuration",
            "hubspot.crm.extensions.cards.exceptions",
            "hubspot.crm.extensions.cards.models",
            "hubspot.crm.extensions.cards.models.action_confirmation_body",
            "hubspot.crm.extensions.cards.models.action_hook_action_body",
            "hubspot.crm.extensions.cards.models.card_actions",
            "hubspot.crm.extensions.cards.models.card_create_request",
            "hubspot.crm.extensions.cards.models.card_display_body",
            "hubspot.crm.extensions.cards.models.card_display_property",
            "hubspot.crm.extensions.cards.models.card_fetch_body",
            "hubspot.crm.extensions.cards.models.card_fetch_body_patch",
            "hubspot.crm.extensions.cards.models.card_list_response",
            "hubspot.crm.extensions.cards.models.card_object_type_body",
            "hubspot.crm.extensions.cards.models.card_patch_request",
            "hubspot.crm.extensions.cards.models.card_response",
            "hubspot.crm.extensions.cards.models.display_option",
            "hubspot.crm.extensions.cards.models.error",
            "hubspot.crm.extensions.cards.models.error_detail",
            "hubspot.crm.extensions.cards.models.i_frame_action_body",
            "hubspot.crm.extensions.cards.models.integrator_card_payload_response",
            "hubspot.crm.extensions.cards.models.integrator_object_result",
            "hubspot.crm.extensions.cards.models.object_token",
            "hubspot.crm.extensions.cards.models.top_level_actions",
            "hubspot.crm.extensions.cards.rest",
            "hubspot.crm.imports",
            "hubspot.crm.imports.api",
            "hubspot.crm.imports.api.core_api",
            "hubspot.crm.imports.api_client",
            "hubspot.crm.imports.configuration",
            "hubspot.crm.imports.exceptions",
            "hubspot.crm.imports.models",
            "hubspot.crm.imports.models.action_response",
            "hubspot.crm.imports.models.collection_response_public_import_response",
            "hubspot.crm.imports.models.error",
            "hubspot.crm.imports.models.error_detail",
            "hubspot.crm.imports.models.next_page",
            "hubspot.crm.imports.models.paging",
            "hubspot.crm.imports.models.previous_page",
            "hubspot.crm.imports.models.public_import_metadata",
            "hubspot.crm.imports.models.public_import_response",
            "hubspot.crm.imports.models.public_object_list_record",
            "hubspot.crm.imports.rest",
            "hubspot.crm.line_items",
            "hubspot.crm.line_items.api",
            "hubspot.crm.line_items.api.associations_api",
            "hubspot.crm.line_items.api.basic_api",
            "hubspot.crm.line_items.api.batch_api",
            "hubspot.crm.line_items.api.search_api",
            "hubspot.crm.line_items.api_client",
            "hubspot.crm.line_items.configuration",
            "hubspot.crm.line_items.exceptions",
            "hubspot.crm.line_items.models",
            "hubspot.crm.line_items.models.associated_id",
            "hubspot.crm.line_items.models.batch_input_simple_public_object_batch_input",
            "hubspot.crm.line_items.models.batch_input_simple_public_object_id",
            "hubspot.crm.line_items.models.batch_input_simple_public_object_input",
            "hubspot.crm.line_items.models.batch_read_input_simple_public_object_id",
            "hubspot.crm.line_items.models.batch_response_simple_public_object",
            "hubspot.crm.line_items.models.batch_response_simple_public_object_with_errors",
            "hubspot.crm.line_items.models.collection_response_associated_id",
            "hubspot.crm.line_items.models.collection_response_simple_public_object",
            "hubspot.crm.line_items.models.collection_response_simple_public_object_id",
            "hubspot.crm.line_items.models.collection_response_with_total_simple_public_object",
            "hubspot.crm.line_items.models.error",
            "hubspot.crm.line_items.models.error_detail",
            "hubspot.crm.line_items.models.filter",
            "hubspot.crm.line_items.models.filter_group",
            "hubspot.crm.line_items.models.next_page",
            "hubspot.crm.line_items.models.paging",
            "hubspot.crm.line_items.models.previous_page",
            "hubspot.crm.line_items.models.public_object_search_request",
            "hubspot.crm.line_items.models.simple_public_object",
            "hubspot.crm.line_items.models.simple_public_object_batch_input",
            "hubspot.crm.line_items.models.simple_public_object_id",
            "hubspot.crm.line_items.models.simple_public_object_input",
            "hubspot.crm.line_items.rest",
            "hubspot.crm.object_type",
            "hubspot.crm.objects",
            "hubspot.crm.objects.api",
            "hubspot.crm.objects.api.associations_api",
            "hubspot.crm.objects.api.basic_api",
            "hubspot.crm.objects.api.batch_api",
            "hubspot.crm.objects.api.search_api",
            "hubspot.crm.objects.api_client",
            "hubspot.crm.objects.configuration",
            "hubspot.crm.objects.exceptions",
            "hubspot.crm.objects.models",
            "hubspot.crm.objects.models.associated_id",
            "hubspot.crm.objects.models.batch_input_simple_public_object_batch_input",
            "hubspot.crm.objects.models.batch_input_simple_public_object_id",
            "hubspot.crm.objects.models.batch_input_simple_public_object_input",
            "hubspot.crm.objects.models.batch_read_input_simple_public_object_id",
            "hubspot.crm.objects.models.batch_response_simple_public_object",
            "hubspot.crm.objects.models.batch_response_simple_public_object_with_errors",
            "hubspot.crm.objects.models.collection_response_associated_id",
            "hubspot.crm.objects.models.collection_response_simple_public_object",
            "hubspot.crm.objects.models.collection_response_with_total_simple_public_object",
            "hubspot.crm.objects.models.error",
            "hubspot.crm.objects.models.error_detail",
            "hubspot.crm.objects.models.filter",
            "hubspot.crm.objects.models.filter_group",
            "hubspot.crm.objects.models.next_page",
            "hubspot.crm.objects.models.paging",
            "hubspot.crm.objects.models.previous_page",
            "hubspot.crm.objects.models.public_object_search_request",
            "hubspot.crm.objects.models.simple_public_object",
            "hubspot.crm.objects.models.simple_public_object_batch_input",
            "hubspot.crm.objects.models.simple_public_object_id",
            "hubspot.crm.objects.models.simple_public_object_input",
            "hubspot.crm.objects.rest",
            "hubspot.crm.owners",
            "hubspot.crm.owners.api",
            "hubspot.crm.owners.api.default_api",
            "hubspot.crm.owners.api_client",
            "hubspot.crm.owners.configuration",
            "hubspot.crm.owners.exceptions",
            "hubspot.crm.owners.models",
            "hubspot.crm.owners.models.collection_response_public_owner",
            "hubspot.crm.owners.models.error",
            "hubspot.crm.owners.models.error_detail",
            "hubspot.crm.owners.models.next_page",
            "hubspot.crm.owners.models.paging",
            "hubspot.crm.owners.models.public_owner",
            "hubspot.crm.owners.models.public_team",
            "hubspot.crm.owners.rest",
            "hubspot.crm.pipelines",
            "hubspot.crm.pipelines.api",
            "hubspot.crm.pipelines.api.pipeline_stages_api",
            "hubspot.crm.pipelines.api.pipelines_api",
            "hubspot.crm.pipelines.api_client",
            "hubspot.crm.pipelines.configuration",
            "hubspot.crm.pipelines.exceptions",
            "hubspot.crm.pipelines.models",
            "hubspot.crm.pipelines.models.collection_response_pipeline",
            "hubspot.crm.pipelines.models.collection_response_pipeline_stage",
            "hubspot.crm.pipelines.models.error",
            "hubspot.crm.pipelines.models.error_detail",
            "hubspot.crm.pipelines.models.next_page",
            "hubspot.crm.pipelines.models.paging",
            "hubspot.crm.pipelines.models.pipeline",
            "hubspot.crm.pipelines.models.pipeline_input",
            "hubspot.crm.pipelines.models.pipeline_patch_input",
            "hubspot.crm.pipelines.models.pipeline_stage",
            "hubspot.crm.pipelines.models.pipeline_stage_input",
            "hubspot.crm.pipelines.models.pipeline_stage_patch_input",
            "hubspot.crm.pipelines.rest",
            "hubspot.crm.products",
            "hubspot.crm.products.api",
            "hubspot.crm.products.api.associations_api",
            "hubspot.crm.products.api.basic_api",
            "hubspot.crm.products.api.batch_api",
            "hubspot.crm.products.api.search_api",
            "hubspot.crm.products.api_client",
            "hubspot.crm.products.configuration",
            "hubspot.crm.products.exceptions",
            "hubspot.crm.products.models",
            "hubspot.crm.products.models.associated_id",
            "hubspot.crm.products.models.batch_input_simple_public_object_batch_input",
            "hubspot.crm.products.models.batch_input_simple_public_object_id",
            "hubspot.crm.products.models.batch_input_simple_public_object_input",
            "hubspot.crm.products.models.batch_read_input_simple_public_object_id",
            "hubspot.crm.products.models.batch_response_simple_public_object",
            "hubspot.crm.products.models.batch_response_simple_public_object_with_errors",
            "hubspot.crm.products.models.collection_response_associated_id",
            "hubspot.crm.products.models.collection_response_simple_public_object",
            "hubspot.crm.products.models.collection_response_simple_public_object_id",
            "hubspot.crm.products.models.collection_response_with_total_simple_public_object",
            "hubspot.crm.products.models.error",
            "hubspot.crm.products.models.error_detail",
            "hubspot.crm.products.models.filter",
            "hubspot.crm.products.models.filter_group",
            "hubspot.crm.products.models.next_page",
            "hubspot.crm.products.models.paging",
            "hubspot.crm.products.models.previous_page",
            "hubspot.crm.products.models.public_object_search_request",
            "hubspot.crm.products.models.simple_public_object",
            "hubspot.crm.products.models.simple_public_object_batch_input",
            "hubspot.crm.products.models.simple_public_object_id",
            "hubspot.crm.products.models.simple_public_object_input",
            "hubspot.crm.products.rest",
            "hubspot.crm.properties",
            "hubspot.crm.properties.api",
            "hubspot.crm.properties.api.batch_api",
            "hubspot.crm.properties.api.core_api",
            "hubspot.crm.properties.api.groups_api",
            "hubspot.crm.properties.api_client",
            "hubspot.crm.properties.configuration",
            "hubspot.crm.properties.exceptions",
            "hubspot.crm.properties.models",
            "hubspot.crm.properties.models.batch_input_property_create",
            "hubspot.crm.properties.models.batch_input_property_name",
            "hubspot.crm.properties.models.batch_read_input_property_name",
            "hubspot.crm.properties.models.batch_response_property",
            "hubspot.crm.properties.models.collection_response_property",
            "hubspot.crm.properties.models.collection_response_property_group",
            "hubspot.crm.properties.models.error",
            "hubspot.crm.properties.models.error_detail",
            "hubspot.crm.properties.models.model_property",
            "hubspot.crm.properties.models.next_page",
            "hubspot.crm.properties.models.option",
            "hubspot.crm.properties.models.option_input",
            "hubspot.crm.properties.models.paging",
            "hubspot.crm.properties.models.property_create",
            "hubspot.crm.properties.models.property_group",
            "hubspot.crm.properties.models.property_group_create",
            "hubspot.crm.properties.models.property_group_update",
            "hubspot.crm.properties.models.property_modification_metadata",
            "hubspot.crm.properties.models.property_name",
            "hubspot.crm.properties.models.property_update",
            "hubspot.crm.properties.rest",
            "hubspot.crm.quotes",
            "hubspot.crm.quotes.api",
            "hubspot.crm.quotes.api.associations_api",
            "hubspot.crm.quotes.api.basic_api",
            "hubspot.crm.quotes.api.batch_api",
            "hubspot.crm.quotes.api.default_api",
            "hubspot.crm.quotes.api.search_api",
            "hubspot.crm.quotes.api_client",
            "hubspot.crm.quotes.configuration",
            "hubspot.crm.quotes.exceptions",
            "hubspot.crm.quotes.models",
            "hubspot.crm.quotes.models.associated_id",
            "hubspot.crm.quotes.models.batch_input_simple_public_object_batch_input",
            "hubspot.crm.quotes.models.batch_input_simple_public_object_id",
            "hubspot.crm.quotes.models.batch_input_simple_public_object_input",
            "hubspot.crm.quotes.models.batch_read_input_simple_public_object_id",
            "hubspot.crm.quotes.models.batch_response_simple_public_object",
            "hubspot.crm.quotes.models.batch_response_simple_public_object_with_errors",
            "hubspot.crm.quotes.models.collection_response_associated_id",
            "hubspot.crm.quotes.models.collection_response_simple_public_object",
            "hubspot.crm.quotes.models.collection_response_simple_public_object_id",
            "hubspot.crm.quotes.models.collection_response_with_total_simple_public_object",
            "hubspot.crm.quotes.models.error",
            "hubspot.crm.quotes.models.error_detail",
            "hubspot.crm.quotes.models.filter",
            "hubspot.crm.quotes.models.filter_group",
            "hubspot.crm.quotes.models.next_page",
            "hubspot.crm.quotes.models.paging",
            "hubspot.crm.quotes.models.previous_page",
            "hubspot.crm.quotes.models.public_object_search_request",
            "hubspot.crm.quotes.models.simple_public_object",
            "hubspot.crm.quotes.models.simple_public_object_batch_input",
            "hubspot.crm.quotes.models.simple_public_object_id",
            "hubspot.crm.quotes.models.simple_public_object_input",
            "hubspot.crm.quotes.rest",
            "hubspot.crm.schemas",
            "hubspot.crm.schemas.api",
            "hubspot.crm.schemas.api.core_api",
            "hubspot.crm.schemas.api.default_api",
            "hubspot.crm.schemas.api_client",
            "hubspot.crm.schemas.configuration",
            "hubspot.crm.schemas.exceptions",
            "hubspot.crm.schemas.models",
            "hubspot.crm.schemas.models.association_definition",
            "hubspot.crm.schemas.models.association_definition_egg",
            "hubspot.crm.schemas.models.collection_response_object_schema",
            "hubspot.crm.schemas.models.error",
            "hubspot.crm.schemas.models.error_detail",
            "hubspot.crm.schemas.models.model_property",
            "hubspot.crm.schemas.models.next_page",
            "hubspot.crm.schemas.models.object_schema",
            "hubspot.crm.schemas.models.object_schema_egg",
            "hubspot.crm.schemas.models.object_type_definition",
            "hubspot.crm.schemas.models.object_type_definition_labels",
            "hubspot.crm.schemas.models.object_type_definition_patch",
            "hubspot.crm.schemas.models.object_type_property_create",
            "hubspot.crm.schemas.models.option",
            "hubspot.crm.schemas.models.option_input",
            "hubspot.crm.schemas.models.paging",
            "hubspot.crm.schemas.models.previous_page",
            "hubspot.crm.schemas.models.property_modification_metadata",
            "hubspot.crm.schemas.rest",
            "hubspot.crm.tickets",
            "hubspot.crm.tickets.api",
            "hubspot.crm.tickets.api.associations_api",
            "hubspot.crm.tickets.api.basic_api",
            "hubspot.crm.tickets.api.batch_api",
            "hubspot.crm.tickets.api.search_api",
            "hubspot.crm.tickets.api_client",
            "hubspot.crm.tickets.configuration",
            "hubspot.crm.tickets.exceptions",
            "hubspot.crm.tickets.models",
            "hubspot.crm.tickets.models.associated_id",
            "hubspot.crm.tickets.models.batch_input_simple_public_object_batch_input",
            "hubspot.crm.tickets.models.batch_input_simple_public_object_id",
            "hubspot.crm.tickets.models.batch_input_simple_public_object_input",
            "hubspot.crm.tickets.models.batch_read_input_simple_public_object_id",
            "hubspot.crm.tickets.models.batch_response_simple_public_object",
            "hubspot.crm.tickets.models.batch_response_simple_public_object_with_errors",
            "hubspot.crm.tickets.models.collection_response_associated_id",
            "hubspot.crm.tickets.models.collection_response_simple_public_object",
            "hubspot.crm.tickets.models.collection_response_simple_public_object_id",
            "hubspot.crm.tickets.models.collection_response_with_total_simple_public_object",
            "hubspot.crm.tickets.models.error",
            "hubspot.crm.tickets.models.error_detail",
            "hubspot.crm.tickets.models.filter",
            "hubspot.crm.tickets.models.filter_group",
            "hubspot.crm.tickets.models.next_page",
            "hubspot.crm.tickets.models.paging",
            "hubspot.crm.tickets.models.previous_page",
            "hubspot.crm.tickets.models.public_object_search_request",
            "hubspot.crm.tickets.models.simple_public_object",
            "hubspot.crm.tickets.models.simple_public_object_batch_input",
            "hubspot.crm.tickets.models.simple_public_object_id",
            "hubspot.crm.tickets.models.simple_public_object_input",
            "hubspot.crm.tickets.rest",
            "hubspot.crm.timeline",
            "hubspot.crm.timeline.api",
            "hubspot.crm.timeline.api.events_api",
            "hubspot.crm.timeline.api.templates_api",
            "hubspot.crm.timeline.api.tokens_api",
            "hubspot.crm.timeline.api_client",
            "hubspot.crm.timeline.configuration",
            "hubspot.crm.timeline.exceptions",
            "hubspot.crm.timeline.models",
            "hubspot.crm.timeline.models.add_numbers",
            "hubspot.crm.timeline.models.batch_input_timeline_event",
            "hubspot.crm.timeline.models.batch_response_timeline_event_response",
            "hubspot.crm.timeline.models.batch_response_timeline_event_response_with_errors",
            "hubspot.crm.timeline.models.begins_with",
            "hubspot.crm.timeline.models.boolean_property_variable",
            "hubspot.crm.timeline.models.collection_response_timeline_event_template",
            "hubspot.crm.timeline.models.concat_strings",
            "hubspot.crm.timeline.models.constant_boolean",
            "hubspot.crm.timeline.models.constant_number",
            "hubspot.crm.timeline.models.constant_string",
            "hubspot.crm.timeline.models.contains",
            "hubspot.crm.timeline.models.date",
            "hubspot.crm.timeline.models.divide_numbers",
            "hubspot.crm.timeline.models.error",
            "hubspot.crm.timeline.models.error_detail",
            "hubspot.crm.timeline.models.event_detail",
            "hubspot.crm.timeline.models.extract_most_recent_email_reply_html",
            "hubspot.crm.timeline.models.extract_most_recent_email_reply_text",
            "hubspot.crm.timeline.models.extract_most_recent_plain_text_email_reply",
            "hubspot.crm.timeline.models.fetch_exchange_rate",
            "hubspot.crm.timeline.models.has_email_reply",
            "hubspot.crm.timeline.models.has_plain_text_email_reply",
            "hubspot.crm.timeline.models.if_boolean",
            "hubspot.crm.timeline.models.if_number",
            "hubspot.crm.timeline.models.if_string",
            "hubspot.crm.timeline.models.is_present",
            "hubspot.crm.timeline.models.less_than",
            "hubspot.crm.timeline.models.less_than_or_equal",
            "hubspot.crm.timeline.models.lower_case",
            "hubspot.crm.timeline.models.max_numbers",
            "hubspot.crm.timeline.models.min_numbers",
            "hubspot.crm.timeline.models.model_and",
            "hubspot.crm.timeline.models.model_not",
            "hubspot.crm.timeline.models.model_or",
            "hubspot.crm.timeline.models.month",
            "hubspot.crm.timeline.models.more_than",
            "hubspot.crm.timeline.models.more_than_or_equal",
            "hubspot.crm.timeline.models.multiply_numbers",
            "hubspot.crm.timeline.models.next_page",
            "hubspot.crm.timeline.models.now",
            "hubspot.crm.timeline.models.number_equals",
            "hubspot.crm.timeline.models.number_property_variable",
            "hubspot.crm.timeline.models.number_to_string",
            "hubspot.crm.timeline.models.paging",
            "hubspot.crm.timeline.models.parse_number",
            "hubspot.crm.timeline.models.period_to_months",
            "hubspot.crm.timeline.models.pipeline_probability",
            "hubspot.crm.timeline.models.previous_page",
            "hubspot.crm.timeline.models.round_down_numbers",
            "hubspot.crm.timeline.models.round_up_numbers",
            "hubspot.crm.timeline.models.string_equals",
            "hubspot.crm.timeline.models.string_property_variable",
            "hubspot.crm.timeline.models.subtract_numbers",
            "hubspot.crm.timeline.models.time_between",
            "hubspot.crm.timeline.models.timeline_event",
            "hubspot.crm.timeline.models.timeline_event_i_frame",
            "hubspot.crm.timeline.models.timeline_event_response",
            "hubspot.crm.timeline.models.timeline_event_template",
            "hubspot.crm.timeline.models.timeline_event_template_create_request",
            "hubspot.crm.timeline.models.timeline_event_template_token",
            "hubspot.crm.timeline.models.timeline_event_template_token_option",
            "hubspot.crm.timeline.models.timeline_event_template_token_update_request",
            "hubspot.crm.timeline.models.timeline_event_template_update_request",
            "hubspot.crm.timeline.models.upper_case",
            "hubspot.crm.timeline.models.xor",
            "hubspot.crm.timeline.models.year",
            "hubspot.crm.timeline.rest",
            "hubspot.discovery",
            "hubspot.discovery.auth",
            "hubspot.discovery.auth.discovery",
            "hubspot.discovery.auth.oauth",
            "hubspot.discovery.auth.oauth.discovery",
            "hubspot.discovery.cms",
            "hubspot.discovery.cms.audit_logs",
            "hubspot.discovery.cms.audit_logs.discovery",
            "hubspot.discovery.cms.discovery",
            "hubspot.discovery.cms.domains",
            "hubspot.discovery.cms.domains.discovery",
            "hubspot.discovery.cms.performance",
            "hubspot.discovery.cms.performance.discovery",
            "hubspot.discovery.cms.site_search",
            "hubspot.discovery.cms.site_search.discovery",
            "hubspot.discovery.cms.url_redirects",
            "hubspot.discovery.cms.url_redirects.discovery",
            "hubspot.discovery.crm",
            "hubspot.discovery.crm.associations",
            "hubspot.discovery.crm.associations.discovery",
            "hubspot.discovery.crm.companies",
            "hubspot.discovery.crm.companies.discovery",
            "hubspot.discovery.crm.contacts",
            "hubspot.discovery.crm.contacts.discovery",
            "hubspot.discovery.crm.deals",
            "hubspot.discovery.crm.deals.discovery",
            "hubspot.discovery.crm.discovery",
            "hubspot.discovery.crm.extensions",
            "hubspot.discovery.crm.extensions.cards",
            "hubspot.discovery.crm.extensions.cards.discovery",
            "hubspot.discovery.crm.extensions.discovery",
            "hubspot.discovery.crm.imports",
            "hubspot.discovery.crm.imports.discovery",
            "hubspot.discovery.crm.line_items",
            "hubspot.discovery.crm.line_items.discovery",
            "hubspot.discovery.crm.objects",
            "hubspot.discovery.crm.objects.discovery",
            "hubspot.discovery.crm.owners",
            "hubspot.discovery.crm.owners.discovery",
            "hubspot.discovery.crm.pipelines",
            "hubspot.discovery.crm.pipelines.discovery",
            "hubspot.discovery.crm.products",
            "hubspot.discovery.crm.products.discovery",
            "hubspot.discovery.crm.properties",
            "hubspot.discovery.crm.properties.discovery",
            "hubspot.discovery.crm.quotes",
            "hubspot.discovery.crm.quotes.discovery",
            "hubspot.discovery.crm.schemas",
            "hubspot.discovery.crm.schemas.discovery",
            "hubspot.discovery.crm.tickets",
            "hubspot.discovery.crm.tickets.discovery",
            "hubspot.discovery.crm.timeline",
            "hubspot.discovery.crm.timeline.discovery",
            "hubspot.discovery.discovery_base",
            "hubspot.discovery.webhooks",
            "hubspot.discovery.webhooks.discovery",
            "hubspot.exceptions",
            "hubspot.hubspot",
            "hubspot.utils",
            "hubspot.utils.oauth",
            "hubspot.utils.objects",
            "hubspot.utils.webhooks",
            "hubspot.webhooks",
            "hubspot.webhooks.api",
            "hubspot.webhooks.api.settings_api",
            "hubspot.webhooks.api.subscriptions_api",
            "hubspot.webhooks.api_client",
            "hubspot.webhooks.configuration",
            "hubspot.webhooks.exceptions",
            "hubspot.webhooks.models",
            "hubspot.webhooks.models.batch_input_subscription_batch_update_request",
            "hubspot.webhooks.models.batch_response_subscription_response",
            "hubspot.webhooks.models.batch_response_subscription_response_with_errors",
            "hubspot.webhooks.models.error",
            "hubspot.webhooks.models.error_detail",
            "hubspot.webhooks.models.settings_change_request",
            "hubspot.webhooks.models.settings_response",
            "hubspot.webhooks.models.subscription_batch_update_request",
            "hubspot.webhooks.models.subscription_create_request",
            "hubspot.webhooks.models.subscription_list_response",
            "hubspot.webhooks.models.subscription_patch_request",
            "hubspot.webhooks.models.subscription_response",
            "hubspot.webhooks.models.throttling_settings",
            "hubspot.webhooks.rest"
        ],
        "version": "3.1.0"
    },
    "hubspot-conn": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.connection",
            "hubspot.connection._validators",
            "hubspot.connection.exc",
            "hubspot.connection.testing",
            "hubspot.connection.webhook"
        ],
        "version": "1.1"
    },
    "hubspot-connection": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.connection",
            "hubspot.connection._validators",
            "hubspot.connection.exc",
            "hubspot.connection.testing"
        ],
        "version": "1.0rc8.post0"
    },
    "hubspot-contacts": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1"
    },
    "hubspot-oauth2client": {
        "cmdline": [],
        "modules": [
            "hubspot_oauth2client",
            "hubspot_oauth2client.client"
        ],
        "version": "0.1"
    },
    "hubspot-python": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.calendar",
            "hubspot.client",
            "hubspot.companies",
            "hubspot.contact_lists",
            "hubspot.contacts",
            "hubspot.deals",
            "hubspot.enums",
            "hubspot.exceptions",
            "hubspot.fields",
            "hubspot.integrations",
            "hubspot.webhooks",
            "hubspot.workflows"
        ],
        "version": "1.0.0"
    },
    "hubspot3": {
        "cmdline": [],
        "modules": [
            "hubspot3",
            "hubspot3.base",
            "hubspot3.blog",
            "hubspot3.broadcast",
            "hubspot3.cms_files",
            "hubspot3.cms_layouts",
            "hubspot3.cms_templates",
            "hubspot3.companies",
            "hubspot3.companies_properties",
            "hubspot3.contact_lists",
            "hubspot3.contacts",
            "hubspot3.crm_associations",
            "hubspot3.crm_pipelines",
            "hubspot3.deals",
            "hubspot3.ecommerce_bridge",
            "hubspot3.email_events",
            "hubspot3.email_subscription",
            "hubspot3.engagements",
            "hubspot3.error",
            "hubspot3.forms",
            "hubspot3.globals",
            "hubspot3.keywords",
            "hubspot3.leads",
            "hubspot3.lines",
            "hubspot3.oauth2",
            "hubspot3.owners",
            "hubspot3.products",
            "hubspot3.properties",
            "hubspot3.property_groups",
            "hubspot3.prospects",
            "hubspot3.settings",
            "hubspot3.tickets",
            "hubspot3.utils",
            "hubspot3.workflows"
        ],
        "version": "3.2.50"
    },
    "hubspyt": {
        "cmdline": [],
        "modules": [
            "hubspyt",
            "hubspyt.base_wrapper",
            "hubspyt.contacts",
            "hubspyt.models",
            "hubspyt.models.base_model",
            "hubspyt.models.contact"
        ],
        "version": "0.2"
    },
    "hubstorage": {
        "cmdline": [],
        "modules": [
            "hubstorage",
            "hubstorage.activity",
            "hubstorage.batchuploader",
            "hubstorage.client",
            "hubstorage.collectionsrt",
            "hubstorage.frontier",
            "hubstorage.job",
            "hubstorage.jobq",
            "hubstorage.project",
            "hubstorage.resourcetype",
            "hubstorage.serialization",
            "hubstorage.utils",
            "tests",
            "tests.hstestcase",
            "tests.test_activity",
            "tests.test_batchuploader",
            "tests.test_client",
            "tests.test_collections",
            "tests.test_frontier",
            "tests.test_jobq",
            "tests.test_jobsmeta",
            "tests.test_project",
            "tests.test_retry",
            "tests.test_system",
            "tests.testutil"
        ],
        "version": "0.23.6"
    },
    "hubstorage-frontera": {
        "cmdline": [],
        "modules": [
            "hcf_backend"
        ],
        "version": "0.1"
    },
    "hubsync": {
        "cmdline": [],
        "modules": [
            "hubsync",
            "hubsync.config",
            "hubsync.github",
            "hubsync.sync",
            "hubsync.workspace"
        ],
        "version": "0.2.9"
    },
    "hubtel": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "hubtools": {
        "cmdline": [],
        "modules": [
            "hub",
            "hub.appliances",
            "hub.backups",
            "hub.formatter",
            "hub.keypacket",
            "hub.servers",
            "hub.utils"
        ],
        "version": "2011.8.11"
    },
    "hubtype": {
        "cmdline": [],
        "modules": [
            "hubtype",
            "hubtype.ht"
        ],
        "version": "0.1.2"
    },
    "hubu": {
        "cmdline": [],
        "modules": [
            "hubu",
            "hubu.base",
            "hubu.bucket_client",
            "hubu.download_manager",
            "hubu.downloadable",
            "hubu.downloader",
            "hubu.humble_bundle",
            "hubu.main"
        ],
        "version": "1.0.5"
    },
    "hubugs": {
        "cmdline": [],
        "modules": [
            "hubugs",
            "hubugs._version",
            "hubugs.models",
            "hubugs.template",
            "hubugs.utils",
            "tests",
            "tests.test_template",
            "tests.test_utils"
        ],
        "version": "0.19.0"
    },
    "hubward": {
        "cmdline": [],
        "modules": [
            "hubward",
            "hubward.generate_config_from_schema",
            "hubward.liftover",
            "hubward.log",
            "hubward.models",
            "hubward.utils",
            "hubward.version",
            "tests",
            "tests.test_hubward"
        ],
        "version": "0.2.2"
    },
    "hubzero-jupyterhub-hzjwtauthenticator": {
        "cmdline": [],
        "modules": [
            "hzjwtauthenticator",
            "hzjwtauthenticator.hzjwtauthenticator"
        ],
        "version": "20180312164541"
    },
    "hubzero-jupyterhub-jwtauthenticator": {
        "cmdline": [],
        "modules": [
            "jwtauthenticator",
            "jwtauthenticator.jwtauthenticator"
        ],
        "version": "0.2.dev0"
    },
    "hucache": {
        "cmdline": [],
        "modules": [
            "hucache",
            "hucache.cache",
            "hucache.constants",
            "hucache.serializer",
            "hucache.store"
        ],
        "version": "0.0.5"
    },
    "huchengzhen": {
        "cmdline": [],
        "modules": [
            "huchengzhen",
            "huchengzhen.myfunction"
        ],
        "version": "0.0.4"
    },
    "hucit-kb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hucitlib": {
        "cmdline": [],
        "modules": [
            "knowledge_base",
            "knowledge_base.cli",
            "knowledge_base.populate",
            "knowledge_base.surfext"
        ],
        "version": "0.2.9"
    },
    "huck": {
        "cmdline": [
            "huck"
        ],
        "modules": [
            "huck",
            "huck.autoreload",
            "huck.http",
            "huck.locale",
            "huck.mail",
            "huck.template",
            "huck.utils",
            "huck.web"
        ],
        "version": "0.2.0"
    },
    "huckelpy": {
        "cmdline": [],
        "modules": [
            "huckelpy",
            "huckelpy.atomic_orbital",
            "huckelpy.file_io",
            "huckelpy.overlap_integral",
            "huckelpy.tools"
        ],
        "version": "0.1.2"
    },
    "huckle": {
        "cmdline": [],
        "modules": [
            "huckle",
            "huckle.config",
            "huckle.hclinav",
            "huckle.huckle",
            "huckle.hutils",
            "huckle.package"
        ],
        "version": "2.4.4"
    },
    "hud": {
        "cmdline": [],
        "modules": [
            "hud",
            "hud.elements",
            "hud.eventHandler",
            "hud.hud"
        ],
        "version": "0.3b2"
    },
    "hudai": {
        "cmdline": [],
        "modules": [
            "hudai",
            "hudai.client",
            "hudai.error",
            "hudai.helpers",
            "hudai.helpers.http_client",
            "hudai.helpers.http_errors",
            "hudai.helpers.resource",
            "hudai.resources",
            "hudai.resources.action_item",
            "hudai.resources.article",
            "hudai.resources.article_company",
            "hudai.resources.article_geography",
            "hudai.resources.article_highlights",
            "hudai.resources.article_key_term",
            "hudai.resources.article_person",
            "hudai.resources.article_tag",
            "hudai.resources.collateral",
            "hudai.resources.company",
            "hudai.resources.company_event",
            "hudai.resources.company_industry",
            "hudai.resources.company_key_term",
            "hudai.resources.company_profile",
            "hudai.resources.conference",
            "hudai.resources.conference_speaker",
            "hudai.resources.domain",
            "hudai.resources.feed",
            "hudai.resources.industry",
            "hudai.resources.key_term",
            "hudai.resources.model_score",
            "hudai.resources.organization",
            "hudai.resources.person",
            "hudai.resources.person_key_term",
            "hudai.resources.person_quote",
            "hudai.resources.source",
            "hudai.resources.stock_alert",
            "hudai.resources.system_event",
            "hudai.resources.system_task",
            "hudai.resources.text_corpus",
            "hudai.resources.tweets",
            "hudai.resources.user",
            "hudai.resources.user_company",
            "hudai.resources.user_company_group",
            "hudai.resources.user_contact",
            "hudai.resources.user_digest_subscription",
            "hudai.resources.user_key_term",
            "hudai.resources.user_person",
            "hudai.resources.user_source",
            "hudai.resources.user_template",
            "hudai.resources.video",
            "hudai.resources.video_company",
            "hudai.resources.video_person"
        ],
        "version": "2.49.0"
    },
    "huddle": {
        "cmdline": [],
        "modules": [
            "huddle",
            "huddle.manage",
            "huddle.repo",
            "huddle.util",
            "huddle.version"
        ],
        "version": "0.1.5"
    },
    "hudjango": {
        "cmdline": [],
        "modules": [
            "hudjango",
            "hudjango.auth",
            "hudjango.auth.backends",
            "hudjango.auth.decorators",
            "hudjango.decorators",
            "hudjango.fields",
            "hudjango.fields.couchdbfield",
            "hudjango.fields.defaulting",
            "hudjango.fields.scalingimagefield",
            "hudjango.fields.testdefaulting",
            "hudjango.fields.testscalingimagefield",
            "hudjango.forms",
            "hudjango.management",
            "hudjango.management.commands",
            "hudjango.management.commands.blame",
            "hudjango.management.commands.couchdb-designs",
            "hudjango.management.commands.couchdb-drop",
            "hudjango.management.commands.couchdb-init",
            "hudjango.management.commands.couchdb-validate-documents",
            "hudjango.middleware",
            "hudjango.middleware.clienttrack",
            "hudjango.middleware.testthreadlocals",
            "hudjango.middleware.threadlocals",
            "hudjango.serializers",
            "hudjango.storage",
            "hudjango.storage.CouchDBStorage",
            "hudjango.storage.ImageServerStorage",
            "hudjango.storage.dedupingS3storage",
            "hudjango.templateloaders",
            "hudjango.templateloaders.couchdbloader",
            "hudjango.templatetags",
            "hudjango.templatetags.hudjango",
            "hudjango.validators",
            "tests",
            "tests.regressiontests",
            "tests.regressiontests.auth_backends",
            "tests.regressiontests.auth_backends.models",
            "tests.regressiontests.auth_backends.tests",
            "tests.regressiontests.auth_decorators",
            "tests.regressiontests.auth_decorators.models",
            "tests.regressiontests.auth_decorators.tests",
            "tests.regressiontests.auth_decorators.views",
            "tests.regressiontests.logger",
            "tests.regressiontests.logger.models",
            "tests.regressiontests.logger.tests",
            "tests.regressiontests.serializers",
            "tests.regressiontests.serializers.models",
            "tests.regressiontests.serializers.tests",
            "tests.runtests",
            "tests.settings_tests",
            "tests.urls"
        ],
        "version": "0.95p1"
    },
    "hudsucker": {
        "cmdline": [],
        "modules": [
            "hudsucker",
            "hudsucker._version",
            "hudsucker.industries",
            "hudsucker.proxy"
        ],
        "version": "0.2.1"
    },
    "hue": {
        "cmdline": [],
        "modules": [
            "hue",
            "hue.hue"
        ],
        "version": "0.1.0"
    },
    "hue-cli": {
        "cmdline": [],
        "modules": [
            "hue_cli",
            "hue_cli.cli",
            "hue_cli.command_router",
            "hue_cli.command_types",
            "tests",
            "tests.test_command_types"
        ],
        "version": "0.2.0"
    },
    "hue-plus": {
        "cmdline": [],
        "modules": [
            "hue_plus",
            "hue_plus.hue",
            "hue_plus.hue_gui",
            "hue_plus.hue_ui",
            "hue_plus.picker",
            "hue_plus.previous",
            "hue_plus.webcolors"
        ],
        "version": "1.4.5"
    },
    "hue-py": {
        "cmdline": [],
        "modules": [
            "hue_api",
            "hue_api.exceptions",
            "hue_api.groups",
            "hue_api.hue",
            "hue_api.lights",
            "hue_api.scene",
            "hue_api.state",
            "tests",
            "tests.test_hue"
        ],
        "version": "0.2.1"
    },
    "hue-sensors": {
        "cmdline": [],
        "modules": [
            "hue_sensors"
        ],
        "version": "1.2"
    },
    "hue-sensors-phue": {
        "cmdline": [],
        "modules": [
            "hue_sensors_phue"
        ],
        "version": "1.0"
    },
    "hue-snek-channel42": {
        "cmdline": [],
        "modules": [
            "hue_snek_pkg",
            "hue_snek_pkg.hue_snek"
        ],
        "version": "0.3"
    },
    "hue7jip8": {
        "cmdline": [],
        "modules": [
            "\u532f\u5165",
            "\u532f\u5165.apps",
            "\u532f\u5165.management",
            "\u532f\u5165.management.commands",
            "\u532f\u5165.management.commands.SuiSiann",
            "\u532f\u5165.management.commands.TGB\u901a\u8a0a",
            "\u532f\u5165.management.commands.icorpus\u81fa\u83ef\u5e73\u884c\u65b0\u805e\u8a9e\u6599\u5eab",
            "\u532f\u5165.management.commands.itaigi",
            "\u532f\u5165.management.commands.\u53f0\u7063\u690d\u7269\u540d\u5f59",
            "\u532f\u5165.management.commands.\u53f0\u7063\u767d\u8a71\u57fa\u790e\u8a9e\u53e5",
            "\u532f\u5165.management.commands.\u53f0\u83ef\u8fad\u5178",
            "\u532f\u5165.management.commands.\u53f0\u8a9e\u6587\u6578\u4f4d\u5178\u85cf\u8cc7\u6599\u5eab",
            "\u532f\u5165.management.commands.\u53f0\u8a9e\u6587\u8a9e\u6599\u5eab\u8490\u96c6\u53ca\u8a9e\u6599\u5eab\u70ba\u672c\u53f0\u8a9e\u66f8\u9762\u8a9e\u97f3\u7bc0\u8a5e\u983b\u7d71\u8a08",
            "\u532f\u5165.management.commands.\u6559\u5178\u4f8b\u53e5",
            "\u532f\u5165.management.commands.\u6559\u5178\u8a5e\u689d",
            "\u532f\u5165.management.commands.\u6559\u5178\u97f3\u6a940\u4e0b\u8f09",
            "\u532f\u5165.management.commands.\u6559\u5178\u97f3\u6a941\u8f49\u6a94",
            "\u532f\u5165.management.commands.\u6559\u5178\u97f3\u6a942\u532f\u5165",
            "\u532f\u5165.management.commands.\u6559\u80b2\u90e8\u81fa\u7063\u95a9\u5357\u8a9e\u5b57\u8a5e\u983b\u8abf\u67e5\u5de5\u4f5c",
            "\u532f\u5165.management.commands.\u65b0\u5317\u5e02900\u4f8b\u53e5",
            "\u532f\u5165.management.commands.\u65cf\u8a9e\u8fad\u51780\u4e0b\u8f09",
            "\u532f\u5165.management.commands.\u65cf\u8a9e\u8fad\u51781\u8f49\u6a94",
            "\u532f\u5165.management.commands.\u65cf\u8a9e\u8fad\u51782\u532f\u5165",
            "\u532f\u5165.management.commands.\u767d\u8a71\u5b57\u6587\u737b\u9928",
            "\u532f\u5165.management.commands.\u8a5e\u5f59\u5206\u7d1a",
            "\u532f\u5165.migrations",
            "\u532f\u5165.\u53f0\u83ef\u8fad\u5178",
            "\u532f\u5165.\u6307\u4ee4",
            "\u532f\u5165.\u6559\u5178",
            "\u532f\u5165.\u65cf\u8a9e\u8fad\u5178"
        ],
        "version": "0.1.2"
    },
    "hueber": {
        "cmdline": [],
        "modules": [
            "hueber",
            "hueber.api",
            "hueber.api._common",
            "hueber.api.config",
            "hueber.api.groups",
            "hueber.api.lights",
            "hueber.lib",
            "hueber.lib.statebuilder"
        ],
        "version": "0.1.1"
    },
    "huechanger": {
        "cmdline": [],
        "modules": [
            "huechanger"
        ],
        "version": "0.1"
    },
    "huecli": {
        "cmdline": [],
        "modules": [
            "hue_modules",
            "hue_modules.color",
            "hue_modules.color.main",
            "hue_modules.list",
            "hue_modules.list.main",
            "hue_modules.switch",
            "hue_modules.switch.main",
            "hue_modules.util",
            "hue_modules.util.bridge"
        ],
        "version": "2.0.1"
    },
    "huectl": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "huefs": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1a2"
    },
    "huehue": {
        "cmdline": [],
        "modules": [
            "huehue",
            "huehue.bridge",
            "huehue.bridge.discover",
            "huehue.cli",
            "huehue.config",
            "huehue.huehue",
            "huehue.models",
            "huehue.utils"
        ],
        "version": "0.1.0"
    },
    "huelights": {
        "cmdline": [],
        "modules": [
            "huelights",
            "huelights.bridge",
            "huelights.light",
            "huelights.utils"
        ],
        "version": "0.1.1"
    },
    "huelsenbeck": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hueman": {
        "cmdline": [],
        "modules": [
            "hueman",
            "hueman.entities",
            "hueman.groups",
            "hueman.plugins",
            "hueman.test",
            "hueman.test.test_bridge",
            "hueman.test.test_hueman",
            "hueman.test.test_light",
            "hueman.test.test_plugins",
            "hueman.util"
        ],
        "version": "dev"
    },
    "huemans": {
        "cmdline": [],
        "modules": [
            "huemans",
            "huemans.bridge",
            "huemans.group",
            "huemans.light",
            "huemans.sensor",
            "huemans.utils",
            "huemans.utils.condition",
            "huemans.utils.time_pattern"
        ],
        "version": "0.1"
    },
    "huemidi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "huepy": {
        "cmdline": [],
        "modules": [
            "huepy",
            "huepy.huepy"
        ],
        "version": "1.2.1"
    },
    "hues": {
        "cmdline": [],
        "modules": [
            "hues",
            "hues.colortable",
            "hues.console",
            "hues.dpda",
            "hues.huestr"
        ],
        "version": "0.2.2"
    },
    "huesdk": {
        "cmdline": [],
        "modules": [
            "huesdk",
            "huesdk.huesdk",
            "testing",
            "testing.testing"
        ],
        "version": "0.3"
    },
    "huest": {
        "cmdline": [],
        "modules": [
            "huest",
            "huest.hounsfield_estimate"
        ],
        "version": "0.2.0"
    },
    "huetainment-api": {
        "cmdline": [],
        "modules": [
            "huetainment_api",
            "huetainment_api.api",
            "huetainment_api.api.settings_api",
            "huetainment_api.api.states_api",
            "huetainment_api.api_client",
            "huetainment_api.configuration",
            "huetainment_api.models",
            "huetainment_api.models.setting_capture_device",
            "huetainment_api.models.setting_capture_interval",
            "huetainment_api.models.setting_capture_margins",
            "huetainment_api.models.setting_capture_multiplier",
            "huetainment_api.models.setting_capture_video_standard",
            "huetainment_api.models.setting_center_slowness",
            "huetainment_api.models.setting_chroma_boost",
            "huetainment_api.models.setting_color_bias",
            "huetainment_api.models.setting_luma_boost",
            "huetainment_api.models.setting_max_luminance",
            "huetainment_api.models.setting_min_luminance",
            "huetainment_api.models.setting_side_slowness",
            "huetainment_api.models.setting_syncing_group",
            "huetainment_api.models.settings",
            "huetainment_api.models.state_capturing",
            "huetainment_api.models.state_syncing",
            "huetainment_api.models.states",
            "huetainment_api.rest",
            "test",
            "test.test_setting_capture_device",
            "test.test_setting_capture_interval",
            "test.test_setting_capture_margins",
            "test.test_setting_capture_multiplier",
            "test.test_setting_capture_video_standard",
            "test.test_setting_center_slowness",
            "test.test_setting_chroma_boost",
            "test.test_setting_color_bias",
            "test.test_setting_luma_boost",
            "test.test_setting_max_luminance",
            "test.test_setting_min_luminance",
            "test.test_setting_side_slowness",
            "test.test_setting_syncing_group",
            "test.test_settings",
            "test.test_settings_api",
            "test.test_state_capturing",
            "test.test_state_syncing",
            "test.test_states",
            "test.test_states_api"
        ],
        "version": "1.0.0"
    },
    "huetui": {
        "cmdline": [
            "huetui"
        ],
        "modules": [],
        "version": "0.3"
    },
    "huey": {
        "cmdline": [
            "huey_consumer.py"
        ],
        "modules": [
            "huey",
            "huey.api",
            "huey.bin",
            "huey.bin.huey_consumer",
            "huey.constants",
            "huey.consumer",
            "huey.consumer_options",
            "huey.contrib",
            "huey.contrib.djhuey",
            "huey.contrib.djhuey.management",
            "huey.contrib.djhuey.management.commands",
            "huey.contrib.djhuey.management.commands.run_huey",
            "huey.contrib.djhuey.models",
            "huey.contrib.kyototycoon",
            "huey.contrib.mini",
            "huey.contrib.sql_huey",
            "huey.exceptions",
            "huey.registry",
            "huey.serializer",
            "huey.signals",
            "huey.storage",
            "huey.tests",
            "huey.tests.base",
            "huey.tests.test_api",
            "huey.tests.test_consumer",
            "huey.tests.test_crontab",
            "huey.tests.test_immediate",
            "huey.tests.test_kt_huey",
            "huey.tests.test_priority",
            "huey.tests.test_registry",
            "huey.tests.test_serializer",
            "huey.tests.test_signals",
            "huey.tests.test_sql_huey",
            "huey.tests.test_storage",
            "huey.tests.test_utils",
            "huey.tests.test_wrappers",
            "huey.utils"
        ],
        "version": "2.3.0"
    },
    "huey-drf-api": {
        "cmdline": [],
        "modules": [
            "hueydrfapi",
            "hueydrfapi.api",
            "hueydrfapi.apps",
            "hueydrfapi.exceptions",
            "hueydrfapi.models",
            "hueydrfapi.serializers",
            "hueydrfapi.urls",
            "hueydrfapi.views"
        ],
        "version": "0.2.0"
    },
    "huey-mini-patch": {
        "cmdline": [
            "huey_consumer.py"
        ],
        "modules": [
            "huey",
            "huey.api",
            "huey.bin",
            "huey.bin.huey_consumer",
            "huey.constants",
            "huey.consumer",
            "huey.consumer_options",
            "huey.contrib",
            "huey.contrib.djhuey",
            "huey.contrib.djhuey.management",
            "huey.contrib.djhuey.management.commands",
            "huey.contrib.djhuey.management.commands.run_huey",
            "huey.contrib.djhuey.models",
            "huey.contrib.kyototycoon",
            "huey.contrib.mini",
            "huey.contrib.sql_huey",
            "huey.exceptions",
            "huey.registry",
            "huey.serializer",
            "huey.signals",
            "huey.storage",
            "huey.tests",
            "huey.tests.base",
            "huey.tests.test_api",
            "huey.tests.test_consumer",
            "huey.tests.test_crontab",
            "huey.tests.test_immediate",
            "huey.tests.test_kt_huey",
            "huey.tests.test_priority",
            "huey.tests.test_registry",
            "huey.tests.test_serializer",
            "huey.tests.test_signals",
            "huey.tests.test_sql_huey",
            "huey.tests.test_storage",
            "huey.tests.test_utils",
            "huey.tests.test_wrappers",
            "huey.utils"
        ],
        "version": "2.2.1"
    },
    "huey-pg": {
        "cmdline": [],
        "modules": [
            "huey_pg"
        ],
        "version": "0.1.0"
    },
    "hueyx": {
        "cmdline": [],
        "modules": [
            "example",
            "example.run_long_running_task",
            "example.run_task",
            "example.tasks",
            "huey_worker",
            "huey_worker.settings",
            "huey_worker.urls",
            "huey_worker.wsgi",
            "hueyx",
            "hueyx.consumer",
            "hueyx.management",
            "hueyx.management.commands",
            "hueyx.management.commands.run_hueyx",
            "hueyx.models",
            "hueyx.queues",
            "hueyx.redis_huey",
            "hueyx.settings_reader",
            "hueyx.tests",
            "hueyx.tests.test_heartbeat",
            "hueyx.tests.test_queues",
            "hueyx.tests.test_settings_reader"
        ],
        "version": "1.0.0"
    },
    "hufflepuff": {
        "cmdline": [],
        "modules": [
            "hufflepuff",
            "hufflepuff.cli",
            "hufflepuff.comms",
            "hufflepuff.minigraph",
            "hufflepuff.search",
            "hufflepuff.strategies"
        ],
        "version": "1.4"
    },
    "huffman": {
        "cmdline": [],
        "modules": [
            "huffman",
            "huffman.heapqo",
            "huffman.huffman"
        ],
        "version": "0.1.2"
    },
    "huffman-compression": {
        "cmdline": [],
        "modules": [
            "huffman_compression.binary_tree",
            "huffman_compression.decode",
            "huffman_compression.encode"
        ],
        "version": "0.1"
    },
    "huffman-encoder-decoder": {
        "cmdline": [],
        "modules": [
            "huffman",
            "huffman.huff"
        ],
        "version": "0.3"
    },
    "huffman-tree": {
        "cmdline": [],
        "modules": [
            "huffman_tree",
            "huffman_tree.huffman"
        ],
        "version": "0.0.1"
    },
    "huflickrhelper": {
        "cmdline": [],
        "modules": [
            "HUFlickrHelper",
            "HUFlickrHelper.image_helper",
            "HUFlickrHelper.text_helper"
        ],
        "version": "0.1"
    },
    "hug": {
        "cmdline": [],
        "modules": [
            "hug",
            "hug._empty",
            "hug._version",
            "hug.api",
            "hug.authentication",
            "hug.decorators",
            "hug.defaults",
            "hug.development_runner",
            "hug.directives",
            "hug.exceptions",
            "hug.format",
            "hug.input_format",
            "hug.interface",
            "hug.introspect",
            "hug.json_module",
            "hug.middleware",
            "hug.output_format",
            "hug.redirect",
            "hug.route",
            "hug.routing",
            "hug.store",
            "hug.test",
            "hug.this",
            "hug.transform",
            "hug.types",
            "hug.use",
            "hug.validate"
        ],
        "version": "2.6.1"
    },
    "hug-authentication-ldap": {
        "cmdline": [],
        "modules": [
            "hug_authentication_ldap",
            "hug_authentication_ldap._version",
            "hug_authentication_ldap.authentication"
        ],
        "version": "1.0.3"
    },
    "hug-explainable": {
        "cmdline": [],
        "modules": [
            "hug_explainable",
            "hug_explainable._version",
            "hug_explainable.context_manager",
            "hug_explainable.directive",
            "hug_explainable.middleware",
            "hug_explainable.type"
        ],
        "version": "0.2.1"
    },
    "hug-kt": {
        "cmdline": [],
        "modules": [
            "hug",
            "hug._async",
            "hug._empty",
            "hug._version",
            "hug.api",
            "hug.authentication",
            "hug.decorators",
            "hug.defaults",
            "hug.development_runner",
            "hug.directives",
            "hug.exceptions",
            "hug.format",
            "hug.input_format",
            "hug.interface",
            "hug.introspect",
            "hug.json_module",
            "hug.middleware",
            "hug.output_format",
            "hug.redirect",
            "hug.route",
            "hug.routing",
            "hug.store",
            "hug.test",
            "hug.transform",
            "hug.types",
            "hug.use",
            "hug.validate"
        ],
        "version": "2.4.0"
    },
    "hug-middleware-cors": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hug-peewee": {
        "cmdline": [],
        "modules": [
            "hug_peewee",
            "hug_peewee._version",
            "hug_peewee.connection"
        ],
        "version": "0.0.2"
    },
    "hug-peewee-connect": {
        "cmdline": [],
        "modules": [
            "hug_peewee_connect",
            "hug_peewee_connect.manage",
            "tests",
            "tests.test_manage"
        ],
        "version": "0.0.2"
    },
    "hug-raven": {
        "cmdline": [],
        "modules": [
            "hug_raven",
            "hug_raven.hug_raven"
        ],
        "version": "1.1.0"
    },
    "hug-sentry": {
        "cmdline": [],
        "modules": [
            "hug_sentry",
            "hug_sentry.sentry_handler"
        ],
        "version": "0.0.2"
    },
    "hug-store-redis": {
        "cmdline": [],
        "modules": [
            "hug_store_redis",
            "hug_store_redis.redis_store"
        ],
        "version": "1.0.0"
    },
    "hug-yaml": {
        "cmdline": [],
        "modules": [
            "hug_yaml",
            "hug_yaml._version",
            "hug_yaml.input_format",
            "hug_yaml.not_found",
            "hug_yaml.output_format"
        ],
        "version": "1.1.0"
    },
    "hugdatafast": {
        "cmdline": [],
        "modules": [
            "hugdatafast",
            "hugdatafast.fastai",
            "hugdatafast.transform"
        ],
        "version": "1.0.0"
    },
    "huge": {
        "cmdline": [],
        "modules": [
            "huge"
        ],
        "version": "0.1.1"
    },
    "hugin": {
        "cmdline": [],
        "modules": [
            "hugin",
            "hugin._data",
            "hugin.engine",
            "hugin.engine.core",
            "hugin.engine.keras",
            "hugin.engine.scene",
            "hugin.io",
            "hugin.io.dataset_loaders",
            "hugin.io.loader",
            "hugin.models",
            "hugin.models.unet",
            "hugin.models.unet.unetv14",
            "hugin.postprocessing",
            "hugin.postprocessing.pixelwise",
            "hugin.preprocessing",
            "hugin.preprocessing.augmentation",
            "hugin.preprocessing.nadir_tools",
            "hugin.preprocessing.rasterize",
            "hugin.preprocessing.standardize",
            "hugin.tools",
            "hugin.tools.IOUtils",
            "hugin.tools.callbacks",
            "hugin.tools.cli",
            "hugin.tools.loss",
            "hugin.tools.predict",
            "hugin.tools.train",
            "hugin.tools.utils",
            "hugin.tools.vectorize"
        ],
        "version": "0.2.2"
    },
    "huginn": {
        "cmdline": [],
        "modules": [
            "huginn",
            "huginn.LDA",
            "huginn.anomalies",
            "huginn.articles",
            "huginn.exceptions",
            "huginn.huginn",
            "huginn.interest",
            "huginn.summarizer",
            "huginn.visualize"
        ],
        "version": "0.1.4"
    },
    "hugo": {
        "cmdline": [],
        "modules": [
            "hugo",
            "hugo.client",
            "hugo.constants",
            "hugo.context",
            "hugo.exceptions",
            "hugo.ext",
            "hugo.handler",
            "hugo.middleware"
        ],
        "version": "0.5.2"
    },
    "hugo-deployer-git": {
        "cmdline": [],
        "modules": [
            "hugo_deployer_git",
            "hugo_deployer_git.check_env",
            "hugo_deployer_git.cli",
            "hugo_deployer_git.deployer",
            "hugo_deployer_git.fsutil"
        ],
        "version": "0.0.4"
    },
    "hugo-jupyter": {
        "cmdline": [],
        "modules": [
            "hugo_jupyter",
            "hugo_jupyter.cli",
            "hugo_jupyter.hugo_jupyter",
            "tests",
            "tests.test_hugo_jupyter"
        ],
        "version": "1.0.2"
    },
    "hugon": {
        "cmdline": [],
        "modules": [
            "hugon",
            "hugon.hugon"
        ],
        "version": "0.1.7"
    },
    "hugophotoswipe": {
        "cmdline": [],
        "modules": [
            "hugophotoswipe",
            "hugophotoswipe.__version__",
            "hugophotoswipe.album",
            "hugophotoswipe.conf",
            "hugophotoswipe.hugophotoswipe",
            "hugophotoswipe.photo",
            "hugophotoswipe.ui",
            "hugophotoswipe.utils"
        ],
        "version": "0.2.5"
    },
    "hugpee": {
        "cmdline": [],
        "modules": [
            "hugpee"
        ],
        "version": "0.1.1"
    },
    "hugs": {
        "cmdline": [],
        "modules": [
            "hugs",
            "hugs.errors",
            "hugs.expression",
            "hugs.manager",
            "hugs.parser",
            "hugs.repository"
        ],
        "version": "0.2.0"
    },
    "huh": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "huhu": {
        "cmdline": [],
        "modules": [
            "huhu"
        ],
        "version": "0.0.5"
    },
    "huhuseg": {
        "cmdline": [],
        "modules": [
            "huhu_seg",
            "huhu_seg.bow",
            "huhu_seg.clustering",
            "huhu_seg.hmm",
            "huhu_seg.hotspot",
            "huhu_seg.segmentor",
            "huhu_seg.simhash",
            "huhu_seg.textrank",
            "huhu_seg.tfidf",
            "huhu_seg.topic",
            "huhu_seg.trie"
        ],
        "version": "0.6.1"
    },
    "huigege-page-views": {
        "cmdline": [],
        "modules": [
            "huigege_page_views",
            "huigege_page_views.page_views"
        ],
        "version": "0.0.2"
    },
    "huihe": {
        "cmdline": [],
        "modules": [
            "huihe",
            "huihe.device",
            "huihe.device.HuiHeClimate",
            "huihe.device.HuiHeIR",
            "huihe.device.HuiHeMediaPlayer",
            "huihe.device.base",
            "huihe.device.climateConst",
            "huihe.device.const",
            "huihe.device.constant",
            "huihe.device.get_huihe_device",
            "huihe.device.huiHeLight",
            "huihe.device.huiHeSwitch",
            "huihe.device.iFutureHomeapi",
            "huihe.device.log",
            "huihe.device.mediaPlayerConst"
        ],
        "version": "0.0.4"
    },
    "huiji": {
        "cmdline": [],
        "modules": [
            "huiji",
            "huiji.example_pkg_honyitop"
        ],
        "version": "0.0.1"
    },
    "huik-module": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli._version_",
            "cli.dictionary",
            "cli.folder",
            "cli.ok",
            "cli.plugins",
            "cli.toollist",
            "cli.utils",
            "mymodule",
            "mymodule.NUPACK",
            "mymodule.NUPACK._NUPACK",
            "mymodule.RNAstructure",
            "mymodule.RNAstructure.Error_handling",
            "mymodule.RNAstructure.RNAstructure_wrap",
            "mymodule.RNAstructure._RNAstructure",
            "mymodule.ViennaRNA",
            "mymodule.align",
            "mymodule.mypath",
            "mymodule.rotate_logger",
            "mymodule.seq",
            "mymodule.tool"
        ],
        "version": "0.1.19"
    },
    "huimages": {
        "cmdline": [],
        "modules": [
            "demo",
            "demo.imageserver_import",
            "demo.imagestuff",
            "demo.manage",
            "demo.middleware",
            "demo.settings",
            "demo.urls",
            "huimages",
            "huimages.imagebrowser",
            "huimages.imagebrowser.forms",
            "huimages.imagebrowser.models",
            "huimages.imagebrowser.urls",
            "huimages.imagebrowser.views",
            "huimages.server"
        ],
        "version": "2.2p3"
    },
    "huiqanghui-mllib": {
        "cmdline": [],
        "modules": [
            "huiqanghui_mllib",
            "huiqanghui_mllib._nbdev",
            "huiqanghui_mllib.huqianghuiNN"
        ],
        "version": "0.0.1"
    },
    "huisarts": {
        "cmdline": [],
        "modules": [
            "huisarts",
            "huisarts.big",
            "huisarts.genees",
            "huisarts.strafrecht",
            "huisarts.version"
        ],
        "version": "28"
    },
    "huivo-thrift": {
        "cmdline": [],
        "modules": [
            "huivo",
            "huivo.thrift",
            "huivo.thrift.client",
            "huivo.thrift.client.Client",
            "huivo.thrift.client.ClientFactory",
            "huivo.thrift.client.Configurator",
            "huivo.thrift.client.ConnectionPool",
            "huivo.thrift.client.ReadWriteLock",
            "huivo.thrift.client.ZkRegistry",
            "huivo.thrift.common",
            "huivo.thrift.common.constants",
            "huivo.thrift.common.ttypes",
            "huivo.thrift.test",
            "huivo.thrift.test.Test",
            "huivo.thrift.test.TestService",
            "huivo.thrift.test.constants",
            "huivo.thrift.test.ttypes",
            "test",
            "test.constants",
            "test.ttypes"
        ],
        "version": "1.0.0"
    },
    "hula": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0.0"
    },
    "hulihutu": {
        "cmdline": [],
        "modules": [
            "hulihutu",
            "hulihutu.generate_game",
            "hulihutu.mdp",
            "hulihutu.network",
            "hulihutu.testBoard",
            "hulihutu.test_tictac",
            "hulihutu.tictac"
        ],
        "version": "1.0.5"
    },
    "hulk": {
        "cmdline": [],
        "modules": [
            "hulk",
            "hulk.application",
            "hulk.exceptions",
            "hulk.handler",
            "hulk.monkey",
            "hulk.name",
            "hulk.utils",
            "hulk.version"
        ],
        "version": "0.2.2"
    },
    "hulkbuster": {
        "cmdline": [],
        "modules": [
            "hulkbuster"
        ],
        "version": "0.4"
    },
    "hulkify": {
        "cmdline": [],
        "modules": [
            "hulkify",
            "hulkify.hulkify"
        ],
        "version": "0.0.9"
    },
    "hullo-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hulu": {
        "cmdline": [],
        "modules": [
            "hulu",
            "hulu.api",
            "hulu.compat",
            "hulu.exceptions"
        ],
        "version": "0.1.0"
    },
    "hulu-subs-downloader": {
        "cmdline": [],
        "modules": [],
        "version": "4.1"
    },
    "humaan-cli": {
        "cmdline": [],
        "modules": [
            "humaan",
            "humaan.cli",
            "humaan.commands",
            "humaan.commands.base",
            "humaan.commands.hello"
        ],
        "version": "0.1.0a0"
    },
    "humailib": {
        "cmdline": [],
        "modules": [
            "humailib",
            "humailib.bayesian_helper",
            "humailib.clang_webhook_helper",
            "humailib.cloud_tools",
            "humailib.copernica",
            "humailib.customer_id",
            "humailib.data_processing",
            "humailib.email_features",
            "humailib.functions_gherkin",
            "humailib.ga_tools",
            "humailib.graph_based_prod_recommend",
            "humailib.hasher",
            "humailib.hasher_no_deps",
            "humailib.helpers",
            "humailib.info",
            "humailib.lifecycle",
            "humailib.lstm",
            "humailib.magento",
            "humailib.mailchimp",
            "humailib.model_eval",
            "humailib.pipeline_builder",
            "humailib.product_category_model",
            "humailib.product_launch_customer_ranking",
            "humailib.proportional_hazards_model",
            "humailib.ranking_model",
            "humailib.sequential_model",
            "humailib.sequential_model_helper",
            "humailib.transaction_features",
            "humailib.transformers",
            "humailib.utils"
        ],
        "version": "1.0.3"
    },
    "human": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "human-body-prior": {
        "cmdline": [],
        "modules": [
            "human_body_prior",
            "human_body_prior.body_model",
            "human_body_prior.body_model.body_model",
            "human_body_prior.data",
            "human_body_prior.data.dataloader",
            "human_body_prior.data.prepare_data",
            "human_body_prior.evaluate",
            "human_body_prior.evaluate.run_testset",
            "human_body_prior.mesh",
            "human_body_prior.mesh.mesh_viewer",
            "human_body_prior.mesh.sphere",
            "human_body_prior.tools",
            "human_body_prior.tools.model_loader",
            "human_body_prior.tools.omni_tools",
            "human_body_prior.tools.training_tools",
            "human_body_prior.tools.visualization_tools",
            "human_body_prior.train",
            "human_body_prior.train.vposer_single_trainer",
            "human_body_prior.train.vposer_smpl",
            "human_body_prior.tutorials",
            "human_body_prior.tutorials.sample_body_pose"
        ],
        "version": "0.8.5.0"
    },
    "human-curl": {
        "cmdline": [],
        "modules": [
            "human_curl",
            "human_curl.async",
            "human_curl.auth",
            "human_curl.compat",
            "human_curl.core",
            "human_curl.exceptions",
            "human_curl.methods",
            "human_curl.utils"
        ],
        "version": "0.2.0"
    },
    "human-dates": {
        "cmdline": [],
        "modules": [
            "human_dates"
        ],
        "version": "0.2.0"
    },
    "human-dates2": {
        "cmdline": [],
        "modules": [
            "human_dates",
            "human_dates.from_human",
            "human_dates.to_human",
            "human_dates.utils"
        ],
        "version": "1.0.2"
    },
    "human-datetimedelta": {
        "cmdline": [],
        "modules": [
            "human"
        ],
        "version": "0.3.1"
    },
    "human-friendly-pedantic-timedelta": {
        "cmdline": [],
        "modules": [
            "pedantic_timedelta"
        ],
        "version": "2.0.11"
    },
    "human-id": {
        "cmdline": [],
        "modules": [
            "human_id",
            "human_id.cli",
            "human_id.dictionary"
        ],
        "version": "0.1.0.post3"
    },
    "human-json": {
        "cmdline": [],
        "modules": [
            "human_json",
            "human_json.transformer"
        ],
        "version": "0.3.0"
    },
    "human-learn": {
        "cmdline": [],
        "modules": [
            "hulearn",
            "hulearn.classification",
            "hulearn.classification.functionclassifier",
            "hulearn.classification.interactiveclassifier",
            "hulearn.common",
            "hulearn.datasets",
            "hulearn.experimental",
            "hulearn.experimental.interactive",
            "hulearn.outlier",
            "hulearn.outlier.functionoutlier",
            "hulearn.outlier.interactiveoutlier",
            "hulearn.preprocessing",
            "hulearn.preprocessing.interactivepreprocessor",
            "hulearn.preprocessing.pipetransformer",
            "hulearn.regression",
            "hulearn.regression.functionregressor",
            "hulearn.this",
            "tests",
            "tests.conftest",
            "tests.test_docstrings"
        ],
        "version": "0.2.0"
    },
    "human-name-compare": {
        "cmdline": [
            "hn-compare"
        ],
        "modules": [
            "human_name_compare"
        ],
        "version": "0.3.6"
    },
    "human-names": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "human-parsing": {
        "cmdline": [],
        "modules": [
            "human_parsing",
            "human_parsing.segmentation"
        ],
        "version": "0.0.4"
    },
    "human-readable-ids": {
        "cmdline": [],
        "modules": [
            "human_readable_ids",
            "human_readable_ids.adjectives",
            "human_readable_ids.nouns",
            "human_readable_ids.random_word"
        ],
        "version": "0.1.3"
    },
    "human-security": {
        "cmdline": [],
        "modules": [],
        "version": "0.5"
    },
    "human-time": {
        "cmdline": [],
        "modules": [
            "src",
            "src.app",
            "src.cli_client",
            "src.clock",
            "src.request_handler",
            "test",
            "test.fixtures",
            "test.test_api",
            "test.test_cli"
        ],
        "version": "1.0.6"
    },
    "human-time-formatter": {
        "cmdline": [],
        "modules": [
            "human_time_formatter",
            "human_time_formatter._version",
            "human_time_formatter.human_time_formatter"
        ],
        "version": "1.0.0.6"
    },
    "human-word-indexes": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.three_word_index",
            "human_word_indexes",
            "human_word_indexes.word_index_filter",
            "human_word_indexes.word_index_generator"
        ],
        "version": "1.2"
    },
    "humanactivity": {
        "cmdline": [],
        "modules": [
            "humanactivity",
            "humanactivity.humanActivity"
        ],
        "version": "0.2.1"
    },
    "humanactivityrecognition": {
        "cmdline": [],
        "modules": [
            "HumanActivityRecognition"
        ],
        "version": "0.1"
    },
    "humanapi": {
        "cmdline": [],
        "modules": [
            "humanapi",
            "humanapi.api"
        ],
        "version": "0.1.10"
    },
    "humanbingo": {
        "cmdline": [],
        "modules": [
            "humanbingo",
            "humanbingo.application",
            "humanbingo.cli",
            "humanbingo.humanbingo",
            "humanbingo.models",
            "humanbingo.parsers",
            "humanbingo.writers"
        ],
        "version": "3.0.1"
    },
    "humancheck": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "humancrypto": {
        "cmdline": [],
        "modules": [
            "humancrypto",
            "humancrypto.cli",
            "humancrypto.error",
            "humancrypto.pki",
            "humancrypto.pwutil",
            "humancrypto.randomutil",
            "humancrypto.y2016",
            "humancrypto.y44bc",
            "humancrypto.yearutil"
        ],
        "version": "0.5.0"
    },
    "humandate": {
        "cmdline": [],
        "modules": [
            "humandate",
            "humandate.index",
            "humandate.tests"
        ],
        "version": "0.8"
    },
    "humanencoding": {
        "cmdline": [],
        "modules": [
            "humanencoding",
            "humanencoding.encoder",
            "humanencoding.wordlist_v1",
            "tests",
            "tests.test_encoder"
        ],
        "version": "0.2"
    },
    "humanframework": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.2"
    },
    "humanfriendly": {
        "cmdline": [],
        "modules": [
            "humanfriendly",
            "humanfriendly.case",
            "humanfriendly.cli",
            "humanfriendly.compat",
            "humanfriendly.decorators",
            "humanfriendly.deprecation",
            "humanfriendly.prompts",
            "humanfriendly.sphinx",
            "humanfriendly.tables",
            "humanfriendly.terminal",
            "humanfriendly.terminal.html",
            "humanfriendly.terminal.spinners",
            "humanfriendly.testing",
            "humanfriendly.tests",
            "humanfriendly.text",
            "humanfriendly.usage"
        ],
        "version": "8.2"
    },
    "humanfuture": {
        "cmdline": [],
        "modules": [
            "humanfuture"
        ],
        "version": "0.2"
    },
    "humanhash": {
        "cmdline": [],
        "modules": [
            "humanhash"
        ],
        "version": "0.0.1"
    },
    "humanhash3": {
        "cmdline": [],
        "modules": [
            "humanhash"
        ],
        "version": "0.0.6"
    },
    "humanice": {
        "cmdline": [],
        "modules": [
            "humanice",
            "humanice.filesize",
            "humanice.i18n",
            "humanice.number",
            "humanice.time"
        ],
        "version": "1.1.0"
    },
    "humanity": {
        "cmdline": [],
        "modules": [
            "humanity",
            "humanity.humd",
            "humanity.indexes",
            "humanity.main"
        ],
        "version": "3.0.10"
    },
    "humanizationdb": {
        "cmdline": [],
        "modules": [
            "humanizationdb",
            "humanizationdb.core",
            "humanizationdb.core.db",
            "humanizationdb.core.db_entry",
            "humanizationdb.utils",
            "humanizationdb.utils.exceptions"
        ],
        "version": "0.0.2"
    },
    "humanize": {
        "cmdline": [],
        "modules": [
            "humanize",
            "humanize.filesize",
            "humanize.i18n",
            "humanize.number",
            "humanize.time"
        ],
        "version": "3.0.1"
    },
    "humanize-flask": {
        "cmdline": [],
        "modules": [
            "flask_humanize",
            "flask_humanize.compat"
        ],
        "version": "0.2.0"
    },
    "humanize-gcode": {
        "cmdline": [],
        "modules": [
            "humanize_gcode",
            "humanize_gcode.humanize_gcode"
        ],
        "version": "0.0.4"
    },
    "humanize-k": {
        "cmdline": [],
        "modules": [
            "humanize",
            "humanize.compat",
            "humanize.filesize",
            "humanize.i18n",
            "humanize.number",
            "humanize.time"
        ],
        "version": "0.5.2"
    },
    "humanizer": {
        "cmdline": [],
        "modules": [
            "humanizer",
            "humanizer.base",
            "humanizer.bytesize",
            "humanizer.duration",
            "humanizer.tests",
            "humanizer.tests.helper",
            "humanizer.tests.test_bytesize",
            "humanizer.tests.test_duration"
        ],
        "version": "0.1.0"
    },
    "humanizer-portugues": {
        "cmdline": [],
        "modules": [
            "humanizer_portugues",
            "humanizer_portugues.filesize",
            "humanizer_portugues.list",
            "humanizer_portugues.number",
            "humanizer_portugues.time"
        ],
        "version": "2.3.4"
    },
    "humanleague": {
        "cmdline": [],
        "modules": [],
        "version": "2.1.1"
    },
    "humann": {
        "cmdline": [],
        "modules": [
            "humann",
            "humann.check",
            "humann.config",
            "humann.humann",
            "humann.quantify",
            "humann.quantify.MinPath12hmp",
            "humann.quantify.chi2cdf",
            "humann.quantify.families",
            "humann.quantify.modules",
            "humann.quantify.xipe",
            "humann.search",
            "humann.search.blastx_coverage",
            "humann.search.nucleotide",
            "humann.search.pick_frames",
            "humann.search.prescreen",
            "humann.search.translated",
            "humann.store",
            "humann.tests",
            "humann.tests.advanced_tests_blastx_coverage",
            "humann.tests.advanced_tests_nucleotide_search",
            "humann.tests.advanced_tests_quantify_families",
            "humann.tests.advanced_tests_quantify_modules",
            "humann.tests.advanced_tests_store",
            "humann.tests.advanced_tests_translated_search",
            "humann.tests.advanced_tests_utilities",
            "humann.tests.basic_tests_nucleotide_search",
            "humann.tests.basic_tests_quantify_modules",
            "humann.tests.basic_tests_store",
            "humann.tests.basic_tests_utilities",
            "humann.tests.cfg",
            "humann.tests.functional_tests_biom_humann",
            "humann.tests.functional_tests_biom_tools",
            "humann.tests.functional_tests_humann",
            "humann.tests.functional_tests_tools",
            "humann.tests.humann_test",
            "humann.tests.utils",
            "humann.tools",
            "humann.tools.build_custom_database",
            "humann.tools.genefamilies_genus_level",
            "humann.tools.humann_associate",
            "humann.tools.humann_barplot",
            "humann.tools.humann_benchmark",
            "humann.tools.humann_config",
            "humann.tools.humann_databases",
            "humann.tools.humann_expand_results_taxonomy",
            "humann.tools.humann_humann1_kegg",
            "humann.tools.infer_taxonomy",
            "humann.tools.join_tables",
            "humann.tools.merge_abundance",
            "humann.tools.reduce_table",
            "humann.tools.regroup_table",
            "humann.tools.rename_table",
            "humann.tools.renorm_table",
            "humann.tools.rna_dna_norm",
            "humann.tools.split_stratified_table",
            "humann.tools.split_table",
            "humann.tools.strain_profiler",
            "humann.tools.util",
            "humann.utilities"
        ],
        "version": "3.0.0a4"
    },
    "humann2": {
        "cmdline": [],
        "modules": [
            "humann2",
            "humann2.check",
            "humann2.config",
            "humann2.humann2",
            "humann2.quantify",
            "humann2.quantify.MinPath12hmp",
            "humann2.quantify.chi2cdf",
            "humann2.quantify.families",
            "humann2.quantify.modules",
            "humann2.quantify.xipe",
            "humann2.search",
            "humann2.search.blastx_coverage",
            "humann2.search.nucleotide",
            "humann2.search.pick_frames",
            "humann2.search.prescreen",
            "humann2.search.translated",
            "humann2.store",
            "humann2.tests",
            "humann2.tests.advanced_tests_blastx_coverage",
            "humann2.tests.advanced_tests_nucleotide_search",
            "humann2.tests.advanced_tests_quantify_families",
            "humann2.tests.advanced_tests_quantify_modules",
            "humann2.tests.advanced_tests_store",
            "humann2.tests.advanced_tests_translated_search",
            "humann2.tests.advanced_tests_utilities",
            "humann2.tests.basic_tests_nucleotide_search",
            "humann2.tests.basic_tests_quantify_modules",
            "humann2.tests.basic_tests_store",
            "humann2.tests.basic_tests_utilities",
            "humann2.tests.cfg",
            "humann2.tests.functional_tests_biom_humann2",
            "humann2.tests.functional_tests_biom_tools",
            "humann2.tests.functional_tests_humann2",
            "humann2.tests.functional_tests_tools",
            "humann2.tests.humann2_test",
            "humann2.tests.utils",
            "humann2.tools",
            "humann2.tools.build_custom_database",
            "humann2.tools.genefamilies_genus_level",
            "humann2.tools.humann2_associate",
            "humann2.tools.humann2_barplot",
            "humann2.tools.humann2_benchmark",
            "humann2.tools.humann2_config",
            "humann2.tools.humann2_databases",
            "humann2.tools.humann2_expand_results_taxonomy",
            "humann2.tools.humann2_humann1_kegg",
            "humann2.tools.infer_taxonomy",
            "humann2.tools.join_tables",
            "humann2.tools.merge_abundance",
            "humann2.tools.reduce_table",
            "humann2.tools.regroup_table",
            "humann2.tools.rename_table",
            "humann2.tools.renorm_table",
            "humann2.tools.rna_dna_norm",
            "humann2.tools.split_stratified_table",
            "humann2.tools.split_table",
            "humann2.tools.strain_profiler",
            "humann2.tools.util",
            "humann2.utilities"
        ],
        "version": "2.8.2"
    },
    "humannotator": {
        "cmdline": [],
        "modules": [
            "humannotator",
            "humannotator.config",
            "humannotator.core",
            "humannotator.core.annotations",
            "humannotator.core.data",
            "humannotator.core.tasks",
            "humannotator.display",
            "humannotator.display.components",
            "humannotator.display.display",
            "humannotator.display.elements",
            "humannotator.humannotator",
            "humannotator.interface",
            "humannotator.utils",
            "humannotator.version",
            "tests",
            "tests.core",
            "tests.core.test_annotations",
            "tests.core.test_tasks",
            "tests.display",
            "tests.display.test_display",
            "tests.display.test_elements",
            "tests.test_config"
        ],
        "version": "0.0.3"
    },
    "humanrandom": {
        "cmdline": [],
        "modules": [
            "HumanRandom"
        ],
        "version": "1.1b"
    },
    "humanreadable": {
        "cmdline": [],
        "modules": [
            "humanreadable",
            "humanreadable.__version__",
            "humanreadable._base",
            "humanreadable._persec",
            "humanreadable._time",
            "humanreadable.error"
        ],
        "version": "0.1.0"
    },
    "humanreadablebinaryconverter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "humans": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "humansize": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "humansort": {
        "cmdline": [],
        "modules": [
            "humansort",
            "humansort.sort"
        ],
        "version": "0.1"
    },
    "humanspider": {
        "cmdline": [],
        "modules": [
            "app",
            "core",
            "core.Page",
            "core.Request",
            "core.Site",
            "core.Spider",
            "core.common",
            "core.downloader",
            "core.downloader.Downloader",
            "core.downloader.DriverDownloader",
            "core.downloader.HttpDownloader",
            "core.pipeline",
            "core.pipeline.Pipeline",
            "core.processor",
            "core.processor.PageProcessor",
            "core.scheduler",
            "core.scheduler.DuplicateRemovedScheduler",
            "core.scheduler.QueueScheduler",
            "core.scheduler.Scheduler",
            "core.utils"
        ],
        "version": "0.0.1"
    },
    "humanstxt": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "humantechsys": {
        "cmdline": [],
        "modules": [
            "humantechsys",
            "humantechsys.food"
        ],
        "version": "1.3"
    },
    "humantime": {
        "cmdline": [],
        "modules": [
            "HumanTime",
            "HumanTime.Durations",
            "HumanTime.Holidays",
            "HumanTime.Numbers",
            "HumanTime.Time",
            "HumanTime.Utility",
            "HumanTime.Weekdays"
        ],
        "version": "0.1.7"
    },
    "humax": {
        "cmdline": [],
        "modules": [
            "humax",
            "humax.__version__",
            "humax.cli",
            "humax.humax"
        ],
        "version": "0.1.0"
    },
    "humba": {
        "cmdline": [],
        "modules": [
            "humba",
            "humba.core",
            "humba.jits"
        ],
        "version": "0.1a5"
    },
    "humble": {
        "cmdline": [],
        "modules": [
            "humble",
            "humble.cli",
            "humble.core"
        ],
        "version": "0.1.2"
    },
    "humble-tools": {
        "cmdline": [],
        "modules": [
            "humble_tools",
            "humble_tools.cli",
            "humble_tools_make"
        ],
        "version": "0.2"
    },
    "humblebee": {
        "cmdline": [],
        "modules": [
            "humblebee",
            "humblebee.bing",
            "humblebee.cfg",
            "humblebee.cli",
            "humblebee.dbguy",
            "humblebee.dirscanner",
            "humblebee.entrypoint",
            "humblebee.importer",
            "humblebee.logger",
            "humblebee.mediainfo",
            "humblebee.parser",
            "humblebee.quality",
            "humblebee.renaming",
            "humblebee.texceptions",
            "humblebee.tvdbwrapper",
            "humblebee.tvregexes",
            "humblebee.unrarman",
            "humblebee.util",
            "humblebee.virtualfs"
        ],
        "version": "1.101"
    },
    "humblebundle": {
        "cmdline": [],
        "modules": [
            "humblebundle",
            "humblebundle.client",
            "humblebundle.decorators",
            "humblebundle.exceptions",
            "humblebundle.handlers",
            "humblebundle.models"
        ],
        "version": "0.1.1"
    },
    "humblebundle-downloader": {
        "cmdline": [],
        "modules": [
            "humblebundle_downloader",
            "humblebundle_downloader._version",
            "humblebundle_downloader.cli",
            "humblebundle_downloader.download_library"
        ],
        "version": "0.3.2"
    },
    "humbleclient": {
        "cmdline": [
            "humblec"
        ],
        "modules": [
            "humble"
        ],
        "version": "0.1.3"
    },
    "humbledb": {
        "cmdline": [],
        "modules": [
            "humbledb",
            "humbledb._version",
            "humbledb.array",
            "humbledb.cursor",
            "humbledb.document",
            "humbledb.errors",
            "humbledb.helpers",
            "humbledb.index",
            "humbledb.maps",
            "humbledb.mongo",
            "humbledb.report"
        ],
        "version": "6.0.0"
    },
    "humblelion": {
        "cmdline": [],
        "modules": [
            "humblelion",
            "humblelion.httpbot",
            "humblelion.humblelion"
        ],
        "version": "0.0.2"
    },
    "humblematch": {
        "cmdline": [],
        "modules": [
            "humblematch",
            "humblematch.runtests",
            "humblematch.wrap_obj"
        ],
        "version": "0.1.1"
    },
    "humblesetuptools": {
        "cmdline": [],
        "modules": [
            "_markerlib",
            "_markerlib.markers",
            "setuptools",
            "setuptools.archive_util",
            "setuptools.command",
            "setuptools.command.alias",
            "setuptools.command.bdist_egg",
            "setuptools.command.bdist_rpm",
            "setuptools.command.bdist_wininst",
            "setuptools.command.build_ext",
            "setuptools.command.build_py",
            "setuptools.command.develop",
            "setuptools.command.easy_install",
            "setuptools.command.egg_info",
            "setuptools.command.install",
            "setuptools.command.install_egg_info",
            "setuptools.command.install_lib",
            "setuptools.command.install_scripts",
            "setuptools.command.register",
            "setuptools.command.rotate",
            "setuptools.command.saveopts",
            "setuptools.command.sdist",
            "setuptools.command.setopt",
            "setuptools.command.test",
            "setuptools.command.upload_docs",
            "setuptools.compat",
            "setuptools.depends",
            "setuptools.dist",
            "setuptools.extension",
            "setuptools.lib2to3_ex",
            "setuptools.package_index",
            "setuptools.py26compat",
            "setuptools.py27compat",
            "setuptools.py31compat",
            "setuptools.sandbox",
            "setuptools.script template",
            "setuptools.script template (dev)",
            "setuptools.site-patch",
            "setuptools.ssl_support",
            "setuptools.svn_utils",
            "setuptools.tests",
            "setuptools.tests.doctest",
            "setuptools.tests.environment",
            "setuptools.tests.py26compat",
            "setuptools.tests.script-with-bom",
            "setuptools.tests.server",
            "setuptools.tests.test_bdist_egg",
            "setuptools.tests.test_build_ext",
            "setuptools.tests.test_develop",
            "setuptools.tests.test_dist_info",
            "setuptools.tests.test_easy_install",
            "setuptools.tests.test_egg_info",
            "setuptools.tests.test_find_packages",
            "setuptools.tests.test_markerlib",
            "setuptools.tests.test_packageindex",
            "setuptools.tests.test_resources",
            "setuptools.tests.test_sandbox",
            "setuptools.tests.test_sdist",
            "setuptools.tests.test_svn",
            "setuptools.tests.test_test",
            "setuptools.tests.test_upload_docs",
            "setuptools.version"
        ],
        "version": "3.4.5"
    },
    "humblewx": {
        "cmdline": [],
        "modules": [
            "humblewx"
        ],
        "version": "0.2.1"
    },
    "humboldt-cmfbibliographyat": {
        "cmdline": [],
        "modules": [
            "humboldt",
            "humboldt.cmfbibliographyat",
            "humboldt.cmfbibliographyat.adapters",
            "humboldt.cmfbibliographyat.adapters.adapters",
            "humboldt.cmfbibliographyat.bibliographicitemextensions",
            "humboldt.cmfbibliographyat.browser",
            "humboldt.cmfbibliographyat.browser.sfx",
            "humboldt.cmfbibliographyat.config",
            "humboldt.cmfbibliographyat.content",
            "humboldt.cmfbibliographyat.interfaces",
            "humboldt.cmfbibliographyat.patches",
            "humboldt.cmfbibliographyat.portlets",
            "humboldt.cmfbibliographyat.setuphandlers",
            "humboldt.cmfbibliographyat.tests",
            "humboldt.cmfbibliographyat.tests.base",
            "humboldt.cmfbibliographyat.tests.test_doctest"
        ],
        "version": "0.2.5.3"
    },
    "humbug-forensics": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "humdrum": {
        "cmdline": [],
        "modules": [
            "cli",
            "helper"
        ],
        "version": "0.7"
    },
    "hume": {
        "cmdline": [],
        "modules": [
            "hume.decorators",
            "hume.decorators.profilers"
        ],
        "version": "0.3.20b0"
    },
    "humed": {
        "cmdline": [],
        "modules": [
            "hume",
            "humeconfig",
            "humed",
            "humetools"
        ],
        "version": "1.2.28"
    },
    "humfrey": {
        "cmdline": [],
        "modules": [
            "humfrey",
            "humfrey.analytics",
            "humfrey.analytics.context_processors",
            "humfrey.archive",
            "humfrey.archive.models",
            "humfrey.archive.tasks",
            "humfrey.base",
            "humfrey.base.middleware",
            "humfrey.base.models",
            "humfrey.ckan",
            "humfrey.ckan.models",
            "humfrey.ckan.tasks",
            "humfrey.desc",
            "humfrey.desc.models",
            "humfrey.desc.query",
            "humfrey.desc.rdf_processors",
            "humfrey.desc.templatetags",
            "humfrey.desc.templatetags.humfrey_desc",
            "humfrey.desc.tests",
            "humfrey.desc.urls",
            "humfrey.desc.views",
            "humfrey.elasticsearch",
            "humfrey.elasticsearch.admin",
            "humfrey.elasticsearch.forms",
            "humfrey.elasticsearch.models",
            "humfrey.elasticsearch.tasks",
            "humfrey.elasticsearch.templatetags",
            "humfrey.elasticsearch.templatetags.humfrey_elasticsearch",
            "humfrey.elasticsearch.tests",
            "humfrey.elasticsearch.update",
            "humfrey.elasticsearch.views",
            "humfrey.graphviz",
            "humfrey.graphviz.models",
            "humfrey.graphviz.templatetags",
            "humfrey.graphviz.templatetags.humfrey_graphviz",
            "humfrey.graphviz.views",
            "humfrey.linkeddata",
            "humfrey.linkeddata.mappingconf",
            "humfrey.linkeddata.models",
            "humfrey.linkeddata.resource",
            "humfrey.linkeddata.tests",
            "humfrey.linkeddata.uri",
            "humfrey.linkeddata.views",
            "humfrey.manage",
            "humfrey.manage.views",
            "humfrey.misc",
            "humfrey.misc.models",
            "humfrey.misc.views",
            "humfrey.pingback",
            "humfrey.pingback.admin",
            "humfrey.pingback.extraction",
            "humfrey.pingback.middleware",
            "humfrey.pingback.models",
            "humfrey.pingback.rdf_processors",
            "humfrey.pingback.tasks",
            "humfrey.pingback.urls",
            "humfrey.pingback.urls.admin",
            "humfrey.pingback.urls.public",
            "humfrey.pingback.views",
            "humfrey.results",
            "humfrey.results.models",
            "humfrey.results.tests",
            "humfrey.results.views",
            "humfrey.results.views.feed",
            "humfrey.results.views.geospatial",
            "humfrey.results.views.spreadsheet",
            "humfrey.results.views.standard",
            "humfrey.settings",
            "humfrey.settings.common",
            "humfrey.sparql",
            "humfrey.sparql.admin",
            "humfrey.sparql.endpoint",
            "humfrey.sparql.forms",
            "humfrey.sparql.models",
            "humfrey.sparql.results",
            "humfrey.sparql.urls",
            "humfrey.sparql.urls.admin",
            "humfrey.sparql.urls.simple",
            "humfrey.sparql.utils",
            "humfrey.sparql.views",
            "humfrey.sparql.views.admin",
            "humfrey.sparql.views.core",
            "humfrey.sparql.views.misc",
            "humfrey.streaming",
            "humfrey.streaming.models",
            "humfrey.streaming.ntriples",
            "humfrey.streaming.rdfxml",
            "humfrey.streaming.srx",
            "humfrey.streaming.tests",
            "humfrey.tests",
            "humfrey.tests.hosts",
            "humfrey.tests.runners",
            "humfrey.tests.settings",
            "humfrey.tests.stubs",
            "humfrey.tests.urls",
            "humfrey.tests.urls.empty",
            "humfrey.tests.urls.main",
            "humfrey.thumbnail",
            "humfrey.thumbnail.encoding",
            "humfrey.thumbnail.templatetags",
            "humfrey.thumbnail.templatetags.humfrey_thumbnail",
            "humfrey.thumbnail.views",
            "humfrey.update",
            "humfrey.update.admin",
            "humfrey.update.forms",
            "humfrey.update.models",
            "humfrey.update.tasks",
            "humfrey.update.tasks.retrieve",
            "humfrey.update.tasks.run_dependents",
            "humfrey.update.tasks.update",
            "humfrey.update.templatetags",
            "humfrey.update.templatetags.humfrey_update",
            "humfrey.update.tests",
            "humfrey.update.tests.spreadsheet",
            "humfrey.update.transform",
            "humfrey.update.transform.base",
            "humfrey.update.transform.construct",
            "humfrey.update.transform.html",
            "humfrey.update.transform.local_file",
            "humfrey.update.transform.normalize",
            "humfrey.update.transform.retrieve",
            "humfrey.update.transform.sparql_filter",
            "humfrey.update.transform.spreadsheet",
            "humfrey.update.transform.union",
            "humfrey.update.transform.upload",
            "humfrey.update.transform.vocabularies",
            "humfrey.update.transform.xslt",
            "humfrey.update.uploader",
            "humfrey.update.urls",
            "humfrey.update.utils",
            "humfrey.update.views",
            "humfrey.urls",
            "humfrey.utils",
            "humfrey.utils.namespaces",
            "humfrey.utils.query",
            "humfrey.utils.views"
        ],
        "version": "0.3.9"
    },
    "humhelpers": {
        "cmdline": [],
        "modules": [
            "humhelpers",
            "humhelpers.for_asyncio",
            "humhelpers.for_collections",
            "humhelpers.for_import",
            "humhelpers.for_paths",
            "humhelpers.for_strings",
            "humhelpers.test",
            "humhelpers.test____for_paths",
            "humhelpers.test____for_strings"
        ],
        "version": "0.1.4"
    },
    "humilis": {
        "cmdline": [],
        "modules": [
            "humilis",
            "humilis.cli",
            "humilis.config",
            "humilis.environment",
            "humilis.exceptions",
            "humilis.j2",
            "humilis.layer",
            "humilis.reference",
            "humilis.utils",
            "tests"
        ],
        "version": "1.5.10"
    },
    "humilis-asg": {
        "cmdline": [],
        "modules": [
            "humilis_asg",
            "humilis_asg.plugin"
        ],
        "version": "0.5.0"
    },
    "humilis-batch": {
        "cmdline": [],
        "modules": [
            "humilis_batch",
            "humilis_batch.plugin"
        ],
        "version": "0.1.4"
    },
    "humilis-batch-job": {
        "cmdline": [],
        "modules": [
            "humilis_batch_job",
            "humilis_batch_job.plugin"
        ],
        "version": "0.3.0"
    },
    "humilis-decrypt": {
        "cmdline": [],
        "modules": [
            "humilis_decrypt",
            "humilis_decrypt.lambda_function",
            "humilis_decrypt.lambda_function.handler",
            "humilis_decrypt.lambda_function.setup",
            "humilis_decrypt.plugin"
        ],
        "version": "0.0.2"
    },
    "humilis-dynamodb": {
        "cmdline": [],
        "modules": [
            "humilis_dynamodb",
            "humilis_dynamodb.config",
            "humilis_dynamodb.humilis_dynamodb",
            "humilis_dynamodb.plugin"
        ],
        "version": "0.5.0"
    },
    "humilis-elasticache": {
        "cmdline": [],
        "modules": [
            "humilis_elasticache",
            "humilis_elasticache.plugin"
        ],
        "version": "0.0.5"
    },
    "humilis-es": {
        "cmdline": [],
        "modules": [
            "humilis_es",
            "humilis_es.plugin"
        ],
        "version": "0.0.6"
    },
    "humilis-firehose": {
        "cmdline": [],
        "modules": [
            "humilis_firehose",
            "humilis_firehose.plugin"
        ],
        "version": "0.2.9"
    },
    "humilis-kinesis-mapper": {
        "cmdline": [],
        "modules": [
            "humilis_kinesis_mapper",
            "humilis_kinesis_mapper.lambda_function",
            "humilis_kinesis_mapper.lambda_function.handler",
            "humilis_kinesis_mapper.lambda_function.handler.processor",
            "humilis_kinesis_mapper.lambda_function.handler.processor.core",
            "humilis_kinesis_mapper.lambda_function.handler.processor.exceptions",
            "humilis_kinesis_mapper.lambda_function.handler.processor.main",
            "humilis_kinesis_mapper.lambda_function.setup",
            "humilis_kinesis_mapper.plugin"
        ],
        "version": "0.1.1"
    },
    "humilis-kinesis-processor": {
        "cmdline": [],
        "modules": [
            "humilis_kinesis_processor",
            "humilis_kinesis_processor.lambda_function",
            "humilis_kinesis_processor.lambda_function.handler",
            "humilis_kinesis_processor.lambda_function.handler.processor",
            "humilis_kinesis_processor.lambda_function.setup",
            "humilis_kinesis_processor.plugin"
        ],
        "version": "1.3.7"
    },
    "humilis-kinesis-proxy": {
        "cmdline": [],
        "modules": [
            "humilis_kinesis_proxy",
            "humilis_kinesis_proxy.plugin"
        ],
        "version": "0.2.6"
    },
    "humilis-kms": {
        "cmdline": [],
        "modules": [
            "humilis_kms",
            "humilis_kms.plugin"
        ],
        "version": "0.0.3"
    },
    "humilis-microservice": {
        "cmdline": [],
        "modules": [
            "humilis_microservice",
            "humilis_microservice.lambda_function",
            "humilis_microservice.lambda_function.handler",
            "humilis_microservice.lambda_function.setup",
            "humilis_microservice.plugin"
        ],
        "version": "0.4.0"
    },
    "humilis-push-processor": {
        "cmdline": [],
        "modules": [
            "humilis_push_processor",
            "humilis_push_processor.lambda_function",
            "humilis_push_processor.lambda_function.handler",
            "humilis_push_processor.lambda_function.handler.processor",
            "humilis_push_processor.lambda_function.setup",
            "humilis_push_processor.plugin"
        ],
        "version": "0.0.10"
    },
    "humilis-redshift": {
        "cmdline": [],
        "modules": [
            "humilis_redshift",
            "humilis_redshift.plugin"
        ],
        "version": "0.0.9"
    },
    "humilis-sam": {
        "cmdline": [],
        "modules": [
            "humilis_sam",
            "humilis_sam.lambda_function",
            "humilis_sam.lambda_function.handler",
            "humilis_sam.lambda_function.setup",
            "humilis_sam.plugin"
        ],
        "version": "0.1.3"
    },
    "humilis-secrets-vault": {
        "cmdline": [],
        "modules": [
            "humilis_secrets_vault",
            "humilis_secrets_vault.metadata"
        ],
        "version": "0.2.4"
    },
    "humilis-security": {
        "cmdline": [],
        "modules": [
            "humilis_security",
            "humilis_security.plugin"
        ],
        "version": "0.0.5"
    },
    "humilis-stream-gtw": {
        "cmdline": [],
        "modules": [
            "humilis_stream_gtw",
            "humilis_stream_gtw.plugin"
        ],
        "version": "1.1.1"
    },
    "humilis-streams": {
        "cmdline": [],
        "modules": [
            "humilis_streams",
            "humilis_streams.metadata"
        ],
        "version": "0.0.7"
    },
    "humilis-vpc": {
        "cmdline": [],
        "modules": [
            "humilis_vpc",
            "humilis_vpc.plugin"
        ],
        "version": "0.5.0"
    },
    "humioapi": {
        "cmdline": [],
        "modules": [
            "humioapi",
            "humioapi.api",
            "humioapi.exceptions",
            "humioapi.loadenv",
            "humioapi.logsetup",
            "humioapi.queryjob",
            "humioapi.timeseries",
            "humioapi.utils"
        ],
        "version": "0.6.1"
    },
    "humiocli": {
        "cmdline": [],
        "modules": [
            "humiocli",
            "humiocli.cli",
            "humiocli.prettyxml",
            "humiocli.utils"
        ],
        "version": "0.7.3"
    },
    "humiolib": {
        "cmdline": [],
        "modules": [
            "humiolib",
            "humiolib.HumioClient",
            "humiolib.HumioExceptions",
            "humiolib.QueryJob",
            "humiolib.WebCaller",
            "humiolib.cli"
        ],
        "version": "0.2.2"
    },
    "huml": {
        "cmdline": [],
        "modules": [
            "huml"
        ],
        "version": "0.2"
    },
    "hummer": {
        "cmdline": [],
        "modules": [
            "hummer",
            "hummer.downloader",
            "hummer.downloader.async",
            "hummer.downloader.base",
            "hummer.filter",
            "hummer.pipeline",
            "hummer.pipeline.base",
            "hummer.scheduler",
            "hummer.scheduler.base",
            "hummer.scheduler.queue",
            "hummer.scheduler.redis",
            "hummer.setting",
            "hummer.spider",
            "hummer.spider.base",
            "hummer.spider.crawl",
            "hummer.spider.simple",
            "hummer.utils",
            "hummer.utils.call"
        ],
        "version": "0.0.1"
    },
    "hummingbird": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hummingbird-ml": {
        "cmdline": [],
        "modules": [
            "hummingbird",
            "hummingbird.ml",
            "hummingbird.ml._container",
            "hummingbird.ml._parse",
            "hummingbird.ml._topology",
            "hummingbird.ml._utils",
            "hummingbird.ml.convert",
            "hummingbird.ml.exceptions",
            "hummingbird.ml.operator_converters",
            "hummingbird.ml.operator_converters._array_feature_extractor_implementations",
            "hummingbird.ml.operator_converters._base_operator",
            "hummingbird.ml.operator_converters._decomposition_implementations",
            "hummingbird.ml.operator_converters._discretizer_implementations",
            "hummingbird.ml.operator_converters._gbdt_commons",
            "hummingbird.ml.operator_converters._linear_implementations",
            "hummingbird.ml.operator_converters._mlp_implementations",
            "hummingbird.ml.operator_converters._nb_implementations",
            "hummingbird.ml.operator_converters._normalizer_implementations",
            "hummingbird.ml.operator_converters._one_hot_encoder_implementations",
            "hummingbird.ml.operator_converters._scaler_implementations",
            "hummingbird.ml.operator_converters._tree_commons",
            "hummingbird.ml.operator_converters._tree_implementations",
            "hummingbird.ml.operator_converters.constants",
            "hummingbird.ml.operator_converters.lightgbm",
            "hummingbird.ml.operator_converters.onnx",
            "hummingbird.ml.operator_converters.onnx.array_feature_extractor",
            "hummingbird.ml.operator_converters.onnx.linear",
            "hummingbird.ml.operator_converters.onnx.normalizer",
            "hummingbird.ml.operator_converters.onnx.one_hot_encoder",
            "hummingbird.ml.operator_converters.onnx.onnx_operator",
            "hummingbird.ml.operator_converters.onnx.scaler",
            "hummingbird.ml.operator_converters.onnx.tree_ensemble",
            "hummingbird.ml.operator_converters.sklearn",
            "hummingbird.ml.operator_converters.sklearn.array_feature_extractor",
            "hummingbird.ml.operator_converters.sklearn.decision_tree",
            "hummingbird.ml.operator_converters.sklearn.decomposition",
            "hummingbird.ml.operator_converters.sklearn.discretizer",
            "hummingbird.ml.operator_converters.sklearn.gbdt",
            "hummingbird.ml.operator_converters.sklearn.iforest",
            "hummingbird.ml.operator_converters.sklearn.imputer",
            "hummingbird.ml.operator_converters.sklearn.linear",
            "hummingbird.ml.operator_converters.sklearn.mlp",
            "hummingbird.ml.operator_converters.sklearn.nb",
            "hummingbird.ml.operator_converters.sklearn.normalizer",
            "hummingbird.ml.operator_converters.sklearn.one_hot_encoder",
            "hummingbird.ml.operator_converters.sklearn.pipeline",
            "hummingbird.ml.operator_converters.sklearn.poly_features",
            "hummingbird.ml.operator_converters.sklearn.scaler",
            "hummingbird.ml.operator_converters.sklearn.sv",
            "hummingbird.ml.operator_converters.xgb",
            "hummingbird.ml.supported"
        ],
        "version": "0.0.6"
    },
    "hummingsim": {
        "cmdline": [],
        "modules": [
            "hummingsim",
            "hummingsim.backtest",
            "hummingsim.backtest.market_config",
            "hummingsim.backtest.wallet_data",
            "hummingsim.model",
            "hummingsim.model.asset",
            "hummingsim.model.backtest_account",
            "hummingsim.model.backtest_account_asset",
            "hummingsim.model.market_data",
            "hummingsim.model.market_withdraw_rules",
            "hummingsim.model.sql_connection_manager"
        ],
        "version": "20190724"
    },
    "hummus": {
        "cmdline": [],
        "modules": [
            "hummus",
            "hummus.document",
            "hummus.font",
            "hummus.meta",
            "hummus.stream"
        ],
        "version": "0.3.17"
    },
    "humo": {
        "cmdline": [],
        "modules": [
            "humo",
            "humo.Preprocess",
            "humo.Preprocess.PreProcess",
            "humo.Preprocess._PreProcess",
            "humo.Preprocess.mmt_process_main",
            "humo.Preprocess.mvc_process",
            "humo.Preprocess.processing",
            "humo.Preprocess.processing.MMT_Error_msg",
            "humo.Preprocess.processing.MVCprocess",
            "humo.Preprocess.processing._processor",
            "humo.Preprocess.processing.mmt_processor",
            "humo.Preprocess.processing.processor",
            "humo.Setuptools",
            "humo.Stats",
            "humo.Stats.anova_model",
            "humo.Stats.equalvaliance",
            "humo.Stats.multi_group_comparison",
            "humo.Stats.normality",
            "humo.Stats.read_csv",
            "humo.Stats.statsfig",
            "humo.Stats.statsresult",
            "humo.Stats.two_group_comparison",
            "humo.dataIO",
            "humo.dataIO.IO",
            "humo.dataIO.path",
            "humo.dataIO.processor",
            "humo.dataIO.processor.processor",
            "humo.dataIO.settings",
            "humo.motion",
            "humo.motion.Piano",
            "humo.motion.Piano.figtools",
            "humo.motion.Piano.piano_analysis",
            "humo.motion.Piano.processor",
            "humo.motion.Piano.processor.analysis_section",
            "humo.motion.Piano.processor.analysis_section2",
            "humo.motion.Piano.processor.dividing",
            "humo.motion.Piano.processor.figure",
            "humo.motion.Piano.processor.normalizing",
            "humo.motion.Piano.tools",
            "humo.motion.main",
            "humo.motion.main.CoreMain",
            "humo.motion.main.CoreMain_fadjust",
            "humo.motion.main.CoreMain_light",
            "humo.motion.main.CoreProcessor",
            "humo.motion.main.CoreProcessor.EMG_proc",
            "humo.motion.main.CoreProcessor.HumoArray",
            "humo.motion.main.CoreProcessor._HumoArray",
            "humo.motion.main.CoreProcessor.checkColumns",
            "humo.motion.main.CoreProcessor.converter",
            "humo.motion.main.CoreProcessor.cvt_AnalysisSection",
            "humo.motion.main.CoreProcessor.differentation",
            "humo.motion.main.CoreProcessor.divHumoArray",
            "humo.motion.main.CoreProcessor.dividingData",
            "humo.motion.main.CoreProcessor.init_values",
            "humo.motion.main.CoreProcessor.interHumoArray",
            "humo.motion.main.CoreProcessor.normHumoArray",
            "humo.motion.main.CoreProcessor.retrivingData",
            "humo.motion.main.DeviceDefault",
            "humo.motion.main.MarkerDefault",
            "humo.motion.main.ModelDefault",
            "humo.tools",
            "humo.tools.dir",
            "humo.tools.linalg",
            "humo.tools.normalization",
            "humo.tools.tool",
            "humo.tools.tools_processor",
            "humo.tools.tools_processor.tools_processor",
            "humo.tools.wave",
            "humo.tools.wrapping",
            "humo.ultrasound",
            "humo.ultrasound.ultrasound"
        ],
        "version": "1.5.0.28"
    },
    "humongolus": {
        "cmdline": [],
        "modules": [
            "humongolus",
            "humongolus.field",
            "humongolus.mongo",
            "humongolus.settings",
            "humongolus.widget",
            "tests",
            "tests.objects",
            "tests.states",
            "tests.test_field"
        ],
        "version": "1.0.7"
    },
    "humongous": {
        "cmdline": [],
        "modules": [
            "humongous",
            "humongous.plugin"
        ],
        "version": "1.3.0"
    },
    "humpack": {
        "cmdline": [],
        "modules": [
            "humpack",
            "humpack._info",
            "humpack.basic_containers",
            "humpack.common",
            "humpack.errors",
            "humpack.farming",
            "humpack.hashing",
            "humpack.packing",
            "humpack.secure",
            "humpack.structured",
            "humpack.transactions",
            "humpack.utils",
            "humpack.wrappers"
        ],
        "version": "0.3.1"
    },
    "humphrey": {
        "cmdline": [],
        "modules": [
            "humphrey",
            "humphrey.humphrey"
        ],
        "version": "0.5.0"
    },
    "humps": {
        "cmdline": [],
        "modules": [
            "humps",
            "humps.camel",
            "tests",
            "tests.test_humps"
        ],
        "version": "0.2.2"
    },
    "humpty": {
        "cmdline": [],
        "modules": [
            "humpty"
        ],
        "version": "0.2.1"
    },
    "humpy": {
        "cmdline": [],
        "modules": [
            "humpy"
        ],
        "version": "0.1.2"
    },
    "humu-download": {
        "cmdline": [],
        "modules": [
            "humu_download",
            "humu_download.main"
        ],
        "version": "1.1.5"
    },
    "humu1us-cipher": {
        "cmdline": [],
        "modules": [
            "cipher",
            "cipher.cipher",
            "cipher.cli",
            "cipher.cli.ciphercmd",
            "cipher.core",
            "cipher.core.derivation",
            "cipher.core.pkcs7",
            "cipher.credentials",
            "cipher.fileio",
            "test",
            "test.test_cipher",
            "test.test_code_format",
            "test.test_credentials",
            "test.test_fileio"
        ],
        "version": "1.0.0"
    },
    "humulus": {
        "cmdline": [],
        "modules": [
            "humulus",
            "humulus._version",
            "humulus.app",
            "humulus.auth",
            "humulus.couch",
            "humulus.filters",
            "humulus.home",
            "humulus.recipes",
            "humulus.styles"
        ],
        "version": "0.1.0"
    },
    "humus": {
        "cmdline": [],
        "modules": [
            "humus",
            "humus.commands",
            "humus.core",
            "humus.exceptions",
            "tests",
            "tests.core_tests"
        ],
        "version": "0.4.3"
    },
    "hunain1pdf": {
        "cmdline": [],
        "modules": [
            "hunain1pdf",
            "hunain1pdf.pdf2image",
            "hunain1pdf.pdf2text"
        ],
        "version": "1.0"
    },
    "hunauchenym-hello": {
        "cmdline": [],
        "modules": [
            "helloPKG",
            "helloPKG.hello"
        ],
        "version": "1.2"
    },
    "hundo": {
        "cmdline": [],
        "modules": [
            "hundo",
            "hundo.blast",
            "hundo.crest_classifier",
            "hundo.fasta",
            "hundo.hundo",
            "hundo.unite_classifier"
        ],
        "version": "1.2.8"
    },
    "hunester": {
        "cmdline": [],
        "modules": [
            "hunester"
        ],
        "version": "1.3.0"
    },
    "hunga-bunga": {
        "cmdline": [],
        "modules": [
            "hunga_bunga",
            "hunga_bunga.classification",
            "hunga_bunga.core",
            "hunga_bunga.params",
            "hunga_bunga.regression"
        ],
        "version": "0.1"
    },
    "hungarian": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "hungarian-algorithm": {
        "cmdline": [],
        "modules": [
            "hungarian_algorithm",
            "hungarian_algorithm.algorithm",
            "hungarian_algorithm.tests",
            "hungarian_algorithm.tests.test_algorithm",
            "hungarian_algorithm.tests.test_graph"
        ],
        "version": "0.1.11"
    },
    "hungry": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hungry-hungry-hippos": {
        "cmdline": [],
        "modules": [
            "hungry_hungry_hippos",
            "hungry_hungry_hippos.hungry_hungry_hippos"
        ],
        "version": "0.7"
    },
    "hunk": {
        "cmdline": [],
        "modules": [
            "hunk",
            "hunk._compat",
            "hunk.production",
            "hunk.resource",
            "hunk.server",
            "tests",
            "tests._compat",
            "tests.test_demo"
        ],
        "version": "0.1.0"
    },
    "hunspell": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.5"
    },
    "hunspell-cffi": {
        "cmdline": [],
        "modules": [
            "hunspell_cffi",
            "hunspell_cffi.build"
        ],
        "version": "1.1.2"
    },
    "hunt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hunter": {
        "cmdline": [],
        "modules": [
            "hunter",
            "hunter._version",
            "hunter.actions",
            "hunter.backports",
            "hunter.backports.inspect",
            "hunter.config",
            "hunter.const",
            "hunter.event",
            "hunter.predicates",
            "hunter.remote",
            "hunter.tracer",
            "hunter.util",
            "hunter.vendor",
            "hunter.vendor._cymem",
            "hunter.vendor._cymem.about",
            "hunter.vendor.colorama",
            "hunter.vendor.colorama.ansi",
            "hunter.vendor.colorama.ansitowin32",
            "hunter.vendor.colorama.initialise",
            "hunter.vendor.colorama.win32",
            "hunter.vendor.colorama.winterm"
        ],
        "version": "3.2.2"
    },
    "hunter-nester": {
        "cmdline": [],
        "modules": [
            "hunter_nester"
        ],
        "version": "1.0.0"
    },
    "hunter-tdb": {
        "cmdline": [],
        "modules": [],
        "version": "0.7.0"
    },
    "hunterk": {
        "cmdline": [],
        "modules": [
            "ContentData",
            "ContentData.IMDbScrape",
            "ContentData.WikiScrape"
        ],
        "version": "0.0.1"
    },
    "hunters": {
        "cmdline": [],
        "modules": [
            "hunters",
            "hunters.atomic",
            "hunters.benchmark",
            "hunters.browser",
            "hunters.chrome",
            "hunters.config",
            "hunters.constant",
            "hunters.cookie",
            "hunters.core",
            "hunters.defaults",
            "hunters.exceptions",
            "hunters.factory",
            "hunters.factory.browser_factory",
            "hunters.pool",
            "hunters.queues",
            "hunters.spider",
            "hunters.util",
            "hunters.util.file_util",
            "hunters.util.htmlutil",
            "hunters.util.socket_util",
            "hunters.util.timerutil",
            "hunters.util.xmlutil",
            "hunters.utils"
        ],
        "version": "2.1.1"
    },
    "huntertray": {
        "cmdline": [],
        "modules": [
            "huntertray",
            "huntertray.appindicator_replacement",
            "huntertray.chrome",
            "huntertray.data",
            "huntertray.firefox",
            "huntertray.producthunt",
            "huntertray.version"
        ],
        "version": "0.0.3"
    },
    "huntflow-py": {
        "cmdline": [],
        "modules": [
            "huntflow_py.api",
            "huntflow_py.client"
        ],
        "version": "0.1.1"
    },
    "huntinghorn": {
        "cmdline": [],
        "modules": [
            "huntinghorn",
            "huntinghorn.constants",
            "huntinghorn.prompt",
            "huntinghorn.utils"
        ],
        "version": "0.3.1"
    },
    "huntlib": {
        "cmdline": [],
        "modules": [
            "huntlib",
            "huntlib.data",
            "huntlib.decorators",
            "huntlib.domaintools",
            "huntlib.elastic",
            "huntlib.exceptions",
            "huntlib.splunk",
            "huntlib.util"
        ],
        "version": "0.5.1"
    },
    "huntsgambit": {
        "cmdline": [],
        "modules": [
            "huntsgambit",
            "huntsgambit.is_pwnified",
            "huntsgambit.utils"
        ],
        "version": "0.3.8"
    },
    "huobi": {
        "cmdline": [],
        "modules": [
            "huobi",
            "huobi.rest",
            "huobi.rest.client",
            "huobi.rest.endpoint",
            "huobi.rest.endpoints",
            "huobi.rest.endpoints.account",
            "huobi.rest.endpoints.common",
            "huobi.rest.endpoints.market",
            "huobi.rest.endpoints.order",
            "huobi.rest.endpoints.query",
            "huobi.rest.error",
            "huobi.rest.helper",
            "huobi.utils",
            "huobi.web_socket"
        ],
        "version": "0.1.12"
    },
    "huobi-client": {
        "cmdline": [
            "huobi"
        ],
        "modules": [
            "huobi_client",
            "huobi_client.client",
            "huobi_client.socketIO_client",
            "huobi_client.socketIO_client.exceptions",
            "huobi_client.socketIO_client.symmetries",
            "huobi_client.socketIO_client.tests",
            "huobi_client.socketIO_client.transports",
            "huobi_client.streaming_client"
        ],
        "version": "0.3.1"
    },
    "huobiapi": {
        "cmdline": [],
        "modules": [
            "huobiApi",
            "huobiApi.config",
            "huobiApi.service",
            "huobiApi.utils"
        ],
        "version": "0.0.5"
    },
    "huobiasyncwebsocket": {
        "cmdline": [],
        "modules": [
            "HuobiAsyncWebsocket",
            "HuobiAsyncWebsocket.HuobiAsyncWebsocket_pro",
            "HuobiAsyncWebsocket.UrlParamsBuilder"
        ],
        "version": "1.1.1"
    },
    "huobitrade": {
        "cmdline": [],
        "modules": [
            "huobitrade",
            "huobitrade.EmailInform",
            "huobitrade.core",
            "huobitrade.datatype",
            "huobitrade.handler",
            "huobitrade.main",
            "huobitrade.service",
            "huobitrade.utils"
        ],
        "version": "0.5.6"
    },
    "huotaihe-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "huoutil": {
        "cmdline": [],
        "modules": [
            "huoutil",
            "huoutil.cache",
            "huoutil.seq",
            "huoutil.uni",
            "huoutil.util"
        ],
        "version": "1.2.4"
    },
    "huoyan-monitoring": {
        "cmdline": [],
        "modules": [
            "HuoYan_monitoring",
            "HuoYan_monitoring.HuoYan_monitoring",
            "HuoYan_monitoring.dash_app",
            "HuoYan_monitoring.utils"
        ],
        "version": "0.1"
    },
    "huoyanlib": {
        "cmdline": [],
        "modules": [
            "huoyanlib",
            "huoyanlib-games",
            "huoyanlib-games.ballballball",
            "huoyanlib-games.hit_the_block",
            "huoyanlib-games.practise_typing",
            "huoyanlib-games.snake",
            "huoyanlib.c",
            "huoyanlib.log_in",
            "huoyanlib.print",
            "huoyanlib.print_logo",
            "huoyanlib.python_plot",
            "huoyanlib.request",
            "huoyanlib.request.get_news",
            "huoyanlib.request.internal_module",
            "huoyanlib.request.xes",
            "huoyanlib.spark_word"
        ],
        "version": "1.5.2"
    },
    "huoyanlib-games": {
        "cmdline": [],
        "modules": [
            "huoyanlib",
            "huoyanlib-games",
            "huoyanlib-games.ballballball",
            "huoyanlib-games.hit_the_block",
            "huoyanlib-games.practise_typing",
            "huoyanlib-games.snake",
            "huoyanlib.c",
            "huoyanlib.help",
            "huoyanlib.log_in",
            "huoyanlib.numpy",
            "huoyanlib.numpy.f",
            "huoyanlib.print",
            "huoyanlib.print_logo",
            "huoyanlib.python_plot",
            "huoyanlib.request",
            "huoyanlib.request.get_news",
            "huoyanlib.request.internal_module",
            "huoyanlib.request.xes",
            "huoyanlib.spark_word"
        ],
        "version": "0.0.1"
    },
    "hup": {
        "cmdline": [],
        "modules": [
            "hup"
        ],
        "version": "0.9.2"
    },
    "hupili": {
        "cmdline": [],
        "modules": [
            "hupili",
            "hupili.mq",
            "hupili.pltime"
        ],
        "version": "0.2.0"
    },
    "hupper": {
        "cmdline": [],
        "modules": [
            "hupper",
            "hupper.cli",
            "hupper.compat",
            "hupper.interfaces",
            "hupper.ipc",
            "hupper.logger",
            "hupper.polling",
            "hupper.reloader",
            "hupper.utils",
            "hupper.watchdog",
            "hupper.watchman",
            "hupper.winapi",
            "hupper.worker"
        ],
        "version": "1.10.2"
    },
    "hupu-api": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hupu-package": {
        "cmdline": [],
        "modules": [
            "hupu_package",
            "hupu_package.aliyun"
        ],
        "version": "1.5"
    },
    "hupuapp": {
        "cmdline": [],
        "modules": [
            "hupu",
            "hupu.api",
            "hupu.api.base",
            "hupu.api.datas",
            "hupu.api.forums",
            "hupu.api.live",
            "hupu.api.logger",
            "hupu.api.login",
            "hupu.api.news",
            "hupu.hupuapp",
            "hupu.hupulivewebsocket",
            "hupu.menus",
            "hupu.menus.BaseMenu",
            "hupu.menus.HupuMenu",
            "hupu.messages",
            "hupu.messages.entries",
            "hupu.messages.messages",
            "hupu.utils",
            "hupu.version"
        ],
        "version": "1.1.0"
    },
    "hupwatch": {
        "cmdline": [],
        "modules": [
            "hupwatch",
            "hupwatch.args_parser",
            "hupwatch.command",
            "hupwatch.service"
        ],
        "version": "0.0.3"
    },
    "hurl": {
        "cmdline": [],
        "modules": [
            "hurl"
        ],
        "version": "2.1"
    },
    "hurler": {
        "cmdline": [],
        "modules": [
            "hurler",
            "hurler.callbacks",
            "hurler.filters",
            "hurler.test_callbacks",
            "hurler.test_example",
            "hurler.test_filters"
        ],
        "version": "0.1.0"
    },
    "hurlers": {
        "cmdline": [],
        "modules": [
            "hurlers",
            "hurlers.atbat",
            "hurlers.game",
            "hurlers.inning",
            "hurlers.pitch",
            "hurlers.player",
            "hurlers.runner",
            "hurlers.tests",
            "hurlers.tests.atbat_test",
            "hurlers.tests.game_test",
            "hurlers.tests.inning_test",
            "hurlers.tests.runner_test",
            "hurlers.tests.server_fixture",
            "hurlers.utils",
            "hurlers.utils.constants",
            "hurlers.utils.csv_utils",
            "hurlers.utils.soup_utils",
            "hurlers.utils.url_utils"
        ],
        "version": "0.1.1"
    },
    "hurm-db": {
        "cmdline": [],
        "modules": [
            "hurm.db",
            "hurm.db.utils"
        ],
        "version": "0.10"
    },
    "hurm-fe": {
        "cmdline": [],
        "modules": [
            "hurm.fe",
            "hurm.fe.i18n"
        ],
        "version": "0.10"
    },
    "huron": {
        "cmdline": [],
        "modules": [
            "huron",
            "huron.blog",
            "huron.blog.admin",
            "huron.blog.feeds",
            "huron.blog.models",
            "huron.blog.sitemaps",
            "huron.blog.tests",
            "huron.blog.urls",
            "huron.blog.views",
            "huron.contact_form",
            "huron.contact_form.forms",
            "huron.contact_form.models",
            "huron.contact_form.tests",
            "huron.contact_form.urls",
            "huron.contact_form.views",
            "huron.menus_manager",
            "huron.menus_manager.admin",
            "huron.menus_manager.admin_views",
            "huron.menus_manager.models",
            "huron.menus_manager.tests",
            "huron.menus_manager.urls",
            "huron.menus_manager.views",
            "huron.pages",
            "huron.pages.admin",
            "huron.pages.models",
            "huron.pages.tests",
            "huron.pages.urls",
            "huron.pages.views",
            "huron.settings",
            "huron.settings.admin",
            "huron.settings.context_processors",
            "huron.settings.models",
            "huron.settings.templatetags",
            "huron.settings.templatetags.settings_custom",
            "huron.settings.tests",
            "huron.settings.views",
            "huron.simple_medias_manager",
            "huron.simple_medias_manager.admin",
            "huron.simple_medias_manager.admin_views",
            "huron.simple_medias_manager.models",
            "huron.simple_medias_manager.tests",
            "huron.simple_medias_manager.urls",
            "huron.simple_medias_manager.views",
            "huron.simple_news",
            "huron.simple_news.admin",
            "huron.simple_news.feeds",
            "huron.simple_news.models",
            "huron.simple_news.sitemaps",
            "huron.simple_news.tests",
            "huron.simple_news.urls",
            "huron.simple_news.views",
            "huron.slider",
            "huron.slider.admin",
            "huron.slider.models",
            "huron.slider.tests",
            "huron.slider.views",
            "huron.utils",
            "huron.utils.admin",
            "huron.utils.image",
            "huron.utils.models",
            "huron.utils.tests",
            "huron.utils.views",
            "tests",
            "tests.manage",
            "tests.settings",
            "tests.urls"
        ],
        "version": "0.5.4"
    },
    "hurr-durr": {
        "cmdline": [],
        "modules": [
            "hurr_durr",
            "hurr_durr.handlers",
            "hurr_durr.watcher"
        ],
        "version": "0.2.2"
    },
    "hurricane": {
        "cmdline": [],
        "modules": [
            "demos",
            "demos.chat",
            "demos.chat.run",
            "demos.chat.settings",
            "demos.spritzer",
            "demos.spritzer.run",
            "demos.spritzer.settings",
            "demos.spritzer.spritzer_handler",
            "hurricane",
            "hurricane.base",
            "hurricane.handlers",
            "hurricane.handlers.base",
            "hurricane.handlers.comet",
            "hurricane.handlers.logging",
            "hurricane.handlers.printing",
            "hurricane.handlers.random_data",
            "hurricane.handlers.twitter",
            "hurricane.managers",
            "hurricane.managers.base",
            "hurricane.managers.ipc",
            "hurricane.managers.stompqueue",
            "hurricane.runner",
            "hurricane.utils"
        ],
        "version": "0.1"
    },
    "hurricane-factory": {
        "cmdline": [
            "hcf"
        ],
        "modules": [
            "hurricane_factory",
            "hurricane_factory.commands"
        ],
        "version": "0.1.5"
    },
    "hurricane-web": {
        "cmdline": [],
        "modules": [],
        "version": "0.1a1"
    },
    "hurricanedns": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "hurriyet": {
        "cmdline": [],
        "modules": [
            "hurriyet",
            "hurriyet.api",
            "hurriyet.article",
            "hurriyet.base",
            "hurriyet.client",
            "hurriyet.column",
            "hurriyet.errors",
            "hurriyet.models",
            "hurriyet.news_photo_gallery",
            "hurriyet.news_video",
            "hurriyet.page",
            "hurriyet.path",
            "hurriyet.search",
            "hurriyet.writer"
        ],
        "version": "1.0.0b1"
    },
    "hurriyetlog": {
        "cmdline": [],
        "modules": [
            "hurriyetlog",
            "hurriyetlog.RabbitMQHandler",
            "hurriyetlog.RabbitMQTornadoHandler",
            "hurriyetlog.hurriyetlog"
        ],
        "version": "0.16"
    },
    "hurry": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "hurry-custom": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.custom",
            "hurry.custom.core",
            "hurry.custom.interfaces",
            "hurry.custom.jsont",
            "hurry.custom.testing",
            "hurry.custom.tests",
            "hurry.custom.zcml"
        ],
        "version": "0.6.2"
    },
    "hurry-datalink": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.datalink",
            "hurry.datalink.tests"
        ],
        "version": "0.1"
    },
    "hurry-datatables": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.datatables",
            "hurry.datatables.tests"
        ],
        "version": "1.7.6"
    },
    "hurry-explorer": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.explorer",
            "hurry.explorer.explorer"
        ],
        "version": "0.2"
    },
    "hurry-extjs": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.extjs",
            "hurry.extjs.extjs",
            "hurry.extjs.tests"
        ],
        "version": "2.2.1"
    },
    "hurry-file": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.file",
            "hurry.file.browser",
            "hurry.file.browser.tests",
            "hurry.file.browser.widget",
            "hurry.file.file",
            "hurry.file.interfaces",
            "hurry.file.schema",
            "hurry.file.tests"
        ],
        "version": "1.2.1"
    },
    "hurry-filesize": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.filesize",
            "hurry.filesize.filesize",
            "hurry.filesize.tests"
        ],
        "version": "0.9"
    },
    "hurry-jgrowl": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jgrowl",
            "hurry.jgrowl.tests"
        ],
        "version": "1.2.4"
    },
    "hurry-jqgrid": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqgrid",
            "hurry.jqgrid.tests"
        ],
        "version": "3.6.2.0"
    },
    "hurry-jqplot": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqplot",
            "hurry.jqplot._lib",
            "hurry.jqplot.prepare",
            "hurry.jqplot.tests"
        ],
        "version": "0.9.7.2"
    },
    "hurry-jquery": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jquery",
            "hurry.jquery._lib",
            "hurry.jquery.prepare",
            "hurry.jquery.tests"
        ],
        "version": "1.4.3.1"
    },
    "hurry-jqueryform": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqueryform",
            "hurry.jqueryform.tests"
        ],
        "version": "2.47.1"
    },
    "hurry-jquerylayout": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jquerylayout",
            "hurry.jquerylayout.tests"
        ],
        "version": "1.2.0.2"
    },
    "hurry-jquerytools": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jquerytools",
            "hurry.jquerytools.prepare",
            "hurry.jquerytools.tests"
        ],
        "version": "1.2.5.1"
    },
    "hurry-jqueryui": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqueryui",
            "hurry.jqueryui._themes",
            "hurry.jqueryui.prepare",
            "hurry.jqueryui.tests"
        ],
        "version": "1.8.5.1"
    },
    "hurry-jqueryutils": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqueryutils",
            "hurry.jqueryutils._lib",
            "hurry.jqueryutils.tests"
        ],
        "version": "0.8.5.1"
    },
    "hurry-jstree": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jstree",
            "hurry.jstree.tests"
        ],
        "version": "1.0rc2.1"
    },
    "hurry-query": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.query",
            "hurry.query.interfaces",
            "hurry.query.query",
            "hurry.query.set",
            "hurry.query.tests",
            "hurry.query.tests.test_doctests",
            "hurry.query.tests.test_query",
            "hurry.query.value"
        ],
        "version": "3.1"
    },
    "hurry-qunit": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.qunit",
            "hurry.qunit._lib",
            "hurry.qunit.tests"
        ],
        "version": "0.5"
    },
    "hurry-raphael": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.raphael",
            "hurry.raphael._lib",
            "hurry.raphael.prepare",
            "hurry.raphael.tests"
        ],
        "version": "1.4.3.2"
    },
    "hurry-resource": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.resource",
            "hurry.resource.core",
            "hurry.resource.interfaces",
            "hurry.resource.tests",
            "hurry.resource.wsgi",
            "hurry.resource.zca"
        ],
        "version": "0.10"
    },
    "hurry-script": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.main",
            "hurry.utils"
        ],
        "version": "0.2"
    },
    "hurry-slimbox": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.slimbox",
            "hurry.slimbox.prepare",
            "hurry.slimbox.tests"
        ],
        "version": "2.03"
    },
    "hurry-tinymce": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.tinymce",
            "hurry.tinymce.download",
            "hurry.tinymce.prepare",
            "hurry.tinymce.tests",
            "hurry.tinymce.tinymce"
        ],
        "version": "3.3.9.4"
    },
    "hurry-workflow": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.workflow",
            "hurry.workflow.interfaces",
            "hurry.workflow.tests",
            "hurry.workflow.tests.test_doctest",
            "hurry.workflow.tests.test_edgecases",
            "hurry.workflow.tests.test_ordering",
            "hurry.workflow.workflow"
        ],
        "version": "3.0.2"
    },
    "hurry-yui": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.yui",
            "hurry.yui.depend",
            "hurry.yui.download",
            "hurry.yui.prepare",
            "hurry.yui.tests",
            "hurry.yui.yui"
        ],
        "version": "2.7.0.1"
    },
    "hurry-zoperesource": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hurry-zopetinymce": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.zopetinymce"
        ],
        "version": "0.1"
    },
    "hurry-zopeyui": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.zopeyui"
        ],
        "version": "0.1"
    },
    "hurryfilesize": {
        "cmdline": [],
        "modules": [
            "hurryfilesize",
            "hurryfilesize.cli"
        ],
        "version": "0.1.1"
    },
    "hurst": {
        "cmdline": [],
        "modules": [
            "hurst"
        ],
        "version": "0.0.5"
    },
    "hurst-fitter": {
        "cmdline": [],
        "modules": [
            "hurst_fitter",
            "hurst_fitter.main"
        ],
        "version": "0.0.5"
    },
    "hurt": {
        "cmdline": [],
        "modules": [
            "hurt",
            "hurt.middleware",
            "hurt.router"
        ],
        "version": "1.0.0"
    },
    "hurumap": {
        "cmdline": [],
        "modules": [
            "census",
            "census.admin",
            "census.context_processors",
            "census.management",
            "census.management.commands",
            "census.management.commands.cache_to_s3",
            "census.management.commands.taxonify_table_metadata",
            "census.models",
            "census.profile",
            "census.templatetags",
            "census.templatetags.comparatives",
            "census.templatetags.lookup",
            "census.templatetags.madlibs",
            "census.templatetags.partition",
            "census.templatetags.sumlevs",
            "census.templatetags.tabletags",
            "census.tests",
            "census.topics",
            "census.urls",
            "census.utils",
            "census.views",
            "hurumap",
            "hurumap.apps",
            "hurumap.context_processors",
            "hurumap.data",
            "hurumap.data.base",
            "hurumap.data.download",
            "hurumap.data.tables",
            "hurumap.data.utils",
            "hurumap.geo",
            "hurumap.middleware",
            "hurumap.migrations",
            "hurumap.migrations.0001_initial",
            "hurumap.migrations.0002_geography_long_name",
            "hurumap.migrations.0003_remove_geography_osm_area_id",
            "hurumap.migrations.0004_auto_20160302_1645",
            "hurumap.models",
            "hurumap.profiles",
            "hurumap.settings",
            "hurumap.templatetags",
            "hurumap.templatetags.jsonify",
            "hurumap.templatetags.stats",
            "hurumap.tests",
            "hurumap.tests.data",
            "hurumap.tests.data.test_utils",
            "hurumap.tests.support",
            "hurumap.urls",
            "hurumap.views",
            "hurumap.wsgi"
        ],
        "version": "0.7.8"
    },
    "huscy-appointments": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.appointments",
            "huscy.appointments.admin",
            "huscy.appointments.feed",
            "huscy.appointments.filters",
            "huscy.appointments.migrations",
            "huscy.appointments.migrations.0001_initial",
            "huscy.appointments.migrations.0002_auto_20200226_0735",
            "huscy.appointments.migrations.0003_auto_20200226_0756",
            "huscy.appointments.models",
            "huscy.appointments.serializers",
            "huscy.appointments.services",
            "huscy.appointments.urls",
            "huscy.appointments.validators",
            "huscy.appointments.views",
            "tests.conftest",
            "tests.models.test_appointment",
            "tests.models.test_invitation",
            "tests.models.test_resource",
            "tests.services.test_accept_appointment",
            "tests.services.test_create_appointment",
            "tests.services.test_decline_appointment",
            "tests.services.test_get_appointments",
            "tests.services.test_remove_appointment",
            "tests.services.test_update_appointment",
            "tests.test_appointments_rest",
            "tests.test_feed",
            "tests.viewsets.test_appointment_viewset_create_appointment",
            "tests.viewsets.test_appointment_viewset_delete_appointment",
            "tests.viewsets.test_appointment_viewset_get_appointments",
            "tests.viewsets.test_appointment_viewset_update_appointment",
            "tests.viewsets.test_resource_viewset_get_resources"
        ],
        "version": "1.1.1"
    },
    "huscy-attributes": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.attributes",
            "huscy.attributes.admin",
            "huscy.attributes.migrations",
            "huscy.attributes.migrations.0001_initial",
            "huscy.attributes.models",
            "huscy.attributes.serializer",
            "huscy.attributes.services",
            "huscy.attributes.urls",
            "huscy.attributes.views",
            "tests.apiviews.test_attributeschema_view_create_attribute_schema",
            "tests.apiviews.test_attributeschema_view_get_attribute_schema",
            "tests.conftest",
            "tests.models.test_attribute_set",
            "tests.serializer.test_attributeset_serializer",
            "tests.services.test_add_choices_property_to_attribute_schema",
            "tests.services.test_add_integer_property_to_attribute_schema",
            "tests.services.test_add_property_to_attribute_schema",
            "tests.services.test_create_initial_schema",
            "tests.services.test_get_attribute_schema",
            "tests.services.test_get_or_create_attribute_set",
            "tests.services.test_update_attribute_set",
            "tests.viewsets.test_attributeset_view_get_attribute_set",
            "tests.viewsets.test_attributeset_view_update_attribute_set"
        ],
        "version": "0.3.0a5"
    },
    "huscy-bookings": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.bookings",
            "huscy.bookings.migrations",
            "huscy.bookings.migrations.0001_initial",
            "huscy.bookings.models",
            "huscy.bookings.serializers",
            "huscy.bookings.services",
            "huscy.bookings.urls",
            "huscy.bookings.views",
            "tests.conftest",
            "tests.test_book_timeslot",
            "tests.test_create_timeslot",
            "tests.test_delete_timeslot",
            "tests.test_timeslot",
            "tests.test_timeslot_manager",
            "tests.test_unbook_timeslot",
            "tests.test_update_timeslot"
        ],
        "version": "0.1.0a1"
    },
    "huscy-data-request": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.data_request",
            "huscy.data_request.urls",
            "huscy.data_request.views",
            "tests.conftest",
            "tests.test_assert_true",
            "tests.test_subject_viewset"
        ],
        "version": "0.1.0a0"
    },
    "huscy-project-archivenotes": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.project_archivenotes",
            "huscy.project_archivenotes.filters",
            "huscy.project_archivenotes.migrations",
            "huscy.project_archivenotes.migrations.0001_initial",
            "huscy.project_archivenotes.models",
            "huscy.project_archivenotes.serializer",
            "huscy.project_archivenotes.services",
            "huscy.project_archivenotes.urls",
            "huscy.project_archivenotes.views",
            "tests.conftest",
            "tests.viewsets.test_archivenote_viewset_create_archivenote",
            "tests.viewsets.test_archivenote_viewset_delete_archivenote",
            "tests.viewsets.test_archivenote_viewset_update_archivenote",
            "tests.viewsets.test_archivenote_viewset_view_archivenote"
        ],
        "version": "0.1.0a0"
    },
    "huscy-project-documents": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.project_documents",
            "huscy.project_documents.admin",
            "huscy.project_documents.filters",
            "huscy.project_documents.migrations",
            "huscy.project_documents.migrations.0001_initial",
            "huscy.project_documents.models",
            "huscy.project_documents.serializer",
            "huscy.project_documents.services",
            "huscy.project_documents.urls",
            "huscy.project_documents.views",
            "tests.conftest",
            "tests.services.test_create_document",
            "tests.services.test_get_documents",
            "tests.viewsets.test_document_viewset_create_document",
            "tests.viewsets.test_document_viewset_delete_document",
            "tests.viewsets.test_document_viewset_get_documents",
            "tests.viewsets.test_document_viewset_update_document",
            "tests.viewsets.test_documenttype_viewset_create_document_type",
            "tests.viewsets.test_documenttype_viewset_delete_document_type",
            "tests.viewsets.test_documenttype_viewset_get_document_types",
            "tests.viewsets.test_project_viewset_get_project"
        ],
        "version": "0.2.0a1"
    },
    "huscy-project-ethics": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.project_ethics",
            "huscy.project_ethics.admin",
            "huscy.project_ethics.filters",
            "huscy.project_ethics.migrations",
            "huscy.project_ethics.migrations.0001_initial",
            "huscy.project_ethics.models",
            "huscy.project_ethics.serializer",
            "huscy.project_ethics.services",
            "huscy.project_ethics.urls",
            "huscy.project_ethics.views",
            "tests.conftest",
            "tests.serializer.test_project_serializer",
            "tests.services.test_create_ethic_file",
            "tests.services.test_get_ethics",
            "tests.viewsets.test_ethic_viewset_create_ethic",
            "tests.viewsets.test_ethic_viewset_delete_ethic",
            "tests.viewsets.test_ethic_viewset_get_ethics",
            "tests.viewsets.test_ethic_viewset_update_ethic",
            "tests.viewsets.test_ethicboard_viewset_create_ethic_board",
            "tests.viewsets.test_ethicboard_viewset_get_ethic_boards",
            "tests.viewsets.test_ethicfile_viewset_create_ethic_file",
            "tests.viewsets.test_ethicfile_viewset_delete_ethic_file",
            "tests.viewsets.test_ethicfile_viewset_get_ethic_files",
            "tests.viewsets.test_ethicfile_viewset_update_ethic_file",
            "tests.viewsets.test_project_viewset_get_project"
        ],
        "version": "0.2.0a1"
    },
    "huscy-project-memberships": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.project_memberships",
            "huscy.project_memberships.migrations",
            "huscy.project_memberships.migrations.0001_initial",
            "huscy.project_memberships.models",
            "huscy.project_memberships.serializer",
            "huscy.project_memberships.services",
            "huscy.project_memberships.urls",
            "huscy.project_memberships.views",
            "tests.conftest",
            "tests.models.test_membership_model",
            "tests.serializer.test_membership_serializer",
            "tests.serializer.test_project_id_serializer",
            "tests.serializer.test_project_serializer",
            "tests.services.test_add_member",
            "tests.services.test_get_memberships",
            "tests.services.test_get_participating_projects",
            "tests.services.test_remove_member",
            "tests.services.test_update_membership",
            "tests.viewsets.test_membership_viewset_create_membership",
            "tests.viewsets.test_membership_viewset_delete_membership",
            "tests.viewsets.test_membership_viewset_get_memberships",
            "tests.viewsets.test_membership_viewset_update_membership",
            "tests.viewsets.test_participating_project_id_viewset_list_projects",
            "tests.viewsets.test_project_viewset_get_project"
        ],
        "version": "0.3.0a2"
    },
    "huscy-project-storage": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.project_storage",
            "huscy.project_storage.models",
            "tests.test_assert_true"
        ],
        "version": "0.1.0a0"
    },
    "huscy-projects": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.projects",
            "huscy.projects.admin",
            "huscy.projects.filters",
            "huscy.projects.helpers",
            "huscy.projects.migrations",
            "huscy.projects.migrations.0001_initial",
            "huscy.projects.models",
            "huscy.projects.models.data_acquisition_method",
            "huscy.projects.models.experiment",
            "huscy.projects.models.membership",
            "huscy.projects.models.project",
            "huscy.projects.models.reserach_unit",
            "huscy.projects.models.session",
            "huscy.projects.models.stimulus",
            "huscy.projects.permissions",
            "huscy.projects.serializer",
            "huscy.projects.serializer.data_acquisition_method",
            "huscy.projects.serializer.experiment",
            "huscy.projects.serializer.membership",
            "huscy.projects.serializer.project",
            "huscy.projects.serializer.research_unit",
            "huscy.projects.serializer.session",
            "huscy.projects.services",
            "huscy.projects.services.data_acquisition_method",
            "huscy.projects.services.experiments",
            "huscy.projects.services.memberships",
            "huscy.projects.services.projects",
            "huscy.projects.services.research_units",
            "huscy.projects.services.sessions",
            "huscy.projects.urls",
            "huscy.projects.views",
            "tests.conftest",
            "tests.models.test_membership",
            "tests.models.test_project_manager",
            "tests.models.test_research_unit",
            "tests.serializers.test_membership_serializer",
            "tests.serializers.test_project_serializer",
            "tests.services.test_add_data_acquisition_method",
            "tests.services.test_add_member",
            "tests.services.test_create_experiment",
            "tests.services.test_create_project",
            "tests.services.test_create_session",
            "tests.services.test_delete_project",
            "tests.services.test_get_data_acquisition_methods",
            "tests.services.test_get_experiments",
            "tests.services.test_get_memberships",
            "tests.services.test_get_participating_projects",
            "tests.services.test_remove_member",
            "tests.services.test_update_membership",
            "tests.viewsets.test_dataacquisition_viewset_create_dataacquisitionmethod",
            "tests.viewsets.test_experiment_viewset_create_experiment",
            "tests.viewsets.test_experiment_viewset_delete_experiment",
            "tests.viewsets.test_experiment_viewset_get_experiments",
            "tests.viewsets.test_experiment_viewset_update_experiment",
            "tests.viewsets.test_experiment_viewset_view_experiment",
            "tests.viewsets.test_membership_viewset_create_membership",
            "tests.viewsets.test_membership_viewset_delete_membership",
            "tests.viewsets.test_membership_viewset_get_memberships",
            "tests.viewsets.test_membership_viewset_update_membership",
            "tests.viewsets.test_project_viewset_create_project",
            "tests.viewsets.test_project_viewset_delete_project",
            "tests.viewsets.test_project_viewset_get_data_acquisition_methods",
            "tests.viewsets.test_project_viewset_get_experiments",
            "tests.viewsets.test_project_viewset_get_memberships",
            "tests.viewsets.test_project_viewset_get_projects",
            "tests.viewsets.test_project_viewset_update_project",
            "tests.viewsets.test_researchunit_viewset_create_research_unit",
            "tests.viewsets.test_researchunit_viewset_delete_research_unit",
            "tests.viewsets.test_researchunit_viewset_get_research_units",
            "tests.viewsets.test_researchunit_viewset_update_research_unit",
            "tests.viewsets.test_session_viewset_create_session",
            "tests.viewsets.test_session_viewset_delete_session",
            "tests.viewsets.test_session_viewset_update_session",
            "tests.viewsets.test_session_viewset_view_sessions"
        ],
        "version": "0.1.0a8"
    },
    "huscy-pseudonyms": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "huscy.pseudonyms",
            "huscy.pseudonyms.migrations",
            "huscy.pseudonyms.migrations.0001_initial",
            "huscy.pseudonyms.models",
            "huscy.pseudonyms.services",
            "tests.conftest",
            "tests.test_create_pseudonym",
            "tests.test_get_or_create_pseudonym",
            "tests.test_get_pseudonym",
            "tests.test_get_subject"
        ],
        "version": "0.1.0a2"
    },
    "huscy-rooms": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.rooms",
            "huscy.rooms.admin",
            "huscy.rooms.migrations",
            "huscy.rooms.migrations.0001_initial",
            "huscy.rooms.models",
            "huscy.rooms.serializer",
            "huscy.rooms.services",
            "huscy.rooms.urls",
            "huscy.rooms.views",
            "tests.conftest",
            "tests.viewsets.test_building_viewset_create_building",
            "tests.viewsets.test_building_viewset_view_buildings",
            "tests.viewsets.test_floor_viewset_create_floor",
            "tests.viewsets.test_floor_viewset_view_floors",
            "tests.viewsets.test_room_viewset_create_room",
            "tests.viewsets.test_room_viewset_view_rooms"
        ],
        "version": "0.1.0a3"
    },
    "huscy-subjects": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.subjects",
            "huscy.subjects.admin",
            "huscy.subjects.helpers",
            "huscy.subjects.migrations",
            "huscy.subjects.migrations.0001_initial",
            "huscy.subjects.models",
            "huscy.subjects.pagination",
            "huscy.subjects.permissions",
            "huscy.subjects.serializers",
            "huscy.subjects.services",
            "huscy.subjects.urls",
            "huscy.subjects.views",
            "tests.conftest",
            "tests.models.test_address",
            "tests.models.test_contact",
            "tests.models.test_subject",
            "tests.serializer.test_subject_serializer",
            "tests.services.test_add_guardian",
            "tests.services.test_create_note",
            "tests.services.test_create_subject",
            "tests.services.test_remove_guardian",
            "tests.services.test_set_inactivity",
            "tests.services.test_unset_inactivity",
            "tests.services.test_update_subject",
            "tests.utils",
            "tests.utils.asserts",
            "tests.utils.helper",
            "tests.viewsets.test_guardian_viewset_create_guardian",
            "tests.viewsets.test_guardian_viewset_remove_guardian",
            "tests.viewsets.test_notes_viewset_create_note",
            "tests.viewsets.test_notes_viewset_remove_note",
            "tests.viewsets.test_subject_viewset_create_subject",
            "tests.viewsets.test_subject_viewset_delete_subject",
            "tests.viewsets.test_subject_viewset_set_inactivity",
            "tests.viewsets.test_subject_viewset_unset_inactivity",
            "tests.viewsets.test_subject_viewset_update_subject",
            "tests.viewsets.test_subject_viewset_view_subject"
        ],
        "version": "0.8.0rc18"
    },
    "huscy-users": {
        "cmdline": [],
        "modules": [
            "config.settings",
            "config.urls",
            "huscy.users",
            "huscy.users.migrations",
            "huscy.users.migrations.0001_initial",
            "huscy.users.models",
            "huscy.users.serializer",
            "huscy.users.urls",
            "huscy.users.views",
            "tests.conftest",
            "tests.viewsets.test_user_viewset_create_user",
            "tests.viewsets.test_user_viewset_get_users",
            "tests.viewsets.test_userprofile_viewset_get_profile",
            "tests.viewsets.test_userprofile_viewset_update_profile"
        ],
        "version": "0.1.0a1"
    },
    "husein-boilerplate": {
        "cmdline": [],
        "modules": [
            "husein_boilerplate",
            "husein_boilerplate.multiprocessing",
            "husein_boilerplate.rules"
        ],
        "version": "0.0.5"
    },
    "hush": {
        "cmdline": [],
        "modules": [
            "hush",
            "hush.console",
            "hush.keypairs",
            "hush.passwords",
            "hush.secrets"
        ],
        "version": "202010.7"
    },
    "hush-push": {
        "cmdline": [],
        "modules": [
            "hushpush",
            "hushpush.cmd",
            "hushpush.constant",
            "hushpush.hushpush",
            "hushpush.paraminfo",
            "hushpush.prereqs"
        ],
        "version": "0.3.0"
    },
    "hushbugger": {
        "cmdline": [],
        "modules": [
            "hushbugger"
        ],
        "version": "0.0.1"
    },
    "husince": {
        "cmdline": [],
        "modules": [
            "husince",
            "husince.cython_setup"
        ],
        "version": "0.1.5"
    },
    "husk": {
        "cmdline": [],
        "modules": [
            "husk",
            "husk.commands",
            "husk.commands.add",
            "husk.commands.info",
            "husk.commands.init",
            "husk.commands.move",
            "husk.commands.remove",
            "husk.commands.workon",
            "husk.config",
            "husk.constants",
            "husk.decorators",
            "husk.exceptions",
            "husk.note",
            "husk.repo",
            "tests",
            "tests.cli"
        ],
        "version": "0.1.2"
    },
    "huskar-sdk-v2": {
        "cmdline": [],
        "modules": [
            "huskar_sdk_v2",
            "huskar_sdk_v2.bootstrap",
            "huskar_sdk_v2.bootstrap.client",
            "huskar_sdk_v2.bootstrap.components",
            "huskar_sdk_v2.bootstrap.components.config",
            "huskar_sdk_v2.bootstrap.components.service_consumer",
            "huskar_sdk_v2.bootstrap.components.service_registry",
            "huskar_sdk_v2.bootstrap.components.switch",
            "huskar_sdk_v2.common",
            "huskar_sdk_v2.consts",
            "huskar_sdk_v2.exceptions",
            "huskar_sdk_v2.http",
            "huskar_sdk_v2.http.components",
            "huskar_sdk_v2.http.components.config",
            "huskar_sdk_v2.http.components.service",
            "huskar_sdk_v2.http.components.switch",
            "huskar_sdk_v2.http.ioloops",
            "huskar_sdk_v2.http.ioloops.entity",
            "huskar_sdk_v2.http.ioloops.events",
            "huskar_sdk_v2.http.ioloops.file",
            "huskar_sdk_v2.http.ioloops.http",
            "huskar_sdk_v2.http.patterns",
            "huskar_sdk_v2.http.service_registry",
            "huskar_sdk_v2.http.statsd",
            "huskar_sdk_v2.service_watcher",
            "huskar_sdk_v2.six",
            "huskar_sdk_v2.utils",
            "huskar_sdk_v2.utils.cached_dict",
            "huskar_sdk_v2.utils.filelock",
            "huskar_sdk_v2.utils.format",
            "huskar_sdk_v2.utils.go"
        ],
        "version": "0.18.0"
    },
    "huskarl": {
        "cmdline": [],
        "modules": [
            "huskarl",
            "huskarl.agent",
            "huskarl.agent.a2c",
            "huskarl.agent.ddpg",
            "huskarl.agent.dqn",
            "huskarl.core",
            "huskarl.memory",
            "huskarl.policy",
            "huskarl.simulation"
        ],
        "version": "0.4"
    },
    "huskarl-custom": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "huski": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "husky": {
        "cmdline": [],
        "modules": [
            "Husky",
            "Husky.class_husky",
            "Husky.dict_husky",
            "Husky.function_husky",
            "Husky.generator_husky",
            "Husky.instance_husky",
            "Husky.iterable_husky",
            "Husky.module_husky",
            "Husky.type_husky",
            "Husky.wrap"
        ],
        "version": "0.1.7"
    },
    "husl": {
        "cmdline": [],
        "modules": [],
        "version": "4.0.3"
    },
    "husoftm": {
        "cmdline": [],
        "modules": [
            "husoftm",
            "husoftm.artikel",
            "husoftm.auftraege",
            "husoftm.bestaende",
            "husoftm.bestellungen",
            "husoftm.connection",
            "husoftm.connection2",
            "husoftm.fields",
            "husoftm.kunden",
            "husoftm.lagerschnittstelle",
            "husoftm.lieferanten",
            "husoftm.lieferscheine",
            "husoftm.misc",
            "husoftm.mock_as400",
            "husoftm.preise_ek",
            "husoftm.rechnungen",
            "husoftm.sachbearbeiter",
            "husoftm.softmtables",
            "husoftm.stapelschnittstelle",
            "husoftm.stapelschnittstelle_const",
            "husoftm.tools",
            "husoftm.versandart"
        ],
        "version": "0.65p2"
    },
    "husqvarna-automower": {
        "cmdline": [],
        "modules": [
            "husqvarna_automower"
        ],
        "version": "0.3"
    },
    "husqvarna-getl": {
        "cmdline": [],
        "modules": [
            "getl",
            "getl.block",
            "getl.blocks",
            "getl.blocks.custom",
            "getl.blocks.custom.entrypoint",
            "getl.blocks.load",
            "getl.blocks.load.entrypoint",
            "getl.blocks.transform",
            "getl.blocks.transform.add_column",
            "getl.blocks.transform.add_column.date",
            "getl.blocks.transform.entrypoint",
            "getl.blocks.transform.transform",
            "getl.blocks.write",
            "getl.blocks.write.batch_delta",
            "getl.blocks.write.entrypoint",
            "getl.common",
            "getl.common.delta_table",
            "getl.common.errors",
            "getl.common.hive_table",
            "getl.common.s3path",
            "getl.common.upsert",
            "getl.common.utils",
            "getl.fileregistry",
            "getl.fileregistry.base",
            "getl.fileregistry.entrypoint",
            "getl.fileregistry.fileregistry_utils",
            "getl.fileregistry.s3_date_prefix_scan",
            "getl.fileregistry.s3_full_scan",
            "getl.lift",
            "getl.lift_definition",
            "getl.logging",
            "getl.manager"
        ],
        "version": "1.4.2"
    },
    "hussainpdf": {
        "cmdline": [],
        "modules": [
            "hussainpdf",
            "hussainpdf.pdf2image",
            "hussainpdf.pdf2text"
        ],
        "version": "1.0"
    },
    "hust": {
        "cmdline": [],
        "modules": [
            "hust",
            "hust.cli",
            "hust.temp",
            "hust.utils"
        ],
        "version": "0.0.2"
    },
    "huster": {
        "cmdline": [
            "build_server_scripts"
        ],
        "modules": [
            "huster",
            "huster.SimpleHTTPServerWithUpload_py2",
            "huster.SimpleHTTPServerWithUpload_py3",
            "huster.server",
            "huster.test"
        ],
        "version": "0.0.5"
    },
    "hut": {
        "cmdline": [],
        "modules": [
            "hut"
        ],
        "version": "0.0.1"
    },
    "hutch-python": {
        "cmdline": [
            "hutch-python"
        ],
        "modules": [
            "hutch_python",
            "hutch_python._version",
            "hutch_python.bug",
            "hutch_python.cache",
            "hutch_python.cam_load",
            "hutch_python.cli",
            "hutch_python.constants",
            "hutch_python.exp_load",
            "hutch_python.happi",
            "hutch_python.ipython_log",
            "hutch_python.load_conf",
            "hutch_python.log_setup",
            "hutch_python.namespace",
            "hutch_python.plan_defaults",
            "hutch_python.qs_load",
            "hutch_python.tests",
            "hutch_python.tests.bad_script",
            "hutch_python.tests.conftest",
            "hutch_python.tests.sample_module_1",
            "hutch_python.tests.sample_module_2",
            "hutch_python.tests.script",
            "hutch_python.tests.test_bug",
            "hutch_python.tests.test_cache",
            "hutch_python.tests.test_cam_load",
            "hutch_python.tests.test_cli",
            "hutch_python.tests.test_experiment",
            "hutch_python.tests.test_happi",
            "hutch_python.tests.test_ipython_log",
            "hutch_python.tests.test_load_conf",
            "hutch_python.tests.test_log_setup",
            "hutch_python.tests.test_namespace",
            "hutch_python.tests.test_questionnaire",
            "hutch_python.tests.test_tstpython",
            "hutch_python.tests.test_user_load",
            "hutch_python.tests.test_utils",
            "hutch_python.tests.tst",
            "hutch_python.tests.tst.beamline",
            "hutch_python.user_load",
            "hutch_python.utils"
        ],
        "version": "1.0.2"
    },
    "hutch15id": {
        "cmdline": [],
        "modules": [
            "hutch15",
            "hutch15.database",
            "hutch15.fit_ref",
            "hutch15.flu_geometry_routines",
            "hutch15.fluorescence",
            "hutch15.workspace",
            "hutch15.xrays"
        ],
        "version": "0.1.1"
    },
    "hutil": {
        "cmdline": [],
        "modules": [
            "hutil"
        ],
        "version": "0.1"
    },
    "hutils": {
        "cmdline": [],
        "modules": [
            "hutils",
            "hutils.classes",
            "hutils.data_types",
            "hutils.decorators",
            "hutils.django",
            "hutils.django.apis",
            "hutils.django.databases",
            "hutils.django.migrations",
            "hutils.django.unittest",
            "hutils.schemas",
            "hutils.shortcuts",
            "hutils.unittest",
            "hutils.validators"
        ],
        "version": "1.0.14"
    },
    "hutools": {
        "cmdline": [],
        "modules": [
            "huTools",
            "huTools.NetStringIO",
            "huTools.ReReadingConfigParser",
            "huTools._decorator",
            "huTools._jsonlib",
            "huTools.aggregation",
            "huTools.async",
            "huTools.bank",
            "huTools.cache",
            "huTools.calendar",
            "huTools.calendar.count_weekends",
            "huTools.calendar.formats",
            "huTools.calendar.tools",
            "huTools.calendar.workdays",
            "huTools.checksumming",
            "huTools.couch",
            "huTools.daemon",
            "huTools.decorators",
            "huTools.fmtp",
            "huTools.fs",
            "huTools.http",
            "huTools.http._httplib2",
            "huTools.http._httplib2.iri2uri",
            "huTools.http.engine_appengine",
            "huTools.http.engine_httplib2",
            "huTools.http.exceptions",
            "huTools.http.poster_encode",
            "huTools.http.test",
            "huTools.http.tools",
            "huTools.huLint",
            "huTools.hujson",
            "huTools.humessaging",
            "huTools.luids",
            "huTools.monetary",
            "huTools.obfuscation",
            "huTools.postmark",
            "huTools.printing",
            "huTools.protocols",
            "huTools.pyjasper",
            "huTools.rest",
            "huTools.robusttypecasts",
            "huTools.structured",
            "huTools.unicode",
            "huTools.world",
            "huTools.xmltools"
        ],
        "version": "0.63"
    },
    "hutrend": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hutspot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "huunifie": {
        "cmdline": [],
        "modules": [
            "huunifie"
        ],
        "version": "0.4.3"
    },
    "huvr-client": {
        "cmdline": [],
        "modules": [
            "huvr_client",
            "huvr_client.__version__",
            "huvr_client.helpers",
            "huvr_client.huvr_client"
        ],
        "version": "0.2.2"
    },
    "hux": {
        "cmdline": [],
        "modules": [
            "print_log"
        ],
        "version": "1.4.1"
    },
    "huxley": {
        "cmdline": [],
        "modules": [
            "huxley",
            "huxley.cmdline",
            "huxley.consts",
            "huxley.errors",
            "huxley.images",
            "huxley.integration",
            "huxley.main",
            "huxley.run",
            "huxley.steps",
            "huxley.threadpool",
            "huxley.version"
        ],
        "version": "0.5"
    },
    "huy": {
        "cmdline": [],
        "modules": [
            "huy"
        ],
        "version": "1.5"
    },
    "huzhifeng": {
        "cmdline": [],
        "modules": [
            "huzhifeng",
            "huzhifeng.lib"
        ],
        "version": "0.1.1"
    },
    "huzhiyong": {
        "cmdline": [],
        "modules": [
            "huzhiyong",
            "huzhiyong.changeip"
        ],
        "version": "1.0.6"
    },
    "huzhuo-pkg-test": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "huzzer": {
        "cmdline": [],
        "modules": [
            "huzzer",
            "huzzer.code_gen",
            "huzzer.expressions",
            "huzzer.function_generator",
            "huzzer.huzz",
            "huzzer.namers",
            "huzzer.namers.default_namer",
            "huzzer.tokenizing",
            "huzzer.tokenizing.SubHaskellLexer",
            "huzzer.tokenizing.SubHaskellListener",
            "huzzer.tokenizing.SubHaskellParser",
            "huzzer.tokenizing.SubHaskellVisitor",
            "huzzer.tokenizing.tokenize",
            "huzzer.version"
        ],
        "version": "0.1.2"
    },
    "hv": {
        "cmdline": [],
        "modules": [
            "hv",
            "hv.datastore",
            "hv.entity",
            "hv.util"
        ],
        "version": "0.1.1"
    },
    "hv-uploader": {
        "cmdline": [],
        "modules": [
            "hv_uploader"
        ],
        "version": "2017.9.27"
    },
    "hvac": {
        "cmdline": [],
        "modules": [
            "hvac",
            "hvac.adapters",
            "hvac.api",
            "hvac.api.auth_methods",
            "hvac.api.auth_methods.aws",
            "hvac.api.auth_methods.azure",
            "hvac.api.auth_methods.gcp",
            "hvac.api.auth_methods.github",
            "hvac.api.auth_methods.jwt",
            "hvac.api.auth_methods.kubernetes",
            "hvac.api.auth_methods.ldap",
            "hvac.api.auth_methods.mfa",
            "hvac.api.auth_methods.oidc",
            "hvac.api.auth_methods.okta",
            "hvac.api.auth_methods.radius",
            "hvac.api.auth_methods.userpass",
            "hvac.api.secrets_engines",
            "hvac.api.secrets_engines.active_directory",
            "hvac.api.secrets_engines.aws",
            "hvac.api.secrets_engines.azure",
            "hvac.api.secrets_engines.consul",
            "hvac.api.secrets_engines.database",
            "hvac.api.secrets_engines.gcp",
            "hvac.api.secrets_engines.identity",
            "hvac.api.secrets_engines.kv",
            "hvac.api.secrets_engines.kv_v1",
            "hvac.api.secrets_engines.kv_v2",
            "hvac.api.secrets_engines.pki",
            "hvac.api.secrets_engines.rabbitmq",
            "hvac.api.secrets_engines.transform",
            "hvac.api.secrets_engines.transit",
            "hvac.api.system_backend",
            "hvac.api.system_backend.audit",
            "hvac.api.system_backend.auth",
            "hvac.api.system_backend.capabilities",
            "hvac.api.system_backend.health",
            "hvac.api.system_backend.init",
            "hvac.api.system_backend.key",
            "hvac.api.system_backend.leader",
            "hvac.api.system_backend.lease",
            "hvac.api.system_backend.mount",
            "hvac.api.system_backend.namespace",
            "hvac.api.system_backend.policy",
            "hvac.api.system_backend.raft",
            "hvac.api.system_backend.seal",
            "hvac.api.system_backend.system_backend_mixin",
            "hvac.api.system_backend.wrapping",
            "hvac.api.vault_api_base",
            "hvac.api.vault_api_category",
            "hvac.aws_utils",
            "hvac.constants",
            "hvac.constants.aws",
            "hvac.constants.azure",
            "hvac.constants.client",
            "hvac.constants.gcp",
            "hvac.constants.identity",
            "hvac.constants.transit",
            "hvac.exceptions",
            "hvac.utils",
            "hvac.v1"
        ],
        "version": "0.10.5"
    },
    "hvac-cli": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.3"
    },
    "hvac-ir": {
        "cmdline": [],
        "modules": [
            "hvac_ir",
            "hvac_ir.ballu",
            "hvac_ir.carriermca",
            "hvac_ir.carriernqv",
            "hvac_ir.daikin",
            "hvac_ir.daikin2",
            "hvac_ir.fuego",
            "hvac_ir.fujitsu",
            "hvac_ir.gree",
            "hvac_ir.hisense",
            "hvac_ir.hitachi",
            "hvac_ir.hyundai",
            "hvac_ir.midea",
            "hvac_ir.mitsubishi"
        ],
        "version": "0.7"
    },
    "hvalidation": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.3"
    },
    "hveto": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "hvf-extraction-script": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hvl-ccb": {
        "cmdline": [],
        "modules": [
            "hvl_ccb",
            "hvl_ccb._dev",
            "hvl_ccb._dev.labjack",
            "hvl_ccb.comm",
            "hvl_ccb.comm.base",
            "hvl_ccb.comm.labjack_ljm",
            "hvl_ccb.comm.modbus_tcp",
            "hvl_ccb.comm.opc",
            "hvl_ccb.comm.serial",
            "hvl_ccb.comm.visa",
            "hvl_ccb.configuration",
            "hvl_ccb.dev",
            "hvl_ccb.dev.base",
            "hvl_ccb.dev.crylas",
            "hvl_ccb.dev.ea_psi9000",
            "hvl_ccb.dev.heinzinger",
            "hvl_ccb.dev.labjack",
            "hvl_ccb.dev.mbw973",
            "hvl_ccb.dev.newport",
            "hvl_ccb.dev.pfeiffer_tpg",
            "hvl_ccb.dev.rs_rto1024",
            "hvl_ccb.dev.se_ils2t",
            "hvl_ccb.dev.sst_luminox",
            "hvl_ccb.dev.supercube",
            "hvl_ccb.dev.supercube.base",
            "hvl_ccb.dev.supercube.constants",
            "hvl_ccb.dev.supercube.typ_a",
            "hvl_ccb.dev.supercube.typ_b",
            "hvl_ccb.dev.supercube2015",
            "hvl_ccb.dev.supercube2015.base",
            "hvl_ccb.dev.supercube2015.constants",
            "hvl_ccb.dev.supercube2015.typ_a",
            "hvl_ccb.dev.visa",
            "hvl_ccb.experiment_manager",
            "hvl_ccb.utils",
            "hvl_ccb.utils.enum",
            "hvl_ccb.utils.typing"
        ],
        "version": "0.4.0"
    },
    "hvnpyhash": {
        "cmdline": [],
        "modules": [
            "pyhash"
        ],
        "version": "0.8.1"
    },
    "hvofuncs": {
        "cmdline": [],
        "modules": [
            "hvoFuncs",
            "hvoFuncs.data_exporter",
            "hvoFuncs.misc",
            "hvoFuncs.sharepoint"
        ],
        "version": "0.1.9"
    },
    "hvplot": {
        "cmdline": [],
        "modules": [
            "hvplot",
            "hvplot.converter",
            "hvplot.cudf",
            "hvplot.dask",
            "hvplot.intake",
            "hvplot.networkx",
            "hvplot.pandas",
            "hvplot.plotting",
            "hvplot.plotting.andrews_curves",
            "hvplot.plotting.core",
            "hvplot.plotting.lag_plot",
            "hvplot.plotting.parallel_coordinates",
            "hvplot.plotting.scatter_matrix",
            "hvplot.sample_data",
            "hvplot.streamz",
            "hvplot.tests",
            "hvplot.tests.testcharts",
            "hvplot.tests.testgeo",
            "hvplot.tests.testgridplots",
            "hvplot.tests.testnetworkx",
            "hvplot.tests.testoperations",
            "hvplot.tests.testoptions",
            "hvplot.tests.testoverrides",
            "hvplot.tests.testpanel",
            "hvplot.tests.testpatch",
            "hvplot.tests.testplotting",
            "hvplot.tests.testutil",
            "hvplot.util",
            "hvplot.utilities",
            "hvplot.xarray"
        ],
        "version": "0.6.0"
    },
    "hvsi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hvsrpy": {
        "cmdline": [],
        "modules": [
            "hvsrpy",
            "hvsrpy.hvsr",
            "hvsrpy.hvsr_rotated",
            "hvsrpy.hvsr_spatial",
            "hvsrpy.plottools",
            "hvsrpy.sensor3c",
            "hvsrpy.utils"
        ],
        "version": "0.4.2"
    },
    "hvvabfahrtsmonitor": {
        "cmdline": [],
        "modules": [
            "hvvabfahrtsmonitor",
            "hvvabfahrtsmonitor.hvvabfahrtsmonitor"
        ],
        "version": "0.1.1"
    },
    "hvwfg": {
        "cmdline": [],
        "modules": [
            "hvwfg",
            "hvwfg._version"
        ],
        "version": "1.0.0b0"
    },
    "hw": {
        "cmdline": [],
        "modules": [
            "hw"
        ],
        "version": "1.0.0"
    },
    "hw-lvrui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hw-nfr-cs410-pip-test": {
        "cmdline": [],
        "modules": [
            "hw_nfr_cs410_pip_test",
            "hw_nfr_cs410_pip_test.feature_mining",
            "hw_nfr_cs410_pip_test.hw_nfr_cs410_pip_test"
        ],
        "version": "0.0.4"
    },
    "hw-python-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hw01": {
        "cmdline": [],
        "modules": [
            "hw01",
            "hw01.constants",
            "hw01.hw01"
        ],
        "version": "1.0.0"
    },
    "hw2507-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hw2while": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hw4lopushanskyy": {
        "cmdline": [],
        "modules": [
            "hw4lopushanskyy",
            "hw4lopushanskyy.homework4"
        ],
        "version": "1.0.0"
    },
    "hwagent": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hwang": {
        "cmdline": [],
        "modules": [
            "hwang",
            "hwang.decoder",
            "hwang.video_index"
        ],
        "version": "0.1.0"
    },
    "hwapi": {
        "cmdline": [],
        "modules": [
            "hwapi",
            "hwapi.client",
            "hwapi.models",
            "hwapi.utils"
        ],
        "version": "0.1.1"
    },
    "hwaves": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.isosurf",
            "examples.radial_plot",
            "hwaves",
            "hwaves.hwf",
            "hwaves.hwf_density",
            "hwaves.hwf_gui",
            "hwaves.hwf_plot",
            "tests",
            "tests.test_hwf_density"
        ],
        "version": "0.0.4"
    },
    "hwbd-ictolder": {
        "cmdline": [],
        "modules": [
            "hwbd_ictolder"
        ],
        "version": "1.3.0"
    },
    "hwcounter": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hwd": {
        "cmdline": [],
        "modules": [
            "hwd",
            "hwd.network",
            "hwd.storage",
            "hwd.udev",
            "hwd.wrapper"
        ],
        "version": "0.3"
    },
    "hwdean": {
        "cmdline": [],
        "modules": [
            "hwdean"
        ],
        "version": "0.0.7"
    },
    "hwfact": {
        "cmdline": [],
        "modules": [
            "hwfact",
            "hwfact.hwfact",
            "hwfact.parser"
        ],
        "version": "0.2.0"
    },
    "hwffd": {
        "cmdline": [],
        "modules": [
            "hwffd",
            "hwffd.hwffd",
            "tests",
            "tests.test_hwffd"
        ],
        "version": "0.1"
    },
    "hwformatter": {
        "cmdline": [
            "format_HW"
        ],
        "modules": [
            "HWFormatter",
            "HWFormatter.formatter"
        ],
        "version": "0.4"
    },
    "hwglance": {
        "cmdline": [],
        "modules": [
            "hwglance",
            "hwglance.__console__"
        ],
        "version": "1.0.9"
    },
    "hwhpykit": {
        "cmdline": [],
        "modules": [
            "hwhpykit",
            "hwhpykit.buffer",
            "hwhpykit.cache",
            "hwhpykit.cache.reids",
            "hwhpykit.cache.reids.RedisManager",
            "hwhpykit.cache.reids.action",
            "hwhpykit.cache.reids.action.RedisServer",
            "hwhpykit.cache.reids.action.RedisSubscriber",
            "hwhpykit.cache.reids.action.RedisTransaction",
            "hwhpykit.cache.reids.base",
            "hwhpykit.cache.reids.base.RedisGEO",
            "hwhpykit.cache.reids.base.RedisHashManager",
            "hwhpykit.cache.reids.base.RedisListManager",
            "hwhpykit.cache.reids.base.RedisSetManager",
            "hwhpykit.cache.reids.base.RedisStringManager",
            "hwhpykit.cache.reids.base.RedisZSetManager",
            "hwhpykit.database",
            "hwhpykit.database.mysql",
            "hwhpykit.database.mysql.MysqlManager",
            "hwhpykit.database.sqlite"
        ],
        "version": "1.0.5"
    },
    "hwi": {
        "cmdline": [],
        "modules": [
            "hwi",
            "hwi-qt",
            "hwilib",
            "hwilib.base58",
            "hwilib.bech32",
            "hwilib.cli",
            "hwilib.commands",
            "hwilib.descriptor",
            "hwilib.devices",
            "hwilib.devices.bitbox02",
            "hwilib.devices.btchip",
            "hwilib.devices.btchip.bitcoinTransaction",
            "hwilib.devices.btchip.bitcoinVarint",
            "hwilib.devices.btchip.btchip",
            "hwilib.devices.btchip.btchipComm",
            "hwilib.devices.btchip.btchipException",
            "hwilib.devices.btchip.btchipHelpers",
            "hwilib.devices.btchip.btchipUtils",
            "hwilib.devices.btchip.ledgerWrapper",
            "hwilib.devices.ckcc",
            "hwilib.devices.ckcc.client",
            "hwilib.devices.ckcc.constants",
            "hwilib.devices.ckcc.protocol",
            "hwilib.devices.ckcc.sigheader",
            "hwilib.devices.ckcc.utils",
            "hwilib.devices.coldcard",
            "hwilib.devices.digitalbitbox",
            "hwilib.devices.keepkey",
            "hwilib.devices.ledger",
            "hwilib.devices.trezor",
            "hwilib.devices.trezorlib",
            "hwilib.devices.trezorlib.btc",
            "hwilib.devices.trezorlib.client",
            "hwilib.devices.trezorlib.debuglink",
            "hwilib.devices.trezorlib.device",
            "hwilib.devices.trezorlib.exceptions",
            "hwilib.devices.trezorlib.firmware",
            "hwilib.devices.trezorlib.log",
            "hwilib.devices.trezorlib.mapping",
            "hwilib.devices.trezorlib.messages",
            "hwilib.devices.trezorlib.messages.Address",
            "hwilib.devices.trezorlib.messages.ApplyFlags",
            "hwilib.devices.trezorlib.messages.ApplySettings",
            "hwilib.devices.trezorlib.messages.BackupDevice",
            "hwilib.devices.trezorlib.messages.ButtonAck",
            "hwilib.devices.trezorlib.messages.ButtonRequest",
            "hwilib.devices.trezorlib.messages.ButtonRequestType",
            "hwilib.devices.trezorlib.messages.Cancel",
            "hwilib.devices.trezorlib.messages.ChangePin",
            "hwilib.devices.trezorlib.messages.ClearSession",
            "hwilib.devices.trezorlib.messages.DebugLinkDecision",
            "hwilib.devices.trezorlib.messages.DebugLinkFlashErase",
            "hwilib.devices.trezorlib.messages.DebugLinkGetState",
            "hwilib.devices.trezorlib.messages.DebugLinkLog",
            "hwilib.devices.trezorlib.messages.DebugLinkMemory",
            "hwilib.devices.trezorlib.messages.DebugLinkMemoryRead",
            "hwilib.devices.trezorlib.messages.DebugLinkMemoryWrite",
            "hwilib.devices.trezorlib.messages.DebugLinkState",
            "hwilib.devices.trezorlib.messages.DebugLinkStop",
            "hwilib.devices.trezorlib.messages.Deprecated_PassphraseStateAck",
            "hwilib.devices.trezorlib.messages.Deprecated_PassphraseStateRequest",
            "hwilib.devices.trezorlib.messages.Entropy",
            "hwilib.devices.trezorlib.messages.EntropyAck",
            "hwilib.devices.trezorlib.messages.EntropyRequest",
            "hwilib.devices.trezorlib.messages.Failure",
            "hwilib.devices.trezorlib.messages.FailureType",
            "hwilib.devices.trezorlib.messages.Features",
            "hwilib.devices.trezorlib.messages.FirmwareErase",
            "hwilib.devices.trezorlib.messages.FirmwareRequest",
            "hwilib.devices.trezorlib.messages.FirmwareUpload",
            "hwilib.devices.trezorlib.messages.GetAddress",
            "hwilib.devices.trezorlib.messages.GetEntropy",
            "hwilib.devices.trezorlib.messages.GetFeatures",
            "hwilib.devices.trezorlib.messages.GetPublicKey",
            "hwilib.devices.trezorlib.messages.HDNodePathType",
            "hwilib.devices.trezorlib.messages.HDNodeType",
            "hwilib.devices.trezorlib.messages.IdentityType",
            "hwilib.devices.trezorlib.messages.Initialize",
            "hwilib.devices.trezorlib.messages.InputScriptType",
            "hwilib.devices.trezorlib.messages.LoadDevice",
            "hwilib.devices.trezorlib.messages.MessageSignature",
            "hwilib.devices.trezorlib.messages.MessageType",
            "hwilib.devices.trezorlib.messages.MultisigRedeemScriptType",
            "hwilib.devices.trezorlib.messages.OutputScriptType",
            "hwilib.devices.trezorlib.messages.PassphraseAck",
            "hwilib.devices.trezorlib.messages.PassphraseRequest",
            "hwilib.devices.trezorlib.messages.PassphraseSourceType",
            "hwilib.devices.trezorlib.messages.PinMatrixAck",
            "hwilib.devices.trezorlib.messages.PinMatrixRequest",
            "hwilib.devices.trezorlib.messages.PinMatrixRequestType",
            "hwilib.devices.trezorlib.messages.Ping",
            "hwilib.devices.trezorlib.messages.PublicKey",
            "hwilib.devices.trezorlib.messages.RecoveryDevice",
            "hwilib.devices.trezorlib.messages.RecoveryDeviceType",
            "hwilib.devices.trezorlib.messages.RequestType",
            "hwilib.devices.trezorlib.messages.ResetDevice",
            "hwilib.devices.trezorlib.messages.SelfTest",
            "hwilib.devices.trezorlib.messages.SignIdentity",
            "hwilib.devices.trezorlib.messages.SignMessage",
            "hwilib.devices.trezorlib.messages.SignTx",
            "hwilib.devices.trezorlib.messages.SignedIdentity",
            "hwilib.devices.trezorlib.messages.Success",
            "hwilib.devices.trezorlib.messages.TransactionType",
            "hwilib.devices.trezorlib.messages.TxAck",
            "hwilib.devices.trezorlib.messages.TxInputType",
            "hwilib.devices.trezorlib.messages.TxOutputBinType",
            "hwilib.devices.trezorlib.messages.TxOutputType",
            "hwilib.devices.trezorlib.messages.TxRequest",
            "hwilib.devices.trezorlib.messages.TxRequestDetailsType",
            "hwilib.devices.trezorlib.messages.TxRequestSerializedType",
            "hwilib.devices.trezorlib.messages.VerifyMessage",
            "hwilib.devices.trezorlib.messages.WipeDevice",
            "hwilib.devices.trezorlib.messages.WordAck",
            "hwilib.devices.trezorlib.messages.WordRequest",
            "hwilib.devices.trezorlib.messages.WordRequestType",
            "hwilib.devices.trezorlib.protobuf",
            "hwilib.devices.trezorlib.tools",
            "hwilib.devices.trezorlib.transport",
            "hwilib.devices.trezorlib.transport.hid",
            "hwilib.devices.trezorlib.transport.protocol",
            "hwilib.devices.trezorlib.transport.udp",
            "hwilib.devices.trezorlib.transport.webusb",
            "hwilib.devices.trezorlib.ui",
            "hwilib.errors",
            "hwilib.gui",
            "hwilib.hwwclient",
            "hwilib.serializations",
            "hwilib.udevinstaller",
            "hwilib.ui.ui_bitbox02pairing",
            "hwilib.ui.ui_displayaddressdialog",
            "hwilib.ui.ui_getkeypooloptionsdialog",
            "hwilib.ui.ui_getxpubdialog",
            "hwilib.ui.ui_mainwindow",
            "hwilib.ui.ui_sendpindialog",
            "hwilib.ui.ui_setpassphrasedialog",
            "hwilib.ui.ui_signmessagedialog",
            "hwilib.ui.ui_signpsbtdialog"
        ],
        "version": "1.2.0"
    },
    "hwinfo": {
        "cmdline": [],
        "modules": [
            "hwinfo",
            "hwinfo.hwinfo"
        ],
        "version": "0.1.0"
    },
    "hwiopy": {
        "cmdline": [],
        "modules": [
            "hwiopy",
            "hwiopy.core",
            "hwiopy.core.core",
            "hwiopy.platforms",
            "hwiopy.platforms.beagle",
            "hwiopy.systems",
            "hwiopy.systems.cortexA8"
        ],
        "version": "0.1.1"
    },
    "hwit-core": {
        "cmdline": [],
        "modules": [
            "hwit",
            "hwit.checks",
            "hwit.checks.common",
            "hwit.checks.test",
            "hwit.checks.test.test_typertest",
            "hwit.core",
            "hwit.core.about",
            "hwit.core.console",
            "hwit.core.context",
            "hwit.core.doc",
            "hwit.core.doc.conf",
            "hwit.core.generator",
            "hwit.core.model",
            "hwit.core.parser",
            "hwit.core.settings",
            "hwit.core.test",
            "hwit.core.test.test_console",
            "hwit.core.test.test_container",
            "hwit.core.test.test_context",
            "hwit.core.test.test_generator",
            "hwit.core.utils",
            "hwit.core.utils.cluster",
            "hwit.core.utils.happenstance",
            "hwit.core.utils.hwit_console",
            "hwit.core.utils.ingest",
            "hwit.core.utils.triage"
        ],
        "version": "0.02-r00672"
    },
    "hwit-edit": {
        "cmdline": [],
        "modules": [
            "hwit",
            "hwit.edit",
            "hwit.edit.about",
            "hwit.edit.app",
            "hwit.edit.doc",
            "hwit.edit.doc.conf",
            "hwit.edit.editors",
            "hwit.edit.main",
            "hwit.edit.resources",
            "hwit.edit.test",
            "hwit.edit.test.test_widget",
            "hwit.edit.widgets"
        ],
        "version": "0.01-r00662"
    },
    "hwit-examples": {
        "cmdline": [],
        "modules": [
            "hwit",
            "hwit.examples",
            "hwit.examples.about",
            "hwit.examples.common",
            "hwit.examples.doc",
            "hwit.examples.doc.conf"
        ],
        "version": "0.01-r00018"
    },
    "hwk": {
        "cmdline": [],
        "modules": [
            "hwk",
            "hwk.block",
            "hwk.cpu",
            "hwk.gpu",
            "hwk.memory",
            "hwk.net",
            "hwk.topology",
            "hwk.udev",
            "hwk.units",
            "hwk.utils"
        ],
        "version": "0.1"
    },
    "hwm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hwm93": {
        "cmdline": [],
        "modules": [
            "hwm93",
            "hwm93.plots"
        ],
        "version": "0.9.1"
    },
    "hwmasfoy": {
        "cmdline": [],
        "modules": [
            "hwmasfoy"
        ],
        "version": "1.1.0"
    },
    "hwmon": {
        "cmdline": [],
        "modules": [
            "hwmon",
            "hwmon.hwmon",
            "hwmon.utils"
        ],
        "version": "1.0"
    },
    "hwmonitor": {
        "cmdline": [],
        "modules": [
            "hwmonitor"
        ],
        "version": "2020.7.1"
    },
    "hwmuliarska": {
        "cmdline": [],
        "modules": [
            "hwmuliarska",
            "hwmuliarska.program"
        ],
        "version": "7.0.0"
    },
    "hwobs": {
        "cmdline": [],
        "modules": [
            "hwobs"
        ],
        "version": "1.0.1"
    },
    "hwp": {
        "cmdline": [],
        "modules": [
            "hwp",
            "hwp.import_python",
            "hwp.test_python"
        ],
        "version": "0.0.999"
    },
    "hwp-py": {
        "cmdline": [],
        "modules": [
            "hwp",
            "hwp.enums",
            "hwp.hwpfile",
            "hwp.utils"
        ],
        "version": "0.0.2"
    },
    "hwpy": {
        "cmdline": [],
        "modules": [
            "hwpy",
            "hwpy._dmide",
            "hwpy._hwdisk",
            "hwpy._hwnet",
            "hwpy._hwpart",
            "hwpy.info"
        ],
        "version": "0.3.7"
    },
    "hwpythonnester": {
        "cmdline": [],
        "modules": [
            "hwpythonnester"
        ],
        "version": "1.0.0"
    },
    "hwrapper": {
        "cmdline": [],
        "modules": [
            "Hwrapper",
            "Hwrapper.Hwrapper"
        ],
        "version": "0.2"
    },
    "hwrk": {
        "cmdline": [],
        "modules": [
            "hwrk",
            "hwrk.main"
        ],
        "version": "0.3"
    },
    "hwrt": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "hwsupermath": {
        "cmdline": [],
        "modules": [
            "hwSuperMath",
            "hwSuperMath.demo1",
            "hwSuperMath.demo2"
        ],
        "version": "1.0"
    },
    "hwt": {
        "cmdline": [],
        "modules": [
            "hwt",
            "hwt.code",
            "hwt.code_utils",
            "hwt.constraints",
            "hwt.doc_markers",
            "hwt.hdl",
            "hwt.hdl.assignment",
            "hwt.hdl.block",
            "hwt.hdl.constants",
            "hwt.hdl.frameTmpl",
            "hwt.hdl.frameTmplUtils",
            "hwt.hdl.hdlObject",
            "hwt.hdl.ifContainter",
            "hwt.hdl.operator",
            "hwt.hdl.operatorDefs",
            "hwt.hdl.operatorUtils",
            "hwt.hdl.portItem",
            "hwt.hdl.sensitivityCtx",
            "hwt.hdl.statement",
            "hwt.hdl.statementUtils",
            "hwt.hdl.switchContainer",
            "hwt.hdl.transPart",
            "hwt.hdl.transTmpl",
            "hwt.hdl.typeShortcuts",
            "hwt.hdl.types",
            "hwt.hdl.types.array",
            "hwt.hdl.types.arrayCast",
            "hwt.hdl.types.arrayVal",
            "hwt.hdl.types.bitValFunctions",
            "hwt.hdl.types.bitVal_opReduce",
            "hwt.hdl.types.bits",
            "hwt.hdl.types.bitsCast",
            "hwt.hdl.types.bitsVal",
            "hwt.hdl.types.defs",
            "hwt.hdl.types.enum",
            "hwt.hdl.types.enumVal",
            "hwt.hdl.types.eventCapableVal",
            "hwt.hdl.types.hdlType",
            "hwt.hdl.types.slice",
            "hwt.hdl.types.sliceUtils",
            "hwt.hdl.types.sliceVal",
            "hwt.hdl.types.stream",
            "hwt.hdl.types.streamVal",
            "hwt.hdl.types.string",
            "hwt.hdl.types.stringVal",
            "hwt.hdl.types.struct",
            "hwt.hdl.types.structCast",
            "hwt.hdl.types.structUtils",
            "hwt.hdl.types.structValBase",
            "hwt.hdl.types.typeCast",
            "hwt.hdl.types.union",
            "hwt.hdl.types.utils",
            "hwt.hdl.value",
            "hwt.hdl.variables",
            "hwt.interfaces",
            "hwt.interfaces.agents",
            "hwt.interfaces.agents.bramPort",
            "hwt.interfaces.agents.fifo",
            "hwt.interfaces.agents.handshaked",
            "hwt.interfaces.agents.rdSynced",
            "hwt.interfaces.agents.regCntrl",
            "hwt.interfaces.agents.signal",
            "hwt.interfaces.agents.structIntf",
            "hwt.interfaces.agents.unionIntf",
            "hwt.interfaces.agents.vldSynced",
            "hwt.interfaces.differential",
            "hwt.interfaces.intf_map",
            "hwt.interfaces.signalOps",
            "hwt.interfaces.std",
            "hwt.interfaces.std_ip_defs",
            "hwt.interfaces.structIntf",
            "hwt.interfaces.tristate",
            "hwt.interfaces.unionIntf",
            "hwt.interfaces.utils",
            "hwt.pyUtils",
            "hwt.pyUtils.arrayQuery",
            "hwt.pyUtils.fileHelpers",
            "hwt.pyUtils.testUtils",
            "hwt.pyUtils.uniqList",
            "hwt.serializer",
            "hwt.serializer.combLoopAnalyzer",
            "hwt.serializer.combLoopAnalyzer.tarjan",
            "hwt.serializer.exceptions",
            "hwt.serializer.generic",
            "hwt.serializer.generic.constant_cache",
            "hwt.serializer.generic.indent",
            "hwt.serializer.generic.ops",
            "hwt.serializer.generic.to_hdl_ast",
            "hwt.serializer.generic.utils",
            "hwt.serializer.generic.value",
            "hwt.serializer.hwt",
            "hwt.serializer.hwt.context",
            "hwt.serializer.hwt.ops",
            "hwt.serializer.hwt.serializer",
            "hwt.serializer.hwt.types",
            "hwt.serializer.hwt.value",
            "hwt.serializer.ip_packager",
            "hwt.serializer.mode",
            "hwt.serializer.resourceAnalyzer",
            "hwt.serializer.resourceAnalyzer.analyzer",
            "hwt.serializer.resourceAnalyzer.resourceTypes",
            "hwt.serializer.resourceAnalyzer.utils",
            "hwt.serializer.serializer_config",
            "hwt.serializer.serializer_filter",
            "hwt.serializer.simModel",
            "hwt.serializer.simModel.serializer",
            "hwt.serializer.simModel.types",
            "hwt.serializer.simModel.value",
            "hwt.serializer.store_manager",
            "hwt.serializer.systemC",
            "hwt.serializer.systemC.expr",
            "hwt.serializer.systemC.serializer",
            "hwt.serializer.systemC.statements",
            "hwt.serializer.systemC.type",
            "hwt.serializer.systemC.utils",
            "hwt.serializer.utils",
            "hwt.serializer.verilog",
            "hwt.serializer.verilog.context",
            "hwt.serializer.verilog.ops",
            "hwt.serializer.verilog.serializer",
            "hwt.serializer.verilog.statements",
            "hwt.serializer.verilog.types",
            "hwt.serializer.verilog.utils",
            "hwt.serializer.verilog.value",
            "hwt.serializer.vhdl",
            "hwt.serializer.vhdl.ops",
            "hwt.serializer.vhdl.serializer",
            "hwt.serializer.vhdl.statements",
            "hwt.serializer.vhdl.types",
            "hwt.serializer.vhdl.value",
            "hwt.serializer.xdc",
            "hwt.serializer.xdc.serializer",
            "hwt.simulator",
            "hwt.simulator.agentBase",
            "hwt.simulator.agentConnector",
            "hwt.simulator.rtlSimulator",
            "hwt.simulator.rtlSimulatorJson",
            "hwt.simulator.rtlSimulatorVcd",
            "hwt.simulator.rtlSimulatorVerilator",
            "hwt.simulator.shortcuts",
            "hwt.simulator.simTestCase",
            "hwt.simulator.utils",
            "hwt.synthesizer",
            "hwt.synthesizer.byteOrder",
            "hwt.synthesizer.componentPath",
            "hwt.synthesizer.dummyPlatform",
            "hwt.synthesizer.exceptions",
            "hwt.synthesizer.hObjList",
            "hwt.synthesizer.interface",
            "hwt.synthesizer.interfaceLevel",
            "hwt.synthesizer.interfaceLevel.emptyUnit",
            "hwt.synthesizer.interfaceLevel.interfaceUtils",
            "hwt.synthesizer.interfaceLevel.interfaceUtils.directionFns",
            "hwt.synthesizer.interfaceLevel.interfaceUtils.implDependent",
            "hwt.synthesizer.interfaceLevel.interfaceUtils.utils",
            "hwt.synthesizer.interfaceLevel.mainBases",
            "hwt.synthesizer.interfaceLevel.propDeclrCollector",
            "hwt.synthesizer.interfaceLevel.unitImplHelpers",
            "hwt.synthesizer.param",
            "hwt.synthesizer.rtlLevel",
            "hwt.synthesizer.rtlLevel.mainBases",
            "hwt.synthesizer.rtlLevel.mark_visibility_of_signals_and_check_drivers",
            "hwt.synthesizer.rtlLevel.memory",
            "hwt.synthesizer.rtlLevel.netlist",
            "hwt.synthesizer.rtlLevel.reduce_processes",
            "hwt.synthesizer.rtlLevel.remove_unconnected_signals",
            "hwt.synthesizer.rtlLevel.rtlSignal",
            "hwt.synthesizer.rtlLevel.signalUtils",
            "hwt.synthesizer.rtlLevel.signalUtils.exceptions",
            "hwt.synthesizer.rtlLevel.signalUtils.ops",
            "hwt.synthesizer.rtlLevel.signalUtils.walkers",
            "hwt.synthesizer.rtlLevel.statements_to_HdlStatementBlocks",
            "hwt.synthesizer.rtlLevel.utils",
            "hwt.synthesizer.typePath",
            "hwt.synthesizer.unit",
            "hwt.synthesizer.utils",
            "hwt.synthesizer.vectorUtils"
        ],
        "version": "3.6"
    },
    "hwtgraph": {
        "cmdline": [],
        "modules": [
            "hwtGraph",
            "hwtGraph.elk",
            "hwtGraph.elk.containers",
            "hwtGraph.elk.containers.constants",
            "hwtGraph.elk.containers.idStore",
            "hwtGraph.elk.containers.lEdge",
            "hwtGraph.elk.containers.lNode",
            "hwtGraph.elk.containers.lPort",
            "hwtGraph.elk.fromHwt",
            "hwtGraph.elk.fromHwt.connectSignalToStatements",
            "hwtGraph.elk.fromHwt.convertor",
            "hwtGraph.elk.fromHwt.defauts",
            "hwtGraph.elk.fromHwt.extractSplits",
            "hwtGraph.elk.fromHwt.flattenPorts",
            "hwtGraph.elk.fromHwt.flattenTrees",
            "hwtGraph.elk.fromHwt.mergeSplitsOnInterfaces",
            "hwtGraph.elk.fromHwt.netCtx",
            "hwtGraph.elk.fromHwt.netlistPreprocessors",
            "hwtGraph.elk.fromHwt.reduceUselessAssignments",
            "hwtGraph.elk.fromHwt.resolveSharedConnections",
            "hwtGraph.elk.fromHwt.sortStatementPorts",
            "hwtGraph.elk.fromHwt.statementRenderer",
            "hwtGraph.elk.fromHwt.statementRendererUtils",
            "hwtGraph.elk.fromHwt.utils",
            "hwtGraph.tests",
            "hwtGraph.tests.conversibility_test"
        ],
        "version": "1.9"
    },
    "hwtlib": {
        "cmdline": [],
        "modules": [
            "hwtLib",
            "hwtLib.abstract",
            "hwtLib.abstract.busBridge",
            "hwtLib.abstract.busEndpoint",
            "hwtLib.abstract.busEndpoint_test",
            "hwtLib.abstract.busInterconnect",
            "hwtLib.abstract.denseMemory",
            "hwtLib.abstract.discoverAddressSpace",
            "hwtLib.abstract.streamBuilder",
            "hwtLib.amba",
            "hwtLib.amba.axi3",
            "hwtLib.amba.axi3Lite",
            "hwtLib.amba.axi4",
            "hwtLib.amba.axi4Lite",
            "hwtLib.amba.axiLite_comp",
            "hwtLib.amba.axiLite_comp.endpoint",
            "hwtLib.amba.axiLite_comp.endpoint_arr_test",
            "hwtLib.amba.axiLite_comp.endpoint_fromInterfaces_test",
            "hwtLib.amba.axiLite_comp.endpoint_struct_test",
            "hwtLib.amba.axiLite_comp.endpoint_test",
            "hwtLib.amba.axiLite_comp.reg",
            "hwtLib.amba.axiLite_comp.reg_test",
            "hwtLib.amba.axi_ag_test",
            "hwtLib.amba.axi_comp",
            "hwtLib.amba.axi_comp.axi4_rDatapump",
            "hwtLib.amba.axi_comp.axi4_rDatapump_test",
            "hwtLib.amba.axi_comp.axi4_streamToMem",
            "hwtLib.amba.axi_comp.axi4_streamToMem_test",
            "hwtLib.amba.axi_comp.axi4_wDatapump",
            "hwtLib.amba.axi_comp.axi4_wDatapump_test",
            "hwtLib.amba.axi_comp.axi_datapump_base",
            "hwtLib.amba.axi_comp.axi_datapump_intf",
            "hwtLib.amba.axi_comp.axi_datapump_utils",
            "hwtLib.amba.axi_comp.tester",
            "hwtLib.amba.axi_comp.tester_test",
            "hwtLib.amba.axi_comp.transCounter",
            "hwtLib.amba.axi_intf_common",
            "hwtLib.amba.axi_test",
            "hwtLib.amba.axis",
            "hwtLib.amba.axis_comp",
            "hwtLib.amba.axis_comp.base",
            "hwtLib.amba.axis_comp.builder",
            "hwtLib.amba.axis_comp.en",
            "hwtLib.amba.axis_comp.en_test",
            "hwtLib.amba.axis_comp.fifo",
            "hwtLib.amba.axis_comp.frameForge",
            "hwtLib.amba.axis_comp.frameForge_test",
            "hwtLib.amba.axis_comp.frameGen",
            "hwtLib.amba.axis_comp.frameGen_test",
            "hwtLib.amba.axis_comp.frameParser",
            "hwtLib.amba.axis_comp.frameParser_test",
            "hwtLib.amba.axis_comp.frameParser_utils",
            "hwtLib.amba.axis_comp.localLinkConv",
            "hwtLib.amba.axis_comp.localLinkConv_test",
            "hwtLib.amba.axis_comp.measuringFifo",
            "hwtLib.amba.axis_comp.measuringFifo_test",
            "hwtLib.amba.axis_comp.reg",
            "hwtLib.amba.axis_comp.resizer",
            "hwtLib.amba.axis_comp.resizer_test",
            "hwtLib.amba.axis_comp.splitCopy",
            "hwtLib.amba.axis_comp.splitSelect",
            "hwtLib.amba.axis_comp.storedBurst",
            "hwtLib.amba.axis_comp.storedBurst_test",
            "hwtLib.amba.axis_comp.templateBasedUnit",
            "hwtLib.amba.constants",
            "hwtLib.amba.fullDuplexAxiStream",
            "hwtLib.amba.interconnect",
            "hwtLib.amba.interconnect.axiInterconnectbase",
            "hwtLib.amba.interconnect.rStricOrder",
            "hwtLib.amba.interconnect.rStrictOrder_test",
            "hwtLib.amba.interconnect.wStrictOrder",
            "hwtLib.amba.interconnect.wStrictOrderComplex_test",
            "hwtLib.amba.interconnect.wStrictOrder_test",
            "hwtLib.amba.sim",
            "hwtLib.amba.sim.agentCommon",
            "hwtLib.amba.sim.axi3DenseMem",
            "hwtLib.amba.sim.axiMemSpaceMaster",
            "hwtLib.avalon",
            "hwtLib.avalon.endpoint",
            "hwtLib.avalon.endpoint_test",
            "hwtLib.avalon.memSpaceMaster",
            "hwtLib.avalon.mm",
            "hwtLib.avalon.mmAgent_test",
            "hwtLib.avalon.st",
            "hwtLib.avalon.stAgent_test",
            "hwtLib.clocking",
            "hwtLib.clocking.clkBuilder",
            "hwtLib.clocking.clkDivider",
            "hwtLib.clocking.clkSynchronizer",
            "hwtLib.clocking.clkSynchronizer_test",
            "hwtLib.clocking.timers",
            "hwtLib.examples",
            "hwtLib.examples.arithmetic",
            "hwtLib.examples.arithmetic.cntr",
            "hwtLib.examples.arithmetic.cntr_test",
            "hwtLib.examples.arithmetic.selfRefCntr",
            "hwtLib.examples.arithmetic.selfRefCntr_test",
            "hwtLib.examples.arithmetic.twoCntrs",
            "hwtLib.examples.arithmetic.twoCntrs_test",
            "hwtLib.examples.arithmetic.widthCasting",
            "hwtLib.examples.axi",
            "hwtLib.examples.axi.simpleAxiRegs",
            "hwtLib.examples.axi.simpleAxiRegs_test",
            "hwtLib.examples.builders",
            "hwtLib.examples.builders.ethAddrUpdater",
            "hwtLib.examples.builders.ethAddrUpdater_test",
            "hwtLib.examples.builders.handshakedBuilderSimple",
            "hwtLib.examples.builders.hsBuilderSplit",
            "hwtLib.examples.builders.hsBuilderSplit_test",
            "hwtLib.examples.builders.pingResponder",
            "hwtLib.examples.builders.pingResponder_test",
            "hwtLib.examples.emptyUnitWithSpi",
            "hwtLib.examples.errors",
            "hwtLib.examples.errors.accessingSubunitInternalIntf",
            "hwtLib.examples.errors.errorsTestCase",
            "hwtLib.examples.errors.inconsistentIntfDirection",
            "hwtLib.examples.errors.invalidTypeConnetion",
            "hwtLib.examples.errors.multipleDriversOfChildNet",
            "hwtLib.examples.errors.unusedSubunit",
            "hwtLib.examples.hdlComments",
            "hwtLib.examples.hdlComments_test",
            "hwtLib.examples.hdlObjLists",
            "hwtLib.examples.hdlObjLists.listOfInterfaces0",
            "hwtLib.examples.hdlObjLists.listOfInterfaces1",
            "hwtLib.examples.hdlObjLists.listOfInterfaces2",
            "hwtLib.examples.hdlObjLists.listOfInterfaces3",
            "hwtLib.examples.hdlObjLists.listOfInterfaces4",
            "hwtLib.examples.hierarchy",
            "hwtLib.examples.hierarchy.groupOfBlockrams",
            "hwtLib.examples.hierarchy.hierarchySerialization_test",
            "hwtLib.examples.hierarchy.netFilter",
            "hwtLib.examples.hierarchy.simpleSubunit",
            "hwtLib.examples.hierarchy.simpleSubunit2",
            "hwtLib.examples.hierarchy.simpleSubunit3",
            "hwtLib.examples.hierarchy.simpleSubunit_test",
            "hwtLib.examples.hierarchy.unitToUnitConnection",
            "hwtLib.examples.hierarchy.unitWrapper",
            "hwtLib.examples.hierarchy.unitWrapper_test",
            "hwtLib.examples.mem",
            "hwtLib.examples.mem.bram_wire",
            "hwtLib.examples.mem.ram",
            "hwtLib.examples.mem.ram_test",
            "hwtLib.examples.mem.reg",
            "hwtLib.examples.mem.reg_test",
            "hwtLib.examples.mem.rom",
            "hwtLib.examples.mem.rom_test",
            "hwtLib.examples.operators",
            "hwtLib.examples.operators.concat",
            "hwtLib.examples.operators.concat_test",
            "hwtLib.examples.operators.indexing",
            "hwtLib.examples.operators.indexing_test",
            "hwtLib.examples.parametrization",
            "hwtLib.examples.parametrization_test",
            "hwtLib.examples.rtlLvl",
            "hwtLib.examples.rtlLvl.arithmetic",
            "hwtLib.examples.rtlLvl.arithmetic.counter",
            "hwtLib.examples.rtlLvl.arithmetic.leadingZero",
            "hwtLib.examples.rtlLvl.axiReaderCore",
            "hwtLib.examples.rtlLvl.complexConditions",
            "hwtLib.examples.rtlLvl.indexOps",
            "hwtLib.examples.rtlLvl.netlistToRtl",
            "hwtLib.examples.rtlLvl.rtlLvl_test",
            "hwtLib.examples.rtlLvl.simpleEnum",
            "hwtLib.examples.rtlLvl.simpleRegister",
            "hwtLib.examples.rtlLvl.simpleWhile",
            "hwtLib.examples.rtlLvl.switchStatement",
            "hwtLib.examples.showcase0",
            "hwtLib.examples.showcase0.hwt",
            "hwtLib.examples.showcase0_test",
            "hwtLib.examples.simple",
            "hwtLib.examples.simple2withNonDirectIntConnection",
            "hwtLib.examples.simpleAxiStream",
            "hwtLib.examples.simpleAxiStream_test",
            "hwtLib.examples.simpleWithNonDirectIntConncetion",
            "hwtLib.examples.simpleWithParam",
            "hwtLib.examples.simple_ip",
            "hwtLib.examples.simple_test",
            "hwtLib.examples.statements",
            "hwtLib.examples.statements.constCondition",
            "hwtLib.examples.statements.constDriver",
            "hwtLib.examples.statements.constDriver_test",
            "hwtLib.examples.statements.forLoopCntrl",
            "hwtLib.examples.statements.forLoopCntrl_test",
            "hwtLib.examples.statements.fsm",
            "hwtLib.examples.statements.fsm_test",
            "hwtLib.examples.statements.ifStm",
            "hwtLib.examples.statements.ifStm_test",
            "hwtLib.examples.statements.switchStm",
            "hwtLib.examples.statements.switchStm_test",
            "hwtLib.examples.statements.vldMaskConflictsResolving",
            "hwtLib.examples.statements.vldMaskConflictsResolving_test",
            "hwtLib.examples.timers",
            "hwtLib.handshaked",
            "hwtLib.handshaked.builder",
            "hwtLib.handshaked.compBase",
            "hwtLib.handshaked.fifo",
            "hwtLib.handshaked.fifoAsync",
            "hwtLib.handshaked.fifoAsync_test",
            "hwtLib.handshaked.fifo_test",
            "hwtLib.handshaked.intfBiDirectional",
            "hwtLib.handshaked.joinFair",
            "hwtLib.handshaked.joinFair_test",
            "hwtLib.handshaked.joinPrioritized",
            "hwtLib.handshaked.joinPrioritized_test",
            "hwtLib.handshaked.ramAsHs",
            "hwtLib.handshaked.ramAsHs_test",
            "hwtLib.handshaked.reg",
            "hwtLib.handshaked.reg_test",
            "hwtLib.handshaked.resizer",
            "hwtLib.handshaked.resizer_test",
            "hwtLib.handshaked.splitCopy",
            "hwtLib.handshaked.splitCopy_test",
            "hwtLib.handshaked.splitFair",
            "hwtLib.handshaked.splitPrioritized",
            "hwtLib.handshaked.splitSelect",
            "hwtLib.handshaked.streamNode",
            "hwtLib.img",
            "hwtLib.img.charToBitmap",
            "hwtLib.img.charToBitmap_test",
            "hwtLib.interfaces",
            "hwtLib.interfaces.addrDataHs",
            "hwtLib.interfaces.localLink",
            "hwtLib.ipif",
            "hwtLib.ipif.axiLite2ipif",
            "hwtLib.ipif.axiLite2ipif_test",
            "hwtLib.ipif.endpoint",
            "hwtLib.ipif.endpoint_test",
            "hwtLib.ipif.interconnectMatrix",
            "hwtLib.ipif.interconnectMatrix_test",
            "hwtLib.ipif.intf",
            "hwtLib.ipif.reg",
            "hwtLib.ipif.reg_test",
            "hwtLib.ipif.simMaster",
            "hwtLib.logic",
            "hwtLib.logic.binToOneHot",
            "hwtLib.logic.bitonicSorter",
            "hwtLib.logic.cntrGray",
            "hwtLib.logic.crc",
            "hwtLib.logic.crcComb",
            "hwtLib.logic.crcComb_test",
            "hwtLib.logic.crcPoly",
            "hwtLib.logic.crcUtils",
            "hwtLib.logic.crcUtils_test",
            "hwtLib.logic.crc_test",
            "hwtLib.logic.lsfr",
            "hwtLib.logic.oneHotToBin",
            "hwtLib.logic.oneHotToBin_test",
            "hwtLib.logic.pid",
            "hwtLib.mem",
            "hwtLib.mem.atomic",
            "hwtLib.mem.atomic.flipCntr",
            "hwtLib.mem.atomic.flipCntr_test",
            "hwtLib.mem.atomic.flipRam",
            "hwtLib.mem.atomic.flipRam_test",
            "hwtLib.mem.atomic.flipReg",
            "hwtLib.mem.atomic.flipReg_test",
            "hwtLib.mem.bramEndpoint_test",
            "hwtLib.mem.bramPortEndpoint",
            "hwtLib.mem.bramPortSimMemSpaceMaster",
            "hwtLib.mem.cam",
            "hwtLib.mem.cam_test",
            "hwtLib.mem.cuckooHashTable",
            "hwtLib.mem.cuckooHashTable_test",
            "hwtLib.mem.fifo",
            "hwtLib.mem.fifoAsync",
            "hwtLib.mem.fifoAsync_test",
            "hwtLib.mem.fifo_test",
            "hwtLib.mem.hashTableCore",
            "hwtLib.mem.hashTableCore_test",
            "hwtLib.mem.hashTable_intf",
            "hwtLib.mem.lutRam",
            "hwtLib.mem.lutRam_test",
            "hwtLib.mem.ram",
            "hwtLib.mem.ram_test",
            "hwtLib.peripheral",
            "hwtLib.peripheral.i2c",
            "hwtLib.peripheral.i2c.intf",
            "hwtLib.peripheral.i2c.masterBitCntrl",
            "hwtLib.peripheral.i2c.masterBitCntrl_test",
            "hwtLib.peripheral.segment7",
            "hwtLib.peripheral.segment7_test",
            "hwtLib.peripheral.spi",
            "hwtLib.peripheral.spi.intf",
            "hwtLib.peripheral.spi.master",
            "hwtLib.peripheral.spi.master_test",
            "hwtLib.peripheral.uart",
            "hwtLib.peripheral.uart.intf",
            "hwtLib.peripheral.uart.rx",
            "hwtLib.peripheral.uart.rx_test",
            "hwtLib.peripheral.uart.tx",
            "hwtLib.peripheral.uart.tx_rx_test",
            "hwtLib.peripheral.uart.tx_test",
            "hwtLib.sim",
            "hwtLib.sim.abstractMemSpaceMaster",
            "hwtLib.structManipulators",
            "hwtLib.structManipulators.arrayBuff_writer",
            "hwtLib.structManipulators.arrayBuff_writer_test",
            "hwtLib.structManipulators.arrayItemGetter",
            "hwtLib.structManipulators.arrayItemGetter_test",
            "hwtLib.structManipulators.cLinkedListReader",
            "hwtLib.structManipulators.cLinkedListReader_test",
            "hwtLib.structManipulators.cLinkedListWriter",
            "hwtLib.structManipulators.cLinkedListWriter_test",
            "hwtLib.structManipulators.mmu2pageLvl_test",
            "hwtLib.structManipulators.mmu_2pageLvl",
            "hwtLib.structManipulators.structReader",
            "hwtLib.structManipulators.structReader_test",
            "hwtLib.structManipulators.structWriter",
            "hwtLib.structManipulators.structWriter_test",
            "hwtLib.tests",
            "hwtLib.tests.all",
            "hwtLib.tests.fileUtils_test",
            "hwtLib.tests.frameTmpl_test",
            "hwtLib.tests.ipCorePackager_test",
            "hwtLib.tests.rdSynced_agent_test",
            "hwtLib.tests.resourceAnalyzer_test",
            "hwtLib.tests.serializerModes_test",
            "hwtLib.tests.serializer_tmpVar_test",
            "hwtLib.tests.simulatorUtlls_test",
            "hwtLib.tests.statementTrees",
            "hwtLib.tests.statementTreesInternal",
            "hwtLib.tests.statements",
            "hwtLib.tests.synthesizer",
            "hwtLib.tests.synthesizer.interfaceLevel",
            "hwtLib.tests.synthesizer.interfaceLevel.baseSynthesizerTC",
            "hwtLib.tests.synthesizer.interfaceLevel.interfaceSynthesizerTC",
            "hwtLib.tests.synthesizer.interfaceLevel.subunitsSynthesisTC",
            "hwtLib.tests.synthesizer.rtlLevel",
            "hwtLib.tests.synthesizer.rtlLevel.optimalizator",
            "hwtLib.tests.synthesizer.rtlLevel.synthesis",
            "hwtLib.tests.transTmpl_test",
            "hwtLib.tests.types",
            "hwtLib.tests.types.bitsSlicing_test",
            "hwtLib.tests.types.hstructVal_test",
            "hwtLib.tests.types.operators_test",
            "hwtLib.tests.types.union_test",
            "hwtLib.tests.types.value_test",
            "hwtLib.tests.unionIntf_test",
            "hwtLib.tests.vhdlSerializer_test",
            "hwtLib.types",
            "hwtLib.types.ctypes",
            "hwtLib.types.net",
            "hwtLib.types.net.arp",
            "hwtLib.types.net.dpdk",
            "hwtLib.types.net.eth",
            "hwtLib.types.net.icmp",
            "hwtLib.types.net.ip",
            "hwtLib.types.net.tcp",
            "hwtLib.types.net.udp"
        ],
        "version": "2.8"
    },
    "hwtypes": {
        "cmdline": [],
        "modules": [
            "hwtypes",
            "hwtypes.adt",
            "hwtypes.adt_meta",
            "hwtypes.adt_util",
            "hwtypes.bit_vector",
            "hwtypes.bit_vector_abc",
            "hwtypes.bit_vector_util",
            "hwtypes.compatibility",
            "hwtypes.fp_vector",
            "hwtypes.fp_vector_abc",
            "hwtypes.modifiers",
            "hwtypes.smt_bit_vector",
            "hwtypes.smt_fp_vector",
            "hwtypes.util",
            "hwtypes.z3_bit_vector"
        ],
        "version": "1.4.4"
    },
    "hwxml": {
        "cmdline": [],
        "modules": [
            "hwxml",
            "hwxml.parser",
            "hwxml.parser.models",
            "hwxml.parser.parse_special",
            "hwxml.parser.parse_trigger",
            "hwxml.parser.parser"
        ],
        "version": "1.0.9.1"
    },
    "hwy": {
        "cmdline": [
            "hellowy.py"
        ],
        "modules": [
            "hwy",
            "hwy.hellowy"
        ],
        "version": "0.0.4"
    },
    "hx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hx711": {
        "cmdline": [],
        "modules": [
            "hx711"
        ],
        "version": "1.1.2.3"
    },
    "hx711-gpiozero": {
        "cmdline": [],
        "modules": [
            "hx711_gpiozero"
        ],
        "version": "0.0.3"
    },
    "hxftestlib": {
        "cmdline": [],
        "modules": [
            "hxftestlib",
            "hxftestlib.hxflibone"
        ],
        "version": "1.1.6"
    },
    "hxgvtdjmab": {
        "cmdline": [],
        "modules": [
            "hxgvtdjmab",
            "hxgvtdjmab.api_helper",
            "hxgvtdjmab.configuration",
            "hxgvtdjmab.controllers",
            "hxgvtdjmab.controllers.api_controller",
            "hxgvtdjmab.controllers.base_controller",
            "hxgvtdjmab.decorators",
            "hxgvtdjmab.exceptions",
            "hxgvtdjmab.exceptions.api_exception",
            "hxgvtdjmab.http",
            "hxgvtdjmab.http.auth",
            "hxgvtdjmab.http.auth.basic_auth",
            "hxgvtdjmab.http.http_call_back",
            "hxgvtdjmab.http.http_client",
            "hxgvtdjmab.http.http_context",
            "hxgvtdjmab.http.http_method_enum",
            "hxgvtdjmab.http.http_request",
            "hxgvtdjmab.http.http_response",
            "hxgvtdjmab.http.requests_client",
            "hxgvtdjmab.hxgvtdjmab_client",
            "hxgvtdjmab.models",
            "hxgvtdjmab.models.suite_code_enum",
            "tests",
            "tests.controllers",
            "tests.controllers.controller_test_base",
            "tests.controllers.test_api_controller",
            "tests.http_response_catcher",
            "tests.test_helper"
        ],
        "version": "1.1"
    },
    "hxh": {
        "cmdline": [],
        "modules": [
            "hxh"
        ],
        "version": "0.3"
    },
    "hxl": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "hxl-proxy": {
        "cmdline": [],
        "modules": [
            "hxl_proxy",
            "hxl_proxy.admin",
            "hxl_proxy.auth",
            "hxl_proxy.controllers",
            "hxl_proxy.dao",
            "hxl_proxy.default_config",
            "hxl_proxy.exceptions",
            "hxl_proxy.filters",
            "hxl_proxy.pcodes",
            "hxl_proxy.preview",
            "hxl_proxy.recipes",
            "hxl_proxy.reverse_proxied",
            "hxl_proxy.util",
            "hxl_proxy.validate"
        ],
        "version": "1.21.2"
    },
    "hxlti-djapp": {
        "cmdline": [],
        "modules": [
            "hxlti",
            "hxlti.admin",
            "hxlti.apps",
            "hxlti.decorators",
            "hxlti.migrations",
            "hxlti.migrations.0001_initial",
            "hxlti.models",
            "hxlti.tests",
            "hxlti.urls",
            "hxlti.validators",
            "hxlti.views"
        ],
        "version": "0.2.1"
    },
    "hxlxalgotrt": {
        "cmdline": [],
        "modules": [
            "hxlxalgos",
            "hxlxalgos.algos",
            "hxlxalgos.algos.blur_detect",
            "hxlxalgos.algos.classification",
            "hxlxalgos.algos.detection",
            "hxlxalgos.algos.face_align",
            "hxlxalgos.algos.face_front_level",
            "hxlxalgos.algos.face_landmark",
            "hxlxalgos.algos.face_recg",
            "hxlxalgos.algos.pose_estimation",
            "hxlxalgos.cfg",
            "hxlxalgos.core",
            "hxlxalgos.core.trt_exec",
            "hxlxalgos.external",
            "hxlxalgos.fantasy",
            "hxlxalgos.utils",
            "hxlxalgos.utils.al_util",
            "hxlxalgos.utils.coco_util",
            "hxlxalgos.utils.common",
            "hxlxalgos.utils.intersect",
            "hxlxalgos.utils.view_util"
        ],
        "version": "0.0.3"
    },
    "hxmk": {
        "cmdline": [],
        "modules": [
            "HXMK",
            "HXMK.coloring",
            "HXMK.environment",
            "HXMK.pattern_parser"
        ],
        "version": "0.0.9"
    },
    "hxntools": {
        "cmdline": [],
        "modules": [
            "hxntools",
            "hxntools._version",
            "hxntools.anc350",
            "hxntools.detectors",
            "hxntools.detectors.beamstatus",
            "hxntools.detectors.dexela",
            "hxntools.detectors.hxn_xspress3",
            "hxntools.detectors.mercury",
            "hxntools.detectors.merlin",
            "hxntools.detectors.timepix",
            "hxntools.detectors.trigger_mixins",
            "hxntools.detectors.utils",
            "hxntools.detectors.zebra",
            "hxntools.device",
            "hxntools.handlers",
            "hxntools.handlers.timepix",
            "hxntools.handlers.xspress3",
            "hxntools.interp",
            "hxntools.scan_info",
            "hxntools.scan_monitor",
            "hxntools.scan_number",
            "hxntools.scan_status",
            "hxntools.scans",
            "hxntools.shutter",
            "hxntools.struck_scaler"
        ],
        "version": "0.5.1"
    },
    "hxrsnd": {
        "cmdline": [],
        "modules": [
            "hxrsnd",
            "hxrsnd._version",
            "hxrsnd.aerotech",
            "hxrsnd.attocube",
            "hxrsnd.bragg",
            "hxrsnd.diode",
            "hxrsnd.exceptions",
            "hxrsnd.macromotor",
            "hxrsnd.plans",
            "hxrsnd.plans.alignment",
            "hxrsnd.plans.calibration",
            "hxrsnd.plans.plan_stubs",
            "hxrsnd.plans.preprocessors",
            "hxrsnd.plans.scans",
            "hxrsnd.pneumatic",
            "hxrsnd.rtd",
            "hxrsnd.sequencer",
            "hxrsnd.snddevice",
            "hxrsnd.sndmotor",
            "hxrsnd.sndsystem",
            "hxrsnd.state",
            "hxrsnd.tests",
            "hxrsnd.tests.conftest",
            "hxrsnd.tests.test_aerotech",
            "hxrsnd.tests.test_attocube",
            "hxrsnd.tests.test_plans_alignment",
            "hxrsnd.tests.test_plans_calibration",
            "hxrsnd.tests.test_plans_plan_stubs",
            "hxrsnd.tests.test_plans_preprocessors",
            "hxrsnd.tests.test_plans_scans",
            "hxrsnd.tests.test_pneumatic",
            "hxrsnd.tests.test_rtd",
            "hxrsnd.tests.test_scripts",
            "hxrsnd.tests.test_sequencer",
            "hxrsnd.tests.test_snd_devices",
            "hxrsnd.tests.test_snddevice",
            "hxrsnd.tests.test_sndmotor",
            "hxrsnd.tests.test_sndsystem",
            "hxrsnd.tests.test_states",
            "hxrsnd.tests.test_tower",
            "hxrsnd.tests.test_utils",
            "hxrsnd.tower",
            "hxrsnd.utils"
        ],
        "version": "0.1.4"
    },
    "hxsd": {
        "cmdline": [],
        "modules": [
            "hxsd"
        ],
        "version": "0.1.0"
    },
    "hxwacoyztm": {
        "cmdline": [],
        "modules": [
            "hxwacoyztm",
            "hxwacoyztm.api_helper",
            "hxwacoyztm.configuration",
            "hxwacoyztm.controllers",
            "hxwacoyztm.controllers.api_controller",
            "hxwacoyztm.controllers.base_controller",
            "hxwacoyztm.decorators",
            "hxwacoyztm.exceptions",
            "hxwacoyztm.exceptions.api_exception",
            "hxwacoyztm.http",
            "hxwacoyztm.http.auth",
            "hxwacoyztm.http.auth.basic_auth",
            "hxwacoyztm.http.http_call_back",
            "hxwacoyztm.http.http_client",
            "hxwacoyztm.http.http_context",
            "hxwacoyztm.http.http_method_enum",
            "hxwacoyztm.http.http_request",
            "hxwacoyztm.http.http_response",
            "hxwacoyztm.http.requests_client",
            "hxwacoyztm.hxwacoyztm_client",
            "hxwacoyztm.models",
            "hxwacoyztm.models.suite_code_enum",
            "tests",
            "tests.controllers",
            "tests.controllers.controller_test_base",
            "tests.controllers.test_api_controller",
            "tests.http_response_catcher",
            "tests.test_helper"
        ],
        "version": "1.1"
    },
    "hxx-nester1": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hy": {
        "cmdline": [],
        "modules": [
            "hy",
            "hy._compat",
            "hy.cmdline",
            "hy.compiler",
            "hy.completer",
            "hy.contrib",
            "hy.core",
            "hy.errors",
            "hy.extra",
            "hy.importer",
            "hy.lex",
            "hy.lex.exceptions",
            "hy.lex.lexer",
            "hy.lex.parser",
            "hy.macros",
            "hy.model_patterns",
            "hy.models",
            "hy.version"
        ],
        "version": "0.19.0"
    },
    "hy-coverage-plugin": {
        "cmdline": [],
        "modules": [
            "hy_coverage_plugin",
            "hy_coverage_plugin.hy_coverage"
        ],
        "version": "0.1.0"
    },
    "hy-kernel": {
        "cmdline": [],
        "modules": [
            "hy_kernel",
            "hy_kernel.hy_kernel",
            "hy_kernel.hy_setup",
            "hy_kernel.tests",
            "hy_kernel.tests.test_input",
            "hy_kernel.tests.test_notebook",
            "hy_kernel.version"
        ],
        "version": "0.3.0"
    },
    "hy-nester": {
        "cmdline": [],
        "modules": [
            "hy_nester"
        ],
        "version": "1.3.0"
    },
    "hy-sshapi": {
        "cmdline": [],
        "modules": [
            "SSH_Operation",
            "SSH_Operation.SSH_Operation",
            "SSH_Operation.forward",
            "SSH_Operation.interactive"
        ],
        "version": "2019.9.29.2335"
    },
    "hy015removed": {
        "cmdline": [],
        "modules": [
            "hy015removed"
        ],
        "version": "0.1.1"
    },
    "hy2glsl": {
        "cmdline": [],
        "modules": [
            "hy2glsl"
        ],
        "version": "0.0.2"
    },
    "hy454": {
        "cmdline": [],
        "modules": [
            "hy454",
            "hy454._annotate",
            "hy454._basefont",
            "hy454._codonaligner",
            "hy454._common",
            "hy454._compensatory",
            "hy454._divestimator",
            "hy454._fel",
            "hy454._graph",
            "hy454._mdr_variants",
            "hy454._preprocessing",
            "hy454._rate_class_neb",
            "hy454._region_extract",
            "hy454._reporter",
            "hy454._resistance",
            "hy454._server",
            "hy454._variants"
        ],
        "version": "0.4.4"
    },
    "hyaml": {
        "cmdline": [],
        "modules": [
            "hyaml",
            "hyaml.compiler",
            "hyaml.grammar",
            "hyaml.grammar.HyamlLexer",
            "hyaml.grammar.HyamlListener",
            "hyaml.grammar.HyamlParser",
            "hyaml.methods",
            "hyaml.methods.assignment",
            "hyaml.methods.network",
            "hyaml.methods.prelude",
            "hyaml.methods.prelude.array",
            "hyaml.methods.prelude.dictionary",
            "hyaml.methods.prelude.number",
            "hyaml.methods.prelude.polymorphic",
            "hyaml.methods.prelude.runtime",
            "hyaml.methods.prelude.string",
            "hyaml.methods.units",
            "hyaml.translator"
        ],
        "version": "0.1.6"
    },
    "hyanova": {
        "cmdline": [],
        "modules": [
            "hyanova",
            "hyanova.hyanova"
        ],
        "version": "1.1.2"
    },
    "hyapi": {
        "cmdline": [],
        "modules": [
            "hyapi",
            "hyapi.api",
            "hyapi.auth",
            "hyapi.error",
            "hyapi.pkcs7"
        ],
        "version": "0.1.0"
    },
    "hybayes": {
        "cmdline": [],
        "modules": [
            "HyBayes",
            "HyBayes.Bayes_factor_analysis",
            "HyBayes.experiment",
            "HyBayes.make_configs",
            "HyBayes.make_data",
            "HyBayes.models",
            "HyBayes.models.beta_bern_model",
            "HyBayes.models.beta_binomial_model",
            "HyBayes.models.contingency_model",
            "HyBayes.models.count_model",
            "HyBayes.models.inv_model",
            "HyBayes.models.metric_model",
            "HyBayes.models.ordinal_model",
            "HyBayes.utils",
            "HyBayes.visualization"
        ],
        "version": "0.0.3"
    },
    "hybkit": {
        "cmdline": [
            "hyb_analysis",
            "hyb_check",
            "hyb_filter",
            "hyb_type_analysis"
        ],
        "modules": [
            "hybkit",
            "hybkit.__about__",
            "hybkit.analysis",
            "hybkit.plot",
            "hybkit.util"
        ],
        "version": "0.2.0"
    },
    "hybra-core": {
        "cmdline": [],
        "modules": [
            "hybra",
            "hybra.analysis",
            "hybra.analysis.run",
            "hybra.analysis.runr",
            "hybra.analysis.topicmodel",
            "hybra.analysis.topicmodel.lemmatize",
            "hybra.core",
            "hybra.descriptives",
            "hybra.helpers",
            "hybra.helpers.counters",
            "hybra.helpers.exporter",
            "hybra.helpers.filters",
            "hybra.helpers.urls",
            "hybra.loaders",
            "hybra.loaders.common",
            "hybra.loaders.facebook",
            "hybra.loaders.futusome",
            "hybra.loaders.mediacloud",
            "hybra.loaders.news",
            "hybra.loaders.s24",
            "hybra.loaders.twitter",
            "hybra.network",
            "hybra.network.module_network",
            "hybra.timeline",
            "hybra.timeline.module_timeline",
            "hybra.wordclouds"
        ],
        "version": "0.1.2a1"
    },
    "hybrid": {
        "cmdline": [],
        "modules": [
            "hybrid",
            "hybrid.commands",
            "hybrid.exceptions",
            "hybrid.metaclass",
            "hybrid.middlewares",
            "hybrid.skeleton",
            "hybrid.skeleton.project",
            "hybrid.skeleton.project.controllers",
            "hybrid.skeleton.project.controllers.base_handler",
            "hybrid.skeleton.project.controllers.example_of_tornado_handlers",
            "hybrid.skeleton.project.modules",
            "hybrid.skeleton.project.settings",
            "hybrid.skeleton.project.views",
            "hybrid.skeleton.project.wsgi",
            "hybrid.tests",
            "hybrid.tests.test_convert",
            "hybrid.util",
            "hybrid.util.db",
            "hybrid.util.simple_convert",
            "hybrid.util.test_wsgi",
            "hybrid.wsgi_app",
            "hybrid.wsgi_app.base_wsgi",
            "hybrid.wsgi_app.flask_wsgi",
            "hybrid.wsgi_app.tornado_wsgi"
        ],
        "version": "1.2.3"
    },
    "hybrid-attributes": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hybrid-crypto": {
        "cmdline": [],
        "modules": [
            "hybrid_crypto",
            "hybrid_crypto.aes",
            "hybrid_crypto.crypto",
            "hybrid_crypto.utils"
        ],
        "version": "0.1.0-dev"
    },
    "hybrid-recommender": {
        "cmdline": [],
        "modules": [
            "hybrid_recommender",
            "hybrid_recommender.hybrid_recommender"
        ],
        "version": "0.4"
    },
    "hybrid-recommender-devsahu99": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hybrid-type-system": {
        "cmdline": [],
        "modules": [
            "hybridts",
            "hybridts.exc",
            "hybridts.tc_state",
            "hybridts.type_encoding"
        ],
        "version": "0.2"
    },
    "hybrid-vector-model": {
        "cmdline": [],
        "modules": [
            "hybrid_vector_model",
            "hybrid_vector_model._autograd_ext",
            "hybrid_vector_model.boater_movement_model",
            "hybrid_vector_model.hybrid_vector_model",
            "hybrid_vector_model.route_choice_model",
            "hybrid_vector_model.statsutils",
            "hybrid_vector_model.traveltime_model"
        ],
        "version": "0.9.0b6"
    },
    "hybridandroiddriver": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "hybridbosse": {
        "cmdline": [],
        "modules": [
            "hybridbosse",
            "hybridbosse.LandBOSSE",
            "hybridbosse.LandBOSSE.landbosse.excelio",
            "hybridbosse.LandBOSSE.landbosse.excelio.CsvGenerator",
            "hybridbosse.LandBOSSE.landbosse.excelio.GridSearchTree",
            "hybridbosse.LandBOSSE.landbosse.excelio.WeatherWindowCSVReader",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxDataframeCache",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxFileOperations",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxGenerator",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxManagerRunner",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxOperationException",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxParallelManagerRunner",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxReader",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxSerialManagerRunner",
            "hybridbosse.LandBOSSE.landbosse.excelio.XlsxValidator",
            "hybridbosse.LandBOSSE.landbosse.landbosse_api",
            "hybridbosse.LandBOSSE.landbosse.landbosse_api.run",
            "hybridbosse.LandBOSSE.landbosse.landbosse_api.turbine_scaling",
            "hybridbosse.LandBOSSE.landbosse.model",
            "hybridbosse.LandBOSSE.landbosse.model.CollectionCost",
            "hybridbosse.LandBOSSE.landbosse.model.CostModule",
            "hybridbosse.LandBOSSE.landbosse.model.DefaultMasterInputDict",
            "hybridbosse.LandBOSSE.landbosse.model.DevelopmentCost",
            "hybridbosse.LandBOSSE.landbosse.model.ErectionCost",
            "hybridbosse.LandBOSSE.landbosse.model.FoundationCost",
            "hybridbosse.LandBOSSE.landbosse.model.GridConnectionCost",
            "hybridbosse.LandBOSSE.landbosse.model.ManagementCost",
            "hybridbosse.LandBOSSE.landbosse.model.Manager",
            "hybridbosse.LandBOSSE.landbosse.model.SitePreparationCost",
            "hybridbosse.LandBOSSE.landbosse.model.SubstationCost",
            "hybridbosse.LandBOSSE.landbosse.model.WeatherDelay",
            "hybridbosse.LandBOSSE.landbosse.tests",
            "hybridbosse.LandBOSSE.main",
            "hybridbosse.LandBOSSE.setup",
            "hybridbosse.SolarBOSSE",
            "hybridbosse.SolarBOSSE.excelio",
            "hybridbosse.SolarBOSSE.excelio.XlsxDataframeCache",
            "hybridbosse.SolarBOSSE.excelio.create_master_input_dict",
            "hybridbosse.SolarBOSSE.main",
            "hybridbosse.SolarBOSSE.model",
            "hybridbosse.SolarBOSSE.model.CollectionCost",
            "hybridbosse.SolarBOSSE.model.CostModule",
            "hybridbosse.SolarBOSSE.model.FoundationCost",
            "hybridbosse.SolarBOSSE.model.GridConnectionCost",
            "hybridbosse.SolarBOSSE.model.InverterTransformerErection",
            "hybridbosse.SolarBOSSE.model.ManagementCost",
            "hybridbosse.SolarBOSSE.model.Manager",
            "hybridbosse.SolarBOSSE.model.RackingSystemInstallation",
            "hybridbosse.SolarBOSSE.model.SitePreparationCost",
            "hybridbosse.SolarBOSSE.model.SubstationCost",
            "hybridbosse.SolarBOSSE.project_data",
            "hybridbosse.hybridbosse_api",
            "hybridbosse.hybridbosse_api.run_hybridbosse",
            "hybridbosse.hybrids_shared_infrastructure",
            "hybridbosse.hybrids_shared_infrastructure.GridConnectionCost",
            "hybridbosse.hybrids_shared_infrastructure.ManagementCost",
            "hybridbosse.hybrids_shared_infrastructure.ManagementDevelopmentCost",
            "hybridbosse.hybrids_shared_infrastructure.PostSimulationProcessing",
            "hybridbosse.hybrids_shared_infrastructure.SubstationCost",
            "hybridbosse.hybrids_shared_infrastructure.cli",
            "hybridbosse.hybrids_shared_infrastructure.run_BOSSEs"
        ],
        "version": "0.9.9.2"
    },
    "hybridcontents": {
        "cmdline": [],
        "modules": [
            "hybridcontents",
            "hybridcontents.api_utils",
            "hybridcontents.hybridmanager",
            "hybridcontents.tests",
            "hybridcontents.tests.test_hybrid_manager",
            "hybridcontents.tests.testing_utils"
        ],
        "version": "0.3.0"
    },
    "hybridfactory": {
        "cmdline": [],
        "modules": [
            "hybridfactory",
            "hybridfactory.data",
            "hybridfactory.data.annotation",
            "hybridfactory.data.dataset",
            "hybridfactory.generate",
            "hybridfactory.generate.generator",
            "hybridfactory.io",
            "hybridfactory.io.spikegl",
            "hybridfactory.probes",
            "hybridfactory.probes.probe",
            "hybridfactory.utils",
            "hybridfactory.utils.cli",
            "hybridfactory.utils.tools",
            "hybridfactory.validate",
            "hybridfactory.validate.comparison",
            "hybridfactory.validate.visualize"
        ],
        "version": "0.1.0b1"
    },
    "hybridizer": {
        "cmdline": [],
        "modules": [
            "hybridizer",
            "hybridizer.hybridizer"
        ],
        "version": "1.07"
    },
    "hybridjaccard": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hybridlfpy": {
        "cmdline": [],
        "modules": [
            "hybridLFPy",
            "hybridLFPy.cachednetworks",
            "hybridLFPy.csd",
            "hybridLFPy.gdf",
            "hybridLFPy.helpers",
            "hybridLFPy.population",
            "hybridLFPy.postproc",
            "hybridLFPy.testing"
        ],
        "version": "0.1.3"
    },
    "hybridset": {
        "cmdline": [],
        "modules": [
            "hybridset"
        ],
        "version": "1.0"
    },
    "hybridspi": {
        "cmdline": [],
        "modules": [
            "spi",
            "spi.binary",
            "spi.binary.bands",
            "spi.xml"
        ],
        "version": "0.1.1"
    },
    "hybridtfidf": {
        "cmdline": [],
        "modules": [
            "hybridtfidf",
            "hybridtfidf.utils"
        ],
        "version": "1.0.6"
    },
    "hycc": {
        "cmdline": [],
        "modules": [
            "hycc"
        ],
        "version": "0.1.4"
    },
    "hyckle": {
        "cmdline": [],
        "modules": [
            "hyckle"
        ],
        "version": "1.0.4"
    },
    "hycl": {
        "cmdline": [],
        "modules": [
            "hycl"
        ],
        "version": "0.0.4"
    },
    "hyclb": {
        "cmdline": [],
        "modules": [
            "hyclb",
            "hyclb.models"
        ],
        "version": "0.2.3.4"
    },
    "hycli": {
        "cmdline": [],
        "modules": [
            "hycli",
            "hycli.cli",
            "hycli.commands",
            "hycli.commands.config",
            "hycli.commands.to_csv",
            "hycli.commands.to_json",
            "hycli.commands.to_xlsx",
            "hycli.commands.to_xml"
        ],
        "version": "0.3.25"
    },
    "hyde": {
        "cmdline": [],
        "modules": [
            "ext",
            "ext.banner",
            "ext.test_auto_extend",
            "ext.test_blockdown",
            "ext.test_combine",
            "ext.test_depends",
            "ext.test_drafts",
            "ext.test_flattener",
            "ext.test_grouper",
            "ext.test_images",
            "ext.test_less",
            "ext.test_markings",
            "ext.test_meta",
            "ext.test_optipng",
            "ext.test_paginator",
            "ext.test_requirejs",
            "ext.test_sass",
            "ext.test_scss",
            "ext.test_sorter",
            "ext.test_stylus",
            "ext.test_syntext",
            "ext.test_tagger",
            "ext.test_textlinks",
            "ext.test_uglify",
            "ext.test_urlcleaner",
            "hyde",
            "hyde.engine",
            "hyde.exceptions",
            "hyde.ext",
            "hyde.ext.plugins",
            "hyde.ext.plugins.blog",
            "hyde.ext.plugins.css",
            "hyde.ext.plugins.depends",
            "hyde.ext.plugins.images",
            "hyde.ext.plugins.js",
            "hyde.ext.plugins.languages",
            "hyde.ext.plugins.meta",
            "hyde.ext.plugins.sphinx",
            "hyde.ext.plugins.structure",
            "hyde.ext.plugins.text",
            "hyde.ext.plugins.urls",
            "hyde.ext.plugins.vcs",
            "hyde.ext.publishers",
            "hyde.ext.publishers.dvcs",
            "hyde.ext.publishers.pyfs",
            "hyde.ext.publishers.pypi",
            "hyde.ext.publishers.ssh",
            "hyde.ext.templates",
            "hyde.ext.templates.jinja",
            "hyde.generator",
            "hyde.layout",
            "hyde.lib",
            "hyde.lib.pygments",
            "hyde.lib.pygments.rst_directive",
            "hyde.main",
            "hyde.model",
            "hyde.plugin",
            "hyde.publisher",
            "hyde.server",
            "hyde.site",
            "hyde.template",
            "hyde.util",
            "hyde.version"
        ],
        "version": "0.8.9"
    },
    "hyde-gopher": {
        "cmdline": [],
        "modules": [
            "hyde_gopher",
            "hyde_gopher.engine",
            "hyde_gopher.generator",
            "hyde_gopher.main",
            "hyde_gopher.server"
        ],
        "version": "0.3.0"
    },
    "hyde-gzipper": {
        "cmdline": [],
        "modules": [
            "gzipper",
            "gzipper.version"
        ],
        "version": "1.0"
    },
    "hyde-slimmer": {
        "cmdline": [],
        "modules": [
            "hyde_slimmer",
            "hyde_slimmer.site_post_processors"
        ],
        "version": "0.0.1"
    },
    "hyde-zipper": {
        "cmdline": [],
        "modules": [
            "zipper",
            "zipper.site_post_processors"
        ],
        "version": "0.0.3"
    },
    "hydedown": {
        "cmdline": [],
        "modules": [
            "hydedown",
            "hydedown.passthrough",
            "hydedown.sections",
            "hydedown.tests",
            "hydedown.tests.test_extensions"
        ],
        "version": "0.1.2"
    },
    "hydenv": {
        "cmdline": [],
        "modules": [
            "hydenv",
            "hydenv.backend",
            "hydenv.database",
            "hydenv.exercises",
            "hydenv.measurements",
            "hydenv.models",
            "hydenv.util",
            "hydenv.util.decorators",
            "hydenv.util.env",
            "hydenv.util.json"
        ],
        "version": "0.2.0"
    },
    "hydiomatic": {
        "cmdline": [],
        "modules": [
            "hydiomatic",
            "hydiomatic.rulesets"
        ],
        "version": "0.2.0"
    },
    "hydna": {
        "cmdline": [],
        "modules": [
            "hydna",
            "hydna.core",
            "hydna.exceptions",
            "hydna.push"
        ],
        "version": "0.1.5"
    },
    "hydna-cli": {
        "cmdline": [
            "hydna"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hydpy": {
        "cmdline": [],
        "modules": [
            "hydpy",
            "hydpy.auxs",
            "hydpy.auxs.anntools",
            "hydpy.auxs.armatools",
            "hydpy.auxs.iuhtools",
            "hydpy.auxs.networktools",
            "hydpy.auxs.smoothtools",
            "hydpy.auxs.statstools",
            "hydpy.auxs.validtools",
            "hydpy.auxs.xmltools",
            "hydpy.conf",
            "hydpy.config",
            "hydpy.core",
            "hydpy.core.abctools",
            "hydpy.core.autodoctools",
            "hydpy.core.auxfiletools",
            "hydpy.core.connectiontools",
            "hydpy.core.devicetools",
            "hydpy.core.dummytools",
            "hydpy.core.examples",
            "hydpy.core.exceptiontools",
            "hydpy.core.filetools",
            "hydpy.core.hydpytools",
            "hydpy.core.importtools",
            "hydpy.core.indextools",
            "hydpy.core.masktools",
            "hydpy.core.metatools",
            "hydpy.core.modeltools",
            "hydpy.core.netcdftools",
            "hydpy.core.objecttools",
            "hydpy.core.optiontools",
            "hydpy.core.parametertools",
            "hydpy.core.printtools",
            "hydpy.core.propertytools",
            "hydpy.core.pubtools",
            "hydpy.core.selectiontools",
            "hydpy.core.sequencetools",
            "hydpy.core.testtools",
            "hydpy.core.timetools",
            "hydpy.core.variabletools",
            "hydpy.cythons",
            "hydpy.cythons.autogen",
            "hydpy.cythons.modelutils",
            "hydpy.data",
            "hydpy.docs",
            "hydpy.docs.figs",
            "hydpy.docs.html",
            "hydpy.docs.modify_html",
            "hydpy.docs.prepare",
            "hydpy.docs.rst",
            "hydpy.docs.sphinx",
            "hydpy.docs.sphinx.apidoc",
            "hydpy.docs.sphinx.conf",
            "hydpy.exe",
            "hydpy.exe.commandtools",
            "hydpy.exe.hyd",
            "hydpy.exe.modelimports",
            "hydpy.exe.replacetools",
            "hydpy.models",
            "hydpy.models.arma",
            "hydpy.models.arma.arma_control",
            "hydpy.models.arma.arma_derived",
            "hydpy.models.arma.arma_fluxes",
            "hydpy.models.arma.arma_inlets",
            "hydpy.models.arma.arma_logs",
            "hydpy.models.arma.arma_model",
            "hydpy.models.arma.arma_outlets",
            "hydpy.models.arma_v1",
            "hydpy.models.dam",
            "hydpy.models.dam.dam_aides",
            "hydpy.models.dam.dam_control",
            "hydpy.models.dam.dam_derived",
            "hydpy.models.dam.dam_fluxes",
            "hydpy.models.dam.dam_inlets",
            "hydpy.models.dam.dam_logs",
            "hydpy.models.dam.dam_model",
            "hydpy.models.dam.dam_outlets",
            "hydpy.models.dam.dam_receivers",
            "hydpy.models.dam.dam_senders",
            "hydpy.models.dam.dam_solver",
            "hydpy.models.dam.dam_states",
            "hydpy.models.dam_v001",
            "hydpy.models.dam_v002",
            "hydpy.models.dam_v003",
            "hydpy.models.dam_v004",
            "hydpy.models.dam_v005",
            "hydpy.models.hbranch",
            "hydpy.models.hbranch.hbranch_control",
            "hydpy.models.hbranch.hbranch_derived",
            "hydpy.models.hbranch.hbranch_fluxes",
            "hydpy.models.hbranch.hbranch_inlets",
            "hydpy.models.hbranch.hbranch_model",
            "hydpy.models.hbranch.hbranch_outlets",
            "hydpy.models.hbranch_v1",
            "hydpy.models.hland",
            "hydpy.models.hland.hland_constants",
            "hydpy.models.hland.hland_control",
            "hydpy.models.hland.hland_derived",
            "hydpy.models.hland.hland_fluxes",
            "hydpy.models.hland.hland_inputs",
            "hydpy.models.hland.hland_logs",
            "hydpy.models.hland.hland_masks",
            "hydpy.models.hland.hland_model",
            "hydpy.models.hland.hland_outlets",
            "hydpy.models.hland.hland_parameters",
            "hydpy.models.hland.hland_sequences",
            "hydpy.models.hland.hland_states",
            "hydpy.models.hland_v1",
            "hydpy.models.hstream",
            "hydpy.models.hstream.hstream_control",
            "hydpy.models.hstream.hstream_derived",
            "hydpy.models.hstream.hstream_inlets",
            "hydpy.models.hstream.hstream_masks",
            "hydpy.models.hstream.hstream_model",
            "hydpy.models.hstream.hstream_outlets",
            "hydpy.models.hstream.hstream_states",
            "hydpy.models.hstream_v1",
            "hydpy.models.llake",
            "hydpy.models.llake.llake_aides",
            "hydpy.models.llake.llake_control",
            "hydpy.models.llake.llake_derived",
            "hydpy.models.llake.llake_fluxes",
            "hydpy.models.llake.llake_inlets",
            "hydpy.models.llake.llake_model",
            "hydpy.models.llake.llake_outlets",
            "hydpy.models.llake.llake_states",
            "hydpy.models.llake_v1",
            "hydpy.models.lland",
            "hydpy.models.lland.lland_aides",
            "hydpy.models.lland.lland_constants",
            "hydpy.models.lland.lland_control",
            "hydpy.models.lland.lland_derived",
            "hydpy.models.lland.lland_fluxes",
            "hydpy.models.lland.lland_inputs",
            "hydpy.models.lland.lland_logs",
            "hydpy.models.lland.lland_masks",
            "hydpy.models.lland.lland_model",
            "hydpy.models.lland.lland_outlets",
            "hydpy.models.lland.lland_parameters",
            "hydpy.models.lland.lland_sequences",
            "hydpy.models.lland.lland_states",
            "hydpy.models.lland_v1",
            "hydpy.models.lland_v2",
            "hydpy.models.lstream",
            "hydpy.models.lstream.lstream_aides",
            "hydpy.models.lstream.lstream_control",
            "hydpy.models.lstream.lstream_derived",
            "hydpy.models.lstream.lstream_fluxes",
            "hydpy.models.lstream.lstream_inlets",
            "hydpy.models.lstream.lstream_model",
            "hydpy.models.lstream.lstream_outlets",
            "hydpy.models.lstream.lstream_states",
            "hydpy.models.lstream_v1",
            "hydpy.models.test",
            "hydpy.models.test.test_control",
            "hydpy.models.test.test_fluxes",
            "hydpy.models.test.test_model",
            "hydpy.models.test.test_solver",
            "hydpy.models.test.test_states",
            "hydpy.models.test_v1",
            "hydpy.models.test_v2",
            "hydpy.pub",
            "hydpy.tests",
            "hydpy.tests.iotesting",
            "hydpy.tests.test_everything",
            "hydpy.tests.test_pyplot_backend",
            "hydpy.tests.unittests_01_pointerutils",
            "hydpy.tests.unittests_02_timetools",
            "hydpy.tests.unittests_03_filetools",
            "hydpy.tests.unittests_04_devicetools",
            "hydpy.tests.unittests_05_connectiontools",
            "hydpy.tests.unittests_06_selectiontools",
            "hydpy.tests.unittests_07_parametertools",
            "hydpy.tests.unittests_08_indextools"
        ],
        "version": "3.1.1"
    },
    "hydra": {
        "cmdline": [],
        "modules": [
            "hydra"
        ],
        "version": "2.5"
    },
    "hydra-007-mxmul-pkg": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hydra-agent": {
        "cmdline": [],
        "modules": [
            "hydra_agent",
            "hydra_agent.__version__",
            "hydra_agent.api",
            "hydra_agent.api.handler",
            "hydra_agent.api.handler.backup",
            "hydra_agent.api.handler.base",
            "hydra_agent.api.handler.cluster",
            "hydra_agent.api.handler.heartbeat",
            "hydra_agent.api.handler.infobase",
            "hydra_agent.api.handler.license",
            "hydra_agent.api.handler.session",
            "hydra_agent.api.main",
            "hydra_agent.api.routes",
            "hydra_agent.config",
            "hydra_agent.config.api_config",
            "hydra_agent.config.base_config",
            "hydra_agent.config.config",
            "hydra_agent.config.postgresql_config",
            "hydra_agent.config.rac_config",
            "hydra_agent.config.ring_config",
            "hydra_agent.config.v8_config",
            "hydra_agent.db",
            "hydra_agent.db.postgresql",
            "hydra_agent.db.postgresql.postgresql",
            "hydra_agent.main",
            "hydra_agent.rac",
            "hydra_agent.rac.cluster_manager",
            "hydra_agent.rac.cluster_manager.cluster",
            "hydra_agent.rac.cluster_manager.cluster_manager",
            "hydra_agent.rac.cluster_manager.load_balancing_mode",
            "hydra_agent.rac.cluster_manager.security_level",
            "hydra_agent.rac.infobase_manager",
            "hydra_agent.rac.infobase_manager.infobase",
            "hydra_agent.rac.infobase_manager.infobase_manager",
            "hydra_agent.rac.rac",
            "hydra_agent.rac.session_manager",
            "hydra_agent.rac.session_manager.session",
            "hydra_agent.rac.session_manager.session_manager",
            "hydra_agent.ring",
            "hydra_agent.ring.license_manager",
            "hydra_agent.ring.license_manager.license_manager",
            "hydra_agent.ring.ring",
            "hydra_agent.utils",
            "hydra_agent.utils.system",
            "hydra_agent.v8",
            "hydra_agent.v8.connection_string",
            "hydra_agent.v8.file_connection_string",
            "hydra_agent.v8.server_connection_string",
            "hydra_agent.v8.v8"
        ],
        "version": "0.0.12"
    },
    "hydra-api": {
        "cmdline": [],
        "modules": [
            "hydra_api"
        ],
        "version": "1.2.0"
    },
    "hydra-ax-sweeper": {
        "cmdline": [],
        "modules": [
            "hydra_plugins.hydra_ax_sweeper",
            "hydra_plugins.hydra_ax_sweeper._core",
            "hydra_plugins.hydra_ax_sweeper._earlystopper",
            "hydra_plugins.hydra_ax_sweeper.ax_sweeper",
            "hydra_plugins.hydra_ax_sweeper.config"
        ],
        "version": "1.1.0rc1"
    },
    "hydra-base": {
        "cmdline": [],
        "modules": [
            "hydra_base",
            "hydra_base.config",
            "hydra_base.db",
            "hydra_base.db.audit",
            "hydra_base.db.model",
            "hydra_base.db.truncate",
            "hydra_base.exceptions",
            "hydra_base.hydra_logging",
            "hydra_base.lib",
            "hydra_base.lib.HydraTypes",
            "hydra_base.lib.HydraTypes.Encodings",
            "hydra_base.lib.HydraTypes.Registry",
            "hydra_base.lib.HydraTypes.Types",
            "hydra_base.lib.attributes",
            "hydra_base.lib.data",
            "hydra_base.lib.groups",
            "hydra_base.lib.network",
            "hydra_base.lib.notes",
            "hydra_base.lib.objects",
            "hydra_base.lib.plugins",
            "hydra_base.lib.project",
            "hydra_base.lib.rules",
            "hydra_base.lib.scenario",
            "hydra_base.lib.service",
            "hydra_base.lib.sharing",
            "hydra_base.lib.static",
            "hydra_base.lib.template",
            "hydra_base.lib.units",
            "hydra_base.lib.users",
            "hydra_base.util",
            "hydra_base.util.dataset_util",
            "hydra_base.util.hdb",
            "hydra_base.util.hydra_dateutil",
            "hydra_base.util.permissions",
            "hydra_base.util.time_map"
        ],
        "version": "0.1.7"
    },
    "hydra-client": {
        "cmdline": [],
        "modules": [
            "hydra_client",
            "hydra_client.api",
            "hydra_client.common",
            "hydra_client.consent",
            "hydra_client.exceptions",
            "hydra_client.login",
            "hydra_client.logout",
            "hydra_client.model",
            "hydra_client.oauth2",
            "hydra_client.utils",
            "hydra_client.version"
        ],
        "version": "0.5.1"
    },
    "hydra-client-python": {
        "cmdline": [],
        "modules": [
            "hydra_client",
            "hydra_client.click",
            "hydra_client.config",
            "hydra_client.connection",
            "hydra_client.connection.base_connection",
            "hydra_client.connection.json_connection",
            "hydra_client.connection.remote_json_connection",
            "hydra_client.connection.soap_connection",
            "hydra_client.exception",
            "hydra_client.objects",
            "hydra_client.output",
            "hydra_client.plugin",
            "hydra_client.resources",
            "hydra_client.templates"
        ],
        "version": "0.1.2"
    },
    "hydra-colorlog": {
        "cmdline": [],
        "modules": [
            "hydra_plugins.hydra_colorlog",
            "hydra_plugins.hydra_colorlog.colorlog",
            "hydra_plugins.hydra_colorlog.conf"
        ],
        "version": "1.0.0"
    },
    "hydra-configen": {
        "cmdline": [],
        "modules": [
            "configen",
            "configen.config",
            "configen.configen",
            "configen.utils"
        ],
        "version": "0.9.0.dev4"
    },
    "hydra-core": {
        "cmdline": [],
        "modules": [
            "hydra",
            "hydra.errors",
            "hydra.main",
            "hydra.types",
            "hydra.utils"
        ],
        "version": "1.0.3"
    },
    "hydra-device-manager": {
        "cmdline": [],
        "modules": [
            "devicemanager",
            "devicemanager.devicemanager",
            "devicemanager.main",
            "devicemanager.version"
        ],
        "version": "0.6"
    },
    "hydra-fa": {
        "cmdline": [],
        "modules": [
            "automationserver",
            "automationserver.main",
            "automationserver.server",
            "cli",
            "cli.client",
            "cli.main",
            "fieldagent",
            "fieldagent.common",
            "fieldagent.devicemanager",
            "fieldagent.main",
            "fieldagent.rpc",
            "fieldagent.version"
        ],
        "version": "0.10"
    },
    "hydra-framework": {
        "cmdline": [],
        "modules": [
            "hydra_framework",
            "hydra_framework.example",
            "hydra_framework.hydra_common",
            "hydra_framework.hydra_core",
            "hydra_framework.hydra_net",
            "hydra_framework.hydra_rest"
        ],
        "version": "0.2.2"
    },
    "hydra-joblib-launcher": {
        "cmdline": [],
        "modules": [
            "hydra_plugins.hydra_joblib_launcher",
            "hydra_plugins.hydra_joblib_launcher._core",
            "hydra_plugins.hydra_joblib_launcher.config",
            "hydra_plugins.hydra_joblib_launcher.joblib_launcher"
        ],
        "version": "1.1.0"
    },
    "hydra-logzio-logger": {
        "cmdline": [],
        "modules": [
            "hydra_plugins",
            "hydra_plugins.hydra_logzio_logger",
            "hydra_plugins.hydra_logzio_logger.conf",
            "hydra_plugins.hydra_logzio_logger.conf.hydra",
            "hydra_plugins.hydra_logzio_logger.conf.hydra.hydra_logging",
            "hydra_plugins.hydra_logzio_logger.conf.hydra.job_logging",
            "hydra_plugins.hydra_logzio_logger.logzio_logger_path_plugin"
        ],
        "version": "0.0.2"
    },
    "hydra-nevergrad-sweeper": {
        "cmdline": [],
        "modules": [
            "hydra_plugins.hydra_nevergrad_sweeper",
            "hydra_plugins.hydra_nevergrad_sweeper._impl",
            "hydra_plugins.hydra_nevergrad_sweeper.config",
            "hydra_plugins.hydra_nevergrad_sweeper.nevergrad_sweeper"
        ],
        "version": "1.1.0rc1"
    },
    "hydra-notebook": {
        "cmdline": [],
        "modules": [
            "hydra_notebook",
            "hydra_notebook.admin",
            "hydra_notebook.apps",
            "hydra_notebook.core",
            "hydra_notebook.migrations",
            "hydra_notebook.models",
            "hydra_notebook.tests",
            "hydra_notebook.urls",
            "hydra_notebook.version",
            "hydra_notebook.views",
            "hydra_notebook_demo",
            "hydra_notebook_demo.admin",
            "hydra_notebook_demo.apps",
            "hydra_notebook_demo.migrations",
            "hydra_notebook_demo.models",
            "hydra_notebook_demo.tests",
            "hydra_notebook_demo.views",
            "hydra_notebook_site",
            "hydra_notebook_site.jupyter",
            "hydra_notebook_site.settings",
            "hydra_notebook_site.urls",
            "hydra_notebook_site.wsgi"
        ],
        "version": "1.0.0"
    },
    "hydra-platform": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hydra-presentation": {
        "cmdline": [],
        "modules": [
            "hydra_presentation",
            "hydra_presentation.admin",
            "hydra_presentation.apps",
            "hydra_presentation.management",
            "hydra_presentation.management.commands",
            "hydra_presentation.management.commands.polymer",
            "hydra_presentation.migrations",
            "hydra_presentation.models",
            "hydra_presentation.polymer",
            "hydra_presentation.serializers",
            "hydra_presentation.templatetags",
            "hydra_presentation.templatetags.polymer",
            "hydra_presentation.tests",
            "hydra_presentation.urls",
            "hydra_presentation.version",
            "hydra_presentation.views",
            "hydra_presentation_app",
            "hydra_presentation_app.admin",
            "hydra_presentation_app.apps",
            "hydra_presentation_app.migrations",
            "hydra_presentation_app.models",
            "hydra_presentation_app.tests",
            "hydra_presentation_app.views",
            "hydra_presentation_demo",
            "hydra_presentation_demo.settings",
            "hydra_presentation_demo.urls",
            "hydra_presentation_demo.wsgi"
        ],
        "version": "1.0.5"
    },
    "hydra-py": {
        "cmdline": [],
        "modules": [
            "hydrapy",
            "hydrapy.hydra"
        ],
        "version": "0.1.7"
    },
    "hydra-range-sweeper-badr": {
        "cmdline": [],
        "modules": [
            "hydra_plugins",
            "hydra_plugins.range_sweeper_badr",
            "hydra_plugins.range_sweeper_badr.conf"
        ],
        "version": "0.1.3"
    },
    "hydra-ray-launcher-badr": {
        "cmdline": [],
        "modules": [
            "hydra_plugins",
            "hydra_plugins.ray_launcher_badr",
            "hydra_plugins.ray_launcher_badr.conf"
        ],
        "version": "0.1.1"
    },
    "hydra-rq-launcher": {
        "cmdline": [],
        "modules": [
            "hydra_plugins.hydra_rq_launcher",
            "hydra_plugins.hydra_rq_launcher._core",
            "hydra_plugins.hydra_rq_launcher.config",
            "hydra_plugins.hydra_rq_launcher.rq_launcher"
        ],
        "version": "1.0.1"
    },
    "hydra-sdk": {
        "cmdline": [],
        "modules": [
            "hydra",
            "hydra.base",
            "hydra.clients",
            "hydra.exceptions",
            "hydra.hydra",
            "hydra.oauth2"
        ],
        "version": "1.0.2"
    },
    "hydra-server": {
        "cmdline": [],
        "modules": [
            "hydra_server",
            "hydra_server.commands",
            "hydra_server.plugins",
            "hydra_server.plugins.advanced_dataset_retrieval",
            "hydra_server.plugins.ra_collections",
            "hydra_server.plugins.sample",
            "hydra_server.plugins.timeseries_functions",
            "hydra_server.run",
            "hydra_server.server",
            "hydra_server.server.attributes",
            "hydra_server.server.complexmodels",
            "hydra_server.server.data",
            "hydra_server.server.groups",
            "hydra_server.server.network",
            "hydra_server.server.notes",
            "hydra_server.server.plugins",
            "hydra_server.server.project",
            "hydra_server.server.rules",
            "hydra_server.server.scenario",
            "hydra_server.server.service",
            "hydra_server.server.sharing",
            "hydra_server.server.static",
            "hydra_server.server.template",
            "hydra_server.server.units",
            "hydra_server.server.users"
        ],
        "version": "0.1.3"
    },
    "hydra-submitit-launcher": {
        "cmdline": [],
        "modules": [
            "hydra_plugins.hydra_submitit_launcher",
            "hydra_plugins.hydra_submitit_launcher.config",
            "hydra_plugins.hydra_submitit_launcher.submitit_launcher"
        ],
        "version": "1.0.0"
    },
    "hydrachain": {
        "cmdline": [],
        "modules": [
            "hydrachain",
            "hydrachain.app",
            "hydrachain.consensus",
            "hydrachain.consensus.base",
            "hydrachain.consensus.contract",
            "hydrachain.consensus.manager",
            "hydrachain.consensus.protocol",
            "hydrachain.consensus.simulation",
            "hydrachain.consensus.synchronizer",
            "hydrachain.consensus.utils",
            "hydrachain.examples",
            "hydrachain.examples.native",
            "hydrachain.examples.native.fungible",
            "hydrachain.examples.native.fungible.fungible_contract",
            "hydrachain.examples.native.fungible.test_fungible_contract",
            "hydrachain.examples.native.fungible.test_iou_contract",
            "hydrachain.hdc_service",
            "hydrachain.native_contracts",
            "hydrachain.nc_utils",
            "hydrachain.utils"
        ],
        "version": "0.3.2"
    },
    "hydracolorlog": {
        "cmdline": [],
        "modules": [
            "hydracolorlog",
            "hydracolorlog.cli"
        ],
        "version": "0.1.1"
    },
    "hydracore": {
        "cmdline": [],
        "modules": [
            "hydracore",
            "hydracore.cli"
        ],
        "version": "0.1.1"
    },
    "hydrafloods": {
        "cmdline": [],
        "modules": [
            "hydrafloods",
            "hydrafloods.MODIS_DNNS",
            "hydrafloods.VIIRS_DNNS",
            "hydrafloods.datasets",
            "hydrafloods.decorators",
            "hydrafloods.fetch",
            "hydrafloods.filtering",
            "hydrafloods.fusion",
            "hydrafloods.geeutils",
            "hydrafloods.hfcli",
            "hydrafloods.ml",
            "hydrafloods.pansharpen",
            "hydrafloods.preprocess",
            "hydrafloods.tests",
            "hydrafloods.tests.datasets_test",
            "hydrafloods.tests.install_test",
            "hydrafloods.thresholding",
            "hydrafloods.timeseries",
            "hydrafloods.utils",
            "hydrafloods.workflows",
            "hydrafloods.workflows.dswfp"
        ],
        "version": "0.1.11"
    },
    "hydragen": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hydrajzlol": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hydralisk": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hydralisk0": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hydraml": {
        "cmdline": [],
        "modules": [
            "hydraml"
        ],
        "version": "0.0.1"
    },
    "hydrant": {
        "cmdline": [],
        "modules": [
            "hydrant",
            "hydrant.cli"
        ],
        "version": "0.3.0"
    },
    "hydrapy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hydras": {
        "cmdline": [],
        "modules": [
            "hydras",
            "hydras.array",
            "hydras.base",
            "hydras.enum",
            "hydras.scalars",
            "hydras.struct",
            "hydras.tools",
            "hydras.tools.dwarf2hydra",
            "hydras.utils",
            "hydras.validators",
            "tests",
            "tests.test_array",
            "tests.test_array_vla",
            "tests.test_enum",
            "tests.test_scalar",
            "tests.test_settings",
            "tests.test_struct",
            "tests.test_validation",
            "tests.utils"
        ],
        "version": "3.1.2"
    },
    "hydraseq": {
        "cmdline": [],
        "modules": [
            "hydraseq",
            "hydraseq.automata",
            "hydraseq.hydraseq"
        ],
        "version": "0.0.30"
    },
    "hydraspa": {
        "cmdline": [
            "hydraspa"
        ],
        "modules": [
            "hydraspa",
            "hydraspa.analyse",
            "hydraspa.check",
            "hydraspa.cli",
            "hydraspa.create",
            "hydraspa.files",
            "hydraspa.gather",
            "hydraspa.poreblazer",
            "hydraspa.split",
            "hydraspa.util"
        ],
        "version": "0.3.1"
    },
    "hydrat": {
        "cmdline": [],
        "modules": [
            "hydrat",
            "hydrat.browser",
            "hydrat.browser.browser_config",
            "hydrat.browser.common",
            "hydrat.browser.dataset",
            "hydrat.browser.display",
            "hydrat.browser.result",
            "hydrat.browser.spaces",
            "hydrat.browser.task",
            "hydrat.classifier",
            "hydrat.classifier.NLTK",
            "hydrat.classifier.SVM",
            "hydrat.classifier.WingBaldridge",
            "hydrat.classifier.abstract",
            "hydrat.classifier.baseline",
            "hydrat.classifier.common",
            "hydrat.classifier.flann",
            "hydrat.classifier.knn",
            "hydrat.classifier.liblinear",
            "hydrat.classifier.libsvm",
            "hydrat.classifier.maxent",
            "hydrat.classifier.meta",
            "hydrat.classifier.meta.binary",
            "hydrat.classifier.meta.featurestacking",
            "hydrat.classifier.meta.prototype",
            "hydrat.classifier.meta.repeat",
            "hydrat.classifier.meta.replicate",
            "hydrat.classifier.meta.stacking",
            "hydrat.classifier.meta.stratified",
            "hydrat.classifier.meta.unknown",
            "hydrat.classifier.meta.weighted",
            "hydrat.classifier.naivebayes",
            "hydrat.classifier.nearest_prototype",
            "hydrat.classifier.neuralnet",
            "hydrat.classifier.nnstrategy",
            "hydrat.classifier.ordinal",
            "hydrat.classifier.rainbow",
            "hydrat.classifier.scikits_learn",
            "hydrat.classifier.sequence",
            "hydrat.classifier.sequence.crf",
            "hydrat.classifier.sequence.markov",
            "hydrat.classifier.tree",
            "hydrat.classifier.tree.ClassTree",
            "hydrat.classifier.tree.ClassTreeClassifier",
            "hydrat.classifier.vowpalwabbit",
            "hydrat.classifier.weka",
            "hydrat.cli",
            "hydrat.common",
            "hydrat.common.PorterStemmer",
            "hydrat.common.bootstrap",
            "hydrat.common.counter",
            "hydrat.common.decorators",
            "hydrat.common.discretize",
            "hydrat.common.diskdict",
            "hydrat.common.disklist",
            "hydrat.common.distance_metrics",
            "hydrat.common.enumerator",
            "hydrat.common.extractors",
            "hydrat.common.filedict",
            "hydrat.common.filelock",
            "hydrat.common.fleiss",
            "hydrat.common.invert_dict",
            "hydrat.common.mapmatrix",
            "hydrat.common.markup",
            "hydrat.common.metadata",
            "hydrat.common.pb",
            "hydrat.common.prototype",
            "hydrat.common.richcomp",
            "hydrat.common.sampling",
            "hydrat.common.sequence",
            "hydrat.common.stringtools",
            "hydrat.common.timer",
            "hydrat.common.tokenizers",
            "hydrat.common.weight",
            "hydrat.configuration",
            "hydrat.corpora",
            "hydrat.corpora.bupa",
            "hydrat.corpora.dummy",
            "hydrat.corpora.langid",
            "hydrat.corpora.langid.UDHR",
            "hydrat.corpora.langid.acl2011",
            "hydrat.corpora.langid.acquis",
            "hydrat.corpora.langid.altw2010",
            "hydrat.corpora.langid.clueweb",
            "hydrat.corpora.langid.debian",
            "hydrat.corpora.langid.emea",
            "hydrat.corpora.langid.europarl",
            "hydrat.corpora.langid.langdomain",
            "hydrat.corpora.langid.naacl2010",
            "hydrat.corpora.langid.rcv2",
            "hydrat.corpora.langid.twitter",
            "hydrat.corpora.langid.wikiraw",
            "hydrat.corpora.langid.wikitweets",
            "hydrat.corpora.reuters",
            "hydrat.datamodel",
            "hydrat.dataset",
            "hydrat.dataset.abstract",
            "hydrat.dataset.encoded",
            "hydrat.dataset.iso639",
            "hydrat.dataset.split",
            "hydrat.dataset.text",
            "hydrat.dataset.tokenstream",
            "hydrat.dataset.words",
            "hydrat.display",
            "hydrat.display.graphs",
            "hydrat.display.html",
            "hydrat.display.latex",
            "hydrat.display.markup",
            "hydrat.display.mediawiki",
            "hydrat.display.plot_intervals",
            "hydrat.display.sparklines",
            "hydrat.display.store",
            "hydrat.display.summary_fns",
            "hydrat.display.tsr",
            "hydrat.experiment",
            "hydrat.external",
            "hydrat.external.treetaggerwrapper",
            "hydrat.inducer",
            "hydrat.online",
            "hydrat.preprocessor",
            "hydrat.preprocessor.model",
            "hydrat.preprocessor.model.arff",
            "hydrat.preprocessor.tokenstream",
            "hydrat.preprocessor.tokenstream.porterstem",
            "hydrat.proxy",
            "hydrat.result",
            "hydrat.result.interpreter",
            "hydrat.result.result",
            "hydrat.result.stats",
            "hydrat.result.tasksetresult",
            "hydrat.store",
            "hydrat.summary",
            "hydrat.task",
            "hydrat.task.concat",
            "hydrat.task.featureincrement",
            "hydrat.task.incremental",
            "hydrat.task.sampler",
            "hydrat.task.task",
            "hydrat.task.taskset",
            "hydrat.task.transform",
            "hydrat.text",
            "hydrat.text.interface",
            "hydrat.text.langid",
            "hydrat.text.langid.bing",
            "hydrat.text.langid.chromecld",
            "hydrat.text.langid.google",
            "hydrat.text.langid.langdetect",
            "hydrat.text.langid.langiddotpy",
            "hydrat.text.langid.langidnet",
            "hydrat.text.langid.lastrings",
            "hydrat.text.langid.libtextcat",
            "hydrat.text.langid.textcatlg",
            "hydrat.tools",
            "hydrat.tools.merge_resulttables",
            "hydrat.tools.model_info",
            "hydrat.tools.pickle2csv",
            "hydrat.tools.result_delete_bymetadata",
            "hydrat.tools.result_list",
            "hydrat.transformer",
            "hydrat.transformer.abstract",
            "hydrat.transformer.featureselect",
            "hydrat.transformer.featureweight",
            "hydrat.transformer.lda",
            "hydrat.transformer.transform",
            "hydrat.wrapper",
            "hydrat.wrapper.GibbsLDA",
            "hydrat.wrapper.binglangid",
            "hydrat.wrapper.genia",
            "hydrat.wrapper.googlelangid",
            "hydrat.wrapper.langdetect",
            "hydrat.wrapper.langidnet",
            "hydrat.wrapper.textcat",
            "hydrat.wrapper.treetagger"
        ],
        "version": "0.9.5"
    },
    "hydrate-spf": {
        "cmdline": [
            "hydrate-spf"
        ],
        "modules": [
            "hydrate_spf",
            "hydrate_spf.hydrate_spf"
        ],
        "version": "0.2.0"
    },
    "hydration": {
        "cmdline": [],
        "modules": [
            "hydration",
            "hydration.base",
            "hydration.endianness",
            "hydration.fields",
            "hydration.helpers",
            "hydration.message",
            "hydration.scalars",
            "hydration.validators",
            "hydration.vectors"
        ],
        "version": "3.2.0"
    },
    "hydratk": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.core",
            "hydratk.core.bootstrapper",
            "hydratk.core.commandopt",
            "hydratk.core.confighooks",
            "hydratk.core.const",
            "hydratk.core.corehead",
            "hydratk.core.dbconfig",
            "hydratk.core.debugger",
            "hydratk.core.event",
            "hydratk.core.eventhandler",
            "hydratk.core.events",
            "hydratk.core.extension",
            "hydratk.core.hookhead",
            "hydratk.core.hsignal",
            "hydratk.core.logger",
            "hydratk.core.masterhead",
            "hydratk.core.message",
            "hydratk.core.messagehead",
            "hydratk.core.messagerouter",
            "hydratk.core.msgrouter",
            "hydratk.core.msgrouter.drivers",
            "hydratk.core.msgrouter.drivers.zmq",
            "hydratk.core.msgrouter.router",
            "hydratk.core.parallel",
            "hydratk.core.profiler",
            "hydratk.core.propertyhead",
            "hydratk.core.servicehead",
            "hydratk.core.template",
            "hydratk.core.unix",
            "hydratk.core.windows",
            "hydratk.extensions",
            "hydratk.extensions.benchmark",
            "hydratk.extensions.benchmark.benchmark",
            "hydratk.extensions.benchmark.tests",
            "hydratk.extensions.benchmark.tests.disk",
            "hydratk.extensions.benchmark.tests.event",
            "hydratk.extensions.benchmark.tests.math",
            "hydratk.extensions.benchmark.tests.memory",
            "hydratk.extensions.benchmark.tests.network",
            "hydratk.extensions.benchmark.translation",
            "hydratk.extensions.benchmark.translation.cs",
            "hydratk.extensions.benchmark.translation.cs.help",
            "hydratk.extensions.benchmark.translation.cs.messages",
            "hydratk.extensions.benchmark.translation.en",
            "hydratk.extensions.benchmark.translation.en.help",
            "hydratk.extensions.benchmark.translation.en.messages",
            "hydratk.extensions.benchmark.translation.info",
            "hydratk.lib",
            "hydratk.lib.array",
            "hydratk.lib.array.multidict",
            "hydratk.lib.array.operation",
            "hydratk.lib.compat",
            "hydratk.lib.compat.contentfix",
            "hydratk.lib.compat.types",
            "hydratk.lib.compat.utils",
            "hydratk.lib.console",
            "hydratk.lib.console.cmdoptparser",
            "hydratk.lib.console.commandlinetool",
            "hydratk.lib.console.interactive",
            "hydratk.lib.console.shellexec",
            "hydratk.lib.cycles",
            "hydratk.lib.cycles.loop",
            "hydratk.lib.data",
            "hydratk.lib.data.share",
            "hydratk.lib.data.shmm",
            "hydratk.lib.database",
            "hydratk.lib.database.dbo",
            "hydratk.lib.database.dbo.dbo",
            "hydratk.lib.database.dbo.dbodriver",
            "hydratk.lib.database.dbo.drivers",
            "hydratk.lib.database.dbo.drivers.sqlite",
            "hydratk.lib.database.dbo.drivers.sqlite.driver",
            "hydratk.lib.debugging",
            "hydratk.lib.debugging.firepot",
            "hydratk.lib.debugging.simpledebug",
            "hydratk.lib.dynamic",
            "hydratk.lib.dynamic.callback",
            "hydratk.lib.exceptions",
            "hydratk.lib.exceptions.dependencyerror",
            "hydratk.lib.exceptions.inputerror",
            "hydratk.lib.install",
            "hydratk.lib.install.command",
            "hydratk.lib.install.task",
            "hydratk.lib.install.uninstall",
            "hydratk.lib.messaging",
            "hydratk.lib.messaging.native",
            "hydratk.lib.messaging.native.queue",
            "hydratk.lib.messaging.queue",
            "hydratk.lib.messaging.zmq",
            "hydratk.lib.messaging.zmq.queue",
            "hydratk.lib.number",
            "hydratk.lib.number.conversion",
            "hydratk.lib.parser",
            "hydratk.lib.parser.smp",
            "hydratk.lib.profiling",
            "hydratk.lib.profiling.profiler",
            "hydratk.lib.string",
            "hydratk.lib.string.operation",
            "hydratk.lib.string.prettify",
            "hydratk.lib.system",
            "hydratk.lib.system.auth",
            "hydratk.lib.system.config",
            "hydratk.lib.system.fs",
            "hydratk.lib.system.io",
            "hydratk.lib.system.mtime",
            "hydratk.lib.system.utils",
            "hydratk.lib.translation",
            "hydratk.lib.translation.translator",
            "hydratk.translation",
            "hydratk.translation.config",
            "hydratk.translation.core",
            "hydratk.translation.core.cs",
            "hydratk.translation.core.cs.help",
            "hydratk.translation.core.cs.messages",
            "hydratk.translation.core.en",
            "hydratk.translation.core.en.help",
            "hydratk.translation.core.en.messages",
            "hydratk.translation.core.info",
            "hydratk.translation.info",
            "hydratk.translation.lib"
        ],
        "version": "0.6.0"
    },
    "hydratk-client": {
        "cmdline": [],
        "modules": [
            "client",
            "hydratk",
            "hydratk.client",
            "hydratk.extensions",
            "hydratk.extensions.client",
            "hydratk.extensions.client.core",
            "hydratk.extensions.client.core.autocompleter",
            "hydratk.extensions.client.core.colorizer",
            "hydratk.extensions.client.core.config",
            "hydratk.extensions.client.core.editor",
            "hydratk.extensions.client.core.explorer",
            "hydratk.extensions.client.core.filetab",
            "hydratk.extensions.client.core.formatter",
            "hydratk.extensions.client.core.gui",
            "hydratk.extensions.client.core.help",
            "hydratk.extensions.client.core.logger",
            "hydratk.extensions.client.core.notebook",
            "hydratk.extensions.client.core.plugin",
            "hydratk.extensions.client.core.pluginmanager",
            "hydratk.extensions.client.core.template",
            "hydratk.extensions.client.core.tkimport",
            "hydratk.extensions.client.core.tooltip",
            "hydratk.extensions.client.core.translator",
            "hydratk.extensions.client.core.utils",
            "hydratk.extensions.client.core.yoda_tree",
            "hydratk.extensions.client.img",
            "hydratk.extensions.client.plugins",
            "hydratk.extensions.client.plugins.gitclient",
            "hydratk.extensions.client.plugins.gitclient.gitclient",
            "hydratk.extensions.client.plugins.gitclient.translation",
            "hydratk.extensions.client.plugins.gitclient.translation.cs",
            "hydratk.extensions.client.plugins.gitclient.translation.cs.messages",
            "hydratk.extensions.client.plugins.gitclient.translation.en",
            "hydratk.extensions.client.plugins.gitclient.translation.en.messages",
            "hydratk.extensions.client.plugins.syntaxchecker",
            "hydratk.extensions.client.plugins.syntaxchecker.syntaxchecker",
            "hydratk.extensions.client.plugins.syntaxchecker.translation",
            "hydratk.extensions.client.plugins.syntaxchecker.translation.cs",
            "hydratk.extensions.client.plugins.syntaxchecker.translation.cs.messages",
            "hydratk.extensions.client.plugins.syntaxchecker.translation.en",
            "hydratk.extensions.client.plugins.syntaxchecker.translation.en.messages",
            "hydratk.extensions.client.translation",
            "hydratk.extensions.client.translation.cs",
            "hydratk.extensions.client.translation.cs.messages",
            "hydratk.extensions.client.translation.en",
            "hydratk.extensions.client.translation.en.messages"
        ],
        "version": "0.1.0"
    },
    "hydratk-ext-datagen": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.datagen",
            "hydratk.extensions.datagen.adapters",
            "hydratk.extensions.datagen.adapters.selenium",
            "hydratk.extensions.datagen.adapters.selenium.adapter",
            "hydratk.extensions.datagen.adapters.selenium.config",
            "hydratk.extensions.datagen.asn1codec",
            "hydratk.extensions.datagen.bootstrapper",
            "hydratk.extensions.datagen.datagen",
            "hydratk.extensions.datagen.jsongen",
            "hydratk.extensions.datagen.serializer",
            "hydratk.extensions.datagen.translation",
            "hydratk.extensions.datagen.translation.cs",
            "hydratk.extensions.datagen.translation.cs.help",
            "hydratk.extensions.datagen.translation.cs.messages",
            "hydratk.extensions.datagen.translation.en",
            "hydratk.extensions.datagen.translation.en.help",
            "hydratk.extensions.datagen.translation.en.messages",
            "hydratk.extensions.datagen.translation.info",
            "hydratk.extensions.datagen.xmlgen"
        ],
        "version": "0.1.3"
    },
    "hydratk-ext-security": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.security",
            "hydratk.extensions.security.bootstrapper",
            "hydratk.extensions.security.msf",
            "hydratk.extensions.security.msf_api",
            "hydratk.extensions.security.security",
            "hydratk.extensions.security.translation",
            "hydratk.extensions.security.translation.cs",
            "hydratk.extensions.security.translation.cs.help",
            "hydratk.extensions.security.translation.cs.messages",
            "hydratk.extensions.security.translation.en",
            "hydratk.extensions.security.translation.en.help",
            "hydratk.extensions.security.translation.en.messages",
            "hydratk.extensions.security.translation.info",
            "hydratk.extensions.security.zap"
        ],
        "version": "0.1.1"
    },
    "hydratk-ext-testenv": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.testenv",
            "hydratk.extensions.testenv.bootstrapper",
            "hydratk.extensions.testenv.db_handler",
            "hydratk.extensions.testenv.entities",
            "hydratk.extensions.testenv.gui_handler",
            "hydratk.extensions.testenv.rest_handler",
            "hydratk.extensions.testenv.soap_handler",
            "hydratk.extensions.testenv.templates",
            "hydratk.extensions.testenv.testenv",
            "hydratk.extensions.testenv.translation",
            "hydratk.extensions.testenv.translation.cs",
            "hydratk.extensions.testenv.translation.cs.help",
            "hydratk.extensions.testenv.translation.cs.messages",
            "hydratk.extensions.testenv.translation.en",
            "hydratk.extensions.testenv.translation.en.help",
            "hydratk.extensions.testenv.translation.en.messages",
            "hydratk.extensions.testenv.translation.info",
            "hydratk.extensions.testenv.web_server"
        ],
        "version": "0.2.3"
    },
    "hydratk-ext-trackapps": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.trackapps",
            "hydratk.extensions.trackapps.bootstrapper",
            "hydratk.extensions.trackapps.bugzilla",
            "hydratk.extensions.trackapps.jira",
            "hydratk.extensions.trackapps.mantis",
            "hydratk.extensions.trackapps.qc",
            "hydratk.extensions.trackapps.testlink",
            "hydratk.extensions.trackapps.trac",
            "hydratk.extensions.trackapps.trackapps",
            "hydratk.extensions.trackapps.translation",
            "hydratk.extensions.trackapps.translation.cs",
            "hydratk.extensions.trackapps.translation.cs.help",
            "hydratk.extensions.trackapps.translation.cs.messages",
            "hydratk.extensions.trackapps.translation.en",
            "hydratk.extensions.trackapps.translation.en.help",
            "hydratk.extensions.trackapps.translation.en.messages",
            "hydratk.extensions.trackapps.translation.info"
        ],
        "version": "0.1.3"
    },
    "hydratk-ext-yoda": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.yoda",
            "hydratk.extensions.yoda.bootstrapper",
            "hydratk.extensions.yoda.testengine",
            "hydratk.extensions.yoda.testobject",
            "hydratk.extensions.yoda.testresults",
            "hydratk.extensions.yoda.testresults.handlers",
            "hydratk.extensions.yoda.testresults.handlers.console",
            "hydratk.extensions.yoda.testresults.handlers.html",
            "hydratk.extensions.yoda.testresults.handlers.junit",
            "hydratk.extensions.yoda.testresults.handlers.text",
            "hydratk.extensions.yoda.testresults.handlers.xjunit",
            "hydratk.extensions.yoda.testresults.handlers.xjunit.testcase",
            "hydratk.extensions.yoda.testresults.handlers.xjunit.testreport",
            "hydratk.extensions.yoda.testresults.handlers.xjunit.testsuite",
            "hydratk.extensions.yoda.testresults.handlers.xjunit.utils",
            "hydratk.extensions.yoda.testresults.testresults",
            "hydratk.extensions.yoda.translation",
            "hydratk.extensions.yoda.translation.cs",
            "hydratk.extensions.yoda.translation.cs.help",
            "hydratk.extensions.yoda.translation.cs.messages",
            "hydratk.extensions.yoda.translation.en",
            "hydratk.extensions.yoda.translation.en.help",
            "hydratk.extensions.yoda.translation.en.messages",
            "hydratk.extensions.yoda.translation.info",
            "hydratk.extensions.yoda.util",
            "hydratk.extensions.yoda.util.check",
            "hydratk.extensions.yoda.util.data",
            "hydratk.extensions.yoda.yoda"
        ],
        "version": "0.2.4"
    },
    "hydratk-lib-network": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.lib",
            "hydratk.lib.bridge",
            "hydratk.lib.bridge.java",
            "hydratk.lib.bridge.selen",
            "hydratk.lib.data",
            "hydratk.lib.data.loader",
            "hydratk.lib.data.xml",
            "hydratk.lib.database",
            "hydratk.lib.database.dbo",
            "hydratk.lib.database.dbo.drivers",
            "hydratk.lib.database.dbo.drivers.mssql",
            "hydratk.lib.database.dbo.drivers.mssql.driver",
            "hydratk.lib.database.dbo.drivers.mysql",
            "hydratk.lib.database.dbo.drivers.mysql.driver",
            "hydratk.lib.database.dbo.drivers.oracle",
            "hydratk.lib.database.dbo.drivers.oracle.driver",
            "hydratk.lib.database.dbo.drivers.pgsql",
            "hydratk.lib.database.dbo.drivers.pgsql.driver",
            "hydratk.lib.network",
            "hydratk.lib.network.dbi",
            "hydratk.lib.network.dbi.client",
            "hydratk.lib.network.dbi.jdbc_client",
            "hydratk.lib.network.dbi.mssql_client",
            "hydratk.lib.network.dbi.mysql_client",
            "hydratk.lib.network.dbi.nosql",
            "hydratk.lib.network.dbi.nosql.cassandra_client",
            "hydratk.lib.network.dbi.nosql.mongodb_client",
            "hydratk.lib.network.dbi.nosql.redis_client",
            "hydratk.lib.network.dbi.oracle_client",
            "hydratk.lib.network.dbi.postgresql_client",
            "hydratk.lib.network.dbi.sqlite_client",
            "hydratk.lib.network.dependencies",
            "hydratk.lib.network.email",
            "hydratk.lib.network.email.client",
            "hydratk.lib.network.email.imap_client",
            "hydratk.lib.network.email.pop_client",
            "hydratk.lib.network.email.smtp_client",
            "hydratk.lib.network.ftp",
            "hydratk.lib.network.ftp.client",
            "hydratk.lib.network.ftp.ftp_client",
            "hydratk.lib.network.ftp.sftp_client",
            "hydratk.lib.network.ftp.tftp_client",
            "hydratk.lib.network.inet",
            "hydratk.lib.network.inet.client",
            "hydratk.lib.network.inet.packet",
            "hydratk.lib.network.jms",
            "hydratk.lib.network.jms.amqp_client",
            "hydratk.lib.network.jms.client",
            "hydratk.lib.network.jms.jms_client",
            "hydratk.lib.network.jms.mqtt_client",
            "hydratk.lib.network.jms.simplejms",
            "hydratk.lib.network.jms.stomp_client",
            "hydratk.lib.network.ldap",
            "hydratk.lib.network.ldap.client",
            "hydratk.lib.network.rest",
            "hydratk.lib.network.rest.client",
            "hydratk.lib.network.rpc",
            "hydratk.lib.network.rpc.client",
            "hydratk.lib.network.rpc.jsonrpc_client",
            "hydratk.lib.network.rpc.rmi_client",
            "hydratk.lib.network.rpc.xmlrpc_client",
            "hydratk.lib.network.soap",
            "hydratk.lib.network.soap.client",
            "hydratk.lib.network.soap.simplesoap",
            "hydratk.lib.network.term",
            "hydratk.lib.network.term.client",
            "hydratk.lib.network.term.ssh_client",
            "hydratk.lib.network.term.telnet_client",
            "hydratk.translation",
            "hydratk.translation.lib",
            "hydratk.translation.lib.bridge",
            "hydratk.translation.lib.bridge.java",
            "hydratk.translation.lib.bridge.java.cs",
            "hydratk.translation.lib.bridge.java.cs.messages",
            "hydratk.translation.lib.bridge.java.en",
            "hydratk.translation.lib.bridge.java.en.messages",
            "hydratk.translation.lib.bridge.selen",
            "hydratk.translation.lib.bridge.selen.cs",
            "hydratk.translation.lib.bridge.selen.cs.messages",
            "hydratk.translation.lib.bridge.selen.en",
            "hydratk.translation.lib.bridge.selen.en.messages",
            "hydratk.translation.lib.network",
            "hydratk.translation.lib.network.dbi",
            "hydratk.translation.lib.network.dbi.client",
            "hydratk.translation.lib.network.dbi.client.cs",
            "hydratk.translation.lib.network.dbi.client.cs.messages",
            "hydratk.translation.lib.network.dbi.client.en",
            "hydratk.translation.lib.network.dbi.client.en.messages",
            "hydratk.translation.lib.network.email",
            "hydratk.translation.lib.network.email.client",
            "hydratk.translation.lib.network.email.client.cs",
            "hydratk.translation.lib.network.email.client.cs.messages",
            "hydratk.translation.lib.network.email.client.en",
            "hydratk.translation.lib.network.email.client.en.messages",
            "hydratk.translation.lib.network.ftp",
            "hydratk.translation.lib.network.ftp.client",
            "hydratk.translation.lib.network.ftp.client.cs",
            "hydratk.translation.lib.network.ftp.client.cs.messages",
            "hydratk.translation.lib.network.ftp.client.en",
            "hydratk.translation.lib.network.ftp.client.en.messages",
            "hydratk.translation.lib.network.inet",
            "hydratk.translation.lib.network.inet.client",
            "hydratk.translation.lib.network.inet.client.cs",
            "hydratk.translation.lib.network.inet.client.cs.messages",
            "hydratk.translation.lib.network.inet.client.en",
            "hydratk.translation.lib.network.inet.client.en.messages",
            "hydratk.translation.lib.network.inet.packet",
            "hydratk.translation.lib.network.inet.packet.cs",
            "hydratk.translation.lib.network.inet.packet.cs.messages",
            "hydratk.translation.lib.network.inet.packet.en",
            "hydratk.translation.lib.network.inet.packet.en.messages",
            "hydratk.translation.lib.network.jms",
            "hydratk.translation.lib.network.jms.client",
            "hydratk.translation.lib.network.jms.client.cs",
            "hydratk.translation.lib.network.jms.client.cs.messages",
            "hydratk.translation.lib.network.jms.client.en",
            "hydratk.translation.lib.network.jms.client.en.messages",
            "hydratk.translation.lib.network.ldap",
            "hydratk.translation.lib.network.ldap.client",
            "hydratk.translation.lib.network.ldap.client.cs",
            "hydratk.translation.lib.network.ldap.client.cs.messages",
            "hydratk.translation.lib.network.ldap.client.en",
            "hydratk.translation.lib.network.ldap.client.en.messages",
            "hydratk.translation.lib.network.rest",
            "hydratk.translation.lib.network.rest.client",
            "hydratk.translation.lib.network.rest.client.cs",
            "hydratk.translation.lib.network.rest.client.cs.messages",
            "hydratk.translation.lib.network.rest.client.en",
            "hydratk.translation.lib.network.rest.client.en.messages",
            "hydratk.translation.lib.network.rpc",
            "hydratk.translation.lib.network.rpc.client",
            "hydratk.translation.lib.network.rpc.client.cs",
            "hydratk.translation.lib.network.rpc.client.cs.messages",
            "hydratk.translation.lib.network.rpc.client.en",
            "hydratk.translation.lib.network.rpc.client.en.messages",
            "hydratk.translation.lib.network.soap",
            "hydratk.translation.lib.network.soap.client",
            "hydratk.translation.lib.network.soap.client.cs",
            "hydratk.translation.lib.network.soap.client.cs.messages",
            "hydratk.translation.lib.network.soap.client.en",
            "hydratk.translation.lib.network.soap.client.en.messages",
            "hydratk.translation.lib.network.term",
            "hydratk.translation.lib.network.term.client",
            "hydratk.translation.lib.network.term.client.cs",
            "hydratk.translation.lib.network.term.client.cs.messages",
            "hydratk.translation.lib.network.term.client.en",
            "hydratk.translation.lib.network.term.client.en.messages"
        ],
        "version": "0.2.2"
    },
    "hydratk-lib-numeric": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.lib",
            "hydratk.lib.numeric",
            "hydratk.lib.numeric.dependencies"
        ],
        "version": "0.1.1"
    },
    "hydrator": {
        "cmdline": [],
        "modules": [
            "hydrator",
            "hydrator._hydrator",
            "hydrator.file_systems",
            "hydrator.file_systems.nextcloud",
            "hydrator.hydrators",
            "hydrator.hydrators.bash_profile",
            "hydrator.hydrators.commands",
            "hydrator.hydrators.gitconfig",
            "hydrator.hydrators.test_commands",
            "hydrator.lib",
            "hydrator.lib.dynafs",
            "hydrator.lib.nextcloud"
        ],
        "version": "0.2.0"
    },
    "hydraulic": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "hydraulics": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hydrawiser": {
        "cmdline": [],
        "modules": [
            "hydrawiser",
            "hydrawiser.core",
            "hydrawiser.helpers"
        ],
        "version": "0.2"
    },
    "hydro": {
        "cmdline": [],
        "modules": [
            "complex_plan",
            "complex_plan.conf",
            "complex_plan.optimizer",
            "complex_plan.sample_topology",
            "geo_queries",
            "geo_queries.conf",
            "geo_queries.geo_widget_topology",
            "geo_queries.optimizer",
            "hydro",
            "hydro.base_classes",
            "hydro.cache",
            "hydro.cache.base_classes",
            "hydro.cache.in_memory",
            "hydro.cache.mysql_cache",
            "hydro.cache.test_in_memory",
            "hydro.common",
            "hydro.common.configurator",
            "hydro.common.execution_plan",
            "hydro.common.logger",
            "hydro.common.test_execution_plan",
            "hydro.common.utils",
            "hydro.conf",
            "hydro.conf.logger",
            "hydro.conf.settings",
            "hydro.conf.settings_base",
            "hydro.conf.settings_dev",
            "hydro.connector_factory",
            "hydro.connectors",
            "hydro.connectors.base_classes",
            "hydro.connectors.check_connections",
            "hydro.connectors.mysql",
            "hydro.connectors.static",
            "hydro.connectors.test_conncetor_base",
            "hydro.connectors.test_hydro_cluster",
            "hydro.connectors.test_vertica",
            "hydro.connectors.vertica",
            "hydro.exceptions",
            "hydro.hydro_cli",
            "hydro.hydro_cluster",
            "hydro.query_engine",
            "hydro.query_engine_factory",
            "hydro.stats_engine",
            "hydro.test_base_classes",
            "hydro.test_transformers",
            "hydro.topology",
            "hydro.topology.conf",
            "hydro.topology.optimizer",
            "hydro.topology.test_topology_base",
            "hydro.topology_base",
            "hydro.transformers",
            "hydro.types",
            "topology_injection",
            "topology_injection.conf",
            "topology_injection.optimizer",
            "topology_injection.topology_injection_topology"
        ],
        "version": "0.1.7"
    },
    "hydro-integrations": {
        "cmdline": [],
        "modules": [
            "hydro_integrations",
            "hydro_integrations.aws",
            "hydro_integrations.aws.cloudformation",
            "hydro_integrations.aws.exceptions",
            "hydro_integrations.aws.helpers",
            "hydro_integrations.aws.sagemaker",
            "hydro_integrations.aws.sagemaker.exceptions",
            "hydro_integrations.aws.sagemaker.traffic_shadowing",
            "hydro_integrations.aws.sagemaker.traffic_shadowing.traffic_shadowing",
            "hydro_integrations.aws.sagemaker.utils"
        ],
        "version": "2.3.0"
    },
    "hydro-model-builder": {
        "cmdline": [],
        "modules": [
            "hydro_model_builder",
            "hydro_model_builder.cli",
            "hydro_model_builder.datahandler",
            "hydro_model_builder.model_builder",
            "hydro_model_builder.model_generator"
        ],
        "version": "0.0.7"
    },
    "hydro-python-api": {
        "cmdline": [],
        "modules": [
            "hydro_api"
        ],
        "version": "1.1.3"
    },
    "hydro-serving-grpc": {
        "cmdline": [],
        "modules": [
            "hydro_serving_grpc",
            "hydro_serving_grpc.auto_od",
            "hydro_serving_grpc.auto_od.api_pb2",
            "hydro_serving_grpc.auto_od.api_pb2_grpc",
            "hydro_serving_grpc.contract",
            "hydro_serving_grpc.contract.data_profile_types_pb2",
            "hydro_serving_grpc.contract.data_profile_types_pb2_grpc",
            "hydro_serving_grpc.contract.model_contract_pb2",
            "hydro_serving_grpc.contract.model_contract_pb2_grpc",
            "hydro_serving_grpc.contract.model_field_pb2",
            "hydro_serving_grpc.contract.model_field_pb2_grpc",
            "hydro_serving_grpc.contract.model_signature_pb2",
            "hydro_serving_grpc.contract.model_signature_pb2_grpc",
            "hydro_serving_grpc.gateway",
            "hydro_serving_grpc.gateway.api_pb2",
            "hydro_serving_grpc.gateway.api_pb2_grpc",
            "hydro_serving_grpc.kafka",
            "hydro_serving_grpc.kafka.kafka_messages_pb2",
            "hydro_serving_grpc.kafka.kafka_messages_pb2_grpc",
            "hydro_serving_grpc.manager",
            "hydro_serving_grpc.manager.api_pb2",
            "hydro_serving_grpc.manager.api_pb2_grpc",
            "hydro_serving_grpc.manager.applications_pb2",
            "hydro_serving_grpc.manager.applications_pb2_grpc",
            "hydro_serving_grpc.manager.entities_pb2",
            "hydro_serving_grpc.manager.entities_pb2_grpc",
            "hydro_serving_grpc.manager.serving_pb2",
            "hydro_serving_grpc.manager.serving_pb2_grpc",
            "hydro_serving_grpc.monitoring",
            "hydro_serving_grpc.monitoring.api_pb2",
            "hydro_serving_grpc.monitoring.api_pb2_grpc",
            "hydro_serving_grpc.monitoring.metadata_pb2",
            "hydro_serving_grpc.monitoring.metadata_pb2_grpc",
            "hydro_serving_grpc.onnx",
            "hydro_serving_grpc.onnx.onnx_pb2",
            "hydro_serving_grpc.onnx.onnx_pb2_grpc",
            "hydro_serving_grpc.reqstore",
            "hydro_serving_grpc.reqstore.reqstore_client",
            "hydro_serving_grpc.reqstore.reqstore_service_pb2",
            "hydro_serving_grpc.reqstore.reqstore_service_pb2_grpc",
            "hydro_serving_grpc.tf",
            "hydro_serving_grpc.tf.api",
            "hydro_serving_grpc.tf.api.model_pb2",
            "hydro_serving_grpc.tf.api.model_pb2_grpc",
            "hydro_serving_grpc.tf.api.predict_pb2",
            "hydro_serving_grpc.tf.api.predict_pb2_grpc",
            "hydro_serving_grpc.tf.api.prediction_service_pb2",
            "hydro_serving_grpc.tf.api.prediction_service_pb2_grpc",
            "hydro_serving_grpc.tf.tensor_pb2",
            "hydro_serving_grpc.tf.tensor_pb2_grpc",
            "hydro_serving_grpc.tf.tensor_shape_pb2",
            "hydro_serving_grpc.tf.tensor_shape_pb2_grpc",
            "hydro_serving_grpc.tf.types_pb2",
            "hydro_serving_grpc.tf.types_pb2_grpc",
            "hydro_serving_grpc.vis",
            "hydro_serving_grpc.vis.api_pb2",
            "hydro_serving_grpc.vis.api_pb2_grpc"
        ],
        "version": "2.4.0"
    },
    "hydroai": {
        "cmdline": [],
        "modules": [
            "hydroai",
            "hydroai._nbdev",
            "hydroai.core",
            "hydroai.data",
            "hydroai.model",
            "hydroai.model.data",
            "hydroai.model.evaluation"
        ],
        "version": "0.0.1"
    },
    "hydrobox": {
        "cmdline": [],
        "modules": [
            "hydrobox",
            "hydrobox.discharge",
            "hydrobox.discharge.catchment",
            "hydrobox.discharge.indices",
            "hydrobox.gstat",
            "hydrobox.io",
            "hydrobox.io.random",
            "hydrobox.preprocessing",
            "hydrobox.preprocessing.scale",
            "hydrobox.preprocessing.union",
            "hydrobox.signal",
            "hydrobox.signal.filter",
            "hydrobox.signal.optimize",
            "hydrobox.stats",
            "hydrobox.stats.regression",
            "hydrobox.stats.rolling",
            "hydrobox.tests",
            "hydrobox.tests.decorators",
            "hydrobox.tests.discharge",
            "hydrobox.tests.discharge.catchment",
            "hydrobox.tests.discharge.indices",
            "hydrobox.tests.gstat",
            "hydrobox.tests.io",
            "hydrobox.tests.preprocessing",
            "hydrobox.tests.preprocessing.scale",
            "hydrobox.tests.preprocessing.union",
            "hydrobox.tests.signal",
            "hydrobox.tests.stats",
            "hydrobox.tests.stats.regression",
            "hydrobox.tests.stats.rolling",
            "hydrobox.toolbox",
            "hydrobox.utils",
            "hydrobox.utils.converters",
            "hydrobox.utils.decorators"
        ],
        "version": "0.1.6"
    },
    "hydrobr": {
        "cmdline": [],
        "modules": [
            "hydrobr",
            "hydrobr.get_data",
            "hydrobr.graphics",
            "hydrobr.preprocessing",
            "hydrobr.save"
        ],
        "version": "0.1.1"
    },
    "hydrocarbon": {
        "cmdline": [],
        "modules": [
            "hydrocarbon",
            "hydrocarbon.app",
            "hydrocarbon.core"
        ],
        "version": "0.0.3"
    },
    "hydrocluster": {
        "cmdline": [],
        "modules": [
            "hydrocluster",
            "hydrocluster.core",
            "hydrocluster.core.pdbcluster",
            "hydrocluster.core.s_dbw",
            "hydrocluster.dbcreator",
            "hydrocluster.dbcreator.testlist",
            "hydrocluster.hydrocluster",
            "hydrocluster.ui",
            "hydrocluster.ui.cli",
            "hydrocluster.ui.tkgui"
        ],
        "version": "0.2.0"
    },
    "hydrocomp": {
        "cmdline": [],
        "modules": [
            "hydrocomp"
        ],
        "version": "0.1.7"
    },
    "hydrodata": {
        "cmdline": [],
        "modules": [],
        "version": "0.7.2"
    },
    "hydroengine": {
        "cmdline": [],
        "modules": [
            "hydroengine",
            "hydroengine.cli"
        ],
        "version": "0.0.30"
    },
    "hydroerr": {
        "cmdline": [],
        "modules": [
            "HydroErr",
            "HydroErr.HydroErr"
        ],
        "version": "1.24"
    },
    "hydroeval": {
        "cmdline": [],
        "modules": [
            "hydroeval",
            "hydroeval.hydroeval",
            "hydroeval.objective_functions",
            "hydroeval.version"
        ],
        "version": "0.0.3"
    },
    "hydroffice-soundspeed": {
        "cmdline": [],
        "modules": [
            "sis",
            "sis.controlpanel",
            "sis.kmbase",
            "sis.mainwin",
            "sis.process",
            "sis.replaythread",
            "sis.run",
            "sis.svpthread",
            "soundspeed",
            "soundspeed.appdirs",
            "soundspeed.appdirs.appdirs",
            "soundspeed.atlas",
            "soundspeed.atlas.abstract",
            "soundspeed.atlas.atlases",
            "soundspeed.atlas.ftp",
            "soundspeed.atlas.rtofs",
            "soundspeed.atlas.rtofs.rtofs",
            "soundspeed.atlas.woa09",
            "soundspeed.atlas.woa09.woa09",
            "soundspeed.atlas.woa13",
            "soundspeed.atlas.woa13.woa13",
            "soundspeed.base",
            "soundspeed.base.basedb",
            "soundspeed.base.callbacks",
            "soundspeed.base.callbacks.abstract_callbacks",
            "soundspeed.base.callbacks.cli_callbacks",
            "soundspeed.base.callbacks.test_callbacks",
            "soundspeed.base.gdal_aux",
            "soundspeed.base.geodesy",
            "soundspeed.base.helper",
            "soundspeed.base.progress",
            "soundspeed.base.progress.abstract_progress",
            "soundspeed.base.progress.cli_progress",
            "soundspeed.base.setup",
            "soundspeed.base.setup_db",
            "soundspeed.base.setup_sql",
            "soundspeed.base.testing",
            "soundspeed.client",
            "soundspeed.client.client",
            "soundspeed.client.clientlist",
            "soundspeed.db",
            "soundspeed.db.db",
            "soundspeed.db.export",
            "soundspeed.db.plot",
            "soundspeed.db.point",
            "soundspeed.formats",
            "soundspeed.formats.abstract",
            "soundspeed.formats.km",
            "soundspeed.formats.readers",
            "soundspeed.formats.readers.abstract",
            "soundspeed.formats.readers.aoml",
            "soundspeed.formats.readers.asvp",
            "soundspeed.formats.readers.caris",
            "soundspeed.formats.readers.castaway",
            "soundspeed.formats.readers.coordinates",
            "soundspeed.formats.readers.digibarpro",
            "soundspeed.formats.readers.digibars",
            "soundspeed.formats.readers.elac",
            "soundspeed.formats.readers.idronaut",
            "soundspeed.formats.readers.iss",
            "soundspeed.formats.readers.mvp",
            "soundspeed.formats.readers.oceanscience",
            "soundspeed.formats.readers.regex_helpers",
            "soundspeed.formats.readers.saiv",
            "soundspeed.formats.readers.seabird",
            "soundspeed.formats.readers.simrad",
            "soundspeed.formats.readers.sippican",
            "soundspeed.formats.readers.sonardyne",
            "soundspeed.formats.readers.turo",
            "soundspeed.formats.readers.unb",
            "soundspeed.formats.readers.valeport",
            "soundspeed.formats.writers",
            "soundspeed.formats.writers.abstract",
            "soundspeed.formats.writers.asvp",
            "soundspeed.formats.writers.calc",
            "soundspeed.formats.writers.caris",
            "soundspeed.formats.writers.csv",
            "soundspeed.formats.writers.elac",
            "soundspeed.formats.writers.hypack",
            "soundspeed.formats.writers.ixblue",
            "soundspeed.formats.writers.ncei",
            "soundspeed.formats.writers.qps",
            "soundspeed.formats.writers.sonardyne",
            "soundspeed.formats.writers.unb",
            "soundspeed.listener",
            "soundspeed.listener.abstract",
            "soundspeed.listener.listeners",
            "soundspeed.listener.mvp",
            "soundspeed.listener.mvp.mvp",
            "soundspeed.listener.seacat",
            "soundspeed.listener.seacat.sbe_serialcomms",
            "soundspeed.listener.sippican",
            "soundspeed.listener.sippican.sippican",
            "soundspeed.listener.sis",
            "soundspeed.listener.sis.sis",
            "soundspeed.logging",
            "soundspeed.logging.filters",
            "soundspeed.logging.sqlitehandler",
            "soundspeed.logging.sqlitelogging",
            "soundspeed.logging.test_logging",
            "soundspeed.profile",
            "soundspeed.profile.dicts",
            "soundspeed.profile.metadata",
            "soundspeed.profile.more",
            "soundspeed.profile.oceanography",
            "soundspeed.profile.profile",
            "soundspeed.profile.profilelist",
            "soundspeed.profile.ray_tracing",
            "soundspeed.profile.ray_tracing.ray_path",
            "soundspeed.profile.ray_tracing.ray_tracing",
            "soundspeed.profile.samples",
            "soundspeed.server",
            "soundspeed.server.server",
            "soundspeed.soundspeed",
            "soundspeed.temp",
            "soundspeedmanager",
            "soundspeedmanager.dialogs",
            "soundspeedmanager.dialogs.dialog",
            "soundspeedmanager.dialogs.export_multi_profile_dialog",
            "soundspeedmanager.dialogs.export_profile_metadata_dialog",
            "soundspeedmanager.dialogs.export_single_profile_dialog",
            "soundspeedmanager.dialogs.import_data_dialog",
            "soundspeedmanager.dialogs.import_multi_profile_dialog",
            "soundspeedmanager.dialogs.import_single_profile_dialog",
            "soundspeedmanager.dialogs.metadata_dialog",
            "soundspeedmanager.dialogs.plot_multi_profile_dialog",
            "soundspeedmanager.dialogs.plot_profiles_dialog",
            "soundspeedmanager.dialogs.proc_data_model",
            "soundspeedmanager.dialogs.project_new_dialog",
            "soundspeedmanager.dialogs.project_rename_dialog",
            "soundspeedmanager.dialogs.project_switch_dialog",
            "soundspeedmanager.dialogs.raw_data_model",
            "soundspeedmanager.dialogs.receive_dialog",
            "soundspeedmanager.dialogs.reference_dialog",
            "soundspeedmanager.dialogs.sis_data_model",
            "soundspeedmanager.dialogs.spreadsheet_dialog",
            "soundspeedmanager.dialogs.text_editor",
            "soundspeedmanager.dialogs.text_editor_dialog",
            "soundspeedmanager.gui",
            "soundspeedmanager.mainwin",
            "soundspeedmanager.qt_callbacks",
            "soundspeedmanager.qt_progress",
            "soundspeedmanager.widgets",
            "soundspeedmanager.widgets.database",
            "soundspeedmanager.widgets.dataplots",
            "soundspeedmanager.widgets.editor",
            "soundspeedmanager.widgets.info",
            "soundspeedmanager.widgets.navtoolbar",
            "soundspeedmanager.widgets.refraction",
            "soundspeedmanager.widgets.seacat",
            "soundspeedmanager.widgets.server",
            "soundspeedmanager.widgets.settings",
            "soundspeedmanager.widgets.widget",
            "soundspeedsettings",
            "soundspeedsettings.gui",
            "soundspeedsettings.mainwin",
            "soundspeedsettings.widgets",
            "soundspeedsettings.widgets.general",
            "soundspeedsettings.widgets.input",
            "soundspeedsettings.widgets.listeners",
            "soundspeedsettings.widgets.main",
            "soundspeedsettings.widgets.output",
            "soundspeedsettings.widgets.widget"
        ],
        "version": "2017.0.0"
    },
    "hydrofunctions": {
        "cmdline": [],
        "modules": [
            "hydrofunctions",
            "hydrofunctions.charts",
            "hydrofunctions.exceptions",
            "hydrofunctions.helpers",
            "hydrofunctions.hydrofunctions",
            "hydrofunctions.station",
            "hydrofunctions.typing",
            "hydrofunctions.usgs_rdb",
            "tests",
            "tests.fixtures",
            "tests.fixtures_daily_dupe",
            "tests.fixtures_data",
            "tests.fixtures_recent_only",
            "tests.fixtures_tzfail",
            "tests.fixtures_usgs_rdb",
            "tests.test_charts",
            "tests.test_exceptions",
            "tests.test_helpers",
            "tests.test_hydrofunctions",
            "tests.test_online_resources",
            "tests.test_station",
            "tests.test_typing",
            "tests.test_usgs_rdb"
        ],
        "version": "0.2.0"
    },
    "hydrogels": {
        "cmdline": [],
        "modules": [
            "hydrogels",
            "hydrogels.generators",
            "hydrogels.generators.gels",
            "hydrogels.generators.polymers",
            "hydrogels.theory",
            "hydrogels.theory.models",
            "hydrogels.theory.models.analytical",
            "hydrogels.theory.models.integrator",
            "hydrogels.theory.models.utils",
            "hydrogels.theory.test",
            "hydrogels.theory.test.test_models",
            "hydrogels.theory.utils",
            "hydrogels.utils",
            "hydrogels.utils.simulation",
            "hydrogels.utils.system",
            "hydrogels.utils.topology",
            "protocols",
            "test",
            "test.test_generators",
            "test.test_utils"
        ],
        "version": "0.0.1"
    },
    "hydrograph-py": {
        "cmdline": [],
        "modules": [
            "Hydrograph",
            "Hydrograph.extreme_analysis",
            "Hydrograph.hydrograph"
        ],
        "version": "1.0.1"
    },
    "hydroid": {
        "cmdline": [],
        "modules": [
            "hydroid",
            "hydroid.HYDROIDexp",
            "hydroid.HYDROIDpred",
            "hydroid.command_line"
        ],
        "version": "0.0.9"
    },
    "hydroinform": {
        "cmdline": [],
        "modules": [
            "hydroinform",
            "hydroinform.DFS",
            "hydroinform.Mike_river",
            "hydroinform.NetCDF",
            "hydroinform.core",
            "hydroinform.dfs2gdal",
            "hydroinform.hyimport2",
            "hydroinform.hymod",
            "hydroinform.hyplot",
            "hydroinform.hyshape",
            "hydroinform.ts_tools"
        ],
        "version": "0.1.15"
    },
    "hydrointerp": {
        "cmdline": [],
        "modules": [
            "hydrointerp",
            "hydrointerp.core",
            "hydrointerp.datasets",
            "hydrointerp.interp2d",
            "hydrointerp.io",
            "hydrointerp.io.metservice",
            "hydrointerp.io.nasa",
            "hydrointerp.io.raster",
            "hydrointerp.tests",
            "hydrointerp.tests.nasa_gpm_assessments",
            "hydrointerp.tests.station_correction",
            "hydrointerp.tests.test_interp2d",
            "hydrointerp.tests.utest_adj_grid_from_points",
            "hydrointerp.util"
        ],
        "version": "1.2.8"
    },
    "hydrolm": {
        "cmdline": [],
        "modules": [
            "hydrolm",
            "hydrolm.datasets",
            "hydrolm.lm",
            "hydrolm.tests",
            "hydrolm.tests.test_regressions",
            "hydrolm.util"
        ],
        "version": "1.0.7"
    },
    "hydromodpy-meliorist": {
        "cmdline": [],
        "modules": [
            "hydromodpy",
            "hydromodpy.utils",
            "hydromodpy.utils.GOF"
        ],
        "version": "0.0.1"
    },
    "hydropandas": {
        "cmdline": [],
        "modules": [
            "hydropandas",
            "hydropandas.extensions",
            "hydropandas.extensions.accessor",
            "hydropandas.extensions.geo",
            "hydropandas.extensions.gwobs",
            "hydropandas.extensions.plots",
            "hydropandas.extensions.stats",
            "hydropandas.io",
            "hydropandas.io.io_arctic",
            "hydropandas.io.io_dino",
            "hydropandas.io.io_fieldlogger",
            "hydropandas.io.io_knmi",
            "hydropandas.io.io_menyanthes",
            "hydropandas.io.io_modflow",
            "hydropandas.io.io_pastas",
            "hydropandas.io.io_postgres",
            "hydropandas.io.io_pystore",
            "hydropandas.io.io_waterinfo",
            "hydropandas.io.io_wiski",
            "hydropandas.io.io_xml",
            "hydropandas.obs_collection",
            "hydropandas.observation",
            "hydropandas.util"
        ],
        "version": "0.2.3"
    },
    "hydrophis": {
        "cmdline": [],
        "modules": [
            "zbb_crawler",
            "zbb_crawler.main"
        ],
        "version": "1.0.1"
    },
    "hydropt": {
        "cmdline": [],
        "modules": [
            "hydropt",
            "hydropt.action",
            "hydropt.constraints",
            "hydropt.core",
            "hydropt.model",
            "hydropt.scenarios",
            "hydropt.utils"
        ],
        "version": "0.0.3"
    },
    "hydropy": {
        "cmdline": [],
        "modules": [
            "hydropy",
            "hydropy.baseflow",
            "hydropy.exceptions",
            "hydropy.flowanalysis",
            "hydropy.ipython",
            "hydropy.old_tests",
            "hydropy.reading_third_party_data",
            "hydropy.storm"
        ],
        "version": "0.1.2"
    },
    "hydrosdk": {
        "cmdline": [],
        "modules": [
            "hydrosdk",
            "hydrosdk.application",
            "hydrosdk.cluster",
            "hydrosdk.contract",
            "hydrosdk.data",
            "hydrosdk.data.conversions",
            "hydrosdk.data.types",
            "hydrosdk.deployment_configuration",
            "hydrosdk.exceptions",
            "hydrosdk.image",
            "hydrosdk.modelversion",
            "hydrosdk.monitoring",
            "hydrosdk.predictor",
            "hydrosdk.servable",
            "hydrosdk.utils"
        ],
        "version": "2.4.0.post1"
    },
    "hydrosensorreader": {
        "cmdline": [],
        "modules": [
            "hydsensread",
            "hydsensread.file_example",
            "hydsensread.file_parser",
            "hydsensread.file_parser.abstract_file_parser",
            "hydsensread.file_parser.concrete_file_parser",
            "hydsensread.file_reader",
            "hydsensread.file_reader.abstract_file_reader",
            "hydsensread.file_reader.compagny_file_reader",
            "hydsensread.file_reader.compagny_file_reader.campbell_cr_file_reader",
            "hydsensread.file_reader.compagny_file_reader.hanna_file_reader",
            "hydsensread.file_reader.compagny_file_reader.hydrolab_file_reader",
            "hydsensread.file_reader.compagny_file_reader.maxxam_file_reader",
            "hydsensread.file_reader.compagny_file_reader.solinst_file_reader",
            "hydsensread.file_reader.compagny_file_reader.what_csv_file_reader",
            "hydsensread.file_reader.web_page_reader",
            "hydsensread.file_reader.web_page_reader.gnb_core_samples_web_scraper",
            "hydsensread.file_reader.web_page_reader.gnb_water_quality_web_file_reader",
            "hydsensread.file_reader.web_page_reader.read_mddelcc_rses",
            "hydsensread.site_and_records",
            "hydsensread.site_and_records.records",
            "hydsensread.site_and_records.site",
            "hydsensread.tests",
            "hydsensread.tests.chemistry_records_test",
            "hydsensread.tests.record_test",
            "hydsensread.tests.time_serie_records_test"
        ],
        "version": "1.7.4"
    },
    "hydroshare": {
        "cmdline": [],
        "modules": [
            "hs_access_control",
            "hs_access_control.migrations",
            "hs_access_control.migrations.0001_initial",
            "hs_access_control.migrations.0002_auto_20150817_1150",
            "hs_access_control.migrations.0003_auto_20150824_2215",
            "hs_access_control.migrations.0004_remove_useraccess_admin",
            "hs_access_control.migrations.0005_remove_useraccess_active",
            "hs_access_control.migrations.0006_auto_add_new_fields",
            "hs_access_control.migrations.0007_manual_populate_new_fields",
            "hs_access_control.migrations.0008_auto_remove_many2many_relationships",
            "hs_access_control.migrations.0009_auto_remove_original_fields",
            "hs_access_control.migrations.0010_auto_rename_related_names",
            "hs_access_control.migrations.0011_auto_rename_new_fields_to_original_names",
            "hs_access_control.migrations.0012_auto_disallow_nulls",
            "hs_access_control.migrations.0013_auto_add_uniqueness_constraints",
            "hs_access_control.migrations.0014_auto_20160424_1628",
            "hs_access_control.migrations.0015_manual_remove_redundant_privileges",
            "hs_access_control.migrations.0016_auto_enforce_constraints",
            "hs_access_control.migrations.0017_auto_add_provenance",
            "hs_access_control.migrations.0017_groupaccess_auto_approve",
            "hs_access_control.migrations.0018_auto_tune_provenance",
            "hs_access_control.migrations.0019_manual_populate_provenance",
            "hs_access_control.migrations.0020_merge",
            "hs_access_control.models",
            "hs_access_control.tests",
            "hs_access_control.tests.test_basic_function",
            "hs_access_control.tests.test_create_group",
            "hs_access_control.tests.test_create_group_2",
            "hs_access_control.tests.test_create_resource",
            "hs_access_control.tests.test_create_user",
            "hs_access_control.tests.test_delete",
            "hs_access_control.tests.test_explicit_access",
            "hs_access_control.tests.test_explicit_group_access",
            "hs_access_control.tests.test_explicit_resource_access",
            "hs_access_control.tests.test_group_flags",
            "hs_access_control.tests.test_group_membership_request",
            "hs_access_control.tests.test_group_sharing",
            "hs_access_control.tests.test_preserve_ownership",
            "hs_access_control.tests.test_protect_group",
            "hs_access_control.tests.test_provenance_function",
            "hs_access_control.tests.test_provenance_units",
            "hs_access_control.tests.test_resource_flags",
            "hs_access_control.tests.test_share_resource",
            "hs_access_control.tests.test_share_with_self",
            "hs_access_control.tests.test_undo",
            "hs_access_control.tests.test_units",
            "hs_access_control.tests.test_user_active",
            "hs_access_control.tests.test_user_delete",
            "hs_access_control.tests.utilities",
            "hs_app_netCDF",
            "hs_app_netCDF.admin",
            "hs_app_netCDF.api",
            "hs_app_netCDF.apps",
            "hs_app_netCDF.forms",
            "hs_app_netCDF.migrations",
            "hs_app_netCDF.migrations.0001_initial",
            "hs_app_netCDF.migrations.0002_auto_20150813_1215",
            "hs_app_netCDF.migrations.0003_netcdfresource",
            "hs_app_netCDF.migrations.0004_auto_20160921_2320",
            "hs_app_netCDF.migrations.0005_auto_20161111_2322",
            "hs_app_netCDF.migrations.0006_auto_20170120_1445",
            "hs_app_netCDF.models",
            "hs_app_netCDF.page_processors",
            "hs_app_netCDF.receivers",
            "hs_app_netCDF.serialization",
            "hs_app_netCDF.tasks",
            "hs_app_netCDF.tests",
            "hs_app_netCDF.tests.test_netcdf_metadata",
            "hs_app_netCDF.tests.test_netcdf_metadata_user_zone",
            "hs_app_netCDF.urls",
            "hs_app_timeseries",
            "hs_app_timeseries.admin",
            "hs_app_timeseries.api",
            "hs_app_timeseries.apps",
            "hs_app_timeseries.forms",
            "hs_app_timeseries.migrations",
            "hs_app_timeseries.migrations.0001_auto_20160829_2156",
            "hs_app_timeseries.migrations.0001_initial",
            "hs_app_timeseries.migrations.0002_auto_20150813_1247",
            "hs_app_timeseries.migrations.0003_timeseriesresource",
            "hs_app_timeseries.migrations.0004_auto_20160526_2026",
            "hs_app_timeseries.migrations.0005_auto_20160713_1905",
            "hs_app_timeseries.migrations.custom_data_migration_20160718",
            "hs_app_timeseries.models",
            "hs_app_timeseries.page_processors",
            "hs_app_timeseries.receivers",
            "hs_app_timeseries.serialization",
            "hs_app_timeseries.tasks",
            "hs_app_timeseries.tests",
            "hs_app_timeseries.tests.test_timeseries_metadata",
            "hs_app_timeseries.tests.test_timeseries_metadata_user_zone",
            "hs_app_timeseries.tests.test_update_sqlite_file_view_function",
            "hs_app_timeseries.urls",
            "hs_app_timeseries.views",
            "hs_collection_resource",
            "hs_collection_resource.admin",
            "hs_collection_resource.apps",
            "hs_collection_resource.migrations",
            "hs_collection_resource.migrations.0001_initial",
            "hs_collection_resource.migrations.0002_collectiondeletedresource_resource_owners",
            "hs_collection_resource.models",
            "hs_collection_resource.page_processors",
            "hs_collection_resource.patches",
            "hs_collection_resource.patches.add_hasPart_term_django_shell",
            "hs_collection_resource.receivers",
            "hs_collection_resource.tests",
            "hs_collection_resource.tests.test_collection",
            "hs_collection_resource.urls",
            "hs_collection_resource.utils",
            "hs_collection_resource.views",
            "hs_composite_resource",
            "hs_composite_resource.apps",
            "hs_composite_resource.migrations",
            "hs_composite_resource.migrations.0001_initial",
            "hs_composite_resource.models",
            "hs_composite_resource.page_processors",
            "hs_composite_resource.receivers",
            "hs_composite_resource.tests",
            "hs_composite_resource.tests.test_composite_resource",
            "hs_composite_resource.tests.test_composite_resource_user_zone",
            "hs_core",
            "hs_core.admin",
            "hs_core.apps",
            "hs_core.authorization",
            "hs_core.autocomplete_light_registry",
            "hs_core.customer_form",
            "hs_core.discovery_form",
            "hs_core.forms",
            "hs_core.hydro_realtime_signal_processor",
            "hs_core.hydroshare",
            "hs_core.hydroshare.date_util",
            "hs_core.hydroshare.hs_bagit",
            "hs_core.hydroshare.resource",
            "hs_core.hydroshare.users",
            "hs_core.hydroshare.utils",
            "hs_core.languages_iso",
            "hs_core.management",
            "hs_core.management.commands",
            "hs_core.management.commands.create_site",
            "hs_core.management.commands.fix_permissions",
            "hs_core.metadata_terms_urls",
            "hs_core.migrations",
            "hs_core.migrations.0001_initial",
            "hs_core.migrations.0002_genericresource_resource_type",
            "hs_core.migrations.0003_auto_20150721_1122",
            "hs_core.migrations.0004_auto_20150721_1125",
            "hs_core.migrations.0005_auto_20150910_0233",
            "hs_core.migrations.0006_auto_20150917_1515",
            "hs_core.migrations.0007_auto_20151114_1618",
            "hs_core.migrations.0008_auto_20151114_2024",
            "hs_core.migrations.0009_auto_20151114_2105",
            "hs_core.migrations.0010_auto_20151114_2205",
            "hs_core.migrations.0011_auto_20151114_2231",
            "hs_core.migrations.0012_auto_20151114_2243",
            "hs_core.migrations.0013_auto_20151114_2314",
            "hs_core.migrations.0014_auto_20151123_1451",
            "hs_core.migrations.0015_auto_20160122_1939",
            "hs_core.migrations.0015_auto_20160210_1725",
            "hs_core.migrations.0016_merge",
            "hs_core.migrations.0017_auto_20160217_1629",
            "hs_core.migrations.0017_auto_20160219_2039",
            "hs_core.migrations.0018_merge",
            "hs_core.migrations.0019_baseresource_locked_time",
            "hs_core.migrations.0020_baseresource_collections",
            "hs_core.migrations.0021_auto_20160427_1807",
            "hs_core.migrations.0021_fundingagency",
            "hs_core.migrations.0021_hstore_extension",
            "hs_core.migrations.0022_baseresource_extra_metadata",
            "hs_core.migrations.0022_resourcefile_resource_file_size",
            "hs_core.migrations.0023_merge",
            "hs_core.migrations.0024_baseresource_resource_federation_path",
            "hs_core.migrations.0024_custom_migration_metadata_namespace_20160527",
            "hs_core.migrations.0025_resourcefile_fed_resource_file",
            "hs_core.migrations.0026_merge",
            "hs_core.migrations.0027_auto_20160818_2308",
            "hs_core.migrations.0028_baseresource_extra_data",
            "hs_core.migrations.0029_auto_20161123_1858",
            "hs_core.migrations.0030_resourcefile_file_folder",
            "hs_core.migrations.0031_auto_20170112_2202",
            "hs_core.migrations.0032_auto_20170120_1445",
            "hs_core.models",
            "hs_core.page_processors",
            "hs_core.receivers",
            "hs_core.resourcemap_urls",
            "hs_core.robots",
            "hs_core.router",
            "hs_core.search_indexes",
            "hs_core.serialization",
            "hs_core.signals",
            "hs_core.tasks",
            "hs_core.templatetags",
            "hs_core.templatetags.hydroshare_tags",
            "hs_core.testing",
            "hs_core.tests",
            "hs_core.tests.api",
            "hs_core.tests.api.native",
            "hs_core.tests.api.native.test_add_resource_files",
            "hs_core.tests.api.native.test_bagit",
            "hs_core.tests.api.native.test_copy_resource",
            "hs_core.tests.api.native.test_core_metadata",
            "hs_core.tests.api.native.test_create_account",
            "hs_core.tests.api.native.test_create_new_version_resource",
            "hs_core.tests.api.native.test_create_resource",
            "hs_core.tests.api.native.test_delete_resource",
            "hs_core.tests.api.native.test_delete_resource_file",
            "hs_core.tests.api.native.test_get_capabilities",
            "hs_core.tests.api.native.test_get_checksum",
            "hs_core.tests.api.native.test_get_citation",
            "hs_core.tests.api.native.test_get_resource",
            "hs_core.tests.api.native.test_get_resource_by_shortkey",
            "hs_core.tests.api.native.test_get_resource_file",
            "hs_core.tests.api.native.test_get_resource_types",
            "hs_core.tests.api.native.test_group_from_id",
            "hs_core.tests.api.native.test_hstore_extra_metadata",
            "hs_core.tests.api.native.test_irods_user_zone_federation",
            "hs_core.tests.api.native.test_publish_resource",
            "hs_core.tests.api.native.test_resolve_doi",
            "hs_core.tests.api.native.test_resource_file_folder_operations",
            "hs_core.tests.api.native.test_robots",
            "hs_core.tests.api.native.test_update_account",
            "hs_core.tests.api.native.test_update_group",
            "hs_core.tests.api.native.test_update_metadata",
            "hs_core.tests.api.native.test_update_resource_file",
            "hs_core.tests.api.native.test_user_from_id",
            "hs_core.tests.api.native.test_utils",
            "hs_core.tests.api.rest",
            "hs_core.tests.api.rest.base",
            "hs_core.tests.api.rest.test_copy_resource",
            "hs_core.tests.api.rest.test_create_resource",
            "hs_core.tests.api.rest.test_create_resource_version",
            "hs_core.tests.api.rest.test_custom_scimeta",
            "hs_core.tests.api.rest.test_folders",
            "hs_core.tests.api.rest.test_move_or_rename_file_or_folder",
            "hs_core.tests.api.rest.test_resmap",
            "hs_core.tests.api.rest.test_resource_file",
            "hs_core.tests.api.rest.test_resource_flags",
            "hs_core.tests.api.rest.test_resource_list",
            "hs_core.tests.api.rest.test_resource_meta",
            "hs_core.tests.api.rest.test_resource_science_meta",
            "hs_core.tests.api.rest.test_resource_types",
            "hs_core.tests.api.rest.test_scimeta",
            "hs_core.tests.api.rest.test_scimeta_swat",
            "hs_core.tests.api.rest.test_set_access_rules",
            "hs_core.tests.api.rest.test_unzip",
            "hs_core.tests.api.rest.test_user_info",
            "hs_core.tests.api.rest.test_zip_folder",
            "hs_core.tests.api.utils",
            "hs_core.tests.api.views",
            "hs_core.tests.api.views.test_authorize",
            "hs_core.tests.api.views.test_get_user_or_group_data",
            "hs_core.tests.api.views.test_group",
            "hs_core.tests.runner",
            "hs_core.tests.serialization",
            "hs_core.tests.serialization.test_generic_resource_meta",
            "hs_core.tests.serialization.test_resourcemeta_sax_parsing",
            "hs_core.urls",
            "hs_core.views",
            "hs_core.views.autocomplete",
            "hs_core.views.discovery_json_view",
            "hs_core.views.discovery_view",
            "hs_core.views.pagination",
            "hs_core.views.resource_access_api",
            "hs_core.views.resource_folder_hierarchy",
            "hs_core.views.resource_folder_rest_api",
            "hs_core.views.resource_metadata_rest_api",
            "hs_core.views.resource_rest_api",
            "hs_core.views.serializers",
            "hs_core.views.user_rest_api",
            "hs_core.views.utils",
            "hs_core.xmlparser",
            "hs_file_types",
            "hs_file_types.migrations",
            "hs_file_types.migrations.0001_initial",
            "hs_file_types.migrations.0002_auto_20170216_1904",
            "hs_file_types.migrations.0003_auto_20170302_2257",
            "hs_file_types.models",
            "hs_file_types.models.base",
            "hs_file_types.models.generic",
            "hs_file_types.models.netcdf",
            "hs_file_types.models.raster",
            "hs_file_types.nc_functions",
            "hs_file_types.nc_functions.nc_dump",
            "hs_file_types.nc_functions.nc_meta",
            "hs_file_types.nc_functions.nc_utils",
            "hs_file_types.raster_meta_extract",
            "hs_file_types.tests",
            "hs_file_types.tests.test_generic_metadata",
            "hs_file_types.tests.test_netcdf_metadata",
            "hs_file_types.tests.test_netcdf_metadata_user_zone",
            "hs_file_types.tests.test_raster_metadata",
            "hs_file_types.tests.test_raster_metadata_user_zone",
            "hs_file_types.tests.test_view_functions",
            "hs_file_types.tests.utils",
            "hs_file_types.urls",
            "hs_file_types.utils",
            "hs_file_types.views",
            "hs_geo_raster_resource",
            "hs_geo_raster_resource.admin",
            "hs_geo_raster_resource.api",
            "hs_geo_raster_resource.apps",
            "hs_geo_raster_resource.forms",
            "hs_geo_raster_resource.migrations",
            "hs_geo_raster_resource.migrations.0001_initial",
            "hs_geo_raster_resource.migrations.0002_auto_20150813_1313",
            "hs_geo_raster_resource.migrations.0003_auto_20150813_1315",
            "hs_geo_raster_resource.migrations.0004_auto_20151116_2257",
            "hs_geo_raster_resource.migrations.0005_auto_20160509_2116",
            "hs_geo_raster_resource.migrations.0006_auto_20161129_0121",
            "hs_geo_raster_resource.migrations.custom_migration_for_raster_meta_update_20160512",
            "hs_geo_raster_resource.migrations.custom_migration_for_tif_to_vrt_20160223",
            "hs_geo_raster_resource.models",
            "hs_geo_raster_resource.page_processors",
            "hs_geo_raster_resource.patches",
            "hs_geo_raster_resource.patches.manual_custom_migration_raster_ori_cov_meta_update_20161121",
            "hs_geo_raster_resource.receivers",
            "hs_geo_raster_resource.serialization",
            "hs_geo_raster_resource.tasks",
            "hs_geo_raster_resource.tests",
            "hs_geo_raster_resource.tests.test_raster_metadata",
            "hs_geo_raster_resource.tests.test_raster_metadata_user_zone",
            "hs_geo_raster_resource.urls",
            "hs_geographic_feature_resource",
            "hs_geographic_feature_resource.admin",
            "hs_geographic_feature_resource.apps",
            "hs_geographic_feature_resource.forms",
            "hs_geographic_feature_resource.migrations",
            "hs_geographic_feature_resource.migrations.0001_initial",
            "hs_geographic_feature_resource.models",
            "hs_geographic_feature_resource.page_processors",
            "hs_geographic_feature_resource.parse_lib",
            "hs_geographic_feature_resource.receivers",
            "hs_geographic_feature_resource.tests",
            "hs_geographic_feature_resource.tests.test_geo_feature",
            "hs_geographic_feature_resource.tests.test_geo_feature_user_zone",
            "hs_labels",
            "hs_labels.migrations",
            "hs_labels.migrations.0001_initial",
            "hs_labels.migrations.0002_custom_migration",
            "hs_labels.migrations.0003_manual_delete_duplicates",
            "hs_labels.migrations.0004_auto_add_constraints",
            "hs_labels.models",
            "hs_labels.tests",
            "hs_labels.tests.test_resource_labelling",
            "hs_labels.urls",
            "hs_labels.views",
            "hs_metrics",
            "hs_metrics.models",
            "hs_metrics.urls",
            "hs_metrics.views",
            "hs_model_program",
            "hs_model_program.admin",
            "hs_model_program.forms",
            "hs_model_program.migrations",
            "hs_model_program.migrations.0001_initial",
            "hs_model_program.migrations.0002_auto_20150813_1729",
            "hs_model_program.migrations.0003_auto_20150813_1730",
            "hs_model_program.migrations.0004_auto_20151012_1656",
            "hs_model_program.migrations.0005_auto_20151104_1604",
            "hs_model_program.migrations.0006_auto_20151216_1511",
            "hs_model_program.models",
            "hs_model_program.page_processors",
            "hs_model_program.receivers",
            "hs_model_program.serialization",
            "hs_model_program.tests",
            "hs_model_program.tests.test_model_program_metadata",
            "hs_model_program.urls",
            "hs_model_program.views",
            "hs_modelinstance",
            "hs_modelinstance.admin",
            "hs_modelinstance.api",
            "hs_modelinstance.forms",
            "hs_modelinstance.migrations",
            "hs_modelinstance.migrations.0001_initial",
            "hs_modelinstance.migrations.0002_auto_20150813_1345",
            "hs_modelinstance.migrations.0002_auto_20150914_1902",
            "hs_modelinstance.migrations.0003_merge",
            "hs_modelinstance.migrations.0004_auto_20151110_1920",
            "hs_modelinstance.migrations.0005_auto_20151111_2129",
            "hs_modelinstance.migrations.0006_auto_20151216_1511",
            "hs_modelinstance.models",
            "hs_modelinstance.page_processors",
            "hs_modelinstance.receivers",
            "hs_modelinstance.serialization",
            "hs_modelinstance.tasks",
            "hs_modelinstance.tests",
            "hs_modelinstance.tests.test_modelinstance_metadata",
            "hs_modflow_modelinstance",
            "hs_modflow_modelinstance.admin",
            "hs_modflow_modelinstance.api",
            "hs_modflow_modelinstance.apps",
            "hs_modflow_modelinstance.forms",
            "hs_modflow_modelinstance.migrations",
            "hs_modflow_modelinstance.migrations.0001_initial",
            "hs_modflow_modelinstance.migrations.0002_executedby_modeloutput_modflowmodelinstancemetadata_modflowmodelinstanceresource",
            "hs_modflow_modelinstance.models",
            "hs_modflow_modelinstance.page_processors",
            "hs_modflow_modelinstance.receivers",
            "hs_modflow_modelinstance.serialization",
            "hs_modflow_modelinstance.tests",
            "hs_modflow_modelinstance.tests.test_modflow_modelinstance_metadata",
            "hs_script_resource",
            "hs_script_resource.admin",
            "hs_script_resource.forms",
            "hs_script_resource.migrations",
            "hs_script_resource.migrations.0001_initial",
            "hs_script_resource.models",
            "hs_script_resource.page_processors",
            "hs_script_resource.receivers",
            "hs_script_resource.tests",
            "hs_script_resource.tests.test_script_resource",
            "hs_sitemap",
            "hs_sitemap.views",
            "hs_swat_modelinstance",
            "hs_swat_modelinstance.admin",
            "hs_swat_modelinstance.api",
            "hs_swat_modelinstance.apps",
            "hs_swat_modelinstance.forms",
            "hs_swat_modelinstance.migrations",
            "hs_swat_modelinstance.migrations.0001_initial",
            "hs_swat_modelinstance.migrations.0002_auto_20150813_1726",
            "hs_swat_modelinstance.migrations.0003_auto_20151013_1955",
            "hs_swat_modelinstance.migrations.0004_auto_20151106_1932",
            "hs_swat_modelinstance.migrations.0005_auto_20151110_1945",
            "hs_swat_modelinstance.migrations.0006_auto_20160114_1508",
            "hs_swat_modelinstance.migrations.0007_auto_20160428_1843",
            "hs_swat_modelinstance.models",
            "hs_swat_modelinstance.page_processors",
            "hs_swat_modelinstance.receivers",
            "hs_swat_modelinstance.serialization",
            "hs_swat_modelinstance.tasks",
            "hs_swat_modelinstance.tests",
            "hs_swat_modelinstance.tests.test_swat_modelinstance_metadata",
            "hs_tools_resource",
            "hs_tools_resource.admin",
            "hs_tools_resource.apps",
            "hs_tools_resource.forms",
            "hs_tools_resource.migrations",
            "hs_tools_resource.migrations.0001_initial",
            "hs_tools_resource.migrations.0002_auto_20150724_1422",
            "hs_tools_resource.migrations.0003_auto_20150724_1501",
            "hs_tools_resource.migrations.0004_auto_20151204_2301",
            "hs_tools_resource.migrations.0005_remove_requesturlbase_resshortid",
            "hs_tools_resource.migrations.0006_auto_20160113_2003",
            "hs_tools_resource.migrations.0007_auto_20160122_2240",
            "hs_tools_resource.migrations.0008_auto_20160729_1811",
            "hs_tools_resource.migrations.0009_auto_20160929_1543",
            "hs_tools_resource.migrations.0010_auto_20161203_1913",
            "hs_tools_resource.models",
            "hs_tools_resource.page_processors",
            "hs_tools_resource.receivers",
            "hs_tools_resource.serialization",
            "hs_tools_resource.tests",
            "hs_tools_resource.tests.test_web_app",
            "hs_tools_resource.utils",
            "hs_tracking",
            "hs_tracking.apps",
            "hs_tracking.management",
            "hs_tracking.management.commands",
            "hs_tracking.management.commands.stats",
            "hs_tracking.middleware",
            "hs_tracking.migrations",
            "hs_tracking.migrations.0001_initial",
            "hs_tracking.migrations.0002_auto_20160406_1244",
            "hs_tracking.migrations.0003_auto_20160623_1718",
            "hs_tracking.migrations.0004_auto_20161010_1402",
            "hs_tracking.models",
            "hs_tracking.signals",
            "hs_tracking.tests",
            "hs_tracking.utils",
            "hs_tracking.views",
            "hydroshare",
            "hydroshare.celery",
            "hydroshare.local_settings",
            "hydroshare.settings",
            "hydroshare.urls",
            "hydroshare.wsgi",
            "irods_browser_app",
            "irods_browser_app.models",
            "irods_browser_app.urls",
            "irods_browser_app.views",
            "jquery_ui",
            "jquery_ui.models",
            "ref_ts",
            "ref_ts.admin",
            "ref_ts.forms",
            "ref_ts.migrations",
            "ref_ts.migrations.0001_initial",
            "ref_ts.migrations.0002_auto_20150813_1336",
            "ref_ts.migrations.0003_reftimeseries",
            "ref_ts.migrations.0004_auto_20160114_0252",
            "ref_ts.models",
            "ref_ts.page_processors",
            "ref_ts.receivers",
            "ref_ts.tests",
            "ref_ts.tests.test_ref_ts",
            "ref_ts.ts_utils",
            "ref_ts.urls",
            "ref_ts.views",
            "theme",
            "theme.admin",
            "theme.blog_mods",
            "theme.blog_mods.admin",
            "theme.blog_mods.migrations",
            "theme.blog_mods.models",
            "theme.blog_mods.tests",
            "theme.blog_mods.views",
            "theme.forms",
            "theme.migrations",
            "theme.migrations.0001_initial",
            "theme.migrations.0002_auto_20160219_2039",
            "theme.migrations.0003_auto_20160302_0453",
            "theme.migrations.0004_userprofile_create_irods_user_account",
            "theme.models",
            "theme.templatetags",
            "theme.templatetags.comments_tags",
            "theme.templatetags.ratings_tags",
            "theme.templatetags.theme_tags",
            "theme.tests",
            "theme.tests.test_functional",
            "theme.views"
        ],
        "version": "1.9.6"
    },
    "hydroshare-jupyter-sync": {
        "cmdline": [],
        "modules": [
            "hydroshare_jupyter_sync",
            "hydroshare_jupyter_sync.config_reader_writer",
            "hydroshare_jupyter_sync.index_html",
            "hydroshare_jupyter_sync.metadata_parser",
            "hydroshare_jupyter_sync.resource_hydroshare_data",
            "hydroshare_jupyter_sync.resource_local_data",
            "hydroshare_jupyter_sync.resource_manager",
            "hydroshare_jupyter_sync.server"
        ],
        "version": "0.1.10"
    },
    "hydrostats": {
        "cmdline": [],
        "modules": [
            "hydrostats",
            "hydrostats.analyze",
            "hydrostats.data",
            "hydrostats.ens_metrics",
            "hydrostats.metrics",
            "hydrostats.visual"
        ],
        "version": "0.78"
    },
    "hydrotrace": {
        "cmdline": [],
        "modules": [
            "HydroTrace",
            "HydroTrace.hydro_trace_common",
            "HydroTrace.main",
            "HydroTrace.meta"
        ],
        "version": "0.2.post1"
    },
    "hydrus": {
        "cmdline": [],
        "modules": [
            "hydrus",
            "hydrus.app",
            "hydrus.app_factory",
            "hydrus.auth",
            "hydrus.conf",
            "hydrus.data",
            "hydrus.data.crud",
            "hydrus.data.crud_helpers",
            "hydrus.data.db_models",
            "hydrus.data.doc_parse",
            "hydrus.data.exceptions",
            "hydrus.data.stale_records_cleanup",
            "hydrus.data.user",
            "hydrus.helpers",
            "hydrus.resources",
            "hydrus.samples",
            "hydrus.samples.doc_writer_sample",
            "hydrus.samples.doc_writer_sample_output",
            "hydrus.samples.hydra_doc_sample",
            "hydrus.socketio_factory",
            "hydrus.sync_namespace",
            "hydrus.tests",
            "hydrus.tests.test_app",
            "hydrus.tests.test_auth",
            "hydrus.tests.test_crud",
            "hydrus.utils"
        ],
        "version": "0.3.1"
    },
    "hydrus-api": {
        "cmdline": [],
        "modules": [
            "hydrus",
            "hydrus.utils"
        ],
        "version": "2.14.3"
    },
    "hydxlib": {
        "cmdline": [],
        "modules": [
            "hydxlib",
            "hydxlib.exporter",
            "hydxlib.hydx",
            "hydxlib.importer",
            "hydxlib.scripts",
            "hydxlib.threedi"
        ],
        "version": "0.7"
    },
    "hyena": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyfive": {
        "cmdline": [],
        "modules": [
            "hyfive"
        ],
        "version": "0.1.7"
    },
    "hyfnester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "hygdas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hygge": {
        "cmdline": [],
        "modules": [
            "hygge",
            "hygge.get"
        ],
        "version": "0.1.3"
    },
    "hyh-1": {
        "cmdline": [],
        "modules": [
            "hyh_1"
        ],
        "version": "0.0.1"
    },
    "hyh-matrix-algebra": {
        "cmdline": [],
        "modules": [
            "hyh_matrix_algebra",
            "hyh_matrix_algebra.MatrixAlgebra",
            "hyh_matrix_algebra.test"
        ],
        "version": "0.1"
    },
    "hyh-nester": {
        "cmdline": [],
        "modules": [
            "hyh-nester"
        ],
        "version": "1.3.0"
    },
    "hyh-probability": {
        "cmdline": [],
        "modules": [
            "hyh_probability",
            "hyh_probability.Binomialdistribution",
            "hyh_probability.Gaussiandistribution",
            "hyh_probability.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hyhmath": {
        "cmdline": [],
        "modules": [
            "hyhmath",
            "hyhmath.add",
            "hyhmath.adv",
            "hyhmath.adv.sqrt"
        ],
        "version": "0.1"
    },
    "hyhrm": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hyhtest": {
        "cmdline": [],
        "modules": [
            "distributions",
            "distributions.Binomialdistribution",
            "distributions.Gaussiandistribution",
            "distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hyhyhy": {
        "cmdline": [],
        "modules": [
            "lib"
        ],
        "version": "1.1.9"
    },
    "hying": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyiter": {
        "cmdline": [],
        "modules": [
            "hyiter"
        ],
        "version": "0.0.4"
    },
    "hyke": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hykpyp": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hyla": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hylax": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyleg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hym": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hymagic": {
        "cmdline": [],
        "modules": [
            "hymagic"
        ],
        "version": "0.1"
    },
    "hyml": {
        "cmdline": [],
        "modules": [
            "hyml",
            "hyml.ext"
        ],
        "version": "v0.2.13"
    },
    "hymm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hymn": {
        "cmdline": [],
        "modules": [
            "hymn"
        ],
        "version": "0.8"
    },
    "hyne": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hynet": {
        "cmdline": [],
        "modules": [
            "hynet",
            "hynet.config",
            "hynet.data",
            "hynet.data.connection",
            "hynet.data.example_days",
            "hynet.data.import_",
            "hynet.data.interface",
            "hynet.data.structure",
            "hynet.distributed",
            "hynet.distributed.client",
            "hynet.distributed.server",
            "hynet.expansion",
            "hynet.expansion.conversion",
            "hynet.expansion.selection",
            "hynet.loadability",
            "hynet.loadability.calc",
            "hynet.loadability.model",
            "hynet.loadability.result",
            "hynet.opf",
            "hynet.opf.calc",
            "hynet.opf.initial_point",
            "hynet.opf.model",
            "hynet.opf.result",
            "hynet.opf.visual",
            "hynet.qcqp",
            "hynet.qcqp.problem",
            "hynet.qcqp.rank1approx",
            "hynet.qcqp.result",
            "hynet.qcqp.solver",
            "hynet.reduction",
            "hynet.reduction.copper_plate",
            "hynet.reduction.large_scale",
            "hynet.reduction.large_scale.combination",
            "hynet.reduction.large_scale.coupling",
            "hynet.reduction.large_scale.evaluation",
            "hynet.reduction.large_scale.features",
            "hynet.reduction.large_scale.market",
            "hynet.reduction.large_scale.subgrid",
            "hynet.reduction.large_scale.sweep",
            "hynet.reduction.large_scale.topology",
            "hynet.reduction.large_scale.utilities",
            "hynet.scenario",
            "hynet.scenario.capability",
            "hynet.scenario.cost",
            "hynet.scenario.representation",
            "hynet.scenario.verification",
            "hynet.solver",
            "hynet.solver.cplex",
            "hynet.solver.cvxpy",
            "hynet.solver.ipopt",
            "hynet.solver.mosek",
            "hynet.solver.picos",
            "hynet.solver.pyomo",
            "hynet.system",
            "hynet.system.calc",
            "hynet.system.initial_point",
            "hynet.system.model",
            "hynet.system.result",
            "hynet.test",
            "hynet.test.installation",
            "hynet.test.regression",
            "hynet.test.system",
            "hynet.types_",
            "hynet.utilities",
            "hynet.utilities.base",
            "hynet.utilities.chordal",
            "hynet.utilities.cvxopt",
            "hynet.utilities.graph",
            "hynet.utilities.rank1approx",
            "hynet.utilities.worker",
            "hynet.visual",
            "hynet.visual.capability",
            "hynet.visual.capability.settings",
            "hynet.visual.capability.utilities",
            "hynet.visual.capability.visualizer",
            "hynet.visual.graph"
        ],
        "version": "1.2.2"
    },
    "hyo-bag": {
        "cmdline": [],
        "modules": [
            "bag",
            "bag.bag",
            "bag.base",
            "bag.bbox",
            "bag.density",
            "bag.elevation",
            "bag.helper",
            "bag.meta",
            "bag.tools",
            "bag.tools.bag_bbox",
            "bag.tools.bag_elevation",
            "bag.tools.bag_metadata",
            "bag.tools.bag_tracklist",
            "bag.tools.bag_uncertainty",
            "bag.tools.bag_validate",
            "bag.tracklist",
            "bag.uncertainty"
        ],
        "version": "0.5.7"
    },
    "hyo-bagexplorer": {
        "cmdline": [],
        "modules": [
            "bagexplorer",
            "bagexplorer.explorer",
            "bagexplorer.frame",
            "bagexplorer.gui",
            "bagexplorer.gui.mainwin",
            "bagexplorer.text_ctrl"
        ],
        "version": "0.5.7"
    },
    "hyo-soundspeed": {
        "cmdline": [],
        "modules": [
            "sis",
            "sis.gui",
            "sis.gui.controlpanel",
            "sis.gui.infoviewer",
            "sis.gui.mainwin",
            "sis.lib",
            "sis.lib.kmbase",
            "sis.lib.process",
            "sis.lib.threads",
            "sis.lib.threads.replaythread",
            "sis.lib.threads.svpthread",
            "sis.run",
            "soundspeed",
            "soundspeed.appdirs",
            "soundspeed.appdirs.appdirs",
            "soundspeed.atlas",
            "soundspeed.atlas.abstract",
            "soundspeed.atlas.atlases",
            "soundspeed.atlas.ftp",
            "soundspeed.atlas.rtofs",
            "soundspeed.atlas.rtofs.rtofs",
            "soundspeed.atlas.woa09",
            "soundspeed.atlas.woa09.woa09",
            "soundspeed.atlas.woa13",
            "soundspeed.atlas.woa13.woa13",
            "soundspeed.base",
            "soundspeed.base.basedb",
            "soundspeed.base.callbacks",
            "soundspeed.base.callbacks.abstract_callbacks",
            "soundspeed.base.callbacks.cli_callbacks",
            "soundspeed.base.callbacks.test_callbacks",
            "soundspeed.base.gdal_aux",
            "soundspeed.base.geodesy",
            "soundspeed.base.helper",
            "soundspeed.base.progress",
            "soundspeed.base.progress.abstract_progress",
            "soundspeed.base.progress.cli_progress",
            "soundspeed.base.setup",
            "soundspeed.base.setup_db",
            "soundspeed.base.setup_sql",
            "soundspeed.base.testing",
            "soundspeed.client",
            "soundspeed.client.client",
            "soundspeed.client.clientlist",
            "soundspeed.db",
            "soundspeed.db.db",
            "soundspeed.db.export",
            "soundspeed.db.plot",
            "soundspeed.db.point",
            "soundspeed.formats",
            "soundspeed.formats.abstract",
            "soundspeed.formats.km",
            "soundspeed.formats.readers",
            "soundspeed.formats.readers.abstract",
            "soundspeed.formats.readers.aml",
            "soundspeed.formats.readers.aoml",
            "soundspeed.formats.readers.asvp",
            "soundspeed.formats.readers.caris",
            "soundspeed.formats.readers.castaway",
            "soundspeed.formats.readers.digibarpro",
            "soundspeed.formats.readers.digibars",
            "soundspeed.formats.readers.elac",
            "soundspeed.formats.readers.idronaut",
            "soundspeed.formats.readers.iss",
            "soundspeed.formats.readers.mvp",
            "soundspeed.formats.readers.oceanscience",
            "soundspeed.formats.readers.saiv",
            "soundspeed.formats.readers.seabird",
            "soundspeed.formats.readers.simrad",
            "soundspeed.formats.readers.sippican",
            "soundspeed.formats.readers.sonardyne",
            "soundspeed.formats.readers.turo",
            "soundspeed.formats.readers.unb",
            "soundspeed.formats.readers.valeport",
            "soundspeed.formats.writers",
            "soundspeed.formats.writers.abstract",
            "soundspeed.formats.writers.asvp",
            "soundspeed.formats.writers.calc",
            "soundspeed.formats.writers.caris",
            "soundspeed.formats.writers.csv",
            "soundspeed.formats.writers.elac",
            "soundspeed.formats.writers.hypack",
            "soundspeed.formats.writers.ixblue",
            "soundspeed.formats.writers.ncei",
            "soundspeed.formats.writers.qps",
            "soundspeed.formats.writers.sonardyne",
            "soundspeed.formats.writers.unb",
            "soundspeed.listener",
            "soundspeed.listener.abstract",
            "soundspeed.listener.listeners",
            "soundspeed.listener.mvp",
            "soundspeed.listener.mvp.mvp",
            "soundspeed.listener.seacat",
            "soundspeed.listener.seacat.sbe_serialcomms",
            "soundspeed.listener.seacat.seacat_emulator",
            "soundspeed.listener.sippican",
            "soundspeed.listener.sippican.sippican",
            "soundspeed.listener.sis",
            "soundspeed.listener.sis.sis",
            "soundspeed.logging",
            "soundspeed.logging.filters",
            "soundspeed.logging.sqlitehandler",
            "soundspeed.logging.sqlitelogging",
            "soundspeed.logging.test_logging",
            "soundspeed.profile",
            "soundspeed.profile.dicts",
            "soundspeed.profile.metadata",
            "soundspeed.profile.more",
            "soundspeed.profile.oceanography",
            "soundspeed.profile.profile",
            "soundspeed.profile.profilelist",
            "soundspeed.profile.ray_tracing",
            "soundspeed.profile.ray_tracing.ray_path",
            "soundspeed.profile.ray_tracing.ray_tracing",
            "soundspeed.profile.samples",
            "soundspeed.server",
            "soundspeed.server.server",
            "soundspeed.soundspeed",
            "soundspeed.temp",
            "soundspeed.temp.coordinates",
            "soundspeed.temp.regex_helpers",
            "soundspeedmanager",
            "soundspeedmanager.dialogs",
            "soundspeedmanager.dialogs.automate_dialog",
            "soundspeedmanager.dialogs.common_metadata_dialog",
            "soundspeedmanager.dialogs.dialog",
            "soundspeedmanager.dialogs.export_multi_profile_dialog",
            "soundspeedmanager.dialogs.export_profile_metadata_dialog",
            "soundspeedmanager.dialogs.export_single_profile_dialog",
            "soundspeedmanager.dialogs.flaggable_input_dialog",
            "soundspeedmanager.dialogs.formatted_input_dialog",
            "soundspeedmanager.dialogs.import_data_dialog",
            "soundspeedmanager.dialogs.import_multi_profile_dialog",
            "soundspeedmanager.dialogs.import_single_profile_dialog",
            "soundspeedmanager.dialogs.metadata_dialog",
            "soundspeedmanager.dialogs.multi_selection_dialog",
            "soundspeedmanager.dialogs.plot_multi_profile_dialog",
            "soundspeedmanager.dialogs.plot_profiles_dialog",
            "soundspeedmanager.dialogs.proc_data_model",
            "soundspeedmanager.dialogs.project_new_dialog",
            "soundspeedmanager.dialogs.project_rename_dialog",
            "soundspeedmanager.dialogs.project_switch_dialog",
            "soundspeedmanager.dialogs.raw_data_model",
            "soundspeedmanager.dialogs.receive_dialog",
            "soundspeedmanager.dialogs.reference_dialog",
            "soundspeedmanager.dialogs.seacat",
            "soundspeedmanager.dialogs.seacat_dialog",
            "soundspeedmanager.dialogs.sis_data_model",
            "soundspeedmanager.dialogs.spreadsheet_dialog",
            "soundspeedmanager.dialogs.text_editor",
            "soundspeedmanager.dialogs.text_editor_dialog",
            "soundspeedmanager.gui",
            "soundspeedmanager.mainwin",
            "soundspeedmanager.qt_callbacks",
            "soundspeedmanager.qt_progress",
            "soundspeedmanager.stylesheet",
            "soundspeedmanager.stylesheet.stylesheet",
            "soundspeedmanager.widgets",
            "soundspeedmanager.widgets.database",
            "soundspeedmanager.widgets.dataplots",
            "soundspeedmanager.widgets.editor",
            "soundspeedmanager.widgets.info",
            "soundspeedmanager.widgets.navtoolbar",
            "soundspeedmanager.widgets.refraction",
            "soundspeedmanager.widgets.server",
            "soundspeedmanager.widgets.settings",
            "soundspeedmanager.widgets.widget",
            "soundspeedsettings",
            "soundspeedsettings.gui",
            "soundspeedsettings.mainwin",
            "soundspeedsettings.widgets",
            "soundspeedsettings.widgets.general",
            "soundspeedsettings.widgets.input",
            "soundspeedsettings.widgets.listeners",
            "soundspeedsettings.widgets.main",
            "soundspeedsettings.widgets.output",
            "soundspeedsettings.widgets.widget"
        ],
        "version": "2018.1.1"
    },
    "hyo2-bag": {
        "cmdline": [],
        "modules": [
            "bag",
            "bag.bag",
            "bag.base",
            "bag.bbox",
            "bag.density",
            "bag.elevation",
            "bag.helper",
            "bag.meta",
            "bag.tools",
            "bag.tools.bag_bbox",
            "bag.tools.bag_elevation",
            "bag.tools.bag_metadata",
            "bag.tools.bag_tracklist",
            "bag.tools.bag_uncertainty",
            "bag.tools.bag_validate",
            "bag.tracklist",
            "bag.uncertainty"
        ],
        "version": "1.0.0"
    },
    "hyoid": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyou": {
        "cmdline": [
            "generate_oauth2_credentials.py",
            "upload_sheet.py"
        ],
        "modules": [
            "hyou",
            "hyou.client",
            "hyou.util"
        ],
        "version": "2.1.2"
    },
    "hyp": {
        "cmdline": [],
        "modules": [
            "hyp",
            "hyp.adapters",
            "hyp.adapters.base",
            "hyp.adapters.marshmallow",
            "hyp.adapters.schematics",
            "hyp.responder"
        ],
        "version": "1.0.0"
    },
    "hyp-server": {
        "cmdline": [],
        "modules": [
            "hyp",
            "hyp.hyp"
        ],
        "version": "1.2.0"
    },
    "hyp3-metadata": {
        "cmdline": [],
        "modules": [
            "hyp3_metadata",
            "hyp3_metadata.create"
        ],
        "version": "0.1.2"
    },
    "hyp3-sdk": {
        "cmdline": [],
        "modules": [
            "hyp3_sdk",
            "hyp3_sdk.exceptions",
            "hyp3_sdk.hyp3",
            "hyp3_sdk.jobs",
            "hyp3_sdk.util"
        ],
        "version": "0.2.0"
    },
    "hyp3lib": {
        "cmdline": [
            "GC_map_mod"
        ],
        "modules": [
            "hyp3lib",
            "hyp3lib.SLC_copy_S1_fullSW",
            "hyp3lib.apply_wb_mask",
            "hyp3lib.area2point",
            "hyp3lib.asf_geometry",
            "hyp3lib.asf_time_series",
            "hyp3lib.aws",
            "hyp3lib.byteSigmaScale",
            "hyp3lib.copy_metadata",
            "hyp3lib.createAmp",
            "hyp3lib.cutGeotiffs",
            "hyp3lib.cutGeotiffsByLine",
            "hyp3lib.dem2isce",
            "hyp3lib.draw_polygon_on_raster",
            "hyp3lib.enh_lee_filter",
            "hyp3lib.etc",
            "hyp3lib.exceptions",
            "hyp3lib.execute",
            "hyp3lib.extendDateline",
            "hyp3lib.fetch",
            "hyp3lib.file_subroutines",
            "hyp3lib.geotiff_lut",
            "hyp3lib.getBursts",
            "hyp3lib.getDemFor",
            "hyp3lib.getParameter",
            "hyp3lib.getSubSwath",
            "hyp3lib.get_asf",
            "hyp3lib.get_bb_from_shape",
            "hyp3lib.get_bounding",
            "hyp3lib.get_dem",
            "hyp3lib.get_orb",
            "hyp3lib.image",
            "hyp3lib.ingest_S1_granule",
            "hyp3lib.iscegeo2geotif",
            "hyp3lib.makeAsfBrowse",
            "hyp3lib.makeChangeBrowse",
            "hyp3lib.makeColorPhase",
            "hyp3lib.makeKml",
            "hyp3lib.make_arc_thumb",
            "hyp3lib.make_cogs",
            "hyp3lib.metadata",
            "hyp3lib.offset_xml",
            "hyp3lib.par_s1_slc_single",
            "hyp3lib.ps2dem",
            "hyp3lib.rasterMask",
            "hyp3lib.raster_boundary2shape",
            "hyp3lib.resample_geotiff",
            "hyp3lib.rtc2color",
            "hyp3lib.rtc2colordiff",
            "hyp3lib.saa_func_lib",
            "hyp3lib.scene",
            "hyp3lib.simplify_shapefile",
            "hyp3lib.subset_geotiff_shape",
            "hyp3lib.system",
            "hyp3lib.tileList2shape",
            "hyp3lib.util",
            "hyp3lib.utm2dem",
            "hyp3lib.verify_opod"
        ],
        "version": "1.6.1"
    },
    "hypar": {
        "cmdline": [],
        "modules": [
            "hypar",
            "hypar.glTF",
            "hypar.glTF.glTF"
        ],
        "version": "0.0.6"
    },
    "hypatia": {
        "cmdline": [],
        "modules": [
            "benchmark",
            "benchmark.benchmark",
            "benchmark.hs-tool",
            "benchmark.intersection",
            "benchmark.mhindex",
            "benchmark.sortbench",
            "benchmark.wordstats",
            "hypatia",
            "hypatia._compat",
            "hypatia.catalog",
            "hypatia.catalog.tests",
            "hypatia.compat",
            "hypatia.exc",
            "hypatia.exc.tests",
            "hypatia.facet",
            "hypatia.facet.tests",
            "hypatia.field",
            "hypatia.field.tests",
            "hypatia.interfaces",
            "hypatia.keyword",
            "hypatia.keyword.interfaces",
            "hypatia.keyword.tests",
            "hypatia.nbest",
            "hypatia.nbest.interfaces",
            "hypatia.nbest.tests",
            "hypatia.query",
            "hypatia.query.tests",
            "hypatia.tests",
            "hypatia.tests.test_functional",
            "hypatia.text",
            "hypatia.text.baseindex",
            "hypatia.text.cosineindex",
            "hypatia.text.htmlsplitter",
            "hypatia.text.interfaces",
            "hypatia.text.lexicon",
            "hypatia.text.okapiindex",
            "hypatia.text.parsetree",
            "hypatia.text.queryparser",
            "hypatia.text.ricecode",
            "hypatia.text.setops",
            "hypatia.text.stopdict",
            "hypatia.text.tests",
            "hypatia.text.tests.test_baseindex",
            "hypatia.text.tests.test_cosineindex",
            "hypatia.text.tests.test_htmlsplitter",
            "hypatia.text.tests.test_index",
            "hypatia.text.tests.test_lexicon",
            "hypatia.text.tests.test_okapiindex",
            "hypatia.text.tests.test_parsetree",
            "hypatia.text.tests.test_queryengine",
            "hypatia.text.tests.test_queryparser",
            "hypatia.text.tests.test_setops",
            "hypatia.text.tests.test_textindex",
            "hypatia.text.tests.test_textindexwrapper",
            "hypatia.text.tests.test_widcode",
            "hypatia.text.widcode",
            "hypatia.util",
            "hypatia.util.tests"
        ],
        "version": "0.3"
    },
    "hypatia-engine": {
        "cmdline": [],
        "modules": [
            "hypatia",
            "hypatia.actor",
            "hypatia.animatedsprite",
            "hypatia.constants",
            "hypatia.controllers",
            "hypatia.dialog",
            "hypatia.game",
            "hypatia.physics",
            "hypatia.player",
            "hypatia.render",
            "hypatia.resources",
            "hypatia.sound",
            "hypatia.sprites",
            "hypatia.tiles"
        ],
        "version": "0.3.6"
    },
    "hypchat": {
        "cmdline": [],
        "modules": [
            "hypchat",
            "hypchat.requests",
            "hypchat.restobject"
        ],
        "version": "0.21"
    },
    "hypdb": {
        "cmdline": [],
        "modules": [
            "hypdb",
            "hypdb.core",
            "hypdb.core.MultipleTrreatmentTest",
            "hypdb.core.att_filtering",
            "hypdb.core.cov_selection",
            "hypdb.core.explanation",
            "hypdb.core.matching",
            "hypdb.core.query",
            "hypdb.core.simdetec",
            "infotheo",
            "infotheo.info_theo",
            "kbutil",
            "kbutil.listutil",
            "kbutil.plotting",
            "kbutil.rand",
            "kbutil.setup",
            "kbutil.statistics",
            "pyrankagg",
            "pyrankagg.agreement",
            "pyrankagg.kbutil",
            "pyrankagg.kbutil.listutil",
            "pyrankagg.kbutil.plotting",
            "pyrankagg.kbutil.rand",
            "pyrankagg.kbutil.setup",
            "pyrankagg.kbutil.statistics",
            "pyrankagg.linear_assignment",
            "pyrankagg.metrics",
            "pyrankagg.rankagg",
            "pyrankagg.setup",
            "pyrankagg.tests",
            "pyrankagg.tests.runtests",
            "pyrankagg.tests.test_aggregation",
            "pyrankagg.tests.test_metrics",
            "site-packages",
            "site-packages.lp_maker",
            "site-packages.lp_solve",
            "statistics",
            "statistics.cit",
            "statistics.contingancy_table"
        ],
        "version": "1.0.0"
    },
    "hype": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypebot": {
        "cmdline": [],
        "modules": [
            "hypebot",
            "hypebot.log",
            "hypebot.main",
            "hypebot.net",
            "hypebot.settings",
            "hypebot.twitter"
        ],
        "version": "0.1.0"
    },
    "hypem-py": {
        "cmdline": [],
        "modules": [
            "HypeM"
        ],
        "version": "1.1.0"
    },
    "hypem-python": {
        "cmdline": [],
        "modules": [
            "hypem",
            "hypem.models"
        ],
        "version": "1.0"
    },
    "hyper": {
        "cmdline": [],
        "modules": [
            "hyper",
            "hyper.cli",
            "hyper.common",
            "hyper.common.bufsocket",
            "hyper.common.connection",
            "hyper.common.decoder",
            "hyper.common.exceptions",
            "hyper.common.headers",
            "hyper.common.util",
            "hyper.compat",
            "hyper.contrib",
            "hyper.http11",
            "hyper.http11.connection",
            "hyper.http11.parser",
            "hyper.http11.response",
            "hyper.http20",
            "hyper.http20.connection",
            "hyper.http20.errors",
            "hyper.http20.exceptions",
            "hyper.http20.response",
            "hyper.http20.stream",
            "hyper.http20.util",
            "hyper.http20.window",
            "hyper.httplib_compat",
            "hyper.packages",
            "hyper.packages.rfc3986",
            "hyper.packages.rfc3986.api",
            "hyper.packages.rfc3986.compat",
            "hyper.packages.rfc3986.exceptions",
            "hyper.packages.rfc3986.misc",
            "hyper.packages.rfc3986.normalizers",
            "hyper.packages.rfc3986.parseresult",
            "hyper.packages.rfc3986.uri",
            "hyper.ssl_compat",
            "hyper.tls"
        ],
        "version": "0.7.0"
    },
    "hyper-compose": {
        "cmdline": [],
        "modules": [
            "hypercompose",
            "hypercompose.api",
            "hypercompose.cmd",
            "hypercompose.requests_aws4auth",
            "hypercompose.requests_aws4auth.aws4auth",
            "hypercompose.requests_aws4auth.aws4signingkey",
            "hypercompose.requests_aws4auth.exceptions",
            "hypercompose.requests_aws4auth.service_parameters",
            "hypercompose.requests_aws4auth.six"
        ],
        "version": "0.1.4"
    },
    "hyper-find": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyper-hunter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyper-kube-config": {
        "cmdline": [
            "kubectl-hyperkube"
        ],
        "modules": [],
        "version": "0.5.1"
    },
    "hyper-prompt": {
        "cmdline": [],
        "modules": [
            "hyper_prompt",
            "hyper_prompt.cli",
            "hyper_prompt.colors",
            "hyper_prompt.config",
            "hyper_prompt.defaults",
            "hyper_prompt.helpers",
            "hyper_prompt.prompt",
            "hyper_prompt.segment",
            "hyper_prompt.segments",
            "hyper_prompt.segments.cwd",
            "hyper_prompt.segments.env",
            "hyper_prompt.segments.git",
            "hyper_prompt.segments.hostname",
            "hyper_prompt.segments.newline",
            "hyper_prompt.segments.root",
            "hyper_prompt.segments.ssh",
            "hyper_prompt.segments.time",
            "hyper_prompt.segments.username",
            "hyper_prompt.segments.virtual_env",
            "hyper_prompt.themes",
            "hyper_prompt.themes.default"
        ],
        "version": "1.1.1"
    },
    "hyper-qta": {
        "cmdline": [],
        "modules": [
            "hyper",
            "hyper.cli",
            "hyper.common",
            "hyper.common.bufsocket",
            "hyper.common.connection",
            "hyper.common.decoder",
            "hyper.common.exceptions",
            "hyper.common.headers",
            "hyper.common.util",
            "hyper.compat",
            "hyper.contrib",
            "hyper.http11",
            "hyper.http11.connection",
            "hyper.http11.parser",
            "hyper.http11.response",
            "hyper.http20",
            "hyper.http20.connection",
            "hyper.http20.errors",
            "hyper.http20.exceptions",
            "hyper.http20.response",
            "hyper.http20.stream",
            "hyper.http20.util",
            "hyper.http20.window",
            "hyper.httplib_compat",
            "hyper.ssl_compat",
            "hyper.tls"
        ],
        "version": "1.0.0"
    },
    "hyper-rpc": {
        "cmdline": [],
        "modules": [
            "hyper_rpc",
            "hyper_rpc.hrpc"
        ],
        "version": "0.0.1a4"
    },
    "hyper-sh": {
        "cmdline": [],
        "modules": [
            "hyper_sh",
            "hyper_sh.requests_aws4auth",
            "hyper_sh.requests_aws4auth.aws4auth",
            "hyper_sh.requests_aws4auth.aws4signingkey",
            "hyper_sh.requests_aws4auth.exceptions",
            "hyper_sh.requests_aws4auth.service_parameters",
            "hyper_sh.requests_aws4auth.six"
        ],
        "version": "1.0.7"
    },
    "hyper-shell": {
        "cmdline": [],
        "modules": [
            "hyper_shell",
            "hyper_shell.__meta__",
            "hyper_shell.apps",
            "hyper_shell.apps.client",
            "hyper_shell.apps.cluster",
            "hyper_shell.apps.server",
            "hyper_shell.core",
            "hyper_shell.core.config",
            "hyper_shell.core.exceptions",
            "hyper_shell.core.logging",
            "hyper_shell.core.queue",
            "hyper_shell.core.task",
            "hyper_shell.parsl",
            "hyper_shell.parsl.client",
            "hyper_shell.parsl.config"
        ],
        "version": "1.8.1"
    },
    "hyper-status": {
        "cmdline": [],
        "modules": [
            "hyper_status",
            "hyper_status.status"
        ],
        "version": "1.3"
    },
    "hyper2web": {
        "cmdline": [],
        "modules": [
            "hyper2web",
            "hyper2web.abstract",
            "hyper2web.app",
            "hyper2web.cli",
            "hyper2web.exceptions",
            "hyper2web.http",
            "hyper2web.router",
            "hyper2web.server",
            "hyper2web.sslsocket"
        ],
        "version": "0.0.6"
    },
    "hyperactive": {
        "cmdline": [],
        "modules": [
            "hyperactive",
            "hyperactive.base_optimizer",
            "hyperactive.base_positioner",
            "hyperactive.candidate",
            "hyperactive.checks",
            "hyperactive.distribution",
            "hyperactive.hyperactive_api",
            "hyperactive.hyperactive_core",
            "hyperactive.init_position",
            "hyperactive.main_args",
            "hyperactive.memory",
            "hyperactive.memory.dataset_features",
            "hyperactive.memory.memory",
            "hyperactive.memory.memory_dump",
            "hyperactive.memory.memory_helper",
            "hyperactive.memory.memory_io",
            "hyperactive.memory.memory_load",
            "hyperactive.memory.paths",
            "hyperactive.memory.util",
            "hyperactive.model",
            "hyperactive.model_selection",
            "hyperactive.model_selection.regression",
            "hyperactive.opt_args",
            "hyperactive.optimizers",
            "hyperactive.optimizers.local",
            "hyperactive.optimizers.local.downhill_simplex",
            "hyperactive.optimizers.local.hill_climbing_optimizer",
            "hyperactive.optimizers.local.stochastic_hill_climbing",
            "hyperactive.optimizers.local.tabu_search",
            "hyperactive.optimizers.monte_carlo",
            "hyperactive.optimizers.monte_carlo.parallel_tempering",
            "hyperactive.optimizers.monte_carlo.simulated_annealing",
            "hyperactive.optimizers.monte_carlo.stochastic_tunneling",
            "hyperactive.optimizers.population",
            "hyperactive.optimizers.population.evolution_strategy",
            "hyperactive.optimizers.population.particle_swarm_optimization",
            "hyperactive.optimizers.random",
            "hyperactive.optimizers.random.random_annealing",
            "hyperactive.optimizers.random.random_restart_hill_climbing",
            "hyperactive.optimizers.random.random_search",
            "hyperactive.optimizers.sequence_model",
            "hyperactive.optimizers.sequence_model.bayesian_optimization",
            "hyperactive.optimizers.sequence_model.decision_tree_optimizer",
            "hyperactive.optimizers.sequence_model.sbom",
            "hyperactive.optimizers.sequence_model.surrogate_models",
            "hyperactive.optimizers.sequence_model.tree_structured_parzen_estimators",
            "hyperactive.search",
            "hyperactive.search_space",
            "hyperactive.util",
            "hyperactive.util.util",
            "hyperactive.verbosity",
            "hyperactive.verbosity.info",
            "hyperactive.verbosity.progress_bar",
            "hyperactive.verbosity.verbosity",
            "tests",
            "tests._test_meta_learn",
            "tests.optimizer_parameter",
            "tests.optimizer_parameter.Bayesian",
            "tests.optimizer_parameter.DecisionTree",
            "tests.optimizer_parameter.EvolutionStrategy",
            "tests.optimizer_parameter.HillClimbing",
            "tests.optimizer_parameter.ParallelTempering",
            "tests.optimizer_parameter.ParticleSwarm",
            "tests.optimizer_parameter.RandomAnnealing",
            "tests.optimizer_parameter.RandomRestartHillClimbing",
            "tests.optimizer_parameter.SimulatedAnnealing",
            "tests.optimizer_parameter.StochasticHillClimbing",
            "tests.optimizer_parameter.StochasticTunneling",
            "tests.optimizer_parameter.TPE",
            "tests.optimizer_parameter.TabuSearch",
            "tests.test_attributes",
            "tests.test_checks",
            "tests.test_data",
            "tests.test_hyperactive_api",
            "tests.test_memory",
            "tests.test_memory_helpers",
            "tests.test_optimizers"
        ],
        "version": "2.3.0"
    },
    "hyperapi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperas": {
        "cmdline": [],
        "modules": [
            "hyperas",
            "hyperas.distributions",
            "hyperas.ensemble",
            "hyperas.optim",
            "hyperas.utils"
        ],
        "version": "0.4.1"
    },
    "hyperband-snakemake": {
        "cmdline": [],
        "modules": [
            "hyperband_snakemake",
            "hyperband_snakemake.cli",
            "hyperband_snakemake.generator",
            "hyperband_snakemake.search",
            "hyperband_snakemake.status",
            "hyperband_snakemake.templates",
            "hyperband_snakemake.writer"
        ],
        "version": "0.0.2"
    },
    "hyperbmp": {
        "cmdline": [],
        "modules": [
            "hyperbmp",
            "hyperbmp.edit",
            "hyperbmp.lib",
            "hyperbmp.props",
            "hyperbmp.read",
            "hyperbmp.wsgi"
        ],
        "version": "0.2"
    },
    "hyperboard": {
        "cmdline": [],
        "modules": [
            "hyperboard",
            "hyperboard.agent",
            "hyperboard.hyperboard_run",
            "hyperboard.recorder",
            "hyperboard.server"
        ],
        "version": "0.1.1"
    },
    "hyperbola": {
        "cmdline": [],
        "modules": [
            "hyperbola",
            "hyperbola._version",
            "hyperbola.hyperblurb",
            "hyperbola.hyperbola_model",
            "hyperbola.hyperbola_theme",
            "hyperbola.hyperbola_view",
            "hyperbola.ihyperbola",
            "hyperbola.publicpage",
            "hyperbola.rss",
            "hyperbola.test",
            "hyperbola.test.acceptance",
            "hyperbola.test.acceptance.blog",
            "hyperbola.test.historic",
            "hyperbola.test.historic.stub_publicPresence1to2",
            "hyperbola.test.historic.test_publicPresence1to2",
            "hyperbola.test.livetest_view",
            "hyperbola.test.test_hyperbola",
            "hyperbola.test.test_javascript",
            "hyperbola.test.test_rendering",
            "hyperbola.test.test_theme",
            "hyperbola.test.test_view",
            "hyperbola.test.util"
        ],
        "version": "0.0.3"
    },
    "hyperbole": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperbolic": {
        "cmdline": [],
        "modules": [
            "hyperbolic",
            "hyperbolic.euclid",
            "hyperbolic.euclid.Arc",
            "hyperbolic.euclid.Circle",
            "hyperbolic.euclid.Ellipse",
            "hyperbolic.euclid.EllipseArc",
            "hyperbolic.euclid.Line",
            "hyperbolic.euclid.OriginLine",
            "hyperbolic.euclid.intersection",
            "hyperbolic.euclid.shapes",
            "hyperbolic.euclid3d",
            "hyperbolic.euclid3d.projection",
            "hyperbolic.euclid3d.util",
            "hyperbolic.poincare",
            "hyperbolic.poincare.Circle",
            "hyperbolic.poincare.Horocycle",
            "hyperbolic.poincare.Hypercycle",
            "hyperbolic.poincare.Line",
            "hyperbolic.poincare.Point",
            "hyperbolic.poincare.Polygon",
            "hyperbolic.poincare.Transform",
            "hyperbolic.poincare.shapes",
            "hyperbolic.poincare.util",
            "hyperbolic.tiles",
            "hyperbolic.tiles.Edge",
            "hyperbolic.tiles.Tile",
            "hyperbolic.tiles.TileGen",
            "hyperbolic.tiles.TileLayout",
            "hyperbolic.tiles.decorator",
            "hyperbolic.util"
        ],
        "version": "1.3.0"
    },
    "hyperborea": {
        "cmdline": [],
        "modules": [
            "hyperborea",
            "hyperborea.alert",
            "hyperborea.calibration",
            "hyperborea.device_info",
            "hyperborea.download",
            "hyperborea.preferences",
            "hyperborea.proxy",
            "hyperborea.ringbuffer",
            "hyperborea.setting_widget",
            "hyperborea.stream",
            "hyperborea.test_ringbuffer",
            "hyperborea.ui_unit_preferences_widget",
            "hyperborea.ui_unit_selection_dialog",
            "hyperborea.unit_formatter_spinbox",
            "hyperborea.unit_preferences",
            "hyperborea.unit_selection_dialog",
            "hyperborea.upload",
            "hyperborea.version"
        ],
        "version": "1.2.2"
    },
    "hyperbrain": {
        "cmdline": [],
        "modules": [
            "graphbrain",
            "graphbrain.agents",
            "graphbrain.agents.actors",
            "graphbrain.agents.agent",
            "graphbrain.agents.claim_actors",
            "graphbrain.agents.claims",
            "graphbrain.agents.conflicts",
            "graphbrain.agents.corefs_dets",
            "graphbrain.agents.corefs_names",
            "graphbrain.agents.corefs_onto",
            "graphbrain.agents.corefs_unidecode",
            "graphbrain.agents.csv_parser",
            "graphbrain.agents.reddit_parser",
            "graphbrain.agents.taxonomy",
            "graphbrain.agents.txt_parser",
            "graphbrain.cli",
            "graphbrain.commands",
            "graphbrain.commands.create",
            "graphbrain.commands.info",
            "graphbrain.commands.run",
            "graphbrain.constants",
            "graphbrain.data",
            "graphbrain.hypergraph",
            "graphbrain.logic",
            "graphbrain.meaning",
            "graphbrain.meaning.actors",
            "graphbrain.meaning.concepts",
            "graphbrain.meaning.corefs",
            "graphbrain.meaning.lemmas",
            "graphbrain.meaning.ontology",
            "graphbrain.memory",
            "graphbrain.notebook",
            "graphbrain.parsers",
            "graphbrain.parsers.nlp",
            "graphbrain.parsers.parser",
            "graphbrain.parsers.text",
            "graphbrain.stats",
            "graphbrain.stats.hyper_similarity",
            "graphbrain.stats.word2vec_similarity",
            "graphbrain.tests",
            "graphbrain.tests.test_corefs",
            "graphbrain.tests.test_hyperedge",
            "graphbrain.tests.test_hypergraph",
            "graphbrain.tests.test_logic",
            "graphbrain.tests.test_permutations"
        ],
        "version": "0.4.0"
    },
    "hyperbuild": {
        "cmdline": [],
        "modules": [
            "hyperbuild"
        ],
        "version": "0.2.4"
    },
    "hypercat-py": {
        "cmdline": [],
        "modules": [
            "hypercat",
            "hypercat.hypercat"
        ],
        "version": "0.1.2"
    },
    "hyperchamber": {
        "cmdline": [],
        "modules": [
            "hyperchamber",
            "hyperchamber.config",
            "hyperchamber.io",
            "hyperchamber.selector"
        ],
        "version": "0.3.1"
    },
    "hypercluster": {
        "cmdline": [],
        "modules": [
            "hypercluster",
            "hypercluster.additional_clusterers",
            "hypercluster.additional_metrics",
            "hypercluster.classes",
            "hypercluster.constants",
            "hypercluster.tests",
            "hypercluster.tests.test_clustering",
            "hypercluster.tests.test_visualize",
            "hypercluster.utilities",
            "hypercluster.visualize"
        ],
        "version": "0.1.13"
    },
    "hypercode": {
        "cmdline": [],
        "modules": [],
        "version": "0.2a5"
    },
    "hyperconfig": {
        "cmdline": [],
        "modules": [
            "hyperconfig",
            "hyperconfig.config"
        ],
        "version": "0.0.2"
    },
    "hypercore-crypto": {
        "cmdline": [],
        "modules": [
            "hypercore_crypto",
            "hypercore_crypto.crypto"
        ],
        "version": "0.0.1a4"
    },
    "hypercorn": {
        "cmdline": [],
        "modules": [
            "hypercorn",
            "hypercorn.__about__",
            "hypercorn.asyncio",
            "hypercorn.asyncio.context",
            "hypercorn.asyncio.lifespan",
            "hypercorn.asyncio.run",
            "hypercorn.asyncio.statsd",
            "hypercorn.asyncio.task_group",
            "hypercorn.asyncio.tcp_server",
            "hypercorn.asyncio.udp_server",
            "hypercorn.config",
            "hypercorn.events",
            "hypercorn.logging",
            "hypercorn.middleware",
            "hypercorn.middleware.dispatcher",
            "hypercorn.middleware.http_to_https",
            "hypercorn.middleware.wsgi",
            "hypercorn.protocol",
            "hypercorn.protocol.events",
            "hypercorn.protocol.h11",
            "hypercorn.protocol.h2",
            "hypercorn.protocol.h3",
            "hypercorn.protocol.http_stream",
            "hypercorn.protocol.quic",
            "hypercorn.protocol.ws_stream",
            "hypercorn.run",
            "hypercorn.statsd",
            "hypercorn.trio",
            "hypercorn.trio.context",
            "hypercorn.trio.lifespan",
            "hypercorn.trio.run",
            "hypercorn.trio.statsd",
            "hypercorn.trio.tcp_server",
            "hypercorn.trio.udp_server",
            "hypercorn.typing",
            "hypercorn.utils"
        ],
        "version": "0.11.1"
    },
    "hypercouch": {
        "cmdline": [],
        "modules": [
            "hypercouch",
            "hypercouch.index",
            "tests",
            "tests.attr_test",
            "tests.basic_test",
            "tests.common",
            "tests.highlight_test",
            "tests.multi_db_test",
            "tests.multi_design_test",
            "tests.order_test",
            "tests.unicode_test"
        ],
        "version": "0.3"
    },
    "hypercube": {
        "cmdline": [],
        "modules": [
            "hypercube",
            "hypercube.array_factory",
            "hypercube.base_cube",
            "hypercube.dims",
            "hypercube.tests",
            "hypercube.tests.run_tests",
            "hypercube.tests.test_cube",
            "hypercube.util",
            "hypercube.version"
        ],
        "version": "0.3.4"
    },
    "hypercube-client": {
        "cmdline": [],
        "modules": [
            "hypercube",
            "hypercube.client"
        ],
        "version": "0.0.1"
    },
    "hyperd": {
        "cmdline": [],
        "modules": [
            "hyperd",
            "hyperd.types_pb2",
            "hyperd.types_pb2_grpc"
        ],
        "version": "0.1.0"
    },
    "hyperdash": {
        "cmdline": [],
        "modules": [
            "hyperdash",
            "hyperdash.client",
            "hyperdash.code_runner",
            "hyperdash.commands",
            "hyperdash.constants",
            "hyperdash.experiment",
            "hyperdash.hyper_dash",
            "hyperdash.io_buffer",
            "hyperdash.jupyter",
            "hyperdash.jupyter_2_exec",
            "hyperdash.jupyter_3_exec",
            "hyperdash.monitor",
            "hyperdash.sdk_message",
            "hyperdash.server_manager",
            "hyperdash.utils",
            "hyperdash_cli",
            "hyperdash_cli.cli",
            "hyperdash_cli.cli-runner",
            "hyperdash_cli.constants"
        ],
        "version": "0.15.3"
    },
    "hyperdb": {
        "cmdline": [],
        "modules": [
            "hyperdb",
            "hyperdb.gcp",
            "hyperdb.local_files",
            "hyperdb.ms_azure",
            "hyperdb.tableau_server"
        ],
        "version": "0.1.1"
    },
    "hyperdiary": {
        "cmdline": [],
        "modules": [
            "hyperdiary",
            "hyperdiary.check",
            "hyperdiary.diary",
            "hyperdiary.html",
            "hyperdiary.htmltags",
            "hyperdiary.hugo",
            "hyperdiary.localization",
            "hyperdiary.simplepath",
            "hyperdiary.stats",
            "hyperdiary.tiddlywiki",
            "hyperdiary.view",
            "tests",
            "tests.test_doctests",
            "tests.test_hyperdiary"
        ],
        "version": "0.6.0"
    },
    "hyperdim": {
        "cmdline": [],
        "modules": [
            "hyperdim",
            "hyperdim.encoders",
            "hyperdim.hdmodel",
            "hyperdim.kernels",
            "hyperdim.utils"
        ],
        "version": "0.0.6"
    },
    "hyperdns-flask": {
        "cmdline": [],
        "modules": [
            "hyperdns.flask",
            "hyperdns.flask.api",
            "hyperdns.flask.auth",
            "hyperdns.flask.result",
            "hyperdns.flask.sql"
        ],
        "version": "0.9.4"
    },
    "hyperdns-hal": {
        "cmdline": [],
        "modules": [
            "hyperdns.hal",
            "hyperdns.hal.navigator",
            "hyperdns.hal.render",
            "restnavigator",
            "restnavigator.exc",
            "restnavigator.halnav",
            "restnavigator.registry",
            "restnavigator.utils"
        ],
        "version": "0.9.1"
    },
    "hyperdns-netdns": {
        "cmdline": [],
        "modules": [
            "hyperdns.netdns",
            "hyperdns.netdns.cli",
            "hyperdns.netdns.cli.merge",
            "hyperdns.netdns.cli.query",
            "hyperdns.netdns.cli.serve",
            "hyperdns.netdns.cli.validate",
            "hyperdns.netdns.cli.xlate",
            "hyperdns.netdns.config",
            "hyperdns.netdns.names",
            "hyperdns.netdns.query",
            "hyperdns.netdns.querycodes",
            "hyperdns.netdns.recordclass",
            "hyperdns.netdns.recordpool",
            "hyperdns.netdns.recordset",
            "hyperdns.netdns.recordspec",
            "hyperdns.netdns.recordtype",
            "hyperdns.netdns.resolver",
            "hyperdns.netdns.wire",
            "hyperdns.netdns.zonefiles"
        ],
        "version": "0.9.0"
    },
    "hyperdock": {
        "cmdline": [],
        "modules": [
            "hyperdock",
            "hyperdock.common",
            "hyperdock.common.config",
            "hyperdock.common.experiment",
            "hyperdock.common.notification",
            "hyperdock.common.notification.pushover",
            "hyperdock.common.notification.service",
            "hyperdock.common.notification.slack",
            "hyperdock.common.stability",
            "hyperdock.common.trialqueue",
            "hyperdock.common.utils",
            "hyperdock.common.workqueue",
            "hyperdock.supervisor",
            "hyperdock.supervisor.main",
            "hyperdock.supervisor.search",
            "hyperdock.supervisor.search.sampling",
            "hyperdock.supervisor.search.search",
            "hyperdock.supervisor.supervisor",
            "hyperdock.version",
            "hyperdock.worker",
            "hyperdock.worker.main",
            "hyperdock.worker.worker",
            "tests",
            "tests.common",
            "tests.common.mockexperiment",
            "tests.common.notification",
            "tests.common.notification.test_init",
            "tests.common.notification.test_pushover",
            "tests.common.notification.test_service",
            "tests.common.notification.test_slack",
            "tests.common.test_config",
            "tests.common.test_experiment",
            "tests.common.test_stability",
            "tests.common.test_trialsqueue",
            "tests.common.test_utils",
            "tests.common.test_workqueue",
            "tests.hyperdock_basetest",
            "tests.supervisor",
            "tests.supervisor.search",
            "tests.supervisor.search.test_sampling",
            "tests.supervisor.search.test_search",
            "tests.supervisor.test_supervisor",
            "tests.worker",
            "tests.worker.test_worker"
        ],
        "version": "0.19.2"
    },
    "hyperdrive": {
        "cmdline": [],
        "modules": [
            "hyperdrive",
            "hyperdrive.provider",
            "test",
            "test.fixtures",
            "test.fixtures.test",
            "test.test_docker",
            "test.test_pccl"
        ],
        "version": "0.1.1"
    },
    "hyperdual": {
        "cmdline": [],
        "modules": [
            "hyperdual"
        ],
        "version": "0.8.1"
    },
    "hypereditor": {
        "cmdline": [],
        "modules": [
            "hypereditor",
            "hypereditor.admin",
            "hypereditor.apps",
            "hypereditor.blocks",
            "hypereditor.blocks.base",
            "hypereditor.fields",
            "hypereditor.hyper_blocks",
            "hypereditor.migrations",
            "hypereditor.models",
            "hypereditor.settings",
            "hypereditor.tests",
            "hypereditor.urls",
            "hypereditor.utils",
            "hypereditor.views",
            "sandbox",
            "sandbox.example",
            "sandbox.example.admin",
            "sandbox.example.apps",
            "sandbox.example.migrations",
            "sandbox.example.migrations.0001_initial",
            "sandbox.example.models",
            "sandbox.example.tests",
            "sandbox.example.views",
            "sandbox.settings",
            "sandbox.urls",
            "sandbox.wsgi"
        ],
        "version": "0.1.0"
    },
    "hypereffect": {
        "cmdline": [],
        "modules": [
            "hypereffect.saenews"
        ],
        "version": "0.1.0"
    },
    "hypereffects": {
        "cmdline": [],
        "modules": [
            "hypereffect.saenews"
        ],
        "version": "0.1.0"
    },
    "hyperengine": {
        "cmdline": [],
        "modules": [
            "hyperengine",
            "hyperengine.base",
            "hyperengine.base.base_io",
            "hyperengine.base.logging",
            "hyperengine.base.named_dict",
            "hyperengine.base.util",
            "hyperengine.bayesian",
            "hyperengine.bayesian.kernel",
            "hyperengine.bayesian.maximizer",
            "hyperengine.bayesian.sampler",
            "hyperengine.bayesian.strategy",
            "hyperengine.bayesian.utility",
            "hyperengine.examples",
            "hyperengine.examples.1_1_hello_word_with_mnist",
            "hyperengine.examples.1_2_getting_started_with_tuning",
            "hyperengine.examples.1_3_saving_best_models_mnist",
            "hyperengine.examples.1_4_fine_tuning_saved_model",
            "hyperengine.examples.1_5_learning_curve_prediction",
            "hyperengine.examples.1_6_optimizing_regression",
            "hyperengine.examples.2_1_cnn_mnist",
            "hyperengine.examples.2_2_cnn_cifar",
            "hyperengine.examples.2_3_all_conv_net_cifar",
            "hyperengine.examples.3_1_lstm_mnist",
            "hyperengine.examples.3_2_rnn_sms_spam_detector",
            "hyperengine.examples.4_1_word2vec_embedding",
            "hyperengine.examples.common",
            "hyperengine.impl",
            "hyperengine.impl.tensorflow",
            "hyperengine.impl.tensorflow.tensorflow_model_io",
            "hyperengine.impl.tensorflow.tensorflow_runner",
            "hyperengine.impl.tensorflow.tensorflow_solver",
            "hyperengine.impl.tensorflow.tf_util",
            "hyperengine.model",
            "hyperengine.model.base_runner",
            "hyperengine.model.base_solver",
            "hyperengine.model.curve_predictor",
            "hyperengine.model.data_set",
            "hyperengine.model.hyper_tuner",
            "hyperengine.model.model_io",
            "hyperengine.spec",
            "hyperengine.spec.nodes",
            "hyperengine.spec.parsed_spec",
            "hyperengine.spec.sugar"
        ],
        "version": "0.1.1"
    },
    "hyperestraier": {
        "cmdline": [],
        "modules": [
            "hyperestraier"
        ],
        "version": "0.10.10"
    },
    "hyperflow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperfoil-client": {
        "cmdline": [],
        "modules": [
            "hyperfoil",
            "hyperfoil.client",
            "hyperfoil.clients",
            "hyperfoil.defaults",
            "hyperfoil.errors",
            "hyperfoil.factories",
            "hyperfoil.factories.benchmark",
            "hyperfoil.factories.hyperfoil_factory",
            "hyperfoil.resources",
            "hyperfoil.utils",
            "tests.factories",
            "tests.factories.hyperfoil_factory_test"
        ],
        "version": "0.1.6"
    },
    "hyperform": {
        "cmdline": [],
        "modules": [],
        "version": "0.201008"
    },
    "hyperframe": {
        "cmdline": [],
        "modules": [
            "hyperframe",
            "hyperframe.exceptions",
            "hyperframe.flags",
            "hyperframe.frame"
        ],
        "version": "6.0.0"
    },
    "hypergan": {
        "cmdline": [
            "hypergan"
        ],
        "modules": [
            "hypergan",
            "hypergan.accelerators..gpu_backend",
            "hypergan.cli",
            "hypergan.configurable_component",
            "hypergan.configuration",
            "hypergan.configurations.",
            "hypergan.configurations..generate_readme",
            "hypergan.configurations..generate_samples",
            "hypergan.configurations..replace_hyperparms",
            "hypergan.configurations..run_all",
            "hypergan.discriminators.",
            "hypergan.discriminators..base_discriminator",
            "hypergan.discriminators..configurable_discriminator",
            "hypergan.discriminators..dcgan_discriminator",
            "hypergan.distributions.",
            "hypergan.distributions..base_distribution",
            "hypergan.distributions..fitness_distribution",
            "hypergan.distributions..optimize_distribution",
            "hypergan.distributions..truncated_normal_distribution",
            "hypergan.distributions..uniform_distribution",
            "hypergan.gan",
            "hypergan.gan_component",
            "hypergan.gans.",
            "hypergan.gans..ali_gan",
            "hypergan.gans..aligned_gan",
            "hypergan.gans..aligned_interpolate_gan",
            "hypergan.gans..base_gan",
            "hypergan.gans..configurable_gan",
            "hypergan.gans..encoder_gan",
            "hypergan.gans..standard_gan",
            "hypergan.gans.needs_pytorch..ali_gan_combined",
            "hypergan.gans.needs_pytorch..ali_style_gan",
            "hypergan.gans.needs_pytorch..ali_vib_gan",
            "hypergan.gans.needs_pytorch..alialpha_gan",
            "hypergan.gans.needs_pytorch..aligned_ali_gan",
            "hypergan.gans.needs_pytorch..aligned_ali_gan3",
            "hypergan.gans.needs_pytorch..aligned_ali_gan6",
            "hypergan.gans.needs_pytorch..aligned_ali_gan7",
            "hypergan.gans.needs_pytorch..aligned_ali_gan8",
            "hypergan.gans.needs_pytorch..aligned_ali_gan_test",
            "hypergan.gans.needs_pytorch..aligned_ali_one_gan",
            "hypergan.gans.needs_pytorch..alpha_gan",
            "hypergan.gans.needs_pytorch..autoencoder_gan",
            "hypergan.gans.needs_pytorch..conditional_gan",
            "hypergan.gans.needs_pytorch..distribution_filtering_gan",
            "hypergan.gans.needs_pytorch..multi_generator_gan",
            "hypergan.generators.",
            "hypergan.generators..base_generator",
            "hypergan.generators..configurable_generator",
            "hypergan.generators..dcgan_generator",
            "hypergan.inputs.",
            "hypergan.inputs..celeba_loader",
            "hypergan.inputs..crop_resize_transform",
            "hypergan.inputs..fitness_image_loader",
            "hypergan.inputs..image_loader",
            "hypergan.inputs..unsupervised_image_folder",
            "hypergan.layer",
            "hypergan.layer_shape",
            "hypergan.layers.",
            "hypergan.layers..add",
            "hypergan.layers..cat",
            "hypergan.layers..channel_attention",
            "hypergan.layers..ez_norm",
            "hypergan.layers..layer",
            "hypergan.layers..linear_attention",
            "hypergan.layers..mul",
            "hypergan.layers..multi_head_attention",
            "hypergan.layers..operation",
            "hypergan.layers..pixel_shuffle",
            "hypergan.layers..residual",
            "hypergan.layers..resizable_stack",
            "hypergan.layers..segment_softmax",
            "hypergan.layers..upsample",
            "hypergan.losses.",
            "hypergan.losses..ali_loss",
            "hypergan.losses..base_loss",
            "hypergan.losses..f_divergence_loss",
            "hypergan.losses..least_squares_loss",
            "hypergan.losses..logistic_loss",
            "hypergan.losses..qp_loss",
            "hypergan.losses..ragan_loss",
            "hypergan.losses..realness_loss",
            "hypergan.losses..softmax_loss",
            "hypergan.losses..special_d_loss",
            "hypergan.losses..standard_loss",
            "hypergan.losses..wasserstein_loss",
            "hypergan.modules..adaptive_instance_norm",
            "hypergan.modules..attention",
            "hypergan.modules..concat_noise",
            "hypergan.modules..const",
            "hypergan.modules..hardsigmoid",
            "hypergan.modules..learned_noise",
            "hypergan.modules..linformer",
            "hypergan.modules..modulated_conv2d",
            "hypergan.modules..multi_head_attention",
            "hypergan.modules..no_op",
            "hypergan.modules..pixel_norm",
            "hypergan.modules..reshape",
            "hypergan.modules..residual",
            "hypergan.modules..scaled_conv2d",
            "hypergan.modules..styled_conv2d",
            "hypergan.modules..variational",
            "hypergan.modules..zeros",
            "hypergan.optimizers..adamirror",
            "hypergan.optimizers..amsgrad",
            "hypergan.optimizers..oadam",
            "hypergan.optimizers.needs_pytorch..competitive2_optimizer",
            "hypergan.optimizers.needs_pytorch..competitive_optimizer",
            "hypergan.optimizers.needs_pytorch..consensus_optimizer",
            "hypergan.optimizers.needs_pytorch..curl_optimizer",
            "hypergan.optimizers.needs_pytorch..depth_optimizer",
            "hypergan.optimizers.needs_pytorch..elastic_weight_consolidation_optimizer",
            "hypergan.optimizers.needs_pytorch..ema_optimizer",
            "hypergan.optimizers.needs_pytorch..gan_optimizer",
            "hypergan.optimizers.needs_pytorch..giga_wolf_optimizer",
            "hypergan.optimizers.needs_pytorch..gradient_magnitude_optimizer",
            "hypergan.optimizers.needs_pytorch..jr_optimizer",
            "hypergan.optimizers.needs_pytorch..local_nash_optimizer",
            "hypergan.optimizers.needs_pytorch..negative_momentum_optimizer",
            "hypergan.optimizers.needs_pytorch..orthonormal_optimizer",
            "hypergan.optimizers.needs_pytorch..potential_optimizer",
            "hypergan.optimizers.needs_pytorch..predictive_method_optimizer",
            "hypergan.optimizers.needs_pytorch..sga_optimizer",
            "hypergan.optimizers.needs_pytorch..social_optimizer",
            "hypergan.optimizers.needs_pytorch..sos_optimizer",
            "hypergan.optimizers.needs_pytorch..tpu_negative_momentum_optimizer",
            "hypergan.parser",
            "hypergan.samplers.",
            "hypergan.samplers..aligned_batch_walk_sampler",
            "hypergan.samplers..aligned_sampler",
            "hypergan.samplers..base_sampler",
            "hypergan.samplers..batch_sampler",
            "hypergan.samplers..batch_walk_sampler",
            "hypergan.samplers..encoder_sampler",
            "hypergan.samplers..grid_sampler",
            "hypergan.samplers..input_sampler",
            "hypergan.samplers..static_batch_sampler",
            "hypergan.samplers..y_sampler",
            "hypergan.samplers.needs_pytorch..debug_sampler",
            "hypergan.samplers.needs_pytorch..gang_sampler",
            "hypergan.samplers.needs_pytorch..progressive_sampler",
            "hypergan.samplers.needs_pytorch..random_walk_sampler",
            "hypergan.samplers.needs_pytorch..sorted_sampler",
            "hypergan.samplers.needs_pytorch..style_walk_sampler",
            "hypergan.search.",
            "hypergan.search..aligned_random_search",
            "hypergan.search..alphagan_random_search",
            "hypergan.search..default_configurations",
            "hypergan.search..random_search",
            "hypergan.threaded_tk_viewer",
            "hypergan.train_hooks..adversarial_norm_train_hook",
            "hypergan.train_hooks..base_train_hook",
            "hypergan.train_hooks..conjecture_train_hook",
            "hypergan.train_hooks..extragradient_train_hook",
            "hypergan.train_hooks..gradient_penalty_train_hook",
            "hypergan.train_hooks..initialize_as_autoencoder",
            "hypergan.train_hooks..match_support_train_hook",
            "hypergan.train_hooks..negative_momentum_train_hook",
            "hypergan.train_hooks..online_ewc_train_hook",
            "hypergan.train_hooks..stabilizing_training_train_hook",
            "hypergan.train_hooks.experimental..rolling_memory_2_train_hook",
            "hypergan.train_hooks.experimental..rolling_memory_train_hook",
            "hypergan.train_hooks.needs_pytorch..adversarial_robust_train_hook",
            "hypergan.train_hooks.needs_pytorch..competitive_train_hook",
            "hypergan.train_hooks.needs_pytorch..force_equilibrium_train_hook",
            "hypergan.train_hooks.needs_pytorch..gradient_locally_stable_train_hook",
            "hypergan.train_hooks.needs_pytorch..imle_train_hook",
            "hypergan.train_hooks.needs_pytorch..k_lipschitz_train_hook",
            "hypergan.train_hooks.needs_pytorch..learning_rate_dropout_train_hook",
            "hypergan.train_hooks.needs_pytorch..max_gp_train_hook",
            "hypergan.train_hooks.needs_pytorch..minibatch_train_hook",
            "hypergan.train_hooks.needs_pytorch..progress_compress_kbgan_train_hook",
            "hypergan.train_hooks.needs_pytorch..progress_compress_train_hook",
            "hypergan.train_hooks.needs_pytorch..self_supervised_train_hook",
            "hypergan.train_hooks.needs_pytorch..weight_constraint_train_hook",
            "hypergan.train_hooks.needs_pytorch..weight_penalty_train_hook",
            "hypergan.train_hooks.needs_pytorch..zero_penalty_train_hook",
            "hypergan.trainers.",
            "hypergan.trainers..accumulate_gradient_trainer",
            "hypergan.trainers..alternating_trainer",
            "hypergan.trainers..balanced_trainer",
            "hypergan.trainers..base_trainer",
            "hypergan.trainers..simultaneous_trainer",
            "hypergan.trainers.needs_pytorch..competitive_alternating_trainer",
            "hypergan.trainers.needs_pytorch..competitive_trainer",
            "hypergan.trainers.needs_pytorch..consensus_trainer",
            "hypergan.trainers.needs_pytorch..curriculum_trainer",
            "hypergan.trainers.needs_pytorch..depth_trainer",
            "hypergan.trainers.needs_pytorch..evolution_trainer",
            "hypergan.trainers.needs_pytorch..gang_trainer",
            "hypergan.trainers.needs_pytorch..incremental_trainer",
            "hypergan.trainers.needs_pytorch..kbeam_trainer",
            "hypergan.trainers.needs_pytorch..line_search_trainer",
            "hypergan.trainers.needs_pytorch..multi_marginal_trainer",
            "hypergan.trainers.needs_pytorch..multi_step_trainer",
            "hypergan.trainers.needs_pytorch..multi_trainer_trainer",
            "hypergan.trainers.needs_pytorch..proportional_control_trainer",
            "hypergan.trainers.needs_pytorch..qualified_step_trainer",
            "hypergan.viewer"
        ],
        "version": "1.0.6"
    },
    "hyperglass": {
        "cmdline": [],
        "modules": [
            "hyperglass",
            "hyperglass.api",
            "hyperglass.api.error_handlers",
            "hyperglass.api.events",
            "hyperglass.api.examples.devices",
            "hyperglass.api.examples.queries",
            "hyperglass.api.examples.query",
            "hyperglass.api.routes",
            "hyperglass.api.tasks",
            "hyperglass.cache",
            "hyperglass.cache.aio",
            "hyperglass.cache.base",
            "hyperglass.cache.sync",
            "hyperglass.cli",
            "hyperglass.cli.commands",
            "hyperglass.cli.echo",
            "hyperglass.cli.exceptions",
            "hyperglass.cli.formatting",
            "hyperglass.cli.static",
            "hyperglass.cli.util",
            "hyperglass.compat",
            "hyperglass.compat._asyncio",
            "hyperglass.compat._sshtunnel",
            "hyperglass.configuration",
            "hyperglass.configuration.defaults",
            "hyperglass.configuration.main",
            "hyperglass.configuration.markdown",
            "hyperglass.console",
            "hyperglass.constants",
            "hyperglass.encode",
            "hyperglass.exceptions",
            "hyperglass.execution",
            "hyperglass.execution.drivers",
            "hyperglass.execution.drivers._common",
            "hyperglass.execution.drivers._construct",
            "hyperglass.execution.drivers.agent",
            "hyperglass.execution.drivers.ssh",
            "hyperglass.execution.drivers.ssh_netmiko",
            "hyperglass.execution.drivers.ssh_scrapli",
            "hyperglass.execution.main",
            "hyperglass.external",
            "hyperglass.external._base",
            "hyperglass.external.bgptools",
            "hyperglass.external.generic",
            "hyperglass.external.msteams",
            "hyperglass.external.ripestat",
            "hyperglass.external.rpki",
            "hyperglass.external.slack",
            "hyperglass.external.webhooks",
            "hyperglass.log",
            "hyperglass.main",
            "hyperglass.models",
            "hyperglass.models.api",
            "hyperglass.models.api.cert_import",
            "hyperglass.models.api.query",
            "hyperglass.models.api.response",
            "hyperglass.models.api.rfc8522",
            "hyperglass.models.api.types",
            "hyperglass.models.api.validators",
            "hyperglass.models.commands",
            "hyperglass.models.commands._mikrotik_base",
            "hyperglass.models.commands.arista",
            "hyperglass.models.commands.cisco_ios",
            "hyperglass.models.commands.cisco_nxos",
            "hyperglass.models.commands.cisco_xr",
            "hyperglass.models.commands.common",
            "hyperglass.models.commands.huawei",
            "hyperglass.models.commands.juniper",
            "hyperglass.models.commands.mikrotik_routeros",
            "hyperglass.models.commands.mikrotik_switchos",
            "hyperglass.models.commands.vyos",
            "hyperglass.models.config",
            "hyperglass.models.config._utils",
            "hyperglass.models.config.cache",
            "hyperglass.models.config.credential",
            "hyperglass.models.config.devices",
            "hyperglass.models.config.docs",
            "hyperglass.models.config.logging",
            "hyperglass.models.config.messages",
            "hyperglass.models.config.network",
            "hyperglass.models.config.opengraph",
            "hyperglass.models.config.params",
            "hyperglass.models.config.proxy",
            "hyperglass.models.config.queries",
            "hyperglass.models.config.ssl",
            "hyperglass.models.config.structured",
            "hyperglass.models.config.vrf",
            "hyperglass.models.config.web",
            "hyperglass.models.fields",
            "hyperglass.models.main",
            "hyperglass.models.webhook",
            "hyperglass.parsing",
            "hyperglass.parsing.common",
            "hyperglass.parsing.juniper",
            "hyperglass.parsing.linux",
            "hyperglass.parsing.mikrotik",
            "hyperglass.parsing.models",
            "hyperglass.parsing.models.frr",
            "hyperglass.parsing.models.juniper",
            "hyperglass.parsing.models.serialized",
            "hyperglass.parsing.nos",
            "hyperglass.util",
            "hyperglass.util.system_info"
        ],
        "version": "1.0.0b61"
    },
    "hyperglass-agent": {
        "cmdline": [],
        "modules": [
            "hyperglass_agent",
            "hyperglass_agent.api",
            "hyperglass_agent.api.web",
            "hyperglass_agent.cli",
            "hyperglass_agent.cli.actions",
            "hyperglass_agent.cli.commands",
            "hyperglass_agent.cli.echo",
            "hyperglass_agent.cli.exceptions",
            "hyperglass_agent.cli.static",
            "hyperglass_agent.config",
            "hyperglass_agent.console",
            "hyperglass_agent.constants",
            "hyperglass_agent.exceptions",
            "hyperglass_agent.execute",
            "hyperglass_agent.log",
            "hyperglass_agent.models",
            "hyperglass_agent.models._formatters",
            "hyperglass_agent.models._utils",
            "hyperglass_agent.models.commands",
            "hyperglass_agent.models.general",
            "hyperglass_agent.models.request",
            "hyperglass_agent.nos_utils",
            "hyperglass_agent.nos_utils.bird",
            "hyperglass_agent.nos_utils.frr",
            "hyperglass_agent.payload",
            "hyperglass_agent.util"
        ],
        "version": "0.1.6"
    },
    "hyperglyph": {
        "cmdline": [],
        "modules": [
            "hyperglyph",
            "hyperglyph.data",
            "hyperglyph.encoding",
            "hyperglyph.resource",
            "hyperglyph.resource.base",
            "hyperglyph.resource.handler",
            "hyperglyph.resource.persistent",
            "hyperglyph.resource.router",
            "hyperglyph.resource.transient",
            "hyperglyph.server"
        ],
        "version": "0.9-20140421"
    },
    "hypergol": {
        "cmdline": [],
        "modules": [
            "hypergol",
            "hypergol.base_batch_processor",
            "hypergol.base_data",
            "hypergol.base_task",
            "hypergol.base_tensorflow_model",
            "hypergol.base_tensorflow_model_block",
            "hypergol.cli",
            "hypergol.cli.create_data_model",
            "hypergol.cli.create_model",
            "hypergol.cli.create_model_block",
            "hypergol.cli.create_old_data_model",
            "hypergol.cli.create_pipeline",
            "hypergol.cli.create_project",
            "hypergol.cli.create_task",
            "hypergol.cli.data_model_renderer",
            "hypergol.cli.diff_data_model",
            "hypergol.cli.list_datasets",
            "hypergol.datachunk",
            "hypergol.dataset",
            "hypergol.dataset_chk_file",
            "hypergol.dataset_def_file",
            "hypergol.dataset_factory",
            "hypergol.delayed",
            "hypergol.hypergol_project",
            "hypergol.logger",
            "hypergol.name_string",
            "hypergol.pipeline",
            "hypergol.repo_data",
            "hypergol.repr",
            "hypergol.simple_task",
            "hypergol.source",
            "hypergol.task",
            "hypergol.tensorflow_model_manager",
            "hypergol.utils"
        ],
        "version": "0.0.8"
    },
    "hypergolix": {
        "cmdline": [],
        "modules": [
            "hypergolix",
            "hypergolix.accounting",
            "hypergolix.app",
            "hypergolix.bootstrapping",
            "hypergolix.cli",
            "hypergolix.comms",
            "hypergolix.config",
            "hypergolix.core",
            "hypergolix.daemon",
            "hypergolix.dispatch",
            "hypergolix.embed",
            "hypergolix.exceptions",
            "hypergolix.gao",
            "hypergolix.hypothetical",
            "hypergolix.inquisition",
            "hypergolix.ipc",
            "hypergolix.lawyer",
            "hypergolix.librarian",
            "hypergolix.logutils",
            "hypergolix.objproxy",
            "hypergolix.persistence",
            "hypergolix.postal",
            "hypergolix.privateer",
            "hypergolix.remotes",
            "hypergolix.rolodex",
            "hypergolix.service",
            "hypergolix.undertaker",
            "hypergolix.utils",
            "hypergolix.winpath"
        ],
        "version": "0.1.0"
    },
    "hypergraph": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.0"
    },
    "hyperhyper": {
        "cmdline": [],
        "modules": [
            "hyperhyper",
            "hyperhyper.bunch",
            "hyperhyper.corpus",
            "hyperhyper.evaluation",
            "hyperhyper.evaluation_datasets",
            "hyperhyper.evaluation_datasets.de",
            "hyperhyper.evaluation_datasets.de.analogy",
            "hyperhyper.evaluation_datasets.de.doesnt_fit",
            "hyperhyper.evaluation_datasets.de.ws",
            "hyperhyper.evaluation_datasets.en",
            "hyperhyper.evaluation_datasets.en.analogy",
            "hyperhyper.evaluation_datasets.en.ws",
            "hyperhyper.experiment",
            "hyperhyper.pair_counts",
            "hyperhyper.pmi",
            "hyperhyper.preprocessing",
            "hyperhyper.svd",
            "hyperhyper.utils"
        ],
        "version": "0.1.1"
    },
    "hyperio": {
        "cmdline": [],
        "modules": [
            "hyperio",
            "hyperio.data",
            "hyperio.data.data",
            "hyperio.main",
            "hyperio.reporting",
            "hyperio.utils",
            "hyperio.utils.template",
            "hyperio.utils.utils"
        ],
        "version": "0.1.6"
    },
    "hyperion": {
        "cmdline": [
            "hyperion",
            "hyperion2fits"
        ],
        "modules": [
            "hyperion",
            "hyperion.conf",
            "hyperion.conf.conf_files",
            "hyperion.conf.tests",
            "hyperion.conf.tests.test_conf_io",
            "hyperion.conf.tests.test_image_conf",
            "hyperion.conf.tests.test_peeled_image_conf",
            "hyperion.conf.tests.test_run_conf",
            "hyperion.conftest",
            "hyperion.densities",
            "hyperion.densities.alpha_disk",
            "hyperion.densities.ambient_medium",
            "hyperion.densities.bipolar_cavity",
            "hyperion.densities.core",
            "hyperion.densities.flared_disk",
            "hyperion.densities.power_law_envelope",
            "hyperion.densities.tests",
            "hyperion.densities.tests.test_densities",
            "hyperion.densities.ulrich_envelope",
            "hyperion.dust",
            "hyperion.dust.dust_type",
            "hyperion.dust.emissivities",
            "hyperion.dust.mean_opacities",
            "hyperion.dust.optical_properties",
            "hyperion.dust.tests",
            "hyperion.dust.tests.test_dust",
            "hyperion.dust.tests.test_emissivities",
            "hyperion.dust.tests.test_mean_opacities",
            "hyperion.dust.tests.test_optical_properties",
            "hyperion.filter",
            "hyperion.filter.filter",
            "hyperion.filter.tests",
            "hyperion.filter.tests.test_filter",
            "hyperion.grid",
            "hyperion.grid.amr_grid",
            "hyperion.grid.cartesian_grid",
            "hyperion.grid.cylindrical_polar_grid",
            "hyperion.grid.grid_helpers",
            "hyperion.grid.grid_on_disk",
            "hyperion.grid.octree_grid",
            "hyperion.grid.spherical_polar_grid",
            "hyperion.grid.tests",
            "hyperion.grid.tests.test_grid",
            "hyperion.grid.tests.test_grid_on_disk",
            "hyperion.grid.tests.test_io",
            "hyperion.grid.tests.test_views",
            "hyperion.grid.tests.test_voronoi",
            "hyperion.grid.tests.test_yt",
            "hyperion.grid.tests.yt_compat",
            "hyperion.grid.voronoi_grid",
            "hyperion.grid.voronoi_helpers",
            "hyperion.grid.yt2_wrappers",
            "hyperion.grid.yt3_wrappers",
            "hyperion.grid.yt_wrappers",
            "hyperion.importers",
            "hyperion.importers.orion",
            "hyperion.importers.sph",
            "hyperion.importers.tests",
            "hyperion.importers.tests.test_sph",
            "hyperion.model",
            "hyperion.model.analytical_yso_model",
            "hyperion.model.helpers",
            "hyperion.model.image",
            "hyperion.model.model",
            "hyperion.model.model_output",
            "hyperion.model.sed",
            "hyperion.model.tests",
            "hyperion.model.tests.test_amr_checks",
            "hyperion.model.tests.test_analytical_yso",
            "hyperion.model.tests.test_bit_level",
            "hyperion.model.tests.test_filters",
            "hyperion.model.tests.test_fortran",
            "hyperion.model.tests.test_get_quantities",
            "hyperion.model.tests.test_helpers",
            "hyperion.model.tests.test_image",
            "hyperion.model.tests.test_minimum_energy",
            "hyperion.model.tests.test_misc",
            "hyperion.model.tests.test_model",
            "hyperion.model.tests.test_model_copy_link",
            "hyperion.model.tests.test_model_io",
            "hyperion.model.tests.test_mono",
            "hyperion.model.tests.test_mrw",
            "hyperion.model.tests.test_output_physical",
            "hyperion.model.tests.test_propagation",
            "hyperion.model.tests.test_sed",
            "hyperion.model.tests.test_specific_energy_type",
            "hyperion.model.tests.test_use_grid_from_disk",
            "hyperion.model.tests.test_use_previous",
            "hyperion.sources",
            "hyperion.sources.source",
            "hyperion.sources.tests",
            "hyperion.sources.tests.test_source",
            "hyperion.sources.tests.test_source_io",
            "hyperion.testing",
            "hyperion.testing.helper",
            "hyperion.util",
            "hyperion.util.constants",
            "hyperion.util.convenience",
            "hyperion.util.decorator",
            "hyperion.util.functions",
            "hyperion.util.integrate",
            "hyperion.util.interpolate",
            "hyperion.util.meshgrid",
            "hyperion.util.nans",
            "hyperion.util.otf_hdf5",
            "hyperion.util.parfile",
            "hyperion.util.polyhedra",
            "hyperion.util.tests",
            "hyperion.util.tests.test_functions",
            "hyperion.util.tests.test_integrate",
            "hyperion.util.tests.test_interpolate",
            "hyperion.util.validator",
            "hyperion.version"
        ],
        "version": "0.9.10"
    },
    "hyperion-cli": {
        "cmdline": [],
        "modules": [
            "hyperion",
            "hyperion.api",
            "hyperion.api.bike",
            "hyperion.api.crime",
            "hyperion.api.geo",
            "hyperion.api.social",
            "hyperion.api.util",
            "hyperion.cli",
            "hyperion.cli.getters",
            "hyperion.cli.serializers",
            "hyperion.cli.util",
            "hyperion.fetch",
            "hyperion.fetch.bikeregister",
            "hyperion.fetch.police",
            "hyperion.fetch.postcode",
            "hyperion.fetch.twitter",
            "hyperion.fetch.wikipedia",
            "hyperion.models",
            "hyperion.models.base",
            "hyperion.models.bike",
            "hyperion.models.neighbourhood",
            "hyperion.models.postcode",
            "hyperion.models.util",
            "hyperion.store",
            "hyperion.test",
            "hyperion.test.test_fetch",
            "hyperion.util",
            "test",
            "test.test_api",
            "test.test_cli",
            "test.test_fetch",
            "test.util"
        ],
        "version": "1.0.1"
    },
    "hyperion-dust": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hyperion-logs": {
        "cmdline": [],
        "modules": [
            "hyperion"
        ],
        "version": "0.0.4"
    },
    "hyperion-py": {
        "cmdline": [],
        "modules": [
            "hyperion",
            "hyperion.client",
            "hyperion.const"
        ],
        "version": "0.3.0"
    },
    "hyperion2boblight": {
        "cmdline": [],
        "modules": [
            "hyperion2boblight",
            "hyperion2boblight.main"
        ],
        "version": "2.0.0"
    },
    "hyperjet": {
        "cmdline": [],
        "modules": [],
        "version": "0.35.0"
    },
    "hyperjson": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "hyperkit": {
        "cmdline": [],
        "modules": [
            "hyperkit",
            "hyperkit.cloudinit",
            "hyperkit.command",
            "hyperkit.distro",
            "hyperkit.distro.cirros",
            "hyperkit.distro.distro",
            "hyperkit.distro.fedora",
            "hyperkit.distro.ubuntu",
            "hyperkit.error",
            "hyperkit.hypervisor",
            "hyperkit.hypervisor.command",
            "hyperkit.hypervisor.machine",
            "hyperkit.hypervisor.qemu_img",
            "hyperkit.hypervisor.vbox",
            "hyperkit.hypervisor.vboxmanage",
            "hyperkit.hypervisor.vmrun",
            "hyperkit.hypervisor.vmware",
            "hyperkit.spec",
            "hyperkit.spec.auth",
            "hyperkit.spec.hardware",
            "hyperkit.spec.image",
            "hyperkit.spec.spec",
            "hyperkit.test",
            "hyperkit.test.test_cloudinit",
            "hyperkit.test.test_distro",
            "hyperkit.test.test_hypervisor_command",
            "hyperkit.test.test_hypervisor_machine",
            "hyperkit.test.test_hypervisor_vbox",
            "hyperkit.test.test_hypervisor_vmware",
            "hyperkit.test.test_spec"
        ],
        "version": "0.2"
    },
    "hyperkite": {
        "cmdline": [],
        "modules": [
            "hyperkite",
            "hyperkite.constants",
            "hyperkite.hyperkite"
        ],
        "version": "0.1.6"
    },
    "hyperkitty": {
        "cmdline": [],
        "modules": [
            "example_project",
            "example_project.manage",
            "example_project.settings",
            "example_project.urls",
            "example_project.wsgi",
            "hyperkitty",
            "hyperkitty.admin",
            "hyperkitty.api",
            "hyperkitty.api.attachment",
            "hyperkitty.api.email",
            "hyperkitty.api.mailinglist",
            "hyperkitty.api.sender",
            "hyperkitty.api.tag",
            "hyperkitty.api.thread",
            "hyperkitty.api.utils",
            "hyperkitty.apps",
            "hyperkitty.checks",
            "hyperkitty.context_processors",
            "hyperkitty.forms",
            "hyperkitty.jobs",
            "hyperkitty.jobs.empty_threads",
            "hyperkitty.jobs.new_lists_from_mailman",
            "hyperkitty.jobs.orphan_emails",
            "hyperkitty.jobs.recent_threads_cache",
            "hyperkitty.jobs.sync_mailman",
            "hyperkitty.jobs.thread_order_depth",
            "hyperkitty.jobs.thread_starting_email",
            "hyperkitty.jobs.update_and_clean_index",
            "hyperkitty.jobs.update_index",
            "hyperkitty.lib",
            "hyperkitty.lib.analysis",
            "hyperkitty.lib.compat",
            "hyperkitty.lib.incoming",
            "hyperkitty.lib.mailman",
            "hyperkitty.lib.mockup",
            "hyperkitty.lib.posting",
            "hyperkitty.lib.utils",
            "hyperkitty.lib.view_helpers",
            "hyperkitty.management",
            "hyperkitty.management.commands",
            "hyperkitty.management.commands.hyperkitty_import",
            "hyperkitty.management.commands.hyperkitty_warm_up_cache",
            "hyperkitty.management.commands.mailman_sync",
            "hyperkitty.management.commands.update_index_one_list",
            "hyperkitty.management.utils",
            "hyperkitty.migrations",
            "hyperkitty.migrations.0001_initial",
            "hyperkitty.migrations.0002_auto_20150311_0913",
            "hyperkitty.migrations.0003_thread_starting_email",
            "hyperkitty.migrations.0004_archived_date_and_subject",
            "hyperkitty.migrations.0005_MailingList_list_id",
            "hyperkitty.migrations.0006_thread_on_delete",
            "hyperkitty.migrations.0007_allauth_20160808_1604",
            "hyperkitty.migrations.0008_django_mailman3_profile",
            "hyperkitty.migrations.0009_duplicate_persona_users",
            "hyperkitty.migrations.0010_email_sender_name",
            "hyperkitty.migrations.0011_email_parent",
            "hyperkitty.migrations.0012_thread_order_null",
            "hyperkitty.migrations.0013_mailinglist_id_1",
            "hyperkitty.migrations.0014_mailinglist_id_2",
            "hyperkitty.migrations.0015_mailinglist_id_3",
            "hyperkitty.migrations.0016_auto_20180309_0056",
            "hyperkitty.migrations.0017_file_attachments",
            "hyperkitty.migrations.0018_threadcategory_color",
            "hyperkitty.migrations.0019_auto_20190127_null_description",
            "hyperkitty.migrations.0020_auto_20190907_1927",
            "hyperkitty.models",
            "hyperkitty.models.category",
            "hyperkitty.models.common",
            "hyperkitty.models.email",
            "hyperkitty.models.favorite",
            "hyperkitty.models.mailinglist",
            "hyperkitty.models.profile",
            "hyperkitty.models.sender",
            "hyperkitty.models.tag",
            "hyperkitty.models.thread",
            "hyperkitty.models.vote",
            "hyperkitty.search_indexes",
            "hyperkitty.signals",
            "hyperkitty.tasks",
            "hyperkitty.templatetags",
            "hyperkitty.templatetags.hk_generic",
            "hyperkitty.templatetags.hk_haystack",
            "hyperkitty.tests",
            "hyperkitty.tests._test_caching",
            "hyperkitty.tests.commands",
            "hyperkitty.tests.commands.test_import",
            "hyperkitty.tests.commands.test_mailman_sync",
            "hyperkitty.tests.jobs",
            "hyperkitty.tests.lib",
            "hyperkitty.tests.lib.test_analysis",
            "hyperkitty.tests.lib.test_incoming",
            "hyperkitty.tests.lib.test_mailman",
            "hyperkitty.tests.lib.test_posting",
            "hyperkitty.tests.lib.test_utils",
            "hyperkitty.tests.lib.test_view_helpers",
            "hyperkitty.tests.migrations",
            "hyperkitty.tests.migrations.test_0009",
            "hyperkitty.tests.models",
            "hyperkitty.tests.models.test_email",
            "hyperkitty.tests.models.test_lastview",
            "hyperkitty.tests.models.test_mailinglist",
            "hyperkitty.tests.models.test_profile",
            "hyperkitty.tests.models.test_sender",
            "hyperkitty.tests.models.test_tag",
            "hyperkitty.tests.models.test_thread",
            "hyperkitty.tests.models.test_vote",
            "hyperkitty.tests.settings_test",
            "hyperkitty.tests.test_search_index",
            "hyperkitty.tests.test_signals",
            "hyperkitty.tests.test_tasks",
            "hyperkitty.tests.test_templatetags",
            "hyperkitty.tests.urls_test",
            "hyperkitty.tests.utils",
            "hyperkitty.tests.views",
            "hyperkitty.tests.views.test_accounts",
            "hyperkitty.tests.views.test_archives",
            "hyperkitty.tests.views.test_compat",
            "hyperkitty.tests.views.test_index",
            "hyperkitty.tests.views.test_mailinglist",
            "hyperkitty.tests.views.test_mailman",
            "hyperkitty.tests.views.test_message",
            "hyperkitty.tests.views.test_search",
            "hyperkitty.tests.views.test_thread",
            "hyperkitty.urls",
            "hyperkitty.utils",
            "hyperkitty.views",
            "hyperkitty.views.accounts",
            "hyperkitty.views.categories",
            "hyperkitty.views.compat",
            "hyperkitty.views.index",
            "hyperkitty.views.mailman",
            "hyperkitty.views.message",
            "hyperkitty.views.mlist",
            "hyperkitty.views.search",
            "hyperkitty.views.tags",
            "hyperkitty.views.thread",
            "hyperkitty.views.users"
        ],
        "version": "1.3.3"
    },
    "hyperlambda": {
        "cmdline": [],
        "modules": [
            "hyperlambda",
            "hyperlambda.client",
            "hyperlambda.data",
            "hyperlambda.exceptions",
            "hyperlambda.helper",
            "hyperlambda.main",
            "hyperlambda.settings"
        ],
        "version": "0.0.2"
    },
    "hyperledger": {
        "cmdline": [],
        "modules": [
            "hyperledger",
            "hyperledger.api",
            "hyperledger.api.block",
            "hyperledger.api.blockchain",
            "hyperledger.api.chaincode",
            "hyperledger.api.network",
            "hyperledger.api.registrar",
            "hyperledger.api.transaction",
            "hyperledger.auth",
            "hyperledger.auth.auth",
            "hyperledger.client",
            "hyperledger.constants",
            "hyperledger.errors",
            "hyperledger.ssladapter",
            "hyperledger.ssladapter.ssl_match_hostname",
            "hyperledger.ssladapter.ssladapter",
            "hyperledger.tls",
            "hyperledger.utils",
            "hyperledger.utils.decorators",
            "hyperledger.utils.types",
            "hyperledger.utils.utils",
            "hyperledger.version"
        ],
        "version": "0.1.5"
    },
    "hyperledger-py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperlink": {
        "cmdline": [],
        "modules": [
            "hyperlink",
            "hyperlink._socket",
            "hyperlink._url",
            "hyperlink.hypothesis",
            "hyperlink.test",
            "hyperlink.test.common",
            "hyperlink.test.test_common",
            "hyperlink.test.test_decoded_url",
            "hyperlink.test.test_hypothesis",
            "hyperlink.test.test_parse",
            "hyperlink.test.test_scheme_registration",
            "hyperlink.test.test_socket",
            "hyperlink.test.test_url"
        ],
        "version": "20.0.1"
    },
    "hyperlink-extractor": {
        "cmdline": [],
        "modules": [
            "hyperlink_extractor",
            "hyperlink_extractor.extract"
        ],
        "version": "0.1"
    },
    "hyperlite": {
        "cmdline": [],
        "modules": [
            "hyperlite",
            "hyperlite.collection",
            "hyperlite.cursor",
            "hyperlite.event",
            "hyperlite.object"
        ],
        "version": "0.1"
    },
    "hyperloglog": {
        "cmdline": [],
        "modules": [
            "hyperloglog",
            "hyperloglog.compat",
            "hyperloglog.const",
            "hyperloglog.hll",
            "hyperloglog.shll",
            "hyperloglog.test",
            "hyperloglog.test.test_hll",
            "hyperloglog.test.test_shll"
        ],
        "version": "0.0.12"
    },
    "hyperloglogdb": {
        "cmdline": [],
        "modules": [
            "hyperloglogdb",
            "hyperloglogdb.hll",
            "hyperloglogdb.hlldb",
            "hyperloglogdb.test",
            "hyperloglogdb.test.test_hll",
            "hyperloglogdb.test.test_hlldb"
        ],
        "version": "0.1.0"
    },
    "hyperloglogs": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hyperlpr": {
        "cmdline": [],
        "modules": [
            "hyperlpr",
            "hyperlpr.hyperlpr",
            "hyperlpr.table_chs"
        ],
        "version": "0.0.2"
    },
    "hypermark": {
        "cmdline": [],
        "modules": [
            "hypermark",
            "hypermark.api",
            "hypermark.bootstrap",
            "hypermark.core",
            "hypermark.filters",
            "hypermark.session"
        ],
        "version": "0.0.1"
    },
    "hypermax": {
        "cmdline": [],
        "modules": [
            "hypermax",
            "hypermax.algorithms",
            "hypermax.algorithms.adaptive_bayesian_hyperband_optimizer",
            "hypermax.algorithms.atpe_optimizer",
            "hypermax.algorithms.human_guided_optimizer_wrapper",
            "hypermax.algorithms.optimization_algorithm_base",
            "hypermax.algorithms.random_search_optimizer",
            "hypermax.algorithms.tpe_optimizer",
            "hypermax.cli",
            "hypermax.configuration",
            "hypermax.cui",
            "hypermax.execution",
            "hypermax.file_utils",
            "hypermax.hyperparameter",
            "hypermax.optimizer",
            "hypermax.results_analyzer",
            "hypermax.test_model",
            "hypermax.utils"
        ],
        "version": "0.5.1"
    },
    "hypermedia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypermedia-resource": {
        "cmdline": [],
        "modules": [
            "hypermedia_resource",
            "hypermedia_resource.adapters",
            "hypermedia_resource.adapters.hal_json",
            "hypermedia_resource.adapters.hale_json",
            "hypermedia_resource.attributes",
            "hypermedia_resource.base",
            "hypermedia_resource.contrib",
            "hypermedia_resource.contrib.browser",
            "hypermedia_resource.contrib.maze_xml",
            "hypermedia_resource.dom",
            "hypermedia_resource.inputs",
            "hypermedia_resource.media_types",
            "hypermedia_resource.resource",
            "hypermedia_resource.translator",
            "hypermedia_resource.utils",
            "hypermedia_resource.wrappers"
        ],
        "version": "0.2.0"
    },
    "hypermediachannels": {
        "cmdline": [],
        "modules": [
            "hypermediachannels",
            "hypermediachannels.fields",
            "hypermediachannels.serializers"
        ],
        "version": "0.0.5"
    },
    "hypermemory": {
        "cmdline": [],
        "modules": [
            "hypermemory",
            "hypermemory.data",
            "hypermemory.dataset_features",
            "hypermemory.hypermemory_api",
            "hypermemory.memory_dump",
            "hypermemory.memory_io",
            "hypermemory.memory_load",
            "hypermemory.paths",
            "hypermemory.utils",
            "hypermemory.utils.path_utils",
            "hypermemory.utils.utils",
            "tests",
            "tests._test_hyperactive",
            "tests._test_memory_helpers",
            "tests.test_hypermemory"
        ],
        "version": "0.2.2"
    },
    "hyperminhash": {
        "cmdline": [],
        "modules": [
            "hyperminhash",
            "hyperminhash.hyperminhash"
        ],
        "version": "0.0.5"
    },
    "hyperml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypermodel": {
        "cmdline": [],
        "modules": [
            "hypermodel",
            "hypermodel.cli",
            "hypermodel.cli.cli_start",
            "hypermodel.cli.groups",
            "hypermodel.cli.groups.k8s",
            "hypermodel.cli.groups.lake",
            "hypermodel.cli.groups.warehouse",
            "hypermodel.features",
            "hypermodel.features.categorical",
            "hypermodel.features.numerical",
            "hypermodel.hml",
            "hypermodel.hml._inference_deployment",
            "hypermodel.hml.decorators",
            "hypermodel.hml.hml_app",
            "hypermodel.hml.hml_container_op",
            "hypermodel.hml.hml_global",
            "hypermodel.hml.hml_inference_app",
            "hypermodel.hml.hml_inference_deployment",
            "hypermodel.hml.hml_package",
            "hypermodel.hml.hml_pipeline",
            "hypermodel.hml.hml_pipeline_app",
            "hypermodel.hml.prediction",
            "hypermodel.kubeflow",
            "hypermodel.kubeflow.deploy",
            "hypermodel.kubeflow.deploy_dev",
            "hypermodel.kubeflow.kubeflow_client",
            "hypermodel.model",
            "hypermodel.model.table_schema",
            "hypermodel.platform",
            "hypermodel.platform.gcp",
            "hypermodel.platform.gcp.config",
            "hypermodel.platform.gcp.data_lake",
            "hypermodel.platform.gcp.data_warehouse",
            "hypermodel.platform.gcp.gcp_base_op",
            "hypermodel.platform.gcp.services",
            "hypermodel.platform.local",
            "hypermodel.platform.local.config",
            "hypermodel.platform.local.data_lake",
            "hypermodel.platform.local.data_warehouse",
            "hypermodel.platform.local.services",
            "hypermodel.utilities",
            "hypermodel.utilities.file_hash",
            "hypermodel.utilities.hm_shell",
            "hypermodel.utilities.k8s",
            "hypermodel.utilities.kubeflow"
        ],
        "version": "0.1.80"
    },
    "hypermodern-pypras": {
        "cmdline": [],
        "modules": [
            "hypermodern_pypras",
            "hypermodern_pypras.console",
            "hypermodern_pypras.wikipedia"
        ],
        "version": "0.1.0"
    },
    "hypermodern-python": {
        "cmdline": [],
        "modules": [
            "hypermodern_python",
            "hypermodern_python.console",
            "hypermodern_python.wikipedia"
        ],
        "version": "0.2.2"
    },
    "hypermodern-python-cdavis": {
        "cmdline": [],
        "modules": [
            "hypermodern_python_cdavis",
            "hypermodern_python_cdavis.console",
            "hypermodern_python_cdavis.wikipedia"
        ],
        "version": "1.0.3"
    },
    "hypermodern-python-cli99": {
        "cmdline": [],
        "modules": [
            "hypermodern_python_cli99",
            "hypermodern_python_cli99.console",
            "hypermodern_python_cli99.wikipedia"
        ],
        "version": "0.2.0"
    },
    "hypermodern-python-lucasmbastos": {
        "cmdline": [],
        "modules": [
            "hypermodern_python_lucasmbastos",
            "hypermodern_python_lucasmbastos.console",
            "hypermodern_python_lucasmbastos.wikipedia"
        ],
        "version": "0.1.0"
    },
    "hypermodern-python-test": {
        "cmdline": [],
        "modules": [
            "hypermodern_python_test",
            "hypermodern_python_test.console",
            "hypermodern_python_test.wikipedia"
        ],
        "version": "0.1.5"
    },
    "hypermodern-python-vb": {
        "cmdline": [],
        "modules": [
            "hypermodern_python_vb",
            "hypermodern_python_vb.console",
            "hypermodern_python_vb.wikipedia"
        ],
        "version": "0.1.0"
    },
    "hypermodern-screening": {
        "cmdline": [],
        "modules": [
            "hypermodern_screening",
            "hypermodern_screening.sampling_schemes",
            "hypermodern_screening.screening_measures",
            "hypermodern_screening.select_sample_set",
            "hypermodern_screening.transform_distributions",
            "hypermodern_screening.transform_ee",
            "hypermodern_screening.transform_reorder"
        ],
        "version": "0.0.4"
    },
    "hypermorph": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "hypernets": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.smoke_testing",
            "hypernets",
            "hypernets.benchmark",
            "hypernets.benchmark.nas_bench_101",
            "hypernets.core",
            "hypernets.core.callbacks",
            "hypernets.core.config",
            "hypernets.core.dispatcher",
            "hypernets.core.meta_learner",
            "hypernets.core.mutables",
            "hypernets.core.ops",
            "hypernets.core.search_space",
            "hypernets.core.searcher",
            "hypernets.core.stateful",
            "hypernets.core.trial",
            "hypernets.dispatchers",
            "hypernets.dispatchers.driver_dispatcher",
            "hypernets.dispatchers.executor_dispatcher",
            "hypernets.dispatchers.grpc",
            "hypernets.dispatchers.grpc.SearchDriverClient",
            "hypernets.dispatchers.grpc.SearchDriverService",
            "hypernets.dispatchers.grpc.process_broker_client",
            "hypernets.dispatchers.grpc.process_broker_service",
            "hypernets.dispatchers.grpc.proto",
            "hypernets.dispatchers.grpc.proto.proc_pb2",
            "hypernets.dispatchers.grpc.proto.proc_pb2_grpc",
            "hypernets.dispatchers.grpc.proto.spec_pb2",
            "hypernets.dispatchers.grpc.proto.spec_pb2_grpc",
            "hypernets.dispatchers.in_process_dispatcher",
            "hypernets.dispatchers.run",
            "hypernets.dispatchers.run_broker",
            "hypernets.dispatchers.ssh",
            "hypernets.dispatchers.ssh.grpc_process",
            "hypernets.dispatchers.ssh.local_process",
            "hypernets.dispatchers.ssh.ssh_cluster",
            "hypernets.dispatchers.ssh.ssh_process",
            "hypernets.frameworks",
            "hypernets.frameworks.keras",
            "hypernets.frameworks.keras.cnn_search_space",
            "hypernets.frameworks.keras.dnn_search_space",
            "hypernets.frameworks.keras.enas_common_ops",
            "hypernets.frameworks.keras.enas_layers",
            "hypernets.frameworks.keras.enas_micro",
            "hypernets.frameworks.keras.enas_rl_searcher",
            "hypernets.frameworks.keras.hyper_keras",
            "hypernets.frameworks.keras.layer_weights_cache",
            "hypernets.frameworks.keras.layers",
            "hypernets.frameworks.keras.one_shot_model",
            "hypernets.frameworks.keras.utils",
            "hypernets.frameworks.ml",
            "hypernets.frameworks.ml.column_selector",
            "hypernets.frameworks.ml.common_ops",
            "hypernets.frameworks.ml.datasets",
            "hypernets.frameworks.ml.datasets.dsutils",
            "hypernets.frameworks.ml.estimators",
            "hypernets.frameworks.ml.feature_generators",
            "hypernets.frameworks.ml.hyper_gbm",
            "hypernets.frameworks.ml.sklearn_ex",
            "hypernets.frameworks.ml.sklearn_pandas",
            "hypernets.frameworks.ml.transformers",
            "hypernets.frameworks.pytorch",
            "hypernets.frameworks.tensorflow",
            "hypernets.model",
            "hypernets.model.estimator",
            "hypernets.model.hyper_model",
            "hypernets.searchers",
            "hypernets.searchers.evolution_searcher",
            "hypernets.searchers.mcts_core",
            "hypernets.searchers.mcts_searcher",
            "hypernets.searchers.random_searcher",
            "hypernets.server",
            "hypernets.utils",
            "hypernets.utils.common"
        ],
        "version": "0.1.3"
    },
    "hypernetworks": {
        "cmdline": [
            "hnLoader.py",
            "hnServer.py"
        ],
        "modules": [
            "hypernetworks",
            "hypernetworks/core",
            "hypernetworks/core.HTConfig",
            "hypernetworks/core.HTErrors",
            "hypernetworks/core.HTHelper",
            "hypernetworks/core.HTMeronymy",
            "hypernetworks/core.HTRelations",
            "hypernetworks/core.HTTypes",
            "hypernetworks/core.HTUtils",
            "hypernetworks/core.Hypernetwork",
            "hypernetworks/core.Hypersimplex",
            "hypernetworks/utils",
            "hypernetworks/utils.HTAlgebra",
            "hypernetworks/utils.HTCompiler",
            "hypernetworks/utils.HTGraph",
            "hypernetworks/utils.HTInOut",
            "hypernetworks/utils.HTLaTex",
            "hypernetworks/utils.HTLambda",
            "hypernetworks/utils.HTMatrix",
            "hypernetworks/utils.HTMongo",
            "hypernetworks/utils.HTSearch",
            "hypernetworks/utils.HTSimplicalComplex",
            "hypernetworks/utils.HTTools",
            "hypernetworks/utils.HTWebOnt",
            "hypernetworks/utils.QAnalysis"
        ],
        "version": "0.0.7"
    },
    "hypernetx": {
        "cmdline": [],
        "modules": [
            "hypernetx",
            "hypernetx.algorithms",
            "hypernetx.algorithms.homology_mod2",
            "hypernetx.algorithms.s_centrality_measures",
            "hypernetx.classes",
            "hypernetx.classes.entity",
            "hypernetx.classes.hypergraph",
            "hypernetx.drawing",
            "hypernetx.drawing.rubber_band",
            "hypernetx.drawing.two_column",
            "hypernetx.drawing.util",
            "hypernetx.exception",
            "hypernetx.extras",
            "hypernetx.extras.lesmis",
            "hypernetx.read_write",
            "hypernetx.reports",
            "hypernetx.reports.descriptive_stats"
        ],
        "version": "0.3.7"
    },
    "hypernotes": {
        "cmdline": [],
        "modules": [
            "hypernotes"
        ],
        "version": "2.0.2"
    },
    "hypernova": {
        "cmdline": [],
        "modules": [
            "hypernova",
            "hypernova.plugins",
            "hypernova.plugins.dev_mode"
        ],
        "version": "0.0.3"
    },
    "hypernova-jinja2-directive": {
        "cmdline": [],
        "modules": [
            "hypernova_jinja2_directive"
        ],
        "version": "0.1.0"
    },
    "hyperop": {
        "cmdline": [],
        "modules": [
            "hyperop",
            "hyperop._version",
            "hyperop.hyperop"
        ],
        "version": "1.1"
    },
    "hyperopt": {
        "cmdline": [],
        "modules": [
            "hyperopt",
            "hyperopt.algobase",
            "hyperopt.anneal",
            "hyperopt.atpe",
            "hyperopt.base",
            "hyperopt.criteria",
            "hyperopt.early_stop",
            "hyperopt.exceptions",
            "hyperopt.fmin",
            "hyperopt.graph_viz",
            "hyperopt.hp",
            "hyperopt.ipy",
            "hyperopt.main",
            "hyperopt.mix",
            "hyperopt.mongoexp",
            "hyperopt.plotting",
            "hyperopt.progress",
            "hyperopt.pyll",
            "hyperopt.pyll.base",
            "hyperopt.pyll.stochastic",
            "hyperopt.pyll.tests",
            "hyperopt.pyll.tests.test_base",
            "hyperopt.pyll.tests.test_stochastic",
            "hyperopt.pyll_utils",
            "hyperopt.rand",
            "hyperopt.rdists",
            "hyperopt.spark",
            "hyperopt.std_out_err_redirect_tqdm",
            "hyperopt.tests",
            "hyperopt.tests.test_anneal",
            "hyperopt.tests.test_atpe_basic",
            "hyperopt.tests.test_base",
            "hyperopt.tests.test_criteria",
            "hyperopt.tests.test_domains",
            "hyperopt.tests.test_fmin",
            "hyperopt.tests.test_ipy",
            "hyperopt.tests.test_mongoexp",
            "hyperopt.tests.test_pchoice",
            "hyperopt.tests.test_plotting",
            "hyperopt.tests.test_progress",
            "hyperopt.tests.test_pyll_utils",
            "hyperopt.tests.test_rand",
            "hyperopt.tests.test_randint",
            "hyperopt.tests.test_rdists",
            "hyperopt.tests.test_spark",
            "hyperopt.tests.test_tpe",
            "hyperopt.tests.test_utils",
            "hyperopt.tests.test_vectorize",
            "hyperopt.tests.test_webpage",
            "hyperopt.tpe",
            "hyperopt.utils",
            "hyperopt.vectorize"
        ],
        "version": "0.2.5"
    },
    "hyperparameter-hunter": {
        "cmdline": [],
        "modules": [
            "hyperparameter_hunter",
            "hyperparameter_hunter.algorithm_handlers",
            "hyperparameter_hunter.callbacks",
            "hyperparameter_hunter.callbacks.aggregators",
            "hyperparameter_hunter.callbacks.bases",
            "hyperparameter_hunter.callbacks.evaluators",
            "hyperparameter_hunter.callbacks.loggers",
            "hyperparameter_hunter.callbacks.recipes",
            "hyperparameter_hunter.callbacks.wranglers",
            "hyperparameter_hunter.callbacks.wranglers.input_wranglers",
            "hyperparameter_hunter.callbacks.wranglers.predictors",
            "hyperparameter_hunter.callbacks.wranglers.target_wranglers",
            "hyperparameter_hunter.data",
            "hyperparameter_hunter.data.data_chunks",
            "hyperparameter_hunter.data.data_chunks.input_chunks",
            "hyperparameter_hunter.data.data_chunks.prediction_chunks",
            "hyperparameter_hunter.data.data_chunks.target_chunks",
            "hyperparameter_hunter.data.data_core",
            "hyperparameter_hunter.data.datasets",
            "hyperparameter_hunter.environment",
            "hyperparameter_hunter.exceptions",
            "hyperparameter_hunter.experiment_core",
            "hyperparameter_hunter.experiments",
            "hyperparameter_hunter.feature_engineering",
            "hyperparameter_hunter.importer",
            "hyperparameter_hunter.keys",
            "hyperparameter_hunter.keys.hashing",
            "hyperparameter_hunter.keys.makers",
            "hyperparameter_hunter.leaderboards",
            "hyperparameter_hunter.library_helpers",
            "hyperparameter_hunter.library_helpers.keras_helper",
            "hyperparameter_hunter.library_helpers.keras_optimization_helper",
            "hyperparameter_hunter.metrics",
            "hyperparameter_hunter.models",
            "hyperparameter_hunter.optimization",
            "hyperparameter_hunter.optimization.backends",
            "hyperparameter_hunter.optimization.backends.skopt",
            "hyperparameter_hunter.optimization.backends.skopt.engine",
            "hyperparameter_hunter.optimization.backends.skopt.protocols",
            "hyperparameter_hunter.optimization.protocol_core",
            "hyperparameter_hunter.recorders",
            "hyperparameter_hunter.reporting",
            "hyperparameter_hunter.result_reader",
            "hyperparameter_hunter.sentinels",
            "hyperparameter_hunter.settings",
            "hyperparameter_hunter.space",
            "hyperparameter_hunter.space.dimensions",
            "hyperparameter_hunter.space.space_core",
            "hyperparameter_hunter.tracers",
            "hyperparameter_hunter.utils",
            "hyperparameter_hunter.utils.boltons_utils",
            "hyperparameter_hunter.utils.file_utils",
            "hyperparameter_hunter.utils.general_utils",
            "hyperparameter_hunter.utils.learning_utils",
            "hyperparameter_hunter.utils.optimization_utils",
            "hyperparameter_hunter.utils.parsing_utils",
            "hyperparameter_hunter.utils.result_utils",
            "hyperparameter_hunter.utils.version_utils"
        ],
        "version": "3.0.0"
    },
    "hyperparams": {
        "cmdline": [],
        "modules": [
            "hyperparams",
            "hyperparams.hyperparams",
            "test",
            "test.data",
            "test.data.params",
            "test.test_load",
            "test.test_pyparams"
        ],
        "version": "1.2.3"
    },
    "hyperplan-cli": {
        "cmdline": [],
        "modules": [
            "build.lib.build.lib.build.lib.build.lib.hyperplan",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.algorithm",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.api",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.errors",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.feature_schema",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.features_descriptors",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.get_input",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.hpcmd",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.index",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.label_schema",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.labels_descriptors",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.predict",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.project",
            "build.lib.build.lib.build.lib.build.lib.hyperplan.qcm_result",
            "build.lib.build.lib.build.lib.build.lib.tests",
            "build.lib.build.lib.build.lib.build.lib.tests.test_api",
            "build.lib.build.lib.build.lib.hyperplan",
            "build.lib.build.lib.build.lib.hyperplan.algorithm",
            "build.lib.build.lib.build.lib.hyperplan.api",
            "build.lib.build.lib.build.lib.hyperplan.errors",
            "build.lib.build.lib.build.lib.hyperplan.feature_schema",
            "build.lib.build.lib.build.lib.hyperplan.features_descriptors",
            "build.lib.build.lib.build.lib.hyperplan.get_input",
            "build.lib.build.lib.build.lib.hyperplan.hpcmd",
            "build.lib.build.lib.build.lib.hyperplan.index",
            "build.lib.build.lib.build.lib.hyperplan.label_schema",
            "build.lib.build.lib.build.lib.hyperplan.labels_descriptors",
            "build.lib.build.lib.build.lib.hyperplan.predict",
            "build.lib.build.lib.build.lib.hyperplan.project",
            "build.lib.build.lib.build.lib.hyperplan.qcm_result",
            "build.lib.build.lib.build.lib.tests",
            "build.lib.build.lib.build.lib.tests.test_api",
            "build.lib.build.lib.hyperplan",
            "build.lib.build.lib.hyperplan.algorithm",
            "build.lib.build.lib.hyperplan.api",
            "build.lib.build.lib.hyperplan.errors",
            "build.lib.build.lib.hyperplan.feature_schema",
            "build.lib.build.lib.hyperplan.features_descriptors",
            "build.lib.build.lib.hyperplan.get_input",
            "build.lib.build.lib.hyperplan.hpcmd",
            "build.lib.build.lib.hyperplan.index",
            "build.lib.build.lib.hyperplan.label_schema",
            "build.lib.build.lib.hyperplan.labels_descriptors",
            "build.lib.build.lib.hyperplan.predict",
            "build.lib.build.lib.hyperplan.project",
            "build.lib.build.lib.hyperplan.qcm_result",
            "build.lib.build.lib.tests",
            "build.lib.build.lib.tests.test_api",
            "build.lib.hyperplan",
            "build.lib.hyperplan.algorithm",
            "build.lib.hyperplan.api",
            "build.lib.hyperplan.errors",
            "build.lib.hyperplan.feature_schema",
            "build.lib.hyperplan.features_descriptors",
            "build.lib.hyperplan.get_input",
            "build.lib.hyperplan.hpcmd",
            "build.lib.hyperplan.index",
            "build.lib.hyperplan.label_schema",
            "build.lib.hyperplan.labels_descriptors",
            "build.lib.hyperplan.predict",
            "build.lib.hyperplan.project",
            "build.lib.hyperplan.qcm_result",
            "build.lib.tests",
            "build.lib.tests.test_api",
            "hyperplan",
            "hyperplan.algorithm",
            "hyperplan.api",
            "hyperplan.errors",
            "hyperplan.feature_schema",
            "hyperplan.features_descriptors",
            "hyperplan.get_input",
            "hyperplan.hpcmd",
            "hyperplan.index",
            "hyperplan.label_schema",
            "hyperplan.labels_descriptors",
            "hyperplan.predict",
            "hyperplan.project",
            "hyperplan.qcm_result",
            "tests",
            "tests.test_api"
        ],
        "version": "0.0.1rc3"
    },
    "hyperplotlib": {
        "cmdline": [],
        "modules": [
            "hyperplotlib",
            "hyperplotlib.hyperplotlib_api"
        ],
        "version": "0.0.1"
    },
    "hyperpoints": {
        "cmdline": [],
        "modules": [
            "hyperpoints",
            "hyperpoints.hyperpoints",
            "test",
            "test.test_hyperpoints"
        ],
        "version": "0.0.1"
    },
    "hyperpy": {
        "cmdline": [],
        "modules": [
            "hyperpy",
            "hyperpy._version",
            "hyperpy.iari",
            "hyperpy.iari.iari",
            "hyperpy.raw",
            "hyperpy.utility",
            "hyperpy.utility.utility",
            "hyperpy.visualize"
        ],
        "version": "0.1.8"
    },
    "hyperpython": {
        "cmdline": [],
        "modules": [
            "hyperpython",
            "hyperpython.components",
            "hyperpython.components.data",
            "hyperpython.components.fa_icons",
            "hyperpython.components.hyperlinks",
            "hyperpython.components.icons",
            "hyperpython.components.page",
            "hyperpython.components.text",
            "hyperpython.conftest",
            "hyperpython.contrib",
            "hyperpython.contrib.bootstrap",
            "hyperpython.contrib.chota",
            "hyperpython.contrib.foundation",
            "hyperpython.contrib.milligram",
            "hyperpython.contrib.pure",
            "hyperpython.contrib.semantic",
            "hyperpython.contrib.semantic.base",
            "hyperpython.contrib.semantic.button",
            "hyperpython.contrib.semantic.cdn",
            "hyperpython.contrib.skeleton",
            "hyperpython.contrib.uikit",
            "hyperpython.core",
            "hyperpython.django",
            "hyperpython.django.components",
            "hyperpython.django.conftest",
            "hyperpython.fragment",
            "hyperpython.helpers",
            "hyperpython.html",
            "hyperpython.jinja2",
            "hyperpython.renderers",
            "hyperpython.renderers.attrs",
            "hyperpython.renderers.helpers",
            "hyperpython.renderers.single_attr",
            "hyperpython.tags",
            "hyperpython.utils",
            "hyperpython.utils.role_dispatch",
            "hyperpython.utils.sequences",
            "hyperpython.utils.text"
        ],
        "version": "1.1.1"
    },
    "hyperquant-framework": {
        "cmdline": [],
        "modules": [
            "hyperquant",
            "hyperquant.api",
            "hyperquant.clients",
            "hyperquant.clients.binance",
            "hyperquant.clients.bitmex",
            "hyperquant.clients.singleton_helper",
            "hyperquant.clients.tests",
            "hyperquant.clients.tests.test_binance_rest",
            "hyperquant.clients.tests.test_binance_ws",
            "hyperquant.clients.tests.test_bitmex_rest",
            "hyperquant.clients.tests.test_bitmex_ws",
            "hyperquant.clients.tests.test_init",
            "hyperquant.clients.tests.test_utils",
            "hyperquant.clients.tests.utils",
            "hyperquant.clients.utils",
            "hyperquant.utils",
            "hyperquant.utils.dict_util",
            "hyperquant.utils.log_util",
            "hyperquant.utils.math_util",
            "hyperquant.utils.test_util",
            "hyperquant.utils.tests",
            "hyperquant.utils.tests.test_dict_util",
            "hyperquant.utils.tests.test_log_util",
            "hyperquant.utils.tests.test_math_util",
            "hyperquant.utils.tests.test_test_util",
            "hyperquant.utils.tests.test_time_util",
            "hyperquant.utils.time_util"
        ],
        "version": "0.1"
    },
    "hypers": {
        "cmdline": [],
        "modules": [
            "hypers",
            "hypers.core",
            "hypers.core.array",
            "hypers.exceptions",
            "hypers.learning",
            "hypers.learning.abundance",
            "hypers.learning.cluster",
            "hypers.learning.decomposition",
            "hypers.learning.mixture",
            "hypers.plotting.view",
            "hypers.plotting.view._form",
            "hypers.plotting.view._form.mainwindow",
            "hypers.plotting.view._hsiDialog",
            "hypers.signal",
            "hypers.signal.anscombe",
            "hypers.signal.core",
            "hypers.types"
        ],
        "version": "0.0.12.2"
    },
    "hypers-cas": {
        "cmdline": [],
        "modules": [
            "hypers-cas",
            "hypers-cas.apps",
            "hypers-cas.backends",
            "hypers-cas.decorators",
            "hypers-cas.exceptions",
            "hypers-cas.middleware",
            "hypers-cas.models",
            "hypers-cas.urls",
            "hypers-cas.utils",
            "hypers-cas.views",
            "tests",
            "tests.test_deprecation",
            "tests.test_middleware",
            "tests.test_settings",
            "tests.urls",
            "tests.views"
        ],
        "version": "1.1.7"
    },
    "hypers-nacos": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "hypers-oauth2": {
        "cmdline": [],
        "modules": [
            "hfa_oauth_sdk",
            "hfa_oauth_sdk.auth",
            "hfa_oauth_sdk.test_redirect",
            "hfa_oauth_sdk.test_token",
            "hfa_oauth_sdk.utility"
        ],
        "version": "0.1"
    },
    "hyperscalar": {
        "cmdline": [],
        "modules": [
            "hyperscalar"
        ],
        "version": "0.0.1"
    },
    "hyperscan": {
        "cmdline": [],
        "modules": [
            "hyperscan"
        ],
        "version": "0.1.5"
    },
    "hyperscan-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperscas": {
        "cmdline": [],
        "modules": [
            "cas",
            "cas.apps",
            "cas.auth",
            "cas.backends",
            "cas.cache",
            "cas.domain",
            "cas.exceptions",
            "cas.middleware",
            "cas.migrations",
            "cas.migrations.0001_initial",
            "cas.models",
            "cas.mq",
            "cas.tests",
            "cas.tests.cas_tests",
            "cas.tests.get_pgt",
            "cas.tests.test_hac_mq",
            "cas.tests.test_hac_mq.apps",
            "cas.tests.test_hac_mq.factories",
            "cas.tests.test_hac_mq.migrations",
            "cas.tests.test_hac_mq.migrations.0001_initial",
            "cas.tests.test_hac_mq.models",
            "cas.tests.test_hac_mq.testHacMq",
            "cas.urls",
            "cas.utils",
            "cas.views",
            "migrations",
            "tests",
            "tests.test_deprecation",
            "tests.test_middleware",
            "tests.test_settings",
            "tests.urls",
            "tests.views"
        ],
        "version": "2.0.1"
    },
    "hyperscas2": {
        "cmdline": [],
        "modules": [
            "cas",
            "cas.apps",
            "cas.auth",
            "cas.backends",
            "cas.cache",
            "cas.domain",
            "cas.exceptions",
            "cas.middleware",
            "cas.migrations",
            "cas.migrations.0001_initial",
            "cas.models",
            "cas.mq",
            "cas.tests",
            "cas.tests.cas_tests",
            "cas.tests.get_pgt",
            "cas.tests.test_hac_mq",
            "cas.tests.test_hac_mq.apps",
            "cas.tests.test_hac_mq.factories",
            "cas.tests.test_hac_mq.migrations",
            "cas.tests.test_hac_mq.migrations.0001_initial",
            "cas.tests.test_hac_mq.models",
            "cas.tests.test_hac_mq.testHacMq",
            "cas.urls",
            "cas.utils",
            "cas.views",
            "migrations",
            "tests",
            "tests.test_deprecation",
            "tests.test_middleware",
            "tests.test_settings",
            "tests.urls",
            "tests.views"
        ],
        "version": "0.0.7"
    },
    "hyperschema": {
        "cmdline": [],
        "modules": [
            "hyperschema",
            "hyperschema.data",
            "hyperschema.link",
            "hyperschema.schema",
            "tests",
            "tests.test_data",
            "tests.test_link",
            "tests.test_schema"
        ],
        "version": "0.2.5"
    },
    "hyperscreen": {
        "cmdline": [],
        "modules": [
            "hyperscreen",
            "hyperscreen.cli",
            "hyperscreen.hyperscreen"
        ],
        "version": "0.1.0"
    },
    "hypersearch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypersexcel": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hypershot": {
        "cmdline": [],
        "modules": [
            "hypershot",
            "hypershot.cli",
            "hypershot.config",
            "hypershot.handlers",
            "hypershot.image",
            "hypershot.templating",
            "hypershot.util",
            "hypershot.video"
        ],
        "version": "0.3.1"
    },
    "hyperspace": {
        "cmdline": [],
        "modules": [
            "hyperspace",
            "hyperspace.affordances",
            "hyperspace.html",
            "hyperspace.hydra",
            "hyperspace.rdf",
            "hyperspace.turtle"
        ],
        "version": "0.2.0"
    },
    "hyperspace-explorer": {
        "cmdline": [
            "hyperspace_worker.py"
        ],
        "modules": [
            "hyperspace_explorer",
            "hyperspace_explorer.configurables",
            "hyperspace_explorer.hyperspace_worker",
            "hyperspace_explorer.queue",
            "hyperspace_explorer.results",
            "hyperspace_explorer.scenario_base",
            "hyperspace_explorer.utils"
        ],
        "version": "0.3.1"
    },
    "hyperspace-rpc": {
        "cmdline": [],
        "modules": [
            "hyperspace_rpc",
            "hyperspace_rpc.hrpc_grpc",
            "hyperspace_rpc.hrpc_pb2",
            "hyperspace_rpc.schema_grpc",
            "hyperspace_rpc.schema_pb2"
        ],
        "version": "0.0.1a3"
    },
    "hyperspaces": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.example",
            "examples.gbm",
            "examples.horovod_torch",
            "examples.hyperband",
            "examples.hyperbelt",
            "examples.skopt_torch",
            "hyperspace",
            "hyperspace.benchmarks",
            "hyperspace.hyperdrive",
            "hyperspace.hyperdrive.hyperbelt",
            "hyperspace.hyperdrive.hyperbelt.hyperband",
            "hyperspace.hyperdrive.hyperbelt.hyperbelt",
            "hyperspace.hyperdrive.skopt",
            "hyperspace.hyperdrive.skopt.dualdrive",
            "hyperspace.hyperdrive.skopt.hyperdrive",
            "hyperspace.hyperdrive.skopt.models",
            "hyperspace.kepler",
            "hyperspace.kepler.data_utils",
            "hyperspace.kepler.plots",
            "hyperspace.rover",
            "hyperspace.rover.checkpoints",
            "hyperspace.rover.latin_hypercube_sampler",
            "hyperspace.space",
            "hyperspace.space.skopt",
            "hyperspace.space.skopt.mapping_space",
            "hyperspace.space.skopt.space",
            "hyperspace.tests",
            "hyperspace.tests.test_mapping_space",
            "hyperspace.tests.test_space"
        ],
        "version": "0.4.0"
    },
    "hypersparaer": {
        "cmdline": [],
        "modules": [
            "paraer",
            "paraer.datastrctures",
            "paraer.doc",
            "paraer.excel",
            "paraer.fields",
            "paraer.para",
            "paraer.testCreator",
            "paraer.test_code_generator",
            "paraer.vendor"
        ],
        "version": "2.4.26"
    },
    "hyperspectral": {
        "cmdline": [],
        "modules": [
            "hyperspectral",
            "hyperspectral.axes",
            "hyperspectral.hyperspectral_cube"
        ],
        "version": "0.1.8"
    },
    "hyperspy": {
        "cmdline": [],
        "modules": [
            "hyperspy",
            "hyperspy.Release",
            "hyperspy._components",
            "hyperspy._components.arctan",
            "hyperspy._components.bleasdale",
            "hyperspy._components.doniach",
            "hyperspy._components.eels_arctan",
            "hyperspy._components.eels_cl_edge",
            "hyperspy._components.eels_double_power_law",
            "hyperspy._components.eels_vignetting",
            "hyperspy._components.error_function",
            "hyperspy._components.exponential",
            "hyperspy._components.expression",
            "hyperspy._components.gaussian",
            "hyperspy._components.gaussian2d",
            "hyperspy._components.gaussianhf",
            "hyperspy._components.heaviside",
            "hyperspy._components.logistic",
            "hyperspy._components.lorentzian",
            "hyperspy._components.offset",
            "hyperspy._components.pes_core_line_shape",
            "hyperspy._components.pes_see",
            "hyperspy._components.pes_voigt",
            "hyperspy._components.polynomial",
            "hyperspy._components.polynomial_deprecated",
            "hyperspy._components.power_law",
            "hyperspy._components.rc",
            "hyperspy._components.scalable_fixed_pattern",
            "hyperspy._components.skew_normal",
            "hyperspy._components.split_pvoigt",
            "hyperspy._components.voigt",
            "hyperspy._components.volume_plasmon_drude",
            "hyperspy._lazy_signals",
            "hyperspy._signals",
            "hyperspy._signals.common_signal1d",
            "hyperspy._signals.common_signal2d",
            "hyperspy._signals.complex_signal",
            "hyperspy._signals.complex_signal1d",
            "hyperspy._signals.complex_signal2d",
            "hyperspy._signals.dielectric_function",
            "hyperspy._signals.eds",
            "hyperspy._signals.eds_sem",
            "hyperspy._signals.eds_tem",
            "hyperspy._signals.eels",
            "hyperspy._signals.hologram_image",
            "hyperspy._signals.lazy",
            "hyperspy._signals.signal1d",
            "hyperspy._signals.signal2d",
            "hyperspy.api",
            "hyperspy.api_nogui",
            "hyperspy.axes",
            "hyperspy.component",
            "hyperspy.components1d",
            "hyperspy.components2d",
            "hyperspy.conftest",
            "hyperspy.datasets",
            "hyperspy.datasets.artificial_data",
            "hyperspy.datasets.example_signals",
            "hyperspy.decorators",
            "hyperspy.defaults_parser",
            "hyperspy.docstrings",
            "hyperspy.docstrings.model",
            "hyperspy.docstrings.parameters",
            "hyperspy.docstrings.plot",
            "hyperspy.docstrings.signal",
            "hyperspy.docstrings.signal1d",
            "hyperspy.drawing",
            "hyperspy.drawing._markers",
            "hyperspy.drawing._markers.horizontal_line",
            "hyperspy.drawing._markers.horizontal_line_segment",
            "hyperspy.drawing._markers.line_segment",
            "hyperspy.drawing._markers.point",
            "hyperspy.drawing._markers.rectangle",
            "hyperspy.drawing._markers.text",
            "hyperspy.drawing._markers.vertical_line",
            "hyperspy.drawing._markers.vertical_line_segment",
            "hyperspy.drawing._widgets",
            "hyperspy.drawing._widgets.circle",
            "hyperspy.drawing._widgets.horizontal_line",
            "hyperspy.drawing._widgets.label",
            "hyperspy.drawing._widgets.line2d",
            "hyperspy.drawing._widgets.range",
            "hyperspy.drawing._widgets.rectangles",
            "hyperspy.drawing._widgets.scalebar",
            "hyperspy.drawing._widgets.vertical_line",
            "hyperspy.drawing.figure",
            "hyperspy.drawing.image",
            "hyperspy.drawing.marker",
            "hyperspy.drawing.mpl_he",
            "hyperspy.drawing.mpl_hie",
            "hyperspy.drawing.mpl_hse",
            "hyperspy.drawing.signal",
            "hyperspy.drawing.signal1d",
            "hyperspy.drawing.tiles",
            "hyperspy.drawing.utils",
            "hyperspy.drawing.widget",
            "hyperspy.drawing.widgets",
            "hyperspy.events",
            "hyperspy.exceptions",
            "hyperspy.extensions",
            "hyperspy.external",
            "hyperspy.external.astropy",
            "hyperspy.external.astropy.bayesian_blocks",
            "hyperspy.external.astropy.histogram",
            "hyperspy.external.mpfit",
            "hyperspy.external.mpfit.mpfit",
            "hyperspy.external.mpfit.mpfitexpr",
            "hyperspy.external.progressbar",
            "hyperspy.interactive",
            "hyperspy.io",
            "hyperspy.io_plugins",
            "hyperspy.io_plugins.blockfile",
            "hyperspy.io_plugins.bruker",
            "hyperspy.io_plugins.dens",
            "hyperspy.io_plugins.digital_micrograph",
            "hyperspy.io_plugins.edax",
            "hyperspy.io_plugins.emd",
            "hyperspy.io_plugins.empad",
            "hyperspy.io_plugins.fei",
            "hyperspy.io_plugins.hspy",
            "hyperspy.io_plugins.image",
            "hyperspy.io_plugins.mrc",
            "hyperspy.io_plugins.mrcz",
            "hyperspy.io_plugins.msa",
            "hyperspy.io_plugins.netcdf",
            "hyperspy.io_plugins.nexus",
            "hyperspy.io_plugins.phenom",
            "hyperspy.io_plugins.protochips",
            "hyperspy.io_plugins.ripple",
            "hyperspy.io_plugins.semper_unf",
            "hyperspy.io_plugins.sur",
            "hyperspy.io_plugins.tiff",
            "hyperspy.io_plugins.usid_hdf5",
            "hyperspy.learn",
            "hyperspy.learn.mlpca",
            "hyperspy.learn.mva",
            "hyperspy.learn.ornmf",
            "hyperspy.learn.orthomax",
            "hyperspy.learn.rpca",
            "hyperspy.learn.svd_pca",
            "hyperspy.learn.whitening",
            "hyperspy.logger",
            "hyperspy.misc",
            "hyperspy.misc.array_tools",
            "hyperspy.misc.config_dir",
            "hyperspy.misc.date_time_tools",
            "hyperspy.misc.eds",
            "hyperspy.misc.eds.ffast_mac",
            "hyperspy.misc.eds.utils",
            "hyperspy.misc.eels",
            "hyperspy.misc.eels.base_gos",
            "hyperspy.misc.eels.eelsdb",
            "hyperspy.misc.eels.effective_angle",
            "hyperspy.misc.eels.electron_inelastic_mean_free_path",
            "hyperspy.misc.eels.hartree_slater_gos",
            "hyperspy.misc.eels.hydrogenic_gos",
            "hyperspy.misc.eels.tools",
            "hyperspy.misc.elements",
            "hyperspy.misc.example_signals_loading",
            "hyperspy.misc.export_dictionary",
            "hyperspy.misc.hist_tools",
            "hyperspy.misc.holography",
            "hyperspy.misc.holography.reconstruct",
            "hyperspy.misc.holography.tools",
            "hyperspy.misc.io",
            "hyperspy.misc.io.fei_stream_readers",
            "hyperspy.misc.io.tools",
            "hyperspy.misc.io.utils_readfile",
            "hyperspy.misc.ipython_tools",
            "hyperspy.misc.label_position",
            "hyperspy.misc.machine_learning",
            "hyperspy.misc.machine_learning.import_sklearn",
            "hyperspy.misc.machine_learning.tools",
            "hyperspy.misc.material",
            "hyperspy.misc.math_tools",
            "hyperspy.misc.model_tools",
            "hyperspy.misc.physical_constants",
            "hyperspy.misc.physics_tools",
            "hyperspy.misc.rgb_tools",
            "hyperspy.misc.signal_tools",
            "hyperspy.misc.slicing",
            "hyperspy.misc.test_utils",
            "hyperspy.misc.tv_denoise",
            "hyperspy.misc.utils",
            "hyperspy.model",
            "hyperspy.models",
            "hyperspy.models.edsmodel",
            "hyperspy.models.edssemmodel",
            "hyperspy.models.edstemmodel",
            "hyperspy.models.eelsmodel",
            "hyperspy.models.model1d",
            "hyperspy.models.model2d",
            "hyperspy.roi",
            "hyperspy.samfire",
            "hyperspy.samfire_utils",
            "hyperspy.samfire_utils.fit_tests",
            "hyperspy.samfire_utils.global_strategies",
            "hyperspy.samfire_utils.goodness_of_fit_tests",
            "hyperspy.samfire_utils.goodness_of_fit_tests.information_theory",
            "hyperspy.samfire_utils.goodness_of_fit_tests.red_chisq",
            "hyperspy.samfire_utils.goodness_of_fit_tests.test_general",
            "hyperspy.samfire_utils.local_strategies",
            "hyperspy.samfire_utils.samfire_kernel",
            "hyperspy.samfire_utils.samfire_pool",
            "hyperspy.samfire_utils.samfire_worker",
            "hyperspy.samfire_utils.segmenters",
            "hyperspy.samfire_utils.segmenters.histogram",
            "hyperspy.samfire_utils.strategy",
            "hyperspy.samfire_utils.weights",
            "hyperspy.samfire_utils.weights.red_chisq",
            "hyperspy.signal",
            "hyperspy.signal_tools",
            "hyperspy.signals",
            "hyperspy.tests",
            "hyperspy.tests.axes",
            "hyperspy.tests.axes.test_axes_manager",
            "hyperspy.tests.axes.test_conversion_units",
            "hyperspy.tests.axes.test_data_axis",
            "hyperspy.tests.component",
            "hyperspy.tests.component.test_EELSarctan",
            "hyperspy.tests.component.test_arctan",
            "hyperspy.tests.component.test_bleasdale",
            "hyperspy.tests.component.test_component",
            "hyperspy.tests.component.test_component_active_array",
            "hyperspy.tests.component.test_component_print_current",
            "hyperspy.tests.component.test_component_set_parameters",
            "hyperspy.tests.component.test_components",
            "hyperspy.tests.component.test_components2D",
            "hyperspy.tests.component.test_doniach",
            "hyperspy.tests.component.test_double_power_law",
            "hyperspy.tests.component.test_erf",
            "hyperspy.tests.component.test_exponential",
            "hyperspy.tests.component.test_gaussian",
            "hyperspy.tests.component.test_gaussian2d",
            "hyperspy.tests.component.test_gaussianhf",
            "hyperspy.tests.component.test_heaviside",
            "hyperspy.tests.component.test_logistic",
            "hyperspy.tests.component.test_lorentzian",
            "hyperspy.tests.component.test_pesvoigt",
            "hyperspy.tests.component.test_powerlaw",
            "hyperspy.tests.component.test_rc",
            "hyperspy.tests.component.test_skewnormal",
            "hyperspy.tests.component.test_splitvoigt",
            "hyperspy.tests.component.test_voigt",
            "hyperspy.tests.component.test_volume_plasmon_drude",
            "hyperspy.tests.datasets",
            "hyperspy.tests.datasets.test_artificial_data",
            "hyperspy.tests.datasets.test_eelsdb",
            "hyperspy.tests.drawing",
            "hyperspy.tests.drawing.test_figure",
            "hyperspy.tests.drawing.test_mpl_testing_setup",
            "hyperspy.tests.drawing.test_plot_markers",
            "hyperspy.tests.drawing.test_plot_model",
            "hyperspy.tests.drawing.test_plot_model1d",
            "hyperspy.tests.drawing.test_plot_mva",
            "hyperspy.tests.drawing.test_plot_roi_widgets",
            "hyperspy.tests.drawing.test_plot_signal",
            "hyperspy.tests.drawing.test_plot_signal1d",
            "hyperspy.tests.drawing.test_plot_signal2d",
            "hyperspy.tests.drawing.test_plot_signal_tools",
            "hyperspy.tests.drawing.test_plot_widgets",
            "hyperspy.tests.drawing.test_utils",
            "hyperspy.tests.io",
            "hyperspy.tests.io.generate_dm_testing_files",
            "hyperspy.tests.io.test_blockfile",
            "hyperspy.tests.io.test_bruker",
            "hyperspy.tests.io.test_dens",
            "hyperspy.tests.io.test_dm3",
            "hyperspy.tests.io.test_dm_stackbuilder_plugin",
            "hyperspy.tests.io.test_edax",
            "hyperspy.tests.io.test_emd",
            "hyperspy.tests.io.test_emd_prismatic",
            "hyperspy.tests.io.test_empad",
            "hyperspy.tests.io.test_fei",
            "hyperspy.tests.io.test_hdf5",
            "hyperspy.tests.io.test_image",
            "hyperspy.tests.io.test_io",
            "hyperspy.tests.io.test_mrcz",
            "hyperspy.tests.io.test_msa",
            "hyperspy.tests.io.test_nexus_hdf",
            "hyperspy.tests.io.test_phenom",
            "hyperspy.tests.io.test_protochips",
            "hyperspy.tests.io.test_ripple",
            "hyperspy.tests.io.test_semper_unf",
            "hyperspy.tests.io.test_sur",
            "hyperspy.tests.io.test_tiff",
            "hyperspy.tests.io.test_usid",
            "hyperspy.tests.learn",
            "hyperspy.tests.learn.test_bss",
            "hyperspy.tests.learn.test_cluster",
            "hyperspy.tests.learn.test_decomposition",
            "hyperspy.tests.learn.test_export",
            "hyperspy.tests.learn.test_lazy_decomposition",
            "hyperspy.tests.learn.test_learning_results",
            "hyperspy.tests.learn.test_mlpca",
            "hyperspy.tests.learn.test_ornmf",
            "hyperspy.tests.learn.test_rpca",
            "hyperspy.tests.learn.test_svd_pca",
            "hyperspy.tests.learn.test_whitening",
            "hyperspy.tests.misc",
            "hyperspy.tests.misc.test_arraytools",
            "hyperspy.tests.misc.test_date_time_tools",
            "hyperspy.tests.misc.test_fei_stream_readers",
            "hyperspy.tests.misc.test_hist_tools",
            "hyperspy.tests.misc.test_image_tools",
            "hyperspy.tests.misc.test_math_tools",
            "hyperspy.tests.misc.test_rgbtools",
            "hyperspy.tests.misc.test_test_utils",
            "hyperspy.tests.misc.test_utils",
            "hyperspy.tests.model",
            "hyperspy.tests.model.test_chi_squared",
            "hyperspy.tests.model.test_edsmodel",
            "hyperspy.tests.model.test_eelsmodel",
            "hyperspy.tests.model.test_fancy_indexing",
            "hyperspy.tests.model.test_fit_component",
            "hyperspy.tests.model.test_fitting",
            "hyperspy.tests.model.test_model",
            "hyperspy.tests.model.test_model2d",
            "hyperspy.tests.model.test_model_as_dictionary",
            "hyperspy.tests.model.test_model_selection_criteria",
            "hyperspy.tests.model.test_model_storing",
            "hyperspy.tests.model.test_parameter",
            "hyperspy.tests.model.test_set_parameter_state",
            "hyperspy.tests.model.test_set_parameter_value",
            "hyperspy.tests.samfire",
            "hyperspy.tests.samfire.test_goodness_of_fit_tests",
            "hyperspy.tests.samfire.test_histogram_segmenter",
            "hyperspy.tests.samfire.test_red_chisq_weight",
            "hyperspy.tests.samfire.test_samfire",
            "hyperspy.tests.samfire.test_strategy",
            "hyperspy.tests.samfire.test_strategy_list",
            "hyperspy.tests.samfire.test_utils",
            "hyperspy.tests.signal",
            "hyperspy.tests.signal.test_1D_tools",
            "hyperspy.tests.signal.test_2D_tools",
            "hyperspy.tests.signal.test_apodization",
            "hyperspy.tests.signal.test_assign_subclass",
            "hyperspy.tests.signal.test_binned",
            "hyperspy.tests.signal.test_complex_signal",
            "hyperspy.tests.signal.test_complex_signal2d",
            "hyperspy.tests.signal.test_eds_sem",
            "hyperspy.tests.signal.test_eds_tem",
            "hyperspy.tests.signal.test_eels",
            "hyperspy.tests.signal.test_fancy_indexing",
            "hyperspy.tests.signal.test_find_peaks1D_ohaver",
            "hyperspy.tests.signal.test_find_peaks2D",
            "hyperspy.tests.signal.test_folding",
            "hyperspy.tests.signal.test_fourier_transform",
            "hyperspy.tests.signal.test_hologram_image",
            "hyperspy.tests.signal.test_image",
            "hyperspy.tests.signal.test_image_contrast_editor_tool",
            "hyperspy.tests.signal.test_inheritance",
            "hyperspy.tests.signal.test_kramers_kronig_transform",
            "hyperspy.tests.signal.test_lazy",
            "hyperspy.tests.signal.test_map_method",
            "hyperspy.tests.signal.test_remove_background",
            "hyperspy.tests.signal.test_rgb",
            "hyperspy.tests.signal.test_signal_operators",
            "hyperspy.tests.signal.test_signal_subclass_conversion",
            "hyperspy.tests.signal.test_spectrum",
            "hyperspy.tests.signal.test_tools",
            "hyperspy.tests.test_dictionary_tree_browser",
            "hyperspy.tests.test_events",
            "hyperspy.tests.test_interactive",
            "hyperspy.tests.utils",
            "hyperspy.tests.utils.test_attrsetter",
            "hyperspy.tests.utils.test_eds",
            "hyperspy.tests.utils.test_eels",
            "hyperspy.tests.utils.test_material",
            "hyperspy.tests.utils.test_print_known_signal_types",
            "hyperspy.tests.utils.test_roi",
            "hyperspy.tests.utils.test_slugify",
            "hyperspy.tests.utils.test_stack",
            "hyperspy.ui_registry",
            "hyperspy.utils",
            "hyperspy.utils.eds",
            "hyperspy.utils.markers",
            "hyperspy.utils.material",
            "hyperspy.utils.model",
            "hyperspy.utils.model_selection",
            "hyperspy.utils.parallel_pool",
            "hyperspy.utils.peakfinders2D",
            "hyperspy.utils.plot",
            "hyperspy.utils.roi",
            "hyperspy.utils.samfire"
        ],
        "version": "1.6.0"
    },
    "hyperspy-gui-ipywidgets": {
        "cmdline": [],
        "modules": [
            "hyperspy_gui_ipywidgets",
            "hyperspy_gui_ipywidgets.axes",
            "hyperspy_gui_ipywidgets.conftest",
            "hyperspy_gui_ipywidgets.custom_widgets",
            "hyperspy_gui_ipywidgets.microscope_parameters",
            "hyperspy_gui_ipywidgets.model",
            "hyperspy_gui_ipywidgets.preferences",
            "hyperspy_gui_ipywidgets.roi",
            "hyperspy_gui_ipywidgets.tests",
            "hyperspy_gui_ipywidgets.tests.test_axes",
            "hyperspy_gui_ipywidgets.tests.test_microscope_parameters",
            "hyperspy_gui_ipywidgets.tests.test_model",
            "hyperspy_gui_ipywidgets.tests.test_preferences",
            "hyperspy_gui_ipywidgets.tests.test_roi",
            "hyperspy_gui_ipywidgets.tests.test_tools",
            "hyperspy_gui_ipywidgets.tests.utils",
            "hyperspy_gui_ipywidgets.tools",
            "hyperspy_gui_ipywidgets.utils",
            "hyperspy_gui_ipywidgets.version"
        ],
        "version": "1.3.0"
    },
    "hyperspy-gui-traitsui": {
        "cmdline": [],
        "modules": [
            "hyperspy_gui_traitsui",
            "hyperspy_gui_traitsui.axes",
            "hyperspy_gui_traitsui.buttons",
            "hyperspy_gui_traitsui.messages",
            "hyperspy_gui_traitsui.microscope_parameters",
            "hyperspy_gui_traitsui.model",
            "hyperspy_gui_traitsui.preferences",
            "hyperspy_gui_traitsui.roi",
            "hyperspy_gui_traitsui.test_import",
            "hyperspy_gui_traitsui.tools",
            "hyperspy_gui_traitsui.utils",
            "hyperspy_gui_traitsui.version"
        ],
        "version": "1.3.0"
    },
    "hyperspyui": {
        "cmdline": [],
        "modules": [
            "hyperspyui",
            "hyperspyui._elements",
            "hyperspyui._tools",
            "hyperspyui._tools.figuretool",
            "hyperspyui._tools.gaussiantool",
            "hyperspyui._tools.hometool",
            "hyperspyui._tools.linetool",
            "hyperspyui._tools.multiselectiontool",
            "hyperspyui._tools.pointertool",
            "hyperspyui._tools.selectiontool",
            "hyperspyui._tools.signalfiguretool",
            "hyperspyui._tools.tool",
            "hyperspyui._tools.zoompan",
            "hyperspyui.actionable",
            "hyperspyui.advancedaction",
            "hyperspyui.bindinglist",
            "hyperspyui.desktop_integration",
            "hyperspyui.desktop_integration_linux",
            "hyperspyui.desktop_integration_windows",
            "hyperspyui.exceptions",
            "hyperspyui.hooksignal",
            "hyperspyui.hooktraitsui",
            "hyperspyui.images.testing_icon_coloring",
            "hyperspyui.info",
            "hyperspyui.ipython_profile.ipython_embedded_config",
            "hyperspyui.log",
            "hyperspyui.mainwindow",
            "hyperspyui.mainwindowbase",
            "hyperspyui.mainwindowhyperspy",
            "hyperspyui.mainwindowutillayer",
            "hyperspyui.mdi_mpl_backend",
            "hyperspyui.modelwrapper",
            "hyperspyui.overrides",
            "hyperspyui.plugincreator",
            "hyperspyui.pluginmanager",
            "hyperspyui.plugins",
            "hyperspyui.plugins.align",
            "hyperspyui.plugins.alignzlp",
            "hyperspyui.plugins.axesconf",
            "hyperspyui.plugins.axesorderwidget",
            "hyperspyui.plugins.basicsignal",
            "hyperspyui.plugins.basicspectrum",
            "hyperspyui.plugins.cmappicker",
            "hyperspyui.plugins.croptool",
            "hyperspyui.plugins.dataastext",
            "hyperspyui.plugins.dmannotations",
            "hyperspyui.plugins.eelsdb",
            "hyperspyui.plugins.fft",
            "hyperspyui.plugins.fitting",
            "hyperspyui.plugins.gaussianfilter",
            "hyperspyui.plugins.gitgetter",
            "hyperspyui.plugins.imagerotation",
            "hyperspyui.plugins.linemeasure",
            "hyperspyui.plugins.metadataeditor",
            "hyperspyui.plugins.mirrorplot",
            "hyperspyui.plugins.moviesaver",
            "hyperspyui.plugins.mva",
            "hyperspyui.plugins.plotutils",
            "hyperspyui.plugins.plugin",
            "hyperspyui.plugins.rebin",
            "hyperspyui.plugins.recorderwidget",
            "hyperspyui.plugins.segmentation",
            "hyperspyui.plugins.stylesheet",
            "hyperspyui.plugins.tightlayout",
            "hyperspyui.plugins.virtual_aperture",
            "hyperspyui.recorder",
            "hyperspyui.settings",
            "hyperspyui.signalwrapper",
            "hyperspyui.singleapplication",
            "hyperspyui.smartcolorsvgiconengine",
            "hyperspyui.tests.conftest",
            "hyperspyui.tests.single_app",
            "hyperspyui.tests.test_backend",
            "hyperspyui.tests.test_launch",
            "hyperspyui.tests.test_mainwindow",
            "hyperspyui.tests.test_single_application",
            "hyperspyui.threaded",
            "hyperspyui.tools",
            "hyperspyui.uiprogressbar",
            "hyperspyui.util",
            "hyperspyui.widgets",
            "hyperspyui.widgets._editor_server",
            "hyperspyui.widgets.axespicker",
            "hyperspyui.widgets.colorpicker",
            "hyperspyui.widgets.consolewidget",
            "hyperspyui.widgets.contrastwidget",
            "hyperspyui.widgets.dataviewwidget",
            "hyperspyui.widgets.editorwidget",
            "hyperspyui.widgets.elementpicker",
            "hyperspyui.widgets.extendedqwidgets",
            "hyperspyui.widgets.flowlayout",
            "hyperspyui.widgets.periodictable",
            "hyperspyui.widgets.pickxsignals",
            "hyperspyui.widgets.pluginmanagerwidget",
            "hyperspyui.widgets.settingsdialog",
            "hyperspyui.widgets.signallist",
            "hyperspyui.widgets.stringinput",
            "hyperspyui.widgets.traitswidget"
        ],
        "version": "1.1.2"
    },
    "hypersrabbit": {
        "cmdline": [],
        "modules": [
            "hypersrabbit",
            "hypersrabbit.asyncTask",
            "hypersrabbit.hypersrabbit",
            "hypersrabbit.lib"
        ],
        "version": "0.1.2"
    },
    "hypersrediscluster": {
        "cmdline": [],
        "modules": [
            "hypersRedisCluster",
            "hypersRedisCluster.client",
            "hypersRedisCluster.connection",
            "test",
            "test.runtests",
            "test.test_backend",
            "test.test_sqlite"
        ],
        "version": "1.1.1"
    },
    "hyperstools": {
        "cmdline": [],
        "modules": [
            "hyperstools",
            "hyperstools.alertmanager",
            "hyperstools.cli",
            "hyperstools.compat",
            "hyperstools.configcenter",
            "hyperstools.crontab",
            "hyperstools.daemon",
            "hyperstools.django_extensions",
            "hyperstools.django_extensions.lookups",
            "hyperstools.lib",
            "hyperstools.mq",
            "hyperstools.mq.asyncTask",
            "hyperstools.mq.consumer",
            "hyperstools.mq.lib",
            "hyperstools.mq.publisher",
            "hyperstools.profiler",
            "hyperstools.request",
            "hyperstools.s3",
            "hyperstools.sftp",
            "hyperstools.ssh",
            "tests",
            "tests.test_configcenter",
            "tests.test_hyperstools",
            "tests.test_mq",
            "tests.test_ok",
            "tests.test_request"
        ],
        "version": "0.2.54"
    },
    "hyperstream": {
        "cmdline": [],
        "modules": [
            "hyperstream",
            "hyperstream.channels",
            "hyperstream.channels.assets_channel",
            "hyperstream.channels.assets_file_channel",
            "hyperstream.channels.base_channel",
            "hyperstream.channels.channel_manager",
            "hyperstream.channels.database_channel",
            "hyperstream.channels.file_channel",
            "hyperstream.channels.memory_channel",
            "hyperstream.channels.module_channel",
            "hyperstream.channels.tool_channel",
            "hyperstream.client",
            "hyperstream.config",
            "hyperstream.factor",
            "hyperstream.factor.factor",
            "hyperstream.hyperstream",
            "hyperstream.itertools2",
            "hyperstream.itertools2.itertools2",
            "hyperstream.meta_data",
            "hyperstream.meta_data.meta_data_manager",
            "hyperstream.models",
            "hyperstream.models.factor",
            "hyperstream.models.meta_data",
            "hyperstream.models.node",
            "hyperstream.models.plate",
            "hyperstream.models.session",
            "hyperstream.models.stream",
            "hyperstream.models.time_interval",
            "hyperstream.models.tool",
            "hyperstream.models.workflow",
            "hyperstream.node",
            "hyperstream.node.node",
            "hyperstream.online_engine",
            "hyperstream.plate",
            "hyperstream.plate.plate",
            "hyperstream.plate.plate_manager",
            "hyperstream.plugin_manager",
            "hyperstream.session",
            "hyperstream.stream",
            "hyperstream.stream.stream",
            "hyperstream.stream.stream_collections",
            "hyperstream.stream.stream_id",
            "hyperstream.stream.stream_instance",
            "hyperstream.stream.stream_view",
            "hyperstream.time_interval",
            "hyperstream.tool",
            "hyperstream.tool.aggregate_tool",
            "hyperstream.tool.base_tool",
            "hyperstream.tool.multi_output_tool",
            "hyperstream.tool.plate_creation_tool",
            "hyperstream.tool.selector_tool",
            "hyperstream.tool.tool",
            "hyperstream.tools",
            "hyperstream.tools.aggregate",
            "hyperstream.tools.aggregate.2016-10-26_v0.1.0",
            "hyperstream.tools.aggregate_into_dict_and_apply",
            "hyperstream.tools.aggregate_into_dict_and_apply.2017-05-26_v0.0.1",
            "hyperstream.tools.aggregate_plate",
            "hyperstream.tools.aggregate_plate.2016-11-11_v1.0.0",
            "hyperstream.tools.aligned_merge",
            "hyperstream.tools.aligned_merge.2016-10-26_v0.0.1",
            "hyperstream.tools.aligned_merge.2016-11-25_v0.1.1",
            "hyperstream.tools.aligned_merge.2017-06-21_v0.1.2",
            "hyperstream.tools.aligning_window",
            "hyperstream.tools.aligning_window.2016-10-26_v0.0.1",
            "hyperstream.tools.aligning_window.2016-11-14_v0.1.0",
            "hyperstream.tools.apply",
            "hyperstream.tools.apply.2016-07-13T1058Z_v0.0.2",
            "hyperstream.tools.apply.2017-11-27_v0.0.3",
            "hyperstream.tools.asset_plate_generator",
            "hyperstream.tools.asset_plate_generator.2016-11-24_v0.1.0",
            "hyperstream.tools.asset_plate_generator.2016-12-09_v0.1.1",
            "hyperstream.tools.asset_plate_generator.2016-12-12_v0.1.2",
            "hyperstream.tools.asset_plate_generator.2017-03-17_v0.2.0",
            "hyperstream.tools.asset_splitter",
            "hyperstream.tools.asset_splitter.2016-11-24_v0.1.0",
            "hyperstream.tools.asset_splitter.2016-11-24_v0.1.1",
            "hyperstream.tools.asset_splitter.2017-03-17_v0.2.0",
            "hyperstream.tools.asset_writer",
            "hyperstream.tools.asset_writer.2016-11-24_v0.1.0",
            "hyperstream.tools.clock",
            "hyperstream.tools.clock.2016-07-11T1209Z_v0.0.1",
            "hyperstream.tools.clock.2016-11-14_v0.1.0",
            "hyperstream.tools.component",
            "hyperstream.tools.component.2016-07-13T1058Z_v0.0.1",
            "hyperstream.tools.component_filter",
            "hyperstream.tools.component_filter.2016-07-13T1058Z_v0.0.1",
            "hyperstream.tools.component_set",
            "hyperstream.tools.component_set.2016-07-13T1058Z_v0.0.1",
            "hyperstream.tools.copy",
            "hyperstream.tools.copy.2017-11-23_v0.0.1",
            "hyperstream.tools.dict_argmax",
            "hyperstream.tools.dict_argmax.2016-12-15_v0.0.1",
            "hyperstream.tools.dict_values_to_const",
            "hyperstream.tools.dict_values_to_const.2017-03-03_v0.0.1",
            "hyperstream.tools.histogram_from_list",
            "hyperstream.tools.histogram_from_list.2017-07-03_v0.0.1",
            "hyperstream.tools.histograms_to_csv",
            "hyperstream.tools.histograms_to_csv.2017-07-03_v0.0.1",
            "hyperstream.tools.index_of",
            "hyperstream.tools.index_of.2016-10-26_v0.1.0",
            "hyperstream.tools.index_of.2016-11-23_v0.2.0",
            "hyperstream.tools.index_of_by_stream",
            "hyperstream.tools.index_of_by_stream.2016-10-26_v0.1.0",
            "hyperstream.tools.jsonify",
            "hyperstream.tools.jsonify.2016-10-26_v0.0.1",
            "hyperstream.tools.list_dict_mean",
            "hyperstream.tools.list_dict_mean.2016-12-15_v0.0.1",
            "hyperstream.tools.list_dict_sum",
            "hyperstream.tools.list_dict_sum.2017-03-03_v0.0.1",
            "hyperstream.tools.list_length",
            "hyperstream.tools.list_length.2017-03-03_v0.0.1",
            "hyperstream.tools.list_mean",
            "hyperstream.tools.list_mean.2017-07-17_v0.0.1",
            "hyperstream.tools.list_sum",
            "hyperstream.tools.list_sum.2017-03-03_v0.0.1",
            "hyperstream.tools.meta_instance",
            "hyperstream.tools.meta_instance.2016-11-09_v0.0.1",
            "hyperstream.tools.meta_instance_from_list",
            "hyperstream.tools.meta_instance_from_list.2016-12-07_v0.0.1",
            "hyperstream.tools.percentiles_from_list",
            "hyperstream.tools.percentiles_from_list.2017-07-18_v0.0.1",
            "hyperstream.tools.percentiles_to_csv",
            "hyperstream.tools.percentiles_to_csv.2017-07-18_v0.0.1",
            "hyperstream.tools.plate_sink",
            "hyperstream.tools.plate_sink.2017-01-23_v0.0.1",
            "hyperstream.tools.product",
            "hyperstream.tools.product.2016-07-14T1121Z_v0.0.1",
            "hyperstream.tools.relative_apply",
            "hyperstream.tools.relative_apply.2016-09-09_v0.0.1",
            "hyperstream.tools.relative_apply.2016-09-11_v0.0.2",
            "hyperstream.tools.relative_apply2",
            "hyperstream.tools.relative_apply2.2016-09-11_v0.0.2",
            "hyperstream.tools.relative_window",
            "hyperstream.tools.relative_window.2016-09-09_v0.0.1",
            "hyperstream.tools.sink",
            "hyperstream.tools.sink.2017-01-23_v0.0.1",
            "hyperstream.tools.slice",
            "hyperstream.tools.slice.2016-12-07_v0.0.1",
            "hyperstream.tools.sliding_apply",
            "hyperstream.tools.sliding_apply.2016-09-05_v0.0.1",
            "hyperstream.tools.sliding_apply.2016-10-26_v0.0.2",
            "hyperstream.tools.sliding_listify",
            "hyperstream.tools.sliding_listify.2016-12-02_v0.0.1",
            "hyperstream.tools.sliding_listify.2016-12-02_v0.0.2",
            "hyperstream.tools.sliding_listify.2016-12-02_v0.0.3",
            "hyperstream.tools.sliding_listify.2017-05-05_v0.0.4",
            "hyperstream.tools.sliding_sink",
            "hyperstream.tools.sliding_sink.2017-01-23_v0.0.1",
            "hyperstream.tools.sliding_sink.2017-03-16_v0.0.2",
            "hyperstream.tools.sliding_window",
            "hyperstream.tools.sliding_window.2016-09-05_v0.0.1",
            "hyperstream.tools.sliding_window.2016-09-11_v0.0.2",
            "hyperstream.tools.sliding_window.2016-11-14_v0.1.0",
            "hyperstream.tools.splitter",
            "hyperstream.tools.splitter.2016-10-06_v0.0.1",
            "hyperstream.tools.splitter_from_stream",
            "hyperstream.tools.splitter_from_stream.2016-10-06_v0.0.1",
            "hyperstream.tools.splitter_from_stream.2016-12-12_v0.0.2",
            "hyperstream.tools.splitter_from_stream.2016-12-13_v0.0.3",
            "hyperstream.tools.splitter_of_dict",
            "hyperstream.tools.splitter_of_dict.2016-12-01_v0.0.1",
            "hyperstream.tools.splitter_of_dict.2017-07-20_v0.0.2",
            "hyperstream.tools.splitter_of_list",
            "hyperstream.tools.splitter_of_list.2016-12-07_v0.0.1",
            "hyperstream.tools.splitter_time_aware",
            "hyperstream.tools.splitter_time_aware.2016-10-06_v0.0.1",
            "hyperstream.tools.splitter_time_aware_from_stream",
            "hyperstream.tools.splitter_time_aware_from_stream.2016-10-06_v0.0.1",
            "hyperstream.tools.splitter_with_unlist",
            "hyperstream.tools.splitter_with_unlist.2016-10-24_v0.0.1",
            "hyperstream.tools.stream_broadcaster",
            "hyperstream.tools.stream_broadcaster.2016-11-10_v0.0.1",
            "hyperstream.tools.stream_broadcaster_from_stream",
            "hyperstream.tools.stream_broadcaster_from_stream.2016-11-10_v0.0.1",
            "hyperstream.tools.stream_broadcaster_from_stream.2017-05-19_v0.0.2",
            "hyperstream.utils",
            "hyperstream.utils.containers",
            "hyperstream.utils.decorators",
            "hyperstream.utils.errors",
            "hyperstream.utils.hyperstream_logger",
            "hyperstream.utils.misc",
            "hyperstream.utils.serialization",
            "hyperstream.utils.statistics",
            "hyperstream.utils.statistics.histogram",
            "hyperstream.utils.statistics.percentile",
            "hyperstream.utils.time_utils",
            "hyperstream.version",
            "hyperstream.workflow",
            "hyperstream.workflow.workflow",
            "hyperstream.workflow.workflow_manager",
            "plugins",
            "plugins.data_generators",
            "plugins.data_generators.tools",
            "plugins.data_generators.tools.betavariate",
            "plugins.data_generators.tools.betavariate.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.custom",
            "plugins.data_generators.tools.custom.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.expovariate",
            "plugins.data_generators.tools.expovariate.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.gammavariate",
            "plugins.data_generators.tools.gammavariate.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.gauss",
            "plugins.data_generators.tools.gauss.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.lognormvariate",
            "plugins.data_generators.tools.lognormvariate.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.normalvariate",
            "plugins.data_generators.tools.normalvariate.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.paretovariate",
            "plugins.data_generators.tools.paretovariate.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.randint",
            "plugins.data_generators.tools.randint.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.random",
            "plugins.data_generators.tools.random.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.randrange",
            "plugins.data_generators.tools.randrange.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.triangular",
            "plugins.data_generators.tools.triangular.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.uniform",
            "plugins.data_generators.tools.uniform.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.vonmisesvariate",
            "plugins.data_generators.tools.vonmisesvariate.2017-06-20_v1.0.0",
            "plugins.data_generators.tools.weibullvariate",
            "plugins.data_generators.tools.weibullvariate.2017-06-20_v1.0.0",
            "plugins.data_importers",
            "plugins.data_importers.tools",
            "plugins.data_importers.tools.csv_multi_reader",
            "plugins.data_importers.tools.csv_multi_reader.2017-07-21_v0.0.1",
            "plugins.data_importers.tools.csv_reader",
            "plugins.data_importers.tools.csv_reader.2017-06-20_v0.0.1",
            "plugins.example",
            "plugins.example.tools",
            "plugins.example.tools.dummy",
            "plugins.example.tools.dummy.2017-06-16_v1.0.0",
            "tests",
            "tests.helpers",
            "tests.test_channels",
            "tests.test_client",
            "tests.test_hyperstream",
            "tests.test_loggers",
            "tests.test_meta_data",
            "tests.test_sessions",
            "tests.test_time_interval",
            "tests.test_tools",
            "tests.test_workflows"
        ],
        "version": "0.3.8"
    },
    "hyperswitch": {
        "cmdline": [],
        "modules": [
            "hyperswitch",
            "hyperswitch.controllers",
            "hyperswitch.filters",
            "hyperswitch.windows"
        ],
        "version": "0.1"
    },
    "hypersxlsx": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "hypertable": {
        "cmdline": [],
        "modules": [
            "hypertable",
            "hypertable.thriftclient",
            "hyperthrift",
            "hyperthrift.gen",
            "hyperthrift.gen.ClientService",
            "hyperthrift.gen.constants",
            "hyperthrift.gen.ttypes",
            "hyperthrift.gen2",
            "hyperthrift.gen2.HqlService",
            "hyperthrift.gen2.constants",
            "hyperthrift.gen2.ttypes",
            "thrift",
            "thrift.TMultiplexedProcessor",
            "thrift.TSCons",
            "thrift.TSerialization",
            "thrift.TTornado",
            "thrift.Thrift",
            "thrift.protocol",
            "thrift.protocol.TBase",
            "thrift.protocol.TBinaryProtocol",
            "thrift.protocol.TCompactProtocol",
            "thrift.protocol.TJSONProtocol",
            "thrift.protocol.TMultiplexedProtocol",
            "thrift.protocol.TProtocol",
            "thrift.protocol.TProtocolDecorator",
            "thrift.server",
            "thrift.server.THttpServer",
            "thrift.server.TNonblockingServer",
            "thrift.server.TProcessPoolServer",
            "thrift.server.TServer",
            "thrift.transport",
            "thrift.transport.THttpClient",
            "thrift.transport.TSSLSocket",
            "thrift.transport.TSocket",
            "thrift.transport.TTransport",
            "thrift.transport.TTwisted",
            "thrift.transport.TZlibTransport"
        ],
        "version": "0.9.8.10"
    },
    "hypertemp": {
        "cmdline": [],
        "modules": [
            "hypertemp",
            "hypertemp.cli",
            "hypertemp.common",
            "hypertemp.common.bufsocket",
            "hypertemp.common.connection",
            "hypertemp.common.decoder",
            "hypertemp.common.exceptions",
            "hypertemp.common.headers",
            "hypertemp.common.util",
            "hypertemp.compat",
            "hypertemp.contrib",
            "hypertemp.http11",
            "hypertemp.http11.connection",
            "hypertemp.http11.parser",
            "hypertemp.http11.response",
            "hypertemp.http20",
            "hypertemp.http20.connection",
            "hypertemp.http20.errors",
            "hypertemp.http20.exceptions",
            "hypertemp.http20.response",
            "hypertemp.http20.stream",
            "hypertemp.http20.util",
            "hypertemp.http20.window",
            "hypertemp.httplib_compat",
            "hypertemp.ssl_compat",
            "hypertemp.tls"
        ],
        "version": "0.8.0"
    },
    "hyperterm-utils": {
        "cmdline": [],
        "modules": [
            "hyperterm"
        ],
        "version": "0.1.0"
    },
    "hypertext": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypertools": {
        "cmdline": [],
        "modules": [
            "hypertools",
            "hypertools._externals",
            "hypertools._externals.ppca",
            "hypertools._externals.srm",
            "hypertools._shared",
            "hypertools._shared.helpers",
            "hypertools._shared.params",
            "hypertools.config",
            "hypertools.datageometry",
            "hypertools.plot",
            "hypertools.plot.draw",
            "hypertools.plot.plot",
            "hypertools.tools",
            "hypertools.tools.align",
            "hypertools.tools.analyze",
            "hypertools.tools.cluster",
            "hypertools.tools.describe",
            "hypertools.tools.df2mat",
            "hypertools.tools.format_data",
            "hypertools.tools.load",
            "hypertools.tools.missing_inds",
            "hypertools.tools.normalize",
            "hypertools.tools.procrustes",
            "hypertools.tools.reduce",
            "hypertools.tools.text2mat"
        ],
        "version": "0.6.3"
    },
    "hypertrack": {
        "cmdline": [],
        "modules": [
            "hypertrack",
            "hypertrack.devices",
            "hypertrack.exceptions",
            "hypertrack.ht_session",
            "hypertrack.rest",
            "hypertrack.tests",
            "hypertrack.tests.tests",
            "hypertrack.trips"
        ],
        "version": "3.0.4"
    },
    "hypertuner": {
        "cmdline": [],
        "modules": [
            "hypertuner",
            "hypertuner.args",
            "hypertuner.logger",
            "hypertuner.saver"
        ],
        "version": "1.0.4"
    },
    "hypertunity": {
        "cmdline": [],
        "modules": [
            "hypertunity",
            "hypertunity.domain",
            "hypertunity.optimisation",
            "hypertunity.optimisation.base",
            "hypertunity.optimisation.bo",
            "hypertunity.optimisation.exhaustive",
            "hypertunity.optimisation.random",
            "hypertunity.reports",
            "hypertunity.reports.base",
            "hypertunity.reports.table",
            "hypertunity.reports.tensorboard",
            "hypertunity.scheduling",
            "hypertunity.scheduling.jobs",
            "hypertunity.scheduling.scheduler",
            "hypertunity.trial",
            "hypertunity.utils"
        ],
        "version": "1.0.1"
    },
    "hyperui": {
        "cmdline": [],
        "modules": [
            "hyperui"
        ],
        "version": "1.0.1"
    },
    "hypervector": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hypervideo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypervisor-admin-tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperwallet-sdk": {
        "cmdline": [],
        "modules": [
            "hyperwallet",
            "hyperwallet.api",
            "hyperwallet.config",
            "hyperwallet.exceptions",
            "hyperwallet.models",
            "hyperwallet.tests",
            "hyperwallet.tests.test_api",
            "hyperwallet.tests.test_client",
            "hyperwallet.tests.test_encryption",
            "hyperwallet.tests.test_models",
            "hyperwallet.utils",
            "hyperwallet.utils.apiclient",
            "hyperwallet.utils.encryption"
        ],
        "version": "1.5.1"
    },
    "hyperyaml": {
        "cmdline": [],
        "modules": [
            "hyperyaml",
            "hyperyaml.hyperyaml",
            "hyperyaml.reader",
            "hyperyaml.runner",
            "hyperyaml.types"
        ],
        "version": "0.1"
    },
    "hypgeo": {
        "cmdline": [],
        "modules": [
            "hypgeo.__init___",
            "hypgeo.complex_plane",
            "hypgeo.geometry",
            "hypgeo.helpers",
            "hypgeo.helpers.field",
            "hypgeo.helpers.group",
            "hypgeo.moebius",
            "hypgeo.transformations",
            "hypgeo.unittest_complex_plane",
            "hypgeo.unittest_moebius",
            "hypgeo.unittest_transformation"
        ],
        "version": "1.3"
    },
    "hyphe-traph": {
        "cmdline": [],
        "modules": [
            "traph",
            "traph.helpers",
            "traph.link_store",
            "traph.link_store.header",
            "traph.link_store.link_store",
            "traph.link_store.node",
            "traph.lru_trie",
            "traph.lru_trie.header",
            "traph.lru_trie.lru_trie",
            "traph.lru_trie.node",
            "traph.lru_trie.walk_history",
            "traph.storage",
            "traph.storage.file",
            "traph.storage.memmap",
            "traph.storage.memory",
            "traph.traph",
            "traph.traph_iterator_state",
            "traph.traph_write_report",
            "traph.version"
        ],
        "version": "1.2.0"
    },
    "hyphenate": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "hyphenate-finnish": {
        "cmdline": [],
        "modules": [
            "hyphenate_finnish",
            "hyphenate_finnish.hyphenate_finnish"
        ],
        "version": "1.3.0"
    },
    "hyphenation": {
        "cmdline": [],
        "modules": [
            "hyphenation",
            "hyphenation.core"
        ],
        "version": "2.0"
    },
    "hyphenator": {
        "cmdline": [],
        "modules": [
            "hyphenator"
        ],
        "version": "0.6.0"
    },
    "hyphy": {
        "cmdline": [],
        "modules": [
            "HyPhy"
        ],
        "version": "0.1.3"
    },
    "hyphy-helper": {
        "cmdline": [],
        "modules": [
            "hppy",
            "hppy._hyphyinterface",
            "hppy._hyphymap"
        ],
        "version": "0.9.9"
    },
    "hyphy-python": {
        "cmdline": [],
        "modules": [
            "HyPhy"
        ],
        "version": "0.1.9"
    },
    "hypi": {
        "cmdline": [],
        "modules": [
            "hyPi",
            "hyPi.cli",
            "hyPi.commands",
            "hyPi.commands.base",
            "hyPi.commands.hello"
        ],
        "version": "1.0.0"
    },
    "hypia": {
        "cmdline": [],
        "modules": [
            "hypia",
            "hypia.functionals",
            "hypia.transforms"
        ],
        "version": "0.0.3"
    },
    "hypixel": {
        "cmdline": [],
        "modules": [
            "hypixel",
            "leveling"
        ],
        "version": "0.7.9"
    },
    "hypixelapi": {
        "cmdline": [],
        "modules": [
            "hypixelapi",
            "hypixelapi.hypixelapi",
            "hypixelapi.test_hypixelapi",
            "hypixelapi.util"
        ],
        "version": "0.1.4"
    },
    "hypixelpython": {
        "cmdline": [],
        "modules": [
            "HypixelPython",
            "HypixelPython.errors",
            "HypixelPython.main",
            "HypixelPython.setup"
        ],
        "version": "0.1"
    },
    "hypml": {
        "cmdline": [],
        "modules": [
            "hypml",
            "hypml.hypml"
        ],
        "version": "0.0.2"
    },
    "hypno": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "hypnoapnswrapper": {
        "cmdline": [],
        "modules": [
            "APNSWrapper"
        ],
        "version": "0.3-7"
    },
    "hypnobox-django": {
        "cmdline": [],
        "modules": [
            "hypnobox",
            "hypnobox.admin",
            "hypnobox.forms",
            "hypnobox.migrations",
            "hypnobox.migrations.0001_initial",
            "hypnobox.migrations.0002_auto_20160909_1835",
            "hypnobox.migrations.0003_auto_20160913_1040",
            "hypnobox.migrations.0004_lead_product_description",
            "hypnobox.migrations.0005_auto_20161121_1735",
            "hypnobox.models",
            "hypnobox.settings",
            "hypnobox.specs",
            "hypnobox.templatetags",
            "hypnobox.templatetags.hypnobox_tags",
            "hypnobox.urls",
            "hypnobox.views"
        ],
        "version": "0.4.1"
    },
    "hypnocube": {
        "cmdline": [],
        "modules": [
            "hypnocube",
            "hypnocube.animations",
            "hypnocube.animations.color_sorting",
            "hypnocube.animations.cube_traversal",
            "hypnocube.animations.random_animation",
            "hypnocube.animations.season_lights",
            "hypnocube.cube_animator",
            "hypnocube.cube_connector",
            "hypnocube.cube_model",
            "hypnocube.demo_runner",
            "hypnocube.example"
        ],
        "version": "0.1.2"
    },
    "hypnolog": {
        "cmdline": [],
        "modules": [
            "hypnolog",
            "hypnolog.advancedExamples",
            "hypnolog.examples",
            "hypnolog.hypnolog"
        ],
        "version": "0.1.0"
    },
    "hypnos": {
        "cmdline": [],
        "modules": [
            "hypnos",
            "hypnos.data",
            "hypnos.data.Physionet",
            "hypnos.dynamic",
            "hypnos.hypnograms",
            "hypnos.hypnograms.Hypnogram",
            "hypnos.hypnograms.MarkovChain",
            "hypnos.pipelines",
            "hypnos.pipelines.spectral",
            "hypnos.pipelines.spectral.BandPowerWelch"
        ],
        "version": "0.0.6"
    },
    "hypnospy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hypnotoad": {
        "cmdline": [],
        "modules": [
            "hypnotoad",
            "hypnotoad.__version__",
            "hypnotoad.cases",
            "hypnotoad.cases.tokamak",
            "hypnotoad.cases.torpex",
            "hypnotoad.core",
            "hypnotoad.core.equilibrium",
            "hypnotoad.core.mesh",
            "hypnotoad.geqdsk",
            "hypnotoad.geqdsk._fileutils",
            "hypnotoad.geqdsk._geqdsk",
            "hypnotoad.gui",
            "hypnotoad.gui.gui",
            "hypnotoad.gui.hypnotoad_mainWindow",
            "hypnotoad.gui.hypnotoad_preferences",
            "hypnotoad.gui.matplotlib_widget",
            "hypnotoad.scripts",
            "hypnotoad.scripts.hypnotoad_geqdsk",
            "hypnotoad.scripts.hypnotoad_torpex",
            "hypnotoad.test_suite",
            "hypnotoad.test_suite.test_critical",
            "hypnotoad.test_suite.test_dct",
            "hypnotoad.test_suite.test_equilibrium",
            "hypnotoad.test_suite.test_fileutils",
            "hypnotoad.test_suite.test_geqdsk",
            "hypnotoad.test_suite.test_mesh",
            "hypnotoad.test_suite.test_polygons",
            "hypnotoad.test_suite.test_tokamak",
            "hypnotoad.test_suite.test_torpex",
            "hypnotoad.test_suite.test_utils",
            "hypnotoad.test_suite.test_versioning",
            "hypnotoad.test_suite.utils_for_tests",
            "hypnotoad.utils",
            "hypnotoad.utils.critical",
            "hypnotoad.utils.dct_interpolation",
            "hypnotoad.utils.polygons",
            "hypnotoad.utils.utils"
        ],
        "version": "0.2.0"
    },
    "hypo": {
        "cmdline": [],
        "modules": [
            "hypo"
        ],
        "version": "0.1.0"
    },
    "hypo-schema": {
        "cmdline": [],
        "modules": [
            "hyposchema",
            "hyposchema.hypo_schema",
            "hyposchema.regex"
        ],
        "version": "0.2.3"
    },
    "hypofuzz": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hypopt": {
        "cmdline": [],
        "modules": [
            "hypopt",
            "hypopt.model_selection",
            "hypopt.version"
        ],
        "version": "1.0.9"
    },
    "hyposchema": {
        "cmdline": [],
        "modules": [
            "hyposchema",
            "hyposchema.hypo_schema",
            "hyposchema.regex"
        ],
        "version": "0.2.3"
    },
    "hypothepy": {
        "cmdline": [],
        "modules": [
            "hypothepy",
            "hypothepy.cli",
            "hypothepy.hypothepy",
            "hypothepy.utils",
            "hypothepy.utils.functions",
            "hypothepy.utils.http_client",
            "hypothepy.v1",
            "hypothepy.v1.api",
            "hypothepy.v1.common",
            "hypothepy.v1.endpoints",
            "hypothepy.v1.endpoints.annotations",
            "hypothepy.v1.endpoints.general",
            "hypothepy.v1.endpoints.groups",
            "hypothepy.v1.endpoints.profile",
            "hypothepy.v1.helpers",
            "tests.hypothepy",
            "tests.hypothepy.utils",
            "tests.hypothepy.utils.test_http_client",
            "tests.hypothepy.v1",
            "tests.hypothepy.v1.common",
            "tests.hypothepy.v1.endpoints",
            "tests.hypothepy.v1.endpoints.test_annotations",
            "tests.hypothepy.v1.endpoints.test_general",
            "tests.hypothepy.v1.endpoints.test_groups",
            "tests.hypothepy.v1.endpoints.test_profile",
            "tests.hypothepy.v1.test_helpers"
        ],
        "version": "0.3.0"
    },
    "hypothesis": {
        "cmdline": [],
        "modules": [
            "hypothesis",
            "hypothesis._error_if_old",
            "hypothesis._settings",
            "hypothesis.configuration",
            "hypothesis.control",
            "hypothesis.core",
            "hypothesis.database",
            "hypothesis.entry_points",
            "hypothesis.errors",
            "hypothesis.executors",
            "hypothesis.extra",
            "hypothesis.extra.cli",
            "hypothesis.extra.dateutil",
            "hypothesis.extra.django",
            "hypothesis.extra.django._fields",
            "hypothesis.extra.django._impl",
            "hypothesis.extra.dpcontracts",
            "hypothesis.extra.ghostwriter",
            "hypothesis.extra.lark",
            "hypothesis.extra.numpy",
            "hypothesis.extra.pandas",
            "hypothesis.extra.pandas.impl",
            "hypothesis.extra.pytestplugin",
            "hypothesis.extra.pytz",
            "hypothesis.extra.redis",
            "hypothesis.internal",
            "hypothesis.internal.cache",
            "hypothesis.internal.cathetus",
            "hypothesis.internal.charmap",
            "hypothesis.internal.compat",
            "hypothesis.internal.conjecture",
            "hypothesis.internal.conjecture.choicetree",
            "hypothesis.internal.conjecture.data",
            "hypothesis.internal.conjecture.datatree",
            "hypothesis.internal.conjecture.dfa",
            "hypothesis.internal.conjecture.dfa.lstar",
            "hypothesis.internal.conjecture.engine",
            "hypothesis.internal.conjecture.floats",
            "hypothesis.internal.conjecture.junkdrawer",
            "hypothesis.internal.conjecture.optimiser",
            "hypothesis.internal.conjecture.pareto",
            "hypothesis.internal.conjecture.shrinker",
            "hypothesis.internal.conjecture.shrinking",
            "hypothesis.internal.conjecture.shrinking.common",
            "hypothesis.internal.conjecture.shrinking.dfas",
            "hypothesis.internal.conjecture.shrinking.floats",
            "hypothesis.internal.conjecture.shrinking.integer",
            "hypothesis.internal.conjecture.shrinking.learned_dfas",
            "hypothesis.internal.conjecture.shrinking.lexical",
            "hypothesis.internal.conjecture.shrinking.ordering",
            "hypothesis.internal.conjecture.utils",
            "hypothesis.internal.coverage",
            "hypothesis.internal.detection",
            "hypothesis.internal.entropy",
            "hypothesis.internal.escalation",
            "hypothesis.internal.floats",
            "hypothesis.internal.healthcheck",
            "hypothesis.internal.intervalsets",
            "hypothesis.internal.lazyformat",
            "hypothesis.internal.reflection",
            "hypothesis.internal.validation",
            "hypothesis.provisional",
            "hypothesis.reporting",
            "hypothesis.stateful",
            "hypothesis.statistics",
            "hypothesis.strategies",
            "hypothesis.strategies._internal",
            "hypothesis.strategies._internal.attrs",
            "hypothesis.strategies._internal.collections",
            "hypothesis.strategies._internal.core",
            "hypothesis.strategies._internal.datetime",
            "hypothesis.strategies._internal.deferred",
            "hypothesis.strategies._internal.featureflags",
            "hypothesis.strategies._internal.flatmapped",
            "hypothesis.strategies._internal.functions",
            "hypothesis.strategies._internal.ipaddress",
            "hypothesis.strategies._internal.lazy",
            "hypothesis.strategies._internal.misc",
            "hypothesis.strategies._internal.numbers",
            "hypothesis.strategies._internal.random",
            "hypothesis.strategies._internal.recursive",
            "hypothesis.strategies._internal.regex",
            "hypothesis.strategies._internal.shared",
            "hypothesis.strategies._internal.strategies",
            "hypothesis.strategies._internal.strings",
            "hypothesis.strategies._internal.types",
            "hypothesis.utils",
            "hypothesis.utils.conventions",
            "hypothesis.utils.dynamicvariables",
            "hypothesis.vendor",
            "hypothesis.vendor.pretty",
            "hypothesis.version"
        ],
        "version": "5.37.1"
    },
    "hypothesis-auto": {
        "cmdline": [],
        "modules": [
            "hypothesis_auto",
            "hypothesis_auto.pytest",
            "hypothesis_auto.tester"
        ],
        "version": "1.1.4"
    },
    "hypothesis-auto-draw": {
        "cmdline": [],
        "modules": [
            "hypothesis_auto_draw",
            "hypothesis_auto_draw.hypothesis_auto_draw"
        ],
        "version": "0.1.5"
    },
    "hypothesis-bio": {
        "cmdline": [],
        "modules": [
            "hypothesis_bio",
            "hypothesis_bio.strategies"
        ],
        "version": "0.1"
    },
    "hypothesis-client": {
        "cmdline": [],
        "modules": [
            "hypothesis_client",
            "hypothesis_client.hypothesis_client",
            "hypothesis_client.token_scraper"
        ],
        "version": "0.0.2"
    },
    "hypothesis-csv": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.4"
    },
    "hypothesis-datetime": {
        "cmdline": [],
        "modules": [
            "hypothesisdatetime"
        ],
        "version": "2.0.0"
    },
    "hypothesis-django": {
        "cmdline": [],
        "modules": [
            "hypothesisdjango"
        ],
        "version": "2.0.0"
    },
    "hypothesis-drf": {
        "cmdline": [],
        "modules": [
            "hypothesis_drf"
        ],
        "version": "1.0.0"
    },
    "hypothesis-fakefactory": {
        "cmdline": [],
        "modules": [
            "hypothesisfakefactory"
        ],
        "version": "2.0.0"
    },
    "hypothesis-fspaths": {
        "cmdline": [],
        "modules": [
            "hypothesis_fspaths"
        ],
        "version": "0.1"
    },
    "hypothesis-geojson": {
        "cmdline": [],
        "modules": [
            "hypothesis_geojson",
            "hypothesis_geojson.scripts",
            "hypothesis_geojson.scripts.edge_features"
        ],
        "version": "0.1"
    },
    "hypothesis-geometry": {
        "cmdline": [],
        "modules": [
            "hypothesis_geometry",
            "hypothesis_geometry.core",
            "hypothesis_geometry.core.contracts",
            "hypothesis_geometry.core.subdivisional",
            "hypothesis_geometry.core.triangular",
            "hypothesis_geometry.core.utils",
            "hypothesis_geometry.hints",
            "hypothesis_geometry.planar",
            "hypothesis_geometry.utils"
        ],
        "version": "0.17.1"
    },
    "hypothesis-grammar": {
        "cmdline": [],
        "modules": [
            "hypothesis_grammar",
            "hypothesis_grammar.generate",
            "hypothesis_grammar.parser",
            "hypothesis_grammar.types"
        ],
        "version": "0.1.1"
    },
    "hypothesis-grammars": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hypothesis-graphql": {
        "cmdline": [],
        "modules": [
            "hypothesis_graphql",
            "hypothesis_graphql._strategies",
            "hypothesis_graphql._strategies.primitives",
            "hypothesis_graphql._strategies.queries",
            "hypothesis_graphql._strategies.schema",
            "hypothesis_graphql.strategies",
            "hypothesis_graphql.types"
        ],
        "version": "0.3.2"
    },
    "hypothesis-gufunc": {
        "cmdline": [],
        "modules": [
            "hypothesis_gufunc",
            "hypothesis_gufunc.extra",
            "hypothesis_gufunc.extra.xr",
            "hypothesis_gufunc.gufunc"
        ],
        "version": "0.0.6"
    },
    "hypothesis-json": {
        "cmdline": [],
        "modules": [
            "hypothesis_json",
            "hypothesis_json._utils",
            "hypothesis_json.errors",
            "hypothesis_json.strategies",
            "hypothesis_json.typing"
        ],
        "version": "2.0.1"
    },
    "hypothesis-jsonrpc": {
        "cmdline": [],
        "modules": [
            "hypothesis_jsonrpc",
            "hypothesis_jsonrpc.strategies"
        ],
        "version": "2.0.0"
    },
    "hypothesis-jsonschema": {
        "cmdline": [],
        "modules": [
            "hypothesis_jsonschema",
            "hypothesis_jsonschema._canonicalise",
            "hypothesis_jsonschema._encode",
            "hypothesis_jsonschema._from_schema"
        ],
        "version": "0.18.0"
    },
    "hypothesis-jsonschema-unfit": {
        "cmdline": [],
        "modules": [
            "hypothesis_jsonschema_unfit",
            "hypothesis_jsonschema_unfit._impl"
        ],
        "version": "0.1.0"
    },
    "hypothesis-mongoengine": {
        "cmdline": [],
        "modules": [
            "hypothesis_mongoengine",
            "hypothesis_mongoengine.geojson",
            "hypothesis_mongoengine.helpers",
            "hypothesis_mongoengine.strategies"
        ],
        "version": "1.1.0"
    },
    "hypothesis-networkx": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "hypothesis-numpy": {
        "cmdline": [],
        "modules": [
            "hypothesisnumpy"
        ],
        "version": "2.0.0"
    },
    "hypothesis-numpy2": {
        "cmdline": [],
        "modules": [
            "hypothesis_numpy",
            "hypothesis_numpy.hypothesis_numpy"
        ],
        "version": "0.1.2"
    },
    "hypothesis-pandas": {
        "cmdline": [],
        "modules": [
            "hypothesis_pandas",
            "hypothesis_pandas.hypothesis_pandas"
        ],
        "version": "0.2.7"
    },
    "hypothesis-pb": {
        "cmdline": [],
        "modules": [
            "hypothesis_protobuf",
            "hypothesis_protobuf.module_conversion",
            "hypothesis_protobuf.utils"
        ],
        "version": "1.2.0"
    },
    "hypothesis-protobuf": {
        "cmdline": [],
        "modules": [
            "hypothesis_protobuf",
            "hypothesis_protobuf._version",
            "hypothesis_protobuf.strategies",
            "hypothesis_protobuf.tests"
        ],
        "version": "0.1.0.post1"
    },
    "hypothesis-pytest": {
        "cmdline": [],
        "modules": [
            "hypothesispytest"
        ],
        "version": "0.19.0"
    },
    "hypothesis-regex": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "hypothesis-ros": {
        "cmdline": [],
        "modules": [
            "hypothesis_ros",
            "hypothesis_ros.message_fields",
            "hypothesis_ros.messages",
            "hypothesis_ros.messages.geometry_msgs",
            "hypothesis_ros.messages.sensor_msgs",
            "hypothesis_ros.messages.std_msgs",
            "hypothesis_ros.messages.stereo_msgs",
            "hypothesis_ros.messages.tf2_msgs",
            "hypothesis_ros.parameters",
            "hypothesis_ros.ros1",
            "hypothesis_ros.ros1.builtin_msg_field_types",
            "hypothesis_ros.ros1.geometry_msgs",
            "hypothesis_ros.ros1.std_msgs"
        ],
        "version": "0.3.0"
    },
    "hypothesis-sqlalchemy": {
        "cmdline": [],
        "modules": [
            "hypothesis_sqlalchemy",
            "hypothesis_sqlalchemy.columnar",
            "hypothesis_sqlalchemy.columnar.base",
            "hypothesis_sqlalchemy.columnar.records",
            "hypothesis_sqlalchemy.columnar.types",
            "hypothesis_sqlalchemy.columnar.values",
            "hypothesis_sqlalchemy.constrained",
            "hypothesis_sqlalchemy.constrained.base",
            "hypothesis_sqlalchemy.dialectic",
            "hypothesis_sqlalchemy.enumerable",
            "hypothesis_sqlalchemy.hints",
            "hypothesis_sqlalchemy.tabular",
            "hypothesis_sqlalchemy.tabular.base",
            "hypothesis_sqlalchemy.tabular.records",
            "hypothesis_sqlalchemy.utils"
        ],
        "version": "0.3.2"
    },
    "hypothesis-trio": {
        "cmdline": [],
        "modules": [
            "hypothesis_trio",
            "hypothesis_trio._tests",
            "hypothesis_trio._tests.test_async_stateful",
            "hypothesis_trio._tests.test_stateful",
            "hypothesis_trio._tests.test_trio_asyncio",
            "hypothesis_trio._version",
            "hypothesis_trio.stateful"
        ],
        "version": "0.5.0"
    },
    "hypothesis-typed": {
        "cmdline": [],
        "modules": [
            "hypothesis_typed"
        ],
        "version": "1.0.0"
    },
    "hypothesis-typing": {
        "cmdline": [],
        "modules": [
            "hypothesis_typing"
        ],
        "version": "1.0.0"
    },
    "hypothesisjsonschema": {
        "cmdline": [],
        "modules": [
            "hypothesisjsonschema",
            "hypothesisjsonschema.cli"
        ],
        "version": "0.1.1"
    },
    "hypothesislegacysupport": {
        "cmdline": [],
        "modules": [
            "hypothesislegacysupport",
            "hypothesislegacysupport.compat",
            "hypothesislegacysupport.version"
        ],
        "version": "3.4.2"
    },
    "hypothesize": {
        "cmdline": [],
        "modules": [
            "hypothesize",
            "hypothesize.compare_groups_with_single_factor",
            "hypothesize.compare_groups_with_single_factor._compare_groups_with_single_factor",
            "hypothesize.compare_groups_with_two_factors",
            "hypothesize.compare_groups_with_two_factors._compare_groups_with_two_factors",
            "hypothesize.measuring_associations",
            "hypothesize.measuring_associations._measuring_associations",
            "hypothesize.tests",
            "hypothesize.tests.build_test_data",
            "hypothesize.tests.test_funcs",
            "hypothesize.utilities"
        ],
        "version": "1.1.1"
    },
    "hypothesmith": {
        "cmdline": [],
        "modules": [
            "hypothesmith",
            "hypothesmith.cst",
            "hypothesmith.syntactic"
        ],
        "version": "0.1.5"
    },
    "hypothetical": {
        "cmdline": [],
        "modules": [
            "hypothetical",
            "hypothetical._lib",
            "hypothetical.aov",
            "hypothetical.contingency",
            "hypothetical.critical",
            "hypothetical.descriptive",
            "hypothetical.fa",
            "hypothetical.gof",
            "hypothetical.hypothesis",
            "hypothetical.nonparametric",
            "hypothetical.posthoc"
        ],
        "version": "0.3.0"
    },
    "hypothit": {
        "cmdline": [],
        "modules": [
            "hypothit",
            "hypothit.cli"
        ],
        "version": "0.1.0"
    },
    "hypothpy": {
        "cmdline": [],
        "modules": [
            "hypothtst",
            "hypothtst.alpha_beta_sim",
            "hypothtst.fn_utils",
            "hypothtst.fn_utils.rate",
            "hypothtst.fn_utils.rate.beta_to_t",
            "hypothtst.hypoth_tst_simulator",
            "hypothtst.neg_binom_tst",
            "hypothtst.sim_utils",
            "hypothtst.sim_utils.mean",
            "hypothtst.sim_utils.mean.normal",
            "hypothtst.sim_utils.rate",
            "hypothtst.sim_utils.rate.poisson",
            "hypothtst.tst",
            "hypothtst.tst.stochparams",
            "hypothtst.tst.stochparams.mean",
            "hypothtst.tst.stochparams.mean.t_test",
            "hypothtst.tst.stochparams.p_heads",
            "hypothtst.tst.stochparams.p_heads.binom_test",
            "hypothtst.tst.stochparams.rate",
            "hypothtst.tst.stochparams.rate.diff",
            "hypothtst.tst.stochparams.rate.time_binned",
            "hypothtst.tst.stochparams.rate.ump"
        ],
        "version": "0.0.0"
    },
    "hypothtst": {
        "cmdline": [],
        "modules": [
            "hypothtst",
            "hypothtst.alpha_beta_sim",
            "hypothtst.fn_utils",
            "hypothtst.fn_utils.rate",
            "hypothtst.fn_utils.rate.beta_to_t",
            "hypothtst.hypoth_tst_simulator",
            "hypothtst.neg_binom_tst",
            "hypothtst.sim_utils",
            "hypothtst.sim_utils.mean",
            "hypothtst.sim_utils.mean.normal",
            "hypothtst.sim_utils.rate",
            "hypothtst.sim_utils.rate.poisson",
            "hypothtst.tst",
            "hypothtst.tst.correlation",
            "hypothtst.tst.correlation.pt_process_sim",
            "hypothtst.tst.correlation.pt_processes",
            "hypothtst.tst.stochparams",
            "hypothtst.tst.stochparams.mean",
            "hypothtst.tst.stochparams.mean.t_test",
            "hypothtst.tst.stochparams.mean.t_test_sim",
            "hypothtst.tst.stochparams.p_heads",
            "hypothtst.tst.stochparams.p_heads.binom_test",
            "hypothtst.tst.stochparams.percentiles",
            "hypothtst.tst.stochparams.percentiles.tst_percentiles",
            "hypothtst.tst.stochparams.rate",
            "hypothtst.tst.stochparams.rate.diff",
            "hypothtst.tst.stochparams.rate.time_binned",
            "hypothtst.tst.stochparams.rate.ump",
            "hypothtst.viz_utils",
            "hypothtst.viz_utils.plots_on_pvals"
        ],
        "version": "0.0.11"
    },
    "hypotonic": {
        "cmdline": [],
        "modules": [
            "hypotonic",
            "hypotonic.command",
            "hypotonic.context",
            "hypotonic.request"
        ],
        "version": "0.0.15"
    },
    "hyppo": {
        "cmdline": [],
        "modules": [
            "benchmarks",
            "benchmarks.power",
            "benchmarks.power_2samp",
            "benchmarks.power_3samp",
            "hyppo",
            "hyppo._utils",
            "hyppo.discrim",
            "hyppo.discrim._utils",
            "hyppo.discrim.base",
            "hyppo.discrim.discrim_one_samp",
            "hyppo.discrim.discrim_two_samp",
            "hyppo.discrim.tests",
            "hyppo.discrim.tests.test_discrim_one_samp",
            "hyppo.discrim.tests.test_discrim_two_samp",
            "hyppo.independence",
            "hyppo.independence._utils",
            "hyppo.independence.base",
            "hyppo.independence.cca",
            "hyppo.independence.dcorr",
            "hyppo.independence.hhg",
            "hyppo.independence.hsic",
            "hyppo.independence.mgc",
            "hyppo.independence.rv",
            "hyppo.independence.tests",
            "hyppo.independence.tests.test_cca",
            "hyppo.independence.tests.test_dcorr",
            "hyppo.independence.tests.test_hhg",
            "hyppo.independence.tests.test_hsic",
            "hyppo.independence.tests.test_mgc",
            "hyppo.independence.tests.test_rvcorr",
            "hyppo.ksample",
            "hyppo.ksample._utils",
            "hyppo.ksample.base",
            "hyppo.ksample.ksamp",
            "hyppo.ksample.tests",
            "hyppo.ksample.tests.test_ksamp",
            "hyppo.sims",
            "hyppo.sims.indep_sim",
            "hyppo.sims.ksample_sim",
            "hyppo.sims.tests",
            "hyppo.sims.tests.test_indep_sim",
            "hyppo.sims.tests.test_ksample_sim",
            "hyppo.sims.time_series_sim",
            "hyppo.time_series",
            "hyppo.time_series._utils",
            "hyppo.time_series.base",
            "hyppo.time_series.dcorrx",
            "hyppo.time_series.mgcx",
            "hyppo.time_series.tests",
            "hyppo.time_series.tests.test_dcorrx",
            "hyppo.time_series.tests.test_mgcx"
        ],
        "version": "0.1.3"
    },
    "hyppopotamus": {
        "cmdline": [],
        "modules": [
            "hyppopotamus",
            "hyppopotamus._version",
            "hyppopotamus.hyppopotamus"
        ],
        "version": "0.2"
    },
    "hyppy": {
        "cmdline": [],
        "modules": [
            "hyppy",
            "hyppy.func",
            "hyppy.hapi",
            "hyppy.parse"
        ],
        "version": "0.1.1"
    },
    "hypr": {
        "cmdline": [],
        "modules": [
            "hypr",
            "hypr.app",
            "hypr.config",
            "hypr.converters",
            "hypr.ext",
            "hypr.ext.models",
            "hypr.ext.providers",
            "hypr.globals",
            "hypr.helpers",
            "hypr.helpers.mini_dsl",
            "hypr.models",
            "hypr.models.exc",
            "hypr.models.sqlite",
            "hypr.providers",
            "hypr.providers.crud",
            "hypr.providers.security",
            "hypr.request",
            "hypr.router",
            "hypr.serializers",
            "hypr.serializers.accept",
            "hypr.serializers.json_serializer",
            "hypr.testing",
            "hypr.web_exceptions"
        ],
        "version": "0.8.4"
    },
    "hypr-sqlalchemy": {
        "cmdline": [],
        "modules": [
            "hypr",
            "hypr.sqlalchemy"
        ],
        "version": "0.2.1"
    },
    "hyprcube": {
        "cmdline": [],
        "modules": [
            "hyprcube"
        ],
        "version": "0.1"
    },
    "hypster": {
        "cmdline": [],
        "modules": [
            "hypster",
            "hypster.core",
            "hypster.estimators",
            "hypster.estimators.base",
            "hypster.estimators.classification",
            "hypster.estimators.classification.lightgbm",
            "hypster.estimators.classification.sgd",
            "hypster.estimators.classification.xgboost",
            "hypster.estimators.lightgbm",
            "hypster.estimators.regression",
            "hypster.estimators.regression.lightgbm",
            "hypster.estimators.regression.sgd",
            "hypster.estimators.regression.xgboost",
            "hypster.estimators.rf",
            "hypster.estimators.sgd",
            "hypster.estimators.xgboost",
            "hypster.preprocessors",
            "hypster.pruners",
            "hypster.utils"
        ],
        "version": "0.0.6"
    },
    "hypua2jamo": {
        "cmdline": [],
        "modules": [
            "hypua2jamo",
            "hypua2jamo.cli",
            "hypua2jamo.decoder",
            "hypua2jamo.encoder"
        ],
        "version": "0.5.1"
    },
    "hyputils": {
        "cmdline": [],
        "modules": [
            "hyputils",
            "hyputils.handlers",
            "hyputils.hypothesis",
            "hyputils.memex",
            "hyputils.memex._compat",
            "hyputils.memex.db",
            "hyputils.memex.db.mixins",
            "hyputils.memex.db.types",
            "hyputils.memex.models",
            "hyputils.memex.models.annotation",
            "hyputils.memex.models.document",
            "hyputils.memex.models.group",
            "hyputils.memex.models.organization",
            "hyputils.memex.models.user",
            "hyputils.memex.models.user_identity",
            "hyputils.memex.pubid",
            "hyputils.memex.schemas",
            "hyputils.memex.schemas.annotation",
            "hyputils.memex.schemas.base",
            "hyputils.memex.security",
            "hyputils.memex.settings",
            "hyputils.memex.util",
            "hyputils.memex.util.document_claims",
            "hyputils.memex.util.group",
            "hyputils.memex.util.markdown",
            "hyputils.memex.util.uri",
            "hyputils.memex.util.user",
            "hyputils.subscribe",
            "hyputils.wstest"
        ],
        "version": "0.0.8"
    },
    "hypy": {
        "cmdline": [],
        "modules": [
            "hypy",
            "hypy._version",
            "hypy.lib",
            "hypy.test_lib"
        ],
        "version": "1.0.1"
    },
    "hypy3": {
        "cmdline": [],
        "modules": [
            "hypy",
            "hypy.cli_main",
            "hypy.cli_snap",
            "hypy.cli_switch",
            "hypy.modules",
            "hypy.modules.cache",
            "hypy.modules.config",
            "hypy.modules.hvclient",
            "hypy.modules.printer",
            "hypy.modules.snaptree"
        ],
        "version": "0.3.5"
    },
    "hypyp": {
        "cmdline": [],
        "modules": [
            "hypyp",
            "hypyp.analyses",
            "hypyp.ext.mpl3d",
            "hypyp.ext.mpl3d.camera",
            "hypyp.ext.mpl3d.glm",
            "hypyp.ext.mpl3d.lighting",
            "hypyp.ext.mpl3d.mesh",
            "hypyp.ext.mpl3d.trackball",
            "hypyp.io",
            "hypyp.prep",
            "hypyp.stats",
            "hypyp.utils",
            "hypyp.viz"
        ],
        "version": "0.2.0a4"
    },
    "hypython": {
        "cmdline": [],
        "modules": [
            "HyPython",
            "HyPython.errors",
            "HyPython.main",
            "HyPython.setup"
        ],
        "version": "0.1"
    },
    "hypyxel": {
        "cmdline": [],
        "modules": [
            "hypyxel",
            "hypyxel.api",
            "hypyxel.errors",
            "hypyxel.utils"
        ],
        "version": "0.1.0.post5"
    },
    "hyrepl": {
        "cmdline": [
            "hyrepl"
        ],
        "modules": [
            "HyREPL"
        ],
        "version": "0.1.1"
    },
    "hyron": {
        "cmdline": [],
        "modules": [
            "hyron",
            "hyron.apps",
            "hyron.apps.application",
            "hyron.apps.application_group",
            "hyron.apps.application_library",
            "hyron.apps.application_library_loader",
            "hyron.artifacts",
            "hyron.artifacts.artifact",
            "hyron.artifacts.artifact_blueprint",
            "hyron.artifacts.artifact_file",
            "hyron.artifacts.artifact_file_blueprint",
            "hyron.constants",
            "hyron.helpers",
            "hyron.objects_stanza_handler",
            "hyron.prefixlists",
            "hyron.prefixlists.datasources",
            "hyron.prefixlists.datasources.aws",
            "hyron.prefixlists.datasources.merge",
            "hyron.prefixlists.datasources.static",
            "hyron.prefixlists.datasources.web",
            "hyron.prefixlists.prefix_list",
            "hyron.prefixlists.prefix_list_datasource",
            "hyron.prefixlists.prefix_list_loader",
            "hyron.renderers",
            "hyron.renderers.ec2sg",
            "hyron.renderers.jsrx",
            "hyron.renderers.jsrx.junos_srx_renderer",
            "hyron.renderers.jsrx.zone_providers",
            "hyron.renderers.jsrx.zone_providers.zone_provider",
            "hyron.renderers.renderer",
            "hyron.rulebooks",
            "hyron.rulebooks.rule_builder",
            "hyron.rulebooks.rulebook",
            "hyron.rulebooks.rulebook_loader",
            "hyron.rules",
            "hyron.rules.rule",
            "hyron.rules.rule_set"
        ],
        "version": "0.0.8"
    },
    "hyrontools": {
        "cmdline": [],
        "modules": [
            "hyrontools",
            "hyrontools.argument_parse_result",
            "hyrontools.console",
            "hyrontools.errors",
            "hyrontools.errors.exec",
            "hyrontools.errors.runtime",
            "hyrontools.errors.syntax",
            "hyrontools.errors.validation",
            "hyrontools.executor",
            "hyrontools.helpers",
            "hyrontools.operations",
            "hyrontools.operations.operation",
            "hyrontools.operations.render",
            "hyrontools.operations.renderers",
            "hyrontools.operations.s3publish",
            "hyrontools.operations.test",
            "hyrontools.operations.travisprefixgen"
        ],
        "version": "1.0.2"
    },
    "hyrule-builder": {
        "cmdline": [],
        "modules": [
            "hyrule_builder",
            "hyrule_builder.builder",
            "hyrule_builder.rstb_main",
            "hyrule_builder.sarc_main",
            "hyrule_builder.unbuilder"
        ],
        "version": "0.7.0"
    },
    "hysortod": {
        "cmdline": [],
        "modules": [
            "hysortod",
            "hysortod.hysortod"
        ],
        "version": "0.1.1"
    },
    "hyssop": {
        "cmdline": [],
        "modules": [
            "hyssop",
            "hyssop.unit_test",
            "hyssop.unit_test.base",
            "hyssop.unit_test.util",
            "hyssop.unit_test.util_worker",
            "hyssop.unit_test.web",
            "hyssop.util",
            "hyssop.util.callbacks",
            "hyssop.util.constants",
            "hyssop.util.dynamic_class_enum",
            "hyssop.util.executor",
            "hyssop.util.hierarchy_element",
            "hyssop.util.localization",
            "hyssop.util.logger",
            "hyssop.util.utils",
            "hyssop.util.worker",
            "hyssop.web",
            "hyssop.web.application",
            "hyssop.web.application.base",
            "hyssop.web.application.tornado",
            "hyssop.web.component",
            "hyssop.web.component.base",
            "hyssop.web.component.default",
            "hyssop.web.component.mixin",
            "hyssop.web.config_validator",
            "hyssop.web.constants",
            "hyssop.web.controller",
            "hyssop.web.controller.base",
            "hyssop.web.controller.tornado",
            "hyssop.web.controller.tornado.base_controller",
            "hyssop.web.controller.tornado.mixin",
            "hyssop.web.controller.tornado.unittest_controller",
            "hyssop.web.pack",
            "hyssop.web.server"
        ],
        "version": "1.0.1"
    },
    "hyssop-extension": {
        "cmdline": [],
        "modules": [
            "component",
            "component.orm",
            "component.orm.constants",
            "component.orm.entity",
            "component.orm.executor_pool",
            "component.orm.orm",
            "component.orm.utils",
            "unit_test",
            "unit_test.orm"
        ],
        "version": "1.0.1"
    },
    "hyst-flask": {
        "cmdline": [],
        "modules": [
            "hyst_flask",
            "hyst_flask.authenticator",
            "hyst_flask.decorator"
        ],
        "version": "0.0.29"
    },
    "hysteresis": {
        "cmdline": [],
        "modules": [
            "Hysteresis",
            "Hysteresis.data",
            "Hysteresis.hys"
        ],
        "version": "0.3.0"
    },
    "hystore": {
        "cmdline": [
            "hystorex"
        ],
        "modules": [
            "hystore",
            "hystore.contrib",
            "hystore.contrib.check_postcodes",
            "hystore.contrib.dataset_parameters",
            "hystore.contrib.diet_analysis",
            "hystore.contrib.export_diet_dataset",
            "hystore.contrib.other_symptoms",
            "hystore.contrib.supplement_paper_processing",
            "hystore.core",
            "hystore.core.data_schema",
            "hystore.core.dataset",
            "hystore.core.exporter",
            "hystore.core.fields",
            "hystore.core.filtered_field",
            "hystore.core.importer",
            "hystore.core.load_schema",
            "hystore.core.operations",
            "hystore.core.persistence",
            "hystore.core.readerwriter",
            "hystore.core.regression",
            "hystore.core.session",
            "hystore.core.split",
            "hystore.core.utils",
            "hystore.core.validation",
            "hystore.covidspecific",
            "hystore.covidspecific.geo_mismatches",
            "hystore.covidspecific.parsing_schemas",
            "hystore.covidspecific.pipeline",
            "hystore.covidspecific.postprocess",
            "hystore.covidspecific.process_tests",
            "hystore.covidspecific.utils",
            "hystore.covidspecific.validate",
            "hystore.processing",
            "hystore.processing.age_from_year_of_birth",
            "hystore.processing.analytics",
            "hystore.processing.assessment_merge",
            "hystore.processing.combined_healthcare_worker",
            "hystore.processing.consolidated_test_dates",
            "hystore.processing.convert_old_assessments",
            "hystore.processing.covid_test",
            "hystore.processing.effective_test_date",
            "hystore.processing.healthy_diet_index",
            "hystore.processing.inconsistent_symptoms",
            "hystore.processing.inconsistent_testing",
            "hystore.processing.method_paper_model",
            "hystore.processing.nat_medicine_model",
            "hystore.processing.numpy_buffer",
            "hystore.processing.temperature",
            "hystore.processing.test_type_from_mechanism",
            "hystore.processing.weight_height_bmi"
        ],
        "version": "0.2.7.3"
    },
    "hystrix-box": {
        "cmdline": [],
        "modules": [
            "HystrixBox",
            "HystrixBox.Decoders",
            "HystrixBox.Decoders.ASCIICipher",
            "HystrixBox.Decoders.Base64Cipher",
            "HystrixBox.Decoders.CaesarCipher",
            "HystrixBox.Decoders.Decoder",
            "HystrixBox.Decoders.HashCipher",
            "HystrixBox.Decoders.ReverseCipher",
            "HystrixBox.Decoders.T9Chipher",
            "HystrixBox.Evaluators",
            "HystrixBox.Evaluators.Evaluator",
            "HystrixBox.Evaluators.flag_check",
            "HystrixBox.Evaluators.letter_check",
            "HystrixBox.Evaluators.word_check",
            "HystrixBox.Extractors",
            "HystrixBox.Extractors.Extractor",
            "HystrixBox.Extractors.emailExtractor",
            "HystrixBox.Extractors.ipExtractor",
            "HystrixBox.Extractors.md5Extractor",
            "HystrixBox.Extractors.urlExtractor",
            "HystrixBox.Parsers",
            "HystrixBox.Tools",
            "HystrixBox.Tools.emailAnalyzer",
            "HystrixBox.Tools.fileType",
            "HystrixBox.Tools.fileType.applications",
            "HystrixBox.Tools.fileType.archives",
            "HystrixBox.Tools.fileType.audio",
            "HystrixBox.Tools.fileType.extenstion",
            "HystrixBox.Tools.fileType.extenstionDB",
            "HystrixBox.Tools.fileType.font",
            "HystrixBox.Tools.fileType.getFileExtenstion",
            "HystrixBox.Tools.fileType.images",
            "HystrixBox.Tools.fileType.video",
            "HystrixBox.Tools.hideInImage",
            "HystrixBox.Tools.recursiveDecompression",
            "HystrixBox.Tools.strings",
            "HystrixBox.Utils",
            "HystrixBox.Utils.searchFlag",
            "HystrixBox.evaluator",
            "HystrixBox.keys",
            "HystrixBox.menu",
            "HystrixBox.modules_parser",
            "HystrixBox.personal_parser",
            "tests",
            "tests.test_ASCIICipher",
            "tests.test_Base64Cipher",
            "tests.test_CaesarCipher",
            "tests.test_HashCipher",
            "tests.test_ReverseCipher",
            "tests.test_T9Chipher",
            "tests.test_emailAnalyzer",
            "tests.test_emailExtractor",
            "tests.test_getFileExtenstion",
            "tests.test_hideInImage",
            "tests.test_ipExtractor",
            "tests.test_md5Extractor",
            "tests.test_modules_parser",
            "tests.test_recursiveDecompression",
            "tests.test_searchFlag",
            "tests.test_strings",
            "tests.test_urlExtractor"
        ],
        "version": "0.2"
    },
    "hystrix-box6": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hytera": {
        "cmdline": [],
        "modules": [
            "example",
            "example.math"
        ],
        "version": "1.0.0"
    },
    "hytestlib": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "hytmf": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hytools": {
        "cmdline": [],
        "modules": [
            "hytools",
            "hytools.meg_utils",
            "hytools.vtc_utils"
        ],
        "version": "0.0.10"
    },
    "hytouch": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hytra": {
        "cmdline": [],
        "modules": [
            "hytra",
            "hytra.hypergraph",
            "hytra.transversal_tests",
            "hytra.transversals"
        ],
        "version": "0.0.3a1"
    },
    "hyuki-cvs-graph": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.7"
    },
    "hyvebrain": {
        "cmdline": [],
        "modules": [
            "Hyvebrain"
        ],
        "version": "1.0.6"
    },
    "hyvr": {
        "cmdline": [],
        "modules": [
            "hyvr",
            "hyvr.geo",
            "hyvr.geo.ae_types",
            "hyvr.geo.channel_utils",
            "hyvr.geo.contact_surface_utils",
            "hyvr.geo.model",
            "hyvr.geo.stratum",
            "hyvr.geo.trough_utils",
            "hyvr.input",
            "hyvr.input.option_parsing",
            "hyvr.input.options",
            "hyvr.input.options_deprecated",
            "hyvr.input.parameters",
            "hyvr.postprocess",
            "hyvr.postprocess.output",
            "hyvr.postprocess.plotting",
            "hyvr.sim",
            "hyvr.utils"
        ],
        "version": "1.1.0"
    },
    "hyzeeck-distributions": {
        "cmdline": [],
        "modules": [
            "hyzeeck_distributions",
            "hyzeeck_distributions.Binomialdistribution",
            "hyzeeck_distributions.Gaussiandistribution",
            "hyzeeck_distributions.Generaldistribution"
        ],
        "version": "0.1"
    },
    "hz-class": {
        "cmdline": [],
        "modules": [
            "hz_class"
        ],
        "version": "1.0.1"
    },
    "hz-nest-print": {
        "cmdline": [],
        "modules": [
            "hz_nest_print"
        ],
        "version": "1.0.0"
    },
    "hz-nester": {
        "cmdline": [],
        "modules": [
            "hz_nester"
        ],
        "version": "1.0.3"
    },
    "hz-redis-global": {
        "cmdline": [],
        "modules": [
            "ari_redis",
            "ari_redis.VirtualSlot",
            "ari_redis.globalredis"
        ],
        "version": "0.1"
    },
    "hzai": {
        "cmdline": [],
        "modules": [
            "hzai",
            "hzai.core",
            "hzai.envs",
            "hzai.envs.cube",
            "hzai.envs.puzzle",
            "hzai.envs.sokoban",
            "hzai.envs.tiles",
            "hzai.envs.utility",
            "hzai.rl",
            "hzai.rl.agent",
            "hzai.rl.callback",
            "hzai.rl.losses",
            "hzai.rl.memory",
            "hzai.rl.models",
            "hzai.rl.models.ddpg",
            "hzai.rl.models.dqn",
            "hzai.rl.networks",
            "hzai.rl.networks.ddpg",
            "hzai.rl.networks.dqn",
            "hzai.rl.policy",
            "hzai.rl.processor",
            "hzai.rl.random",
            "hzai.rl.utility",
            "hzai.sl",
            "hzai.sl.datasets",
            "hzai.sl.layers",
            "hzai.sl.losses",
            "hzai.sl.models",
            "hzai.sl.models.classifier",
            "hzai.sl.models.classifier.alexnet",
            "hzai.sl.models.classifier.resnet",
            "hzai.sl.models.classifier.vgg",
            "hzai.sl.models.detector",
            "hzai.sl.models.gan",
            "hzai.sl.models.gan.gan",
            "hzai.sl.models.gan.procgan",
            "hzai.sl.models.gan.progan",
            "hzai.sl.models.segmentator",
            "hzai.sl.models.segmentator.unet",
            "hzai.sl.networks",
            "hzai.sl.networks.classifier",
            "hzai.sl.networks.classifier.alexnet",
            "hzai.sl.networks.classifier.resnet",
            "hzai.sl.networks.classifier.vgg",
            "hzai.sl.networks.detector",
            "hzai.sl.networks.gan",
            "hzai.sl.networks.gan.gan",
            "hzai.sl.networks.gan.procgan",
            "hzai.sl.networks.gan.progan",
            "hzai.sl.networks.segmentator",
            "hzai.sl.networks.segmentator.unet",
            "hzai.sl.utility",
            "hzai.sl.weights",
            "hzai.utility"
        ],
        "version": "0.0.0.1"
    },
    "hzc-nester": {
        "cmdline": [],
        "modules": [
            "hzc_nester"
        ],
        "version": "1.3.0"
    },
    "hzf-lib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hzf-test": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hzh-nester-0518": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.3"
    },
    "hzpromise": {
        "cmdline": [],
        "modules": [
            "hzpromise",
            "hzpromise.examples",
            "hzpromise.hzpromise",
            "hzpromise.promise",
            "hzpromise.test_promise",
            "hzpromise.thenable"
        ],
        "version": "1.0.10"
    },
    "hzutils": {
        "cmdline": [],
        "modules": [
            "hzutils",
            "hzutils.alg",
            "hzutils.alg.search",
            "hzutils.alg.sort",
            "hzutils.ds",
            "hzutils.ds.caches",
            "hzutils.ds.dicts",
            "hzutils.ds.graphs",
            "hzutils.ds.heaps",
            "hzutils.ds.lists",
            "hzutils.ds.queues",
            "hzutils.ds.stacks",
            "hzutils.ds.trees",
            "hzutils.extension",
            "hzutils.func",
            "hzutils.func.decorator",
            "hzutils.func.function",
            "hzutils.func.iterator",
            "hzutils.geo",
            "hzutils.geo.polygon",
            "hzutils.geo.rectangle",
            "hzutils.geo.vector",
            "hzutils.hid",
            "hzutils.hid.image",
            "hzutils.hid.keyboard",
            "hzutils.hid.mouse",
            "hzutils.hid.window",
            "hzutils.mem",
            "hzutils.mem.address",
            "hzutils.mem.locator",
            "hzutils.mem.process",
            "hzutils.mem.utility",
            "hzutils.mem.worker",
            "hzutils.sys",
            "hzutils.sys.admin",
            "hzutils.sys.file",
            "hzutils.sys.folder",
            "hzutils.sys.path",
            "hzutils.sys.sys",
            "hzutils.test",
            "hzutils.test.core",
            "hzutils.test.magic",
            "hzutils.test.registry",
            "hzutils.test.stubs"
        ],
        "version": "0.0.0.1"
    }
}